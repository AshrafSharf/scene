{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/CSSMaterialBase.ts",
    "awayjs-display/lib/materials/CurveMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/CSSBillboardRenderable.ts",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable.ts",
    "awayjs-display/lib/pool/CSSRenderableBase.ts",
    "awayjs-display/lib/pool/CSSSkyboxRenderable.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/render/CSSDefaultRenderer.ts",
    "awayjs-display/lib/render/CSSRendererBase.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/animators/IAnimationSet",
    "module",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubMesh",
    "CurveSubGeometry",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "material",
    "_pParentMesh",
    "_subGeometry",
    "_iCollectRenderable",
    "rendererPool",
    "applyCurveSubMesh",
    "geometryType",
    "awayjs-core/lib/data/CurveSubGeometry",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "set",
    "value",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "clone",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "addEventListener",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scale",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "removeEventListener",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "_iTestCollision",
    "shortestCollisionDistance",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IMaterialOwner",
    "awayjs-display/lib/base/IRenderObjectOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubGeometry",
    "LineSubMesh",
    "applyLineSubMesh",
    "awayjs-core/lib/data/LineSubGeometry",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubGeometry",
    "TriangleSubMesh",
    "applyTriangleSubMesh",
    "awayjs-core/lib/data/TriangleSubGeometry",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "transform",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "invalidate",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_this",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "event",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "onLoadError",
    "_iAddParseErrorHandler",
    "onParseError",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "clear",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "indices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "thickness",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_animator",
    "SIZE_CHANGED",
    "testBillboardCollision",
    "_iCollectRenderables",
    "applyBillboard",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "applyLineSegment",
    "awayjs-display/lib/entities/Mesh",
    "Geometry",
    "GeometryEvent",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "BOUNDS_INVALID",
    "SUB_GEOMETRY_ADDED",
    "SUB_GEOMETRY_REMOVED",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "applyTransformation",
    "disposeWithAnimatorAndChildren",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "j",
    "subGeom",
    "boundingPositions",
    "numSubGeoms",
    "getBoundingPositions",
    "setEmpty",
    "box",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getSubMeshClass",
    "testMeshCollision",
    "_iInvalidateRenderableGeometries",
    "awayjs-core/lib/data/Geometry",
    "awayjs-core/lib/events/GeometryEvent",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "bottom",
    "front",
    "v2",
    "right",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renderObjects",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRenderObject",
    "invalidateRenderObject",
    "invalidatePasses",
    "_cubeMap",
    "format",
    "_iAddRenderObject",
    "renderObject",
    "_iRemoveRenderObject",
    "getRenderObject",
    "renderablePool",
    "getSkyboxRenderObject",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "removeSubGeometry",
    "positions",
    "curveData",
    "uvs",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "positions2",
    "curveData2",
    "curves",
    "uv_values",
    "kerning_value",
    "k",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "curve_sub_geom",
    "updateIndices",
    "updatePositions",
    "updateCurves",
    "updateUVs",
    "addSubGeometry",
    "subMeshes",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "id",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderableOwner",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderObjectOwner",
    "_renderObjectOwner",
    "RENDER_OBJECT_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapData",
    "BitmapTexture",
    "BasicMaterial",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapData",
    "createCheckeredBitmapData",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapData",
    "awayjs-core/lib/textures/BitmapTexture",
    "awayjs-display/lib/materials/BasicMaterial",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Texture2DBase",
    "MaterialBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "getMaterialRenderObject",
    "awayjs-core/lib/textures/Texture2DBase",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/CSSMaterialBase",
    "ImageTexture",
    "CSSMaterialBase",
    "_iMaterialId",
    "_imageElement",
    "_imageStyle",
    "_pTexture",
    "htmlImageElement",
    "node",
    "getElementsByTagName",
    "sheet",
    "styleSheets",
    "insertRule",
    "cssRules",
    "backgroundImage",
    "src",
    "backgroundSize",
    "transformOrigin",
    "_pHeight",
    "_pWidth",
    "_pNotifySizeChanged",
    "awayjs-core/lib/textures/ImageTexture",
    "awayjs-display/lib/materials/CurveMaterial",
    "CurveMaterial",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "ColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_colorTransform",
    "alphaMultiplier",
    "CHANGE",
    "_pInvalidatePasses",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "w",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "Rectangle",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "floor",
    "snap2",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "PartialImplementationError",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "RenderTexture",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-core/lib/textures/RenderTexture",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "pickingCollisionVO",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "RaycastCollector",
    "findClosestCollision",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_findClosestCollision",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "pickingCollider",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/CSSBillboardRenderable",
    "CSSRenderableBase",
    "CSSBillboardRenderable",
    "billboard",
    "div",
    "onmousedown",
    "img",
    "className",
    "awayjs-display/lib/pool/CSSRenderableBase",
    "awayjs-display/lib/pool/CSSLineSegmentRenderable",
    "CSSLineSegmentRenderable",
    "lineSegment",
    "invalidateIndexData",
    "invalidateVertexData",
    "dataType",
    "awayjs-display/lib/pool/CSSSkyboxRenderable",
    "CSSSkyboxRenderable",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderObject",
    "awayjs-display/lib/pool/IRenderablePool",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRendererPool",
    "registerSubMeshClass",
    "subMeshClass",
    "subMeshClassPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_numVertices",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "normals",
    "tangents",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGeometry",
    "numVertices",
    "vertexNormals",
    "vertexTangents",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "offset",
    "normLen",
    "tanLen",
    "updateVertexNormals",
    "updateVertexTangents",
    "_pBuildUVs",
    "scaleU",
    "scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "startPositions",
    "endPositions",
    "updateThickness",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "mesh",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "nx",
    "ny",
    "nz",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/render/CSSDefaultRenderer",
    "CoordinateSystem",
    "CSSRendererBase",
    "CSSEntityCollector",
    "CSSDefaultRenderer",
    "_contextMatrix",
    "_skyboxProjection",
    "_container",
    "overflow",
    "_context",
    "_contextStyle",
    "transformStyle",
    "_pBackBufferInvalid",
    "pUpdateBackBuffer",
    "pDraw",
    "coordinateSystem",
    "RIGHT_HANDED",
    "drawRenderables",
    "_renderableHead",
    "_activeMaterial",
    "clip",
    "drawSkybox",
    "renderSceneTransform",
    "awayjs-core/lib/projections/CoordinateSystem",
    "awayjs-display/lib/render/CSSRendererBase",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "renderToTexture",
    "forceSoftware",
    "profile",
    "_backgroundR",
    "_backgroundG",
    "_backgroundB",
    "_depthTextureInvalid",
    "_viewPort",
    "_scissorRect",
    "_localPos",
    "_globalPos",
    "window",
    "innerWidth",
    "innerHeight",
    "updateGlobalPos",
    "notifyViewportUpdate",
    "notifyScissorUpdate",
    "surfaceSelector",
    "pExecuteRender",
    "scissorRects",
    "cameras",
    "pCollectRenderables",
    "lineSubMesh",
    "triangleSubMesh",
    "_applyRenderable",
    "materialId",
    "cascaded",
    "_iEntryPoint",
    "zIndex",
    "zOffset",
    "dotProduct",
    "_pCameraForward",
    "_scissorUpdated",
    "_viewPortUpdated",
    "awayjs-display/lib/render/IRenderer",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderObjectId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "CollectorBase",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "bitmapData",
    "HTMLImageElement",
    "imageElement",
    "draw",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import CurveSubGeometry\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static geometryType:string = CurveSubGeometry.assetType;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyCurveSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic alpha:number;\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic name:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pBoxBounds;\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid) {\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\treturn point; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\treturn new Point(); //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static geometryType:string = LineSubGeometry.assetType;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyLineSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\n\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport IRendererPool\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static geometryType:string = TriangleSubGeometry.assetType;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyTriangleSubMesh(this);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tprivate _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = name;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\r\n\t\treturn child;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:LoaderEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a BitmapData object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its BitmapData reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same BitmapData object,\r\n * multiple display objects can use the same complex BitmapData object without\r\n * incurring the memory overhead of a BitmapData object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The BitmapData object being referenced.\r\n\t */\r\n\tpublic bitmapData:BitmapData; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardWidth;\r\n\t\tthis._pBoxBounds.height = this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyBillboard(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:CubeTextureBase;\r\n\tprivate _specularMap:CubeTextureBase;\r\n\r\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:CubeTextureBase)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tthis._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\t\trendererPool.applyLineSegment(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-core/lib/events/GeometryEvent\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\r\n\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone._iMasks = this._iMasks;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tlen = this.numChildren;\r\n\t\tvar obj:any;\r\n\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tobj = this.getChildAt(i).clone();\r\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tclone.animator = this._animator.clone();\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Array<number>;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getSubMeshClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\tthis._subMeshes[i]._iCollectRenderable(rendererPool);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport IRendererPool\t\t\t\t= require(\"awayjs-display/lib/pool/IRendererPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderObjectOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:CubeTextureBase;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\t\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\tpublic _pInvalidateRenderObject()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():CubeTextureBase\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:CubeTextureBase)\r\n\t{\r\n\t\tif (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\t\tthis._pInvalidateRenderObject();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:CubeTextureBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renderObjects.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].dispose();\r\n\r\n\t\tthis._renderObjects = new Array<IRenderObject>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _iCollectRenderables(rendererPool:IRendererPool)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iCollectRenderable(rendererPool:IRendererPool)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.push(renderObject);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool)\r\n\t{\r\n\t\treturn renderablePool.getSkyboxRenderObject(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\t/**\r\n\t * The height of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._textFormat==null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this._text==\"\"){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar indices:Array<number> = new Array<number>();\r\n\t\tvar positions:Array<number> = new Array<number>();\r\n\t\tvar curveData:Array<number> = new Array<number>();\r\n\t\tvar uvs:Array<number> = new Array<number>();\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar tri_idx_offset:number=0;\r\n\t\tvar tri_cnt:number=0;\r\n\t\tvar x_offset:number=0;\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tfor (var i = 0; i < this.text.length; i++) {\r\n\r\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\r\n\t\t\tif(this_char!= null) {\r\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\ttri_cnt = 0;\r\n\t\t\t\t\tvar indices2:Array<number> = this_subGeom.indices;\r\n\t\t\t\t\tvar positions2:Array<number> = this_subGeom.positions;\r\n\t\t\t\t\tvar curveData2:Array<number> = this_subGeom.curves;\r\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\r\n\t\t\t\t\t\tindices.push(indices2[v] + tri_idx_offset);\r\n\t\t\t\t\t\ttri_cnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttri_idx_offset += tri_cnt;\r\n\t\t\t\t\tfor (v = 0; v < positions2.length / 3; v++) {\r\n\t\t\t\t\t\tpositions.push((positions2[v * 3] * char_scale) + x_offset);\r\n\t\t\t\t\t\tpositions.push((positions2[v * 3 + 1] * char_scale * -1) + y_offset);\r\n\t\t\t\t\t\tpositions.push(positions2[v * 3 + 2]);\r\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2]);\r\n\t\t\t\t\t\tcurveData.push(curveData2[v * 2 + 1]);\r\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[0]);\r\n\t\t\t\t\t\tuvs.push(this._textFormat.uv_values[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\tvar kerning_value:number=0;\r\n\t\t\t\t\tif(prev_char!=null){\r\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\r\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\r\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(true);\r\n\t\tcurve_sub_geom.updateIndices(indices);\r\n\t\tcurve_sub_geom.updatePositions(positions);\r\n\t\tcurve_sub_geom.updateCurves(curveData);\r\n\t\tcurve_sub_geom.updateUVs(uvs);\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OBJECT_OWNER_UPDATED:string = \"renderObjectOwnerUpdated\";\r\n\r\n\tprivate _renderObjectOwner:IRenderObjectOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderObjectOwner:IRenderObjectOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderObjectOwner = renderObjectOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderObjectOwner():IRenderObjectOwner\r\n\t{\r\n\t\treturn this._renderObjectOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderObjectOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\r\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapData:BitmapData;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:BitmapTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):BitmapTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\r\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapData():BitmapData\r\n\t{\r\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event:MouseEvent)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = event.clientX;\r\n\t\tvar mouseY:number = event.clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase implements IRenderObjectOwner\r\n{\r\n    private _preserveAlpha:boolean = false;\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Texture2DBase) {\r\n\t\t\tthis.texture = <Texture2DBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRenderObject();\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\treturn renderablePool.getMaterialRenderObject(this);\r\n\t}\r\n}\r\n\r\nexport = BasicMaterial;",
    "import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass CSSMaterialBase extends MaterialBase\r\n{\r\n\tprivate _imageElement:HTMLImageElement;\r\n\tprivate _imageStyle:MSStyleCSSProperties;\r\n\r\n\r\n\tpublic get imageElement():HTMLImageElement\r\n\t{\r\n\t\treturn this._imageElement;\r\n\t}\r\n\r\n\tpublic get imageStyle():MSStyleCSSProperties\r\n\t{\r\n\t\treturn this._imageStyle;\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tif (value instanceof ImageTexture) {\r\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\r\n\r\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\r\n\t\t\tnode.type = \"text/css\";\r\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\r\n\r\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\r\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\r\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\r\n\r\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\r\n\t\t\tstyle.backgroundSize = \"100% 100%\";\r\n\t\t\tstyle.position = \"absolute\";\r\n\t\t\tstyle.width = this._imageElement.width + \"px\";\r\n\t\t\tstyle.height = this._imageElement.height + \"px\";\r\n\t\t\tstyle.transformOrigin\r\n\t\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\t\tthis._pHeight = this._imageElement.height;\r\n\t\t\tthis._pWidth = this._imageElement.width;\r\n\r\n\t\t\tthis._pNotifySizeChanged();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis.texture = texture;\r\n\r\n\t\tthis.smooth = smooth;\r\n\t\tthis.repeat = repeat;\r\n\t}\r\n}\r\n\r\nexport = CSSMaterialBase;",
    "import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass CurveMaterial extends MaterialBase implements IRenderObjectOwner\r\n{\r\n    private _preserveAlpha:boolean = false;\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Texture2DBase) {\r\n\t\t\tthis.texture = <Texture2DBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRenderObject();\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\treturn renderablePool.getMaterialRenderObject(this);\r\n\t}\r\n}\r\n\r\nexport = CurveMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderObjectOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderObjectOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderObject\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderObject\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderObjectOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Material]\";\r\n\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renderObjects:Array<IRenderObject> = new Array<IRenderObject>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:Texture2DBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn MaterialBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():Texture2DBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:Texture2DBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tthis._pHeight = this._pTexture.height;\r\n\t\tthis._pWidth = this._pTexture.width;\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renderObjects.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].dispose();\r\n\r\n\t\tthis._renderObjects = new Array<IRenderObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OBJECT_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRenderObject()\r\n\t{\r\n\t\tvar len:number = this._renderObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderObjects[i].invalidateRenderObject();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRenderObject();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.push(renderObject);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\tpublic _iRemoveRenderObject(renderObject:IRenderObject):IRenderObject\r\n\t{\r\n\t\tthis._renderObjects.splice(this._renderObjects.indexOf(renderObject), 1);\r\n\r\n\t\treturn renderObject;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic getRenderObject(renderablePool:IRenderablePool):IRenderObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new PartialImplementationError();\r\n\t\t/*\r\n\t\t return new RenderCubeTexture( this._depthMapSize );\r\n\t\t */\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tprivate _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tprivate _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSBillboardRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"billboard\";\r\n\r\n\tconstructor(pool:IRenderablePool, billboard:Billboard)\r\n\t{\r\n\t\tsuper(pool, billboard, billboard);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + billboard.material.id;\r\n\t}\r\n}\r\n\r\nexport = CSSBillboardRenderable;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSLineSegmentRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"lineSegment\";\r\n\r\n\tconstructor(pool:IRenderablePool, lineSegment:LineSegment)\r\n\t{\r\n\t\tsuper(pool, lineSegment, lineSegment);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + lineSegment.material.id;\r\n\t}\r\n}\r\n\r\nexport = CSSLineSegmentRenderable;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.RenderableListItem\r\n */\r\nclass CSSRenderableBase implements IRenderable\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _pool:IRenderablePool;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:CSSRenderableBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic materialId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderOrderId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zIndex:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic cascaded:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderSceneTransform:Matrix3D;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic sourceEntity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderObjectId:number;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic htmlElement:HTMLElement;\r\n\r\n\t/**\r\n\t *\r\n\t * @param sourceEntity\r\n\t * @param material\r\n\t * @param animator\r\n\t */\r\n\tconstructor(pool:IRenderablePool, sourceEntity:IEntity, renderableOwner:IRenderableOwner)\r\n\t{\r\n\t\t//store a reference to the pool for later disposal\r\n\t\tthis._pool = pool;\r\n\r\n\t\tthis.sourceEntity = sourceEntity;\r\n\r\n\t\tthis.renderableOwner = renderableOwner;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.disposeItem(this.renderableOwner);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateGeometry()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateIndexData()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateVertexData(dataType:string)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = CSSRenderableBase;",
    "import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n\r\n/**\r\n * @class away.pool.CSSSkyboxRenderable\r\n */\r\nclass CSSSkyboxRenderable extends CSSRenderableBase\r\n{\r\n\tpublic static id:string = \"skybox\";\r\n\r\n\tconstructor(pool:IRenderablePool, skyBox:Skybox)\r\n\t{\r\n\t\tsuper(pool, skyBox, skyBox);\r\n\r\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\r\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\r\n\r\n\t\tthis.htmlElement = div;\r\n\r\n\t\tvar style:MSStyleCSSProperties = div.style;\r\n\t\tvar img:HTMLDivElement;\r\n\r\n\t\t//create the six images that make up the skybox\r\n\t\tstyle.position = \"absolute\";\r\n\t\tstyle.transformOrigin\r\n\t\t\t= style[\"-webkit-transform-origin\"]\r\n\t\t\t= style[\"-moz-transform-origin\"]\r\n\t\t\t= style[\"-o-transform-origin\"]\r\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\r\n\r\n\t\tdiv.appendChild(img);\r\n\r\n\t\timg.className = \"material\" + skyBox.id;\r\n\t}\r\n}\r\n\r\nexport = CSSSkyboxRenderable;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static subMeshClassPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerSubMeshClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.subMeshClassPool[subMeshClass.geometryType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getSubMeshClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.subMeshClassPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tpublic static main = SubMeshPool.addDefaults();\r\n\r\n\tpublic static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerSubMeshClass(LineSubMesh);\r\n\t\tSubMeshPool.registerSubMeshClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerSubMeshClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = -hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tstartPositions[vidx + 1] = -hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tendPositions[vidx + 1] = -hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = hh;\r\n\t\t\t\tstartPositions[vidx + 2] = -hd;\r\n\r\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tendPositions[vidx + 1] = hh;\r\n\t\t\t\tendPositions[vidx + 2] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//horizonal lines\r\n\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Array<number>;\r\n\t\t\tvar normals:Array<number>;\r\n\t\t\tvar tangents:Array<number>;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tstartPositions[vidx] = -hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tendPositions[vidx] = hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tstartPositions[vidx + 1] = 0;\r\n\t\t\t\tstartPositions[vidx + 2] = -hh;\r\n\r\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\r\n\t\t\t\tendPositions[vidx + 1] = 0;\r\n\t\t\t\tendPositions[vidx + 2] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tvidx += 3;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Array<number>;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import Geometry\t\t\t\t\t= require(\"awayjs-core/lib/data/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-core/lib/data/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Array<number>(numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\r\n\t\t\tvar startPositions:Array<number>;\r\n\t\t\tvar endPositions:Array<number>;\r\n\t\t\tvar thickness:Array<number>;\r\n\r\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\r\n\t\t\t\tstartPositions = lineGeometry.startPositions;\r\n\t\t\t\tendPositions = lineGeometry.endPositions;\r\n\t\t\t\tthickness = lineGeometry.thickness;\r\n\t\t\t} else {\r\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\r\n\t\t\t\tthickness = new Array<number>(numSegments);\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tif (j < this._segmentsH) {\r\n\t\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\r\n\r\n\t\t\t\t\t\tendPositions[vidx] = x;\r\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\r\n\t\t\t\t\t\tstartPositions[vidx] = x;\r\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\r\n\t\t\tlineGeometry.updateThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-core/lib/data/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Array<number> /*uint*/;\r\n\t\tvar positions:Array<number>;\r\n\t\tvar normals:Array<number>;\r\n\t\tvar tangents:Array<number>;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices;\r\n\t\t\t\tpositions = triangleGeometry.positions;\r\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\r\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Array<number>(numIndices)\r\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\r\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\r\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.updatePositions(positions);\r\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\r\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Array<number>;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs;\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.updateUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\r\n\r\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\r\n\r\n\r\n/**\r\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\r\n * materials assigned to them.\r\n *\r\n * @class away.render.DefaultRenderer\r\n */\r\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\r\n{\r\n\tprivate _container:HTMLDivElement;\r\n\tprivate _context:HTMLDivElement;\r\n\tprivate _contextStyle:MSStyleCSSProperties;\r\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\r\n\t\r\n\tprivate _activeMaterial:CSSMaterialBase;\r\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\r\n\tprivate _transform:Matrix3D = new Matrix3D();\r\n\r\n\t/**\r\n\t * Creates a new CSSDefaultRenderer object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//create container for the renderer\r\n\t\tthis._container = document.createElement(\"div\");\r\n\t\tthis._container.style.overflow = \"hidden\";\r\n\t\tthis._container.style.position = \"absolute\";\r\n\t\t\r\n\t\t//add container to body\r\n\t\tdocument.body.appendChild(this._container);\r\n\r\n\t\t//create conxtext for the renderer\r\n\t\tthis._context = document.createElement(\"div\");\r\n\t\tthis._contextStyle = this._context.style;\r\n\t\tthis._contextStyle.position = \"absolute\";\r\n\t\tthis._contextStyle.transformStyle\r\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\r\n\t\tthis._contextStyle.transformOrigin\r\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\r\n\r\n\t\t//add context to container\r\n\t\tthis._container.appendChild(this._context);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entityCollector\r\n\t */\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tsuper.render(entityCollector);\r\n\r\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\r\n\t\t\tthis.pUpdateBackBuffer();\r\n\r\n\t\tthis._iRender(<EntityCollector> entityCollector);\r\n\r\n\t\tthis._pBackBufferInvalid = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic pDraw(entityCollector:EntityCollector)\r\n\t{\r\n//\t\t\tif (entityCollector.skyBox) {\r\n//\t\t\t\tif (this._activeMaterial)\r\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\r\n//\r\n//\t\t\t\tthis._activeMaterial = null;\r\n//\r\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\r\n//\t\t\t\tthis.drawSkybox(entityCollector);\r\n//\r\n//\t\t\t}\r\n//\r\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\r\n\r\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\r\n\r\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\r\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\r\n\t\t\tstyle.transform\r\n\t\t\t\t= style[\"-webkit-transform\"]\r\n\t\t\t\t= style[\"-moz-transform\"]\r\n\t\t\t\t= style[\"-o-transform\"]\r\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\r\n\t\t}\r\n\r\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\r\n\r\n//\t\t\tif (this._activeMaterial)\r\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\r\n\r\n\t\tthis._activeMaterial = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the backbuffer properties.\r\n\t */\r\n\tpublic pUpdateBackBuffer()\r\n\t{\r\n\t\tthis._container.style.width = this._width + \"px\";\r\n\t\tthis._container.style.height = this._height + \"px\";\r\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\r\n\r\n\t\t//update context matrix\r\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\r\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\r\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\r\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\r\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\r\n\r\n\t\t//update context tranform\r\n\t\tthis._contextStyle.transform\r\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\r\n\t\t\t= this._contextStyle[\"-moz-transform\"]\r\n\t\t\t= this._contextStyle[\"-o-transform\"]\r\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\r\n\r\n\t\tthis._pBackBufferInvalid = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Draw the skybox if present.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a list of renderables.\r\n\t * @param renderables The renderables to draw.\r\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\r\n\t */\r\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\r\n\t{\r\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\r\n\r\n\t\twhile (item) {\r\n\t\t\t//this._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\r\n\r\n\t\t\t//serialise transform and apply to html element\r\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\r\n\t\t\tthis._transform.append(viewProjection);\r\n\r\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\r\n\r\n\t\t\tstyle.transform\r\n\t\t\t\t= style[\"-webkit-transform\"]\r\n\t\t\t\t= style[\"-moz-transform\"]\r\n\t\t\t\t= style[\"-o-transform\"]\r\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\r\n\r\n\t\t\tstyle.transformStyle\r\n\t\t\t\t= style[\"-webkit-transform-style\"]\r\n\t\t\t\t= style[\"-moz-transform-style\"]\r\n\t\t\t\t= style[\"-o-transform-style\"]\r\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\r\n\r\n\t\t\t//check if child requires adding to the view\r\n\t\t\tif (!this._context.contains(item.htmlElement))\r\n\t\t\t\tthis._context.appendChild(item.htmlElement);\r\n\r\n\t\t\titem = item.next;\r\n\t\t}\r\n\r\n//\t\t\tvar numPasses:number;\r\n//\t\t\tvar j:number;\r\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\r\n//\t\t\tvar item2:away.render.CSSRenderableBase;\r\n//\r\n//\t\t\twhile (item) {\r\n//\t\t\t\tthis._activeMaterial = item.material;\r\n//\r\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\r\n//\r\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\r\n//\r\n//\t\t\t\tj = 0;\r\n//\r\n//\t\t\t\tdo {\r\n//\t\t\t\t\titem2 = item;\r\n//\r\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\r\n//\r\n//\t\t\t\t\tif ((rttMask & which) != 0) {\r\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\r\n//\r\n//\t\t\t\t\t\tdo {\r\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\r\n//\r\n//\t\t\t\t\t\t\titem2 = item2.next;\r\n//\r\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\r\n//\r\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\r\n//\r\n//\t\t\t\t\t} else {\r\n//\t\t\t\t\t\tdo {\r\n//\t\t\t\t\t\t\titem2 = item2.next;\r\n//\r\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\r\n//\t\t\t\t\t}\r\n//\t\t\t\t} while (++j < numPasses);\r\n//\r\n//\t\t\t\titem = item2;\r\n//\t\t\t}\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn new CSSEntityCollector();\r\n\t}\r\n}\r\n\r\nexport = CSSDefaultRenderer;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\r\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\r\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport IRenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderablePool\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-core/lib/textures/TextureBase\");\r\n\r\n/**\r\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\r\n * contents of a partition\r\n *\r\n * @class away.render.RendererBase\r\n */\r\nclass CSSRendererBase extends EventDispatcher\r\n{\r\n\tprivate _billboardRenderablePool:IRenderablePool;\r\n\tprivate _lineSegmentRenderablePool:IRenderablePool;\r\n\r\n\tpublic _pCamera:Camera;\r\n\tpublic _iEntryPoint:Vector3D;\r\n\tpublic _pCameraForward:Vector3D;\r\n\r\n\tprivate _backgroundR:number = 0;\r\n\tprivate _backgroundG:number = 0;\r\n\tprivate _backgroundB:number = 0;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\tprivate _shareContext:boolean = false;\r\n\r\n\tpublic _pBackBufferInvalid:boolean = true;\r\n\tpublic _depthTextureInvalid:boolean = true;\r\n\r\n\tpublic _renderableHead:CSSRenderableBase;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\r\n\tprivate _viewPort:Rectangle = new Rectangle();\r\n\tprivate _viewportDirty:boolean;\r\n\tprivate _scissorRect:Rectangle = new Rectangle();\r\n\tprivate _scissorDirty:boolean;\r\n\r\n\tprivate _localPos:Point = new Point();\r\n\tprivate _globalPos:Point = new Point();\r\n\r\n\tprivate _scissorUpdated:RendererEvent;\r\n\tprivate _viewPortUpdated:RendererEvent;\r\n\r\n\t/**\r\n\t * A viewPort rectangle equivalent of the StageGL size and position.\r\n\t */\r\n\tpublic get viewPort():Rectangle\r\n\t{\r\n\t\treturn this._viewPort;\r\n\t}\r\n\r\n\t/**\r\n\t * A scissor rectangle equivalent of the view size and position.\r\n\t */\r\n\tpublic get scissorRect():Rectangle\r\n\t{\r\n\t\treturn this._scissorRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._localPos.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._localPos.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._globalPos.y = this._localPos.y = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._scissorRect.width = value;\r\n\t\tthis._viewPort.width = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._depthTextureInvalid = true;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._scissorRect.height = value;\r\n\t\tthis._viewPort.height = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t\tthis._depthTextureInvalid = true;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic renderableSorter:IEntitySorter;\r\n\r\n\t/**\r\n\t * Creates a new RendererBase object.\r\n\t */\r\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//this._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\r\n\t\t//this._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\r\n\r\n\t\tthis._viewPort = new Rectangle();\r\n\r\n\t\tif (this._width == 0)\r\n\t\t\tthis.width = window.innerWidth;\r\n\r\n\t\tif (this._height == 0)\r\n\t\t\tthis.height = window.innerHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's red component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundR():number\r\n\t{\r\n\t\treturn this._backgroundR;\r\n\t}\r\n\r\n\tpublic set _iBackgroundR(value:number)\r\n\t{\r\n\t\tif (this._backgroundR == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundR = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's green component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundG():number\r\n\t{\r\n\t\treturn this._backgroundG;\r\n\t}\r\n\r\n\tpublic set _iBackgroundG(value:number)\r\n\t{\r\n\t\tif (this._backgroundG == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundG = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t * The background color's blue component, used when clearing.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get _iBackgroundB():number\r\n\t{\r\n\t\treturn this._backgroundB;\r\n\t}\r\n\r\n\tpublic set _iBackgroundB(value:number)\r\n\t{\r\n\t\tif (this._backgroundB == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundB = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tthis.updateGlobalPos();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the resources used by the RendererBase.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\t/*\r\n\t\t if (_backgroundImageRenderer) {\r\n\t\t _backgroundImageRenderer.dispose();\r\n\t\t _backgroundImageRenderer = null;\r\n\t\t }\r\n\t\t */\r\n\t}\r\n\r\n\tpublic render(entityCollector:CollectorBase)\r\n\t{\r\n\t\tthis._viewportDirty = false;\r\n\t\tthis._scissorDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param scissorRect\r\n\t */\r\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\r\n\t{\r\n\t\tif (!entityCollector.entityHead)\r\n\t\t\treturn;\r\n\r\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\r\n\t}\r\n\r\n\tpublic _iRenderCascades(entityCollector:CollectorBase, target:TextureBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\r\n\t{\r\n\r\n\t}\r\n\tpublic pCollectRenderables(entityCollector:CollectorBase)\r\n\t{\r\n\t\t////reset head values\r\n\t\t//this._renderableHead = null;\r\n\t\t//\r\n\t\t////grab entity head\r\n\t\t//var item:EntityListItem = entityCollector.entityHead;\r\n\t\t//\r\n\t\t////set temp values for entry point and camera forward vector\r\n\t\t//this._pCamera = entityCollector.camera;\r\n\t\t//this._iEntryPoint = this._pCamera.scenePosition;\r\n\t\t//this._pCameraForward = this._pCamera.transform.forwardVector;\r\n\t\t//\r\n\t\t////iterate through all entities\r\n\t\t//while (item) {\r\n\t\t//\t//item.entity._iCollectRenderables(this);\r\n\t\t//\titem = item.next;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\r\n\t * @param scissorRect\r\n\t */\r\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\r\n\t{\r\n\t\tthis.pCollectRenderables(entityCollector);\r\n\r\n\t\tthis.pDraw(entityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t * Performs the actual drawing of dom objects to the target.\r\n\t *\r\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\r\n\t */\r\n\tpublic pDraw(entityCollector:CSSEntityCollector)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get _iBackgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\tpublic set _iBackgroundAlpha(value:number)\r\n\t{\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundAlpha = value;\r\n\r\n\t\tthis._pBackBufferInvalid = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param billboard\r\n\t */\r\n\tpublic applyBillboard(billboard:Billboard)\r\n\t{\r\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param lineSubMesh\r\n\t */\r\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\r\n\t{\r\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param skybox\r\n\t */\r\n\tpublic applySkybox(skybox:Skybox)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param triangleSubMesh\r\n\t */\r\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderable\r\n\t * @private\r\n\t */\r\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\r\n\t{\r\n\t\tvar material:CSSMaterialBase;// = <CSSMaterialBase> renderable.renderableOwner.material;\r\n\t\tvar entity:IEntity = renderable.sourceEntity;\r\n\t\tvar position:Vector3D = entity.scenePosition;\r\n\r\n\t\tif (material) {\r\n\t\t\t//set ids for faster referencing\r\n\t\t\trenderable.materialId = material._iMaterialId;\r\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\r\n\t\t\trenderable.cascaded = false;\r\n\r\n\t\t\t// project onto camera's z-axis\r\n\t\t\tposition = this._iEntryPoint.subtract(position);\r\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\r\n\r\n\t\t\t//store reference to scene transform\r\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\r\n\r\n\t\t\t//store reference to next item in list\r\n\t\t\trenderable.next = this._renderableHead;\r\n\t\t\tthis._renderableHead = renderable;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScissorUpdate()\r\n\t{\r\n\t\tif (this._scissorDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scissorDirty = true;\r\n\r\n\t\tif (!this._scissorUpdated)\r\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._scissorUpdated);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyViewportUpdate()\r\n\t{\r\n\t\tif (this._viewportDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._viewportDirty = true;\r\n\r\n\t\tif (!this._viewPortUpdated)\r\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\r\n\r\n\t\tthis.dispatchEvent(this._viewPortUpdated);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic updateGlobalPos()\r\n\t{\r\n\t\tthis._viewPort.x = this._globalPos.x;\r\n\t\tthis._viewPort.y = this._globalPos.y;\r\n\r\n\t\tthis.notifyViewportUpdate();\r\n\t\tthis.notifyScissorUpdate();\r\n\t}\r\n\r\n\r\n\tpublic _iCreateEntityCollector():CollectorBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = CSSRendererBase;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderObjectId;\r\n\t\t\t\tvar mb:number = headB.renderObjectId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Array<number> = this.subgeom.positions;\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t\t\t= require(\"awayjs-core/lib/data/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t\t\t= require(\"awayjs-core/lib/data/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import BitmapData\t\t\t\t= require(\"awayjs-core/lib/data/BitmapData\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\r\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static bitmapData(data:any):BitmapData\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof BitmapData)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof ImageTexture)\r\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\r\n\r\n\t\tif (data instanceof HTMLImageElement) {\r\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\r\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\r\n\t\t\tbitmapData.draw(imageElement)\r\n\t\t\treturn bitmapData;\r\n\t\t}\r\n\r\n\t\t//            if (data is DisplayObject) {\r\n\t\t//                var ds:DisplayObject = data as DisplayObject;\r\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\r\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\r\n\t\t//                mat.tx = 0;\r\n\t\t//                mat.ty = 0;\r\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\r\n\t\t//                return bmd;\r\n\t\t//            }\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):BitmapTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof BitmapTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\r\n\t\t\treturn new BitmapTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;"
  ],
  "sourceRoot": ""
}
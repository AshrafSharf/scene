{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-display.js","awayjs-display/lib/animators/nodes/AnimationNodeBase.ts","awayjs-display/lib/base/AlignmentMode.ts","awayjs-display/lib/base/BlendMode.ts","awayjs-display/lib/base/CapsStyle.ts","awayjs-display/lib/base/DisplayObject.ts","awayjs-display/lib/base/Geometry.ts","awayjs-display/lib/base/GradientType.ts","awayjs-display/lib/base/GraphicsPathWinding.ts","awayjs-display/lib/base/Graphics.ts","awayjs-display/lib/base/InterpolationMethod.ts","awayjs-display/lib/base/JointStyle.ts","awayjs-display/lib/base/LightBase.ts","awayjs-display/lib/base/LineScaleMode.ts","awayjs-display/lib/base/LineSubGeometry.ts","awayjs-display/lib/base/LineSubMesh.ts","awayjs-display/lib/base/LoaderInfo.ts","awayjs-display/lib/base/OrientationMode.ts","awayjs-display/lib/base/PixelSnapping.ts","awayjs-display/lib/base/SpreadMethod.ts","awayjs-display/lib/base/SubGeometryBase.ts","awayjs-display/lib/base/SubMeshBase.ts","awayjs-display/lib/base/Transform.ts","awayjs-display/lib/base/TriangleCulling.ts","awayjs-display/lib/base/TriangleSubGeometry.ts","awayjs-display/lib/base/TriangleSubMesh.ts","awayjs-display/lib/containers/DisplayObjectContainer.ts","awayjs-display/lib/containers/Loader.ts","awayjs-display/lib/containers/Scene.ts","awayjs-display/lib/containers/View.ts","awayjs-display/lib/controllers/ControllerBase.ts","awayjs-display/lib/controllers/FirstPersonController.ts","awayjs-display/lib/controllers/FollowController.ts","awayjs-display/lib/controllers/HoverController.ts","awayjs-display/lib/controllers/LookAtController.ts","awayjs-display/lib/controllers/SpringController.ts","awayjs-display/lib/display/ContextMode.ts","awayjs-display/lib/entities/Billboard.ts","awayjs-display/lib/entities/Camera.ts","awayjs-display/lib/entities/DirectionalLight.ts","awayjs-display/lib/entities/LightProbe.ts","awayjs-display/lib/entities/LineSegment.ts","awayjs-display/lib/entities/Mesh.ts","awayjs-display/lib/entities/PointLight.ts","awayjs-display/lib/entities/Shape.ts","awayjs-display/lib/entities/Skybox.ts","awayjs-display/lib/entities/TextField.ts","awayjs-display/lib/entities/TimeLine.ts","awayjs-display/lib/entities/timelinedata/CommandPropsBase.ts","awayjs-display/lib/entities/timelinedata/CommandPropsDisplayObject.ts","awayjs-display/lib/entities/timelinedata/FrameCommand.ts","awayjs-display/lib/entities/timelinedata/InterpolationObject.ts","awayjs-display/lib/entities/timelinedata/TimeLineFrame.ts","awayjs-display/lib/entities/timelinedata/TimeLineObject.ts","awayjs-display/lib/errors/CastError.ts","awayjs-display/lib/events/CameraEvent.ts","awayjs-display/lib/events/DisplayObjectEvent.ts","awayjs-display/lib/events/GeometryEvent.ts","awayjs-display/lib/events/LightEvent.ts","awayjs-display/lib/events/MaterialEvent.ts","awayjs-display/lib/events/MouseEvent.ts","awayjs-display/lib/events/RendererEvent.ts","awayjs-display/lib/events/ResizeEvent.ts","awayjs-display/lib/events/SceneEvent.ts","awayjs-display/lib/events/StageEvent.ts","awayjs-display/lib/events/SubGeometryEvent.ts","awayjs-display/lib/managers/MouseManager.ts","awayjs-display/lib/materials/CSSMaterialBase.ts","awayjs-display/lib/materials/LightSources.ts","awayjs-display/lib/materials/MaterialBase.ts","awayjs-display/lib/materials/lightpickers/LightPickerBase.ts","awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts","awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts","awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts","awayjs-display/lib/partition/CameraNode.ts","awayjs-display/lib/partition/DirectionalLightNode.ts","awayjs-display/lib/partition/EntityNode.ts","awayjs-display/lib/partition/LightProbeNode.ts","awayjs-display/lib/partition/NodeBase.ts","awayjs-display/lib/partition/NullNode.ts","awayjs-display/lib/partition/Partition.ts","awayjs-display/lib/partition/PointLightNode.ts","awayjs-display/lib/partition/SkyboxNode.ts","awayjs-display/lib/pick/PickingCollisionVO.ts","awayjs-display/lib/pick/RaycastPicker.ts","awayjs-display/lib/pool/CSSBillboardRenderable.ts","awayjs-display/lib/pool/CSSLineSegmentRenderable.ts","awayjs-display/lib/pool/CSSRenderableBase.ts","awayjs-display/lib/pool/CSSSkyboxRenderable.ts","awayjs-display/lib/pool/EntityListItemPool.ts","awayjs-display/lib/pool/EntityListItem.ts","awayjs-display/lib/pool/RenderablePool.ts","awayjs-display/lib/prefabs/PrefabBase.ts","awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts","awayjs-display/lib/prefabs/PrimitiveConePrefab.ts","awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts","awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts","awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts","awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts","awayjs-display/lib/prefabs/PrimitivePrefabBase.ts","awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts","awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts","awayjs-display/lib/render/CSSDefaultRenderer.ts","awayjs-display/lib/render/CSSRendererBase.ts","awayjs-display/lib/sort/RenderableMergeSort.ts","awayjs-display/lib/text/AntiAliasType.ts","awayjs-display/lib/text/GridFitType.ts","awayjs-display/lib/text/TextFieldAutoSize.ts","awayjs-display/lib/text/TextFieldType.ts","awayjs-display/lib/text/TextFormatAlign.ts","awayjs-display/lib/text/TextFormat.ts","awayjs-display/lib/text/TextInteractionMode.ts","awayjs-display/lib/text/TextLineMetrics.ts","awayjs-display/lib/traverse/CSSEntityCollector.ts","awayjs-display/lib/traverse/CollectorBase.ts","awayjs-display/lib/traverse/EntityCollector.ts","awayjs-display/lib/traverse/RaycastCollector.ts","awayjs-display/lib/traverse/ShadowCasterCollector.ts","awayjs-display/lib/utils/Cast.ts"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","awayjs-display/lib/animators/IAnimationSet","module","awayjs-display/lib/animators/IAnimator","awayjs-display/lib/animators/nodes/AnimationNodeBase","__extends","this","d","b","p","hasOwnProperty","__","constructor","prototype","AssetType","NamedAssetBase","AnimationNodeBase","_super","Object","defineProperty","get","_pStateClass","enumerable","configurable","dispose","ANIMATION_NODE","awayjs-core/lib/library/AssetType","undefined","awayjs-core/lib/library/NamedAssetBase","awayjs-display/lib/base/AlignmentMode","AlignmentMode","REGISTRATION_POINT","PIVOT_POINT","awayjs-display/lib/base/BlendMode","BlendMode","ADD","ALPHA","DARKEN","DIFFERENCE","ERASE","HARDLIGHT","INVERT","LAYER","LIGHTEN","MULTIPLY","NORMAL","OVERLAY","SCREEN","SHADER","SUBTRACT","awayjs-display/lib/base/CapsStyle","CapsStyle","ROUND","NONE","SQUARE","awayjs-display/lib/base/DisplayObject","AxisAlignedBoundingBox","MathConsts","Matrix3D","Matrix3DUtils","Point","Vector3D","AbstractMethodError","OrientationMode","Transform","PickingCollisionVO","DisplayObjectEvent","SceneEvent","DisplayObject","_pSceneTransform","_pSceneTransformDirty","_matrix3D","_matrix3DDirty","_inverseSceneTransform","_inverseSceneTransformDirty","_scenePosition","_scenePositionDirty","_explicitVisibility","_pImplicitVisibility","_explicitMouseEnabled","_pImplicitMouseEnabled","_positionDirty","_rotationDirty","_scaleDirty","_rotationX","_rotationY","_rotationZ","_eulers","_flipY","_zOffset","_pScaleX","_pScaleY","_pScaleZ","_x","_y","_z","_pivot","_orientationMatrix","_pivotZero","_pivotDirty","_pos","_rot","_sca","_pIgnoreTransform","_pBoundsInvalid","_worldBoundsInvalid","_pRenderables","Array","alignmentMode","castsShadows","orientationMode","DEFAULT","_transformComponents","_transform","identity","appendScale","_pBounds","pCreateDefaultBoundingVolume","_worldBounds","pUpdateBounds","set","value","clone","pInvalidateBounds","_boundsVisible","_partitionNode","_iUpdateEntityBounds","_depth","val","bounds","aabb","depth","invalidateScale","x","RADIANS_TO_DEGREES","y","z","DEGREES_TO_RADIANS","invalidateRotation","_height","height","_pParent","getChildIndex","copyFrom","sceneTransform","invert","setTo","pInvalidateSceneTransform","_pIsEntity","_loaderInfo","_pUpdateImplicitMouseEnabled","mouseChildren","_mouseX","_mouseY","_explicitPartition","_pScene","iUnregisterPartition","iRegisterPartition","_pUpdateImplicitPartition","_iAssignedPartition","pCreateEntityPartitionNode","_pPickingCollider","pivot","invalidatePivot","_root","rotationX","rotationY","rotationZ","pivotScale","transformVector","copyColumnTo","pUpdateSceneTransform","_shaderPickingDetails","boundsVisible","_pUpdateImplicitVisibility","_iIsVisible","_width","width","_iSourcePrefab","_iValidate","transformFrom","invalidatePosition","addEventListener","type","listener","POSITION_CHANGED","_listenToPositionChanged","ROTATION_CHANGED","_listenToRotationChanged","SCALE_CHANGED","_listenToScaleChanged","_iMatrix3D","name","parent","removeChild","disposeAsset","getBounds","targetCoordinateSpace","_bounds","getRect","globalToLocal","point","globalToLocal3D","hitTestObject","obj","hitTestPoint","shapeFlag","isIntersectingRay","rayPosition","rayDirection","localRayPosition","inverseSceneTransform","localRayDirection","deltaTransformVector","pickingCollisionVO","_iPickingCollisionVO","localNormal","rayEntryDistance","rayIntersection","rayOriginIsInsideBounds","local3DToGlobal","point3d","lookAt","target","upAxis","yAxis","zAxis","xAxis","raw","Y_AXIS","normalize","subtract","position","crossProduct","RAW_DATA_CONTAINER","m","copyRawDataFrom","vec","decompose","localToGlobal","moveTo","dx","dy","dz","movePivot","pitch","angle","rotate","X_AXIS","getRenderSceneTransform","camera","CAMERA_PLANE","comps","scale","scenePosition","recompose","prependTranslation","roll","Z_AXIS","axis","prependRotation","rotateTo","ax","ay","az","removeEventListener","hasEventListener","translate","distance","len","Math","sqrt","translateLocal","yaw","_pImplicitPartition","_pUpdateMatrix3D","elements","_pPickingCollisionVO","iSetParent","_iSetScene","isEntity","invalidatePartition","_listenToSceneTransformChanged","notifySceneTransformChange","appendTranslation","_iIsRoot","prepend","_iAddRenderable","renderable","push","_iRemoveRenderable","index","indexOf","splice","_iTestCollision","shortestCollisionDistance","findClosest","_iInternalUpdate","_iController","update","_iIsMouseEnabled","_pUpdateScene","dispatchEvent","REMOVED_FROM_SCENE","iUnregisterEntity","ADDED_TO_SCENE","iRegisterEntity","notifySceneChange","notifyPositionChanged","_positionChanged","notifyRotationChanged","_rotationChanged","notifyScaleChanged","_scaleChanged","_listenToSceneChanged","_scenechanged","SCENE_CHANGED","_sceneTransformChanged","SCENETRANSFORM_CHANGED","invalidateMatrix3D","iMarkForUpdate","awayjs-core/lib/bounds/AxisAlignedBoundingBox","awayjs-core/lib/errors/AbstractMethodError","awayjs-core/lib/geom/MathConsts","awayjs-core/lib/geom/Matrix3D","awayjs-core/lib/geom/Matrix3DUtils","awayjs-core/lib/geom/Point","awayjs-core/lib/geom/Vector3D","awayjs-display/lib/base/OrientationMode","awayjs-display/lib/base/Transform","awayjs-display/lib/events/DisplayObjectEvent","awayjs-display/lib/events/SceneEvent","awayjs-display/lib/pick/PickingCollisionVO","awayjs-display/lib/base/Geometry","GeometryEvent","Geometry","_subGeometries","GEOMETRY","getSubGeometries","applyTransformation","transform","addSubGeometry","subGeometry","parentGeometry","SUB_GEOMETRY_ADDED","iInvalidateBounds","removeSubGeometry","SUB_GEOMETRY_REMOVED","numSubGeoms","subGeom","scaleUV","scaleU","scaleV","BOUNDS_INVALID","awayjs-display/lib/events/GeometryEvent","awayjs-display/lib/base/GradientType","GradientType","LINEAR","RADIAL","awayjs-display/lib/base/GraphicsPathWinding","GraphicsPathWinding","EVEN_ODD","NON_ZERO","awayjs-display/lib/base/Graphics","Graphics","beginBitmapFill","bitmap","matrix","repeat","smooth","beginFill","color","alpha","beginGradientFill","colors","alphas","ratios","spreadMethod","interpolationMethod","focalPointRatio","clear","sourceGraphics","cubicCurveTo","controlX1","controlY1","controlX2","controlY2","anchorX","anchorY","curveTo","controlX","controlY","drawCircle","radius","drawEllipse","drawGraphicsData","graphicsData","drawPath","commands","data","winding","drawRect","drawRoundRect","ellipseWidth","ellipseHeight","NaN","drawTriangles","vertices","indices","uvtData","culling","endFill","lineBitmapStyle","lineGradientStyle","lineStyle","thickness","pixelHinting","scaleMode","caps","joints","miterLimit","lineTo","awayjs-display/lib/base/IBitmapDrawable","awayjs-display/lib/base/IGraphicsData","awayjs-display/lib/base/IMaterialOwner","awayjs-display/lib/base/IStage","awayjs-display/lib/base/ISubMeshClass","awayjs-display/lib/base/ISubMesh","awayjs-display/lib/base/InterpolationMethod","InterpolationMethod","LINEAR_RGB","RGB","awayjs-display/lib/base/JointStyle","JointStyle","BEVEL","MITER","awayjs-display/lib/base/LightBase","DisplayObjectContainer","LightEvent","LightBase","_color","_colorR","_colorG","_colorB","_ambientColor","_ambient","_iAmbientR","_iAmbientG","_iAmbientB","_specular","_iSpecularR","_iSpecularG","_iSpecularB","_diffuse","_iDiffuseR","_iDiffuseG","_iDiffuseB","_castsShadows","_shadowMapper","pCreateShadowMapper","light","CASTS_SHADOW_CHANGE","updateSpecular","updateDiffuse","updateAmbient","iGetObjectProjectionMatrix","entity","LIGHT","awayjs-display/lib/containers/DisplayObjectContainer","awayjs-display/lib/events/LightEvent","awayjs-display/lib/base/LineScaleMode","LineScaleMode","HORIZONTAL","VERTICAL","awayjs-display/lib/base/LineSubGeometry","LineSubMesh","SubGeometryBase","TriangleSubGeometry","SubGeometryEvent","LineSubGeometry","_positionsDirty","_boundingPositionDirty","_thicknessDirty","_colorsDirty","_pSubMeshClass","_pUpdateStrideOffset","_pOffset","VERTEX_DATA","stride","START_POSITION_DATA","END_POSITION_DATA","THICKNESS_DATA","COLOR_DATA","_pStride","_pNumVertices","_pVertices","_pStrideOffsetDirty","updatePositions","_startPositions","_endPositions","updateThickness","_thickness","updateColors","_startColors","_endColors","_numSegments","getBoundingPositions","_boundingPositions","startPositions","concat","endPositions","startValues","endValues","j","values","positions","lenV","getStride","getOffset","updateIndices","notifyPositionsUpdate","offset","floor","notifyThicknessUpdate","notifyColorsUpdate","_pIndices","_pNotifyVerticesUpdate","_positionsUpdated","VERTICES_UPDATED","POSITION_DATA","_thicknessUpdated","_colorUpdated","POSITION_FORMAT","COLOR_FORMAT","THICKNESS_FORMAT","awayjs-display/lib/base/LineSubMesh","awayjs-display/lib/base/SubGeometryBase","awayjs-display/lib/base/TriangleSubGeometry","awayjs-display/lib/events/SubGeometryEvent","SubMeshBase","parentMesh","material","_pParentMesh","_subGeometry","LINE_SUB_MESH","_iCollectRenderable","renderer","applyLineSubMesh","awayjs-display/lib/base/SubMeshBase","awayjs-display/lib/base/LoaderInfo","EventDispatcher","LoaderInfo","apply","arguments","_bytes","_bytesLoaded","_bytesTotal","_content","_contentType","_loader","_url","awayjs-core/lib/events/EventDispatcher","CAMERA_POSITION","awayjs-display/lib/base/PixelSnapping","PixelSnapping","ALWAYS","AUTO","NEVER","awayjs-display/lib/base/SpreadMethod","SpreadMethod","PAD","REFLECT","REPEAT","concatenatedArrays","_pConcatenateArrays","updateVertices","_numTriangles","dataType","_numIndices","notifyIndicesUpdate","_indicesUpdated","INDICES_UPDATED","_iIndex","_renderables","animator","_material","iRemoveOwner","iAddOwner","_uvTransform","uvTransform","_iInvalidateRenderableGeometry","invalidateGeometry","_iGetExplicitMaterial","displayObject","_position","_displayObject","director","getForward","negate","_concatenatedColorTransform","_concatenatedMatrix","getUp","getRight","_pixelBounds","scaleX","scaleY","scaleZ","getRelativeMatrix3D","relativeTo","moveForward","moveBackward","moveLeft","moveRight","moveUp","moveDown","awayjs-display/lib/base/TriangleCulling","TriangleCulling","NEGATIVE","POSITIVE","TriangleSubMesh","_faceNormalsDirty","_faceTangentsDirty","_vertexNormalsDirty","_vertexTangentsDirty","_uvsDirty","_secondaryUVsDirty","_jointIndicesDirty","_jointWeightsDirty","_concatenateArrays","_autoDeriveNormals","_autoDeriveTangents","_autoDeriveUVs","_useFaceWeights","_scaleU","_scaleV","_useCondensedIndices","notifyJointIndicesUpdate","_vertexNormals","NORMAL_DATA","_vertexTangents","TANGENT_DATA","_uvs","UV_DATA","_secondaryUVs","SECONDARY_UV_DATA","_jointIndices","JOINT_INDEX_DATA","_jointsPerVertex","_jointWeights","JOINT_WEIGHT_DATA","notifyUVsUpdate","notifyNormalsUpdate","notifyTangentsUpdate","_positions","updateVertexNormals","updateVertexTangents","updateUVs","updateSecondaryUVs","updateJointIndices","updateJointWeights","updateFaceNormals","_faceNormals","updateFaceTangents","_faceTangents","_condensedJointIndices","_numCondensedJoints","_condensedIndexLookUp","normals","f1","f2","f3","k","lenI","weight","_faceWeights","vx","vy","vz","tangents","uvs","uvIdx","notifySecondaryUVsUpdate","jointIndices","oldIndex","newIndex","dic","jointWeights","notifyJointWeightsUpdate","jointsPerVertex","ratioU","ratioV","i1","i2","vector","bakeNormals","bakeTangents","invTranspose","transpose","vi0","ni0","ti0","vStride","nStride","tStride","index1","index2","index3","vi","v0","dv1","dv2","denom","x0","y0","z0","dx1","dy1","dz1","dx2","dy2","dz2","cx","cy","cz","x1","x2","x3","y1","y2","y3","z1","z2","z3","w","_normalsUpdated","_tangentsUpdated","_uvsUpdated","_secondaryUVsUpdated","_jointIndicesUpdated","_jointWeightsUpdated","NORMAL_FORMAT","TANGENT_FORMAT","UV_FORMAT","SECONDARY_UV_FORMAT","awayjs-display/lib/base/TriangleSubMesh","TRIANGLE_SUB_MESH","applyTriangleSubMesh","ArgumentError","RangeError","_mouseChildren","_children","CONTAINER","addChild","child","removeChildInternal","addChildAt","addChildren","childarray","_i","partition","contains","disposeWithChildren","numChildren","getChildAt","getChildByName","childIndex","getObjectsUnderPoint","removeChildAt","removeChildren","beginIndex","endIndex","setChildIndex","swapChildren","child1","child2","swapChildrenAt","awayjs-core/lib/errors/ArgumentError","awayjs-core/lib/errors/Error","awayjs-core/lib/errors/RangeError","awayjs-display/lib/containers/Loader","AssetLibraryBundle","AssetLoader","AssetEvent","IOErrorEvent","LoaderEvent","ParserEvent","Loader","useAssetLibrary","assetLibraryId","_this","_loadingSessions","_useAssetLib","_assetLibId","_onResourceCompleteDelegate","event","onResourceComplete","_onAssetCompleteDelegate","onAssetComplete","_contentLoaderInfo","close","lib","getInstance","stopAllLoadingSessions","removeListeners","stop","load","request","context","ns","parser","token","loader","RESOURCE_COMPLETE","ASSET_COMPLETE","_iLoader","_iAddErrorHandler","onLoadError","_iAddParseErrorHandler","onParseError","loadData","unload","enableParser","parserClass","enableParsers","parserClasses","dispatcher","IO_ERROR","PARSE_ERROR","content","awayjs-core/lib/events/AssetEvent","awayjs-core/lib/events/IOErrorEvent","awayjs-core/lib/events/LoaderEvent","awayjs-core/lib/events/ParserEvent","awayjs-core/lib/library/AssetLibraryBundle","awayjs-core/lib/library/AssetLoader","awayjs-display/lib/containers/Scene","NodeBase","Partition","Scene","_expandedPartitions","_partitions","_iCollectionMark","_iSceneGraphRoot","traversePartitions","traverser","scene","traverse","PARTITION_CHANGED","iRemoveEntity","awayjs-display/lib/partition/NodeBase","awayjs-display/lib/partition/Partition","awayjs-display/lib/containers/View","getTimer","RaycastPicker","Camera","CameraEvent","RendererEvent","MouseManager","View","_time","_deltaTime","_backgroundColor","_backgroundAlpha","_viewportDirty","_scissorDirty","_mousePicker","_onScenePartitionChangedDelegate","onScenePartitionChanged","_onProjectionChangedDelegate","onProjectionChanged","_onViewportUpdatedDelegate","onViewportUpdated","_onScissorUpdatedDelegate","onScissorUpdated","document","body","style","margin","_htmlElement","createElement","appendChild","_mouseManager","registerView","_pCamera","_pMouseX","_pMouseY","_pRenderer","VIEWPORT_UPDATED","SCISSOR_UPDATED","_pEntityCollector","_iCreateEntityCollector","_iBackgroundR","_iBackgroundG","_iBackgroundB","_iBackgroundAlpha","shareContext","_shareContext","PROJECTION_CHANGED","_aspectRatio","projection","_iAspectRatio","left","top","visibility","render","pUpdateTime","_iUpdateScissorRect","scissorRect","_iUpdateViewport","viewPort","forceMouseMove","_iActiveDiv","_iUpdateDirty","_iCollidingObject","mousePicker","getViewCollision","fireMouseEvents","time","unregisterView","project","v","originX","originY","unproject","sX","sY","sZ","getRay","updateCollider","collidingObject","layeredView","awayjs-core/lib/utils/getTimer","awayjs-display/lib/entities/Camera","awayjs-display/lib/events/CameraEvent","awayjs-display/lib/events/RendererEvent","awayjs-display/lib/managers/MouseManager","awayjs-display/lib/pick/RaycastPicker","awayjs-display/lib/controllers/ControllerBase","ControllerBase","targetObject","_pAutoUpdate","pNotifyUpdate","_pTargetObject","interpolate","awayjs-display/lib/controllers/FirstPersonController","FirstPersonController","panAngle","tiltAngle","minTiltAngle","maxTiltAngle","steps","wrapPanAngle","_iCurrentPanAngle","_iCurrentTiltAngle","_panAngle","_tiltAngle","_minTiltAngle","_maxTiltAngle","_steps","_walkIncrement","_strafeIncrement","_wrapPanAngle","fly","max","min","abs","sin","cos","incrementWalk","incrementStrafe","awayjs-display/lib/controllers/FollowController","HoverController","FollowController","lookAtObject","_pLookAtObject","awayjs-display/lib/controllers/HoverController","LookAtController","minPanAngle","maxPanAngle","yFactor","_distance","_minPanAngle","Infinity","_maxPanAngle","_yFactor","_upAxis","pos","lookAtPosition","_pOrigin","_pLookAtPosition","awayjs-display/lib/controllers/LookAtController","_onLookAtObjectChangedDelegate","onLookAtObjectChanged","awayjs-display/lib/controllers/SpringController","SpringController","stiffness","mass","damping","positionOffset","_velocity","_dv","_stretch","_force","_acceleration","_desiredPosition","offs","matrix3D","add","scaleBy","incrementBy","awayjs-display/lib/display/ContextMode","ContextMode","WEBGL","FLASH","NATIVE","awayjs-display/lib/display/IContext","awayjs-display/lib/entities/Billboard","EntityNode","MaterialEvent","Billboard","pixelSnapping","smoothing","onSizeChangedDelegate","onSizeChanged","_billboardWidth","_billboardHeight","_animator","BILLBOARD","SIZE_CHANGED","fromExtremes","testBillboardCollision","invalidateVertexData","_iCollectRenderables","applyBillboard","awayjs-display/lib/events/MaterialEvent","awayjs-display/lib/partition/EntityNode","NullBounds","Plane3D","ProjectionEvent","PerspectiveProjection","CameraNode","_viewProjection","_viewProjectionDirty","_frustumPlanesDirty","_onProjectionMatrixChangedDelegate","onProjectionMatrixChanged","_projection","MATRIX_CHANGED","_frustumPlanes","CAMERA","updateFrustum","c","c11","c12","c13","c14","c21","c22","c23","c24","c31","c32","c33","c34","c41","c42","c43","c44","invLen","viewProjection","copyRawDataTo","nullify","append","nX","nY","awayjs-core/lib/bounds/NullBounds","awayjs-core/lib/events/ProjectionEvent","awayjs-core/lib/geom/Plane3D","awayjs-core/lib/projections/PerspectiveProjection","awayjs-display/lib/partition/CameraNode","awayjs-display/lib/entities/DirectionalLight","DirectionalLightNode","DirectionalShadowMapper","DirectionalLight","xDir","yDir","zDir","direction","_sceneDirection","_direction","_tmpLookAt","_projAABBPoints","transformVectors","aabbPoints","xMin","xMax","yMin","yMax","zMin","zMax","invXRange","invYRange","invZRange","awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper","awayjs-display/lib/partition/DirectionalLightNode","awayjs-display/lib/entities/IEntity","awayjs-display/lib/entities/LightProbe","LightProbeNode","LightProbe","diffuseMap","specularMap","_diffuseMap","_specularMap","awayjs-display/lib/partition/LightProbeNode","awayjs-display/lib/entities/LineSegment","LineSegment","startPosition","endPosition","_startPosition","_endPosition","_halfThickness","LINE_SEGMENT","notifyRenderableUpdate","awayjs-display/lib/entities/Mesh","Mesh","geometry","_shareAnimationGeometry","_subMeshes","_onGeometryBoundsInvalidDelegate","onGeometryBoundsInvalid","_onSubGeometryAddedDelegate","onSubGeometryAdded","_onSubGeometryRemovedDelegate","onSubGeometryRemoved","removeOwner","subMesh","addOwner","MESH","_geometry","subGeoms","subGeometries","addSubMesh","bakeTransformations","disposeWithAnimatorAndChildren","shareAnimationGeometry","mouseEnabled","extra","getSubMeshFromSubGeometry","boundingPositions","minX","minY","minZ","maxX","maxY","maxZ","SubMeshClass","subMeshClass","testMeshCollision","_iInvalidateRenderableGeometries","awayjs-display/lib/entities/PointLight","BoundingSphere","PointLightNode","CubeMapShadowMapper","PointLight","_pRadius","_pFallOff","_pFallOffFactor","iFallOffFactor","fromSphere","box","v1","bottom","front","v2","right","back","d1","d2","rawData","awayjs-core/lib/bounds/BoundingSphere","awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper","awayjs-display/lib/partition/PointLightNode","awayjs-display/lib/entities/Shape","Shape","_graphics","awayjs-display/lib/entities/Skybox","SkyboxNode","Skybox","SKYBOX","awayjs-display/lib/partition/SkyboxNode","awayjs-display/lib/entities/TextField","TextField","_text","_bottomScrollV","_caretIndex","_length","maxScrollH","_maxScrollH","maxScrollV","_maxScrollV","_numLines","_selectionBeginIndex","_selectionEndIndex","_textHeight","_textInteractionMode","_textWidth","appendText","newText","getCharBoundaries","charIndex","_charBoundaries","getCharIndexAtPoint","_charIndexAtPoint","getFirstCharInParagraph","_firstCharInParagraph","getImageReference","id","_imageReference","getLineIndexAtPoint","_lineIndexAtPoint","getLineIndexOfChar","_lineIndexOfChar","getLineLength","lineIndex","_lineLength","getLineMetrics","_lineMetrics","getLineOffset","_lineOffset","getLineText","_lineText","getParagraphLength","_paragraphLength","getTextFormat","_textFormat","replaceSelectedText","replaceText","setSelection","setTextFormat","format","isFontCompatible","fontName","fontStyle","awayjs-display/lib/entities/TimeLine","TimeLine","_duration","_timeLineObjs","_frames","_currentFrame","_speed","_isplaying","_fps","_playMode","newSpeed","newFps","TIMELINE","timeDelta","jumpingToFrame","tlo","_isInit","frameCnt","curFrame","foundFrame","startTime","endTime","makeDirty","isDirty","commandSet","isActive","deactivate","executeCommands","executeFrameScript","script","asset","assetType","addFrame","newFrame","duration","newDuration","frameScript","start","gotoAndPlay","frameNumber","gotoAndStop","gotoAndPlayLabel","frameLabel","fl","framelabels","gotoAndStopLabel","gotoAndPlayTime","gotoAndStopTime","addTimeLineObject","newTlObj","isDisplayObj","getTimeLineObjectByID","objID","getObjectByInstanceName","instanceName","awayjs-display/lib/entities/timelinedata/CommandPropsBase","CommandPropsBase","thisObj","speed","awayjs-display/lib/entities/timelinedata/CommandPropsDisplayObject","CommandPropsDisplayObject","_doDisplaymatrix","_doColorTransform","_doInstanceName","_doDepth","_doFilters","_doDepthClip","_doBlendMode","setBlendMode","blendMode","_blendMode","setClipDepth","clipDepth","_depthClip","setFilter","filter","_filter","setDepth","setDisplaymatrixInterpolate","_displayMatrixInterpolate","setDisplaymatrix","displayMatrix","_displayMatrix","setColorTransform","colorTransform","_colorTransform","setColorTranformInterpolate","_colorTransformInterpolate","setInstancename","_instanceName","visible","awayjs-display/lib/entities/timelinedata/FrameCommand","FrameCommand","tlObj","_tlObj","commandProps","_activate","newActve","_commandProps","newProps","newtlObj","execute","awayjs-display/lib/entities/timelinedata/InterpolationObject","InterpolationObject","startValue","endValue","_type","_startValue","_startTime","_endValue","getState","_endTime","awayjs-display/lib/entities/timelinedata/TimeLineFrame","TimeLineFrame","_isDirty","_script","_frameCommands","_frameCommandsReverse","_frameCommandsInit","_framelabels","_labelTypes","addCommand","newCommand","addCommandReverse","addCommandInit","addLabel","label","addToScript","newscript","setFrameTime","awayjs-display/lib/entities/timelinedata/TimeLineObject","TimeLineObject","deactiveCommandProps","_asset","_objID","_is2D","_isActive","_deactivateCommandProps","newCommandprops","newAsset","newobjID","newis2D","newisActive","awayjs-display/lib/errors/CastError","CastError","message","Event","_camera","awayjs-core/lib/events/Event","object","VISIBLITY_UPDATED","awayjs-display/lib/events/MouseEvent","MouseEvent","_iAllowedToPropagate","doesBubble","stopPropagation","_iParentEvent","stopImmediatePropagation","result","screenX","screenY","view","materialOwner","uv","localPosition","subGeometryIndex","delta","ctrlKey","shiftKey","sceneNormal","MOUSE_OVER","MOUSE_OUT","MOUSE_UP","MOUSE_DOWN","MOUSE_MOVE","CLICK","DOUBLE_CLICK","MOUSE_WHEEL","awayjs-display/lib/events/ResizeEvent","ResizeEvent","oldHeight","oldWidth","_oldHeight","_oldWidth","RESIZE","awayjs-display/lib/events/StageEvent","StageEvent","CONTEXT_CREATED","CONTEXT_DISPOSED","CONTEXT_RECREATED","_dataType","AwayMouseEvent","_viewLookup","_nullVector","_queuedEvents","_mouseUp","_mouseClick","_mouseOut","_mouseDown","_mouseMove","_mouseOver","_mouseWheel","_mouseDoubleClick","onClickDelegate","onClick","onDoubleClickDelegate","onDoubleClick","onMouseDownDelegate","onMouseDown","onMouseMoveDelegate","onMouseMove","onMouseUpDelegate","onMouseUp","onMouseWheelDelegate","onMouseWheel","onMouseOverDelegate","onMouseOver","onMouseOutDelegate","onMouseOut","_instance","_previousCollidingObject","queueDispatch","_mouseMoveEvent","htmlElement","slice","sourceEvent","collider","altKey","clientX","clientY","updateColliders","mouseX","mouseY","getBoundingClientRect","awayjs-display/lib/materials/CSSMaterialBase","MaterialBase","ImageTexture","CSSMaterialBase","texture","_iMaterialId","Number","_imageElement","_imageStyle","_pTexture","htmlImageElement","node","getElementsByTagName","sheet","styleSheets","insertRule","cssRules","backgroundImage","src","backgroundSize","transformOrigin","_pHeight","_pWidth","_pNotifySizeChanged","awayjs-core/lib/textures/ImageTexture","awayjs-display/lib/materials/MaterialBase","awayjs-display/lib/materials/LightSources","LightSources","LIGHTS","PROBES","ALL","_materialPassData","_materialData","_pAlphaThreshold","_pAnimateUVs","_enableLightFallOff","_specularLightSources","_diffuseLightSources","_iBaseScreenPassIndex","_bothSides","_pScreenPassesInvalid","_pBlendMode","_numPasses","_mipmap","_smooth","_repeat","_pRequiresBlending","_owners","_passes","_onPassChangeDelegate","onPassChange","_onLightChangeDelegate","onLightsChange","alphaPremultiplied","MATERIAL","_animationSet","_pLightPicker","CHANGE","_pInvalidateScreenPasses","_pInvalidatePasses","_pClearScreenPasses","_alphaPremultiplied","_iActivatePass","pass","materialPass","_iActivate","_iDeactivatePass","_iDeactivate","_iRenderPass","stage","collectLights","_iRender","owner","animationSet","invalidateAnimation","_iNumScreenPasses","invalidate","invalidateMaterial","_pRemoveScreenPass","_pAddScreenPass","lightPicker","_iAddMaterialData","materialData","_iRemoveMaterialData","_iUpdateMaterial","_sizeChanged","_iAddMaterialPassData","materialPassData","_iRemoveMaterialPassData","awayjs-display/lib/materials/lightpickers/LightPickerBase","LightPickerBase","_pNumPointLights","_pNumDirectionalLights","_pNumCastingPointLights","_pNumCastingDirectionalLights","_pNumLightProbes","LIGHT_PICKER","_pPointLights","_pDirectionalLights","_pCastingPointLights","_pCastingDirectionalLights","_pLightProbes","_pLightProbeWeights","_pAllPickedLights","updateProbeWeights","objectPos","sourceEntity","lightPos","rx","ry","rz","total","awayjs-display/lib/materials/lightpickers/StaticLightPicker","StaticLightPicker","lights","_onCastShadowChangeDelegate","onCastShadowChange","_lights","numPointLights","numDirectionalLights","numCastingPointLights","numCastingDirectionalLights","numLightProbes","clearListeners","ceil","updatePointCasting","updateDirectionalCasting","dl","pl","awayjs-display/lib/materials/passes/IMaterialPass","awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper","Rectangle","FreeMatrixProjection","CascadeShadowMapper","numCascades","_pScissorRectsInvalid","_numCascades","_changeDispatcher","init","getSplitRatio","_splitRatios","setSplitRatio","getDepthProjections","_depthCameras","_nearPlaneDistances","_texOffsetsX","_texOffsetsY","_pScissorRects","_depthLenses","_pSetDepthMapSize","invalidateScissorRects","pDrawDepthMap","updateScissorRects","_pCasterCollector","cullPlanes","_pCullPlanes","_pOverallDepthCamera","_iRenderCascades","half","_pDepthMapSize","pUpdateDepthProjection","viewCamera","projectionNear","near","projectionRange","far","pUpdateProjectionFromFrustumCorners","frustumCorners","_pMatrix","_pOverallDepthProjection","pUpdateCullPlanes","updateProjectionPartition","splitRatio","texOffsetX","texOffsetY","xN","yN","zN","xF","yF","zF","POSITIVE_INFINITY","NEGATIVE_INFINITY","_pLocalFrustum","h","_pSnap","snap2","awayjs-core/lib/geom/Rectangle","awayjs-core/lib/projections/FreeMatrixProjection","PartialImplementationError","ShadowMapperBase","_needsRender","initCameras","_projections","addCamera","cam","fieldOfView","pCreateDepthTexture","maxDistance","_pLight","awayjs-core/lib/errors/PartialImplementationError","awayjs-display/lib/materials/shadowmappers/ShadowMapperBase","_pLightOffset","_pMaxZ","_pMinZ","lightFrustumPlanes","frustumPlanes","viewFrustumPlanes","dir","sceneDirection","dirX","dirY","dirZ","plane","corners","awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper","NearDirectionalShadowMapper","coverageRatio","_coverageRatio","ShadowCasterCollector","RenderTexture","_autoUpdateShadows","pCreateCasterCollector","updateShadows","_iShadowsInvalid","iSetDepthMap","depthMap","_depthMap","_explicitDepthMap","size","iRenderDepthMap","entityCollector","awayjs-core/lib/textures/RenderTexture","awayjs-display/lib/traverse/ShadowCasterCollector","acceptTraverser","directionalLight","_directionalLight","enterNode","applyDirectionalLight","isCastingShadow","_entity","_iNumEntities","removeFromParent","_iParent","iRemoveNode","isInFrustum","planes","numPlanes","worldBounds","applyEntity","_pCreateBoundsPrimitive","lightProbe","_lightProbe","applyLightProbe","_pNumChildNodes","_pChildNodes","_explicitBoundsVisible","_iUpdateImplicitBoundsVisible","boundsChildrenVisible","_boundsChildrenVisible","findPartitionForEntity","_pNumEntities","_implicitBoundsVisible","_pBoundsPrimitive","partitionNode","iAddNode","numEntities","pop","_iIsBoundsVisible","awayjs-display/lib/partition/NullNode","NullNode","rootNode","_updatesMade","_rootNode","updateEntities","_updateQueue","_iUpdateQueueNext","targetNode","pointLight","_pointLight","applyPointLight","skyBox","_skyBox","applySkybox","awayjs-display/lib/pick/IPicker","awayjs-display/lib/pick/IPickingCollider","RaycastCollector","findClosestCollision","_ignoredEntities","_onlyMouseEnabled","_numEntities","_raycastCollector","_findClosestCollision","_entities","getSceneCollision","entityHead","isIgnored","next","getPickingCollisionVO","setIgnoreList","entities","sortOnNearT","entity1","entity2","collector","sort","MAX_VALUE","bestCollisionVO","pickingCollider","updateLocalPosition","collisionPos","rayDir","rayPos","awayjs-display/lib/traverse/RaycastCollector","awayjs-display/lib/pool/CSSBillboardRenderable","CSSRenderableBase","CSSBillboardRenderable","pool","billboard","div","onmousedown","img","className","awayjs-display/lib/pool/CSSRenderableBase","awayjs-display/lib/pool/CSSLineSegmentRenderable","CSSLineSegmentRenderable","lineSegment","_pool","disposeItem","invalidateIndexData","awayjs-display/lib/pool/CSSSkyboxRenderable","CSSSkyboxRenderable","awayjs-display/lib/pool/EntityListItemPool","EntityListItem","EntityListItemPool","_index","_poolSize","getItem","item","freeAll","awayjs-display/lib/pool/EntityListItem","awayjs-display/lib/pool/IMaterialData","awayjs-display/lib/pool/IMaterialPassData","awayjs-display/lib/pool/IRenderableClass","awayjs-display/lib/pool/IRenderable","awayjs-display/lib/pool/RenderablePool","RenderablePool","renderableClass","_renderableClass","getPool","_pools","disposePool","awayjs-display/lib/prefabs/PrefabBase","PrefabBase","_pObjects","getNewObject","_pCreateObject","awayjs-display/lib/prefabs/PrimitiveCapsulePrefab","PrimitivePrefabBase","PrimitiveCapsulePrefab","segmentsW","segmentsH","yUp","_numVertices","_radius","_segmentsW","_segmentsH","_yUp","_pInvalidateGeometry","_pInvalidateUVs","_pBuildGeometry","geometryType","triIndex","startIndex","comp1","comp2","t1","t2","numIndices","triangleGeometry","numVertices","vertexNormals","vertexTangents","horangle","PI","ringradius","verangle","normLen","tanLen","_pBuildUVs","awayjs-display/lib/prefabs/PrimitivePrefabBase","awayjs-display/lib/prefabs/PrimitiveConePrefab","PrimitiveCylinderPrefab","PrimitiveConePrefab","closed","_pBottomRadius","awayjs-display/lib/prefabs/PrimitiveCylinderPrefab","awayjs-display/lib/prefabs/PrimitiveCubePrefab","PrimitiveCubePrefab","segmentsD","tile6","_segmentsD","_tile6","tl","tr","bl","br","inc","vidx","fidx","hw","hh","hd","dw","dh","dd","outer_pos","lineGeometry","numSegments","u_tile_dim","v_tile_dim","u_tile_step","v_tile_step","tl0u","tl0v","tl1u","tl1v","du","dv","topRadius","bottomRadius","topClosed","bottomClosed","surfaceClosed","_topRadius","_pSegmentsW","_pSegmentsH","_topClosed","_bottomClosed","_surfaceClosed","setSegmentsW","setSegmentsH","revolutionAngle","dr","latNormElev","latNormBase","nextVertexIndex","revolutionAngleDelta","na0","na1","naComp1","naComp2","awayjs-display/lib/prefabs/PrimitivePlanePrefab","PrimitivePlanePrefab","doubleSided","_doubleSided","base","tw","xi","yi","mult","awayjs-display/lib/prefabs/PrimitivePolygonPrefab","PrimitivePolygonPrefab","sides","_geomDirty","_uvDirty","_geometryTypeDirty","_geometryType","PRIMITIVE_PREFAB","invalidateGeometryType","updateGeometryType","autoDeriveNormals","autoDeriveTangents","autoDeriveUVs","updateGeometry","mesh","awayjs-display/lib/prefabs/PrimitiveSpherePrefab","PrimitiveSpherePrefab","awayjs-display/lib/prefabs/PrimitiveTorusPrefab","PrimitiveTorusPrefab","tubeRadius","segmentsR","segmentsT","_tubeRadius","_segmentsR","_segmentsT","nx","ny","nz","revolutionAngleR","revolutionAngleT","revolutionAngleDeltaR","revolutionAngleDeltaT","n1","n2","awayjs-display/lib/render/CSSDefaultRenderer","CoordinateSystem","CSSRendererBase","CSSEntityCollector","CSSDefaultRenderer","_contextMatrix","_skyboxProjection","_container","overflow","_context","_contextStyle","transformStyle","_pBackBufferInvalid","pUpdateBackBuffer","pDraw","coordinateSystem","RIGHT_HANDED","drawRenderables","_renderableHead","_activeMaterial","clip","toString","drawSkybox","renderSceneTransform","awayjs-core/lib/projections/CoordinateSystem","awayjs-display/lib/render/CSSRendererBase","awayjs-display/lib/traverse/CSSEntityCollector","renderToTexture","forceSoftware","profile","_backgroundR","_backgroundG","_backgroundB","_depthTextureInvalid","_viewPort","_scissorRect","_localPos","_globalPos","_billboardRenderablePool","_lineSegmentRenderablePool","window","innerWidth","innerHeight","updateGlobalPos","notifyViewportUpdate","notifyScissorUpdate","surfaceSelector","pExecuteRender","scissorRects","cameras","pCollectRenderables","_iEntryPoint","_pCameraForward","forwardVector","_applyRenderable","lineSubMesh","skybox","triangleSubMesh","materialId","cascaded","zIndex","zOffset","dotProduct","_scissorUpdated","_viewPortUpdated","awayjs-display/lib/render/IRenderer","awayjs-display/lib/sort/IEntitySorter","awayjs-display/lib/sort/RenderableMergeSort","RenderableMergeSort","sortBlendedRenderables","head","headB","fast","slow","curr","sortOpaqueRenderables","cmp","aid","renderOrderId","bid","ma","mb","awayjs-display/lib/text/AntiAliasType","AntiAliasType","ADVANCED","awayjs-display/lib/text/GridFitType","GridFitType","PIXEL","SUBPIXEL","awayjs-display/lib/text/TextFieldAutoSize","TextFieldAutoSize","CENTER","LEFT","RIGHT","awayjs-display/lib/text/TextFieldType","TextFieldType","DYNAMIC","INPUT","awayjs-display/lib/text/TextFormatAlign","TextFormatAlign","JUSTIFY","awayjs-display/lib/text/TextFormat","TextFormat","font","bold","italic","underline","url","align","leftMargin","rightMargin","indent","leading","tabStops","awayjs-display/lib/text/TextInteractionMode","TextInteractionMode","SELECTION","awayjs-display/lib/text/TextLineMetrics","TextLineMetrics","ascent","descent","CollectorBase","awayjs-display/lib/traverse/CollectorBase","_numCullPlanes","_pNumInteractiveEntities","_pEntityListItemPool","_cullPlanes","_customCullPlanes","_pEntityHead","enter","awayjs-display/lib/traverse/EntityCollector","EntityCollector","_pNumLights","_numDirectionalLights","_numPointLights","_numLightProbes","_pLights","_directionalLights","_pointLights","_lightProbes","_pSkybox","awayjs-display/lib/traverse/ICollector","_rayPosition","_rayDirection","awayjs-display/lib/utils/Cast","BitmapData","ByteArray","BitmapTexture","Cast","string","byteArray","isHex","str","_hexChars","charAt","tryColor","random","_colorNames","parseInt","tryClass","_notClasses","_classes","bitmapData","HTMLImageElement","imageElement","draw","bitmapTexture","bmd","awayjs-core/lib/base/BitmapData","awayjs-core/lib/textures/BitmapTexture","awayjs-core/lib/utils/ByteArray"],"mappings":"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","file":"awayjs-display.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATION_NODE;\n\t}\n}\n\nexport = AnimationNodeBase;","/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;","/**\n * A class that provides constant values for visual blend mode effects. These\n * constants are used in the following:\n * <ul>\n *   <li> The <code>blendMode</code> property of the\n * flash.display.DisplayObject class.</li>\n *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>\n * method of the flash.display.BitmapData class</li>\n * </ul>\n */\nclass BlendMode\n{\n\t/**\n\t * Adds the values of the constituent colors of the display object to the\n\t * colors of its background, applying a ceiling of 0xFF. This setting is\n\t * commonly used for animating a lightening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the\n\t * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +\n\t * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>\n\t */\n\tpublic static ADD:string = \"add\";\n\n\t/**\n\t * Applies the alpha value of each pixel of the display object to the\n\t * background. This requires the <code>blendMode</code> property of the\n\t * parent display object be set to\n\t * <code>away.base.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ALPHA:string = \"alpha\";\n\n\t/**\n\t * Selects the darker of the constituent colors of the display object and the\n\t * colors of the background(the colors with the smaller values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static DARKEN:string = \"darken\";\n\n\t/**\n\t * Compares the constituent colors of the display object with the colors of\n\t * its background, and subtracts the darker of the values of the two\n\t * constituent colors from the lighter value. This setting is commonly used\n\t * for more vibrant colors.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -\n\t * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>\n\t */\n\tpublic static DIFFERENCE:string = \"difference\";\n\n\t/**\n\t * Erases the background based on the alpha value of the display object. This\n\t * process requires that the <code>blendMode</code> property of the parent\n\t * display object be set to <code>flash.display.BlendMode.LAYER</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static ERASE:string = \"erase\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the display\n\t * object. If the display object is lighter than 50% gray, the display object\n\t * and background colors are screened, which results in a lighter color. If\n\t * the display object is darker than 50% gray, the colors are multiplied,\n\t * which results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static HARDLIGHT:string = \"hardlight\";\n\n\t/**\n\t * Inverts the background.\n\t */\n\tpublic static INVERT:string = \"invert\";\n\n\t/**\n\t * Forces the creation of a transparency group for the display object. This\n\t * means that the display object is precomposed in a temporary buffer before\n\t * it is processed further. The precomposition is done automatically if the\n\t * display object is precached by means of bitmap caching or if the display\n\t * object is a display object container that has at least one child object\n\t * with a <code>blendMode</code> setting other than <code>\"normal\"</code>.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LAYER:string = \"layer\";\n\n\t/**\n\t * Selects the lighter of the constituent colors of the display object and\n\t * the colors of the background(the colors with the larger values). This\n\t * setting is commonly used for superimposing type.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the\n\t * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >\n\t * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static LIGHTEN:string = \"lighten\";\n\n\t/**\n\t * Multiplies the values of the display object constituent colors by the\n\t * constituent colors of the background color, and normalizes by dividing by\n\t * 0xFF, resulting in darker colors. This setting is commonly used for\n\t * shadows and depth effects.\n\t *\n\t * <p>For example, if a constituent color(such as red) of one pixel in the\n\t * display object and the corresponding color of the pixel in the background\n\t * both have the value 0x88, the multiplied result is 0x4840. Dividing by\n\t * 0xFF yields a value of 0x48 for that constituent color, which is a darker\n\t * shade than the color of the display object or the color of the\n\t * background.</p>\n\t */\n\tpublic static MULTIPLY:string = \"multiply\";\n\n\t/**\n\t * The display object appears in front of the background. Pixel values of the\n\t * display object override the pixel values of the background. Where the\n\t * display object is transparent, the background is visible.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * Adjusts the color of each pixel based on the darkness of the background.\n\t * If the background is lighter than 50% gray, the display object and\n\t * background colors are screened, which results in a lighter color. If the\n\t * background is darker than 50% gray, the colors are multiplied, which\n\t * results in a darker color. This setting is commonly used for shading\n\t * effects.\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static OVERLAY:string = \"overlay\";\n\n\t/**\n\t * Multiplies the complement(inverse) of the display object color by the\n\t * complement of the background color, resulting in a bleaching effect. This\n\t * setting is commonly used for highlights or to remove black areas of the\n\t * display object.\n\t */\n\tpublic static SCREEN:string = \"screen\";\n\n\t/**\n\t * Uses a shader to define the blend between objects.\n\t *\n\t * <p>Setting the <code>blendShader</code> property to a Shader instance\n\t * automatically sets the display object's <code>blendMode</code> property to\n\t * <code>BlendMode.SHADER</code>. If the <code>blendMode</code> property is\n\t * set to <code>BlendMode.SHADER</code> without first setting the\n\t * <code>blendShader</code> property, the <code>blendMode</code> property is\n\t * set to <code>BlendMode.NORMAL</code> instead. If the\n\t * <code>blendShader</code> property is set(which sets the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>), then\n\t * later the value of the <code>blendMode</code> property is changed, the\n\t * blend mode can be reset to use the blend shader simply by setting the\n\t * <code>blendMode</code> property to <code>BlendMode.SHADER</code>. The\n\t * <code>blendShader</code> property does not need to be set again except to\n\t * change the shader that's used to define the blend mode.</p>\n\t *\n\t * <p>Not supported under GPU rendering.</p>\n\t */\n\tpublic static SHADER:string = \"shader\";\n\n\t/**\n\t * Subtracts the values of the constituent colors in the display object from\n\t * the values of the background color, applying a floor of 0. This setting is\n\t * commonly used for animating a darkening dissolve between two objects.\n\t *\n\t * <p>For example, if the display object has a pixel with an RGB value of\n\t * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the\n\t * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -\n\t * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>\n\t */\n\tpublic static SUBTRACT:string = \"subtract\";\n}\n\nexport = BlendMode;","/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;","import AxisAlignedBoundingBox\t= require(\"awayjs-core/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingVolumeBase\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport BlendMode\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport LoaderInfo\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToStage     Dispatched when a display object is added to the on\n *                         stage display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromStage Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Stage\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Stage.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends NamedAssetBase implements IBitmapDrawable\n{\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tprivate _boundsVisible:boolean;\n\tprivate _depth:number;\n\tprivate _height:number;\n\tprivate _width:number;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean = true;\n\tpublic _pIsEntity:boolean;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\tprivate _partitionNode:EntityNode;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _scenechanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean = true;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean = true;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean = true;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean = true;\n\tprivate _rotationDirty:boolean = true;\n\tprivate _scaleDirty:boolean = true;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _pScaleX:number = 1;\n\tpublic _pScaleY:number = 1;\n\tpublic _pScaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean = true;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _pBounds:BoundingVolumeBase;\n\tpublic _pBoundsInvalid:boolean = true;\n\tprivate _worldBounds:BoundingVolumeBase;\n\tprivate _worldBoundsInvalid:boolean = true;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic alpha:number;\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._pBounds;\n\t}\n\n\tpublic set bounds(value:BoundingVolumeBase)\n\t{\n\t\tif (this._pBounds == value)\n\t\t\treturn;\n\n\t\tthis._pBounds = value;\n\n\t\tthis._worldBounds = value.clone();\n\n\t\tthis.pInvalidateBounds();\n\n\t\tif (this._boundsVisible)\n\t\t\tthis._partitionNode._iUpdateEntityBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth == val;\n\n\t\tthis._pScaleZ = val/this.bounds.aabb.depth;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._height;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height == val;\n\n\t\tthis._pScaleY = val/this.bounds.aabb.height;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic name:string;\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tif (this._pScene && this._explicitPartition)\n\t\t\tthis._pScene.iUnregisterPartition(this._explicitPartition);\n\n\t\tthis._explicitPartition = value;\n\n\t\tif (this._pScene && value)\n\t\t\tthis._pScene.iRegisterPartition(value);\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partitionNode():EntityNode\n\t{\n\t\tif (!this._partitionNode)\n\t\t\tthis._partitionNode = this.pCreateEntityPartitionNode();\n\n\t\treturn this._partitionNode;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tthis._pivot = pivot.clone();\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Stage object is the Stage object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._pScaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\tif (this._pScaleX == val)\n\t\t\treturn;\n\n\t\tthis._pScaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._pScaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\tif (this._pScaleY == val)\n\t\t\treturn;\n\n\t\tthis._pScaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._pScaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\tif (this._pScaleZ == val)\n\t\t\treturn;\n\n\t\tthis._pScaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tvar pivotScale:Vector3D = new Vector3D(this._pivot.x/this._pScaleX, this._pivot.y/this._pScaleY, this._pivot.z/this._pScaleZ)\n\t\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get boundsVisible():boolean\n\t{\n\t\treturn this._boundsVisible;\n\t}\n\n\tpublic set boundsVisible(value:boolean)\n\t{\n\t\tif (value == this._boundsVisible)\n\t\t\treturn;\n\n\t\tthis._boundsVisible = value;\n\n\t\tthis._partitionNode.boundsVisible = value;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\tif (this._pBoundsInvalid)\n\t\t\tthis.pUpdateBounds();\n\n\t\treturn this._width;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width == val;\n\n\t\tthis._pScaleX = val/this.bounds.aabb.width;\n\n\t\tthis.invalidateScale();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get worldBounds():BoundingVolumeBase\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the bounds of the entity, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._worldBoundsInvalid) {\n\t\t\tthis._worldBoundsInvalid = false;\n\t\t\tthis._worldBounds.transformFrom(this.bounds, this.sceneTransform);\n\t\t}\n\n\t\treturn this._worldBounds;\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._transformComponents = new Array<Vector3D>(3);//_transformComponents = new Vector.<Vector3D>(3, true);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\tthis._pBounds = this.pCreateDefaultBoundingVolume();\n\n\t\tthis._worldBounds = this.pCreateDefaultBoundingVolume();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Stage coordinates, or Stage coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Stage(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Stage.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\treturn point; //TODO\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Stage(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The x\n\t * and y values that you assign to the Point object represent global\n\t * coordinates because they are relative to the origin(0,0) of the main\n\t * display area. Then pass the Point object to the\n\t * <code>globalToLocal3D()</code> method as the <code>point</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A two dimensional Point object representing global x and y\n\t *              coordinates.\n\t * @return A Vector3D object with coordinates relative to the\n\t *         three-dimensional display object.\n\t */\n\tpublic globalToLocal3D(point:Point):Vector3D\n\t{\n\t\treturn new Vector3D(); //TODO\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Stage, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Stage).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tvar localRayPosition:Vector3D = this.inverseSceneTransform.transformVector(rayPosition);\n\t\tvar localRayDirection:Vector3D = this.inverseSceneTransform.deltaTransformVector(rayDirection);\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._iPickingCollisionVO;\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(localRayPosition, localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.localRayPosition = localRayPosition;\n\t\tpickingCollisionVO.localRayDirection = localRayDirection;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a two-dimensional point in the Stage\n\t * (global) coordinates.\n\t *\n\t * <p>For example, you can only use two-dimensional coordinates(x,y) to draw\n\t * with the <code>display.Graphics</code> methods. To draw a\n\t * three-dimensional object, you need to map the three-dimensional\n\t * coordinates of a display object to two-dimensional coordinates. First,\n\t * create an instance of the Vector3D class that holds the x-, y-, and z-\n\t * coordinates of the three-dimensional display object. Then pass the\n\t * Vector3D object to the <code>local3DToGlobal()</code> method as the\n\t * <code>point3d</code> parameter. The method returns a two-dimensional Point\n\t * object that can be used with the Graphics API to draw the\n\t * three-dimensional object.</p>\n\t *\n\t * @param point3d A Vector3D object containing either a three-dimensional\n\t *                point or the coordinates of the three-dimensional display\n\t *                object.\n\t * @return A two-dimensional point representing a three-dimensional point in\n\t *         two-dimensional space.\n\t */\n\tpublic local3DToGlobal(point3d:Vector3D):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX = vec.x;\n\t\tthis._rotationY = vec.y;\n\t\tthis._rotationZ = vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Stage(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Stage(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Stage instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Stage.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\treturn new Point(); //TODO\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis._x = dx;\n\t\tthis._y = dy;\n\t\tthis._z = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._pivot == null)\n\t\t\tthis._pivot = new Vector3D();\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[2];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this._pScaleX;\n\t\t\tscale.y = this._pScaleY;\n\t\t\tscale.z = this._pScaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis._rotationX += vec.x;\n\t\tthis._rotationY += vec.y;\n\t\tthis._rotationZ += vec.z;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._x += x*len;\n\t\tthis._y += y*len;\n\t\tthis._z += z*len;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis._x = this._pos.x;\n\t\tthis._y = this._pos.y;\n\t\tthis._z = this._pos.z;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\n\t\t// TODO: From AS3 - Do we still need this in JS ?\n\t\t//ridiculous matrix error\n\t\t/*\n\t\tif (!val.rawData[0]) {\n\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\tval.copyRawDataTo(raw);\n\t\t\traw[0] = this._smallestNumber;\n\t\t\tval.copyRawDataFrom(raw);\n\t\t}\n\t\t//*/\n\t\tvar elements:Array<Vector3D> = val.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[0];\n\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\n\t\t\tthis._x = vec.x;\n\t\t\tthis._y = vec.y;\n\t\t\tthis._z = vec.z;\n\n\t\t\tthis.invalidatePosition();\n\t\t}\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation();\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\n\t\t\tthis._pScaleX = vec.x;\n\t\t\tthis._pScaleY = vec.y;\n\t\t\tthis._pScaleZ = vec.z;\n\n\t\t\tthis.invalidateScale();\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n\t\tif (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition);\n\t\t\tthis._iSetScene(value._pScene);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null);\n\n\t\t\tthis._iSetScene(null);\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\t// point lights should be using sphere bounds\n\t\t// directional lights should be using null bounds\n\t\treturn new AxisAlignedBoundingBox();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tthis._pBoundsInvalid = true;\n\t\tthis._worldBoundsInvalid = true;\n\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tthis._worldBoundsInvalid = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._listenToSceneTransformChanged)\n\t\t\tthis.notifySceneTransformChange();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._width = this._pBounds.aabb.width*this._pScaleX;\n\t\tthis._height = this._pBounds.aabb.height*this._pScaleY;\n\t\tthis._depth = this._pBounds.aabb.depth*this._pScaleZ;\n\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition)\n\t{\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._sca.x = this._pScaleX;\n\t\tthis._sca.y = this._pScaleY;\n\t\tthis._sca.z = this._pScaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tif (!this._pivotZero) {\n\t\t\tthis._matrix3D.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\t// test to see if we're switching roots while we're already using a scene partition\n\t\t/*\n\t\tif (value == null)\n\t\t\tthis._oldScene = this._pScene;\n\n\t\tif (this._explicitPartition && this._oldScene && this._oldScene != this._pScene)\n\t\t\tthis.partition = null;\n\n\t\tif (value)\n\t\t\tthis._oldScene = null;\n\n\t\t// end of stupid partition test code\n\t\t//*/\n\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateScene(value);\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateScene(value:Scene)\n\t{\n\t\tif (this._pScene) {\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\t\t//unregister entity from current scene\n\t\t\tthis._pScene.iUnregisterEntity(this);\n\t\t}\n\n\t\tthis._pScene = value;\n\n\t\tif (value) {\n\t\t\tvalue.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\t\t//register entity with new scene\n\t\t\tvalue.iRegisterEntity(this);\n\t\t}\n\n\t\tthis.notifySceneChange();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyPositionChanged()\n\t{\n\t\tif (!this._positionChanged)\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._positionChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRotationChanged()\n\t{\n\t\tif (!this._rotationChanged)\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._rotationChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScaleChanged()\n\t{\n\t\tif (!this._scaleChanged)\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._scaleChanged);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneChange()\n\t{\n\t\tif (this._listenToSceneChanged) {\n\t\t\tif (!this._scenechanged)\n\t\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\n\n\t\t\tthis.dispatchEvent(this._scenechanged);\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifySceneTransformChange()\n\t{\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePartition()\n\t{\n\t\tif (this._iAssignedPartition)\n\t\t\tthis._iAssignedPartition.iMarkForUpdate(this);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToPositionChanged)\n\t\t\tthis.notifyPositionChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation()\n\t{\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToRotationChanged)\n\t\t\tthis.notifyRotationChanged();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale()\n\t{\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._listenToScaleChanged)\n\t\t\tthis.notifyScaleChanged();\n\t}\n}\n\nexport = DisplayObject;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends NamedAssetBase implements IAsset\n{\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.GEOMETRY;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\tpublic getSubGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;","/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;","/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/base/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/base/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/base/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/base/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/base/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/base/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/base/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/base/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/base/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;","/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;","/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;","/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;","import DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport LineSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\tpublic static START_POSITION_DATA:string = \"startPositions\";\n\tpublic static END_POSITION_DATA:string = \"endPositions\";\n\tpublic static THICKNESS_DATA:string = \"thickness\";\n\tpublic static COLOR_DATA:string = \"colors\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static COLOR_FORMAT:string = \"float4\";\n\tpublic static THICKNESS_FORMAT:string = \"float1\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _boundingPositionDirty = true;\n\tprivate _thicknessDirty:boolean = true;\n\tprivate _colorsDirty:boolean = true;\n\n\tprivate _startPositions:Array<number>;\n\tprivate _endPositions:Array<number>;\n\tprivate _boundingPositions:Array<number>\n\tprivate _thickness:Array<number>;\n\tprivate _startColors:Array<number>;\n\tprivate _endColors:Array<number>;\n\n\tprivate _numSegments:number;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _thicknessUpdated:SubGeometryEvent;\n\tprivate _colorUpdated:SubGeometryEvent;\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthis._pOffset[LineSubGeometry.VERTEX_DATA] = 0;\n\n\t\tvar stride:number = 0;\n\t\tthis._pOffset[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tstride += 3;\n\n\t\tthis._pOffset[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tstride += 1;\n\n\t\tthis._pOffset[LineSubGeometry.COLOR_DATA] = stride;\n\t\tstride += 4;\n\n\t\tthis._pStride[LineSubGeometry.VERTEX_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.START_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.END_POSITION_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.THICKNESS_DATA] = stride;\n\t\tthis._pStride[LineSubGeometry.COLOR_DATA] = stride;\n\n\t\tvar len:number = this._pNumVertices*stride;\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(len);\n\t\telse if (this._pVertices.length != len)\n\t\t\tthis._pVertices.length = len;\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._startPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._startPositions, this._endPositions);\n\n\t\treturn this._endPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Array<number>\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\tthis.updateThickness(this._thickness);\n\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._startColors;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endColors():Array<number>\n\t{\n\t\tif (this._colorsDirty)\n\t\t\tthis.updateColors(this._startColors, this._endColors);\n\n\t\treturn this._endColors;\n\t}\n\n\t/**\n\t * The total amount of segments in the TriangleSubGeometry.\n\t */\n\tpublic get numSegments():number\n\t{\n\t\treturn this._numSegments;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper(true);\n\n\t\tthis._pSubMeshClass = LineSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._boundingPositionDirty)\n\t\t\tthis._boundingPositions = this.startPositions.concat(this.endPositions);\n\n\t\treturn this._boundingPositions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\t\tvar indices:Array<number>;\n\n\t\tthis._startPositions = startValues;\n\n\t\tif (this._startPositions == null)\n\t\t\tthis._startPositions = new Array<number>();\n\n\t\tthis._endPositions = endValues;\n\n\t\tif (this._endPositions == null)\n\t\t\tthis._endPositions = new Array<number>();\n\n\t\tthis._boundingPositionDirty = true;\n\n\t\tthis._numSegments = this._startPositions.length/3;\n\n\t\tthis._pNumVertices = this._numSegments*4;\n\n\t\tvar lenV:number = this._pNumVertices*this.getStride(LineSubGeometry.VERTEX_DATA);\n\n\t\tif (this._pVertices == null)\n\t\t\tthis._pVertices = new Array<number>(lenV);\n\t\telse if (this._pVertices.length != lenV)\n\t\t\tthis._pVertices.length = lenV;\n\n\t\ti = 0;\n\t\tj = 0;\n\t\tindex = this.getOffset(LineSubGeometry.START_POSITION_DATA);\n\t\tstride = this.getStride(LineSubGeometry.START_POSITION_DATA);\n\t\tpositions = this._pVertices;\n\t\tindices = new Array();\n\n\t\twhile (i < startValues.length) {\n\t\t\tvalues = (index/stride & 1)? endValues : startValues;\n\t\t\tpositions[index] = values[i];\n\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\tpositions[index + 2] = values[i + 2];\n\n\t\t\tvalues = (index/stride & 1)? startValues : endValues;\n\t\t\tpositions[index + 3] = values[i];\n\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\tpositions[index + 5] = values[i + 2];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tvar o:number = index/stride - 3;\n\t\t\t\tindices.push(o, o + 1, o + 2, o + 3, o + 2, o + 1);\n\t\t\t\tj = 0;\n\t\t\t\ti += 3;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.updateIndices(indices);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic updateThickness(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar thickness:Array<number>;\n\n\t\tthis._thickness = values;\n\n\t\tif (values != null) {\n\t\t\ti = 0;\n\t\t\tj = 0;\n\t\t\toffset = this.getOffset(LineSubGeometry.THICKNESS_DATA);\n\t\t\tstride = this.getStride(LineSubGeometry.THICKNESS_DATA);\n\t\t\tthickness = this._pVertices;\n\n\t\t\tindex = offset\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*(index - offset)/stride + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyThicknessUpdate();\n\n\t\tthis._thicknessDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateColors(startValues:Array<number>, endValues:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar values:Array<number>\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar colors:Array<number>;\n\n\t\tthis._startColors = startValues;\n\n\t\tthis._endColors = endValues;\n\n\t\t//default to white\n\t\tif (this._startColors == null) {\n\t\t\tthis._startColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._startColors.length)\n\t\t\t\tthis._startColors[i++] = 1;\n\t\t}\n\n\t\tif (this._endColors == null) {\n\t\t\tthis._endColors = new Array(this._numSegments*4);\n\n\t\t\ti = 0;\n\t\t\twhile (i < this._endColors.length)\n\t\t\t\tthis._endColors[i++] = 1;\n\t\t}\n\n\t\ti = 0;\n\t\tj = 0;\n\t\toffset = this.getOffset(LineSubGeometry.COLOR_DATA);\n\t\tstride = this.getStride(LineSubGeometry.COLOR_DATA);\n\t\tcolors = this._pVertices;\n\n\t\tindex = offset;\n\n\t\twhile (i < this._startColors.length) {\n\t\t\tvalues = ((index - offset)/stride & 1)? this._endColors : this._startColors;\n\t\t\tcolors[index] = values[i];\n\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\tcolors[index + 3] = values[i + 3];\n\n\t\t\tif (++j == 4) {\n\t\t\t\tj = 0;\n\t\t\t\ti += 4;\n\t\t\t}\n\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyColorsUpdate();\n\n\t\tthis._colorsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._startPositions = null;\n\t\tthis._endPositions = null;\n\t\tthis._thickness = null;\n\t\tthis._startColors = null;\n\t\tthis._endColors = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry();\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\t\tclone.updateThickness(this._thickness.concat());\n\t\tclone.updatePositions(this._startPositions.concat(), this._endPositions.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyThicknessUpdate();\n\t\tthis.notifyColorsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyThicknessUpdate()\n\t{\n\t\tif (this._thicknessDirty)\n\t\t\treturn;\n\n\t\tthis._thicknessDirty = true;\n\n\t\tif (!this._thicknessUpdated)\n\t\t\tthis._thicknessUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.THICKNESS_DATA);\n\n\t\tthis.dispatchEvent(this._thicknessUpdated);\n\t}\n\n\tprivate notifyColorsUpdate()\n\t{\n\t\tif (this._colorsDirty)\n\t\t\treturn;\n\n\t\tthis._colorsDirty = true;\n\n\t\tif (!this._colorUpdated)\n\t\t\tthis._colorUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, LineSubGeometry.COLOR_DATA);\n\n\t\tthis.dispatchEvent(this._colorUpdated);\n\t}\n}\n\nexport = LineSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SUB_MESH;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\trenderer.applyLineSubMesh(this);\n\t}\n}\n\nexport = LineSubMesh;","import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;","class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;","/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;","/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;","import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport ISubMeshClass\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends NamedAssetBase\n{\n\tpublic static VERTEX_DATA:string = \"vertices\";\n\n\tpublic _pStrideOffsetDirty:boolean = true;\n\n\tpublic _pIndices:Array<number> /*uint*/;\n\tpublic _pVertices:Array<number>;\n\n\tprivate _numIndices:number;\n\tprivate _numTriangles:number;\n\tpublic _pNumVertices:number;\n\n\tpublic _pConcatenateArrays:boolean = true;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _pStride:Object = new Object();\n\tpublic _pOffset:Object = new Object();\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSubMeshClass:ISubMeshClass;\n\n\tpublic get subMeshClass():ISubMeshClass\n\t{\n\t\treturn this._pSubMeshClass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get concatenateArrays():boolean\n\t{\n\t\treturn this._pConcatenateArrays;\n\t}\n\n\tpublic set concatenateArrays(value:boolean)\n\t{\n\t\tif (this._pConcatenateArrays == value)\n\t\t\treturn;\n\n\t\tthis._pConcatenateArrays = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (value)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Array<number>\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tthis.updateVertices();\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._pNumVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper();\n\n\t\tthis._pConcatenateArrays = concatenatedArrays;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getStride(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pStride[dataType];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getOffset(dataType:string)\n\t{\n\t\tif (this._pStrideOffsetDirty)\n\t\t\tthis._pUpdateStrideOffset();\n\n\t\treturn this._pOffset[dataType];\n\t}\n\n\tpublic updateVertices()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pIndices = null;\n\t\tthis._pVertices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tthis._pIndices = indices;\n\t\tthis._numIndices = indices.length;\n\n\t\tthis._numTriangles = this._numIndices/3;\n\n\t\tthis.notifyIndicesUpdate();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;","import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport IAnimator\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends NamedAssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;","import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n","/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;","import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubMesh\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport SubGeometryEvent\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static POSITION_DATA:string = \"positions\";\n\tpublic static NORMAL_DATA:string = \"vertexNormals\";\n\tpublic static TANGENT_DATA:string = \"vertexTangents\";\n\tpublic static UV_DATA:string = \"uvs\";\n\tpublic static SECONDARY_UV_DATA:string = \"secondaryUVs\";\n\tpublic static JOINT_INDEX_DATA:string = \"jointIndices\";\n\tpublic static JOINT_WEIGHT_DATA:string = \"jointWeights\";\n\n\t//TODO - move these to StageGL\n\tpublic static POSITION_FORMAT:string = \"float3\";\n\tpublic static NORMAL_FORMAT:string = \"float3\";\n\tpublic static TANGENT_FORMAT:string = \"float3\";\n\tpublic static UV_FORMAT:string = \"float2\";\n\tpublic static SECONDARY_UV_FORMAT:string = \"float2\";\n\n\tprivate _positionsDirty:boolean = true;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\tprivate _vertexNormalsDirty:boolean = true;\n\tprivate _vertexTangentsDirty:boolean = true;\n\tprivate _uvsDirty:boolean = true;\n\tprivate _secondaryUVsDirty:boolean = true;\n\tprivate _jointIndicesDirty:boolean = true;\n\tprivate _jointWeightsDirty:boolean = true;\n\n\tprivate _positions:Array<number>;\n\tprivate _vertexNormals:Array<number>;\n\tprivate _vertexTangents:Array<number>;\n\tprivate _uvs:Array<number>;\n\tprivate _secondaryUVs:Array<number>;\n\tprivate _jointIndices:Array<number>;\n\tprivate _jointWeights:Array<number>;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedJointIndices:Array<number>;\n\tprivate _condensedIndexLookUp:Array<number>;\n\tprivate _numCondensedJoints:number;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _concatenateArrays:boolean = true;\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\tprivate _useFaceWeights:boolean = false;\n\n\tprivate _faceNormals:Array<number>;\n\tprivate _faceTangents:Array<number>;\n\tprivate _faceWeights:Array<number>;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\tprivate _positionsUpdated:SubGeometryEvent;\n\tprivate _normalsUpdated:SubGeometryEvent;\n\tprivate _tangentsUpdated:SubGeometryEvent;\n\tprivate _uvsUpdated:SubGeometryEvent;\n\tprivate _secondaryUVsUpdated:SubGeometryEvent;\n\tprivate _jointIndicesUpdated:SubGeometryEvent;\n\tprivate _jointWeightsUpdated:SubGeometryEvent;\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\n\t\tthis.notifyJointIndicesUpdate();\n\t}\n\n\tpublic _pUpdateStrideOffset()\n\t{\n\t\tif (this._concatenateArrays) {\n\t\t\tthis._pOffset[TriangleSubGeometry.VERTEX_DATA] = 0;\n\n\t\t\t//always have positions\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tvar stride:number = 3;\n\n\t\t\tif (this._vertexNormals != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._vertexTangents != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\t\tstride += 3;\n\t\t\t}\n\n\t\t\tif (this._uvs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._secondaryUVs != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\t\tstride += 2;\n\t\t\t}\n\n\t\t\tif (this._jointIndices != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tif (this._jointWeights != null) {\n\t\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\t\t\t\tstride += this._jointsPerVertex;\n\t\t\t}\n\n\t\t\tthis._pStride[TriangleSubGeometry.VERTEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = stride;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = stride;\n\n\t\t\tvar len:number = this._pNumVertices*stride;\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t} else {\n\t\t\tthis._pOffset[TriangleSubGeometry.POSITION_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.NORMAL_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.TANGENT_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.SECONDARY_UV_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_INDEX_DATA] = 0;\n\t\t\tthis._pOffset[TriangleSubGeometry.JOINT_WEIGHT_DATA] = 0;\n\n\t\t\tthis._pStride[TriangleSubGeometry.POSITION_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.NORMAL_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.TANGENT_DATA] = 3;\n\t\t\tthis._pStride[TriangleSubGeometry.UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.SECONDARY_UV_DATA] = 2;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_INDEX_DATA] = this._jointsPerVertex;\n\t\t\tthis._pStride[TriangleSubGeometry.JOINT_WEIGHT_DATA] = this._jointsPerVertex;\n\t\t}\n\n\t\tthis._pStrideOffsetDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tif (this._pConcatenateArrays)\n\t\t\tthis._pNotifyVerticesUpdate();\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\n\t\tif (value)\n\t\t\tthis.notifyNormalsUpdate();\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\n\t\tif (value)\n\t\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertices():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._pVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexNormals():Array<number>\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\tthis.updateVertexNormals(this._vertexNormals);\n\n\t\treturn this._vertexNormals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get vertexTangents():Array<number>\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\tthis.updateVertexTangents(this._vertexTangents);\n\n\t\treturn this._vertexTangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Array<number>\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Array<number>\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Array<number>\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.updateUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Array<number>\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\tthis.updateSecondaryUVs(this._secondaryUVs);\n\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\tif (this._useCondensedIndices)\n\t\t\treturn this._condensedJointIndices;\n\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():Array<number>\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\tthis.updateJointWeights(this._jointWeights);\n\n\t\treturn this._jointWeights;\n\t}\n\n\t/**\n\t * Indicates whether or not to take the size of faces into account when auto-deriving vertex normals and tangents.\n\t */\n\tpublic get useFaceWeights():boolean\n\t{\n\t\treturn this._useFaceWeights;\n\t}\n\n\tpublic set useFaceWeights(value:boolean)\n\t{\n\t\tif (this._useFaceWeights == value)\n\t\t\treturn;\n\n\t\tthis._useFaceWeights = value;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._faceNormalsDirty = true;\n\t}\n\n\tpublic get numCondensedJoints():number\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._numCondensedJoints;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\tthis.updateJointIndices(this._jointIndices);\n\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedArrays:boolean)\n\t{\n\t\tsuper(concatenatedArrays);\n\n\t\tthis._pSubMeshClass = TriangleSubMesh;\n\t}\n\n\tpublic getBoundingPositions():Array<number>\n\t{\n\t\tif (this._positionsDirty)\n\t\t\tthis.updatePositions(this._positions);\n\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updatePositions(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tthis._positions = values;\n\n\t\tif (this._positions == null)\n\t\t\tthis._positions = new Array<number>();\n\n\t\tthis._pNumVertices = this._positions.length/3;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tvar len:number = this._pNumVertices*this.getStride(TriangleSubGeometry.VERTEX_DATA);\n\n\t\t\tif (this._pVertices == null)\n\t\t\t\tthis._pVertices = new Array<number>(len);\n\t\t\telse if (this._pVertices.length != len)\n\t\t\t\tthis._pVertices.length = len;\n\n\t\t\ti = 0;\n\t\t\tindex = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\t\tpositions = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tpositions[index] = values[i++];\n\t\t\t\tpositions[index + 1] = values[i++];\n\t\t\t\tpositions[index + 2] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyNormalsUpdate();\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyUVsUpdate()\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyPositionsUpdate();\n\n\t\tthis._positionsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic updateVertexNormals(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar normals:Array<number>;\n\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif ((this._vertexNormals == null || values == null) && (this._vertexNormals != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._vertexNormals = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\t\t\tnormals = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tnormals[index] = values[i++];\n\t\t\t\t\tnormals[index + 1] = values[i++];\n\t\t\t\t\tnormals[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexNormals == null) {\n\t\t\t\tthis._vertexNormals = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\n\t\t\t//autoderived normals\n\t\t\tnormals = this._concatenateArrays? this._pVertices : this._vertexNormals;\n\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear normal values\n\t\t\tvar lenV:number = normals.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tnormals[index] = 0;\n\t\t\t\tnormals[index + 1] = 0;\n\t\t\t\tnormals[index + 2] = 0;\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\tvar weight:number;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face normals\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\tnormals[index] += this._faceNormals[f1]*weight;\n\t\t\t\tnormals[index + 1] += this._faceNormals[f2]*weight;\n\t\t\t\tnormals[index + 2] += this._faceNormals[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average normals collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = normals[index];\n\t\t\t\tvar vy:number = normals[index + 1];\n\t\t\t\tvar vz:number = normals[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index] = vx*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexNormals[i++] = normals[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\tnormals[index] = vx*d;\n\t\t\t\t\tnormals[index + 1] = vy*d;\n\t\t\t\t\tnormals[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyNormalsUpdate();\n\n\t\tthis._vertexNormalsDirty = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic updateVertexTangents(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar tangents:Array<number>;\n\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif ((this._vertexTangents == null || values == null) && (this._vertexTangents != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\n\t\t\tthis._vertexTangents = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\t\t\t\ttangents = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\ttangents[index] = values[i++];\n\t\t\t\t\ttangents[index + 1] = values[i++];\n\t\t\t\t\ttangents[index + 2] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._vertexTangents == null) {\n\t\t\t\tthis._vertexTangents = new Array<number>(this._positions.length);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\t\t//autoderived tangents\n\t\t\ttangents = this._concatenateArrays? this._pVertices : this._vertexTangents;\n\n\t\t\tindex = offset;\n\n\t\t\t//clear tangent values\n\t\t\tvar lenV:number = tangents.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\ttangents[index] = 0;\n\t\t\t\ttangents[index + 1] = 0;\n\t\t\t\ttangents[index + 2] = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\n\t\t\tvar k:number = 0;\n\t\t\tvar weight:number;\n\t\t\tvar f1:number = 0;\n\t\t\tvar f2:number = 1;\n\t\t\tvar f3:number = 2;\n\n\t\t\ti = 0;\n\n\t\t\t//collect face tangents\n\t\t\tvar lenI:number = this._pIndices.length;\n\t\t\twhile (i < lenI) {\n\t\t\t\tweight = this._useFaceWeights? this._faceWeights[k++] : 1;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tindex = offset + this._pIndices[i++]*stride;\n\t\t\t\ttangents[index++] += this._faceTangents[f1]*weight;\n\t\t\t\ttangents[index++] += this._faceTangents[f2]*weight;\n\t\t\t\ttangents[index] += this._faceTangents[f3]*weight;\n\t\t\t\tf1 += 3;\n\t\t\t\tf2 += 3;\n\t\t\t\tf3 += 3;\n\t\t\t}\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\n\t\t\t//average tangents collections\n\t\t\twhile (index < lenV) {\n\t\t\t\tvar vx:number = tangents[index];\n\t\t\t\tvar vy:number = tangents[index + 1];\n\t\t\t\tvar vz:number = tangents[index + 2];\n\t\t\t\tvar d:number = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index] = vx*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 1] = vy*d;\n\t\t\t\t\tthis._vertexTangents[i++] = tangents[index + 2] = vz*d;\n\t\t\t\t} else {\n\t\t\t\t\ttangents[index] = vx*d;\n\t\t\t\t\ttangents[index + 1] = vy*d;\n\t\t\t\t\ttangents[index + 2] = vz*d;\n\t\t\t\t}\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyTangentsUpdate();\n\n\t\tthis._vertexTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic updateUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif ((this._uvs == null || values == null) && (this._uvs != null || values != null)) {\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\tthis._uvs = values;\n\n\t\t\tif (values != null && this._concatenateArrays) {\n\t\t\t\ti = 0;\n\t\t\t\tindex = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\t\t\t\tuvs = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tuvs[index] = values[i++];\n\t\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._uvs == null) {\n\t\t\t\tthis._uvs = new Array<number>(this._positions.length*2/3);\n\n\t\t\t\tif (this._concatenateArrays)\n\t\t\t\t\tthis._pNotifyVerticesUpdate();\n\t\t\t\telse\n\t\t\t\t\tthis._pStrideOffsetDirty = true;\n\t\t\t}\n\n\t\t\toffset = this.getOffset(TriangleSubGeometry.UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.UV_DATA);\n\n\t\t\t//autoderived uvs\n\t\t\tuvs = this._concatenateArrays? this._pVertices : this._uvs;\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tvar uvIdx:number = 0;\n\n\t\t\t//clear uv values\n\t\t\tvar lenV:number = uvs.length;\n\t\t\twhile (index < lenV) {\n\t\t\t\tif (this._concatenateArrays) {\n\t\t\t\t\tthis._uvs[i++] = uvs[index] = uvIdx*.5;\n\t\t\t\t\tthis._uvs[i++] = uvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t} else {\n\t\t\t\t\tuvs[index] = uvIdx*.5;\n\t\t\t\t\tuvs[index + 1] = 1.0 - (uvIdx & 1);\n\t\t\t\t}\n\n\t\t\t\tif (++uvIdx == 3)\n\t\t\t\t\tuvIdx = 0;\n\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyTangentsUpdate();\n\n\t\tthis.notifyUVsUpdate();\n\n\t\tthis._uvsDirty = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic updateSecondaryUVs(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._secondaryUVs == null || values == null) && (this._secondaryUVs != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._secondaryUVs = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.SECONDARY_UV_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tuvs = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tuvs[index] = values[i++];\n\t\t\t\tuvs[index + 1] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifySecondaryUVsUpdate();\n\n\t\tthis._secondaryUVsDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic updateJointIndices(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointIndices:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointIndices == null || values == null) && (this._jointIndices != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointIndices = values;\n\n\t\tif (values != null) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_INDEX_DATA);\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\ti = 0;\n\t\t\t\tj = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._concatenateArrays? this._pVertices : this._condensedJointIndices;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tif (!this._concatenateArrays)\n\t\t\t\t\tthis._condensedJointIndices = new Array<number>(values.length);\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tfor (j = 0; j < this._jointsPerVertex; j++) {\n\t\t\t\t\t\toldIndex = values[i++];\n\n\t\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\t\tdic[oldIndex] = newIndex*3; //3 required for the three vectors that store the matrix\n\t\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjointIndices[index + j] = dic[oldIndex];\n\t\t\t\t\t}\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t\tthis._numCondensedJoints = newIndex;\n\t\t\t} else if (this._concatenateArrays) {\n\n\t\t\t\ti = 0;\n\t\t\t\tindex = offset;\n\t\t\t\tjointIndices = this._pVertices;\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\t\tjointIndices[index + j++] = values[i++];\n\t\t\t\t\tindex += stride;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointIndicesUpdate();\n\n\t\tthis._jointIndicesDirty = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic updateJointWeights(values:Array<number>)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar jointWeights:Array<number>;\n\n\t\tif (this._concatenateArrays && (this._jointWeights == null || values == null) && (this._jointWeights != null || values != null))\n\t\t\tthis._pNotifyVerticesUpdate();\n\n\t\tthis._jointWeights = values;\n\n\t\tif (values != null && this._concatenateArrays) {\n\t\t\toffset = this.getOffset(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\t\t\tstride = this.getStride(TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\t\ti = 0;\n\t\t\tindex = offset;\n\t\t\tjointWeights = this._pVertices;\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tj = 0;\n\t\t\t\twhile (j < this._jointsPerVertex)\n\t\t\t\t\tjointWeights[index + j++] = values[i++];\n\t\t\t\tindex += stride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyJointWeightsUpdate();\n\n\t\tthis._jointWeightsDirty = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._vertexNormals = null;\n\t\tthis._vertexTangents = null;\n\t\tthis._uvs = null;\n\t\tthis._secondaryUVs = null;\n\t\tthis._jointIndices = null;\n\t\tthis._jointWeights = null;\n\n\t\tthis._faceNormals = null;\n\t\tthis._faceWeights = null;\n\t\tthis._faceTangents = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic updateIndices(indices:Array<number>)\n\t{\n\t\tsuper.updateIndices(indices);\n\n\t\tthis._faceNormalsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenateArrays);\n\t\tclone.updateIndices(this._pIndices.concat());\n\t\tclone.updatePositions(this._positions.concat());\n\n\t\tif (this._vertexNormals && !this._autoDeriveNormals)\n\t\t\tclone.updateVertexNormals(this._vertexNormals.concat());\n\t\telse\n\t\t\tclone.updateVertexNormals(null);\n\n\t\tif (this._uvs && !this._autoDeriveUVs)\n\t\t\tclone.updateUVs(this._uvs.concat());\n\t\telse\n\t\t\tclone.updateUVs(null);\n\n\t\tif (this._vertexTangents && !this._autoDeriveTangents)\n\t\t\tclone.updateVertexTangents(this._vertexTangents.concat());\n\t\telse\n\t\t\tclone.updateVertexTangents(null);\n\n\t\tif (this._secondaryUVs)\n\t\t\tclone.updateSecondaryUVs(this._secondaryUVs.concat());\n\n\t\tif (this._jointIndices) {\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\t\t\tclone.updateJointIndices(this._jointIndices.concat());\n\t\t}\n\n\t\tif (this._jointWeights)\n\t\t\tclone.updateJointWeights(this._jointWeights.concat());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar uvs:Array<number>;\n\n\t\tuvs = this._uvs;\n\n\t\tvar ratioU:number = scaleU/this._scaleU;\n\t\tvar ratioV:number = scaleV/this._scaleV;\n\n\t\tthis._scaleU = scaleU;\n\t\tthis._scaleV = scaleV;\n\n\t\tvar len:number = uvs.length;\n\n\t\toffset = 0;\n\t\tstride = 2;\n\n\t\tindex = offset;\n\n\t\twhile (index < len) {\n\t\t\tuvs[index] *= ratioU;\n\t\t\tuvs[index + 1] *= ratioV;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyUVsUpdate();\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar i:number;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\t\tvar positions:Array<number>;\n\n\t\tpositions = this._positions;\n\n\t\tvar len:number = positions.length;\n\n\t\toffset = 0;\n\t\tstride = 3;\n\n\t\ti = 0;\n\t\tindex = offset;\n\t\twhile (i < len) {\n\t\t\tpositions[index] *= scale;\n\t\t\tpositions[index + 1] *= scale;\n\t\t\tpositions[index + 2] *= scale;\n\n\t\t\ti += 3;\n\t\t\tindex += stride;\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tif (this._concatenateArrays) {\n\t\t\tpositions = this._pVertices;\n\t\t\tnormals = this._pVertices;\n\t\t\ttangents = this._pVertices;\n\t\t} else {\n\t\t\tpositions = this._positions;\n\t\t\tnormals = this._vertexNormals;\n\t\t\ttangents = this._vertexTangents;\n\t\t}\n\n\t\tvar len:number = this._positions.length/3;\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\n\t\tvar bakeNormals:boolean = this._vertexNormals != null;\n\t\tvar bakeTangents:boolean = this._vertexTangents != null;\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (bakeNormals || bakeTangents) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = this.getOffset(TriangleSubGeometry.POSITION_DATA);\n\t\tvar ni0:number = this.getOffset(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar ti0:number = this.getOffset(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tvar vStride:number = this.getStride(TriangleSubGeometry.POSITION_DATA);\n\t\tvar nStride:number = this.getStride(TriangleSubGeometry.NORMAL_DATA);\n\t\tvar tStride:number = this.getStride(TriangleSubGeometry.TANGENT_DATA);\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\n\t\t\t// bake position\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += vStride;\n\n\t\t\t// bake normal\n\t\t\tif (bakeNormals) {\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += nStride;\n\t\t\t}\n\n\t\t\t// bake tangent\n\t\t\tif (bakeTangents) {\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tStride;\n\t\t\t}\n\t\t}\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\tvar positions:Array<number> = this._positions\n\t\tvar uvs:Array<number> = this._uvs;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceTangents == null)\n\t\t\tthis._faceTangents = new Array<number>(len);\n\n\t\twhile (i < len) {\n\t\t\tindex1 = this._pIndices[i];\n\t\t\tindex2 = this._pIndices[i + 1];\n\t\t\tindex3 = this._pIndices[i + 2];\n\n\t\t\tv0 = uvs[index1*2 + 1];\n\t\t\tdv1 = uvs[index2*2 + 1] - v0;\n\t\t\tdv2 = uvs[index3*2 + 1] - v0;\n\n\t\t\tvi = index1*3;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*3;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*3;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tthis._faceTangents[i++] = denom*cx;\n\t\t\tthis._faceTangents[i++] = denom*cy;\n\t\t\tthis._faceTangents[i++] = denom*cz;\n\t\t}\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar index:number;\n\t\tvar offset:number;\n\t\tvar stride:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\tvar positions:Array<number> = this._positions;\n\n\t\tvar len:number = this._pIndices.length;\n\n\t\tif (this._faceNormals == null)\n\t\t\tthis._faceNormals = new Array<number>(len);\n\n\t\tif (this._useFaceWeights && this._faceWeights == null)\n\t\t\tthis._faceWeights = new Array<number>(len/3);\n\n\t\twhile (i < len) {\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = this._pIndices[i++]*3;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tif (this._useFaceWeights) {\n\t\t\t\tvar w:number = d*10000;\n\n\t\t\t\tif (w < 1)\n\t\t\t\t\tw = 1;\n\n\t\t\t\tthis._faceWeights[k++] = w;\n\t\t\t}\n\n\t\t\td = 1/d;\n\n\t\t\tthis._faceNormals[j++] = cx*d;\n\t\t\tthis._faceNormals[j++] = cy*d;\n\t\t\tthis._faceNormals[j++] = cz*d;\n\t\t}\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _pNotifyVerticesUpdate()\n\t{\n\t\tthis._pStrideOffsetDirty = true;\n\n\t\tthis.notifyPositionsUpdate();\n\t\tthis.notifyNormalsUpdate();\n\t\tthis.notifyTangentsUpdate();\n\t\tthis.notifyUVsUpdate();\n\t\tthis.notifySecondaryUVsUpdate();\n\t\tthis.notifyJointIndicesUpdate();\n\t\tthis.notifyJointWeightsUpdate();\n\t}\n\n\tprivate notifyPositionsUpdate()\n\t{\n\t\tif (this._positionsDirty)\n\t\t\treturn;\n\n\t\tthis._positionsDirty = true;\n\n\t\tif (!this._positionsUpdated)\n\t\t\tthis._positionsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.POSITION_DATA);\n\n\t\tthis.dispatchEvent(this._positionsUpdated);\n\t}\n\n\tprivate notifyNormalsUpdate()\n\t{\n\t\tif (this._vertexNormalsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexNormalsDirty = true;\n\n\t\tif (!this._normalsUpdated)\n\t\t\tthis._normalsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.NORMAL_DATA);\n\n\t\tthis.dispatchEvent(this._normalsUpdated);\n\t}\n\n\tprivate notifyTangentsUpdate()\n\t{\n\t\tif (this._vertexTangentsDirty)\n\t\t\treturn;\n\n\t\tthis._vertexTangentsDirty = true;\n\n\t\tif (!this._tangentsUpdated)\n\t\t\tthis._tangentsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.TANGENT_DATA);\n\n\t\tthis.dispatchEvent(this._tangentsUpdated);\n\t}\n\n\tprivate notifyUVsUpdate()\n\t{\n\t\tif (this._uvsDirty)\n\t\t\treturn;\n\n\t\tthis._uvsDirty = true;\n\n\t\tif (!this._uvsUpdated)\n\t\t\tthis._uvsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.UV_DATA);\n\n\t\tthis.dispatchEvent(this._uvsUpdated);\n\t}\n\n\tprivate notifySecondaryUVsUpdate()\n\t{\n\t\tif (this._secondaryUVsDirty)\n\t\t\treturn;\n\n\t\tthis._secondaryUVsDirty = true;\n\n\t\tif (!this._secondaryUVsUpdated)\n\t\t\tthis._secondaryUVsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.SECONDARY_UV_DATA);\n\n\t\tthis.dispatchEvent(this._secondaryUVsUpdated);\n\t}\n\n\tprivate notifyJointIndicesUpdate()\n\t{\n\t\tif (this._jointIndicesDirty)\n\t\t\treturn;\n\n\t\tthis._jointIndicesDirty = true;\n\n\t\tif (!this._jointIndicesUpdated)\n\t\t\tthis._jointIndicesUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_INDEX_DATA);\n\n\t\tthis.dispatchEvent(this._jointIndicesUpdated);\n\t}\n\n\tprivate notifyJointWeightsUpdate()\n\t{\n\t\tif (this._jointWeightsDirty)\n\t\t\treturn;\n\n\t\tthis._jointWeightsDirty = true;\n\n\t\tif (!this._jointWeightsUpdated)\n\t\t\tthis._jointWeightsUpdated = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, TriangleSubGeometry.JOINT_WEIGHT_DATA);\n\n\t\tthis.dispatchEvent(this._jointWeightsUpdated);\n\t}\n}\n\nexport = TriangleSubGeometry;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\n\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.TRIANGLE_SUB_MESH;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\trenderer.applyTriangleSubMesh(this);\n\t}\n}\n\nexport = TriangleSubMesh;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tprivate _mouseChildren:boolean = true;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CONTAINER;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildInternal(child);\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._children.push(child);\n\n\t\treturn child;\n\t}\n\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\n\t{\n\t\treturn child;\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = name;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildInternal(child);\n\n\t\tchild.iSetParent(null);\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChild(this._children[index]);\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateScene(value:Scene)\n\t{\n\t\tsuper._pUpdateScene(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateScene(value);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\n\t{\n\t\tthis._children.splice(this.getChildIndex(child), 1);\n\n\t\treturn child;\n\t}\n}\n\nexport = DisplayObjectContainer;","import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loadingSessions:Array<AssetLoader>;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\n\t\tthis._loadingSessions = new Array<AssetLoader>();\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.stopAllLoadingSessions();\n\t\t\tthis._loadingSessions = null;\n\t\t\treturn\n\t\t}\n\t\tvar i:number /*int*/;\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\n\t\tfor (i = 0; i < length; i++) {\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\n\t\t\tthis._loadingSessions[i].stop();\n\t\t\tthis._loadingSessions[i] = null;\n\t\t}\n\t\tthis._loadingSessions = null;\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, AssetLoader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.load(request, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.load(request, context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\n\t{\n\t\tvar token:AssetLoaderToken;\n\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\n\t\t} else {\n\t\t\tvar loader:AssetLoader = new AssetLoader();\n\t\t\tthis._loadingSessions.push(loader);\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\n\t\t}\n\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\ttoken._iLoader._iAddErrorHandler(this.onLoadError);\n\t\ttoken._iLoader._iAddParseErrorHandler(this.onParseError);\n\n\t\treturn token;\n\t}\n\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tAssetLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tAssetLoader.enableParsers(parserClasses);\n\t}\n\n\n\tprivate removeListeners(dispatcher:EventDispatcher)\n\t{\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:LoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\t}\n}\n\nexport = Loader;","import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = new Partition(new NodeBase());\n\t}\n\n\tpublic traversePartitions(traverser:ICollector)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\twhile (i < len) {\n\t\t\tthis._iCollectionMark++;\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t\t}\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.partition)\n\t\t\tthis.iRegisterPartition(displayObject.partition);\n\n\t\tif (displayObject.isEntity)\n\t\t\tdisplayObject._iAssignedPartition.iMarkForUpdate(displayObject);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.partition)\n\t\t\tthis.iUnregisterPartition(displayObject.partition);\n\n\t\tif (displayObject.isEntity)\n\t\t\tdisplayObject._iAssignedPartition.iRemoveEntity(displayObject);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:ICollector;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.partition = this.scene.partition;\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pCamera.partition = this._pScene.partition;\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.partition = this._pScene.partition;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():ICollector\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;","import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject && this._pTargetObject._iAssignedPartition && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iAssignedPartition.iMarkForUpdate(this._pTargetObject);\n\t\t}\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\n\t\t\tthis._pTargetObject._iController = this;\n\t\t}\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pTargetObject) {\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\t} else {\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = ControllerBase;","import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;","import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tinterpolate = interpolate; // unused: prevents warning\n\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;","import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis.pNotifyUpdate();\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;","import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;","class ContextMode\n{\n\tstatic AUTO:string = \"auto\";\n\tstatic WEBGL:string = \"webgl\";\n\tstatic FLASH:string = \"flash\";\n\tstatic NATIVE:string = \"native\";\n}\n\nexport = ContextMode;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport EntityNode\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a BitmapData object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its BitmapData reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same BitmapData object,\n * multiple display objects can use the same complex BitmapData object without\n * incurring the memory overhead of a BitmapData object for each display\n * object instance.</p>\n *\n * <p>A BitmapData object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IMaterialOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.BILLBOARD;\n\t}\n\n\t/**\n\t * The BitmapData object being referenced.\n\t */\n\tpublic bitmapData:BitmapData; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new EntityNode(this);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromExtremes(0, 0, 0, this._billboardWidth, this._billboardHeight, 0);\n\n\t\tsuper.pUpdateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._pBoundsInvalid = true;\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateVertexData(\"vertices\"); //TODO\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\trenderer.applyBillboard(this);\n\t}\n}\n\nexport = Billboard;","import BoundingVolumeBase\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport ProjectionEvent\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport CameraNode\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport EntityNode\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t}\n\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new CameraNode(this);\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.CAMERA;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBoundsInvalid = false;\n\t\tthis._pBounds.nullify();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;","import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t/**\n\t *\n\t * @returns {away.bounds.NullBounds}\n\t */\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\t//directional lights are to be considered global, hence always in view\n\t\treturn new NullBounds();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new DirectionalLightNode(this);\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar bounds:BoundingVolumeBase = entity.bounds;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(bounds.aabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = DirectionalLight;","import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:CubeTextureBase;\n\tprivate _specularMap:CubeTextureBase;\n\n\tconstructor(diffuseMap:CubeTextureBase, specularMap:CubeTextureBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\t}\n\n\tpublic get diffuseMap():CubeTextureBase\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:CubeTextureBase)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():CubeTextureBase\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:CubeTextureBase)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new LightProbeNode(this);\n\t}\n\n\t//@override\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\t//@override\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds();\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = LightProbe;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IMaterialOwner\n{\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LINE_SEGMENT;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new EntityNode(this);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromExtremes(this._startPosition.x, this._startPosition.y, this._startPosition.z, this._endPosition.x, this._endPosition.y, this._endPosition.z);\n\n\t\tsuper.pUpdateBounds();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateVertexData(\"vertices\"); //TODO\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tthis._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = LineSegment;","﻿import UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MESH;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(this._geometry, this._material);\n\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.bounds = this.bounds.clone();\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tlen = this.numChildren;\n\t\tvar obj:any;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tobj = this.getChildAt(i).clone();\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tclone.animator = this._animator.clone();\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new EntityNode(this);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Array<number>;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tminX = maxX = boundingPositions[i];\n\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < minZ)\n\t\t\t\t\t\tminZ = p;\n\t\t\t\t\telse if (p > maxZ)\n\t\t\t\t\t\tmaxZ = p;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBounds.fromExtremes(minX, minY, minZ, maxX, maxY, maxZ);\n\t\t} else {\n\t\t\tthis._pBounds.fromExtremes(0, 0, 0, 0, 0, 0);\n\t\t}\n\n\t\tsuper.pUpdateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis.pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = subGeometry.subMeshClass;\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis.pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testMeshCollision(this, this._pPickingCollisionVO, shortestCollisionDistance, findClosest);\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\tthis._subMeshes[i]._iCollectRenderable(renderer);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n}\n\nexport = Mesh;","import BoundingSphere\t\t\t\t= require(\"awayjs-core/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis.pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis.pInvalidateBounds();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():EntityNode\n\t{\n\t\treturn new PointLightNode(this);\n\t}\n\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBounds.fromSphere(new Vector3D(), this._pFallOff);\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\t//point lights are culled based on their falloff radius\n\t\treturn new BoundingSphere();\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar bounds:BoundingVolumeBase = entity.bounds;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = bounds.aabb;\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n}\n\nexport = PointLight;","import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = Shape;","import BoundingVolumeBase\t\t\t= require(\"awayjs-core/lib/bounds/BoundingVolumeBase\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-core/lib/bounds/NullBounds\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IMaterialOwner\n{\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(material:MaterialBase)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\t}\n\n/**\n * The material with which to render the Skybox.\n */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material)\n\t\t\tthis._material.iRemoveOwner(<IMaterialOwner> this);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tthis._material.iAddOwner(<IMaterialOwner> this);\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SKYBOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\t// dead end\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateEntityPartitionNode():SkyboxNode\n\t{\n\t\treturn new SkyboxNode(this);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pCreateDefaultBoundingVolume():BoundingVolumeBase\n\t{\n\t\treturn <BoundingVolumeBase> new NullBounds();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateBounds()\n\t{\n\t\tthis._pBoundsInvalid = false;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\tpublic _iCollectRenderables(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iCollectRenderable(renderer:IRenderer)\n\t{\n\n\t}\n}\n\nexport = Skybox;","import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends DisplayObject\n{\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\t/**\n\t * The height of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t * \n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = TextField;","import UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t    = require(\"awayjs-core/lib/library/IAsset\");\r\n//import Transform\t\t\t\t    = require(\"awayjs-core/lib/geom/Transform\");\r\nimport Matrix3D\t\t\t\t\t    = require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix\t\t\t\t\t    = require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport SubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport DisplayObjectContainer\t\t = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport TimeLineFrame\t\t        = require(\"awayjs-display/lib/entities/timelinedata/TimeLineFrame\");\r\nimport TimeLineObject\t\t        = require(\"awayjs-display/lib/entities/timelinedata/TimeLineObject\");\r\n\r\n/**\r\n * Timeline is a DisplayObjectContainer, that can control the animation of a list of TimeLineObjects.\r\n * For now, the focus of Development is on animating the new type of 2D-Geometry exported from FlashPro,\r\n * but there is no reason that this cannot be used to animate any type of object, that implements IAsset.\r\n**/\r\nclass TimeLine extends DisplayObjectContainer\r\n{\r\n    // pool of available TimeLineObject-objects for this timeline.\r\n    // Each TImeLineObject hold reference to a pre-instanced (cloned) IAsset,\r\n    // so we do not have to do any cloning while playing.\r\n    // If a IAsset is of a type that extends DisplayObject, it gets added as Child, with .visible=false\r\n    // we need this list, and can not use the children-list directly,\r\n    // because TimeLine needs to be able to control IAsset that to not extend DisplayObject.\r\n    private _timeLineObjs:Array<TimeLineObject>;\r\n\r\n    private _frames:Array<TimeLineFrame>;\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrame:number;// the current frame\r\n    private _speed:number;// the speed of animation. for now keep it positive, as reverse playing will need changes to the commands\r\n    private _fps:number;// we use ms internally, but have fps, so user can set time by frame\r\n    private _isplaying:boolean;// false if paused or stopped\r\n    private _isInit:boolean;// false if paused or stopped\r\n    private _playMode:number;// 0: normal, 1: loop, 2: pingpong\r\n    private _duration:number=0;\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this._timeLineObjs=new Array<TimeLineObject>();\r\n        this._frames=new Array<TimeLineFrame>();\r\n        this._currentFrame=0;\r\n        this._speed=1.0;\r\n        this._isplaying=false;\r\n        this._fps=25;\r\n        this._time=0;\r\n        this._duration=0;\r\n        this._playMode=1;\r\n    }\r\n\r\n    public get speed():number\r\n    {\r\n        return this._speed;\r\n    }\r\n    public set speed(newSpeed:number)\r\n    {\r\n        this._speed=newSpeed;\r\n    }\r\n    public get fps():number\r\n    {\r\n        return this._fps;\r\n    }\r\n    public set fps(newFps:number)\r\n    {\r\n        this._fps=newFps;\r\n    }\r\n    public get assetType():string\r\n    {\r\n      return AssetType.TIMELINE;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update(timeDelta:number, jumpingToFrame:boolean=false)\r\n    {\r\n        var tlo:number;\r\n        // only update if playing, or if not init before, or if jumping to frame\r\n        if((this._isplaying)||(!this._isInit)||(jumpingToFrame)) {\r\n\r\n            // multiply the timeDelta with the speed (can be negative)\r\n            // update the this._time accordingly\r\n            var timeDelta:number = timeDelta * this._speed;\r\n            this._time += timeDelta;\r\n            // take care that the _time is within bounds\r\n            while(this._time>this._duration){\r\n                if(this._playMode==0){\r\n                    this._time=this._duration;\r\n                    this.stop();\r\n                }\r\n                else if(this._playMode==1){\r\n                    this._time-=this._duration;\r\n                }\r\n            }\r\n            while(this._time<0){\r\n                if(this._playMode==0){\r\n                    this._time=0;\r\n                    this.stop();\r\n                }\r\n                else if(this._playMode==1) {\r\n                    this._time += this._duration;\r\n                }\r\n            }\r\n\r\n\r\n            // now we know the exact time of the animation that we want to display.\r\n            // next we need to decide which Frame needs to be displayed. (index in Array)\r\n            // this should always be currentFrame, or currentFrame++\r\n            // each frame has startTime and EndTime, so we can easily decide\r\n            var frameCnt:number = 0;\r\n            var curFrame:TimeLineFrame;\r\n            var foundFrame:Boolean = false;\r\n            // this while loop should only be executed 1-2 times\r\n            while (frameCnt < this._frames.length) {\r\n                curFrame = this._frames[this._currentFrame];\r\n                //console.log(\"searchForFrame==\"+this._time+\" startTime= \"+curFrame.startTime+\" endTime = \"+curFrame.endTime);\r\n\r\n                if ((this._time >= curFrame.startTime) && (this._time <= curFrame.endTime)) {\r\n                    foundFrame = true;\r\n                    frameCnt = this._frames.length;\r\n                }\r\n                else {\r\n                    curFrame.makeDirty();// make sure the frame gets executed next time it should show\r\n                    if (this._speed < 0) {\r\n                        this._currentFrame--;\r\n                        if (this._currentFrame < 0) {\r\n                            this._currentFrame = this._frames.length - 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._currentFrame++;\r\n                        if (this._currentFrame >= this._frames.length) {\r\n                            this._currentFrame = 0;\r\n                        }\r\n                    }\r\n                }\r\n                frameCnt++;\r\n            }\r\n            //console.log(\"foundframe=\"+foundFrame+\" thistime= \"+this._time+\" frameIDX = \"+this._currentFrame);\r\n\r\n            // if foundFrame is true, curFrame is the frame to display.\r\n            if (foundFrame) {\r\n                //console.log(\"Frame dirty=\"+curFrame.isDirty);\r\n                if(curFrame.isDirty) {\r\n                    //console.log(\"Reset isOnStage value\");\r\n                    // reset the \"isOnStage\" state for all the objects\r\n\r\n                    var commandSet:number=1;// 1 = execute normal playback commands\r\n                    if(this._speed<0){\r\n                        commandSet=2;//2 = execute reversed playback commands\r\n                    }\r\n                    // if we are jumping Frames, we need to hide all objects and fully init\r\n                    //if(jumpingToFrame) {\r\n                        commandSet = 0;//0 = execute full init frame commands\r\n                        for (tlo = 0; tlo < this._timeLineObjs.length; tlo++) {\r\n                            if (this._timeLineObjs[tlo].isActive) {\r\n                                this._timeLineObjs[tlo].deactivate();\r\n                            }\r\n                        }\r\n                   // }\r\n                    //todo: use the correct set of commands (for now we always use set 1)\r\n                    curFrame.executeCommands(1, this._time, this._speed);\r\n\r\n                    // now we have all objects on stage, we can execute the frame script for this frame\r\n                    this.executeFrameScript(curFrame.script);\r\n\r\n                }\r\n                else{\r\n                    // the frame has already been initiated.\r\n                    // for now we do nothing\r\n                    // later we might want to implement interpolation here\r\n                }\r\n            }\r\n            this._isInit=true;\r\n        }\r\n        // update all the visible TimeLineObjects that are of type timeline\r\n        for (tlo=0; tlo<this._timeLineObjs.length;tlo++){\r\n            if(this._timeLineObjs[tlo].isActive){\r\n                if(this._timeLineObjs[tlo].asset.assetType==AssetType.TIMELINE){\r\n                    (<TimeLine>this._timeLineObjs[tlo].asset).update(timeDelta);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    /**\r\n     * Add a new TimeLineFrame.\r\n     */\r\n    public addFrame(newFrame:TimeLineFrame)\r\n    {\r\n        this._duration+=newFrame.duration;\r\n        this._frames.push(newFrame);\r\n    }\r\n    public get duration():number\r\n    {\r\n        return this._duration;\r\n    }\r\n    public set duration(newDuration:number)\r\n    {\r\n        this._duration=newDuration;\r\n    }\r\n    /**\r\n     * This is called inside the TimeLineFrame.execute() function.\r\n     */\r\n    public executeFrameScript(frameScript:string)\r\n    {\r\n\r\n        // this function should interpret the framescript.\r\n        // the timeline object offer functions getObjectByInstanceName(instanceName:string)\r\n        // a nested movieClip like \"mainWindow.clip1\" could be accessed like this:\r\n        // getObjectByInstanceName(\"mainWindow\").getObjectByInstanceName(\"clip1\")\r\n\r\n        // the AssetLibrary can be used as equivalent for the flash-library.\r\n        // it already has options to access library-assets by name, so i think we can work with that.\r\n\r\n    }\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public start() {\r\n        this._isplaying=true;\r\n        this.update(0);\r\n    }\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop() {\r\n        this._isplaying=false;// no need to call any other stuff\r\n    }\r\n\r\n    /**\r\n     * Classic gotoAndPlay like as3 api - set frame by frame-number.\r\n     */\r\n    public gotoAndPlay(frameNumber:number){\r\n        this._time=frameNumber*(1000/this._fps);\r\n        this._isplaying=true;\r\n        this.update(0, true);\r\n    }\r\n    /**\r\n     * Classic gotoAndStop as3 api - set frame by frame-number.\r\n     */\r\n    public gotoAndStop(frameNumber:number){\r\n        this._time=frameNumber*(1000/this._fps);\r\n        this.update(0, true);\r\n        this._isplaying=false;//stop playback again\r\n    }\r\n    /**\r\n     * gotoAndPlay - set frame by frame-label.\r\n     */\r\n    public gotoAndPlayLabel(frameLabel:string) {\r\n        var frameNumber:number = -1;\r\n        for (var i:number = 0; i < this._frames.length; i++) {\r\n            for (var fl:number = 0; fl < this._frames[i].framelabels.length; fl++) {\r\n                if (this._frames[i].framelabels[fl] == frameLabel) {\r\n                    fl = this._frames[i].framelabels.length;\r\n                    frameNumber = i;\r\n                    i = this._frames.length;\r\n                }\r\n            }\r\n        }\r\n        if (frameNumber >= 0) {\r\n            this._time = frameNumber * (1000 / this._fps);\r\n            this._isplaying = true;\r\n            this.update(0, true);\r\n        }\r\n    }\r\n    /**\r\n     * gotoAndStop - set frame by frame-label.\r\n     */\r\n    public gotoAndStopLabel(frameLabel:string) {\r\n        var frameNumber:number = -1;\r\n        for (var i:number = 0; i < this._frames.length; i++) {\r\n            for (var fl:number = 0; fl < this._frames[i].framelabels.length; fl++) {\r\n                if (this._frames[i].framelabels[fl] == frameLabel) {\r\n                    fl = this._frames[i].framelabels.length;\r\n                    frameNumber = i;\r\n                    i = this._frames.length;\r\n                }\r\n            }\r\n        }\r\n        if (frameNumber >= 0) {\r\n            this._time = frameNumber * (1000 / this._fps);\r\n            this.update(0, true);\r\n            this._isplaying = false;\r\n        }\r\n    }\r\n    /**\r\n     * gotoAndPlay - set time in ms.\r\n     */\r\n    public gotoAndPlayTime(time:number){\r\n        this._time=time;\r\n        this._isplaying=true;\r\n        this.update(0, true);\r\n    }\r\n    /**\r\n     * gotoAndStop - set time in ms.\r\n     */\r\n    public gotoAndStopTime(time:number){\r\n        this._time=time;\r\n        this.update(0, true);\r\n        this._isplaying=false;//stop playback again\r\n    }\r\n\r\n    public addTimeLineObject(newTlObj:TimeLineObject, isDisplayObj:boolean=true) {\r\n        if (isDisplayObj) {\r\n            this.addChild(<DisplayObjectContainer>newTlObj.asset);\r\n        }\r\n        newTlObj.deactivate();\r\n        this._timeLineObjs.push(newTlObj);\r\n    }\r\n    public getTimeLineObjectByID(objID:number):TimeLineObject\r\n    {\r\n        for (var tlo:number=0; tlo<this._timeLineObjs.length;tlo++){\r\n            if(this._timeLineObjs[tlo].objID==objID){\r\n                return this._timeLineObjs[tlo];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    public getObjectByInstanceName(instanceName:string):IAsset\r\n    {\r\n        for (var tlo:number=0; tlo<this._timeLineObjs.length;tlo++){\r\n            if(this._timeLineObjs[tlo].asset.name==instanceName){\r\n                return this._timeLineObjs[tlo].asset;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport = TimeLine;\r\n","/**\r\n * BaseClass for CommandProperties. Should not be instantiated directly.\r\n */\r\nclass CommandPropsBase\r\n{\r\n    constructor()\r\n    {\r\n    }\r\n    public deactivate(thisObj):void\r\n    {\r\n        // should be overwritten\r\n    }\r\n    public apply(thisObj, time:number, speed:number):void\r\n    {\r\n        // should be overwritten\r\n    }\r\n\r\n}\r\n\r\nexport = CommandPropsBase;\r\n","import Matrix3D = require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport CommandPropsBase = require(\"awayjs-display/lib/entities/timelinedata/CommandPropsBase\");\r\nimport InterpolationObject = require(\"awayjs-display/lib/entities/timelinedata/InterpolationObject\");\r\n\r\nclass CommandPropsDisplayObject extends CommandPropsBase\r\n{\r\n    private _doDisplaymatrix:number;//0:doNothing, 1:absolute,2:interpolate\r\n    // if _doDisplaymatrix is 1:absolute, we need access to the Matrix3D\r\n    // if _doDisplaymatrix is 2:interpolate, we need access to a \"interpolation\"-Object know the matrix to set\r\n    private _displayMatrix:Matrix3D;//for 2D objects we also use 3d-matrix for now...we have no 2d objects :)\r\n    private _displayMatrixInterpolate:InterpolationObject;\r\n\r\n    private _doColorTransform:number;//0:doNothing, 1:absolute,2:interpolate\r\n    // if _doColorTransform is 1:absolute, we need access to the ColorTransform\r\n    // if _doColorTransform is 2:interpolate, we need access to a \"interpolation\"-Object know the matrix to set\r\n    private _colorTransform:ColorTransform;\r\n    private _colorTransformInterpolate:InterpolationObject;\r\n\r\n    private _doDepth:boolean;\r\n    private _depth:number;// todo: how to handle depth best\r\n\r\n    private _doFilters:boolean;\r\n    private _filter:number;//todo: how to handle filter\r\n\r\n    private _doBlendMode:boolean;\r\n    private _blendMode:number;\r\n\r\n    private _doDepthClip:boolean;\r\n    private _depthClip:number;\r\n\r\n    private _doInstanceName:boolean;\r\n    private _instanceName:string;\r\n    constructor()\r\n    {\r\n        super();\r\n        this._doDisplaymatrix=0;\r\n        this._doColorTransform=0;\r\n\r\n        this._doInstanceName=false;\r\n        this._doDepth=false;\r\n        this._doFilters=false;\r\n        this._doDepthClip=false;\r\n        this._doBlendMode=false;\r\n    }\r\n    public setBlendMode( blendMode:number) {\r\n        this._blendMode = blendMode;\r\n        this._doBlendMode = true;\r\n    }\r\n    public setClipDepth( clipDepth:number) {\r\n        this._depthClip = clipDepth;\r\n        this._doDepthClip = true;\r\n    }\r\n    //todo:handle filters\r\n    public setFilter( filter) {\r\n        this._filter = filter;\r\n        this._doFilters = true;\r\n    }\r\n    public setDepth( depth:number) {\r\n        this._depth = depth;\r\n        this._doDepth = true;\r\n    }\r\n    public setDisplaymatrixInterpolate( interpolate:InterpolationObject) {\r\n        this._displayMatrixInterpolate = interpolate;\r\n        this._doDisplaymatrix = 2;\r\n    }\r\n    public setDisplaymatrix(displayMatrix:Matrix3D) {\r\n        this._displayMatrix = displayMatrix;\r\n        this._doDisplaymatrix = 1;\r\n    }\r\n    public setColorTransform(colorTransform:ColorTransform) {\r\n        this._colorTransform = colorTransform;\r\n        this._doColorTransform = 1;\r\n    }\r\n    public setColorTranformInterpolate( interpolate:InterpolationObject) {\r\n        this._colorTransformInterpolate = interpolate;\r\n        this._doColorTransform = 2;\r\n    }\r\n    public setInstancename(instanceName:string){\r\n        this._instanceName=instanceName;\r\n        this._doInstanceName=true;\r\n    }\r\n    public deactivate(thisObj:DisplayObjectContainer):void\r\n    {\r\n        thisObj.visible=false;\r\n    }\r\n\r\n    public apply(thisObj:DisplayObjectContainer, time:number, speed:number):void\r\n    {\r\n        thisObj.visible=true;\r\n\r\n        if(this._doDisplaymatrix==1){\r\n            thisObj.transform.matrix3D=this._displayMatrix;\r\n        }\r\n        else if(this._doDisplaymatrix==2){\r\n            // TODO\r\n            //thisObj.transform.matrix3D=this._displayMatrixInterpolate.getState(time, speed);\r\n        }\r\n        //todo: check how to apply colortransform (i guess this will be materials of meshes)\r\n        //maybe we must give displayobjectcontainer the functions to pass ColorTransform to children\r\n        if(this._doColorTransform==1){\r\n            //thisObj.=this._colorTransform;\r\n        }\r\n        else if(this._doColorTransform==2){\r\n            //thisObj.transform.matrix3D=this._colorTransformInterpolate.getState(time, speed);\r\n        }\r\n        if(this._doInstanceName){\r\n            thisObj.name=this._instanceName;\r\n        }\r\n        if(this._doDepth){\r\n            // todo: handle depth setting\r\n        }\r\n        if(this._doBlendMode){\r\n            // todo: handle blendMode setting\r\n        }\r\n        if(this._doDepthClip){\r\n            // todo: handle depthClip setting\r\n        }\r\n        if(this._doFilters){\r\n            // todo: handle filter setting\r\n        }\r\n    }\r\n}\r\n\r\nexport = CommandPropsDisplayObject;\r\n","import CommandPropsBase = require(\"awayjs-display/lib/entities/timelinedata/CommandPropsBase\");\r\nimport TimeLineObject = require(\"awayjs-display/lib/entities/timelinedata/TimeLineObject\");\r\n\r\n/**\r\n * FrameCommand associates a TimeLineobject with CommandProps.\r\n * CommandProps can be of different class, depending on the type of Asset that the TimeLineObject references to.\r\n */\r\nclass FrameCommand\r\n{\r\n    private _commandProps:CommandPropsBase;// this hold the data for the command\r\n    private _tlObj:TimeLineObject;// the object to update\r\n    private _activate:boolean;// if this is false, it is a remove command. we call the deactivate function instead of apply\r\n\r\n    constructor(tlObj:TimeLineObject)\r\n    {\r\n        this._tlObj=tlObj;\r\n        this.commandProps=null;\r\n        this._activate=true;\r\n    }\r\n    public set activateObj(newActve:boolean)\r\n    {\r\n        this._activate=newActve;\r\n    }\r\n    public get activateObj():boolean\r\n    {\r\n        return this._activate;\r\n    }\r\n    public set commandProps(newProps:CommandPropsBase)\r\n    {\r\n        this._commandProps=newProps;\r\n    }\r\n    public get commandProps():CommandPropsBase\r\n    {\r\n        return this._commandProps;\r\n    }\r\n    public get tlObj():TimeLineObject\r\n    {\r\n        return this._tlObj;\r\n    }\r\n    public set tlObj(newtlObj:TimeLineObject)\r\n    {\r\n        this._tlObj=newtlObj;\r\n    }\r\n    public execute(time:number, speed:number):void\r\n    {\r\n        if(this.commandProps==undefined)\r\n            return; //commandProps must always be defined\r\n\r\n        // if this is a activate command, we call the apply function of the CommandProps\r\n        if(this._activate){\r\n            this.tlObj.isActive=true;\r\n            this.commandProps.apply(this.tlObj.asset, time, speed);\r\n        }\r\n        // if this is a remove command, we call the deactivate function of the CommandProps\r\n        else{\r\n            this.tlObj.isActive=false;\r\n            this.commandProps.deactivate(this.tlObj.asset);\r\n        }\r\n    }\r\n}\r\n\r\nexport = FrameCommand;\r\n","/**\r\n * TimeLineObject represents a unique object that is (or will be) used by a TimeLine.\r\n *  A TimeLineObject basically consists of an objID, and an IAsset.\r\n *  The FrameCommands hold references to these TimeLineObjects, so they can access and modify the IAssets\r\n\r\n */\r\nclass InterpolationObject\r\n{\r\n    private _type;//0:number , 1: matrix3D, 2: matrix2D, 3:ColorTransform,\r\n    private _startValue;\r\n    private _startTime:number;\r\n    private _endValue;\r\n    private _endTime:number;\r\n    private _duration:number;\r\n\r\n    constructor(type:number, startValue, endValue, startTime:number,endTime:number)\r\n    {\r\n        this._type=type;\r\n        this._startValue=startValue;\r\n        this._startTime=startTime;\r\n        this._endValue=endValue;\r\n        this._duration=endTime-startTime;\r\n    }\r\n\r\n    public getState(time:number, speed:number) {\r\n        // todo: handle reverse playback\r\n        if (time < this._startTime * speed) {\r\n            return;\r\n        }\r\n        if (time > this._endTime * speed) {\r\n            return;\r\n        }\r\n        if (this._type == 0) {\r\n            //interpolate number\r\n            return (this._startValue + (((time - this._startTime) * (this._duration * speed)) * (this._endValue - this._startValue)));\r\n        }\r\n        if (this._type == 1){\r\n            //todo: interpolate matrix3D\r\n        }\r\n        if (this._type == 2) {\r\n            //todo: interpolate Matrix3D, but handle it as 2D object (do not touch z.position)\r\n        }\r\n        if (this._type == 3) {\r\n            //todo: interpolate ColorTransform\r\n        }\r\n        return;\r\n    }\r\n}\r\n\r\nexport = InterpolationObject;\r\n","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\r\nimport IAsset\t\t\t\t\t    = require(\"awayjs-core/lib/library/IAsset\");\r\nimport Matrix3D\t\t\t\t\t    = require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix\t\t\t\t\t    = require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport SubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\r\nimport DisplayObjectContainer\t\t = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Mesh\t\t                    = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport TimeLine = require(\"awayjs-display/lib/entities/TimeLine\");\r\nimport FrameCommand = require(\"awayjs-display/lib/entities/timelinedata/FrameCommand\");\r\n\r\n\r\n/**\r\n * TimelineFrame holds 3 list of FrameCommands\r\n *  - list1 _frameCommands should be  executed when playing the timeline (previous Frame was played)\r\n *  - list2 _frameCommandsReverse should be executed when playing the timeline reversed (previous Frame was played)\r\n *  - list3 _frameCommandsInit should be executed when jumping to a frame, so we need to fully init the frame\r\n *\r\n *  Addionial TimelineFrame properties are:\r\n *  - script - can be executed, after the frameCommands have been executed\r\n *  - list of FrameLabels, and list of corresponding labelTypes\r\n *  - duration-value (1 frame is not necessary 1 frame long)\r\n *  - startTime and endTime are needed internally when deciding what frame to display\r\n */\r\nclass TimeLineFrame\r\n{\r\n    private _script:string;\r\n    private _startTime:number;\r\n    private _endTime:number;\r\n    private _duration:number;\r\n    private _timeline:TimeLine;\r\n    private _frameCommands:Array<FrameCommand>;\r\n    private _frameCommandsReverse:Array<FrameCommand>;\r\n    private _frameCommandsInit:Array<FrameCommand>;\r\n    private _framelabels:Array<string>;\r\n    private _labelTypes:Array<number>;\r\n    private _isDirty:boolean;\r\n\r\n    constructor()\r\n    {\r\n        this._isDirty=true;\r\n        this._script=\"\";\r\n        this._duration=1;//use millisecs for duration ? or frames ?\r\n        this._frameCommands=new Array<FrameCommand>();\r\n        this._frameCommandsReverse=new Array<FrameCommand>();\r\n        this._frameCommandsInit=new Array<FrameCommand>();\r\n        this._framelabels=new Array<string>();\r\n        this._labelTypes=new Array<number>();\r\n    }\r\n    public addCommand(newCommand:FrameCommand)\r\n    {\r\n        // make the timeline available for the commands\r\n        this._frameCommands.push(newCommand);\r\n    }\r\n    public addCommandReverse(newCommand:FrameCommand)\r\n    {\r\n        // make the timeline available for the commands\r\n        this._frameCommandsReverse.push(newCommand);\r\n    }\r\n    public addCommandInit(newCommand:FrameCommand)\r\n    {\r\n        // make the timeline available for the commands\r\n        this._frameCommandsInit.push(newCommand);\r\n    }\r\n    public addLabel(label:string, type:number)\r\n    {\r\n        this._framelabels.push(label);\r\n        this._labelTypes.push(type);\r\n    }\r\n    public get framelabels():Array<string>\r\n    {\r\n        return this._framelabels;\r\n    }\r\n    public get labelTypes():Array<number>\r\n    {\r\n        return this._labelTypes;\r\n    }\r\n    public get script():string\r\n    {\r\n        return this._script;\r\n    }\r\n    public addToScript(newscript:string)\r\n    {\r\n        this._script+=newscript;\r\n    }\r\n\r\n    public get isDirty():boolean\r\n    {\r\n        return this._isDirty;\r\n    }\r\n    public makeDirty():void\r\n    {\r\n        this._isDirty=true;\r\n    }\r\n    public get startTime():number\r\n    {\r\n        return this._startTime;\r\n    }\r\n    public get duration():number\r\n    {\r\n        return this._duration;\r\n    }\r\n    public get endTime():number\r\n    {\r\n        return this._endTime;\r\n    }\r\n    public setFrameTime(startTime:number, duration:number)\r\n    {\r\n        this._startTime=startTime;\r\n        this._duration=duration;\r\n        this._endTime=startTime+duration;\r\n    }\r\n    /**\r\n     * executes the set of Commands for this Frame.\r\n     * Each Frame has 3 sets of commands:\r\n     *  0 = init frame commands = the frame must be init as if previous frame was not played\r\n     *  1 = play frame commands = the previous frame was played\r\n     *  2 = playReverse Commands = the next frame was played\r\n     */\r\n    public executeCommands(commandSet:number, time:number, speed:number){\r\n        // execute all the  frame commands for this frame\r\n        if(commandSet==0){\r\n            //todo: create the frameCommands for init in the parser\r\n            for (var i = 0; i < this._frameCommandsInit.length; i++) {\r\n                this._frameCommandsInit[i].execute(time, speed);\r\n            }\r\n        }\r\n        else if (commandSet==1) {\r\n            for (var i = 0; i < this._frameCommands.length; i++) {\r\n                this._frameCommands[i].execute(time, speed);\r\n            }\r\n        }\r\n        else if (commandSet==2) {\r\n            //todo: create the frameCommands for reverse playback in the parser\r\n            for (var i = 0; i < this._frameCommandsReverse.length; i++) {\r\n                this._frameCommandsReverse[i].execute(time, speed);\r\n            }\r\n        }\r\n        // mark this frame as not dirty, so it will not get executed again, unless TimeLine makes it dirty again.\r\n        // whenever a Frame is entered, the Timeline should mark the previous frame as dirty.\r\n        this._isDirty=false;\r\n    }\r\n\r\n}\r\n\r\nexport = TimeLineFrame;\r\n","import IAsset\t\t\t\t\t    = require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport CommandPropsBase = require(\"awayjs-display/lib/entities/timelinedata/CommandPropsBase\");\r\n\r\n/**\r\n * TimeLineObject represents a unique object that is (or will be) used by a TimeLine.\r\n *  A TimeLineObject basically consists of an objID, and an IAsset.\r\n *  The FrameCommands hold references to these TimeLineObjects, so they can access and modify the IAssets\r\n\r\n */\r\nclass TimeLineObject\r\n{\r\n    // the IAsset of this TimeLineObject. This should already be a unique Object-Instance.\r\n    private _asset:IAsset;\r\n\r\n    // the object-id of this TimeLineObject/IAsset. This is not really used anymore (?).\r\n    private _objID:number;\r\n\r\n    // This timeLineProps offers function to deActivate the current TimeLineObject.\r\n    // what happens in the deactivate function is up to the CommandProps (which can be of different type)\r\n    private _deactivateCommandProps:CommandPropsBase;\r\n\r\n    // keep track if this TimeLineObject is currently active or not.\r\n    // for IAsset that extends DisplayObject, active means they are visible.\r\n    // for other IAssets it can have different meaning (sound playing...)\r\n    private _isActive:boolean;\r\n\r\n    // if the object is a DisplayObject that should be considered a 2D object,\r\n    // we will update the z-position to represent object-depth todo\r\n    private _is2D:boolean;\r\n\r\n    constructor(asset:IAsset, objID:number, deactiveCommandProps:CommandPropsBase)\r\n    {\r\n        this._asset=asset;\r\n        this._objID=objID;\r\n        this._is2D=true;\r\n        this._isActive=false;\r\n        this._deactivateCommandProps=deactiveCommandProps;\r\n        this._deactivateCommandProps.deactivate(this._asset);\r\n    }\r\n    public set deactivateCommandProps(newCommandprops:CommandPropsBase)\r\n    {\r\n        this._deactivateCommandProps=newCommandprops;\r\n    }\r\n    public deactivate()\r\n    {\r\n        //if(this._deactivateCommandProps==undefined)\r\n        //    return;\r\n        this._deactivateCommandProps.deactivate(this._asset);\r\n        this._isActive=false;\r\n    }\r\n\r\n    public get asset():IAsset\r\n    {\r\n        return this._asset;\r\n    }\r\n    public set asset(newAsset:IAsset)\r\n    {\r\n        this._asset=newAsset;\r\n    }\r\n    public get objID():number\r\n    {\r\n        return this._objID;\r\n    }\r\n    public set objID(newobjID:number)\r\n    {\r\n        this._objID=newobjID;\r\n    }\r\n    public get is2D():boolean\r\n    {\r\n        return this._is2D;\r\n    }\r\n    public set is2D(newis2D:boolean)\r\n    {\r\n        this._is2D=newis2D;\r\n    }\r\n    public get isActive():boolean\r\n    {\r\n        return this._isActive;\r\n    }\r\n    public set isActive(newisActive:boolean)\r\n    {\r\n        this._isActive=newisActive;\r\n    }\r\n}\r\n\r\nexport = TimeLineObject;\r\n","import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"SubGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"SubGeometryRemoved\";\n\n\tpublic static BOUNDS_INVALID:string = \"BoundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;","import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The material owner inside which the event took place.\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.materialOwner = this.materialOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass StageEvent extends Event\n{\n\tpublic static CONTEXT_CREATED:string = \"contextCreated\";\n\tpublic static CONTEXT_DISPOSED:string = \"contextDisposed\";\n\tpublic static CONTEXT_RECREATED:string = \"contextRecreated\";\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = StageEvent;","import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\tprivate _dataType:string;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, dataType:string = \"\")\n\t{\n\t\tsuper(type);\n\n\t\tthis._dataType = dataType;\n\t}\n\n\t/**\n\t * The data type of the vertex data.\n\t */\n\tpublic get dataType():string\n\t{\n\t\treturn this._dataType;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._dataType);\n\t}\n}\n\nexport = SubGeometryEvent;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t // Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.materialOwner = collider.materialOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event:MouseEvent)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = event.clientX;\n\t\tvar mouseY:number = event.clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;","import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ImageTexture\t\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and MultiPassMaterialBase, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass CSSMaterialBase extends MaterialBase\n{\n\tprivate _imageElement:HTMLImageElement;\n\tprivate _imageStyle:MSStyleCSSProperties;\n\n\n\tpublic get imageElement():HTMLImageElement\n\t{\n\t\treturn this._imageElement;\n\t}\n\n\tpublic get imageStyle():MSStyleCSSProperties\n\t{\n\t\treturn this._imageStyle;\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tif (value instanceof ImageTexture) {\n\t\t\tthis._imageElement = (<ImageTexture> value).htmlImageElement;\n\n\t\t\tvar node:HTMLStyleElement = document.createElement(\"style\");\n\t\t\tnode.type = \"text/css\";\n\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(node);\n\n\t\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\t\t\tsheet.insertRule(\".material\" + this.id + \"{ }\", 0);\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[0]).style;\n\n\t\t\tstyle.backgroundImage = \"url(\" + this._imageElement.src + \")\";\n\t\t\tstyle.backgroundSize = \"100% 100%\";\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.width = this._imageElement.width + \"px\";\n\t\t\tstyle.height = this._imageElement.height + \"px\";\n\t\t\tstyle.transformOrigin\n\t\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t\tthis._pHeight = this._imageElement.height;\n\t\t\tthis._pWidth = this._imageElement.width;\n\n\t\t\tthis._pNotifySizeChanged();\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(texture:Texture2DBase = null, smooth:boolean = true, repeat:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis.texture = texture;\n\n\t\tthis.smooth = smooth;\n\t\tthis.repeat = repeat;\n\t}\n}\n\nexport = CSSMaterialBase;","/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport IStage\t\t\t\t\t\t= require(\"awayjs-display/lib/base/IStage\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IMaterialData\t\t\t\t= require(\"awayjs-display/lib/pool/IMaterialData\");\nimport IMaterialPassData\t\t\t= require(\"awayjs-display/lib/pool/IMaterialPassData\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IMaterialPass\t\t\t\t= require(\"awayjs-display/lib/materials/passes/IMaterialPass\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends NamedAssetBase implements IAsset\n{\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _materialPassData:Array<IMaterialPassData> = new Array<IMaterialPassData>();\n\tprivate _materialData:Array<IMaterialData> = new Array<IMaterialData>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pScreenPassesInvalid:boolean = true;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IMaterialOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _numPasses:number = 0;\n\tprivate _passes:Array<IMaterialPass>;\n\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:Texture2DBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\tpublic _pRequiresBlending:boolean = false;\n\n\tprivate _onPassChangeDelegate:(event:Event) => void;\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IMaterialOwner>();\n\t\tthis._passes = new Array<IMaterialPass>();\n\n\t\tthis._onPassChangeDelegate = (event:Event) => this.onPassChange(event);\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.MATERIAL;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tthis._pHeight = this._pTexture.height;\n\t\tthis._pWidth = this._pTexture.width;\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tthis._pClearScreenPasses();\n\n\t\tlen = this._materialData.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._materialData[i].dispose();\n\n\t\tthis._materialData = new Array<IMaterialData>();\n\n\t\tlen = this._materialPassData.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._materialPassData[i].dispose();\n\n\t\tthis._materialPassData = new Array<IMaterialPassData>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the material requires alpha blending during rendering.\n\t */\n\tpublic get requiresBlending():boolean\n\t{\n\t\treturn this._pRequiresBlending;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t/**\n\t * Sets the render state for a pass that is independent of the rendered object. This needs to be called before\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param pass The pass data to activate.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivatePass(pass:IMaterialPassData, renderer:IRenderer, camera:Camera) // ARCANE\n\t{\n\t\tpass.materialPass._iActivate(pass, renderer, camera);\n\t}\n\n\t/**\n\t * Clears the render state for a pass. This needs to be called before activating another pass.\n\t * @param pass The pass to deactivate.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @internal\n\t */\n\tpublic _iDeactivatePass(pass:IMaterialPassData, renderer:IRenderer) // ARCANE\n\t{\n\t\tpass.materialPass._iDeactivate(pass, renderer);\n\t}\n\n\t/**\n\t * Renders the current pass. Before calling renderPass, activatePass needs to be called with the same index.\n\t * @param pass The pass used to render the renderable.\n\t * @param renderable The IRenderable object to draw.\n\t * @param stage The Stage object used for rendering.\n\t * @param entityCollector The EntityCollector object that contains the visible scene data.\n\t * @param viewProjection The view-projection matrix used to project to the screen. This is not the same as\n\t * camera.viewProjection as it includes the scaling factors when rendering to textures.\n\t *\n\t * @internal\n\t */\n\tpublic _iRenderPass(pass:IMaterialPassData, renderable:IRenderable, stage:IStage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.collectLights(renderable);\n\n\t\tpass.materialPass._iRender(pass, renderable, stage, camera, viewProjection);\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IMaterialOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IMaterialOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IMaterialOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes an IMaterialOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IMaterialOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\t}\n\n\t/**\n\t * A list of the IMaterialOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IMaterialOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * The amount of passes used by the material.\n\t *\n\t * @private\n\t */\n\tpublic _iNumScreenPasses():number\n\t{\n\t\treturn this._numPasses;\n\t}\n\n\t/**\n\t * A list of the screen passes used in this material\n\t *\n\t * @private\n\t */\n\tpublic get _iScreenPasses():Array<IMaterialPass>\n\t{\n\t\treturn this._passes;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._materialPassData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialPassData[i].invalidate();\n\n\t\tthis.invalidateMaterial();\n\t}\n\n\t/**\n\t * Flags that the screen passes have become invalid and need possible re-ordering / adding / deleting\n\t */\n\tpublic _pInvalidateScreenPasses()\n\t{\n\t\tthis._pScreenPassesInvalid = true;\n\t}\n\n\t/**\n\t * Removes a pass from the material.\n\t * @param pass The pass to be removed.\n\t */\n\tpublic _pRemoveScreenPass(pass:IMaterialPass)\n\t{\n\t\tpass.removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\t\tthis._passes.splice(this._passes.indexOf(pass), 1);\n\n\t\tthis._numPasses--;\n\t}\n\n\t/**\n\t * Removes all passes from the material\n\t */\n\tpublic _pClearScreenPasses()\n\t{\n\t\tfor (var i:number = 0; i < this._numPasses; ++i)\n\t\t\tthis._passes[i].removeEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis._passes.length = this._numPasses = 0;\n\t}\n\n\t/**\n\t * Adds a pass to the material\n\t * @param pass\n\t */\n\tpublic _pAddScreenPass(pass:IMaterialPass)\n\t{\n\t\tthis._passes[this._numPasses++] = pass;\n\n\t\tpass.lightPicker = this._pLightPicker;\n\t\tpass.addEventListener(Event.CHANGE, this._onPassChangeDelegate);\n\n\t\tthis.invalidateMaterial();\n\t}\n\n\tpublic _iAddMaterialData(materialData:IMaterialData):IMaterialData\n\t{\n\t\tthis._materialData.push(materialData);\n\n\t\treturn materialData;\n\t}\n\n\tpublic _iRemoveMaterialData(materialData:IMaterialData):IMaterialData\n\t{\n\t\tthis._materialData.splice(this._materialData.indexOf(materialData), 1);\n\n\t\treturn materialData;\n\t}\n\n\t/**\n\t * Performs any processing that needs to occur before any of its passes are used.\n\t *\n\t * @private\n\t */\n\tpublic _iUpdateMaterial()\n\t{\n\t}\n\t\n\t/**\n\t * Listener for when a pass's shader code changes. It recalculates the render order id.\n\t */\n\tprivate onPassChange(event:Event)\n\t{\n\t\tthis.invalidateMaterial();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._materialData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialData[i].invalidateAnimation();\n\t}\n\t\n\tprivate invalidateMaterial()\n\t{\n\t\tvar len:number = this._materialData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialData[i].invalidateMaterial();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddMaterialPassData(materialPassData:IMaterialPassData):IMaterialPassData\n\t{\n\t\tthis._materialPassData.push(materialPassData);\n\n\t\treturn materialPassData;\n\t}\n\n\tpublic _iRemoveMaterialPassData(materialPassData:IMaterialPassData):IMaterialPassData\n\t{\n\t\tthis._materialPassData.splice(this._materialPassData.indexOf(materialPassData), 1);\n\n\t\treturn materialPassData;\n\t}\n}\n\nexport = MaterialBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends NamedAssetBase implements IAsset\n{\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.LIGHT_PICKER;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform = this._pOverallDepthCamera.transform;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\tthrow new PartialImplementationError();\n\t\t/*\n\t\t return new RenderCubeTexture( this._depthMapSize );\n\t\t */\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:RenderTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;","import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tprivate _depthMap:TextureProxyBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tprivate _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureProxyBase)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = this._depthMap.size;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureProxyBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureProxyBase\n\t{\n\t\treturn new RenderTexture(this._pDepthMapSize, this._pDepthMapSize);\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureProxyBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tconstructor(camera:IEntity)\n\t{\n\t\tsuper(camera);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(directionalLight:IEntity)\n\t{\n\t\tsuper(directionalLight);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\n\tprivate _entity:IEntity;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper();\n\t\tthis._entity = entity;\n\t\tthis._iNumEntities = 1;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._entity.worldBounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyEntity(this._entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn this._entity.isIntersectingRay(rayPosition, rayDirection);\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateBoundsPrimitive():IEntity\n\t{\n\t\tthrow new PartialImplementationError();\n\t\t//return this._entity.bounds.boundingEntity;\n\t}\n}\n\nexport = EntityNode;","import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(lightProbe:IEntity)\n\t{\n\t\tsuper(lightProbe);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _boundsChildrenVisible:boolean;\n\tprivate _explicitBoundsVisible:boolean;\n\tprivate _implicitBoundsVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\tpublic _pBoundsPrimitive:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsVisible():boolean\n\t{\n\t\treturn this._explicitBoundsVisible;\n\t}\n\n\tpublic set boundsVisible(value:boolean)\n\t{\n\t\tif (this._explicitBoundsVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitBoundsVisible = value;\n\n\t\tthis._iUpdateImplicitBoundsVisible(this._iParent? this._iParent.boundsChildrenVisible : false);\n\n\t}\n\n\tpublic get boundsChildrenVisible():boolean\n\t{\n\t\treturn this._boundsChildrenVisible;\n\t}\n\n\tpublic set boundsChildrenVisible(value:boolean)\n\t{\n\t\tif (this._boundsChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._boundsChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitBoundsVisible(this._boundsChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._implicitBoundsVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._implicitBoundsVisible)\n\t\t\t\tthis._pBoundsPrimitive.partitionNode.acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateBoundsPrimitive():IEntity\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitBoundsVisible(this.boundsChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitBoundsVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitBoundsVisible(value:boolean)\n\t{\n\t\tif (this._implicitBoundsVisible == this._explicitBoundsVisible || value)\n\t\t\treturn;\n\n\t\tthis._implicitBoundsVisible = this._explicitBoundsVisible || value;\n\n\t\tthis._iUpdateEntityBounds();\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitBoundsVisible(this._boundsChildrenVisible);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsBoundsVisible():boolean\n\t{\n\t\treturn this._implicitBoundsVisible;\n\t}\n\n//\t\tpublic _pUpdateNumEntities(value:number)\n//\t\t{\n//\t\t\tvar diff:number = value - this._pNumEntities;\n//\t\t\tvar node:NodeBase = this;\n//\n//\t\t\tdo {\n//\t\t\t\tnode._pNumEntities += diff;\n//\t\t\t} while ((node = node._iParent) != null);\n//\t\t}\n\n\tpublic _iUpdateEntityBounds()\n\t{\n\t\tif (this._pBoundsPrimitive) {\n\t\t\tthis._pBoundsPrimitive.dispose();\n\t\t\tthis._pBoundsPrimitive = null;\n\t\t}\n\n\t\tif (this._implicitBoundsVisible)\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\t}\n}\n\nexport = NodeBase;","/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;","import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:ICollector)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(entity:DisplayObject)\n\t{\n\t\tvar node:EntityNode = entity.partitionNode;\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(entity:DisplayObject)\n\t{\n\t\tvar node:EntityNode = entity.partitionNode;\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t\t//required for controllers with autoUpdate set to true\n\t\t\tnode.entity._iInternalUpdate();\n\n\t\t} while ((node = t) != null);\n\t}\n}\n\nexport = Partition;","import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pointLight:IEntity)\n\t{\n\t\tsuper(pointLight);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(skyBox:IEntity)\n\t{\n\t\tsuper(skyBox);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:ICollector)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:ICollector):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? new Vector3D() : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSBillboardRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"billboard\";\n\n\tconstructor(pool:RenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + billboard.material.id;\n\t}\n}\n\nexport = CSSBillboardRenderable;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSLineSegmentRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"lineSegment\";\n\n\tconstructor(pool:RenderablePool, lineSegment:LineSegment)\n\t{\n\t\tsuper(pool, lineSegment, lineSegment);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\tvar img:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + lineSegment.material.id;\n\t}\n}\n\nexport = CSSLineSegmentRenderable;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass CSSRenderableBase implements IRenderable\n{\n\t/**\n\t *\n\t */\n\tprivate _pool:RenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic next:CSSRenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t *\n\t */\n\tpublic htmlElement:HTMLElement;\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param material\n\t * @param animator\n\t */\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, materialOwner:IMaterialOwner)\n\t{\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\tthis.sourceEntity = sourceEntity;\n\t\tthis.materialOwner = materialOwner;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.materialOwner);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateGeometry()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\n\t}\n}\n\nexport = CSSRenderableBase;","import CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n\n/**\n * @class away.pool.CSSSkyboxRenderable\n */\nclass CSSSkyboxRenderable extends CSSRenderableBase\n{\n\tpublic static id:string = \"skybox\";\n\n\tconstructor(pool:RenderablePool, skyBox:Skybox)\n\t{\n\t\tsuper(pool, skyBox, skyBox);\n\n\t\tvar div:HTMLDivElement = <HTMLDivElement> document.createElement(\"div\");\n\t\tdiv.onmousedown = (event:MouseEvent) => false;\n\n\t\tthis.htmlElement = div;\n\n\t\tvar style:MSStyleCSSProperties = div.style;\n\t\tvar img:HTMLDivElement;\n\n\t\t//create the six images that make up the skybox\n\t\tstyle.position = \"absolute\";\n\t\tstyle.transformOrigin\n\t\t\t= style[\"-webkit-transform-origin\"]\n\t\t\t= style[\"-moz-transform-origin\"]\n\t\t\t= style[\"-o-transform-origin\"]\n\t\t\t= style[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\timg = <HTMLDivElement> document.createElement(\"div\");\n\n\t\tdiv.appendChild(img);\n\n\t\timg.className = \"material\" + skyBox.material.id;\n\t}\n}\n\nexport = CSSSkyboxRenderable;","import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;","import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;","import IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRenderableClass\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderableClass\");\n\n/**\n * @class away.pool.RenderablePool\n */\nclass RenderablePool\n{\n\tprivate static _pools:Object = new Object();\n\n\tprivate _pool:Object = new Object();\n\tprivate _renderableClass:IRenderableClass;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tconstructor(renderableClass:IRenderableClass)\n\t{\n\t\tthis._renderableClass = renderableClass;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns IRenderable\n\t */\n\tpublic getItem(materialOwner:IMaterialOwner):IRenderable\n\t{\n\t\treturn <IRenderable> (this._pool[materialOwner.id] || (this._pool[materialOwner.id] = materialOwner._iAddRenderable(new this._renderableClass(this, materialOwner))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(materialOwner:IMaterialOwner)\n\t{\n\t\tmaterialOwner._iRemoveRenderable(this._pool[materialOwner.id]);\n\n\t\tthis._pool[materialOwner.id] = null;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t * @returns RenderablePool\n\t */\n\tpublic static getPool(renderableClass:IRenderableClass):RenderablePool\n\t{\n\t\tvar pool:RenderablePool = RenderablePool._pools[renderableClass.id];\n\n\t\tif (pool != undefined)\n\t\t\treturn pool;\n\n\t\treturn <RenderablePool> (RenderablePool._pools[renderableClass.id] = new RenderablePool(renderableClass));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param renderableClass\n\t */\n\tpublic static disposePool(renderableClass:any)\n\t{\n\t\tif (RenderablePool._pools[renderableClass.id])\n\t\t\tRenderablePool._pools[renderableClass.id] = undefined;\n\t}\n}\n\nexport = RenderablePool;","import NamedAssetBase\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends NamedAssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;","﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = i*this._height/this._segmentsH - hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = i*this._height/this._segmentsH - hh\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = hw;\n\t\t\t\tstartPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh - i*this._height/this._segmentsH;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = hw\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = -hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tstartPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tstartPositions[vidx + 1] = -hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = hw - i*this._width/this._segmentsW;\n\t\t\t\tendPositions[vidx + 1] = -hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\n\t\t\t\tstartPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tstartPositions[vidx + 1] = hh;\n\t\t\t\tstartPositions[vidx + 2] = -hd;\n\n\t\t\t\tendPositions[vidx] = i*this._width/this._segmentsW - hw;\n\t\t\t\tendPositions[vidx + 1] = hh;\n\t\t\t\tendPositions[vidx + 2] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Array<number>;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// central vertex\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 1;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = -1;\n\t\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 2;\n\n\t\t\t\t\t\tnextVertexIndex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 2;\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = -1;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = 1;\n\t\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 2;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex + 1;\n\n\t\t\t\t\t\tnextVertexIndex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 2;\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._pSegmentsH + 1)*(this._pSegmentsW) + this._pSegmentsW;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//horizonal lines\n\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = this._height*(j/this._pSegmentsH - 0.5);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._pSegmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._pSegmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Array<number>;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleU; // central vertex\n\t\t\t\t\tuvs[index++] = 0.5*triangleGeometry.scaleV;\n\n\t\t\t\t\tuvs[index++] = x*triangleGeometry.scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*triangleGeometry.scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\t\tvar numVertices:number;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Array<number>;\n\t\t\tvar normals:Array<number>;\n\t\t\tvar tangents:Array<number>;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tstartPositions[vidx] = -hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tendPositions[vidx] = hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tstartPositions[vidx] = xi*this._width - hw;\n\t\t\t\tstartPositions[vidx + 1] = 0;\n\t\t\t\tstartPositions[vidx + 2] = -hh;\n\n\t\t\t\tendPositions[vidx] = xi*this._width - hw;\n\t\t\t\tendPositions[vidx + 1] = 0;\n\t\t\t\tendPositions[vidx + 2] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tvidx += 3;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Array<number>;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*triangleGeometry.scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*triangleGeometry.scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;","import AssetType\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.PRIMITIVE_PREFAB;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(true);\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry());\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Array<number>(numVertices*3);\n\t\t\t\tnormals = new Array<number>(numVertices*3);\n\t\t\t\ttangents = new Array<number>(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH - 1)*this._segmentsW*2;\n\t\t\tvar startPositions:Array<number>;\n\t\t\tvar endPositions:Array<number>;\n\t\t\tvar thickness:Array<number>;\n\n\t\t\tif (lineGeometry.indices != null && numSegments == lineGeometry.numSegments) {\n\t\t\t\tstartPositions = lineGeometry.startPositions;\n\t\t\t\tendPositions = lineGeometry.endPositions;\n\t\t\t\tthickness = lineGeometry.thickness;\n\t\t\t} else {\n\t\t\t\tstartPositions = new Array<number>(numSegments*3);\n\t\t\t\tendPositions = new Array<number>(numSegments*3);\n\t\t\t\tthickness = new Array<number>(numSegments);\n\t\t\t}\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tif (j < this._segmentsH) {\n\t\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tstartPositions[vidx] = endPositions[vidx - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 1] = endPositions[vidx + 1 - this._segmentsW*6];\n\t\t\t\t\t\tstartPositions[vidx + 2] = endPositions[vidx + 2 - this._segmentsW*6];\n\n\t\t\t\t\t\tendPositions[vidx] = x;\n\t\t\t\t\t\tendPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tendPositions[vidx + 2] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\tvidx += 3;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < this._segmentsW && j > 0 && j < this._segmentsH) {\n\t\t\t\t\t\tstartPositions[vidx] = x;\n\t\t\t\t\t\tstartPositions[vidx + 1] = comp1;\n\t\t\t\t\t\tstartPositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.updatePositions(startPositions, endPositions);\n\t\t\tlineGeometry.updateThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;","import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Array<number> /*uint*/;\n\t\tvar positions:Array<number>;\n\t\tvar normals:Array<number>;\n\t\tvar tangents:Array<number>;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices;\n\t\t\t\tpositions = triangleGeometry.positions;\n\t\t\t\tnormals = triangleGeometry.vertexNormals;\n\t\t\t\ttangents = triangleGeometry.vertexTangents;\n\t\t\t} else {\n\t\t\t\tindices = new Array<number>(numIndices)\n\t\t\t\tpositions = new Array<number>(this._numVertices*3);\n\t\t\t\tnormals = new Array<number>(this._numVertices*3);\n\t\t\t\ttangents = new Array<number>(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateIndices(indices);\n\n\t\t\ttriangleGeometry.updatePositions(positions);\n\t\t\ttriangleGeometry.updateVertexNormals(normals);\n\t\t\ttriangleGeometry.updateVertexTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Array<number>;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs;\n\t\t\t} else {\n\t\t\t\tuvs = new Array<number>(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*triangleGeometry.scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*triangleGeometry.scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.updateUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport CoordinateSystem\t\t\t\t= require(\"awayjs-core/lib/projections/CoordinateSystem\");\n\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport CSSRendererBase\t\t\t\t= require(\"awayjs-display/lib/render/CSSRendererBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\n\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass CSSDefaultRenderer extends CSSRendererBase implements IRenderer\n{\n\tprivate _container:HTMLDivElement;\n\tprivate _context:HTMLDivElement;\n\tprivate _contextStyle:MSStyleCSSProperties;\n\tprivate _contextMatrix:Matrix3D = new Matrix3D();\n\t\n\tprivate _activeMaterial:CSSMaterialBase;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tprivate _transform:Matrix3D = new Matrix3D();\n\n\t/**\n\t * Creates a new CSSDefaultRenderer object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//create container for the renderer\n\t\tthis._container = document.createElement(\"div\");\n\t\tthis._container.style.overflow = \"hidden\";\n\t\tthis._container.style.position = \"absolute\";\n\t\t\n\t\t//add container to body\n\t\tdocument.body.appendChild(this._container);\n\n\t\t//create conxtext for the renderer\n\t\tthis._context = document.createElement(\"div\");\n\t\tthis._contextStyle = this._context.style;\n\t\tthis._contextStyle.position = \"absolute\";\n\t\tthis._contextStyle.transformStyle\n\t\t\t= this._contextStyle[\"-webkit-transform-style\"]\n\t\t\t= this._contextStyle[\"-moz-transform-style\"]\n\t\t\t= this._contextStyle[\"-o-transform-style\"]\n\t\t\t= this._contextStyle[\"-ms-transform-style\"] = \"preserve-3d\";\n\t\tthis._contextStyle.transformOrigin\n\t\t\t= this._contextStyle[\"-webkit-transform-origin\"]\n\t\t\t= this._contextStyle[\"-moz-transform-origin\"]\n\t\t\t= this._contextStyle[\"-o-transform-origin\"]\n\t\t\t= this._contextStyle[\"-ms-transform-origin\"] = \"0% 0%\";\n\n\t\t//add context to container\n\t\tthis._container.appendChild(this._context);\n\t}\n\n\t/**\n\t *\n\t * @param entityCollector\n\t */\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tthis._iRender(<EntityCollector> entityCollector);\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector)\n\t{\n//\t\t\tif (entityCollector.skyBox) {\n//\t\t\t\tif (this._activeMaterial)\n//\t\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n//\n//\t\t\t\tthis._activeMaterial = null;\n//\n//\t\t\t\tthis._pContext.setDepthTest(false, away.gl.ContextGLCompareMode.ALWAYS);\n//\t\t\t\tthis.drawSkybox(entityCollector);\n//\n//\t\t\t}\n//\n//\t\t\tvar which:number = target? DefaultRenderer.SCREEN_PASSES : DefaultRenderer.ALL_PASSES;\n\n\t\tvar sheet:CSSStyleSheet = <CSSStyleSheet> document.styleSheets[document.styleSheets.length - 1];\n\n\t\tfor (var i:number = 0; i < sheet.cssRules.length; i++) {\n\t\t\tvar style:MSStyleCSSProperties = (<CSSStyleRule> sheet.cssRules[i]).style;\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = (entityCollector.camera.projection.coordinateSystem == CoordinateSystem.RIGHT_HANDED)? \"\" : \"scale3d(1, -1, 1) translateY(-\" + style.height + \")\";\n\t\t}\n\n\t\tthis.drawRenderables(this._renderableHead, entityCollector);\n\n//\t\t\tif (this._activeMaterial)\n//\t\t\t\tthis._activeMaterial.iDeactivate(this._pStageGL);\n\n\t\tthis._activeMaterial = null;\n\t}\n\n\t/**\n\t * Updates the backbuffer properties.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\tthis._container.style.width = this._width + \"px\";\n\t\tthis._container.style.height = this._height + \"px\";\n\t\tthis._container.style.clip = \"rect(0px, \" + this._width + \"px, \" + this._height + \"px, 0px)\";\n\n\t\t//update context matrix\n\t\tthis._contextMatrix.rawData[0] = this._width/2;\n\t\tthis._contextMatrix.rawData[5] = -this._height/2;\n\t\tthis._contextMatrix.rawData[10] = -1; //fix for innaccurate z-sort\n\t\tthis._contextMatrix.rawData[12] = this._width/2;\n\t\tthis._contextMatrix.rawData[13] = this._height/2;\n\n\t\t//update context tranform\n\t\tthis._contextStyle.transform\n\t\t\t= this._contextStyle[\"-webkit-transform\"]\n\t\t\t= this._contextStyle[\"-moz-transform\"]\n\t\t\t= this._contextStyle[\"-o-transform\"]\n\t\t\t= this._contextStyle[\"-ms-transform\"] = this._contextMatrix.toString();\n\n\t\tthis._pBackBufferInvalid = false;\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:CSSEntityCollector)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(item:CSSRenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar viewProjection:Matrix3D = entityCollector.camera.viewProjection.clone();\n\n\t\twhile (item) {\n\t\t\tthis._activeMaterial = <CSSMaterialBase> item.materialOwner.material;\n\n\t\t\t//serialise transform and apply to html element\n\t\t\tthis._transform.copyRawDataFrom(item.renderSceneTransform.rawData);\n\t\t\tthis._transform.append(viewProjection);\n\n\t\t\tvar style:MSStyleCSSProperties = item.htmlElement.style;\n\n\t\t\tstyle.transform\n\t\t\t\t= style[\"-webkit-transform\"]\n\t\t\t\t= style[\"-moz-transform\"]\n\t\t\t\t= style[\"-o-transform\"]\n\t\t\t\t= style[\"-ms-transform\"] = this._transform.toString();\n\n\t\t\tstyle.transformStyle\n\t\t\t\t= style[\"-webkit-transform-style\"]\n\t\t\t\t= style[\"-moz-transform-style\"]\n\t\t\t\t= style[\"-o-transform-style\"]\n\t\t\t\t= style[\"-ms-transform-style\"] = \"preserve-3d\";\n\n\t\t\t//check if child requires adding to the view\n\t\t\tif (!this._context.contains(item.htmlElement))\n\t\t\t\tthis._context.appendChild(item.htmlElement);\n\n\t\t\titem = item.next;\n\t\t}\n\n//\t\t\tvar numPasses:number;\n//\t\t\tvar j:number;\n//\t\t\tvar camera:away.entities.Camera = entityCollector.camera;\n//\t\t\tvar item2:away.render.CSSRenderableBase;\n//\n//\t\t\twhile (item) {\n//\t\t\t\tthis._activeMaterial = item.material;\n//\n//\t\t\t\tthis._activeMaterial.iUpdateMaterial(this._pContext);\n//\n//\t\t\t\tnumPasses = this._activeMaterial._iNumPasses;\n//\n//\t\t\t\tj = 0;\n//\n//\t\t\t\tdo {\n//\t\t\t\t\titem2 = item;\n//\n//\t\t\t\t\tvar rttMask:number = this._activeMaterial.iPassRendersToTexture(j)? 1 : 2;\n//\n//\t\t\t\t\tif ((rttMask & which) != 0) {\n//\t\t\t\t\t\tthis._activeMaterial.iActivatePass(j, this._pStageGL, camera);\n//\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\tthis._activeMaterial.iRenderPass(j, item2, this._pStageGL, entityCollector);\n//\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.material == this._activeMaterial);\n//\n//\t\t\t\t\t\tthis._activeMaterial.iDeactivatePass(j, this._pStageGL);\n//\n//\t\t\t\t\t} else {\n//\t\t\t\t\t\tdo {\n//\t\t\t\t\t\t\titem2 = item2.next;\n//\n//\t\t\t\t\t\t} while (item2 && item2.renderable.material == this._activeMaterial);\n//\t\t\t\t\t}\n//\t\t\t\t} while (++j < numPasses);\n//\n//\t\t\t\titem = item2;\n//\t\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\t//TODO\n\t}\n\n\n\tpublic _iCreateEntityCollector():ICollector\n\t{\n\t\treturn new CSSEntityCollector();\n\t}\n}\n\nexport = CSSDefaultRenderer;","import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CSSBillboardRenderable\t\t= require(\"awayjs-display/lib/pool/CSSBillboardRenderable\");\nimport CSSLineSegmentRenderable\t\t= require(\"awayjs-display/lib/pool/CSSLineSegmentRenderable\");\nimport CSSRenderableBase\t\t\t= require(\"awayjs-display/lib/pool/CSSRenderableBase\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport CSSEntityCollector\t\t\t= require(\"awayjs-display/lib/traverse/CSSEntityCollector\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport CSSMaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/CSSMaterialBase\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass CSSRendererBase extends EventDispatcher\n{\n\tprivate _billboardRenderablePool:RenderablePool;\n\tprivate _lineSegmentRenderablePool:RenderablePool;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tprivate _shareContext:boolean = false;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _depthTextureInvalid:boolean = true;\n\n\tpublic _renderableHead:CSSRenderableBase;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorRect:Rectangle = new Rectangle();\n\tprivate _scissorDirty:boolean;\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\t/**\n\t * A viewPort rectangle equivalent of the StageGL size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._scissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._scissorRect.width = value;\n\t\tthis._viewPort.width = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._scissorRect.height = value;\n\t\tthis._viewPort.height = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._depthTextureInvalid = true;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor(renderToTexture:boolean = false, forceSoftware:boolean = false, profile:string = \"baseline\")\n\t{\n\t\tsuper();\n\n\t\tthis._billboardRenderablePool = RenderablePool.getPool(CSSBillboardRenderable);\n\t\tthis._lineSegmentRenderablePool = RenderablePool.getPool(CSSLineSegmentRenderable);\n\n\t\tthis._viewPort = new Rectangle();\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic _iRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tif (!entityCollector.entityHead)\n\t\t\treturn;\n\n\t\tthis.pExecuteRender(entityCollector, scissorRect);\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ICollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\tpublic pCollectRenderables(entityCollector:ICollector)\n\t{\n\t\t//reset head values\n\t\tthis._renderableHead = null;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._iCollectRenderables(this);\n\t\t\titem = item.next;\n\t\t}\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param scissorRect\n\t */\n\tpublic pExecuteRender(entityCollector:CSSEntityCollector, scissorRect:Rectangle = null)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis.pDraw(entityCollector);\n\t}\n\n\t/**\n\t * Performs the actual drawing of dom objects to the target.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible dom objects.\n\t */\n\tpublic pDraw(entityCollector:CSSEntityCollector)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t * @param billboard\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\tthis._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\t//this._applyRenderable(<CSSRenderableBase> this._billboardRenderablePool.getItem(lineSegment));\n\t}\n\n\t/**\n\t *\n\t * @param skybox\n\t */\n\tpublic applySkybox(skybox:Skybox)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @private\n\t */\n\tprivate _applyRenderable(renderable:CSSRenderableBase)\n\t{\n\t\tvar material:CSSMaterialBase = <CSSMaterialBase> renderable.materialOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (material) {\n\t\t\t//set ids for faster referencing\n\t\t\trenderable.materialId = material._iMaterialId;\n//\t\t\t\trenderable.renderOrderId = material._iRenderOrderId;\n\t\t\trenderable.cascaded = false;\n\n\t\t\t// project onto camera's z-axis\n\t\t\tposition = this._iEntryPoint.subtract(position);\n\t\t\trenderable.zIndex = entity.zOffset - position.dotProduct(this._pCameraForward);\n\n\t\t\t//store reference to scene transform\n\t\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\t\t//store reference to next item in list\n\t\t\trenderable.next = this._renderableHead;\n\t\t\tthis._renderableHead = renderable;\n\t\t}\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tthis._viewPort.x = this._globalPos.x;\n\t\tthis._viewPort.y = this._globalPos.y;\n\n\t\tthis.notifyViewportUpdate();\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\tpublic _iCreateEntityCollector():ICollector\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = CSSRendererBase;","import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on material id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.materialId;\n\t\t\t\tvar mb:number = headB.materialId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;","/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;","/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;","/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;","/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n}\n\nexport = TextFieldType;","/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;","/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat\n{\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\tpublic align:string;\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\tpublic color:boolean;\n\n\t/**\n\t * The name of the font for text in this text format, as a string. The\n\t * default value is <code>null</code>, which means that Flash Player uses\n\t * Times New Roman font for the text.\n\t */\n\tpublic font:string;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\tpublic target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tthis.font = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.target = target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n}\n\nexport = TextFormat;","/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;","/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;","import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase implements ICollector\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase implements ICollector\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;","import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;","import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;","import BitmapData\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport BitmapTexture\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\nimport ImageTexture\t\t\t\t= require(\"awayjs-core/lib/textures/ImageTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static bitmapData(data:any):BitmapData\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapData)\n\t\t\treturn data;\n\n\t\tif (data instanceof ImageTexture)\n\t\t\tdata = (<ImageTexture> data).htmlImageElement;\n\n\t\tif (data instanceof HTMLImageElement) {\n\t\t\tvar imageElement:HTMLImageElement = <HTMLImageElement> data;\n\t\t\tvar bitmapData:BitmapData = new BitmapData(imageElement.width, imageElement.height, true, 0x0);\n\t\t\tbitmapData.draw(imageElement)\n\t\t\treturn bitmapData;\n\t\t}\n\n\t\t//            if (data is DisplayObject) {\n\t\t//                var ds:DisplayObject = data as DisplayObject;\n\t\t//                var bmd:BitmapData = new BitmapData(ds.width, ds.height, true, 0x00FFFFFF);\n\t\t//                var mat:Matrix = ds.transform.matrix.clone();\n\t\t//                mat.tx = 0;\n\t\t//                mat.ty = 0;\n\t\t//                bmd.draw(ds, mat, ds.transform.colorTransform, ds.blendMode, bmd.rect, true);\n\t\t//                return bmd;\n\t\t//            }\n\n\t\tthrow new CastError(\"Can't cast to BitmapData: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):BitmapTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof BitmapTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:BitmapData = Cast.bitmapData(data);\n\t\t\treturn new BitmapTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to BitmapTexture: \" + data);\n\t}\n}\n\nexport = Cast;"],"sourceRoot":"./"}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SceneGraphNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "name",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "MovieClip",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "evalScript",
    "addScriptForExecution",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "target_childs_dic",
    "numChildren",
    "child",
    "getChildAt",
    "getChildDepth",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "target_child_sessionIDS",
    "key",
    "removeChildAt",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "console",
    "log",
    "unregisterScriptObject",
    "isAsset",
    "freeFromScript",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_cnt",
    "props_start_idx",
    "value_start_index",
    "props_type",
    "doit",
    "childID",
    "update_child_stream",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "properties_stream_int",
    "firstMaskID",
    "mask",
    "masks",
    "mouseEnabled",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/entities/MovieClip",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getDepthIndexInternal",
    "getChildByName",
    "childIndex",
    "getNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "Event",
    "MouseEvent",
    "FrameScriptManager",
    "timeline",
    "_loop",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_fps",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "reset",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "newFps",
    "play",
    "timeDelta",
    "frameMarker",
    "advanceFrame",
    "execute_queue",
    "add_script_to_queue",
    "activateChild",
    "deactivateChild",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "executePostConstructCommands",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "mc",
    "script",
    "_queued_mcs",
    "_queued_scripts",
    "caller",
    "err",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_sceneGraphDepths",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "container",
    "_container",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ISceneGraphNodeClass",
    "awayjs-display/lib/pool/ITextureVO",
    "awayjs-display/lib/pool/SceneGraphNodePool",
    "SceneGraphNodePool",
    "sceneGraphNodeClass",
    "_sceneGraphNodePool",
    "_sceneGraphNodeClass",
    "displayObjectContainer",
    "sceneGraphNode",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\t//grid stuff - to tidy\r\n\tprivate cells:Array<Array<number>>;\r\n\t//TODO - generate this dyanamically based on num tris\r\n\tprivate devisions:number = 32;\r\n\tprivate conversionX:number;\r\n\tprivate conversionY:number;\r\n\tprivate minx:number;\r\n\tprivate maxx:number;\r\n\tprivate miny:number;\r\n\tprivate maxy:number;\r\n\r\n\tprivate getCell(x:number, y:number):number\r\n\t{\r\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\r\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\r\n\r\n\t\t//out of bounds\r\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\r\n\r\n\t\treturn  index_x + index_y * this.devisions;\r\n\t}\r\n\tprivate buildGrid():void\r\n\t{\r\n\t\t//calculate bounds, ideally via bounding box already computed\r\n\t\t//if not just loop through and generate min/max\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tthis.minx = Number.MAX_VALUE;\r\n\t\tthis.maxx = -Number.MAX_VALUE;\r\n\t\tthis.miny = Number.MAX_VALUE;\r\n\t\tthis.maxy = -Number.MAX_VALUE;\r\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\r\n\t\t{\r\n\t\t\tvar x:number = positions[k];\r\n\t\t\tvar y:number = positions[k + 1];\r\n\r\n\t\t\tif(x < this.minx) this.minx = x;\r\n\t\t\tif(x > this.maxx) this.maxx = x;\r\n\t\t\tif(y < this.miny) this.miny = y;\r\n\t\t\tif(y > this.maxy) this.maxy = y;\r\n\t\t}\r\n\r\n\t\tvar width:number = this.maxx - this.minx;\r\n\t\tvar height:number = this.maxy - this.miny;\r\n\r\n\r\n\t\t//now we have bounds start creating grid cells and filling\r\n\t\tvar maxDevisions:number = 32;\r\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\r\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\r\n\t\tvar numCells:number = this.devisions * this.devisions;\r\n\t\tvar cellWidth:number = width/this.devisions;\r\n\t\tvar cellHeight:number = height/this.devisions;\r\n\r\n\t\tthis.conversionX = 1/cellWidth;\r\n\t\tthis.conversionY = 1/cellHeight;\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tthis.cells = new Array<Array<number>>(numCells);\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//subtractions to push into positive space\r\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\r\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\r\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\r\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\r\n\r\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\r\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\r\n\r\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\r\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\r\n\r\n\r\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar index:number = i + j * this.devisions;\r\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\r\n\t\t\t\t\tif(nodes == null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnodes = new Array<number>();\r\n\t\t\t\t\t\tthis.cells[index] = nodes;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif(this.numVertices > 150){\r\n\r\n\r\n\t\t\tif (this.cells == null) {\r\n\t\t\t\tthis.buildGrid();\r\n\t\t\t}\r\n\t\t\tvar cell:number = this.getCell(x, y);\r\n\t\t\tif (cell == -1) return false;\r\n\r\n\t\t\tvar nodes:Array<number> = this.cells[cell];\r\n\t\t\tif (nodes == null) return false;\r\n\r\n\r\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//brute force\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tprivate _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\r\n\t{\r\n\t\tif (!newInstance)\r\n\t\t\tnewInstance = new DisplayObject();\r\n\r\n\t\tnewInstance.pivot = this.pivot;\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D;\r\n\t\tnewInstance.name = this.name;\r\n\r\n\t\tnewInstance._iMaskID = this._iMaskID;\r\n\t\tnewInstance._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset_to_init_state():void\r\n\t{\r\n\t\tthis.visible=true;\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\t\tif(this.colorTransform)\r\n\t\t\tthis.colorTransform.clear();\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.queueDispatch(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices==null)||(this.frame_recipe==null)||(this.keyframe_durations==null))\r\n\t\t\treturn;\r\n\t\tthis.keyframe_firstframes=[];\r\n\t\tthis.keyframe_constructframes=[];\r\n\t\tvar frame_cnt=0;\r\n\t\tvar ic=0;\r\n\t\tvar ic2=0;\r\n\t\tvar keyframe_cnt=0;\r\n\t\tvar last_construct_frame=0;\r\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\r\n\t\t\t\tlast_construct_frame=keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt]=frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\r\n\r\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++]=ic;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\ttarget_mc.addScriptForExecution(this._framescripts[keyframe_idx]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChilds() : Array<DisplayObject>\r\n\t{\r\n\t\treturn this._potentialPrototypes;\r\n\t}\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id].clone();\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value : number)\r\n\t{\r\n\t\t//console.log(\"gotoframe\");\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe=this.keyframe_firstframes[target_keyframe_idx];\r\n\t\tif(frameIndex==value){\r\n\t\t\t//we are already on exactly this frame.\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(current_keyframe_idx+1==target_keyframe_idx){\r\n\t\t\t// target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(firstframe==value){\r\n\t\t\t//frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx);\r\n\t\t}\r\n\r\n\t\tif(current_keyframe_idx==target_keyframe_idx) {\r\n\t\t\t// already constructed - exit\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\r\n\t\tvar break_frame_idx:number=this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number=break_frame_idx;\r\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\tif((jump_forward)&&(!jump_gap)){\r\n\t\t\tstart_construct_idx=current_keyframe_idx+1;\r\n\t\t}\r\n\t\tvar target_childs_dic:Object=[];\r\n\t\tvar i:number = target_mc.numChildren;\r\n\t\tvar child:DisplayObject;\r\n\r\n\t\tif(start_construct_idx==target_keyframe_idx){\r\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\r\n\t\t\t// before we do that, we need to clear the childlist\r\n\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twhile(i--){\r\n\t\t\tchild = target_mc.getChildAt(i);\r\n\t\t\tif(jump_gap){\r\n\t\t\t\t// if we jump forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\t\t// todo free and unregister ?\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\t\t\ttarget_childs_dic[target_mc.getChildDepth(child)]=child;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//console.log(\"gotoframe keyframe = \"+target_keyframe_idx+\" name = \"+target_mc.name);\r\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\r\n\t\tvar update_indices:Array<number>=[];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt=0;\r\n\t\tvar k;\r\n\t\tfor(k=start_construct_idx;k<=target_keyframe_idx; k++){\r\n\t\t\tvar frame_command_idx:number=this.frame_command_indices[k];\r\n\t\t\tvar frame_recipe:number=this.frame_recipe[k];\r\n\r\n\t\t\tif ((frame_recipe & 2) == 2){\r\n\t\t\t\t// remove childs\r\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tvar len = this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor(var i:number = 0; i < len; i++){\r\n\t\t\t\t\tdelete target_childs_dic[(this.remove_child_stream[start_index+i] - 16383)];\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"remove childs = \"+len);\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 4)==4){\r\n\t\t\t\tvar start_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tvar len = this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor(var i:number = 0; i < len; i++){\r\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\r\n\t\t\t\t\ttarget[\"__sessionID\"] = start_index + i;\r\n\t\t\t\t\ttarget_childs_dic[(this.add_child_stream[start_index*2 + i*2 + 1] - 16383)] = target;\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"add childs = \"+len);\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 8)==8)\r\n\t\t\t\tupdate_indices[update_cnt++]=frame_command_idx;// execute update command later\r\n\t\t}\r\n\t\t//  step2: construct the final frame\r\n\r\n\t\tvar target_child_sessionIDS:Object={};\r\n\t\tfor (var key in target_childs_dic) {\r\n\t\t\tif (target_childs_dic[key] != null) {\r\n\t\t\t\ttarget_child_sessionIDS[(<DisplayObject>target_childs_dic[key])[\"__sessionID\"]] = key;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames get removed from the target_child_sessionIDS + target_childs_dic\r\n\t\ti = target_mc.numChildren;\r\n\t\twhile(i--){\r\n\t\t\tchild=target_mc.getChildAt(i);\r\n\t\t\tif(target_child_sessionIDS[child[\"__sessionID\"]]==null){\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tdelete target_childs_dic[target_child_sessionIDS[child[\"__sessionID\"]]];\r\n\t\t\t\tdelete target_child_sessionIDS[child[\"__sessionID\"]];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var key in target_childs_dic) {\r\n\t\t\tchild=target_childs_dic[key];\r\n\t\t\tif(child){\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number=0;\r\n\t\tfor(k=0;k<update_indices.length; k++){\r\n\t\t\tframe_command_idx=update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx] );\r\n\t\t}\r\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true)\r\n\t{\r\n\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif((queueScript)&&(this.keyframe_firstframes[new_keyFrameIndex]==frameIndex)){\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex);\r\n\t\t}\r\n\t\tconsole.log(\"next frame mc name = \"+target_mc.name);\r\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\r\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx=this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe=this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif((frame_recipe & 1)==1) {\r\n\t\t\t\tvar i:number = target_mc.numChildren;\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\tvar target:DisplayObject=target_mc.getChildAt(i);\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t\t\ttarget_mc.adapter.unregisterScriptObject(target);\r\n\t\t\t\t\tif (target.isAsset(MovieClip) && (<MovieClip> target).adapter)\r\n\t\t\t\t\t\t(<MovieClip> target).adapter.freeFromScript();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ((frame_recipe & 2)==2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 4)==4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif((frame_recipe & 8)==8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++) {\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\t\t\tsourceMovieClip.adapter.unregisterScriptObject(target);\r\n\t\t\tif(target.isAsset(MovieClip) && (<MovieClip> target).adapter)\r\n\t\t\t\t(<MovieClip> target).adapter.freeFromScript();\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++){\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\r\n\t\t\ttarget[\"__sessionID\"] = start_index + i;\r\n\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tvar props_cnt:number;\r\n\t\tvar props_start_idx:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tfor(var i:number = 0; i < len; i++) {\r\n\t\t\tvar childID:number=this.update_child_stream[start_index + i];\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(childID);\r\n\t\t\tif (target.parent == sourceMovieClip) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.isAsset(MovieClip))\r\n\t\t\t\t\tif ((<MovieClip>target).adapter.isBlockedByScript())\r\n\t\t\t\t\t\tdoit = false;\r\n\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[start_index + i];\r\n\t\t\t\tprops_cnt = this.update_child_props_length_stream[start_index + i];\r\n\r\n\t\t\t\tfor(var p:number = 0; p < props_cnt; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[props_start_idx + p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[props_start_idx + p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3:// masks\r\n\t\t\t\t\t\t\tvar mask_length:number=this.properties_stream_int[value_start_index++];\r\n\t\t\t\t\t\t\tvar firstMaskID:number=this.properties_stream_int[value_start_index] - 1;\r\n\t\t\t\t\t\t\tif (mask_length == 1 && firstMaskID == -1) {\r\n\t\t\t\t\t\t\t\ttarget._iMaskID = childID;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\t\tfor(var m:number = 0; m < mask_length; m++){\r\n\t\t\t\t\t\t\t\t\tmask = masks[m] = sourceMovieClip.getPotentialChildInstance(this.properties_stream_int[value_start_index++] - 1);\r\n\t\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\r\n\t\t\t\t\t\t\t\t\tif(mask.isAsset(MovieClip))\r\n\t\t\t\t\t\t\t\t\t\t(<MovieClip> mask).mouseChildren = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttarget._iMasks = masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _depths:Array<number> = new Array<number>();\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\t\t\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\t\tvar len:number = this._depths.length;\r\n\t\tvar index:number = len;\r\n\t\t\r\n\t\twhile (index--)\r\n\t\t\tif (this._depths[index] < depth)\r\n\t\t\t\tbreak;\r\n\r\n\t\tindex++;\r\n\r\n\t\tif (index < len) {\r\n\t\t\t//if replace flag & depths match current depth, remove the existing child\r\n\t\t\tif (this._depths[index] == depth) {\r\n\t\t\t\tif (replace) {\r\n\t\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\t\tthis.addChildAtDepth(this._children[index], this._depths[index] + 1, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._children.splice(index, 0, child);\r\n\t\t\tthis._depths.splice(index, 0, depth);\r\n\t\t} else {\r\n\t\t\tthis._children.push(child);\r\n\t\t\tthis._depths.push(depth);\r\n\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\t\t}\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._depths[index] : this._nextHighestDepth, false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\r\n\t{\r\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\r\n\r\n\t\tnewInstance.partition = this.partition;\r\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\r\n\t\tnewInstance.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\t\r\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\treturn this._depths[this.getChildIndex(child)];\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\t\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t\t\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._depths[index2];\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._depths[index1]);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\t\tthis._depths.splice(index, 1);\r\n\r\n\t\t//if child is the last in array, update next highest depth\r\n\t\tif (index == this._children.length)\r\n\t\t\tthis._nextHighestDepth = this._depths[index - 1] + 1;\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\tvar index:number = this._depths.indexOf(depth);\r\n\r\n\t\tif (index == -1)\r\n\t\t\tthrow new ArgumentError(\"No child at specified depth\");\r\n\r\n\t\treturn index;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\r\n\t\tif(this.visible==false)return;\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\r\n\t\t\tif(childHit) {\r\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\tif(all_masks){\r\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\r\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\tif(mask_child.parent){\r\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\r\n\t\t\t\t\t\t\tif(childHit) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        for (i = 0; i < len; ++i)\r\n            clone.addChild(this.getChildAt(i).clone());\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\t// if this is a mask, directly return false\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\r\n\r\n\t\t// if this is invisible, all children should be invisible too.\r\n\t\t// todo: is the above statement correct for awayjs visible-property ?\r\n\t\tif(this.visible==false)return false;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\t\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\r\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\r\n\r\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\r\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\t\t\tif (all_masks) {\r\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\r\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\r\n\t\t\t\t\t\t\tif (all_hir_masks){\r\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\r\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\r\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar hit:boolean = false;\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\r\n\t\tif(hit)\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport SceneEvent = require(\"awayjs-display/lib/events/SceneEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean;\r\n    private _onMouseOver:(event:MouseEvent) => void;\r\n    private _onMouseOut:(event:MouseEvent) => void;\r\n    private _onMouseDown:(event:MouseEvent) => void;\r\n    private _onMouseUp:(event:MouseEvent) => void;\r\n\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrameIndex:number;// the current frame\r\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\r\n\r\n    private _fps:number;// we use ms internally, but have fps, so user can set time by frame\r\n    private _isPlaying:boolean;// false if paused or stopped\r\n    private _loop:boolean = true;\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit : boolean;\r\n\r\n    private _potentialInstances:Array<DisplayObject>;\r\n   // private _framescripts_to_execute:Array<Function>;\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor(timeline:Timeline = null)\r\n    {\r\n        super();\r\n        this._potentialInstances = [];\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        this._isInit=true;\r\n        this._isPlaying = true; // auto-play\r\n        this._isButton=false;\r\n\r\n        this._fps = 30;\r\n        this._time = 0;\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n        this.inheritColorTransform = true;\r\n\r\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n        this._timeline = timeline || new Timeline();\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n    }\r\n    public get loop()\r\n    {\r\n        return this._loop;\r\n    }\r\n\r\n    public set loop(value:boolean)\r\n    {\r\n        this._loop = value;\r\n    }\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this._timeline.numFrames;\r\n    }\r\n\r\n    public jumpToLabel(label:string) : void\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    public get currentFrameIndex() : number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n    public get constructedKeyFrameIndex() : number\r\n    {\r\n        return this._constructedKeyFrameIndex;\r\n    }\r\n\r\n    public set constructedKeyFrameIndex(value : number)\r\n    {\r\n        this._constructedKeyFrameIndex = value;\r\n    }\r\n\r\n    public reset():void\r\n    {\r\n        //console.log(\"reset name = \"+this.name);\r\n        if(this.adapter){\r\n           // this.adapter.freeFromScript();\r\n        }\r\n\r\n        this._isPlaying = true;\r\n        this._time = 0;\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        var i:number=this.numChildren;\r\n        while (i--){\r\n            var child:DisplayObject=this.getChildAt(i);\r\n            this.adapter.unregisterScriptObject(child);\r\n            this.removeChildAt(i);\r\n        }\r\n\r\n        /*\r\n        // force reset all potential childs on timeline. // this seem to slow things down without having positive any effect\r\n        for (var key in this._potentialInstances) {\r\n            if (this._potentialInstances[key]) {\r\n                if (this._potentialInstances[key].isAsset(MovieClip))\r\n                    (<MovieClip>this._potentialInstances[key]).reset();\r\n            }\r\n        }\r\n        */\r\n\r\n        if(this.parent!=null){\r\n            this._skipAdvance = true;\r\n            if (this._timeline.numFrames)\r\n                this._timeline.gotoFrame(this, 0);\r\n            this._currentFrameIndex = 0;\r\n        }\r\n\r\n        // i was thinking we might need to reset all children, but it makes stuff worse\r\n        /*\r\n        var i:number=this.numChildren;\r\n        while (i--) {\r\n            var child = this.getChildAt(i);\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip>child).reset();\r\n        }\r\n        */\r\n        //this.advanceChildren();\r\n\r\n    }\r\n\r\n    /*\r\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\r\n     */\r\n    public set_currentFrameIndex(value : number) {\r\n        this._skipAdvance = true;\r\n        this._currentFrameIndex = value;\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public set currentFrameIndex(value : number)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            value = Math.floor(value);\r\n            if (value < 0)\r\n                value = 0;\r\n            else if (value >= this._timeline.numFrames)\r\n                value = this._timeline.numFrames - 1;\r\n\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this._timeline.gotoFrame(this, value);\r\n\r\n            this._currentFrameIndex = value;\r\n        }\r\n    }\r\n\r\n    public addButtonListeners()\r\n    {\r\n        this._isButton = true;\r\n\r\n        this.stop();\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListeners()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n\t\tsuper.addChildAtDepth(child, depth, replace);\r\n        if(child.isAsset(MovieClip))\r\n            (<MovieClip>child).reset();\r\n        return child;\r\n    }\r\n\r\n    public get fps():number\r\n    {\r\n        return this._fps;\r\n    }\r\n\r\n    public set fps(newFps:number)\r\n    {\r\n        this._fps = newFps;\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update(timeDelta:number)\r\n    {\r\n        //this.logHierarchy();\r\n        // TODO: Implement proper elastic racetrack logic\r\n        var frameMarker:number = Math.floor(1000/this._fps);\r\n\r\n        // right now, just advance frame once time marker has been reached (only allow for one frame advance per-update)\r\n        this._time += Math.min(timeDelta, frameMarker);\r\n\r\n        if (this._time >= frameMarker) {\r\n            this._time = 0;\r\n            this.advanceFrame();\r\n            // after we advanced the scenegraph, we might have some script that needs executing\r\n            FrameScriptManager.execute_queue();\r\n\r\n            // now we want to execute the onEnter\r\n            this.dispatchEvent(this._enterFrame);\r\n            // after we executed the onEnter, we might have some script that needs executing\r\n            FrameScriptManager.execute_queue();\r\n            //console.log(\"update \"+this._currentFrameIndex);\r\n            //console.log(\"update key \"+this._constructedKeyFrameIndex);\r\n        }\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id]) {\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n        }\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n    public addScriptForExecution(value:Function)\r\n    {\r\n        FrameScriptManager.add_script_to_queue(this, value);\r\n    }\r\n    public activateChild(id:number)\r\n    {\r\n        this.addChild(this.getPotentialChildInstance(id));\r\n    }\r\n\r\n    public deactivateChild(id:number)\r\n    {\r\n        this.removeChild(this._potentialInstances[id]);\r\n    }\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone(newInstance:MovieClip = null) : DisplayObject\r\n    {\r\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\r\n\r\n        newInstance._fps = this._fps;\r\n        newInstance._loop = this._loop;\r\n\r\n        return newInstance;\r\n    }\r\n\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.iSetParent(value);\r\n       // this.reset();\r\n        /*  if(child.isAsset(MovieClip))\r\n         (<MovieClip>child).reset();*/\r\n\t}\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            var i;\r\n            var oldFrameIndex = this._currentFrameIndex;\r\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\r\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop) {\r\n                advance = false;\r\n            }\r\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\r\n                //console.log(\"one frame clip\");\r\n                this._currentFrameIndex = 0;\r\n                advance = false;\r\n            }\r\n            if (advance) {\r\n                //console.log(\"advance\");\r\n                ++this._currentFrameIndex;\r\n                if (this._currentFrameIndex == this._timeline.numFrames) {\r\n                    // looping - jump to first frame.\r\n                    this.currentFrameIndex=0;\r\n                }\r\n                else if (oldFrameIndex != this._currentFrameIndex){\r\n                    // not looping - construct next frame\r\n                    this._timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n\r\n            if (!skipChildren)\r\n                this.advanceChildren();\r\n\r\n        }\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n    private advanceChildren()\r\n    {\r\n        var len = this.numChildren;\r\n        for (var i = 0; i <  len; ++i) {\r\n            var child = this.getChildAt(i);\r\n            if (child instanceof MovieClip)\r\n                (<MovieClip>child).advanceFrame();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        for (var i = 0; i < len; i++) {\r\n            var child = this.getChildAt(i);\r\n\r\n            if (child instanceof MovieClip)\r\n                (<MovieClip>child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target._iMaskID;\r\n        console.log(str);\r\n    }\r\n\r\n    executePostConstructCommands():boolean\r\n    {\r\n        return true;\r\n    }\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number=0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars.push(this_char);\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width);\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n\t\tclone.geometry = new Geometry();\r\n\t\t//clone.material = this._material;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t//var len:number = this._subMeshes.length;\r\n\t\t//for (var i:number = 0; i < len; ++i)\r\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tvar len = this.numChildren;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this.getChildAt(i).clone());\r\n\r\n\t\t//if (this._animator)\r\n\t\t//\tclone.animator = this._animator.clone();\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tvar i=0;\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif((mc.parent!=null)||(mc.name==\"Scene 1\")) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:DirectionalLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tpublic _sceneGraphDepths:Array<number> = new Array<number>();\r\n\tprivate _pool:EntityNodePool;\r\n\tpublic _entity:DisplayObject;\r\n\tprivate _partition:Partition;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():DisplayObject\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:LightProbe;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade) {\r\n\t\t\tvar t:EntityNode = this._updateQueue;\r\n\t\t\twhile (t) {\r\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\t\tt.entity._iInternalUpdate();\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\t\t\t}\r\n\t\t\tthis.updateEntities();\r\n\t\t}\r\n\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tnode.removeFromParent();\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:PointLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport SceneGraphNodePool = require(\"awayjs-display/lib/pool/SceneGraphNodePool\");\r\n\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nclass SceneGraphNode extends NodeBase\r\n{\r\n    private _container : DisplayObjectContainer;\r\n    private _pool : SceneGraphNodePool;\r\n    private _partition:Partition;\r\n\r\n    constructor(pool:SceneGraphNodePool, container:DisplayObjectContainer, partition:Partition)\r\n    {\r\n        super();\r\n        this._pool = pool;\r\n        this._container = container;\r\n        this._partition = partition;\r\n    }\r\n\r\n\t//\r\n    ///**\r\n    // *\r\n    // * @param entity\r\n    // * @returns {away.partition.NodeBase}\r\n    // */\r\n    //public findPartitionForEntity(entity:IEntity):NodeBase\r\n    //{\r\n    //    var sceneGraphNode:SceneGraphNode = this._pool.getItem(entity.parent);\r\n    //    if (sceneGraphNode != this)\r\n    //        this.findNodeForContainer();\r\n    //\r\n    //\r\n    //        return sceneGraphNode;\r\n    //    }\r\n    //    return this;\r\n    //}\r\n\t//\r\n    //public iAddNode(node:NodeBase)\r\n    //{\r\n    //    super.iAddNode(node);\r\n\t//\r\n    //    //recalc depth array\r\n    //    var entityNode = <EntityNode>(node);\r\n    //    entityNode._sceneGraphDepths.length = 0;\r\n\t//\r\n    //    var parent:DisplayObjectContainer;\r\n    //    var child:DisplayObject = entityNode.entity;\r\n    //    while ((parent = child.parent)) {\r\n    //        entityNode._sceneGraphDepths.push(parent.getChildDepth(child));\r\n    //        child = parent;\r\n    //    }\r\n    //}\r\n}\r\nexport = SceneGraphNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:Skybox;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport ISceneGraphNodeClass\t\t\t= require(\"awayjs-display/lib/pool/ISceneGraphNodeClass\");\r\n\r\n\r\n/**\r\n * @class away.pool.SceneGraphNodePool\r\n */\r\nclass SceneGraphNodePool\r\n{\r\n\tprivate _sceneGraphNodePool:Object = new Object();\r\n\tprivate _sceneGraphNodeClass:ISceneGraphNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param sceneGraphNodeClass\r\n\t */\r\n\tconstructor(sceneGraphNodeClass:ISceneGraphNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._sceneGraphNodeClass = sceneGraphNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param displayObjectContainer\r\n\t * @returns SceneGraphNode\r\n\t */\r\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\r\n\t{\r\n\t\treturn (this._sceneGraphNodePool[displayObjectContainer.id] || (this._sceneGraphNodePool[displayObjectContainer.id] = new this._sceneGraphNodeClass(this, displayObjectContainer, this._partition)));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param displayObjectContainer\r\n\t */\r\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\r\n\t{\r\n\t\tvar sceneGraphNode:SceneGraphNode = this._sceneGraphNodePool[displayObjectContainer.id];\r\n\r\n\t\tif (sceneGraphNode)\r\n\t\t\tthis._sceneGraphNodePool[displayObjectContainer.id] = null;\r\n\r\n\t\treturn sceneGraphNode;\r\n\t}\r\n}\r\n\r\nexport = SceneGraphNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
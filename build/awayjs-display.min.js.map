{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "hitTestPoint",
    "x",
    "y",
    "z",
    "posDim",
    "positions",
    "dimensions",
    "curveDim",
    "curves",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "k",
    "curvex",
    "az",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pSkewX",
    "_pSkewY",
    "_pSkewZ",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "invalidateSkew",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifySkewChanged",
    "_skewChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "visible",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,gCAAA,SAAAjB,EAAAkB,EAAAJ,SCEMK,8CAA8C,SAASnB,EAAQkB,EAAOJ,SAEtEM,0CAA0C,SAASpB,EAAQkB,EAAOJ,SAElEO,wDAAwD,SAASrB,EAAQkB,EAAOJ,GACtF,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCVtB,IAAOG,GAAS/B,EAAc,oCDgB9B,ICXMgC,GAAiB,SAAAC,GAASX,EAA1BU,EAAiBC,EActB,SAdKD,KAgBJC,EAAAlB,KAAAQ,MAVDW,OAAAC,eAAWH,EAAAF,UAAA,cDcJM,ICdP,WAEC,MAAOb,MAAKc,cDeNC,WAAY,KACZC,aAAc,MCFdP,GAAAF,UAAAU,QAAP,YAOAN,QAAAC,eAAWH,EAAAF,UAAA,aDMJM,ICNP,WAEC,MAAOJ,GAAkBS,WDOnBH,WAAY,KACZC,aAAc,MCrCPP,GAAAS,UAAmB,2BA+BlC,OAAAT,IAjCgCD,EAmChCb,GAA2BJ,QAAlBkB,IDWNU,oCAAoCC,YAAYC,yCAAyC,SAAS5C,EAAQkB,EAAOJ,GAIpH,GErDM+B,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,mBAA4B,mBAK5BD,GAAAE,YAAqB,OACpC,OAAAF,KAEuB3B,GAAAJ,QAAd+B,OFuDHG,4CAA4C,SAAShD,EAAQkB,EAAOJ,GAC1E,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GG3EtB,IAAOqB,GAAgBjD,EAAc,8CACrC,IAAOkD,GAAgBlD,EAAc,8CAIrC,IAAOmD,GAAenD,EAAc,0CAEpC,IAAOoD,GAAgBpD,EAAc,4CH6ErC,IGtEMqD,GAAgB,SAAApB,GAASX,EAAzB+B,EAAgBpB,EAgGrB,SAhGKoB,GAgGOC,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAAlB,KAAAQ,KAAM+B,EA9FC/B,MAAAgC,aAAsB,CACtBhC,MAAAiC,UAAoB,IAMpBjC,MAAAkC,eAAyB,KAEzBlC,MAAAmC,QAAiB,CACjBnC,MAAAoC,QAAiB,CAsFxBpC,MAAKqC,WAAarC,KAAKsC,oBAAwCtC,KAAKsC,oBAAoBC,QAAQ,IAAM,GAAIb,GAAiB1B,KAAKsC,qBAAuB,GAAIZ,EAE3J1B,MAAKwC,QAAUxC,KAAKsC,oBAAwCtC,KAAKsC,oBAAoBC,QAAQ,IAAM,GAAIZ,GAAiB3B,KAAKsC,qBAAuB,GAAIX,EAExJ3B,MAAKgC,aAAehC,KAAKqC,WAAWI,MAvFrC9B,OAAAC,eAAWkB,EAAAvB,UAAA,aHuEJM,IGvEP,WAEC,MAAOiB,GAAiBZ,WHwElBH,WAAY,KACZC,aAAc,MGtErBL,QAAAC,eAAWkB,EAAAvB,UAAA,eHyEJM,IGzEP,WAEC,MAAOb,MAAKgC,cH0ENjB,WAAY,KACZC,aAAc,MGnErBL,QAAAC,eAAWkB,EAAAvB,UAAA,iBH2EJM,IG3EP,WAEC,MAAOb,MAAKkC,gBH4ENQ,IGzEP,SAAyBC,GAExB,GAAI3C,KAAKkC,gBAAkBS,EAC1B,MAED3C,MAAKkC,eAAiBS,CAEtB,IAAIA,EACH3C,KAAKiC,UAAY,MHwEZlB,WAAY,KACZC,aAAc,MGnErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UHyEJM,IGzEP,WAEC,MAAOb,MAAKmC,SH0ENpB,WAAY,KACZC,aAAc,MGrErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UH2EJM,IG3EP,WAEC,MAAOb,MAAKoC,SH4ENrB,WAAY,KACZC,aAAc,MGvErBL,QAAAC,eAAWkB,EAAAvB,UAAA,aH6EJM,IG7EP,WAEC,MAAOb,MAAKqC,YH8ENtB,WAAY,KACZC,aAAc,MGzErBL,QAAAC,eAAWkB,EAAAvB,UAAA,UH+EJM,IG/EP,WAEC,MAAOb,MAAKwC,SHgFNzB,WAAY,KACZC,aAAc,MGzErBL,QAAAC,eAAWkB,EAAAvB,UAAA,OH+EJM,IG/EP,WAEC,GAAIb,KAAKiC,UACRjC,KAAK4C,OAAO5C,KAAK6C,KAElB,OAAO7C,MAAK6C,MH+EN9B,WAAY,KACZC,aAAc,MG/Ddc,GAAAvB,UAAAuC,qBAAP,WAEC,MAAO9C,MAAKqC,WAAWxB,IAAIb,KAAKgC,cAG1BF,GAAAvB,UAAAwC,aAAP,SAAoBC,EAAUC,EAAUC,GAEvC,GAAIC,GAAgBnD,KAAKoD,UAAUC,UACnC,IAAIC,GAAkBtD,KAAKuD,OAAOF,UAElC,IAAID,GAAyBpD,KAAKoD,UAAUvC,IAAIb,KAAKgC,aACrD,IAAIuB,GAAsBvD,KAAKuD,OAAO1C,IAAIb,KAAKgC,aAE/C,IAAIwB,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAGJ,KAAI,GAAIC,GAAW,EAAGA,EAAIjE,KAAKgC,aAAciC,GAAG,EAChD,CACCT,EAAMS,EAAI,CACVR,GAAMQ,EAAI,CACVP,GAAMO,EAAI,CAEVN,GAAKP,EAAUI,EAAML,EACrBS,GAAKR,EAAUI,EAAML,EAAS,EAC9BU,GAAKT,EAAUK,EAAMN,EACrBW,GAAKV,EAAUK,EAAMN,EAAS,EAC9BY,GAAKX,EAAUM,EAAMP,EACrBa,GAAKZ,EAAUM,EAAMP,EAAS,EAE9B,IAAIe,GAAgBX,EAAOC,EAAMF,EACjC,IAAIa,GAAYf,EAAUI,EAAML,EAAS,EHyDhC,IGpDLiB,GAAYT,EAAKX,CACrB,IAAIqB,GAAYT,EAAKX,CHsDZ,IGnDLqB,GAAYR,EAAKF,CACrB,IAAIW,KAAcV,EAAKF,EHqDd,IGjDLa,GAAcJ,EAAKE,EAAOD,EAAKE,CAEnC,IAAIC,EAAM,EAAG,QAEbJ,GAAKP,EAAKb,CACVqB,GAAKP,EAAKb,CACVqB,GAAKN,EAAKF,CACVS,KAAOR,EAAKF,EAEZW,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAEbJ,GAAKL,EAAKf,CACVqB,GAAKL,EAAKf,CACVqB,GAAKV,EAAKI,CACVO,KAAOZ,EAAKI,EAEZS,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EAAG,QAGb,IAAIN,GAAU,EAAG,CAEhB,GAAIO,GAAaZ,EAAKF,CACtB,IAAIe,GAAaZ,EAAKF,CACtB,IAAIe,GAAaZ,EAAKJ,CACtB,IAAIiB,GAAaZ,EAAKJ,CACtB,IAAIiB,GAAa7B,EAAIW,CACrB,IAAImB,GAAa7B,EAAIW,CAErB,IAAImB,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAIM,IAAYH,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIE,IAAYR,EAAMK,EAAMD,EAAMH,GAAOK,CACzC,IAAI/F,GAAW,EAAIgG,EAAIC,CH+CX,IG5CRC,GAAY,GAAMF,EAAIC,CAC1B,IAAIE,GAAYF,CAEhB,IAAIhF,GAAWiF,EAAKA,EAAKC,CAEzB,IAAIlF,EAAI,GAAKkE,IAAO,EAAG,CACtB,aACM,IAAIlE,EAAI,GAAKkE,GAAM,EAAG,CAC5B,UAGF,MAAO,MAER,MAAO,OASDrC,GAAAvB,UAAA6E,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAUrF,KAAKqC,WAClB,MAED,IAAIgD,YAAkB3D,GAAkB,CACvC1B,KAAKuF,sBAAsBvF,KAAKqC,WAChCrC,MAAKqC,WAAgCgD,MAC/B,IAAIA,EAAQ,CAClBrF,KAAKqC,WAAWK,IAAI2C,EAAQC,OACtB,CACNtF,KAAKuF,sBAAsBvF,KAAKqC,WAChCrC,MAAKqC,WAAa,GAAIX,GAAiB1B,KAAKsC,qBAG7CtC,KAAKgC,aAAehC,KAAKqC,WAAWI,KAEpC,IAAIzC,KAAKkC,eACRlC,KAAKwF,qBAAqBxF,KAAK6C,KAEhC7C,MAAKyF,mBAELzF,MAAKwF,qBAAqBxF,KAAKqC,WAE/BrC,MAAK0F,eAAe1F,KAAKqC,WAAWsD,IAAM,MASpC7D,GAAAvB,UAAAqF,UAAP,SAAiBP,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,GAAUrF,KAAKwC,QAClB,MAED,IAAI6C,YAAkB1D,GAAkB,CACvC3B,KAAKuF,sBAAsBvF,KAAKwC,QAChCxC,MAAKwC,QAA6B6C,MAC5B,IAAIA,EAAQ,CAClBrF,KAAKwC,QAAQE,IAAI2C,EAAQC,OACnB,CACNtF,KAAKuF,sBAAsBvF,KAAKwC,QAChCxC,MAAKwC,QAAU,GAAIb,GAAiB3B,KAAKsC,qBAG1CtC,KAAKwF,qBAAqBxF,KAAKwC,QAE/BxC,MAAK0F,eAAe1F,KAAKwC,QAAQmD,IAAM,MAUjC7D,GAAAvB,UAAAqC,OAAP,SAAcyC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAKtF,KAAKkC,eAAgB,CACzB,GAAImD,GAAUrF,KAAK6C,KAClB,MAED,IAAIwC,YAAkB1D,GAAkB,CACvC3B,KAAKuF,sBAAsBvF,KAAK6C,KAChC7C,MAAK6C,KAA0BwC,MACzB,IAAIA,EAAQ,CAClB,IAAKrF,KAAK6C,KACT7C,KAAK6C,KAAO,GAAIlB,GAAiB3B,KAAKsC,oBAEvCtC,MAAK6C,KAAKH,IAAI2C,EAAQC,OAChB,IAAItF,KAAK6C,KAAM,CACrB7C,KAAKuF,sBAAsBvF,KAAK6C,KAChC7C,MAAK6C,KAAO,IACZ,aAEK,CACN7C,KAAK6C,KAAOhB,EAAiBgE,YAAY7F,KAAK8F,UAAW9F,KAAK6C,KAAM7C,KAAKsC,oBAAqBtC,KAAKgC,cAGpGhC,KAAKwF,qBAAqBxF,KAAK6C,KAE/B7C,MAAK0F,eAAe1F,KAAK6C,KAAK8C,IAAM,MAO9B7D,GAAAvB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOzB,KAAAQ,KAEbA,MAAKqC,WAAWpB,SAChBjB,MAAKqC,WAAa,IAElBrC,MAAKwC,QAAQvB,SACbjB,MAAKwC,QAAU,IAEf,IAAIxC,KAAK6C,KAAM,CACd7C,KAAK6C,KAAK5B,SACVjB,MAAK6C,KAAO,MASPf,GAAAvB,UAAAwF,MAAP,WAEC,GAAIA,GAAyB,GAAIjE,GAAiB9B,KAAKsC,oBAAqBtC,KAAKsC,oBAAoByD,QAAU,KAG/GA,GAAMC,cAAgB,KAEtB,IAAIhG,KAAKiG,QACRF,EAAMG,WAAWlG,KAAKiG,QAAQF,QAE/B,IAAI/F,KAAKmG,IACRJ,EAAMnD,OAAO5C,KAAKmG,IAAIJ,QAGvBA,GAAMC,cAAgBhG,KAAKkC,cAE3B,OAAO6D,GAGDjE,GAAAvB,UAAA6F,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjCzE,EAAiB0E,SAASF,EAAQC,EAAQtG,KAAKmG,IAAKnG,KAAKmG,IAAI1D,OAYvDX,GAAAvB,UAAAiG,MAAP,SAAaA,GAEZ3E,EAAiB2E,MAAMA,EAAOxG,KAAKoD,UAAWpD,KAAKgC,cAG7CF,GAAAvB,UAAAkG,oBAAP,SAA2BC,GAE1B7E,EAAiB4E,oBAAoBC,EAAW1G,KAAKoD,UAAW,KAAM,KAAMpD,KAAKoD,UAAUX,OAGrFX,GAAAvB,UAAAoG,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgBI,mBAAmBhH,KAAM6G,EAAUC,EAAoBC,GAxXjEjF,GAAAZ,UAAmB,0BA0XlC,OAAAY,IA5X+BF,EA8XLjC,GAAAJ,QAAjBuC,IHHNmF,8CAA8C7F,UAAU8F,8CAA8C9F,UAAU+F,0CAA0C,0CAA0CC,4CAA4C,8CAA8CC,wCAAwC,SAAS5I,EAAQkB,EAAOJ,GACjW,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GI7YtB,IAAOyB,GAAgBrD,EAAa,2CAEpC,IAAO6I,GAAW7I,EAAc,sCJwZhC,II1YM8I,GAAY,SAAA7G,GAASX,EAArBwH,EAAY7G,EA8BjB,SA9BK6G,GA8BOC,EAA8BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE1DnG,EAAAlB,KAAAQ,KAEAA,MAAK0H,aAAeD,CACpBzH,MAAK2H,aAAeH,CACpBxH,MAAK6G,SAAWA,EAzBjBlG,OAAAC,eAAW2G,EAAAhH,UAAA,aJkZJM,IIlZP,WAEC,MAAO0G,GAAarG,WJmZdH,WAAY,KACZC,aAAc,MI9YrBL,QAAAC,eAAW2G,EAAAhH,UAAA,eJoZJM,IIpZP,WAEC,MAAOb,MAAK2H,cJqZN5G,WAAY,KACZC,aAAc,MIjYduG,GAAAhH,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOzB,KAAAQ,MA1CAuH,GAAArG,UAAmB,sBAEnBqG,GAAAK,WAAyB9F,CA0CxC,OAAAyF,IA9C2BD,EAgD3B3H,GAAsBJ,QAAbgI,IJyYN9F,2CAA2C,2CAA2CoG,sCAAsC,wCAAwCC,yCAAyC,SAASrJ,EAAQkB,EAAOJ,GACxO,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GK/ctB,IAAO0H,GAAGtJ,EAAiB,2BAC3B,IAAOuJ,GAAcvJ,EAAc,sCACnC,IAAOwJ,GAAMxJ,EAAgB,8BAC7B,IAAOyJ,GAAUzJ,EAAe,kCAChC,IAAO0J,GAAQ1J,EAAgB,gCAC/B,IAAO2J,GAAa3J,EAAc,qCAClC,IAAO4J,GAAK5J,EAAgB,6BAE5B,IAAO6J,GAAQ7J,EAAgB,gCAC/B,IAAO+B,GAAS/B,EAAe,oCAC/B,IAAO8J,GAAmB9J,EAAa,6CAEvC,IAAO+J,GAAU/J,EAAe,uCAIhC,IAAO6C,GAAa7C,EAAc,wCAElC,IAAOgK,GAAehK,EAAc,0CAEpC,IAAOiK,GAASjK,EAAe,oCAI/B,IAAOkK,GAAkBlK,EAAa,6CAGtC,IAAOmK,GAAkBnK,EAAa,+CACtC,IAAOoK,GAAUpK,EAAe,uCLukBhC,IK/bMqK,GAAa,SAAApI,GAASX,EAAtB+I,EAAapI,EAsvClB,SAtvCKoI,KAAN,GAAAC,GAAA/I,IAwvCEU,GAAAlB,KAAAQ,KAhvCOA,MAAAgJ,kBAA4B,IAE5BhJ,MAAAiJ,qBAA+B,IAMhCjJ,MAAAkJ,iBAA4B,GAAIf,EAChCnI,MAAAmJ,sBAAgC,IAE7BnJ,MAAAoJ,UAAmB,CACnBpJ,MAAAqJ,QAA0B,IAQ5BrJ,MAAAsJ,UAAqB,GAAInB,EACzBnI,MAAAuJ,eAAyB,IAGzBvJ,MAAAwJ,uBAAkC,GAAIrB,EACtCnI,MAAAyJ,4BAAsC,IACtCzJ,MAAA0J,eAA0B,GAAIpB,EAC9BtI,MAAA2J,oBAA8B,IAC9B3J,MAAA4J,oBAA8B,IAC/B5J,MAAA6J,qBAA+B,IAC9B7J,MAAA8J,sBAAgC,IACjC9J,MAAA+J,uBAAiC,IAIhC/J,MAAAgK,eAAyB,IACzBhK,MAAAiK,eAAyB,IACzBjK,MAAAkK,WAAqB,IACrBlK,MAAAmK,YAAsB,IAOtBnK,MAAAoK,WAAoB,CACpBpK,MAAAqK,WAAoB,CACpBrK,MAAAsK,WAAoB,CACpBtK,MAAAuK,QAAmB,GAAIjC,EACvBtI,MAAAwK,OAAkB,GAAIrC,EAMtBnI,MAAAyK,SAAkB,CAMnBzK,MAAA0K,QAAiB,CACjB1K,MAAA2K,QAAiB,CACjB3K,MAAA4K,QAAiB,CACjB5K,MAAA6K,SAAkB,CAClB7K,MAAA8K,SAAkB,CAClB9K,MAAA+K,SAAkB,CACjB/K,MAAAgL,GAAY,CACZhL,MAAAiL,GAAY,CACZjL,MAAAkL,GAAY,CACZlL,MAAAmL,OAAkB,GAAI7C,EACtBtI,MAAAoL,YAAuB,GAAI9C,EAC3BtI,MAAAqL,mBAA8B,GAAIlD,EAClCnI,MAAAsL,WAAqB,IACrBtL,MAAAuL,YAAsB,IACtBvL,MAAAwL,KAAgB,GAAIlD,EACpBtI,MAAAyL,KAAgB,GAAInD,EACpBtI,MAAA0L,KAAgB,GAAIpD,EACpBtI,MAAA2L,KAAgB,GAAIrD,EAGrBtI,MAAA4L,kBAA4B,KAU5B5L,MAAA6L,cAAmC,GAAIC,MACtC9L,MAAA+L,aAAiC,GAAID,MAKlC9L,MAAAgM,2BAAqC,KACrChM,MAAAiM,sBAAuC,GAAIjE,EAG3ChI,MAAAkM,uBAAiC,KAyBrClM,MAAAmM,cAAuB7K,EAAcC,kBAkJrCvB,MAAAoM,aAAuB,IA+VvBpM,MAAAqM,gBAAyB5D,EAAgB6D,OAsoBzCtM,MAAKuM,uCAAyC,SAACC,GAA6B,MAAAzD,GAAK0D,8BAA8BD,GAC/GxM,MAAK0M,iCAAmC,SAACF,GAAgB,MAAAzD,GAAK4D,wBAAwBH,GAC5FxM,MAAK4M,qBAAuB,GAAId,OAAgB,EAEhD9L,MAAK4M,qBAAqB,GAAK5M,KAAKwL,IACpCxL,MAAK4M,qBAAqB,GAAK5M,KAAKyL,IACpCzL,MAAK4M,qBAAqB,GAAK5M,KAAK0L,IACpC1L,MAAK4M,qBAAqB,GAAK5M,KAAK2L,IAGpC3L,MAAK6M,WAAa,GAAInE,GAAU1I,KAEhCA,MAAKsJ,UAAUwD,UAEf9M,MAAKwK,OAAOuC,YAAY,GAAI,EAAG,EAG/B/M,MAAKgN,YAAcxE,EAAWyE,iBA/pC5BtM,OAAAC,eAAWkI,EAAAvI,UAAA,yBLuaPM,IKvaJ,WAEI,MAAOb,MAAKkM,wBLwaZxJ,IKraJ,SAAiCC,GAE7B3C,KAAKkM,uBAAyBvJ,CAC9B3C,MAAKkN,mCLsaLnM,WAAY,KACZC,aAAc,MKnalBL,QAAAC,eAAWkI,EAAAvI,UAAA,wBLsaPM,IKtaJ,WAEI,GAAIb,KAAKgM,2BACLhM,KAAKmN,6BAET,OAAOnN,MAAKiM,uBLsaZlL,WAAY,KACZC,aAAc,MKzZrBL,QAAAC,eAAWkI,EAAAvI,UAAA,SLkaJM,IKlaP,WAEO,MAAOb,MAAKoN,iBAAiBC,iBLma7B3K,IKhaJ,SAAiBC,GAEb3C,KAAKoN,iBAAiBC,gBAAkB1K,GLiaxC5B,WAAY,KACZC,aAAc,MK/ZlBL,QAAAC,eAAWkI,EAAAvI,UAAA,kBLkaPM,IKlaJ,WAEI,MAAOb,MAAKoN,kBLmaZ1K,IKhaJ,SAA0BC,GAGtB,GAAI3C,KAAKoN,iBACLpN,KAAKoN,iBAAiBE,oBAAoB,SAAUtN,KAAK0M,iCAG7D1M,MAAKuN,oBAAoB5K,EAEzB,IAAIA,EACAA,EAAM6K,iBAAiB,SAAUxN,KAAK0M,mCL8Z1C3L,WAAY,KACZC,aAAc,MK/XrBL,QAAAC,eAAWkI,EAAAvI,UAAA,cLqYJM,IKrYP,WAEC,MAAOb,MAAKgN,aLsYNtK,IKnYP,SAAsBC,GAErB,GAAI3C,KAAKgN,aAAerK,EACvB,MAED3C,MAAKgN,YAAcrK,CAEnB3C,MAAKyN,oBAEL,IAAIC,GAAa1N,KAAK+L,aAAatM,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK+L,aAAa7M,GAAGyO,gBLiYhB5M,WAAY,KACZC,aAAc,MKrTrBL,QAAAC,eAAWkI,EAAAvI,UAAA,SLkUJM,IKlUP,WAEC,MAAOb,MAAK4N,SAASC,MAAM7N,KAAK+K,ULmU1BrI,IKhUP,SAAiBoL,GAEhB,GAAI9N,KAAK+N,QAAUD,EAClB,MAED9N,MAAK+N,OAASD,CAEd9N,MAAK+K,SAAW+C,EAAI9N,KAAK4N,SAASC,KAElC7N,MAAKgO,mBL8TCjN,WAAY,KACZC,aAAc,MKzTrBL,QAAAC,eAAWkI,EAAAvI,UAAA,UL+TJM,IK/TP,WAECb,KAAKuK,QAAQvH,EAAIhD,KAAKoK,WAAWlC,EAAW+F,kBAC5CjO,MAAKuK,QAAQtH,EAAIjD,KAAKqK,WAAWnC,EAAW+F,kBAC5CjO,MAAKuK,QAAQrH,EAAIlD,KAAKsK,WAAWpC,EAAW+F,kBAE5C,OAAOjO,MAAKuK,SL+TN7H,IK5TP,SAAkBC,GAEjB3C,KAAKoK,WAAazH,EAAMK,EAAEkF,EAAWgG,kBACrClO,MAAKqK,WAAa1H,EAAMM,EAAEiF,EAAWgG,kBACrClO,MAAKsK,WAAa3H,EAAMO,EAAEgF,EAAWgG,kBAErClO,MAAKmO,sBL4TCpN,WAAY,KACZC,aAAc,MK1NrBL,QAAAC,eAAWkI,EAAAvI,UAAA,ULuTJM,IKvTP,WAEC,MAAOb,MAAK4N,SAASQ,OAAOpO,KAAK8K,ULwT3BpI,IKrTP,SAAkBoL,GAEjB,GAAI9N,KAAKqO,SAAWP,EACnB,MAED9N,MAAKqO,QAAUP,CAEf9N,MAAK8K,SAAWgD,EAAI9N,KAAK4N,SAASQ,MAElCpO,MAAKgO,mBLmTCjN,WAAY,KACZC,aAAc,MKzSrBL,QAAAC,eAAWkI,EAAAvI,UAAA,SLoTJM,IKpTP,WAEC,GAAIb,KAAKsO,SACR,MAAOtO,MAAKsO,SAASC,cAAcvO,KAEpC,OAAO,ILoTDe,WAAY,KACZC,aAAc,MK/SrBL,QAAAC,eAAWkI,EAAAvI,UAAA,yBLqTJM,IKrTP,WAEC,GAAIb,KAAKyJ,4BAA6B,CACrCzJ,KAAKwJ,uBAAuBgF,SAASxO,KAAKyO,eAC1CzO,MAAKwJ,uBAAuBkF,QAC5B1O,MAAKyJ,4BAA8B,MAEpC,MAAOzJ,MAAKwJ,wBLsTNzI,WAAY,KACZC,aAAc,MKjTrBL,QAAAC,eAAWkI,EAAAvI,UAAA,mBLuTJM,IKvTP,WAEC,MAAOb,MAAK4L,mBLwTNlJ,IKrTP,SAA2BC,GAE1B,GAAI3C,KAAK4L,mBAAqBjJ,EAC7B,MAED3C,MAAK4L,kBAAoBjJ,CAEzB,IAAIA,EAAO,CACV3C,KAAKkJ,iBAAiB4D,UACtB9M,MAAK0J,eAAeiF,MAAM,EAAG,EAAG,GAGjC3O,KAAK4O,6BLmTC7N,WAAY,KACZC,aAAc,MK9SrBL,QAAAC,eAAWkI,EAAAvI,UAAA,YLoTJM,IKpTP,WAEC,MAAOb,MAAK6O,YLqTN9N,WAAY,KACZC,aAAc,MKtSrBL,QAAAC,eAAWkI,EAAAvI,UAAA,cLsTJM,IKtTP,WAEC,MAAOb,MAAK8O,aLuTN/N,WAAY,KACZC,aAAc,MKpQrBL,QAAAC,eAAWkI,EAAAvI,UAAA,gBLuRJM,IKvRP,WAEC,MAAOb,MAAK8J,uBLwRNpH,IKrRP,SAAwBC,GAEvB,GAAI3C,KAAK8J,uBAAyBnH,EACjC,MAED3C,MAAK8J,sBAAwBnH,GLqRvB5B,WAAY,KACZC,aAAc,MK3QrBL,QAAAC,eAAWkI,EAAAvI,UAAA,ULqRJM,IKrRP,WAEC,MAAOb,MAAK+O,SLsRNhO,WAAY,KACZC,aAAc,MK7QrBL,QAAAC,eAAWkI,EAAAvI,UAAA,ULuRJM,IKvRP,WAEC,MAAOb,MAAKgP,SLwRNjO,WAAY,KACZC,aAAc,MK5QrBL,QAAAC,eAAWkI,EAAAvI,UAAA,QLyRJM,IKzRP,WAEO,MAAOb,MAAKiP,QL0RZvM,IKvRJ,SAAgBC,GAEZ3C,KAAKiP,OAAStM,GLwRd5B,WAAY,KACZC,aAAc,MKnQrBL,QAAAC,eAAWkI,EAAAvI,UAAA,ULoRJM,IKpRP,WAEC,MAAOb,MAAKsO,ULqRNvN,WAAY,KACZC,aAAc,MKhRrBL,QAAAC,eAAWkI,EAAAvI,UAAA,aLsRJM,IKtRP,WAEC,MAAOb,MAAKkP,oBLuRNxM,IKpRP,SAAqBC,GAEpB,GAAI3C,KAAKkP,oBAAsBvM,EAC9B,MAED3C,MAAKkP,mBAAqBvM,CAE1B3C,MAAKmP,0BAA0BnP,KAAKsO,SAAUtO,KAAKsO,SAASc,oBAAsB,KAAMpP,KAAKqP,ULmRvFtO,WAAY,KACZC,aAAc,MK9QrBL,QAAAC,eAAWkI,EAAAvI,UAAA,mBLoRJM,IKpRP,WAEC,MAAOb,MAAKsP,mBLqRN5M,IKlRP,SAA2BC,GAE1B3C,KAAKsP,kBAAoB3M,GLmRnB5B,WAAY,KACZC,aAAc,MK9QrBL,QAAAC,eAAWkI,EAAAvI,UAAA,SLoRJM,IKpRP,WAEC,MAAOb,MAAKmL,QLqRNzI,IKjRP,SAAiB6M,GAEhBvP,KAAKmL,OAASoE,EAAMxJ,OAEpB/F,MAAKwP,mBLiRCzO,WAAY,KACZC,aAAc,MKrPrBL,QAAAC,eAAWkI,EAAAvI,UAAA,QLkRJM,IKlRP,WAEC,MAAOb,MAAKyP,OLmRN1O,WAAY,KACZC,aAAc,MKhQrBL,QAAAC,eAAWkI,EAAAvI,UAAA,aL0QJM,IK1QP,WAEC,MAAOb,MAAKoK,WAAWlC,EAAW+F,oBL2Q5BvL,IKxQP,SAAqBoL,GAEpB,GAAI9N,KAAK0P,WAAa5B,EACrB,MAED9N,MAAKoK,WAAa0D,EAAI5F,EAAWgG,kBAEjClO,MAAKmO,sBLuQCpN,WAAY,KACZC,aAAc,MK9PrBL,QAAAC,eAAWkI,EAAAvI,UAAA,aLwQJM,IKxQP,WAEC,MAAOb,MAAKqK,WAAWnC,EAAW+F,oBLyQ5BvL,IKtQP,SAAqBoL,GAEpB,GAAI9N,KAAK2P,WAAa7B,EACrB,MAED9N,MAAKqK,WAAayD,EAAI5F,EAAWgG,kBAEjClO,MAAKmO,sBLqQCpN,WAAY,KACZC,aAAc,MK5PrBL,QAAAC,eAAWkI,EAAAvI,UAAA,aLsQJM,IKtQP,WAEC,MAAOb,MAAKsK,WAAWpC,EAAW+F,oBLuQ5BvL,IKpQP,SAAqBoL,GAEpB,GAAI9N,KAAK4P,WAAa9B,EACrB,MAED9N,MAAKsK,WAAawD,EAAI5F,EAAWgG,kBAEjClO,MAAKmO,sBLmQCpN,WAAY,KACZC,aAAc,MKrMrBL,QAAAC,eAAWkI,EAAAvI,UAAA,ULgNJM,IKhNP,WAEC,MAAOb,MAAK6K,ULiNNnI,IK9MP,SAAkBoL,GAGjB9N,KAAK6P,OAAS,IAEd,IAAI7P,KAAK6K,UAAYiD,EACpB,MAED9N,MAAK6K,SAAWiD,CAEhB9N,MAAKgO,mBL4MCjN,WAAY,KACZC,aAAc,MKlMrBL,QAAAC,eAAWkI,EAAAvI,UAAA,UL6MJM,IK7MP,WAEC,MAAOb,MAAK8K,UL8MNpI,IK3MP,SAAkBoL,GAGjB9N,KAAKqO,QAAU,IAEf,IAAIrO,KAAK8K,UAAYgD,EACpB,MAED9N,MAAK8K,SAAWgD,CAEhB9N,MAAKgO,mBLyMCjN,WAAY,KACZC,aAAc,MK9LrBL,QAAAC,eAAWkI,EAAAvI,UAAA,UL0MJM,IK1MP,WAEC,MAAOb,MAAK+K,UL2MNrI,IKxMP,SAAkBoL,GAGjB9N,KAAK+N,OAAS,IAEd,IAAI/N,KAAK+K,UAAY+C,EACpB,MAED9N,MAAK+K,SAAW+C,CAEhB9N,MAAKgO,mBLsMCjN,WAAY,KACZC,aAAc,MKhMrBL,QAAAC,eAAWkI,EAAAvI,UAAA,SLuMJM,IKvMP,WAEC,MAAOb,MAAK0K,SLwMNhI,IKrMP,SAAiBoL,GAEhB,GAAI9N,KAAK0K,SAAWoD,EACnB,MAED9N,MAAK0K,QAAUoD,CAEf9N,MAAK8P,kBLoMC/O,WAAY,KACZC,aAAc,MK9LrBL,QAAAC,eAAWkI,EAAAvI,UAAA,SLqMJM,IKrMP,WAEC,MAAOb,MAAK2K,SLsMNjI,IKnMP,SAAiBoL,GAEhB,GAAI9N,KAAK2K,SAAWmD,EACnB,MAED9N,MAAK2K,QAAUmD,CAEf9N,MAAK8P,kBLkMC/O,WAAY,KACZC,aAAc,MK5LrBL,QAAAC,eAAWkI,EAAAvI,UAAA,SLmMJM,IKnMP,WAEC,MAAOb,MAAK4K,SLoMNlI,IKjMP,SAAiBoL,GAEhB,GAAI9N,KAAK4K,SAAWkD,EACnB,MAED9N,MAAK4K,QAAUkD,CAEf9N,MAAK8P,kBLgMC/O,WAAY,KACZC,aAAc,MK3LrBL,QAAAC,eAAWkI,EAAAvI,UAAA,SLiMJM,IKjMP,WAEC,MAAOb,MAAKqP,SLkMNtO,WAAY,KACZC,aAAc,MK7LrBL,QAAAC,eAAWkI,EAAAvI,UAAA,iBLmMJM,IKnMP,WAEC,GAAIb,KAAK2J,oBAAqB,CAC7B,IAAK3J,KAAKsL,YAActL,KAAKmM,eAAiB7K,EAAcE,YAAa,CACxExB,KAAK0J,eAAiB1J,KAAKyO,eAAesB,gBAAgB/P,KAAKoL,iBAEzD,CACNpL,KAAKyO,eAAeuB,aAAa,EAAGhQ,KAAK0J,gBAG1C1J,KAAK2J,oBAAsB,MAE5B,MAAO3J,MAAK0J,gBLmMN3I,WAAY,KACZC,aAAc,MKjMrBL,QAAAC,eAAWkI,EAAAvI,UAAA,kBLoMJM,IKpMP,WAEC,GAAIb,KAAKmJ,sBACRnJ,KAAKiQ,uBAEN,OAAOjQ,MAAKkJ,kBLoMNnI,WAAY,KACZC,aAAc,MKvKrBL,QAAAC,eAAWkI,EAAAvI,UAAA,wBL6KJM,IK7KP,WAEC,MAAOb,MAAKkQ,uBL8KNnP,WAAY,KACZC,aAAc,MKzKrBL,QAAAC,eAAWkI,EAAAvI,UAAA,gBL+KJM,IK/KP,WAEC,MAAOb,MAAKmQ,eLgLNzN,IK7KP,SAAwBC,GAEvB,GAAIA,GAAS3C,KAAKmQ,cACjB,MAEDnQ,MAAKmQ,cAAgBxN,CAErB,IAAI+K,GAAa1N,KAAK+L,aAAatM,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK+L,aAAa7M,GAAGkR,aAAepQ,KAAKmQ,eL4KpCpP,WAAY,KACZC,aAAc,MKpIrBL,QAAAC,eAAWkI,EAAAvI,UAAA,aL6KJM,IK7KP,WAEC,MAAOb,MAAK6M,YL8KN9L,WAAY,KACZC,aAAc,MKvKrBL,QAAAC,eAAWkI,EAAAvI,UAAA,WL+KJM,IK/KP,WAEC,MAAOb,MAAK4J,qBLgLNlH,IK7KP,SAAmBC,GAElB,GAAI3C,KAAK4J,qBAAuBjH,EAC/B,MAED3C,MAAK4J,oBAAsBjH,CAE3B3C,MAAKqQ,2BAA2BrQ,KAAKsO,SAAUtO,KAAKsO,SAASgC,cAAgB,OL4KvEvP,WAAY,KACZC,aAAc,MKhKrBL,QAAAC,eAAWkI,EAAAvI,UAAA,SL6KJM,IK7KP,WAEC,MAAOb,MAAK4N,SAAS2C,MAAMvQ,KAAK6K,UL8K1BnI,IK3KP,SAAiBoL,GAEhB,GAAI9N,KAAK6P,QAAU/B,EAClB,MAED9N,MAAK6P,OAAS/B,CAEd9N,MAAK6K,SAAWiD,EAAI9N,KAAK4N,SAAS2C,KAElCvQ,MAAKgO,mBLyKCjN,WAAY,KACZC,aAAc,MK7JrBL,QAAAC,eAAWkI,EAAAvI,UAAA,KL0KJM,IK1KP,WAEC,MAAOb,MAAKgL,IL2KNtI,IKxKP,SAAaoL,GAEZ,GAAI9N,KAAKgL,IAAM8C,EACd,MAED9N,MAAKgL,GAAK8C,CAEV9N,MAAKwQ,sBLuKCzP,WAAY,KACZC,aAAc,MK3JrBL,QAAAC,eAAWkI,EAAAvI,UAAA,KLwKJM,IKxKP,WAEC,MAAOb,MAAKiL,ILyKNvI,IKtKP,SAAaoL,GAEZ,GAAI9N,KAAKiL,IAAM6C,EACd,MAED9N,MAAKiL,GAAK6C,CAEV9N,MAAKwQ,sBLqKCzP,WAAY,KACZC,aAAc,MKhJrBL,QAAAC,eAAWkI,EAAAvI,UAAA,KLsKJM,IKtKP,WAEC,MAAOb,MAAKkL,ILuKNxI,IKpKP,SAAaoL,GAEZ,GAAI9N,KAAKkL,IAAM4C,EACd,MAED9N,MAAKkL,GAAK4C,CAEV9N,MAAKwQ,sBLmKCzP,WAAY,KACZC,aAAc,MK9JrBL,QAAAC,eAAWkI,EAAAvI,UAAA,WLoKJM,IKpKP,WAEC,MAAOb,MAAKyK,ULqKN/H,IKlKP,SAAmBC,GAElB3C,KAAKyK,SAAW9H,GLmKV5B,WAAY,KACZC,aAAc,MKhId8H,GAAAvI,UAAAiN,iBAAP,SAAwBiD,EAAaC,GAEpChQ,EAAAH,UAAMiN,iBAAgBhO,KAAAQ,KAACyQ,EAAMC,EAE7B,QAAQD,GACP,IAAK7H,GAAmB+H,iBACvB3Q,KAAK4Q,yBAA2B,IAChC,MACD,KAAKhI,GAAmBiI,iBACvB7Q,KAAK8Q,yBAA2B,IAChC,MACD,KAAKlI,GAAmBmI,aACvB/Q,KAAKgR,qBAAuB,IAC5B,MACD,KAAKpI,GAAmBqI,cACvBjR,KAAKkR,sBAAwB,IAC7B,MACD,KAAKtI,GAAmBuI,cACvBnR,KAAKoR,sBAAwB,IAC7B,MACD,KAAKxI,GAAmByI,uBACvBrR,KAAKsR,+BAAiC,IACtC,QAOIxI,GAAAvI,UAAAwF,MAAP,WAEC,GAAIA,GAAsB,GAAI+C,EAC9B/C,GAAMwJ,MAAQvP,KAAKuP,KACnBxJ,GAAMwL,WAAavR,KAAKuR,UACxBxL,GAAMyL,KAAOxR,KAAKwR,IAEZzL,GAAMqD,SAAWpJ,KAAKoJ,QACtBrD,GAAMsD,QAAUrJ,KAAKqJ,QAASrJ,KAAKqJ,QAAQoI,SAAW,IAG5D,OAAO1L,GAMD+C,GAAAvI,UAAAU,QAAP,WAEC,GAAIjB,KAAK0R,OACR1R,KAAK0R,OAAOC,YAAY3R,KAEzB,OAAOA,KAAK6L,cAAcpM,OACzBO,KAAK6L,cAAc,GAAG5K,UAMjB6H,GAAAvI,UAAAqR,aAAP,WAEC5R,KAAKiB,UA2BC6H,GAAAvI,UAAAsR,UAAP,SAAiBC,GAEhB,MAAO9R,MAAK+R,QAqBNjJ,GAAAvI,UAAAyR,QAAP,SAAeF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEd,MAAO9R,MAAK+R,QAGNjJ,GAAAvI,UAAAqN,OAAP,SAAckE,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEb,GAAI9R,KAAKiS,eACRjS,KAAKiS,eAAeC,YAGrB,IAAIlS,KAAKgJ,kBAAmB,CAC3BhJ,KAAKmS,mBAEL,IAAInS,KAAK6P,QAAU,KAAM,CACxB7P,KAAK6K,SAAW7K,KAAK6P,OAAO7P,KAAKoS,YAAY7B,KAC7CvQ,MAAKgO,kBAIN,GAAIhO,KAAKqO,SAAW,KAAM,CACzBrO,KAAK8K,SAAW9K,KAAKqO,QAAQrO,KAAKoS,YAAYhE,MAC9CpO,MAAKgO,kBAIN,GAAIhO,KAAK+N,QAAU,KAAM,CACxB/N,KAAK+K,SAAW/K,KAAK+N,OAAO/N,KAAKoS,YAAYvE,KAC7C7N,MAAKgO,mBAIP,GAAI8D,GAAyB,MAAQA,GAAyB9R,KAC7D,MAAOA,MAAKoS,WAEb,IAAIN,GAAyB9R,KAAKsO,SACjC,MAAOtO,MAAKuR,WAAWc,aAAarS,KAAKoS,iBAEzC,OAAON,GAAsBQ,sBAAsBD,aAAarS,KAAKyO,eAAe4D,aAAarS,KAAKoS,cAGjGtJ,GAAAvI,UAAAgS,UAAP,SAAiBT,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEhB,GAAI9R,KAAKiS,eACRjS,KAAKiS,eAAeC,YAErB,IAAIlS,KAAKiJ,qBACRjJ,KAAKwS,sBAEN,OAAOxS,MAAKyS,eAoBN3J,GAAAvI,UAAAmS,cAAP,SAAqBC,GAEpB,GAAIC,GAAe5S,KAAKsS,sBAAsBvC,gBAAgB,GAAIzH,GAASqK,EAAM3P,EAAG2P,EAAM1P,EAAG,GAC7F,OAAO,IAAIoF,GAAMuK,EAAI5P,EAAG4P,EAAI3P,GAqBtB6F,GAAAvI,UAAAsS,gBAAP,SAAuBC,GAEtB,MAAO9S,MAAKsS,sBAAsBvC,gBAAgB+C,GAW5ChK,GAAAvI,UAAAwS,cAAP,SAAqBC,GAEpB,GAAIC,GAAaD,EAAIpF,QACrB,KAAIqF,EAAQ,MAAO,MACnB,IAAIC,GAAgB,GAAI7K,GAAM4K,EAAOjQ,EAAEiQ,EAAOhQ,EAC9C,IAAIkQ,GAAmB,GAAI9K,GAAM4K,EAAOjQ,EAAEiQ,EAAOhQ,EAAEgQ,EAAO7E,OAC1D,IAAIgF,GAAiB,GAAI/K,GAAM4K,EAAOjQ,EAAEiQ,EAAO1C,MAAM0C,EAAOhQ,EAC5D,IAAIoQ,GAAoB,GAAIhL,GAAM4K,EAAOjQ,EAAEiQ,EAAO1C,MAAM0C,EAAOhQ,EAAEgQ,EAAO7E,OAExE8E,GAAUlT,KAAK0S,cAAcM,EAAIM,cAAcJ,GAC/CC,GAAanT,KAAK0S,cAAcM,EAAIM,cAAcH,GAClDC,GAAWpT,KAAK0S,cAAcM,EAAIM,cAAcF,GAChDC,GAAcrT,KAAK0S,cAAcM,EAAIM,cAAcD,GAEnD,IAAIE,GAAUvT,KAAK4N,QACnB,KAAI2F,EAAK,MAAO,MAGhB,IAAGL,EAAQlQ,GAAKuQ,EAAIC,MAAQN,EAAQlQ,GAAKuQ,EAAIC,MAAQN,EAAQjQ,GAAKsQ,EAAIE,KAAOP,EAAQjQ,GAAKsQ,EAAIG,OAAQ,MAAO,KAC7G,IAAGP,EAAWnQ,GAAKuQ,EAAIC,MAAQL,EAAWnQ,GAAKuQ,EAAIC,MAAQL,EAAWlQ,GAAKsQ,EAAIE,KAAON,EAAWlQ,GAAKsQ,EAAIG,OAAQ,MAAO,KACzH,IAAGN,EAASpQ,GAAKuQ,EAAIC,MAAQJ,EAASpQ,GAAKuQ,EAAIC,MAAQJ,EAASnQ,GAAKsQ,EAAIE,KAAOL,EAASnQ,GAAKsQ,EAAIG,OAAQ,MAAO,KACjH,IAAGL,EAAYrQ,GAAKuQ,EAAIC,MAAQH,EAAYrQ,GAAKuQ,EAAIC,MAAQH,EAAYpQ,GAAKsQ,EAAIE,KAAOJ,EAAYpQ,GAAKsQ,EAAIG,OAAQ,MAAO,KL0GvH,IKvGFC,GAAaP,EAASnQ,EAAIiQ,EAAQjQ,CACtC,IAAI2Q,KAAeR,EAASpQ,EAAIkQ,EAAQlQ,EAExC,IAAI6Q,GAAaR,EAAYpQ,EAAImQ,EAASnQ,CAC1C,IAAI6Q,KAAeT,EAAYrQ,EAAIoQ,EAASpQ,EAE5C,IAAI+Q,GAAaZ,EAAWlQ,EAAIoQ,EAAYpQ,CAC5C,IAAI+Q,KAAeb,EAAWnQ,EAAIqQ,EAAYrQ,EAE9C,IAAIiR,GAAaf,EAAQjQ,EAAIkQ,EAAWlQ,CACxC,IAAIiR,KAAehB,EAAQlQ,EAAImQ,EAAWnQ,EAE1C,IAAImR,GAAaZ,EAAIC,KAAON,EAAQlQ,CACpC,IAAIoR,GAAab,EAAIE,IAAMP,EAAQjQ,CACnC,IAAIoR,GAAad,EAAIC,KAAOJ,EAASpQ,CACrC,IAAIsR,GAAaf,EAAIE,IAAML,EAASnQ,CACpC,IAAIsR,GAAahB,EAAIC,KAAOH,EAAYrQ,CACxC,IAAIwR,GAAajB,EAAIE,IAAMJ,EAAYpQ,CACvC,IAAIwR,GAAalB,EAAIC,KAAOL,EAAWnQ,CACvC,IAAI0R,GAAanB,EAAIE,IAAMN,EAAWlQ,CAEtC,IAAI0R,GAAehB,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIQ,GAAef,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIO,GAAed,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIM,GAAeb,EAAIQ,EAAMP,EAAIQ,CAGjC,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMZ,EAAIwB,MAAQ7B,EAAQlQ,CAC1BoR,GAAMb,EAAIE,IAAMP,EAAQjQ,CACxBoR,GAAMd,EAAIwB,MAAQ3B,EAASpQ,CAC3BsR,GAAMf,EAAIE,IAAML,EAASnQ,CACzBsR,GAAMhB,EAAIwB,MAAQ1B,EAAYrQ,CAC9BwR,GAAMjB,EAAIE,IAAMJ,EAAYpQ,CAC5BwR,GAAMlB,EAAIwB,MAAQ5B,EAAWnQ,CAC7B0R,GAAMnB,EAAIE,IAAMN,EAAWlQ,CAE3B0R,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMZ,EAAIC,KAAON,EAAQlQ,CACzBoR,GAAMb,EAAIG,OAASR,EAAQjQ,CAC3BoR,GAAMd,EAAIC,KAAOJ,EAASpQ,CAC1BsR,GAAMf,EAAIG,OAASN,EAASnQ,CAC5BsR,GAAMhB,EAAIC,KAAOH,EAAYrQ,CAC7BwR,GAAMjB,EAAIG,OAASL,EAAYpQ,CAC/BwR,GAAMlB,EAAIC,KAAOL,EAAWnQ,CAC5B0R,GAAMnB,EAAIG,OAASP,EAAWlQ,CAE9B0R,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMZ,EAAIwB,MAAQ7B,EAAQlQ,CAC1BoR,GAAMb,EAAIG,OAASR,EAAQjQ,CAC3BoR,GAAMd,EAAIwB,MAAQ3B,EAASpQ,CAC3BsR,GAAMf,EAAIG,OAASN,EAASnQ,CAC5BsR,GAAMhB,EAAIwB,MAAQ1B,EAAYrQ,CAC9BwR,GAAMjB,EAAIG,OAASL,EAAYpQ,CAC/BwR,GAAMlB,EAAIwB,MAAQ5B,EAAWnQ,CAC7B0R,GAAMnB,EAAIG,OAASP,EAAWlQ,CAE9B0R,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExD,OAAO,OAqBDhM,GAAAvI,UAAAwC,aAAP,SAAoBC,EAAUC,EAAU+R,EAA2BC,GAA3B,GAAAD,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,MAElE,MAAO,OASDnM,GAAAvI,UAAA2U,OAAP,SAAcC,EAAiBC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAG9B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIJ,GAAU,KACbA,EAAS9M,EAASmN,WAElBL,GAAOM,WAERJ,GAAQH,EAAOQ,SAAS3V,KAAKuR,WAAWuB,SACxCwC,GAAMI,WAENH,GAAQH,EAAOQ,aAAaN,EAC5BC,GAAMG,WAEN,IAAIH,EAAM9V,OAAS,IAAM,CACxB8V,EAAMvS,EAAIoS,EAAOnS,CACjBsS,GAAMtS,EAAImS,EAAOpS,CACjBuS,GAAMrS,EAAI,CACVqS,GAAMG,YAGPL,EAAQC,EAAMM,aAAaL,EAE3BC,GAAMpN,EAAcyN,kBAEpBL,GAAI,GAAKD,EAAMvS,CACfwS,GAAI,GAAKD,EAAMtS,CACfuS,GAAI,GAAKD,EAAMrS,CACfsS,GAAI,GAAK,CAETA,GAAI,GAAKH,EAAMrS,CACfwS,GAAI,GAAKH,EAAMpS,CACfuS,GAAI,GAAKH,EAAMnS,CACfsS,GAAI,GAAK,CAETA,GAAI,GAAKF,EAAMtS,CACfwS,GAAI,GAAKF,EAAMrS,CACfuS,GAAI,IAAMF,EAAMpS,CAChBsS,GAAI,IAAM,CAEV,IAAIM,GAAa,GAAI3N,EACrB2N,GAAEC,gBAAgBP,EAElB,IAAIQ,GAAeF,EAAEG,YAAY,EAEjCjW,MAAKoK,WAAa4L,EAAIhT,CACtBhD,MAAKqK,WAAa2L,EAAI/S,CACtBjD,MAAKsK,WAAa0L,EAAI9S,CAEtBlD,MAAKmO,qBA0BCrF,GAAAvI,UAAA+S,cAAP,SAAqBX,GAEpB,GAAIC,GAAe5S,KAAKyO,eAAesB,gBAAgB,GAAIzH,GAASqK,EAAM3P,EAAG2P,EAAM1P,EAAG,GACtF,OAAO,IAAIoF,GAAMuK,EAAI5P,EAAG4P,EAAI3P,GA4BtB6F,GAAAvI,UAAA2V,gBAAP,SAAuBpD,GAEtB,MAAO9S,MAAKyO,eAAesB,gBAAgB+C,GAWrChK,GAAAvI,UAAA4V,OAAP,SAAc/R,EAAWC,EAAW+R,GAEnC,GAAIpW,KAAKgL,IAAM5G,GAAMpE,KAAKiL,IAAM5G,GAAMrE,KAAKkL,IAAMkL,EAChD,MAEDpW,MAAKgL,GAAK5G,CACVpE,MAAKiL,GAAK5G,CACVrE,MAAKkL,GAAKkL,CAEVpW,MAAKwQ,qBAUC1H,GAAAvI,UAAA8V,UAAP,SAAiBjS,EAAWC,EAAW+R,GAEtC,GAAIpW,KAAKmL,QAAU,KAClBnL,KAAKmL,OAAS,GAAI7C,EAEnBtI,MAAKmL,OAAOnI,GAAKoB,CACjBpE,MAAKmL,OAAOlI,GAAKoB,CACjBrE,MAAKmL,OAAOjI,GAAKkT,CAEjBpW,MAAKwP,kBAQC1G,GAAAvI,UAAA+V,MAAP,SAAaC,GAEZvW,KAAKwW,OAAOlO,EAASmO,OAAQF,GAMvBzN,GAAAvI,UAAAmW,wBAAP,SAA+BC,GAE9B,GAAI3W,KAAKqM,iBAAmB5D,EAAgBmO,aAAc,CACzD,GAAIC,GAAwBF,EAAOlI,eAAewH,WAClD,IAAIzP,GAAiBqQ,EAAM,EAC3BA,GAAM,GAAK7W,KAAK8W,aAChBtQ,GAAMxD,EAAIhD,KAAK6K,QACfrE,GAAMvD,EAAIjD,KAAK8K,QACftE,GAAMtD,EAAIlD,KAAK+K,QACf/K,MAAKqL,mBAAmB0L,UAAUF,EAGlC,KAAK7W,KAAKsL,YAActL,KAAKmM,eAAiB7K,EAAcE,YAC3DxB,KAAKqL,mBAAmB2L,oBAAoBhX,KAAKmL,OAAOnI,EAAEhD,KAAK6K,UAAW7K,KAAKmL,OAAOlI,EAAEjD,KAAK8K,UAAW9K,KAAKmL,OAAOjI,EAAElD,KAAK+K,SAE5H,OAAO/K,MAAKqL,mBAGb,MAAOrL,MAAKyO,eAQN3F,GAAAvI,UAAA0W,KAAP,SAAYV,GAEXvW,KAAKwW,OAAOlO,EAAS4O,OAAQX,GASvBzN,GAAAvI,UAAAiW,OAAP,SAAcW,EAAeZ,GAE5B,GAAIT,GAAa,GAAI3N,EACrB2N,GAAEsB,gBAAgBb,EAAOY,EAEzB,IAAInB,GAAeF,EAAEG,YAAY,EAEjCjW,MAAKoK,YAAc4L,EAAIhT,CACvBhD,MAAKqK,YAAc2L,EAAI/S,CACvBjD,MAAKsK,YAAc0L,EAAI9S,CAEvBlD,MAAKmO,qBAUCrF,GAAAvI,UAAA8W,SAAP,SAAgB1T,EAAWC,EAAWO,GAErCnE,KAAKoK,WAAazG,EAAGuE,EAAWgG,kBAChClO,MAAKqK,WAAazG,EAAGsE,EAAWgG,kBAChClO,MAAKsK,WAAanG,EAAG+D,EAAWgG,kBAEhClO,MAAKmO,qBAMCrF,GAAAvI,UAAA+M,oBAAP,SAA2BmD,EAAaC,GAEvChQ,EAAAH,UAAM+M,oBAAmB9N,KAAAQ,KAACyQ,EAAMC,EAEhC,IAAI1Q,KAAKsX,iBAAiB7G,EAAMC,GAC/B,MAED,QAAQD,GACP,IAAK7H,GAAmB+H,iBACvB3Q,KAAK4Q,yBAA2B,KAChC,MAED,KAAKhI,GAAmBiI,iBACvB7Q,KAAK8Q,yBAA2B,KAChC,MAED,KAAKlI,GAAmBqI,cACvBjR,KAAKkR,sBAAwB,KAC7B,QAUIpI,GAAAvI,UAAAgX,UAAP,SAAiBJ,EAAeK,GAE/B,GAAIxU,GAAWmU,EAAKnU,EAAGC,EAAWkU,EAAKlU,EAAGC,EAAWiU,EAAKjU,CAC1D,IAAIwK,GAAa8J,EAASC,KAAKC,KAAK1U,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,EAElDlD,MAAKgL,IAAMhI,EAAE0K,CACb1N,MAAKiL,IAAMhI,EAAEyK,CACb1N,MAAKkL,IAAMhI,EAAEwK,CAEb1N,MAAKwQ,qBASC1H,GAAAvI,UAAAoX,eAAP,SAAsBR,EAAeK,GAEpC,GAAIxU,GAAWmU,EAAKnU,EAAGC,EAAWkU,EAAKlU,EAAGC,EAAWiU,EAAKjU,CAC1D,IAAIwK,GAAa8J,EAASC,KAAKC,KAAK1U,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,EAElDlD,MAAKuR,WAAWyF,mBAAmBhU,EAAE0K,EAAKzK,EAAEyK,EAAKxK,EAAEwK,EAEnD1N,MAAKsJ,UAAU0G,aAAa,EAAGhQ,KAAKwL,KAEpCxL,MAAKgL,GAAKhL,KAAKwL,KAAKxI,CACpBhD,MAAKiL,GAAKjL,KAAKwL,KAAKvI,CACpBjD,MAAKkL,GAAKlL,KAAKwL,KAAKtI,CAEpBlD,MAAKwQ,qBAQC1H,GAAAvI,UAAAqX,IAAP,SAAWrB,GAEVvW,KAAKwW,OAAOlO,EAASmN,OAAQc,GAW9B5V,QAAAC,eAAWkI,EAAAvI,UAAA,uBLuBJM,IKvBP,WAEC,MAAOb,MAAK6X,qBLwBN9W,WAAY,KACZC,aAAc,MKjBrBL,QAAAC,eAAWkI,EAAAvI,UAAA,cLyBJM,IKzBP,WAEC,GAAIb,KAAKuJ,eACRvJ,KAAK8X,kBAEN,OAAO9X,MAAKsJ,WLyBN5G,IKtBP,SAAsBoL,GLkCX,GKpBNiK,GAA2BjK,EAAImI,WACnC,IAAID,EAEJA,GAAM+B,EAAS,EAEf,IAAI/X,KAAKgL,IAAMgL,EAAIhT,GAAKhD,KAAKiL,IAAM+K,EAAI/S,GAAKjD,KAAKkL,IAAM8K,EAAI9S,EAAG,CAC7DlD,KAAKgL,GAAKgL,EAAIhT,CACdhD,MAAKiL,GAAK+K,EAAI/S,CACdjD,MAAKkL,GAAK8K,EAAI9S,CAEdlD,MAAKwQ,qBAGNwF,EAAM+B,EAAS,EAEf,IAAI/X,KAAKoK,YAAc4L,EAAIhT,GAAKhD,KAAKqK,YAAc2L,EAAI/S,GAAKjD,KAAKsK,YAAc0L,EAAI9S,EAAG,CACrFlD,KAAKoK,WAAa4L,EAAIhT,CACtBhD,MAAKqK,WAAa2L,EAAI/S,CACtBjD,MAAKsK,WAAa0L,EAAI9S,CAEtBlD,MAAKmO,qBAGN6H,EAAM+B,EAAS,EAEf,IAAI/X,KAAK0K,SAAWsL,EAAIhT,GAAKhD,KAAK2K,SAAWqL,EAAI/S,GAAKjD,KAAK4K,SAAWoL,EAAI9S,EAAG,CAC5ElD,KAAK0K,QAAUsL,EAAIhT,CACnBhD,MAAK2K,QAAUqL,EAAI/S,CACnBjD,MAAK4K,QAAUoL,EAAI9S,CAEnBlD,MAAK8P,iBAGNkG,EAAM+B,EAAS,EAEf,IAAI/X,KAAK6K,UAAYmL,EAAIhT,GAAKhD,KAAK8K,UAAYkL,EAAI/S,GAAKjD,KAAK+K,UAAYiL,EAAI9S,EAAG,CAC/ElD,KAAK6K,SAAWmL,EAAIhT,CACpBhD,MAAK8K,SAAWkL,EAAI/S,CACpBjD,MAAK+K,SAAWiL,EAAI9S,CAEpBlD,MAAKgO,oBLWAjN,WAAY,KACZC,aAAc,MKLrBL,QAAAC,eAAWkI,EAAAvI,UAAA,wBLWJM,IKXP,WAEC,IAAKb,KAAKgY,qBACThY,KAAKgY,qBAAuB,GAAIrP,GAAmB3I,KAEpD,OAAOA,MAAKgY,sBLWNjX,WAAY,KACZC,aAAc,MKNd8H,GAAAvI,UAAA0X,WAAP,SAAkBtV,GAEX,GAAI3C,KAAKsO,SAAU,CACftO,KAAKsO,SAAShB,oBAAoB1E,EAAmBsP,+BAAgClY,KAAKuM,wCAGpGvM,KAAKsO,SAAW3L,CAEV,IAAIA,EAAO,CAChB3C,KAAKmY,6BAA6BxV,EAAMyV,eAAiBzV,EAAMoH,uBAC/D/J,MAAKqQ,2BAA2B1N,EAAM2N,cACtCtQ,MAAKmP,0BAA0BxM,EAAMyM,oBAAqBzM,EAAM0M,QACvD1M,GAAM6K,iBAAiB5E,EAAmBsP,+BAAgClY,KAAKuM,4CAClF,CACNvM,KAAKmY,6BAA6B,KAClCnY,MAAKqQ,2BAA2B,KAChCrQ,MAAKmP,0BAA0B,KAAM,MAGhCnP,KAAKkN,kCAMLpE,GAAAvI,UAAAqO,0BAAP,WAEC5O,KAAKmJ,uBAAyBnJ,KAAK4L,iBACnC5L,MAAKyJ,6BAA+BzJ,KAAK4L,iBACzC5L,MAAK2J,qBAAuB3J,KAAK4L,iBAEjC,IAAI5L,KAAKqY,SACRrY,KAAKsY,qBAEN,IAAItY,KAAKsO,SACRtO,KAAKsO,SAASb,oBAEf,IAAIzN,KAAKsR,+BACRtR,KAAKuY,6BAMAzP,GAAAvI,UAAA4X,6BAAP,SAAoCxV,GAEnC3C,KAAK+J,uBAAyBpH,CAG9B,IAAI3C,KAAK+J,wBAA0B/J,KAAKsO,WAAatO,KAAKsP,kBACzDtP,KAAKsP,kBAAqBtP,KAAKsO,SAASgB,kBAMnCxG,GAAAvI,UAAA4O,0BAAP,SAAiCqJ,EAAqBC,GAErD,GAAIC,GAAuB1Y,KAAKqP,SAAWoJ,CAE3C,IAAIC,GAAgB1Y,KAAKqP,QACxBrP,KAAKqP,QAAQsJ,cAAc,GAAI9P,GAAWA,EAAW+P,mBAAoB5Y,MAE1E,IAAIA,KAAKqP,SAAWrP,KAAK6X,oBAAqB,CAE7C7X,KAAKqP,QAAQwJ,sBAAsB7Y,KAAK6X,oBAGxC,IAAI7X,KAAK6O,WACR7O,KAAK8Y,mBAAmB9Y,KAAK6X,qBAI/B7X,KAAK6X,oBAAsB7X,KAAKkP,oBAAsBsJ,CAGtD,IAAIE,EACH1Y,KAAKqP,QAAUoJ,CAEhB,IAAIzY,KAAKqP,SAAWrP,KAAK6X,oBAAqB,CAE7C7X,KAAKqP,QAAQ0J,oBAAoB/Y,KAAK6X,oBAGtC,IAAI7X,KAAK6O,WACR7O,KAAKgZ,iBAAiBhZ,KAAK6X,qBAG7B,GAAIa,GAAgB1Y,KAAKqP,QACxBrP,KAAKqP,QAAQsJ,cAAc,GAAI9P,GAAWA,EAAWoQ,eAAgBjZ,MAEtE,IAAI0Y,EAAc,CACjB,IAAK1Y,KAAKmJ,wBAA0BnJ,KAAK4L,kBACxC5L,KAAK4O,2BAEN,IAAI5O,KAAKoR,sBACRpR,KAAKkZ,qBAODpQ,GAAAvI,UAAA8P,2BAAP,SAAkC1N,GAEjC3C,KAAK6J,qBAAuB7J,KAAK4J,qBAAuBjH,EAMlDmG,GAAAvI,UAAAuX,iBAAP,WAGC9X,KAAKwL,KAAKxI,EAAIhD,KAAKgL,EACnBhL,MAAKwL,KAAKvI,EAAIjD,KAAKiL,EACnBjL,MAAKwL,KAAKtI,EAAIlD,KAAKkL,EAEnBlL,MAAKyL,KAAKzI,EAAIhD,KAAKoK,UACnBpK,MAAKyL,KAAKxI,EAAIjD,KAAKqK,UACnBrK,MAAKyL,KAAKvI,EAAIlD,KAAKsK,UAEnBtK,MAAK0L,KAAK1I,EAAIhD,KAAK0K,OACnB1K,MAAK0L,KAAKzI,EAAIjD,KAAK2K,OACnB3K,MAAK0L,KAAKxI,EAAIlD,KAAK4K,OAEnB5K,MAAK2L,KAAK3I,EAAIhD,KAAK6K,QACnB7K,MAAK2L,KAAK1I,EAAIjD,KAAK8K,QACnB9K,MAAK2L,KAAKzI,EAAIlD,KAAK+K,QAEnB/K,MAAKsJ,UAAUyN,UAAU/W,KAAK4M,qBAE9B,KAAK5M,KAAKsL,WAAY,CACrBtL,KAAKoL,YAAYpI,EAAIhD,KAAKmL,OAAOnI,EAAEhD,KAAK6K,QACxC7K,MAAKoL,YAAYnI,EAAIjD,KAAKmL,OAAOlI,EAAEjD,KAAK8K,QACxC9K,MAAKoL,YAAYlI,EAAIlD,KAAKmL,OAAOjI,EAAElD,KAAK+K,QACxC/K,MAAKsJ,UAAU0N,oBAAoBhX,KAAKoL,YAAYpI,GAAIhD,KAAKoL,YAAYnI,GAAIjD,KAAKoL,YAAYlI,EAC9F,IAAIlD,KAAKmM,eAAiB7K,EAAcE,YACvCxB,KAAKsJ,UAAU6P,kBAAkBnZ,KAAKmL,OAAOnI,EAAGhD,KAAKmL,OAAOlI,EAAGjD,KAAKmL,OAAOjI,GAG7ElD,KAAKuJ,eAAiB,KACtBvJ,MAAKgK,eAAiB,KACtBhK,MAAKiK,eAAiB,KACtBjK,MAAKkK,WAAY,KACjBlK,MAAKmK,YAAc,KACnBnK,MAAKuL,YAAc,MAMbzC,GAAAvI,UAAA0P,sBAAP,WAEC,GAAIjQ,KAAKsO,WAAatO,KAAKsO,SAAS8K,SAAU,CAC7CpZ,KAAKkJ,iBAAiBsF,SAASxO,KAAKsO,SAASG,eAC7CzO,MAAKkJ,iBAAiBmQ,QAAQrZ,KAAKuR,gBAC7B,CACNvR,KAAKkJ,iBAAiBsF,SAASxO,KAAKuR,YAGrCvR,KAAKmJ,sBAAwB,MAGvBL,GAAAvI,UAAA+Y,gBAAP,SAAuBC,GAEtBvZ,KAAK6L,cAAc2N,KAAKD,EAExB,OAAOA,GAIDzQ,GAAAvI,UAAAkZ,mBAAP,SAA0BF,GAEzB,GAAIG,GAAe1Z,KAAK6L,cAAc8N,QAAQJ,EAE9CvZ,MAAK6L,cAAc+N,OAAOF,EAAO,EAEjC,OAAOH,GAYDzQ,GAAAvI,UAAAoG,gBAAP,SAAuBI,EAAkC8S,GAExD,MAAO,OAMD/Q,GAAAvI,UAAAuZ,iBAAP,WAEC,GAAI9Z,KAAK+Z,aACR/Z,KAAK+Z,aAAaC,SAMblR,GAAAvI,UAAA+P,YAAP,WAEC,MAAOtQ,MAAK6J,qBAMNf,GAAAvI,UAAA0Z,iBAAP,WAEC,MAAOja,MAAK+J,wBAA0B/J,KAAK8J,sBAMrChB,GAAAvI,UAAA2Z,WAAP,SAAkBvX,GAEjB,GAAI3C,KAAKqP,SAAW1M,EACnB,MAED3C,MAAKmP,0BAA0BnP,KAAKsO,SAAUtO,KAAKsO,SAASc,oBAAsB,KAAMzM,GAMjFmG,GAAAvI,UAAA4Z,sBAAR,WAEC,IAAKna,KAAKoa,iBACTpa,KAAKoa,iBAAmB,GAAIxR,GAAmBA,EAAmB+H,iBAAkB3Q,KAErFA,MAAK2Y,cAAc3Y,KAAKoa,kBAMjBtR,GAAAvI,UAAA8Z,sBAAR,WAEC,IAAKra,KAAKsa,iBACTta,KAAKsa,iBAAmB,GAAI1R,GAAmBA,EAAmBiI,iBAAkB7Q,KAErFA;KAAK2Y,cAAc3Y,KAAKsa,kBAMjBxR,GAAAvI,UAAAga,kBAAR,WAEC,IAAKva,KAAKwa,aACTxa,KAAKwa,aAAe,GAAI5R,GAAmBA,EAAmBmI,aAAc/Q,KAE7EA,MAAK2Y,cAAc3Y,KAAKwa,cAMjB1R,GAAAvI,UAAAka,mBAAR,WAEC,IAAKza,KAAK0a,cACT1a,KAAK0a,cAAgB,GAAI9R,GAAmBA,EAAmBqI,cAAejR,KAE/EA,MAAK2Y,cAAc3Y,KAAK0a,eAMjB5R,GAAAvI,UAAA2Y,kBAAR,WAEC,IAAKlZ,KAAK2a,cACT3a,KAAK2a,cAAgB,GAAI/R,GAAmBA,EAAmBuI,cAAenR,KAE/EA,MAAK2Y,cAAc3Y,KAAK2a,eAMjB7R,GAAAvI,UAAAgY,2BAAR,WAEC,IAAKvY,KAAK4a,uBACT5a,KAAK4a,uBAAyB,GAAIhS,GAAmBA,EAAmByI,uBAAwBrR,KAEjGA,MAAK2Y,cAAc3Y,KAAK4a,wBAQjB9R,GAAAvI,UAAAsa,mBAAR,WAEC,GAAI7a,KAAKuJ,eACR,MAEDvJ,MAAKuJ,eAAiB,IAEtB,KAAKvJ,KAAKmJ,wBAA0BnJ,KAAK4L,kBACxC5L,KAAK4O,4BAMA9F,GAAAvI,UAAA+X,oBAAP,WAEC,GAAI5K,GAAa1N,KAAK+L,aAAatM,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK+L,aAAa7M,GAAGoZ,sBAMfxP,GAAAvI,UAAAiP,gBAAR,WAECxP,KAAKsL,WAActL,KAAKmL,OAAOnI,GAAK,GAAOhD,KAAKmL,OAAOlI,GAAK,GAAOjD,KAAKmL,OAAOjI,GAAK,CAEpF,IAAIlD,KAAKuL,YACR,MAEDvL,MAAKuL,YAAc,IAEnBvL,MAAK6a,qBAME/R,GAAAvI,UAAAiQ,mBAAR,WAEC,GAAIxQ,KAAKgK,eACR,MAEDhK,MAAKgK,eAAiB,IAEtBhK,MAAK6a,oBAEL,IAAI7a,KAAK4Q,yBACR5Q,KAAKma,wBAMCrR,GAAAvI,UAAA4N,mBAAR,WAEC,GAAInO,KAAKiK,eACR,MAEDjK,MAAKiK,eAAiB,IAEtBjK,MAAK6a,oBAEL,IAAI7a,KAAK8Q,yBACR9Q,KAAKqa,wBAMCvR,GAAAvI,UAAAuP,eAAR,WAEC,GAAI9P,KAAKkK,WACR,MAEDlK,MAAKkK,WAAa,IAElBlK,MAAK6a,oBAEL,IAAI7a,KAAKgR,qBACRhR,KAAKua,oBAMCzR,GAAAvI,UAAAyN,gBAAR,WAEC,GAAIhO,KAAKmK,YACR,MAEDnK,MAAKmK,YAAc,IAEnBnK,MAAK6a,oBAEL,IAAI7a,KAAKkR,sBACRlR,KAAKya,qBAIA3R,GAAAvI,UAAAua,gBAAP,SAAuBC,GAEtB/a,KAAK+L,aAAayN,KAAKuB,EAEvB,OAAOA,GAIDjS,GAAAvI,UAAAya,mBAAP,SAA0BD,GAEzB,GAAIrB,GAAe1Z,KAAK+L,aAAa4N,QAAQoB,EAE7C/a,MAAK+L,aAAa6N,OAAOF,EAAO,EAEhC,OAAOqB,GAGDjS,GAAAvI,UAAAyY,iBAAP,SAAwBR,GAEvB,KAAM,IAAIjQ,GAGJO,GAAAvI,UAAAuY,mBAAP,SAA0BN,GAEzB,KAAM,IAAIjQ,GAGJO,GAAAvI,UAAAkN,mBAAP,WAECzN,KAAKgJ,kBAAoB,IACzBhJ,MAAKiJ,qBAAuB,IAE5B,IAAIjJ,KAAKqY,SACRrY,KAAKsY,qBAEN,IAAItY,KAAKsO,SACRtO,KAAKsO,SAASb,qBAGT3E,GAAAvI,UAAA4R,kBAAP,WAECnS,KAAKgJ,kBAAoB,KAEzB,IAAIhJ,KAAKoS,aAAe,KACvBpS,KAAKoS,YAAc,GAAIrK,GAGlBe,GAAAvI,UAAAiS,qBAAP,WAECxS,KAAKiJ,qBAAuB,KAE5B,IAAIjJ,KAAKyS,gBAAkB,KAC1BzS,KAAKyS,eAAiB,GAAIxK,GAGzBa,GAAAvI,UAAA4M,4BAAA,WAEI,GAAInN,KAAKkM,wBAA0BlM,KAAKsO,SAAU,CAC9CtO,KAAKiM,sBAAsBuC,SAASxO,KAAKsO,SAAS2M,qBAClD,IAAIjb,KAAKoN,iBACLpN,KAAKiM,sBAAsBoN,QAAQrZ,KAAKoN,sBACzC,CACH,GAAIpN,KAAKoN,iBACLpN,KAAKiM,sBAAsBuC,SAASxO,KAAKoN,sBAEzCpN,MAAKiM,sBAAsBiP,QAGnClb,KAAKgM,2BAA6B,MAItClD,GAAAvI,UAAAgN,oBAAA,SAAoB5K,GAEhB3C,KAAKoN,iBAAmBzK,CACxB3C,MAAKkN,kCAGTpE,GAAAvI,UAAA2M,gCAAA,WAEIlN,KAAKgM,2BAA6B,IAElC,KAAKhM,KAAKmb,6BACNnb,KAAKmb,6BAA+B,GAAIvS,GAAmBA,EAAmBsP,+BAAgClY,KAElHA,MAAK2Y,cAAc3Y,KAAKmb,8BAGpBrS,GAAAvI,UAAAkM,8BAAR,SAAsCD,GAElCxM,KAAKkN,kCAGDpE,GAAAvI,UAAAoM,wBAAR,SAAgCH,GAE5BxM,KAAKkN,kCAEb,OAAApE,IAhgF4BtI,EAkgFLb,GAAAJ,QAAduJ,IL9HNsS,6CAA6Cha,UAAUia,2BAA2Bja,UAAUka,sCAAsCla,UAAUma,kCAAkCna,UAAUoa,gCAAgCpa,UAAUqa,qCAAqCra,UAAUsa,6BAA6Bta,UAAUua,8BAA8Bva,UAAUwa,gCAAgCxa,UAAUD,oCAAoCC,UAAUC,wCAAwC,wCAAwCwa,0CAA0C,0CAA0CC,oCAAoC,oCAAoCC,uCAAuC,uCAAuCC,+CAA+C,+CAA+CC,uCAAuC,uCAAuCC,6CAA6C,+CAA+CC,oCAAoC,SAAS1d,EAAQkB,EAAOJ,GACzjC,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM5iFtB,IAAOG,GAAS/B,EAAc,oCAG9B,IAAO2d,GAAa3d,EAAa,0CN2jFjC,IM3iFM4d,GAAQ,SAAA3b,GAASX,EAAjBsc,EAAQ3b,EAsBb,SAtBK2b,KAwBJ3b,EAAAlB,KAAAQ,KAEAA,MAAKsc,eAAiB,GAAIxQ,OApB3BnL,OAAAC,eAAWyb,EAAA9b,UAAA,aN+iFJM,IM/iFP,WAEC,MAAOwb,GAASnb,WNgjFVH,WAAY,KACZC,aAAc,MM3iFrBL,QAAAC,eAAWyb,EAAA9b,UAAA,iBNijFJM,IMjjFP,WAEC,MAAOb,MAAKsc,gBNkjFNvb,WAAY,KACZC,aAAc,MMtiFdqb,GAAA9b,UAAAkG,oBAAP,SAA2BC,GAE1B,GAAIgH,GAAa1N,KAAKsc,eAAe7c,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjCc,KAAKsc,eAAepd,GAAGuH,oBAAoBC,GAOtC2V,GAAA9b,UAAAgc,eAAP,SAAsB/U,GAErBxH,KAAKsc,eAAe9C,KAAKhS,EAEzBA,GAAYgV,eAAiBxc,IAE7B,IAAIA,KAAKsX,iBAAiB8E,EAAcK,oBACvCzc,KAAK2Y,cAAc,GAAIyD,GAAcA,EAAcK,mBAAoBjV,GAExExH,MAAK0c,kBAAkBlV,GAOjB6U,GAAA9b,UAAAoc,kBAAP,SAAyBnV,GAExBxH,KAAKsc,eAAe1C,OAAO5Z,KAAKsc,eAAe3C,QAAQnS,GAAc,EAErEA,GAAYgV,eAAiB,IAE7B,IAAIxc,KAAKsX,iBAAiB8E,EAAcQ,sBACvC5c,KAAK2Y,cAAc,GAAIyD,GAAcA,EAAcQ,qBAAsBpV,GAE1ExH,MAAK0c,kBAAkBlV,GAOjB6U,GAAA9b,UAAAwF,MAAP,WAEC,GAAIA,GAAiB,GAAIsW,EACzB,IAAI3O,GAAa1N,KAAKsc,eAAe7c,MAErC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjC6G,EAAMwW,eAAevc,KAAKsc,eAAepd,GAAG6G,QAE7C,OAAOA,GAODsW,GAAA9b,UAAAiG,MAAP,SAAaA,GAEZ,GAAIqW,GAAqB7c,KAAKsc,eAAe7c,MAC7C,KAAK,GAAIP,GAAW,EAAGA,EAAI2d,IAAe3d,EACzCc,KAAKsc,eAAepd,GAAGsH,MAAMA,GAMxB6V,GAAA9b,UAAAU,QAAP,WAEC,GAAI4b,GAAqB7c,KAAKsc,eAAe7c,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI2d,IAAe3d,EAAG,CAC5C,GAAI4d,GAA0B9c,KAAKsc,eAAe,EAClDtc,MAAK2c,kBAAkBG,EACvBA,GAAQ7b,WASHob,GAAA9b,UAAA6F,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAIuW,GAAqB7c,KAAKsc,eAAe7c,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI2d,IAAe3d,EACzCc,KAAKsc,eAAepd,GAAGkH,QAAQC,EAAQC,GAGlC+V,GAAA9b,UAAAmc,kBAAP,SAAyBI,GAExB,GAAI9c,KAAKsX,iBAAiB8E,EAAcW,gBACvC/c,KAAK2Y,cAAc,GAAIyD,GAAcA,EAAcW,eAAgBD,IA1HvDT,GAAAnb,UAAmB,kBA4HlC,OAAAmb,IA9HuB7b,EAgILb,GAAAJ,QAAT8c,INohFNlb,oCAAoCC,UAAU4b,0CAA0C,4CAA4CC,2CAA2C,SAASxe,EAAQkB,EAAOJ,SAEpM2d,wCAAwC,SAASze,EAAQkB,EAAOJ,SAEhE4d,4CAA4C,SAAS1e,EAAQkB,EAAOJ,SAEpE6d,yCAAyC,SAAS3e,EAAQkB,EAAOJ,SAEjE8d,oCAAoC,SAAS5e,EAAQkB,EAAOJ,SAE5D+d,qCAAqC,SAAS7e,EAAQkB,EAAOJ,GACnE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GOvrFtB,IAAOkI,GAAmB9J,EAAY,6CAEtC,IAAO8e,GAAsB9e,EAAW,uDAGxC,IAAO+e,GAAU/e,EAAc,uCAG/B,IAAMgf,GAAS,SAAA/c,GAASX,EAAlB0d,EAAS/c,EA6Bd,SA7BK+c,KA+BJ/c,EAAAlB,KAAAQ,KA3BOA,MAAA0d,OAAgB,QAChB1d,MAAA2d,QAAiB,CACjB3d,MAAA4d,QAAiB,CACjB5d,MAAA6d,QAAiB,CAEjB7d,MAAA8d,cAAuB,QACvB9d,MAAA+d,SAAkB,CACnB/d,MAAAge,WAAoB,CACpBhe,MAAAie,WAAoB,CACpBje,MAAAke,WAAoB,CAEnBle,MAAAme,UAAmB,CACpBne,MAAAoe,YAAqB,CACrBpe,MAAAqe,YAAqB,CACrBre,MAAAse,YAAqB,CAEpBte,MAAAue,SAAkB,CACnBve,MAAAwe,WAAoB,CACpBxe,MAAAye,WAAoB,CACpBze,MAAA0e,WAAoB,CAEnB1e,MAAA2e,cAAwB,MAShChe,OAAAC,eAAW6c,EAAAld,UAAA,gBP0qFJM,IO1qFP,WAEC,MAAOb,MAAK2e,eP2qFNjc,IOxqFP,SAAwBC,GAEvB,GAAI3C,KAAK2e,eAAiBhc,EACzB,MAED3C,MAAK2e,cAAgBhc,CAErB,IAAIA,EAAO,CACV,GAAI3C,KAAK4e,eAAiB,KACzB5e,KAAK4e,cAAgB5e,KAAK6e,qBAE3B7e,MAAK4e,cAAcE,MAAQ9e,SACrB,CACNA,KAAK4e,cAAc3d,SACnBjB,MAAK4e,cAAgB,KAGtB5e,KAAK2Y,cAAc,GAAI6E,GAAWA,EAAWuB,uBPuqFvChe,WAAY,KACZC,aAAc,MOrqFdyc,GAAAld,UAAAse,oBAAP,WAEC,KAAM,IAAItW,GAGX5H,QAAAC,eAAW6c,EAAAld,UAAA,YPsqFJM,IOtqFP,WAEC,MAAOb,MAAKme,WPuqFNzb,IOpqFP,SAAoBC,GAEnB,GAAIA,EAAQ,EACXA,EAAQ,CAET3C,MAAKme,UAAYxb,CACjB3C,MAAKgf,kBPoqFCje,WAAY,KACZC,aAAc,MOlqFrBL,QAAAC,eAAW6c,EAAAld,UAAA,WPqqFJM,IOrqFP,WAEC,MAAOb,MAAKue,UPsqFN7b,IOnqFP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,CAET3C,MAAKue,SAAW5b,CAChB3C,MAAKif,iBPmqFCle,WAAY,KACZC,aAAc,MOjqFrBL,QAAAC,eAAW6c,EAAAld,UAAA,SPoqFJM,IOpqFP,WAEC,MAAOb,MAAK0d,QPqqFNhb,IOlqFP,SAAiBC,GAEhB3C,KAAK0d,OAAS/a,CACd3C,MAAK2d,SAAY3d,KAAK0d,QAAU,GAAM,KAAM,GAC5C1d,MAAK4d,SAAY5d,KAAK0d,QAAU,EAAK,KAAM,GAC3C1d,MAAK6d,SAAW7d,KAAK0d,OAAS,KAAM,GAEpC1d,MAAKif,eACLjf,MAAKgf,kBPkqFCje,WAAY,KACZC,aAAc,MOhqFrBL,QAAAC,eAAW6c,EAAAld,UAAA,WPmqFJM,IOnqFP,WAEC,MAAOb,MAAK+d,UPoqFNrb,IOjqFP,SAAmBC,GAElB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET3C,MAAK+d,SAAWpb,CAChB3C,MAAKkf,iBPiqFCne,WAAY,KACZC,aAAc,MO/pFrBL,QAAAC,eAAW6c,EAAAld,UAAA,gBPkqFJM,IOlqFP,WAEC,MAAOb,MAAK8d,ePmqFNpb,IOhqFP,SAAwBC,GAEvB3C,KAAK8d,cAAgBnb,CACrB3C,MAAKkf,iBPiqFCne,WAAY,KACZC,aAAc,MO/pFbyc,GAAAld,UAAA2e,cAAR,WAEClf,KAAKge,YAAehe,KAAK8d,eAAiB,GAAM,KAAM,IAAK9d,KAAK+d,QAChE/d,MAAKie,YAAeje,KAAK8d,eAAiB,EAAK,KAAM,IAAK9d,KAAK+d,QAC/D/d,MAAKke,YAAcle,KAAK8d,cAAgB,KAAM,IAAK9d,KAAK+d,SAGlDN,GAAAld,UAAA4e,2BAAP,SAAkCC,EAAgBzI,EAAexB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAI5M,GAIX5H,QAAAC,eAAW6c,EAAAld,UAAA,aP+pFJM,IO/pFP,WAEC,MAAO4c,GAAUvc,WPgqFXH,WAAY,KACZC,aAAc,MO9pFbyc,GAAAld,UAAAye,eAAR,WAEChf,KAAKoe,YAAcpe,KAAK2d,QAAQ3d,KAAKme,SACrCne,MAAKqe,YAAcre,KAAK4d,QAAQ5d,KAAKme,SACrCne,MAAKse,YAActe,KAAK6d,QAAQ7d,KAAKme,UAG9BV,GAAAld,UAAA0e,cAAR,WAECjf,KAAKwe,WAAaxe,KAAK2d,QAAQ3d,KAAKue,QACpCve,MAAKye,WAAaze,KAAK4d,QAAQ5d,KAAKue,QACpCve,MAAK0e,WAAa1e,KAAK6d,QAAQ7d,KAAKue,SAGrC5d,QAAAC,eAAW6c,EAAAld,UAAA,gBP6pFJM,IO7pFP,WAEC,MAAOb,MAAK4e,eP8pFNlc,IO3pFP,SAAwBC,GAEvB3C,KAAK4e,cAAgBjc,CACrB3C,MAAK4e,cAAcE,MAAQ9e,MP4pFrBe,WAAY,KACZC,aAAc,MO10FPyc,GAAAvc,UAAmB,eA+KlC,OAAAuc,IAjLwBF,EAmLL5d,GAAAJ,QAAVke,IPgqFNrC,6CAA6Cha,UAAUie,uDAAuD,uDAAuDC,uCAAuC,yCAAyCC,2CAA2C,SAAS9gB,EAAQkB,EAAOJ,GAC3T,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GQh2FtB,IAAOmf,GAAc/gB,EAAc,4CACnC,IAAOghB,GAAehhB,EAAc,6CAEpC,IAAOihB,GAAgBjhB,EAAc,8CAErC,IAAOmD,GAAenD,EAAc,0CAEpC,IAAOoD,GAAgBpD,EAAc,4CRm2FrC,IQ51FMkhB,GAAe,SAAAjf,GAASX,EAAxB4f,EAAejf,EAyDpB,SAzDKif,GAyDO5d,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAAlB,KAAAQ,KAAM+B,EAvDC/B,MAAAgC,aAAsB,CAyD7BhC,MAAKqC,WAAa,GAAImd,GAAeI,aAAc,EAAG7d,GA/CvDpB,OAAAC,eAAW+e,EAAApf,UAAA,aR81FJM,IQ91FP,WAEC,MAAO8e,GAAgBze,WR+1FjBH,WAAY,KACZC,aAAc,MQ11FrBL,QAAAC,eAAW+e,EAAApf,UAAA,aRg2FJM,IQh2FP,WAEC,MAAOb,MAAKqC,YRi2FNtB,WAAY,KACZC,aAAc,MQ51FrBL,QAAAC,eAAW+e,EAAApf,UAAA,aRk2FJM,IQl2FP,WAEC,MAAOb,MAAK6f,YRm2FN9e,WAAY,KACZC,aAAc,MQ91FrBL,QAAAC,eAAW+e,EAAApf,UAAA,URo2FJM,IQp2FP,WAEC,IAAKb,KAAK8f,QACT9f,KAAK+f,UAAU/f,KAAK8f,QAErB,OAAO9f,MAAK8f,SRo2FN/e,WAAY,KACZC,aAAc,MQ/1FrBL,QAAAC,eAAW+e,EAAApf,UAAA,eRq2FJM,IQr2FP,WAEC,MAAOb,MAAKgC,cRs2FNjB,WAAY,KACZC,aAAc,MQ11Fd2e,GAAApf,UAAAuC,qBAAP,WAEC,MAAsB9C,MAAKqC,WAAWxB,IAAIb,KAAKgC,cASzC2d,GAAApf,UAAA6E,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkBma,GAAgB,CACrCxf,KAAKuF,sBAAsBvF,KAAKqC,WAChCrC,MAAKqC,WAA8BgD,MAC7B,IAAIA,EAAQ,CAClB,GAAInG,GAAW,CACf,IAAI8gB,GAAW,CACf,IAAItG,GAAe,CACnB,IAAItW,GAAyB,GAAIwc,cAAava,EAAO5F,OAAO,EAC5D,IAAIwG,GAAsB,GAAIga,aAAY5a,EAAO5F,OAEjD,OAAOP,EAAImG,EAAO5F,OAAQ,CACzB,GAAIia,EAAM,EAAI,EAAG,CAChBtW,EAAUsW,GAASrU,EAAOnG,EAAI,EAC9BkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAAI,EAClCkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAAI,EAClCkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAC9BkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAAI,EAClCkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAAI,OAC5B,CACNkE,EAAUsW,GAASrU,EAAOnG,EAC1BkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAAI,EAClCkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAAI,EAClCkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAAI,EAClCkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAAI,EAClCkE,GAAUsW,EAAQ,GAAKrU,EAAOnG,EAAI,GAGnCwa,GAAS,CAET,MAAMsG,GAAK,EAAG,CACb,GAAIjhB,GAAW2a,EAAM,EAAI,CACzBzT,GAAQvD,KAAK3D,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAAIG,EACpD8gB,GAAI,CACJ9gB,IAAK,GAIPc,KAAKqC,WAAWK,IAAIU,EAAWkC,EAAO,EAEtCtF,MAAKkG,WAAWD,EAASX,OACnB,CACNtF,KAAKuF,sBAAsBvF,KAAKqC,WAChCrC,MAAKqC,WAAa,GAAImd,GAAeI,aAAc,EAAG5f,KAAKsC,qBAG5DtC,KAAKgC,aAAehC,KAAKqC,WAAWI,KAEpCzC,MAAKyF,mBAELzF,MAAKwF,qBAAqBxF,KAAKqC,WAE/BrC,MAAK0F,eAAe1F,KAAKqC,WAAWsD,IAAM,MASpCga,GAAApf,UAAA2f,aAAP,SAAoB7a,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkBqa,GAAkB,CACvC1f,KAAK6f,WAAgCxa,MAC/B,IAAIA,EAAQ,CAClB,IAAKrF,KAAK6f,WACT7f,KAAK6f,WAAa,GAAIH,GAAiB1f,KAAKsC,oBAE7C,IAAIpD,GAAW,CACf,IAAI8gB,GAAW,CACf,IAAItG,GAAe,CACnB,IAAIyG,GAAyB,GAAIP,cAAava,EAAO5F,OAAO,EAE5D,OAAOP,EAAImG,EAAO5F,OAAQ,CACzB0gB,EAAUzG,GAAUjC,KAAK2I,MAAM,GAAI1G,EAAQ,IAAO,GAAKrU,EAAOnG,GAAKmG,EAAOnG,EAE1E,MAAM8gB,GAAK,EAAG,CACbA,EAAI,CACJ9gB,KAGDwa,IAGD1Z,KAAK6f,WAAWnd,IAAIyd,EAAW7a,EAAO,OAChC,IAAItF,KAAK6f,WAAY,CAC3B7f,KAAK6f,WAAW5e,SAChBjB,MAAK6f,WAAa,KAGnB7f,KAAKwF,qBAAqBxF,KAAK6f,WAE/B7f,MAAK0F,eAAe1F,KAAK6f,WAAWla,IAAM,MAUpCga,GAAApf,UAAAwf,UAAP,SAAiB1a,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,EAAQ,CACX,GAAIA,GAAUrF,KAAK8f,QAClB,MAED,IAAIza,YAAkBoa,GAAiB,CACtCzf,KAAKuF,sBAAsBvF,KAAK8f,QAChC9f,MAAK8f,QAA4Bza,MAC3B,CACN,IAAKrF,KAAK8f,QACT9f,KAAK8f,QAAU,GAAIL,GAAgBzf,KAAKsC,oBAGzC,IAAIpD,GAAW,CACf,IAAI8gB,GAAW,CACf,IAAItG,GAAe,CACnB,IAAI2G,GAAoB,GAAIC,YAAWjb,EAAO5F,OAAO,EAErD,OAAOP,EAAImG,EAAO5F,OAAQ,CACzB,GAAIia,EAAM,EAAI,EAAG,CAChB2G,EAAO3G,GAASrU,EAAOnG,EAAI,EAC3BmhB,GAAO3G,EAAQ,GAAKrU,EAAOnG,EAAI,EAC/BmhB,GAAO3G,EAAQ,GAAKrU,EAAOnG,EAAI,EAC/BmhB,GAAO3G,EAAQ,GAAKrU,EAAOnG,EAAI,OACzB,CACNmhB,EAAO3G,GAASrU,EAAOnG,EACvBmhB,GAAO3G,EAAQ,GAAKrU,EAAOnG,EAAI,EAC/BmhB,GAAO3G,EAAQ,GAAKrU,EAAOnG,EAAI,EAC/BmhB,GAAO3G,EAAQ,GAAKrU,EAAOnG,EAAI,GAIhC,KAAM8gB,GAAK,EAAG,CACbA,EAAI,CACJ9gB,IAAK,EAGNwa,GAAS,EAGV1Z,KAAK8f,QAAQpd,IAAI2C,EAAQC,EAAO,QAE3B,CAENtF,KAAK8f,QAAUje,EAAiB0e,eAAevgB,KAAK8F,UAAW9F,KAAK8f,QAAS9f,KAAKsC,oBAAqBtC,KAAKgC,cAG7GhC,KAAKwF,qBAAqBxF,KAAK8f,QAE/B9f,MAAK0F,eAAe1F,KAAK8f,QAAQna,IAAM,MAMjCga,GAAApf,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOzB,KAAAQ,KAEbA,MAAKqC,WAAa,IAClBrC,MAAK6f,WAAa,IAClB7f,MAAK8f,QAAU,KAOTH,GAAApf,UAAAwF,MAAP,WAEC,GAAIA,GAAwB,GAAI4Z,GAAgB3f,KAAKsC,oBAAqBtC,KAAKsC,oBAAoByD,QAAU,KAE7GA,GAAMG,WAAWlG,KAAK8F,UAAUC,QAEhCA,GAAMX,aAAapF,KAAKqC,WAAW0D,QACnCA,GAAMma,aAAalgB,KAAK6f,WAAW9Z,QACnCA,GAAMga,UAAU/f,KAAK8f,QAAQ/Z,QAE7B,OAAOA,GAGD4Z,GAAApf,UAAAoG,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgB4Z,kBAAkBxgB,KAAM6G,EAAUC,EAAoBC,GArQhE4Y,GAAAze,UAAmB,yBAuQlC,OAAAye,IAzQ8B/d,EA2Q9BjC,GAAyBJ,QAAhBogB,IR4yFNc,4CAA4Crf,UAAUsf,6CAA6Ctf,UAAUuf,8CAA8Cvf,UAAU+F,0CAA0C,0CAA0CC,4CAA4C,8CAA8CwZ,uCAAuC,SAASniB,EAAQkB,EAAOJ,GACrZ,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GSzkGtB,IAAOsf,GAAelhB,EAAa,0CAEnC,IAAO6I,GAAW7I,EAAc,sCTolGhC,IStkGMoiB,GAAW,SAAAngB,GAASX,EAApB8gB,EAAWngB,EA8BhB,SA9BKmgB,GA8BOrZ,EAA6BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEzDnG,EAAAlB,KAAAQ,KAEAA,MAAK0H,aAAeD,CACpBzH,MAAK2H,aAAeH,CACpBxH,MAAK6G,SAAWA,EAzBjBlG,OAAAC,eAAWigB,EAAAtgB,UAAA,aT8kGJM,IS9kGP,WAEC,MAAOggB,GAAY3f,WT+kGbH,WAAY,KACZC,aAAc,MS1kGrBL,QAAAC,eAAWigB,EAAAtgB,UAAA,eTglGJM,IShlGP,WAEC,MAAOb,MAAK2H,cTilGN5G,WAAY,KACZC,aAAc,MS7jGd6f,GAAAtgB,UAAAU,QAAP,WAECjB,KAAK6G,SAAW,IAEhBnG,GAAAH,UAAMU,QAAOzB,KAAAQ,MA5CA6gB,GAAA3f,UAAmB,qBAEnB2f,GAAAjZ,WAAyB+X,CA4CxC,OAAAkB,IAhD0BvZ,EAkD1B3H,GAAqBJ,QAAZshB,ITokGNtB,0CAA0C,0CAA0C1X,sCAAsC,wCAAwCiZ,sCAAsC,SAASriB,EAAQkB,EAAOJ,GACnO,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GU7oGtB,IAAO0gB,GAAetiB,EAAa,yCVivGnC,IU1oGMuiB,GAAU,SAAAtgB,GAASX,EAAnBihB,EAAUtgB,EAAhB,SAAMsgB,KAAmBtgB,EAAAugB,MAAAjhB,KAAAkhB,WAyBxBvgB,OAAAC,eAAWogB,EAAAzgB,UAAA,SVuoGJM,IUvoGP,WAEC,MAAOb,MAAKmhB,QVwoGNpgB,WAAY,KACZC,aAAc,MUloGrBL,QAAAC,eAAWogB,EAAAzgB,UAAA,eVyoGJM,IUzoGP,WAEC,MAAOb,MAAKohB,cV0oGNrgB,WAAY,KACZC,aAAc,MU/nGrBL,QAAAC,eAAWogB,EAAAzgB,UAAA,cV2oGJM,IU3oGP,WAEC,MAAOb,MAAKqhB,aV4oGNtgB,WAAY,KACZC,aAAc,MU1nGrBL,QAAAC,eAAWogB,EAAAzgB,UAAA,WV6oGJM,IU7oGP,WAEC,MAAOb,MAAKshB,UV8oGNvgB,WAAY,KACZC,aAAc,MUjoGrBL,QAAAC,eAAWogB,EAAAzgB,UAAA,eV+oGJM,IU/oGP,WAEC,MAAOb,MAAKuhB,cVgpGNxgB,WAAY,KACZC,aAAc,MU5nGrBL,QAAAC,eAAWogB,EAAAzgB,UAAA,UVipGJM,IUjpGP,WAEC,MAAOb,MAAKwhB,SVkpGNzgB,WAAY,KACZC,aAAc,MUloGrBL,QAAAC,eAAWogB,EAAAzgB,UAAA,OVmpGJM,IUnpGP,WAEC,MAAOb,MAAKyhB,MVopGN1gB,WAAY,KACZC,aAAc,MUnpGtB,OAAAggB,IAnIyBD,EAqIzBphB,GAAoBJ,QAAXyhB,IVupGNU,yCAAyCtgB,YAAYya,2CAA2C,SAASpd,EAAQkB,EAAOJ,GWn4G3H,GAAMkJ,GAAe,WAArB,QAAMA,MAKSA,EAAA6D,QAAiB,SAKjB7D,GAAAmO,aAAsB,aAKtBnO,GAAAkZ,gBAAyB,gBACxC,OAAAlZ,KAEyB9I,GAAAJ,QAAhBkJ,OXq4GHtB,2CAA2C,SAAS1I,EAAQkB,EAAOJ,GACzE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GYz5GtB,IAAOuhB,GAAgBnjB,EAAc,8CACrC,IAAO8J,GAAmB9J,EAAa,6CAGvC,IAAO+B,GAAS/B,EAAe,oCAG/B,IAAOojB,GAAgBpjB,EAAc,6CZ25GrC,IYl5GMmD,GAAe,SAAAlB,GAASX,EAAxB6B,EAAelB,EA4CpB,SA5CKkB,GA4COG,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAAlB,KAAAQ,KA5COA,MAAA8hB,eAAuC,GAAIhW,MAI3C9L,MAAA+hB,aAAsB,CAMvB/hB,MAAA0F,eAAwB,GAAI/E,OAC5BX,MAAAgiB,iBAA0B,GAAIrhB,OAmCpCX,MAAKsC,oBAAsBP,EAjC5BpB,OAAAC,eAAWgB,EAAArB,UAAA,sBZk5GJM,IYl5GP,WAEC,MAAOb,MAAKsC,qBZm5GNvB,WAAY,KACZC,aAAc,MY94GrBL,QAAAC,eAAWgB,EAAArB,UAAA,WZo5GJM,IYp5GP,WAEC,MAAOb,MAAK8F,WZq5GN/E,WAAY,KACZC,aAAc,MYh5GrBL,QAAAC,eAAWgB,EAAArB,UAAA,eZs5GJM,IYt5GP,WAEC,MAAOb,MAAK+hB,cZu5GNhhB,WAAY,KACZC,aAAc,MYr5GrBL,QAAAC,eAAWgB,EAAArB,UAAA,eZw5GJM,IYx5GP,WAEC,KAAM,IAAI0H,IZy5GJxH,WAAY,KACZC,aAAc,MYz4GdY,GAAArB,UAAA0hB,WAAP,WAEC,GAAIvU,GAAa1N,KAAK8hB,eAAeriB,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK8hB,eAAe5iB,GAAG+iB,aAMlBrgB,GAAArB,UAAAU,QAAP,WAEC,MAAOjB,KAAK8hB,eAAeriB,OAC1BO,KAAK8hB,eAAe,GAAG7gB,SAExBjB,MAAK8F,UAAU7E,SACfjB,MAAK8F,UAAY,KAWXlE,GAAArB,UAAA2F,WAAP,SAAkBb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,GAAID,YAAkBuc,GAAkB,CACvC,GAAI5hB,KAAK8F,UACR9F,KAAKkiB,sBAENliB,MAAK8F,UAA+BT,MAC9B,IAAIA,EAAQ,CAClB,IAAKrF,KAAK8F,UACT9F,KAAK8F,UAAY,GAAI8b,EAEtB5hB,MAAK8F,UAAUpD,IAAI2C,EAAQC,OACrB,IAAItF,KAAK8F,UAAW,CAC1B9F,KAAK8F,UAAU7E,SACfjB,MAAK8F,UAAY,IAEjB9F,MAAKkiB,uBAGN,GAAIliB,KAAK8F,UAAW,CACnB9F,KAAK+hB,aAAe/hB,KAAK8F,UAAUrD,KAEnCzC,MAAKmiB,0BACC,CACNniB,KAAK+hB,aAAe,GAOfngB,GAAArB,UAAAkF,kBAAP,WAEC,GAAIzF,KAAKwc,eACRxc,KAAKwc,eAAeE,kBAAkB1c,MAcjC4B,GAAArB,UAAAwF,MAAP,WAEC,KAAM,IAAIwC,GAGJ3G,GAAArB,UAAAkG,oBAAP,SAA2BC,IASpB9E,GAAArB,UAAAiG,MAAP,SAAaA,IAKN5E,GAAArB,UAAA6F,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,GAK3B1E,GAAArB,UAAAuC,qBAAP,WAEC,KAAM,IAAIyF,GAGJ3G,GAAArB,UAAAwC,aAAP,SAAoBC,EAAUC,EAAUC,GAEvC,KAAM,IAAIqF,GAGH3G,GAAArB,UAAA4hB,oBAAR,WAEC,IAAKniB,KAAKoiB,gBACTpiB,KAAKoiB,gBAAkB,GAAIP,GAAiBA,EAAiBQ,gBAAiBriB,KAAK8F,UAEpF9F,MAAK2Y,cAAc3Y,KAAKoiB,iBAGjBxgB,GAAArB,UAAA2hB,qBAAR,WAECliB,KAAK2Y,cAAc,GAAIkJ,GAAiBA,EAAiBS,iBAAkBtiB,KAAK8F,YAG1ElE,GAAArB,UAAAiF,qBAAP,SAA4B+c,GAE3B,IAAKA,GAAkBviB,KAAK0F,eAAe6c,EAAe5c,IACzD,MAED3F,MAAK0F,eAAe6c,EAAe5c,IAAM,IAEzC,KAAK3F,KAAKgiB,iBAAiBO,EAAe5c,IACzC3F,KAAKgiB,iBAAiBO,EAAe5c,IAAM,GAAIkc,GAAiBA,EAAiBW,iBAAkBD,EAEpGviB,MAAK2Y,cAAc3Y,KAAKgiB,iBAAiBO,EAAe5c,KAIlD/D,GAAArB,UAAAgF,sBAAP,SAA6Bgd,GAE5B,IAAKA,EACJ,MAEDA,GAAethB,SAEfjB,MAAK2Y,cAAc,GAAIkJ,GAAiBA,EAAiBY,kBAAmBF,GAE5EviB,MAAK0F,eAAe6c,EAAe5c,IAAM,IACzC3F,MAAKgiB,iBAAiBO,EAAe5c,IAAM,KAGrC/D,GAAArB,UAAAmiB,mBAAP,SAA0BC,GAEzB3iB,KAAK8hB,eAAetI,KAAKmJ,EAEzB,OAAOA,GAGD/gB,GAAArB,UAAAqiB,sBAAP,SAA6BD,GAE5B3iB,KAAK8hB,eAAelI,OAAO5Z,KAAK8hB,eAAenI,QAAQgJ,GAAgB,EAEvE,OAAOA,GAGD/gB,GAAArB,UAAAoG,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,KAAM,IAAIwB,GAEZ,OAAA3G,IA9N8BpB,EAgO9Bb,GAAyBJ,QAAhBqC,IZm1GNihB,8CAA8CzhB,UAAUga,6CAA6Cha,UAAUD,oCAAoCC,UAAU0hB,6CAA6C,+CAA+Cjb,uCAAuC,SAASpJ,EAAQkB,EAAOJ,GAC3T,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GavkHtB,IAAOG,GAAS/B,EAAe,oCbmlH/B,IalkHM6I,GAAW,SAAA5G,GAASX,EAApBuH,EAAW5G,EAwFhB,SAxFK4G,KA0FJ5G,EAAAlB,KAAAQ,KApFMA,MAAA+iB,QAAiB,CAGhB/iB,MAAAgjB,aAAkC,GAAIlX,OAY9CnL,OAAAC,eAAW0G,EAAA/G,UAAA,YbikHJM,IajkHP,WAEC,MAAOb,MAAK0H,aAAaub,UbkkHnBliB,WAAY,KACZC,aAAc,Ma7jHrBL,QAAAC,eAAW0G,EAAA/G,UAAA,YbmkHJM,IankHP,WAEC,MAAOb,MAAKkjB,WAAaljB,KAAK0H,aAAab,UbokHrCnE,IajkHP,SAAoBC,GAEnB,GAAI3C,KAAK6G,SACR7G,KAAK6G,SAASsc,aAAanjB,KAE5BA,MAAKkjB,UAAYvgB,CAEjB,IAAI3C,KAAK6G,SACR7G,KAAK6G,SAASuc,UAAUpjB,ObgkHnBe,WAAY,KACZC,aAAc,Ma3jHrBL,QAAAC,eAAW0G,EAAA/G,UAAA,kBbikHJM,IajkHP,WAEC,MAAOb,MAAK0H,aAAa+G,gBbkkHnB1N,WAAY,KACZC,aAAc,Ma7jHrBL,QAAAC,eAAW0G,EAAA/G,UAAA,cbmkHJM,IankHP,WAEC,MAAOb,MAAK0H,cbokHN3G,WAAY,KACZC,aAAc,Ma/jHrBL,QAAAC,eAAW0G,EAAA/G,UAAA,ebqkHJM,IarkHP,WAEC,MAAOb,MAAKqjB,cAAgBrjB,KAAK0H,aAAa4b,abskHxC5gB,IankHP,SAAuBC,GAEtB3C,KAAKqjB,aAAe1gB,GbokHd5B,WAAY,KACZC,aAAc,MahkHrBL,QAAAC,eAAW0G,EAAA/G,UAAA,kBbskHJM,IatkHP,WAEC,MAAOb,MAAKujB,iBAAmBvjB,KAAK0H,aAAauT,sBbukH3CvY,IapkHP,SAA0BC,GAEzB3C,KAAKujB,gBAAkB5gB,GbqkHjB5B,WAAY,KACZC,aAAc,MazjHdsG,GAAA/G,UAAAU,QAAP,WAECjB,KAAK6G,SAAW,IAEhB,IAAI6G,GAAa1N,KAAKgjB,aAAavjB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAKgjB,aAAa9jB,GAAG+B,SAEtBjB,MAAKgjB,aAAe,GAAIlX,OAQlBxE,GAAA/G,UAAAmW,wBAAP,SAA+BC,GAE9B,MAAO3W,MAAK0H,aAAagP,wBAAwBC,GAG3CrP,GAAA/G,UAAA+Y,gBAAP,SAAuBC,GAEtBvZ,KAAKgjB,aAAaxJ,KAAKD,EAEvB,OAAOA,GAIDjS,GAAA/G,UAAAkZ,mBAAP,SAA0BF,GAEzB,GAAIG,GAAe1Z,KAAKgjB,aAAarJ,QAAQJ,EAE7CvZ,MAAKgjB,aAAapJ,OAAOF,EAAO,EAEhC,OAAOH,GAGDjS,GAAA/G,UAAAijB,+BAAP,WAEC,GAAI9V,GAAa1N,KAAKgjB,aAAavjB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAKgjB,aAAa9jB,GAAGukB,qBAGhBnc,GAAA/G,UAAAmjB,sBAAP,WAEC,MAAO1jB,MAAKkjB,UAEd,OAAA5b,IAjJ0B9G,EAmJLb,GAAAJ,QAAZ+H,Ib+iHNnG,oCAAoCC,YAAY0a,qCAAqC,SAASrd,EAAQkB,EAAOJ,GcrtHhH,GAAO4I,GAAQ1J,EAAe,gCAC9B,IAAO2J,GAAa3J,EAAa,qCAEjC,IAAO6J,GAAQ7J,EAAe,gCd4wH9B,IcjtHMiK,GAAS,WA0Md,QA1MKA,GA0MOib,GApML3jB,KAAA4jB,UAAqB,GAAItb,EAsM/BtI,MAAK6jB,eAAiBF,EAjMvBhjB,OAAAC,eAAW8H,EAAAnI,UAAA,cd+sHJM,Ic/sHP,WAEC,GAAIijB,GAAoB1b,EAAc2b,WAAW/jB,KAAK6jB,eAAetS,WACrEuS,GAASE,QAET,OAAOF,Id+sHD/iB,WAAY,KACZC,aAAc,Mc9rHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,8BdwsHJM,IcxsHP,WAEC,MAAOb,MAAKikB,6BdysHNljB,WAAY,KACZC,aAAc,Mc5rHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,sBd0sHJM,Ic1sHP,WAEC,MAAOb,MAAKkkB,qBd2sHNnjB,WAAY,KACZC,aAAc,MctsHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,cd4sHJM,Ic5sHP,WAEC,GAAIijB,GAAoB1b,EAAc+b,MAAMnkB,KAAK6jB,eAAetS,WAChEuS,GAASE,QAET,OAAOF,Id4sHD/iB,WAAY,KACZC,aAAc,McvsHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,iBd6sHJM,Ic7sHP,WAEC,MAAOuH,GAAc2b,WAAW/jB,KAAK6jB,eAAetS,ad8sH9CxQ,WAAY,KACZC,aAAc,MczsHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,cd+sHJM,Ic/sHP,WAEC,GAAIijB,GAAoB1b,EAAcgc,SAASpkB,KAAK6jB,eAAetS,WACnEuS,GAASE,QAET,OAAOF,Id+sHD/iB,WAAY,KACZC,aAAc,McnrHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,YdksHJM,IclsHP,WAEC,MAAOb,MAAK6jB,eAAetS,YdmsHrB7O,IchsHP,SAAoBoL,GAEnB9N,KAAK6jB,eAAetS,WAAazD,GdisH3B/M,WAAY,KACZC,aAAc,MchrHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,edurHJM,IcvrHP,WAEC,MAAOb,MAAKqkB,cdwrHNtjB,WAAY,KACZC,aAAc,McnrHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,YdyrHJM,IczrHP,WAEC,MAAOb,MAAK6jB,eAAetS,WAAWuB,Ud0rHhCpQ,IcvrHP,SAAoBC,GAEnB3C,KAAK6jB,eAAe7gB,EAAIL,EAAMK,CAC9BhD,MAAK6jB,eAAe5gB,EAAIN,EAAMM,CAC9BjD,MAAK6jB,eAAe3gB,EAAIP,EAAMO,GdwrHxBnC,WAAY,KACZC,aAAc,McnrHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,edyrHJM,IczrHP,WAEC,MAAOuH,GAAcgc,SAASpkB,KAAK6jB,eAAetS,ad0rH5CxQ,WAAY,KACZC,aAAc,McrrHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,Yd2rHJM,Ic3rHP,WAEC,MAAO,IAAIyH,GAAStI,KAAK6jB,eAAenU,UAAW1P,KAAK6jB,eAAelU,UAAW3P,KAAK6jB,eAAejU,Yd4rHhGlN,IczrHP,SAAoBC,GAEnB3C,KAAK6jB,eAAenU,UAAY/M,EAAMK,CACtChD,MAAK6jB,eAAelU,UAAYhN,EAAMM,CACtCjD,MAAK6jB,eAAejU,UAAYjN,EAAMO,Gd0rHhCnC,WAAY,KACZC,aAAc,McrrHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,Sd2rHJM,Ic3rHP,WAEC,MAAO,IAAIyH,GAAStI,KAAK6jB,eAAeS,OAAQtkB,KAAK6jB,eAAeU,OAAQvkB,KAAK6jB,eAAeW,Sd4rH1F9hB,IczrHP,SAAiBC,GAEhB3C,KAAK6jB,eAAeS,OAAS3hB,EAAMK,CACnChD,MAAK6jB,eAAeU,OAAS5hB,EAAMM,CACnCjD,MAAK6jB,eAAeW,OAAS7hB,EAAMO,Gd0rH7BnC,WAAY,KACZC,aAAc,McrrHrBL,QAAAC,eAAW8H,EAAAnI,UAAA,Yd2rHJM,Ic3rHP,WAEC,MAAOuH,GAAc+b,MAAMnkB,KAAK6jB,eAAetS,ad4rHzCxQ,WAAY,KACZC,aAAc,McnqHd0H,GAAAnI,UAAAkkB,oBAAP,SAA2BC,GAE1B,MAAO,IAAIvc,GASLO,GAAAnI,UAAAokB,YAAP,SAAmBnN,GAElBxX,KAAK6jB,eAAelM,eAAerP,EAAS4O,OAAQM,GAQ9C9O,GAAAnI,UAAAqkB,aAAP,SAAoBpN,GAEnBxX,KAAK6jB,eAAelM,eAAerP,EAAS4O,QAASM,GAS/C9O,GAAAnI,UAAAskB,SAAP,SAAgBrN,GAEfxX,KAAK6jB,eAAelM,eAAerP,EAASmO,QAASe,GAQ/C9O,GAAAnI,UAAAukB,UAAP,SAAiBtN,GAEhBxX,KAAK6jB,eAAelM,eAAerP,EAASmO,OAAQe,GAQ9C9O,GAAAnI,UAAAwkB,OAAP,SAAcvN,GAEbxX,KAAK6jB,eAAelM,eAAerP,EAASmN,OAAQ+B,GAQ9C9O,GAAAnI,UAAAykB,SAAP,SAAgBxN,GAEfxX,KAAK6jB,eAAelM,eAAerP,EAASmN,QAAS+B,GAEvD,OAAA9O,KAEA/I,GAAmBJ,QAAVmJ,Id0qHN8S,gCAAgCpa,UAAUqa,qCAAqCra,UAAUwa,gCAAgCxa,YAAY6jB,+CAA+C,SAASxmB,EAAQkB,EAAOJ,GAC/M,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GenhItB,IAAOmf,GAAc/gB,EAAc,4CAEnC,IAAOiD,GAAgBjD,EAAc,8CACrC,IAAOkD,GAAgBlD,EAAc,8CAKrC,IAAOmD,GAAenD,EAAc,0CAEpC,IAAOoD,GAAgBpD,EAAc,4CfmhIrC,Ie5gIMymB,GAAmB,SAAAxkB,GAASX,EAA5BmlB,EAAmBxkB,EAkOxB,SAlOKwkB,GAkOOnjB,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAAlB,KAAAQ,KAAM+B,EAhOC/B,MAAAgC,aAAsB,CACtBhC,MAAAmlB,kBAA4B,IAC5BnlB,MAAAolB,mBAA6B,IAe7BplB,MAAAqlB,mBAA6B,IAC7BrlB,MAAAslB,oBAA8B,IAC9BtlB,MAAAkC,eAAyB,KA+MhClC,MAAKqC,WAAarC,KAAKsC,oBAAwCtC,KAAKsC,oBAAoBC,QAAQ,IAAM,GAAIb,GAAiB1B,KAAKsC,qBAAuB,GAAIZ,EAE3J1B,MAAKgC,aAAehC,KAAKqC,WAAWI,MA5MrC9B,OAAAC,eAAWskB,EAAA3kB,UAAA,afkgIJM,IelgIP,WAEC,MAAOqkB,GAAoBhkB,WfmgIrBH,WAAY,KACZC,aAAc,MehgIrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,efmgIJM,IengIP,WAEC,MAAOb,MAAKgC,cfogINjB,WAAY,KACZC,aAAc,Me7/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,uBfqgIJM,IergIP,WAEC,MAAOb,MAAKulB,sBfsgIN7iB,IengIP,SAA+BC,GAE9B,GAAI3C,KAAKulB,sBAAwB5iB,EAChC,MAED3C,MAAKulB,qBAAuB5iB,GfmgItB5B,WAAY,KACZC,aAAc,Me9/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,mBfogIJM,IepgIP,WAEC,MAAOb,MAAKwlB,kBfqgIN9iB,IelgIP,SAA2BC,GAE1B,GAAI3C,KAAKwlB,kBAAoB7iB,EAC5B,MAED3C,MAAKwlB,iBAAmB7iB,CAExB,IAAI3C,KAAKylB,cACRzlB,KAAKylB,cAAcpiB,WAAarD,KAAKwlB,gBAEtC,IAAIxlB,KAAK0lB,cACR1lB,KAAK0lB,cAAcriB,WAAarD,KAAKwlB,kBfggIhCzkB,WAAY,KACZC,aAAc,Mez/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,iBfigIJM,IejgIP,WAEC,MAAOb,MAAKkC,gBfkgINQ,Ie//HP,SAAyBC,GAExB,GAAI3C,KAAKkC,gBAAkBS,EAC1B,MAED3C,MAAKkC,eAAiBS,Gf+/HhB5B,WAAY,KACZC,aAAc,Mez/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,qBfggIJM,IehgIP,WAEC,MAAOb,MAAKqlB,oBfigIN3iB,Ie9/HP,SAA6BC,GAE5B,GAAI3C,KAAKqlB,oBAAsB1iB,EAC9B,MAED3C,MAAKqlB,mBAAqB1iB,Gf8/HpB5B,WAAY,KACZC,aAAc,Mex/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,sBf+/HJM,Ie//HP,WAEC,MAAOb,MAAKslB,qBfggIN5iB,Ie7/HP,SAA8BC,GAE7B,GAAI3C,KAAKslB,qBAAuB3iB,EAC/B,MAED3C,MAAKslB,oBAAsB3iB,Gf6/HrB5B,WAAY,KACZC,aAAc,Mex/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,af8/HJM,Ie9/HP,WAEC,MAAOb,MAAKqC,Yf+/HNtB,WAAY,KACZC,aAAc,Me1/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,WfggIJM,IehgIP,WAEC,IAAKb,KAAK2lB,UAAY3lB,KAAK0F,eAAe1F,KAAK2lB,SAAShgB,IACvD3F,KAAK4lB,WAAW5lB,KAAK2lB,SAEtB,OAAO3lB,MAAK2lB,UfggIN5kB,WAAY,KACZC,aAAc,Me3/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,YfigIJM,IejgIP,WAEC,IAAKb,KAAK6lB,WAAa7lB,KAAK0F,eAAe1F,KAAK6lB,UAAUlgB,IACzD3F,KAAK8lB,YAAY9lB,KAAK6lB,UAEvB,OAAO7lB,MAAK6lB,WfigIN9kB,WAAY,KACZC,aAAc,Me5/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,efkgIJM,IelgIP,WAEC,GAAIb,KAAKmlB,kBACRnlB,KAAK+lB,mBAEN,OAAO/lB,MAAKgmB,cfkgINjlB,WAAY,KACZC,aAAc,Me7/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,gBfmgIJM,IengIP,WAEC,GAAIb,KAAKolB,mBACRplB,KAAKimB,oBAEN,OAAOjmB,MAAKkmB,efmgINnlB,WAAY,KACZC,aAAc,Me9/HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,OfogIJM,IepgIP,WAEC,IAAKb,KAAK6C,MAAQ7C,KAAK0F,eAAe1F,KAAK6C,KAAK8C,IAC/C3F,KAAK4C,OAAO5C,KAAK6C,KAElB,OAAO7C,MAAK6C,MfogIN9B,WAAY,KACZC,aAAc,Me//HrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,gBfqgIJM,IergIP,WAEC,MAAOb,MAAKmmB,efsgINplB,WAAY,KACZC,aAAc,MejgIrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,gBfugIJM,IevgIP,WAEC,MAAOb,MAAKylB,efwgIN1kB,WAAY,KACZC,aAAc,MengIrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,gBfygIJM,IezgIP,WAEC,MAAOb,MAAK0lB,ef0gIN3kB,WAAY,KACZC,aAAc,MexgIrBL,QAAAC,eAAWskB,EAAA3kB,UAAA,wBf2gIJM,Ie3gIP,WAEC,MAAOb,MAAKomB,uBf4gINrlB,WAAY,KACZC,aAAc,Me9/HdkkB,GAAA3kB,UAAAuC,qBAAP,WAEC,MAAO9C,MAAKqC,WAAWxB,IAAIb,KAAKgC,cAI1BkjB,GAAA3kB,UAAAwC,aAAP,SAAoBC,EAAUC,EAAUC,GAEvC,MAAO,MASDgiB,GAAA3kB,UAAA6E,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAUrF,KAAKqC,WAClB,MAED,IAAIgD,YAAkB3D,GAAkB,CACvC1B,KAAKuF,sBAAsBvF,KAAKqC,WAChCrC,MAAKqC,WAAgCgD,MAC/B,IAAIA,EAAQ,CAClBrF,KAAKqC,WAAWK,IAAI2C,EAAQC,OACtB,CACNtF,KAAKuF,sBAAsBvF,KAAKqC,WAChCrC,MAAKqC,WAAa,GAAIX,GAAiB1B,KAAKsC,qBAG7CtC,KAAKgC,aAAehC,KAAKqC,WAAWI,KAEpC,IAAIzC,KAAKqlB,mBACRrlB,KAAKwF,qBAAqBxF,KAAK2lB,SAEhC,IAAI3lB,KAAKslB,oBACRtlB,KAAKwF,qBAAqBxF,KAAK6lB,UAEhC,IAAI7lB,KAAKkC,eACRlC,KAAKwF,qBAAqBxF,KAAK6C,KAEhC7C,MAAKyF,mBAELzF,MAAKwF,qBAAqBxF,KAAKqC,WAE/BrC,MAAK0F,eAAe1F,KAAKqC,WAAWsD,IAAM,MASpCuf,GAAA3kB,UAAAqlB,WAAP,SAAkBvgB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,IAAKtF,KAAKqlB,mBAAoB,CAC7B,GAAIhgB,GAAUrF,KAAK2lB,SAClB,MAED,IAAItgB,YAAkB3D,GAAkB,CACvC1B,KAAKuF,sBAAsBvF,KAAK2lB,SAChC3lB,MAAK2lB,SAA8BtgB,MAC7B,IAAIA,EAAQ,CAClB,IAAKrF,KAAK2lB,SACT3lB,KAAK2lB,SAAW,GAAIjkB,GAAiB1B,KAAKsC,oBAE3CtC,MAAK2lB,SAASjjB,IAAI2C,EAAQC,OACpB,IAAItF,KAAK2lB,SAAU,CACzB3lB,KAAKuF,sBAAsBvF,KAAK2lB,SAChC3lB,MAAK2lB,SAAW,IAChB,aAEK,CACN,GAAI3lB,KAAKmlB,kBACRnlB,KAAK+lB,mBAEN/lB,MAAK2lB,SAAW9jB,EAAiBwkB,gBAAgBrmB,KAAK8F,UAAW9F,KAAKgmB,aAAchmB,KAAK2lB,SAAU3lB,KAAKsC,qBAGzGtC,KAAKwF,qBAAqBxF,KAAK2lB,SAE/B3lB,MAAK0F,eAAe1F,KAAK2lB,SAAShgB,IAAM,MASlCuf,GAAA3kB,UAAAulB,YAAP,SAAmBzgB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE9B,IAAKtF,KAAKslB,oBAAqB,CAC9B,GAAIjgB,GAAUrF,KAAK6lB,UAClB,MAED,IAAIxgB,YAAkB3D,GAAkB,CACvC1B,KAAKuF,sBAAsBvF,KAAK6lB,UAChC7lB;KAAK6lB,UAA+BxgB,MAC9B,IAAIA,EAAQ,CAClB,IAAKrF,KAAK6lB,UACT7lB,KAAK6lB,UAAY,GAAInkB,GAAiB1B,KAAKsC,oBAE5CtC,MAAK6lB,UAAUnjB,IAAI2C,EAAQC,OACrB,IAAItF,KAAK6lB,UAAW,CAC1B7lB,KAAKuF,sBAAsBvF,KAAK6lB,UAChC7lB,MAAK6lB,UAAY,IACjB,aAEK,CACN,GAAI7lB,KAAKolB,mBACRplB,KAAKimB,oBAEN,IAAIjmB,KAAKmlB,kBACRnlB,KAAK+lB,mBAEN/lB,MAAK6lB,UAAYhkB,EAAiBykB,iBAAiBtmB,KAAK8F,UAAW9F,KAAKkmB,cAAelmB,KAAKgmB,aAAchmB,KAAK6lB,UAAW7lB,KAAKsC,qBAGhItC,KAAKwF,qBAAqBxF,KAAK6lB,UAE/B7lB,MAAK0F,eAAe1F,KAAK6lB,UAAUlgB,IAAM,MASnCuf,GAAA3kB,UAAAqC,OAAP,SAAcyC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAKtF,KAAKkC,eAAgB,CACzB,GAAImD,GAAUrF,KAAK6C,KAClB,MAED,IAAIwC,YAAkB1D,GAAkB,CACvC3B,KAAKuF,sBAAsBvF,KAAK6C,KAChC7C,MAAK6C,KAA0BwC,MACzB,IAAIA,EAAQ,CAClB,IAAKrF,KAAK6C,KACT7C,KAAK6C,KAAO,GAAIlB,GAAiB3B,KAAKsC,oBAEvCtC,MAAK6C,KAAKH,IAAI2C,EAAQC,OAChB,IAAItF,KAAK6C,KAAM,CACrB7C,KAAKuF,sBAAsBvF,KAAK6C,KAChC7C,MAAK6C,KAAO,IACZ,aAEK,CACN7C,KAAK6C,KAAOhB,EAAiBgE,YAAY7F,KAAK8F,UAAW9F,KAAK6C,KAAM7C,KAAKsC,oBAAqBtC,KAAKgC,cAGpG,GAAIhC,KAAKslB,oBACRtlB,KAAKwF,qBAAqBxF,KAAK6lB,UAEhC7lB,MAAKwF,qBAAqBxF,KAAK6C,KAE/B7C,MAAK0F,eAAe1F,KAAK6C,KAAK8C,IAAM,MAS9Buf,GAAA3kB,UAAAgmB,gBAAP,SAAuBlhB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAUrF,KAAKmmB,cAClB,MAED,IAAI9gB,YAAkB1D,GAAkB,CACvC3B,KAAKuF,sBAAsBvF,KAAKmmB,cAChCnmB,MAAKmmB,cAAmC9gB,MAClC,IAAIA,EAAQ,CAClB,IAAKrF,KAAKmmB,cACTnmB,KAAKmmB,cAAgB,GAAIxkB,GAAiB3B,KAAKsC,oBAEhDtC,MAAKmmB,cAAczjB,IAAI2C,EAAQC,OACzB,IAAItF,KAAKmmB,cAAe,CAC9BnmB,KAAKuF,sBAAsBvF,KAAKmmB,cAChCnmB,MAAKmmB,cAAgB,IACrB,QAGDnmB,KAAKwF,qBAAqBxF,KAAKmmB,cAE/BnmB,MAAK0F,eAAe1F,KAAKmmB,cAAcxgB,IAAM,MASvCuf,GAAA3kB,UAAAimB,gBAAP,SAAuBnhB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAUrF,KAAKylB,cAClB,MAED,IAAIpgB,YAAkBma,GAAgB,CACrCxf,KAAKuF,sBAAsBvF,KAAKylB,cAChCzlB,MAAKylB,cAAiCpgB,MAChC,IAAIA,EAAQ,CAClB,IAAKrF,KAAKylB,cACTzlB,KAAKylB,cAAgB,GAAIjG,GAAeI,aAAc5f,KAAKwlB,iBAAkBxlB,KAAKsC,oBAEnF,IAAItC,KAAKulB,qBAAsB,CAC9B,GAAIrmB,GAAW,CACf,IAAIunB,EACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAa,GAAIhmB,OAErBX,MAAKomB,sBAAwB,GAAIta,MAEjC,OAAO5M,EAAImG,EAAO5F,OAAQ,CACzBgnB,EAAWphB,EAAOnG,EAGlB,IAAIynB,EAAIF,IAAarlB,UAAW,CAC/BulB,EAAIF,GAAYC,CAChB1mB,MAAKomB,sBAAsBM,KAAcD,EAI1CphB,EAAOnG,KAAOynB,EAAIF,IAIpBzmB,KAAKylB,cAAc/iB,IAAI2C,EAAQC,OAEzB,IAAItF,KAAKylB,cAAe,CAC9BzlB,KAAKuF,sBAAsBvF,KAAKylB,cAChCzlB,MAAKylB,cAAgB,IACrB,QAGDzlB,KAAKwF,qBAAqBxF,KAAKylB,cAE/BzlB,MAAK0F,eAAe1F,KAAKylB,cAAc9f,IAAM,MASvCuf,GAAA3kB,UAAAqmB,gBAAP,SAAuBvhB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAUrF,KAAK0lB,cAClB,MAED,IAAIrgB,YAAkBma,GAAgB,CACrCxf,KAAKuF,sBAAsBvF,KAAK0lB,cAChC1lB,MAAK0lB,cAAiCrgB,MAChC,IAAIA,EAAQ,CAClB,IAAKrF,KAAK0lB,cACT1lB,KAAK0lB,cAAgB,GAAIlG,GAAeI,aAAc5f,KAAKwlB,iBAAkBxlB,KAAKsC,oBAEnFtC,MAAK0lB,cAAchjB,IAAI2C,EAAQC,OAEzB,IAAItF,KAAK0lB,cAAe,CAC9B1lB,KAAKuF,sBAAsBvF,KAAK0lB,cAChC1lB,MAAK0lB,cAAgB,IACrB,QAGD1lB,KAAKwF,qBAAqBxF,KAAK0lB,cAE/B1lB,MAAK0F,eAAe1F,KAAK0lB,cAAc/f,IAAM,MAMvCuf,GAAA3kB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOzB,KAAAQ,KAEbA,MAAKqC,WAAWpB,SAChBjB,MAAKqC,WAAa,IAElB,IAAIrC,KAAK2lB,SAAU,CAClB3lB,KAAK2lB,SAAS1kB,SACdjB,MAAK2lB,SAAW,KAGjB,GAAI3lB,KAAK6lB,UAAW,CACnB7lB,KAAK6lB,UAAU5kB,SACfjB,MAAK6lB,UAAY,KAGlB,GAAI7lB,KAAK6C,KAAM,CACd7C,KAAK6C,KAAK5B,SACVjB,MAAK6C,KAAO,KAGb,GAAI7C,KAAKmmB,cAAe,CACvBnmB,KAAKmmB,cAAcllB,SACnBjB,MAAKmmB,cAAgB,KAGtB,GAAInmB,KAAKylB,cAAe,CACvBzlB,KAAKylB,cAAcxkB,SACnBjB,MAAKylB,cAAgB,KAGtB,GAAIzlB,KAAK0lB,cAAe,CACvB1lB,KAAK0lB,cAAczkB,SACnBjB,MAAK0lB,cAAgB,KAGtB,GAAI1lB,KAAKgmB,aAAc,CACtBhmB,KAAKgmB,aAAa/kB,SAClBjB,MAAKgmB,aAAe,KAGrB,GAAIhmB,KAAKkmB,cAAe,CACvBlmB,KAAKkmB,cAAcjlB,SACnBjB,MAAKkmB,cAAgB,MAYhBhB,GAAA3kB,UAAA2F,WAAP,SAAkBb,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B5E,EAAAH,UAAM2F,WAAU1G,KAAAQ,KAACqF,EAAQC,EAEzBtF,MAAKmlB,kBAAoB,IACzBnlB,MAAKolB,mBAAqB,IAE1B,IAAIplB,KAAKqlB,mBACRrlB,KAAKwF,qBAAqBxF,KAAK2lB,SAEhC,IAAI3lB,KAAKslB,oBACRtlB,KAAKwF,qBAAqBxF,KAAK6lB,UAEhC,IAAI7lB,KAAKkC,eACRlC,KAAKwF,qBAAqBxF,KAAK6C,MAO1BqiB,GAAA3kB,UAAAwF,MAAP,WAEC,GAAIA,GAA4B,GAAImf,GAAoBllB,KAAKsC,oBAAqBtC,KAAKsC,oBAAoByD,QAAU,KAGrHA,GAAM8gB,kBAAoB,KAC1B9gB,GAAM+gB,mBAAqB,KAC3B/gB,GAAMC,cAAgB,KAEtB,IAAIhG,KAAKiG,QACRF,EAAMG,WAAWlG,KAAKiG,QAAQF,QAE/B,IAAI/F,KAAK+mB,QACRhhB,EAAM6f,WAAW5lB,KAAK+mB,QAAQhhB,QAE/B,IAAI/F,KAAKmG,IACRJ,EAAMnD,OAAO5C,KAAKmG,IAAIJ,QAEvB,IAAI/F,KAAKgnB,SACRjhB,EAAM+f,YAAY9lB,KAAKgnB,SAASjhB,QAEjC,IAAI/F,KAAKinB,aACRlhB,EAAMwgB,gBAAgBvmB,KAAKinB,aAAalhB,QAEzCA,GAAMmhB,gBAAkBlnB,KAAKwlB,gBAE7B,IAAIxlB,KAAKmnB,aACRphB,EAAMygB,gBAAgBxmB,KAAKmnB,aAAaphB,QAEzC,IAAI/F,KAAKonB,aACRrhB,EAAM6gB,gBAAgB5mB,KAAKonB,aAAarhB,QAGzCA,GAAM8gB,kBAAoB7mB,KAAKqlB,kBAC/Btf,GAAM+gB,mBAAqB9mB,KAAKslB,mBAChCvf,GAAMC,cAAgBhG,KAAKkC,cAE3B,OAAO6D,GAGDmf,GAAA3kB,UAAA6F,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjCzE,EAAiB0E,SAASF,EAAQC,EAAQtG,KAAKmG,IAAKnG,KAAKmG,IAAI1D,OAOvDyiB,GAAA3kB,UAAAiG,MAAP,SAAaA,GAEZ3E,EAAiB2E,MAAMA,EAAOxG,KAAKoD,UAAWpD,KAAKgC,cAG7CkjB,GAAA3kB,UAAAkG,oBAAP,SAA2BC,GAE1B7E,EAAiB4E,oBAAoBC,EAAW1G,KAAKoD,UAAWpD,KAAK+mB,QAAS/mB,KAAKgnB,SAAUhnB,KAAKgC,cAM3FkjB,GAAA3kB,UAAA0lB,mBAAR,WAECjmB,KAAKkmB,cAAgBrkB,EAAiBwlB,qBAAqBrnB,KAAK8F,UAAW9F,KAAKqC,WAAYrC,KAAKmG,IAAKnG,KAAKkmB,cAAelmB,KAAK8F,UAAUrD,MAEzIzC,MAAKolB,mBAAqB,MAMnBF,GAAA3kB,UAAAwlB,kBAAR,WAEC/lB,KAAKgmB,aAAenkB,EAAiBylB,oBAAoBtnB,KAAK8F,UAAW9F,KAAKqC,WAAYrC,KAAKgmB,aAAchmB,KAAK8F,UAAUrD,MAE5HzC,MAAKmlB,kBAAoB,MAGnBD,GAAA3kB,UAAAoG,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgB2gB,sBAAsBvnB,KAAM6G,EAAUC,EAAoBC,GAhqBpEme,GAAAhkB,UAAmB,6BAkqBlC,OAAAgkB,IApqBkCtjB,EAsqBLjC,GAAAJ,QAApB2lB,Ifm4HNzE,4CAA4Crf,UAAU6F,8CAA8C7F,UAAU8F,8CAA8C9F,UAAU+F,0CAA0C,0CAA0CC,4CAA4C,8CAA8CogB,2CAA2C,SAAS/oB,EAAQkB,EAAOJ,GAC1Z,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgB9jJtB,IAAO6kB,GAAmBzmB,EAAY,8CAEtC,IAAO6I,GAAW7I,EAAc,sChBykJhC,IgB3jJMgpB,GAAe,SAAA/mB,GAASX,EAAxB0nB,EAAe/mB,EA8BpB,SA9BK+mB,GA8BOjgB,EAAiCC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE7DnG,EAAAlB,KAAAQ,KAEAA,MAAK0H,aAAeD,CACpBzH,MAAK2H,aAAeH,CACpBxH,MAAK6G,SAAWA,EAzBjBlG,OAAAC,eAAW6mB,EAAAlnB,UAAA,ahBmkJJM,IgBnkJP,WAEC,MAAO4mB,GAAgBvmB,WhBokJjBH,WAAY,KACZC,aAAc,MgB/jJrBL,QAAAC,eAAW6mB,EAAAlnB,UAAA,ehBqkJJM,IgBrkJP,WAEC,MAAOb,MAAK2H,chBskJN5G,WAAY,KACZC,aAAc,MgBljJdymB,GAAAlnB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOzB,KAAAQ,MA1CAynB,GAAAvmB,UAAmB,yBAEnBumB,GAAA7f,WAAyBsd,CA0CxC,OAAAuC,IA9C8BngB,EAgDL3H,GAAAJ,QAAhBkoB,IhB0jJN5f,sCAAsC,sCAAsCod,8CAA8C,gDAAgDyC,oDAAoD,SAASjpB,EAAQkB,EAAOJ,GACzP,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiB/nJtB,IAAO+H,GAAa3J,EAAc,qCAClC,IAAOkpB,GAAmBlpB,EAAa,2CAIvC,IAAOmpB,GAAkBnpB,EAAa,+CAGtC,IAAOopB,GAAmBppB,EAAa,iDjBioJvC,IiB1nJMqpB,GAAsB,SAAApnB,GAASX,EAA/B+nB,EAAsBpnB,EAoB3B,SApBKonB,GAoBO1I,GAEX1e,EAAAlB,KAAAQ,KAAMof,EAnBCpf,MAAAgL,GAAY,CACZhL,MAAAiL,GAAY,CACZjL,MAAAkL,GAAY,CACZlL,MAAA6P,OAAgB,CAChB7P,MAAAqO,QAAiB,CACjBrO,MAAA+N,OAAgB,CAChB/N,MAAA+nB,SAAkB,CAClB/nB,MAAAgoB,SAAkB,CAClBhoB,MAAAioB,SAAkB,CAClBjoB,MAAAkoB,cAAuB,CACvBloB,MAAAmoB,cAAuB,CACvBnoB,MAAAooB,cAAuB,EAcxBN,EAAAvnB,UAAA8nB,QAAP,WAECroB,KAAKgL,GAAKhL,KAAKiL,GAAKjL,KAAKkL,GAAK,CAC9BlL,MAAK6P,OAAS7P,KAAKqO,QAAUrO,KAAK+N,OAAS,CAC3C/N,MAAK+nB,SAAW/nB,KAAKgoB,SAAWhoB,KAAKioB,SAAW,CAChDjoB,MAAKkoB,cAAgBloB,KAAKmoB,cAAgBnoB,KAAKooB,cAAgB,EAMzDN,GAAAvnB,UAAA+nB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGxoB,KAAKyoB,cACPzoB,KAAK0oB,UAEN,KAAK,GAAIxpB,GAAW,EAAGA,EAAIspB,IAAatpB,EAAG,CAE1C,GAAIypB,GAAgBJ,EAAOrpB,EAC3B,IAAID,GAAW0pB,EAAM1pB,CACrB,IAAIiB,GAAWyoB,EAAMzoB,CACrB,IAAI0oB,GAAWD,EAAMC,CACrB,IAAIC,GAAwB5pB,EAAI,GAAIe,KAAKkoB,cAAgBloB,KAAKkoB,aAC9D,IAAIY,GAAwB5oB,EAAI,GAAIF,KAAKmoB,cAAgBnoB,KAAKmoB,aAC9D,IAAIY,GAAwBH,EAAI,GAAI5oB,KAAKooB,cAAgBpoB,KAAKooB,aAC9D,IAAIY,GAAkB/pB,GAAGe,KAAK+nB,SAAWc,GAAkB3oB,GAAGF,KAAKgoB,SAAWc,GAAkBF,GAAG5oB,KAAKioB,SAAWc,GAAkBJ,EAAM1oB,CAE3I,IAAI+oB,EAAW,EACd,MAAO,OAGT,MAAO,MAGDlB,GAAAvnB,UAAA0oB,gBAAP,SAAuBnW,EAAmBoW,EAAoBC,GAE7D,GAAGnpB,KAAKyoB,cACPzoB,KAAK0oB,UAEN,OAAO1oB,MAAKopB,KAAKH,gBAAgBnW,EAAUoW,EAAWC,GAKhDrB,GAAAvnB,UAAA8oB,gBAAP,SAAuBV,GAEtB,GAAI1pB,GAAW0pB,EAAM1pB,CACrB,IAAIiB,GAAWyoB,EAAMzoB,CACrB,IAAI0oB,GAAWD,EAAMC,CACrB,IAAIU,GAAwBrqB,EAAEe,KAAK+nB,SAAW7nB,EAAEF,KAAKgoB,SAAWY,EAAE5oB,KAAKioB,SAAWU,EAAM1oB,CAExF,IAAIhB,EAAI,EACPA,GAAKA,CAEN,IAAIiB,EAAI,EACPA,GAAKA,CAEN,IAAI0oB,EAAI,EACPA,GAAKA,CAEN,IAAIW,GAAqBtqB,EAAEe,KAAKkoB,cAAgBhoB,EAAEF,KAAKmoB,cAAgBS,EAAE5oB,KAAKooB,aAE9E,OAAOkB,GAAiBC,EAAa5B,EAAoB6B,MAAQF,GAAkBC,EAAa5B,EAAoB8B,KAAO9B,EAAoB+B,UAGzI5B,GAAAvnB,UAAAmoB,SAAP,WAEChoB,EAAAH,UAAMmoB,SAAQlpB,KAAAQ,KAEdA,MAAKopB,KAAOppB,KAAK2pB,SAAS/b,QAC1B,IAAIgc,GAAkB5pB,KAAK2pB,SAASlb,cACpC,IAAIob,GAAY7pB,KAAKopB,KAAK7Y,MAAM,CAChC,IAAIuZ,GAAY9pB,KAAKopB,KAAKhb,OAAO,CACjC,IAAI2b,GAAY/pB,KAAKopB,KAAKvb,MAAM,CAChC,IAAI9J,GAAY/D,KAAKopB,KAAKpmB,EAAI6mB,CAC9B,IAAI7lB,GAAYhE,KAAKopB,KAAKnmB,EAAI6mB,CAC9B,IAAIE,GAAYhqB,KAAKopB,KAAKlmB,EAAI6mB,CAC9B,IAAIvU,GAAepN,EAAcyN,kBAEjC+T,GAAOK,cAAczU,EAErB,IAAI0U,GAAa1U,EAAI,GAAI2U,EAAa3U,EAAI,GAAI4U,EAAa5U,EAAI,GAAI6U,EAAa7U,EAAI,GACpF,IAAI8U,GAAa9U,EAAI,GAAI+U,EAAa/U,EAAI,GAAIgV,EAAahV,EAAI,GAAIiV,EAAajV,EAAI,GACpF,IAAIkV,GAAalV,EAAI,GAAImV,EAAanV,EAAI,GAAIoV,EAAapV,EAAI,IAAKqV,EAAarV,EAAI,GAErFxV,MAAK+nB,SAAWhkB,EAAGmmB,EAAMlmB,EAAGmmB,EAAMH,EAAGI,EAAMC,CAC3CrqB,MAAKgoB,SAAWjkB,EAAGumB,EAAMtmB,EAAGumB,EAAMP,EAAGQ,EAAMC,CAC3CzqB,MAAKioB,SAAWlkB,EAAG2mB,EAAM1mB,EAAG2mB,EAAMX,EAAGY,EAAMC,CAE3C7qB,MAAKkoB,cAAgBzQ,KAAKqT,IAAIjB,EAAGK,EAAMJ,EAAGK,EAAMJ,EAAGK,EACnDpqB,MAAKmoB,cAAgB1Q,KAAKqT,IAAIjB,EAAGS,EAAMR,EAAGS,EAAMR,EAAGS,EACnDxqB,MAAKooB,cAAgB3Q,KAAKqT,IAAIjB,EAAGa,EAAMZ,EAAGa,EAAMZ,EAAGa,EAEnD,IAAI5qB,KAAK+qB,QAAS,CACjB/qB,KAAK+qB,QAAQxa,MAAQvQ,KAAKopB,KAAK7Y,KAC/BvQ,MAAK+qB,QAAQ3c,OAASpO,KAAKopB,KAAKhb,MAChCpO,MAAK+qB,QAAQld,MAAQ7N,KAAKopB,KAAKvb,KAC/B7N,MAAKgrB,kBAAkBtkB,UAAUukB,SAAWrB,EAG7C5pB,KAAK6P,OAAS7P,KAAKkoB,cAAc,CACjCloB,MAAKqO,QAAUrO,KAAKmoB,cAAc,CAClCnoB,MAAK+N,OAAS/N,KAAKooB,cAAc,CAEjCpoB,MAAKgL,GAAKhL,KAAK+nB,SAAW/nB,KAAKkoB,aAC/BloB,MAAKiL,GAAKjL,KAAKgoB,SAAWhoB,KAAKmoB,aAC/BnoB,MAAKkL,GAAKlL,KAAKioB,SAAWjoB,KAAKooB,cAGzBN,GAAAvnB,UAAA2qB,wBAAP,WAEClrB,KAAK+qB,QAAU,GAAIlD,EACnB7nB,MAAK+qB,QAAQI,aAAe,iBAE5B,OAAcnrB,MAAK+qB,QAAQK,eAE7B,OAAAtD,IAhJqCF,EAkJrCjoB,GAAgCJ,QAAvBuoB,IjBulJNrM,qCAAqCra,UAAUiqB,2CAA2CjqB,UAAUkqB,+CAA+C,+CAA+CC,iDAAiD,mDAAmDC,4CAA4C,SAAS/sB,EAAQkB,EAAOJ,GAC7W,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkB7vJtB,IAAOsnB,GAAmBlpB,EAAa,2CAKvC,IAAOmpB,GAAkBnpB,EAAa,+CAGtC,IAAOgtB,GAAqBhtB,EAAY,mDAExC,IAAMitB,GAAc,SAAAhrB,GAASX,EAAvB2rB,EAAchrB,EASnB,SATKgrB,GASOtM,GAEX1e,EAAAlB,KAAAQ,KAAMof,EARCpf,MAAA2rB,QAAiB,CACjB3rB,MAAA+nB,SAAkB,CAClB/nB,MAAAgoB,SAAkB,CAClBhoB,MAAAioB,SAAkB,EAQnByD,EAAAnrB,UAAA8nB,QAAP,WAECroB,KAAK+nB,SAAW/nB,KAAKgoB,SAAWhoB,KAAKioB,SAAW,CAChDjoB,MAAK2rB,QAAU,EAGTD,GAAAnrB,UAAA+nB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAGxoB,KAAKyoB,cACPzoB,KAAK0oB,UAEN,KAAK,GAAIxpB,GAAW,EAAGA,EAAIspB,IAAatpB,EAAG,CAC1C,GAAIypB,GAAgBJ,EAAOrpB,EAC3B,IAAI2pB,GAAwBF,EAAM1pB,EAAI,GAAIe,KAAK2rB,QAAU3rB,KAAK2rB,OAC9D,IAAI7C,GAAwBH,EAAMzoB,EAAI,GAAIF,KAAK2rB,QAAU3rB,KAAK2rB,OAC9D,IAAI5C,GAAwBJ,EAAMC,EAAI,GAAI5oB,KAAK2rB,QAAU3rB,KAAK2rB,OAC9D,IAAI3C,GAAkBL,EAAM1pB,GAAIe,KAAK+nB,SAAWc,GAAmBF,EAAMzoB,GAAIF,KAAKgoB,SAAWc,GAAkBH,EAAMC,GAAI5oB,KAAKioB,SAAWc,GAAmBJ,EAAM1oB,CAClK,IAAI+oB,EAAW,EAAG,CACjB,MAAO,QAGT,MAAO,MAGD0C,GAAAnrB,UAAA0oB,gBAAP,SAAuBnW,EAAmBoW,EAAoBC,GAE7D,GAAGnpB,KAAKyoB,cACPzoB,KAAK0oB,UAEN,OAAO1oB,MAAK4rB,QAAQ3C,gBAAgBnW,EAAUoW,EAAWC,GAInDuC,GAAAnrB,UAAA8oB,gBAAP,SAAuBV,GAEtB,GAAI1pB,GAAW0pB,EAAM1pB,CACrB,IAAIiB,GAAWyoB,EAAMzoB,CACrB,IAAI0oB,GAAWD,EAAMC,CACrB,IAAIiD,GAAY5sB,EAAEe,KAAK+nB,SAAW7nB,EAAEF,KAAKgoB,SAAWY,EAAE5oB,KAAKioB,SAAWU,EAAM1oB,CAE5E,IAAIhB,EAAI,EACPA,GAAKA,CAEN,IAAIiB,EAAI,EACPA,GAAKA,CAEN,IAAI0oB,EAAI,EACPA,GAAKA,CAEN,IAAIkD,IAAa7sB,EAAIiB,EAAI0oB,GAAG5oB,KAAK2rB,OAEjC,OAAOE,GAAKC,EAAInE,EAAoB6B,MAAQqC,GAAMC,EAAInE,EAAoB8B,KAAO9B,EAAoB+B,UAG/FgC,GAAAnrB,UAAAmoB,SAAP,WAEChoB,EAAAH,UAAMmoB,SAAQlpB,KAAAQ,KAEdA,MAAK4rB,QAAU5rB,KAAK2pB,SAASpX,WAC7B,IAAIqX,GAAkB5pB,KAAK2pB,SAASlb,cAEpC,IAAI1K,GAAY/D,KAAK4rB,QAAQ5oB,CAC7B,IAAIgB,GAAYhE,KAAK4rB,QAAQ3oB,CAC7B,IAAI+mB,GAAYhqB,KAAK4rB,QAAQ1oB,CAC7B,IAAIrE,GAAWmB,KAAK4rB,QAAQG,MAE5B,IAAIvW,GAAoB,GAAI1J,OAAc,GAC1C8d,GAAOK,cAAczU,EAErB,IAAI0U,GAAa1U,EAAI,GAAI2U,EAAa3U,EAAI,GAAI4U,EAAa5U,EAAI,GAAI6U,EAAa7U,EAAI,GACpF,IAAI8U,GAAa9U,EAAI,GAAI+U,EAAa/U,EAAI,GAAIgV,EAAahV,EAAI,GAAIiV,EAAajV,EAAI,GACpF,IAAIkV,GAAalV,EAAI,GAAImV,EAAanV,EAAI,GAAIoV,EAAapV,EAAI,IAAKqV,EAAarV,EAAI,GAErFxV,MAAK+nB,SAAWhkB,EAAGmmB,EAAMlmB,EAAGmmB,EAAMH,EAAGI,EAAMC,CAC3CrqB,MAAKgoB,SAAWjkB,EAAGumB,EAAMtmB,EAAGumB,EAAMP,EAAGQ,EAAMC,CAC3CzqB,MAAKioB,SAAWlkB,EAAG2mB,EAAM1mB,EAAG2mB,EAAMX,EAAGY,EAAMC,CAE3C,IAAImB,GAAY9B,EAAMC,EAAMC,CAC5B,IAAI6B,GAAY3B,EAAMC,EAAMC,CAC5B,IAAI0B,GAAYxB,EAAMC,EAAMC,CAC5B5qB,MAAK2rB,QAAU9sB,EAAE4Y,KAAKC,MAAMsU,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,GAAI,EAEnD,IAAIlsB,KAAK+qB,QAAS,CACjB/qB,KAAK+qB,QAAQgB,OAASltB,CACtBmB,MAAKgrB,kBAAkBhoB,EAAIe,CAC3B/D,MAAKgrB,kBAAkB/nB,EAAIe,CAC3BhE,MAAKgrB,kBAAkB9nB,EAAI8mB,CAC3BhqB,MAAKgrB,kBAAkBtkB,UAAUukB,SAAWrB,GAIvC8B,GAAAnrB,UAAA2qB,wBAAP,WAEClrB,KAAK+qB,QAAU,GAAIU,EACnBzrB,MAAK+qB,QAAQI,aAAe,iBAE5B,OAAcnrB,MAAK+qB,QAAQK,eAE7B,OAAAM,IAhH6B9D,EAkH7BjoB,GAAwBJ,QAAfmsB,IlB2tJNL,2CAA2CjqB,UAAUkqB,+CAA+C,+CAA+Ca,mDAAmD,qDAAqDb,gDAAgD,SAAS7sB,EAAQkB,EAAOJ,GmBr1JtU,GAAOgJ,GAAmB9J,EAAa,6CAKvC,IAAMmpB,GAAkB,WAMvB,QANKA,GAMOxI,GAFLpf,KAAAyoB,cAAwB,IAI9BzoB,MAAK2pB,SAAWvK,EAGjBze,OAAAC,eAAWgnB,EAAArnB,UAAA,mBnB60JJM,ImB70JP,WAEC,GAAIb,KAAKgrB,mBAAqB,KAAM,CACnChrB,KAAKgrB,kBAAoBhrB,KAAKkrB,yBAE9BlrB,MAAK0oB,WAGN,MAAO1oB,MAAKgrB,mBnB40JNjqB,WAAY,KACZC,aAAc,MmB10Jd4mB,GAAArnB,UAAA8nB,QAAP,WAEC,KAAM,IAAI9f,GAGJqf,GAAArnB,UAAA+nB,YAAP,SAAmBC,EAAuBC,GAEzC,KAAM,IAAIjgB,GAGJqf,GAAArnB,UAAAwF,MAAP,WAEC,KAAM,IAAIwC,GAGJqf,GAAArnB,UAAA0oB,gBAAP,SAAuBnW,EAAmBoW,EAAoBC,GAE7D,OAAQ,EAGFvB,GAAArnB,UAAA8oB,gBAAP,SAAuBV,GAEtB,KAAM,IAAIpgB,GAGJqf,GAAArnB,UAAAmoB,SAAP,WAEC1oB,KAAKyoB,cAAgB,MAGfb,GAAArnB,UAAA0hB,WAAP,WAECjiB,KAAKyoB,cAAgB,KAGfb,GAAArnB,UAAA2qB,wBAAP,WAEC,KAAM,IAAI3iB,GAEZ,OAAAqf,KAEAjoB,GAA4BJ,QAAnBqoB,InB+zJNxM,6CAA6Cha,YAAY2a,wCAAwC,SAAStd,EAAQkB,EAAOJ,GAI5H,GoBx4JMiJ,GAAU,WAAhB,QAAMA,MAKSA,EAAA4jB,OAAgB,QAKhB5jB,GAAAyE,iBAA0B,gBAK1BzE,GAAA6jB,KAAc,MAC7B,OAAA7jB,KAEA7I,GAAoBJ,QAAXiJ,OpBy4JH8jB,wCAAwC,SAAS7tB,EAAQkB,EAAOJ,GACtE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqBn6JtB,IAAOsnB,GAAmBlpB,EAAa,2CAGvC,IAAOmpB,GAAkBnpB,EAAa,+CAGtC,IAAM8tB,GAAU,SAAA7rB,GAASX,EAAnBwsB,EAAU7rB,EAIf,SAJK6rB,GAIOC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEX9rB,EAAAlB,KAAAQ,KAAM,KAENA,MAAKysB,UAAYD,EAIXD,EAAAhsB,UAAAwF,MAAP,WAEC,MAAO,IAAIwmB,GAAWvsB,KAAKysB,WAIrBF,GAAAhsB,UAAA+nB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAOxoB,MAAKysB,UAGNF,GAAAhsB,UAAA8oB,gBAAP,SAAuBV,GAEtB,MAAOhB,GAAoB+B,UAE7B,OAAA6C,IA3ByB3E,EA6BLjoB,GAAAJ,QAAXgtB,IrB05JNlB,2CAA2CjqB,UAAUkqB,+CAA+C,iDAAiDjM,wDAAwD,SAAS5gB,EAAQkB,EAAOJ,GACxO,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsB/7JtB,IAAOqsB,GAAajuB,EAAc,uCAClC,IAAOW,GAAKX,EAAgB,+BAC5B,IAAOkuB,GAAUluB,EAAe,oCAEhC,IAAOqK,GAAarK,EAAc,wCtBs9JlC,IsB77JM8e,GAAsB,SAAA7c,GAASX,EAA/Bwd,EAAsB7c,EAqF3B,SArFK6c,KAuFJ7c,EAAAlB,KAAAQ,KAnFOA,MAAA4sB,eAAyB,IACzB5sB,MAAA6sB,UAAiC,GAAI/gB,OAM7CnL,OAAAC,eAAW2c,EAAAhd,UAAA,atBu8JJM,IsBv8JP,WAEC,MAAO0c,GAAuBrc,WtBw8JxBH,WAAY,KACZC,aAAc,MsBj7JrBL,QAAAC,eAAW2c,EAAAhd,UAAA,iBtBy8JJM,IsBz8JP,WAEC,MAAOb,MAAK4sB,gBtB08JNlqB,IsBv8JP,SAAyBC,GAExB,GAAI3C,KAAK4sB,gBAAkBjqB,EAC1B,MAED3C,MAAK4sB,eAAiBjqB,CAEtB3C,MAAKmY,6BAA6BnY,KAAKsO,SAAUtO,KAAKsO,SAASvE,uBAAyB,OtBs8JlFhJ,WAAY,KACZC,aAAc,MsBj8JrBL,QAAAC,eAAW2c,EAAAhd,UAAA,etBu8JJM,IsBv8JP,WAEC,MAAOb,MAAK6sB,UAAUptB,QtBw8JhBsB,WAAY,KACZC,aAAc,MsB14Jduc,GAAAhd,UAAAusB,SAAP,SAAgBC,GAEf,GAAIA,GAAS,KACZ,KAAM,IAAI3tB,GAAM,kCAGjB,IAAI2tB,EAAMze,SACTye,EAAMze,SAAS0e,oBAAoBD,EAEpCA,GAAM9U,WAAWjY,KAEjBA,MAAK6sB,UAAUrT,KAAKuT,EAEpB/sB,MAAKyN,oBAEL,OAAOsf,GAiCDxP,GAAAhd,UAAA0sB,WAAP,SAAkBF,EAAqBrT,GAEtC,MAAOqT,GAGDxP,GAAAhd,UAAA2sB,YAAP,WAAmB,GAAAC,KtBk6JZ,KsBl6JY,GAAAC,GAAA,EAAAA,EAAAlM,UAAAzhB,OAAA2tB,IAAkC,CAAlCD,EAAAC,EAAA,GAAAlM,UAAAkM,GAElB,GAAI1f,GAAayf,EAAW1tB,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAKwO,EAAKxO,IAChCc,KAAK8sB,SAASK,EAAWjuB,IAMpBqe,GAAAhd,UAAAwF,MAAP,WAEC,GAAIA,GAA+B,GAAIwX,EACvCxX,GAAMwJ,MAAQvP,KAAKuP,KACnBxJ,GAAMwL,WAAavR,KAAKuR,UACxBxL,GAAMyS,UAAYxY,KAAKwY,SACvBzS,GAAMyL,KAAOxR,KAAKwR,IAClBzL,GAAMsnB,aAAertB,KAAKqtB,YAC1BtnB,GAAMqS,cAAgBpY,KAAKoY,aAE3B,IAAI1K,GAAa1N,KAAK6sB,UAAUptB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjC6G,EAAM+mB,SAAS9sB,KAAK6sB,UAAU3tB,GAAG6G,QAGlC,OAAOA,GAeDwX,GAAAhd,UAAA+sB,SAAP,SAAgBP,GAEf,MAAO/sB,MAAK6sB,UAAUlT,QAAQoT,IAAU,EAMlCxP,GAAAhd,UAAAgtB,oBAAP,WAECvtB,KAAKiB,SAEL,OAAOjB,KAAKwtB,YAAc,EACzBxtB,KAAKytB,WAAW,GAAGxsB,UAYdsc,GAAAhd,UAAAktB,WAAP,SAAkB/T,GAEjB,GAAIqT,GAAsB/sB,KAAK6sB,UAAUnT,EAEzC,IAAIqT,GAAS,KACZ,KAAM,IAAIJ,GAAW,uDAEtB,OAAOI,GAiBDxP,GAAAhd,UAAAmtB,eAAP,SAAsBlc,GAErB,GAAI9D,GAAa1N,KAAK6sB,UAAUptB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjC,GAAIc,KAAK6sB,UAAU3tB,GAAGsS,MAAQA,EAC7B,MAAOxR,MAAK6sB,UAAU3tB,EAExB,OAAO,MAWDqe,GAAAhd,UAAAgO,cAAP,SAAqBwe,GAEpB,GAAIY,GAAoB3tB,KAAK6sB,UAAUlT,QAAQoT,EAE/C,IAAIY,IAAe,EAClB,KAAM,IAAIjB,GAAc,+CAEzB,OAAOiB,GAsBDpQ,GAAAhd,UAAAqtB,qBAAP,SAA4Bjb,GAE3B,MAAO,IAAI7G,OAsBLyR,GAAAhd,UAAAoR,YAAP,SAAmBob,GAElB,GAAIA,GAAS,KACZ,KAAM,IAAI3tB,GAAM,iCAEjBY,MAAKgtB,oBAAoBD,EAEzBA,GAAM9U,WAAW,KAEjBjY,MAAKyN,oBAEL,OAAOsf,GAyBDxP,GAAAhd,UAAAstB,cAAP,SAAqBnU,GAEpB,MAAO1Z,MAAK2R,YAAY3R,KAAK6sB,UAAUnT,IAmBjC6D,GAAAhd,UAAAutB,eAAP,SAAsBC,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAoC,CAApCA,EAAA,WAEpD,GAAID,EAAa,EAChB,KAAM,IAAIpB,GAAW,+CAEtB,IAAIqB,EAAWhuB,KAAK6sB,UAAUptB,OAC7B,KAAM,IAAIktB,GAAW,6CAEtB,KAAI,GAAIztB,GAAoB6uB,EAAY7uB,EAAI8uB,EAAU9uB,IACrDc,KAAK2R,YAAY3R,KAAK6sB,UAAU3tB,IA+B3Bqe,GAAAhd,UAAA0tB,cAAP,SAAqBlB,EAAqBrT,IAenC6D,GAAAhd,UAAA2tB,aAAP,SAAoBC,EAAsBC,IAcnC7Q,GAAAhd,UAAA8tB,eAAP,SAAsBC,EAAuBC,IAWtChR,GAAAhd,UAAA4R,kBAAP,WAECzR,EAAAH,UAAM4R,kBAAiB3S,KAAAQ,KAEvB,IAAIwuB,EACJ,IAAIC,EACJ,IAAIC,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAE9B,IAAIxb,EACJ,IAAIia,GAAqBxtB,KAAK6sB,UAAUptB,MAExC,IAAI+tB,EAAc,EAAG,CACpB,IAAK,GAAItuB,GAAW,EAAGA,EAAIsuB,IAAetuB,EAAG,CAC5CqU,EAAMvT,KAAK6sB,UAAU3tB,GAAG0O,OAAO5N,KAE/B,IAAId,GAAK,EAAG,CACX2vB,EAAOtb,EAAIhD,OAASme,EAAOnb,EAAIvQ,EAC/B8rB,GAAOvb,EAAInF,QAAUugB,EAAOpb,EAAItQ,EAChC8rB,GAAOxb,EAAI1F,OAAS+gB,EAAOrb,EAAIrQ,OACzB,CACNurB,EAAMlb,EAAIhD,OAASie,EAAMjb,EAAIvQ,EAC7B,IAAIwrB,EAAME,EACTA,EAAOF,CACR,IAAIC,EAAMI,EACTA,EAAOJ,CAERA,GAAMlb,EAAInF,QAAUogB,EAAMjb,EAAItQ,EAC9B,IAAIurB,EAAMG,EACTA,EAAOH,CACR,IAAIC,EAAMK,EACTA,EAAOL,CAERA,GAAMlb,EAAI1F,OAAS2gB,EAAMjb,EAAIrQ,EAC7B,IAAIsrB,EAAMI,EACTA,EAAOJ,CACR,IAAIC,EAAMM,EACTA,EAAON,GAIVzuB,KAAKoS,YAAY7B,MAAQse,GAAQ7uB,KAAKoS,YAAYpP,EAAI0rB,EACtD1uB,MAAKoS,YAAYhE,OAAS0gB,GAAQ9uB,KAAKoS,YAAYnP,EAAI0rB,EACvD3uB,MAAKoS,YAAYvE,MAAQkhB,GAAQ/uB,KAAKoS,YAAYlP,EAAI0rB,OAChD,CACN5uB,KAAKoS,YAAY4c,YAQZzR,GAAAhd,UAAAqO,0BAAP,WAEClO,EAAAH,UAAMqO,0BAAyBpP,KAAAQ,KAE/B,IAAI0N,GAAa1N,KAAK6sB,UAAUptB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjCc,KAAK6sB,UAAU3tB,GAAG0P,4BAMb2O,GAAAhd,UAAA4X,6BAAP,SAAoCxV,GAEnCjC,EAAAH,UAAM4X,6BAA4B3Y,KAAAQ,KAAC2C,EAEnC,IAAI+K,GAAa1N,KAAK6sB,UAAUptB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjCc,KAAK6sB,UAAU3tB,GAAGiZ,6BAA6BnY,KAAK4sB,gBAAkB5sB,KAAK+J,wBAMtEwT,GAAAhd,UAAA8P,2BAAP,SAAkC1N,GAEjCjC,EAAAH,UAAM8P,2BAA0B7Q,KAAAQ,KAAC2C,EAEjC,IAAI+K,GAAa1N,KAAK6sB,UAAUptB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjCc,KAAK6sB,UAAU3tB,GAAGmR,2BAA2BrQ,KAAK6J,sBAM7C0T,GAAAhd,UAAA4O,0BAAP,SAAiCxM,EAAiB8V,GAEjD/X,EAAAH,UAAM4O,0BAAyB3P,KAAAQ,KAAC2C,EAAO8V,EAEvC,IAAI/K,GAAa1N,KAAK6sB,UAAUptB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjCc,KAAK6sB,UAAU3tB,GAAGiQ,0BAA0BnP,KAAK6X,oBAAqBY,GAQhE8E,GAAAhd,UAAAysB,oBAAR,SAA4BD,GAE3B/sB,KAAK6sB,UAAUjT,OAAO5Z,KAAKuO,cAAcwe,GAAQ,EACjD,OAAOA,GAmBDxP,GAAAhd,UAAAwC,aAAP,SAAoBC,EAAUC,EAAU+R,EAA2Bia,GAA3B,GAAAja,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAia,QAAA,GAAyB,CAAzBA,EAAA,MAElE,GAAGjvB,KAAKoJ,YAAY,IAAM6lB,EAAU,MACpC,IAAGjvB,KAAKkvB,SAAS,MAAM,MACvB,KAAI,GAAIhwB,GAAW,EAAGA,EAAIc,KAAKwtB,YAAatuB,IAC5C,CACC,GAAI6tB,GAAsB/sB,KAAKytB,WAAWvuB,EAC1C,IAAIiwB,GAAmBpC,EAAMhqB,aAAaC,EAAEC,EAAG+R,EAAWia,EAC1D,IAAGE,EAAU,CACZ,GAAIC,GAAiCpvB,KAAKqJ,OAC1C,IAAG+lB,EAAU,CACZ,IAAK,GAAIC,GAAgB,EAAGA,EAASD,EAAU3vB,OAAQ4vB,IAAS,CAC/D,GAAIC,GAA2BF,EAAUC,EACzC,IAAGC,EAAW5d,OAAO,CACpB,GAAIyd,GAAmBG,EAAWvsB,aAAaC,EAAEC,EAAG+R,EAAW,KAC/D,IAAGma,EAAU,MAAO,YAInB,CACH,MAAO,QAIV,MAAO,OAzmBM5R,GAAArc,UAAmB,gCA4mBlC,OAAAqc,IA9mBqCzU,EAgnBrCnJ,GAAgCJ,QAAvBge,ItB02JNgS,uCAAuCnuB,UAAUouB,+BAA+BpuB,UAAUquB,oCAAoCruB,UAAU0G,wCAAwC,0CAA0C4nB,wCAAwC,SAASjxB,EAAQkB,EAAOJ,GAC7R,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuB//KtB,IAAOsvB,GAAkBlxB,EAAa,6CACtC,IAAOmxB,GAAanxB,EAAc,wCAGlC,IAAOoxB,GAAUpxB,EAAe,oCAEhC,IAAOqxB,GAAYrxB,EAAe,sCAClC,IAAOsxB,GAAWtxB,EAAe,qCACjC,IAAOuxB,GAAWvxB,EAAe,qCAGjC,IAAO8e,GAAsB9e,EAAY,uDvB4jLzC,IuBz/KMwxB,GAAM,SAAAvvB,GAASX,EAAfkwB,EAAMvvB,EA2HX,SA3HKuvB,GA2HOC,EAAgCC,GA3H7C,GAAApnB,GAAA/I,IA2Ha,IAAAkwB,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAE3CzvB,EAAAlB,KAAAQ,KAEAA,MAAKowB,aAAeF,CACpBlwB,MAAKqwB,YAAcF,CAEnBnwB,MAAKswB,4BAA8B,SAAC9jB,GAAsB,MAAAzD,GAAKwnB,mBAAmB/jB,GAClFxM,MAAKwwB,yBAA2B,SAAChkB,GAAqB,MAAAzD,GAAK0nB,gBAAgBjkB,GAC3ExM,MAAK0wB,4BAA8B,SAAClkB,GAAqB,MAAAzD,GAAK4nB,mBAAmBnkB,GACjFxM,MAAK4wB,qBAAuB,SAACpkB,GAAuB,MAAAzD,GAAK8nB,YAAYrkB,GACrExM,MAAK8wB,sBAAwB,SAACtkB,GAAsB,MAAAzD,GAAKgoB,aAAavkB,IArFvE7L,OAAAC,eAAWqvB,EAAA1vB,UAAA,WvByhLJM,IuBzhLP,WAEC,MAAOb,MAAKshB,UvB0hLNvgB,WAAY,KACZC,aAAc,MuBxgLrBL,QAAAC,eAAWqvB,EAAA1vB,UAAA,qBvB2hLJM,IuB3hLP,WAEC,MAAOb,MAAKgxB,oBvB4hLNjwB,WAAY,KACZC,aAAc,MuBv9KdivB,GAAA1vB,UAAA0wB,MAAP,WAEC,IAAKjxB,KAAKkxB,eACT,MAED,IAAIlxB,KAAKowB,aAAc,CACtB,GAAIe,EACJA,GAAMxB,EAAmByB,YAAYpxB,KAAKqwB,YAC1Cc,GAAIE,qBAAqBrxB,KAAKkxB,gBAG/BlxB,KAAKsxB,wBA0KCrB,GAAA1vB,UAAAgxB,KAAP,SAAYC,EAAoBC,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAE/E3xB,KAAK4xB,oBAAoBL,KAAKC,EAASC,EAASC,EAAIC,GAyF9C1B,GAAA1vB,UAAAsxB,SAAP,SAAgBC,EAAUL,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAEzE3xB,KAAK4xB,oBAAoBC,SAASC,EAAM,GAAIL,EAASC,EAAIC,GAGlD1B,GAAA1vB,UAAAqxB,kBAAR,WAEC,GAAI5xB,KAAKowB,aAAc,CACtB,GAAIe,GAAyBxB,EAAmByB,YAAYpxB,KAAKqwB,YACjErwB,MAAKkxB,eAAiBC,EAAIY,uBACpB,CACN/xB,KAAKkxB,eAAiB,GAAItB,GAG3B5vB,KAAKkxB,eAAe1jB,iBAAiBuiB,EAAYiC,kBAAmBhyB,KAAKswB,4BACzEtwB,MAAKkxB,eAAe1jB,iBAAiBqiB,EAAWoC,mBAAoBjyB,KAAK0wB,4BACzE1wB,MAAKkxB,eAAe1jB,iBAAiBqiB,EAAWqC,eAAgBlyB,KAAKwwB,yBAGrExwB,MAAKkxB,eAAeiB,kBAAkBnyB,KAAK4wB,qBAC3C5wB,MAAKkxB,eAAekB,uBAAuBpyB,KAAK8wB,sBAEhD,OAAO9wB,MAAKkxB,eAGLjB,GAAA1vB,UAAA+wB,sBAAR,WAAA,GAAAvoB,GAAA/I,IAGCA,MAAKqyB,sBAAwBryB,KAAKkxB,qBAC3BlxB,MAAKkxB,cACZlxB,MAAKkxB,eAAiB,IACtBlxB,MAAKsyB,cAAgBC,WAAW,WAAOxpB,EAAKypB,mBAAoB,KA0B1DvC,GAAA1vB,UAAAkyB,OAAP,YAccxC,GAAAyC,aAAd,SAA2BC,GAE1B/C,EAAc8C,aAAaC,GAYd1C,GAAA2C,cAAd,SAA4BC,GAE3BjD,EAAcgD,cAAcC,GAGrB5C,GAAA1vB,UAAAiyB,gBAAR,WAGCxyB,KAAKqyB,sBAAsB/kB,oBAAoByiB,EAAYiC,kBAAmBhyB,KAAKswB,4BACnFtwB,MAAKqyB,sBAAsB/kB,oBAAoBuiB,EAAWoC,mBAAoBjyB,KAAK0wB,4BACnF1wB,MAAKqyB,sBAAsB/kB,oBAAoBuiB,EAAWqC,eAAgBlyB,KAAKwwB,yBAE/E,KAAKxwB,KAAKowB,aACTpwB,KAAKqyB,sBAAsBS,aAErB9yB,MAAKqyB,qBACZryB,MAAKqyB,sBAAwB,IAE7BU,cAAa/yB,KAAKsyB,cAClBtyB,MAAKsyB,cAAgB,KAGdrC,GAAA1vB,UAAAkwB,gBAAR,SAAwBjkB,GAEvBxM,KAAK2Y,cAAcnM,GAMZyjB,GAAA1vB,UAAAswB,YAAR,SAAoBrkB,GAEnB,GAAIxM,KAAKsX,iBAAiBwY,EAAakD,UAAW,CACjDhzB,KAAK2Y,cAAcnM,EACnB,OAAO,UACD,CACN,MAAO,QAODyjB,GAAA1vB,UAAAwwB,aAAR,SAAqBvkB,GAEpB,GAAIxM,KAAKsX,iBAAiB0Y,EAAYiD,aAAc,CACnDjzB,KAAK2Y,cAAcnM,EACnB,OAAO,UACD,CACN,MAAO,QAIDyjB,GAAA1vB,UAAAowB,mBAAR,SAA2BnkB,GAE1BxM,KAAK2Y,cAAcnM,GAMZyjB,GAAA1vB,UAAAgwB,mBAAR,SAA2B/jB,GAE1BxM,KAAKshB,SAA2B9U,EAAM0mB,OAEtC,IAAIlzB,KAAKshB,SACRthB,KAAK8sB,SAAS9sB,KAAKshB,SAEpBthB,MAAK2Y,cAAcnM,EAEnBxM,MAAKsxB,wBAEP,OAAArB,IA3jBqB1S,EA6jBrB5d,GAAgBJ,QAAP0wB,IvBs8KNkD,oCAAoC/xB,UAAUgyB,sCAAsChyB,UAAUiyB,qCAAqCjyB,UAAUkyB,qCAAqClyB,UAAUmyB,6CAA6CnyB,UAAUoyB,wCAAwCpyB,UAAUie,uDAAuD,yDAAyDoU,uCAAuC,SAASh1B,EAAQkB,EAAOJ,GACvd,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwBtlMtB,IAAO0gB,GAAetiB,EAAc,yCAGpC,IAAO8e,GAAsB9e,EAAY,uDACzC,IAAOoK,GAAUpK,EAAe,uCAChC,IAAOi1B,GAAQj1B,EAAgB,wCAC/B,IAAOk1B,GAASl1B,EAAe,yCAG/B,IAAMm1B,GAAK,SAAAlzB,GAASX,EAAd6zB,EAAKlzB,EASV,SATKkzB,KAWJlzB,EAAAlB,KAAAQ,KATOA,MAAA6zB,oBAAuC,GAAI/nB,MAC3C9L,MAAA8zB,YAA+B,GAAIhoB,MAIpC9L,MAAA+zB,iBAAmB,CAMzB/zB,MAAKg0B,WAAa,GAAIL,GAAU,GAAID,GAEpC1zB,MAAKi0B,iBAAmB,GAAI1W,EAE5Bvd,MAAKi0B,iBAAiB/Z,WAAWla,KACjCA,MAAKi0B,iBAAiB7a,SAAW,IACjCpZ,MAAKi0B,iBAAiBzb,UAAYxY,KAAKg0B,WAGjCJ,EAAArzB,UAAA2zB,mBAAP,SAA0BC,GAEzB,GAAIj1B,GAAW,CACf,IAAIwO,GAAa1N,KAAK8zB,YAAYr0B,MAElC00B,GAAU1b,MAAQzY,IAElBA,MAAK+zB,kBAEL,OAAO70B,EAAIwO,EACV1N,KAAK8zB,YAAY50B,KAAKk1B,SAASD,GAGjCxzB,QAAAC,eAAWgzB,EAAArzB,UAAA,axBukMJM,IwBvkMP,WAEC,MAAOb,MAAKi0B,iBAAiBzb,WxBwkMvB9V,IwBrkMP,SAAqBC,GAEpB3C,KAAKi0B,iBAAiBzb,UAAY7V,CAElC3C,MAAK2Y,cAAc,GAAI9P,GAAWA,EAAWwrB,kBAAmBr0B,KAAKi0B,oBxBqkM/DlzB,WAAY,KACZC,aAAc,MwBnkMd4yB,GAAArzB,UAAA+sB,SAAP,SAAgBP,GAEf,MAAO/sB,MAAKi0B,iBAAiB3G,SAASP,GAGhC6G,GAAArzB,UAAAusB,SAAP,SAAgBC,GAEf,MAAO/sB,MAAKi0B,iBAAiBnH,SAASC,GAGhC6G,GAAArzB,UAAAoR,YAAP,SAAmBob,GAElB/sB,KAAKi0B,iBAAiBtiB,YAAYob,GAG5B6G,GAAArzB,UAAAstB,cAAP,SAAqBnU,GAEpB1Z,KAAKi0B,iBAAiBpG,cAAcnU,GAI9Bka,GAAArzB,UAAAktB,WAAP,SAAkB/T,GAEjB,MAAO1Z,MAAKi0B,iBAAiBxG,WAAW/T,GAGzC/Y,QAAAC,eAAWgzB,EAAArzB,UAAA,exB2jMJM,IwB3jMP,WAEC,MAAOb,MAAKi0B,iBAAiBzG,axB4jMvBzsB,WAAY,KACZC,aAAc,MwBvjMd4yB,GAAArzB,UAAAwY,oBAAP,SAA2BP,GAE1BxY,KAAK6zB,oBAAoBra,KAAKhB,EAG9B,IAAIxY,KAAK8zB,YAAYna,QAAQnB,KAAe,EAC3CxY,KAAK8zB,YAAYta,KAAKhB,GAMjBob,GAAArzB,UAAAsY,sBAAP,SAA6BL,GAE5BxY,KAAK6zB,oBAAoBja,OAAO5Z,KAAK6zB,oBAAoBla,QAAQnB,GAAY,EAG7E,IAAIxY,KAAK6zB,oBAAoBla,QAAQnB,KAAe,EACnDxY,KAAK8zB,YAAYla,OAAO5Z,KAAK8zB,YAAYna,QAAQnB,GAAY,GAEhE,OAAAob,IArGoB7S,EAuGpBphB,GAAeJ,QAANq0B,IxByjMNlS,yCAAyCtgB,UAAUie,uDAAuD,uDAAuDpD,uCAAuC,uCAAuCqY,wCAAwC,wCAAwCC,yCAAyC,2CAA2CC,sCAAsC,SAAS/1B,EAAQkB,EAAOJ,GyBrqMpd,GAAOk1B,GAAQh2B,EAAgB,iCAI/B,IAAOm1B,GAAKn1B,EAAgB,sCAG5B,IAAOi2B,GAAaj2B,EAAc,wCAElC,IAAOk2B,GAAMl2B,EAAgB,qCAC7B,IAAOm2B,GAAWn2B,EAAe,wCACjC,IAAOoK,GAAUpK,EAAe,uCAChC,IAAOo2B,GAAap2B,EAAc,0CAClC,IAAOq2B,GAAYr2B,EAAe,2CAElC,IAAMs2B,GAAI,WA0DT,QA1DKA,GA0DOC,EAAoBvc,EAAoB9B,GA1DrD,GAAA5N,GAAA/I,IA0DiC,IAAAyY,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAA9B,QAAA,GAAoB,CAApBA,EAAA,KAjC5C3W,KAAA6P,OAAgB,CAChB7P,MAAAqO,QAAiB,CAEjBrO,MAAAi1B,MAAe,CACfj1B,MAAAk1B,WAAoB,CACpBl1B,MAAAm1B,iBAA0B,CAC1Bn1B,MAAAo1B,iBAA0B,CAE1Bp1B,MAAAq1B,eAAyB,IACzBr1B,MAAAs1B,cAAwB,IAOxBt1B,MAAAu1B,aAAuB,GAAIb,EAmBlC10B,MAAKw1B,iCAAmC,SAAChpB,GAAqB,MAAAzD,GAAK0sB,wBAAwBjpB,GAC3FxM,MAAK01B,6BAA+B,SAAClpB,GAAsB,MAAAzD,GAAK4sB,oBAAoBnpB,GACpFxM,MAAK41B,2BAA6B,SAACppB,GAAwB,MAAAzD,GAAK8sB,kBAAkBrpB,GAClFxM,MAAK81B,0BAA4B,SAACtpB,GAAwB,MAAAzD,GAAKgtB,iBAAiBvpB,GAEhFxM,MAAKyY,MAAQA,GAAS,GAAImb,EAC1B5zB,MAAK2W,OAASA,GAAU,GAAIge,EAC5B30B,MAAKg1B,SAAWA,CAGhBgB,UAASC,KAAKC,MAAMC,OAAS,KAE7Bn2B,MAAKo2B,aAAeJ,SAASK,cAAc,MAC3Cr2B,MAAKo2B,aAAaF,MAAMpjB,SAAW,UAEnCkjB,UAASC,KAAKK,YAAYt2B,KAAKo2B,aAE/Bp2B,MAAKu2B,cAAgBzB,EAAa1D,aAClCpxB,MAAKu2B,cAAcC,aAAax2B,MAUzB+0B,EAAAx0B,UAAAk1B,wBAAR,SAAgCjpB,GAE/B,GAAIxM,KAAKy2B,SACRz2B,KAAKqP,QAAQmJ,UAAUke,iBAAiB12B,KAAKy2B,UAK/C91B,QAAAC,eAAWm0B,EAAAx0B,UAAA,UzBinMJM,IyBjnMP,WAEC,MAAOb,MAAK22B,UzBknMN51B,WAAY,KACZC,aAAc,MyBhnMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,UzBmnMJM,IyBnnMP,WAEC,MAAOb,MAAK42B,UzBonMN71B,WAAY,KACZC,aAAc,MyBlnMd+zB,GAAAx0B,UAAAs2B,eAAP,SAAsBlT,GAErB,MAAOA,GAAcrR,sBAAsBvC,gBAAgB/P,KAAK82B,UAAU92B,KAAK22B,SAAU32B,KAAK42B,SAAU,MAAO5zB,EAGzG+xB,GAAAx0B,UAAAw2B,eAAP,SAAsBpT,GAErB,MAAOA,GAAcrR,sBAAsBvC,gBAAgB/P,KAAK82B,UAAU92B,KAAK22B,SAAU32B,KAAK42B,SAAU,MAAO3zB,EAMhHtC,QAAAC,eAAWm0B,EAAAx0B,UAAA,ezBinMJM,IyBjnMP,WAEC,MAAOb,MAAKo2B,czBknMNr1B,WAAY,KACZC,aAAc,MyB9mMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,YzBonMJM,IyBpnMP,WAEC,MAAOb,MAAKg3B,YzBqnMNt0B,IyBlnMP,SAAoBC,GAEnB,GAAI3C,KAAKg3B,YAAcr0B,EACtB,MAED,IAAI3C,KAAKg3B,WAAY,CACpBh3B,KAAKg3B,WAAW/1B,SAChBjB,MAAKg3B,WAAW1pB,oBAAoBunB,EAAcoC,iBAAkBj3B,KAAK41B,2BACzE51B,MAAKg3B,WAAW1pB,oBAAoBunB,EAAcqC,gBAAiBl3B,KAAK81B,2BAGzE91B,KAAKg3B,WAAar0B,CAElB3C,MAAKg3B,WAAWxpB,iBAAiBqnB,EAAcoC,iBAAkBj3B,KAAK41B,2BACtE51B,MAAKg3B,WAAWxpB,iBAAiBqnB,EAAcqC,gBAAiBl3B,KAAK81B,0BAGrE91B,MAAKm3B,kBAAoBn3B,KAAKg3B,WAAWI,yBAEzC,IAAIp3B,KAAKy2B,SACRz2B,KAAKm3B,kBAAkBxgB,OAAS3W,KAAKy2B,QAGtCz2B,MAAKg3B,WAAWK,eAAkBr3B,KAAKm1B,kBAAoB,GAAM,KAAM,GACvEn1B,MAAKg3B,WAAWM,eAAkBt3B,KAAKm1B,kBAAoB,EAAK,KAAM,GACtEn1B,MAAKg3B,WAAWO,eAAiBv3B,KAAKm1B,iBAAmB,KAAM,GAC/Dn1B,MAAKg3B,WAAWQ,kBAAoBx3B,KAAKo1B,gBACzCp1B,MAAKg3B,WAAWzmB,MAAQvQ,KAAK6P,MAC7B7P,MAAKg3B,WAAW5oB,OAASpO,KAAKqO,OAC9BrO,MAAKg3B,WAAWS,aAAez3B,KAAK03B,ezB6mM9B32B,WAAY,KACZC,aAAc,MyBxmMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,gBzB8mMJM,IyB9mMP,WAEC,MAAOb,MAAK03B,ezB+mMNh1B,IyB5mMP,SAAwBC,GAEvB,GAAI3C,KAAK03B,eAAiB/0B,EACzB,MAED3C,MAAK03B,cAAgB/0B,CAErB,IAAI3C,KAAKg3B,WACRh3B,KAAKg3B,WAAWS,aAAez3B,KAAK03B,ezB2mM/B32B,WAAY,KACZC,aAAc,MyBtmMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,mBzB4mMJM,IyB5mMP,WAEC,MAAOb,MAAKm1B,kBzB6mMNzyB,IyB1mMP,SAA2BC,GAE1B,GAAI3C,KAAKm1B,kBAAoBxyB,EAC5B,MAED3C,MAAKm1B,iBAAmBxyB,CAExB3C,MAAKg3B,WAAWK,eAAkB10B,GAAS,GAAM,KAAM,GACvD3C,MAAKg3B,WAAWM,eAAkB30B,GAAS,EAAK,KAAM,GACtD3C,MAAKg3B,WAAWO,eAAiB50B,EAAQ,KAAM,KzBymMzC5B,WAAY,KACZC,aAAc,MyBnmMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,mBzB0mMJM,IyB1mMP,WAEC,MAAOb,MAAKo1B,kBzB+mMN1yB,IyBxmMP,SAA2BC,GAE1B,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI3C,KAAKo1B,kBAAoBzyB,EAC5B,MAED3C,MAAKg3B,WAAWQ,kBAAoBx3B,KAAKo1B,iBAAmBzyB,GzBumMtD5B,WAAY,KACZC,aAAc,MyBjmMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,UzBwmMJM,IyBxmMP,WAEC,MAAOb,MAAKy2B,UzB4mMN/zB,IyBtmMP,SAAkBC,GAEjB,GAAI3C,KAAKy2B,UAAY9zB,EACpB,MAED,IAAI3C,KAAKy2B,SACRz2B,KAAKy2B,SAASnpB,oBAAoBsnB,EAAY+C,mBAAoB33B,KAAK01B,6BAExE11B,MAAKy2B,SAAW9zB,CAEhB,IAAI3C,KAAKm3B,kBACRn3B,KAAKm3B,kBAAkBxgB,OAAS3W,KAAKy2B,QAEtC,IAAIz2B,KAAKqP,QACRrP,KAAKqP,QAAQmJ,UAAUke,iBAAiB12B,KAAKy2B,SAE9Cz2B,MAAKy2B,SAASjpB,iBAAiBonB,EAAY+C,mBAAoB33B,KAAK01B,6BACpE11B,MAAKs1B,cAAgB,IACrBt1B,MAAKq1B,eAAiB,MzBkmMhBt0B,WAAY,KACZC,aAAc,MyB5lMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,SzBmmMJM,IyBnmMP,WAEC,MAAOb,MAAKqP,SzBumMN3M,IyBjmMP,SAAiBC,GAEhB,GAAI3C,KAAKqP,SAAW1M,EACnB,MAED,IAAI3C,KAAKqP,QACRrP,KAAKqP,QAAQ/B,oBAAoBzE,EAAWwrB,kBAAmBr0B,KAAKw1B,iCAErEx1B,MAAKqP,QAAU1M,CAEf3C,MAAKqP,QAAQ7B,iBAAiB3E,EAAWwrB,kBAAmBr0B,KAAKw1B,iCAEjE,IAAIx1B,KAAKy2B,SACRz2B,KAAKqP,QAAQmJ,UAAUke,iBAAiB12B,KAAKy2B,WzB8lMxC11B,WAAY,KACZC,aAAc,MyBxlMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,azB+lMJM,IyB/lMP,WAEC,MAAOb,MAAKk1B,YzBgmMNn0B,WAAY,KACZC,aAAc,MyB3lMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,SzBimMJM,IyBjmMP,WAEC,MAAOb,MAAK6P,QzBkmMNnN,IyB/lMP,SAAiBC,GAEhB,GAAI3C,KAAK6P,QAAUlN,EAClB,MAED3C,MAAK6P,OAASlN,CACd3C,MAAK43B,aAAe53B,KAAK6P,OAAO7P,KAAKqO,OACrCrO,MAAKy2B,SAASoB,WAAWC,cAAgB93B,KAAK43B,YAC9C53B,MAAKg3B,WAAWzmB,MAAQ5N,CACxB3C,MAAKo2B,aAAaF,MAAM3lB,MAAQ5N,EAAQ,MzB+lMlC5B,WAAY,KACZC,aAAc,MyB1lMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,UzBgmMJM,IyBhmMP,WAEC,MAAOb,MAAKqO;EzBimMN3L,IyB9lMP,SAAkBC,GAEjB,GAAI3C,KAAKqO,SAAW1L,EACnB,MAED3C,MAAKqO,QAAU1L,CACf3C,MAAK43B,aAAe53B,KAAK6P,OAAO7P,KAAKqO,OACrCrO,MAAKy2B,SAASoB,WAAWC,cAAgB93B,KAAK43B,YAC9C53B,MAAKg3B,WAAW5oB,OAASzL,CACzB3C,MAAKo2B,aAAaF,MAAM9nB,OAASzL,EAAQ,MzB8lMnC5B,WAAY,KACZC,aAAc,MyBzlMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,ezB+lMJM,IyB/lMP,WAEC,MAAOb,MAAKu1B,czBgmMN7yB,IyB7lMP,SAAuBC,GAEtB,GAAI3C,KAAKu1B,cAAgB5yB,EACxB,MAED,IAAIA,GAAS,KACZ3C,KAAKu1B,aAAe,GAAIb,OAExB10B,MAAKu1B,aAAe5yB,GzB6lMf5B,WAAY,KACZC,aAAc,MyBxlMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,KzB8lMJM,IyB9lMP,WAEC,MAAOb,MAAKg3B,WAAWh0B,GzB+lMjBN,IyB5lMP,SAAaC,GAEZ,GAAI3C,KAAKg3B,WAAWh0B,GAAKL,EACxB,MAED3C,MAAKg3B,WAAWh0B,GAAKL,CACrB3C,MAAKo2B,aAAaF,MAAM1iB,KAAO7Q,EAAQ,MzB4lMjC5B,WAAY,KACZC,aAAc,MyBvlMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,KzB6lMJM,IyB7lMP,WAEC,MAAOb,MAAKg3B,WAAW/zB,GzB8lMjBP,IyB3lMP,SAAaC,GAEZ,GAAI3C,KAAKg3B,WAAW/zB,GAAKN,EACxB,MAED3C,MAAKg3B,WAAW/zB,GAAKN,CACrB3C,MAAKo2B,aAAaF,MAAMziB,IAAM9Q,EAAQ,MzB2lMhC5B,WAAY,KACZC,aAAc,MyBtlMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,WzB4lMJM,IyB5lMP,WAEC,MAAQb,MAAKo2B,aAAaF,MAAM6B,YAAc,WzB6lMxCr1B,IyB1lMP,SAAmBC,GAElB3C,KAAKo2B,aAAaF,MAAM6B,WAAap1B,EAAO,UAAY,UzB4lMlD5B,WAAY,KACZC,aAAc,MyBrlMrBL,QAAAC,eAAWm0B,EAAAx0B,UAAA,sBzB4lMJM,IyB5lMP,WAEC,MAAO,IzB8lMDE,WAAY,KACZC,aAAc,MyBxlMd+zB,GAAAx0B,UAAAy3B,OAAP,WAECh4B,KAAKi4B,aAGLj4B,MAAKy2B,SAASoB,WAAWC,cAAgB93B,KAAK43B,YAE9C,IAAI53B,KAAKs1B,cAAe,CACvBt1B,KAAKs1B,cAAgB,KACrBt1B,MAAKy2B,SAASoB,WAAWK,oBAAoBl4B,KAAKg3B,WAAWmB,YAAYn1B,EAAGhD,KAAKg3B,WAAWmB,YAAYl1B,EAAGjD,KAAKg3B,WAAWmB,YAAY5nB,MAAOvQ,KAAKg3B,WAAWmB,YAAY/pB,QAG3K,GAAIpO,KAAKq1B,eAAgB,CACxBr1B,KAAKq1B,eAAiB,KACtBr1B,MAAKy2B,SAASoB,WAAWO,iBAAiBp4B,KAAKg3B,WAAWqB,SAASr1B,EAAGhD,KAAKg3B,WAAWqB,SAASp1B,EAAGjD,KAAKg3B,WAAWqB,SAAS9nB,MAAOvQ,KAAKg3B,WAAWqB,SAASjqB,QAI5J,IAAKpO,KAAK03B,cAAe,CACxB,GAAI13B,KAAKs4B,gBAAkBt4B,KAAKo2B,cAAgBp2B,KAAKu2B,cAAcgC,cAAgBv4B,KAAKu2B,cAAciC,cACrGx4B,KAAKu2B,cAAckC,kBAAoBz4B,KAAK04B,YAAYC,iBAAiB34B,KAAK22B,SAAU32B,KAAK42B,SAAU52B,KAExGA,MAAKu2B,cAAcqC,gBAAgB54B,KAAKs4B,gBAMzCt4B,KAAKm3B,kBAAkBjc,OAGvBlb,MAAKqP,QAAQ6kB,mBAAmBl0B,KAAKm3B,kBAGrCn3B,MAAKg3B,WAAWgB,OAAOh4B,KAAKm3B,mBAMtBpC,GAAAx0B,UAAA03B,YAAP,WAEC,GAAIY,GAAcpE,GAElB,IAAIz0B,KAAKi1B,OAAS,EACjBj1B,KAAKi1B,MAAQ4D,CAEd74B,MAAKk1B,WAAa2D,EAAO74B,KAAKi1B,KAC9Bj1B,MAAKi1B,MAAQ4D,EAMP9D,GAAAx0B,UAAAU,QAAP,WAECjB,KAAKg3B,WAAW/1B,SAGhBjB,MAAKu2B,cAAcuC,eAAe94B,KAKlCA,MAAKu2B,cAAgB,IAGrBv2B,MAAKg3B,WAAa,IAClBh3B,MAAKm3B,kBAAoB,KAM1Bx2B,QAAAC,eAAWm0B,EAAAx0B,UAAA,oBzBykMJM,IyBzkMP,WAEC,MAAOb,MAAKm3B,mBzB0kMNp2B,WAAY,KACZC,aAAc,MyBrkMb+zB,GAAAx0B,UAAAo1B,oBAAR,SAA4BnpB,GAE3BxM,KAAKs1B,cAAgB,IACrBt1B,MAAKq1B,eAAiB,KAMfN,GAAAx0B,UAAAs1B,kBAAR,SAA0BrpB,GAEzBxM,KAAKq1B,eAAiB,KAMfN,GAAAx0B,UAAAw1B,iBAAR,SAAyBvpB,GAExBxM,KAAKs1B,cAAgB,KAGfP,GAAAx0B,UAAAw4B,QAAP,SAAeC,GAEd,GAAIh0B,GAAahF,KAAKy2B,SAASsC,QAAQC,EACvCh0B,GAAEhC,EAAIgC,EAAEhC,EAAEhD,KAAKg3B,WAAWqB,SAAS9nB,MAAM,EAAIvQ,KAAK6P,OAAO7P,KAAKy2B,SAASoB,WAAWoB,OAClFj0B,GAAE/B,EAAI+B,EAAE/B,EAAEjD,KAAKg3B,WAAWqB,SAASjqB,OAAO,EAAIpO,KAAKqO,QAAQrO,KAAKy2B,SAASoB,WAAWqB,OAEpF,OAAOl0B,GAGD+vB,GAAAx0B,UAAAu2B,UAAP,SAAiBqC,EAAWC,EAAWC,GAEtC,MAAOr5B,MAAKy2B,SAASK,UAAU,GAAGqC,EAAKn5B,KAAK6P,OAAO7P,KAAKy2B,SAASoB,WAAWoB,SAASj5B,KAAKg3B,WAAWqB,SAAS9nB,MAAO,GAAG6oB,EAAKp5B,KAAKqO,QAAQrO,KAAKy2B,SAASoB,WAAWqB,SAASl5B,KAAKg3B,WAAWqB,SAASjqB,OAAQirB,GAIvMtE,GAAAx0B,UAAA+4B,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,MAAOr5B,MAAKy2B,SAAS6C,QAAQH,EAAG,EAAIn5B,KAAK6P,QAAQ7P,KAAK6P,QAASupB,EAAG,EAAIp5B,KAAKqO,SAASrO,KAAKqO,QAASgrB,GAiC5FtE,GAAAx0B,UAAAg5B,eAAP,WAEC,IAAKv5B,KAAK03B,cAAe,CACxB,GAAI13B,KAAKo2B,cAAgBp2B,KAAKu2B,cAAcgC,YAC3Cv4B,KAAKu2B,cAAckC,kBAAoBz4B,KAAK04B,YAAYC,iBAAiB34B,KAAK22B,SAAU32B,KAAK42B,SAAU52B,UAClG,CACN,GAAIw5B,GAAqCx5B,KAAK04B,YAAYC,iBAAiB34B,KAAK22B,SAAU32B,KAAK42B,SAAU52B,KAEzG,IAAIA,KAAKy5B,aAAez5B,KAAKu2B,cAAckC,mBAAqB,MAAQe,EAAgBE,iBAAmB15B,KAAKu2B,cAAckC,kBAAkBiB,iBAC/I15B,KAAKu2B,cAAckC,kBAAoBe,GAG3C,OAAAzE,KAEAp1B,GAAcJ,QAALw1B,IzB6iMN4E,iCAAiCv4B,UAAUqyB,sCAAsC,sCAAsCmG,qCAAqC,qCAAqCC,wCAAwC,wCAAwCC,0CAA0C,0CAA0C7d,uCAAuC,uCAAuC8d,2CAA2C,2CAA2CC,wCAAwC,0CAA0CC,iDAAiD,SAASx7B,EAAQkB,EAAOJ,G0B1oNvqB,GAAOgJ,GAAmB9J,EAAY,6CAItC,IAAMy7B,GAAc,WAMnB,QANKA,GAMOC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAHLn6B,KAAAo6B,aAAuB,IAK7Bp6B,MAAKm6B,aAAeA,EAGdD,EAAA35B,UAAA85B,cAAP,WAEC,GAAIr6B,KAAKs6B,gBAAkBt6B,KAAKo6B,aAAc,CAC7Cp6B,KAAKs6B,eAAehiB,uBAItB3X,QAAAC,eAAWs5B,EAAA35B,UAAA,gB1BkoNJM,I0BloNP,WAEC,MAAOb,MAAKs6B,gB1BmoNN53B,I0BhoNP,SAAwBoL,GAEvB,GAAI9N,KAAKs6B,gBAAkBxsB,EAAK,CAC/B,OAGD,GAAI9N,KAAKs6B,gBAAkBt6B,KAAKo6B,aAAc,CAC7Cp6B,KAAKs6B,eAAevgB,aAAe,KAEpC/Z,KAAKs6B,eAAiBxsB,CAEtB,IAAI9N,KAAKs6B,gBAAkBt6B,KAAKo6B,aAAc,CAC7Cp6B,KAAKs6B,eAAevgB,aAAe/Z,KAEpCA,KAAKq6B,iB1B+nNCt5B,WAAY,KACZC,aAAc,M0B7nNrBL,QAAAC,eAAWs5B,EAAA35B,UAAA,c1BgoNJM,I0BhoNP,WAEC,MAAOb,MAAKo6B,c1BioNN13B,I0B9nNP,SAAsBoL,GAErB,GAAI9N,KAAKo6B,cAAgBtsB,EAAK,CAC7B,OAED9N,KAAKo6B,aAAetsB,CAEpB,IAAI9N,KAAKs6B,eAAgB,CACxB,GAAIt6B,KAAKs6B,eAAgB,CACxBt6B,KAAKs6B,eAAevgB,aAAe/Z,SAC7B,CACNA,KAAKs6B,eAAevgB,aAAe,Q1BioN/BhZ,WAAY,KACZC,aAAc,M0B7nNdk5B,GAAA35B,UAAAyZ,OAAP,SAAcugB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,KAAM,IAAIhyB,GAEZ,OAAA2xB,KAEwBv6B,GAAAJ,QAAf26B,I1BioNN9e,6CAA6Cha,YAAYo5B,wDAAwD,SAAS/7B,EAAQkB,EAAOJ,GAC5I,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2B7sNtB,IAAO6H,GAAUzJ,EAAc,kCAE/B,IAAOy7B,GAAcz7B,EAAa,gD3BotNlC,I2B5sNMg8B,GAAqB,SAAA/5B,GAASX,EAA9B06B,EAAqB/5B,EA6I1B,SA7IK+5B,GA6ION,EAAmCO,EAAqBC,EAAuBC,EAA2BC,EAA0BC,EAAkBC,GAAtJ,GAAAZ,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAO,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,MAEjKr6B,EAAAlB,KAAAQ,KAAMm6B,EA7IAn6B,MAAAg7B,kBAA2B,CAC1Bh7B,MAAAi7B,mBAA4B,EAE5Bj7B,MAAAk7B,UAAmB,CACnBl7B,MAAAm7B,WAAoB,EACpBn7B,MAAAo7B,eAAwB,EACxBp7B,MAAAq7B,cAAuB,EACvBr7B,MAAAs7B,OAAgB,CAChBt7B,MAAAu7B,eAAwB,CACxBv7B,MAAAw7B,iBAA0B,CAC1Bx7B,MAAAy7B,cAAwB,KAEzBz7B,MAAA07B,IAAc,KAmIpB17B,MAAK06B,SAAWA,CAChB16B,MAAK26B,UAAYA,CACjB36B,MAAK46B,aAAeA,CACpB56B,MAAK66B,aAAeA,CACpB76B,MAAK86B,MAAQA,CACb96B,MAAK+6B,aAAeA,CAGpB/6B,MAAKg7B,kBAAoBh7B,KAAKk7B,SAC9Bl7B,MAAKi7B,mBAAqBj7B,KAAKm7B,WAlIhCx6B,OAAAC,eAAW65B,EAAAl6B,UAAA,S3BguNJM,I2BhuNP,WAEC,MAAOb,MAAKs7B,Q3BiuNN54B,I2B9tNP,SAAiBoL,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAI9N,KAAKs7B,QAAUxtB,EAClB,MAED9N,MAAKs7B,OAASxtB,CAEd9N,MAAKq6B,iB3B4tNCt5B,WAAY,KACZC,aAAc,M2BvtNrBL,QAAAC,eAAW65B,EAAAl6B,UAAA,Y3B6tNJM,I2B7tNP,WAEC,MAAOb,MAAKk7B,W3B8tNNx4B,I2B3tNP,SAAoBoL,GAEnB,GAAI9N,KAAKk7B,WAAaptB,EACrB,MAED9N,MAAKk7B,UAAYptB,CAEjB9N,MAAKq6B,iB3B0tNCt5B,WAAY,KACZC,aAAc,M2BrtNrBL,QAAAC,eAAW65B,EAAAl6B,UAAA,a3B2tNJM,I2B3tNP,WAEC,MAAOb,MAAKm7B,Y3B4tNNz4B,I2BztNP,SAAqBoL,GAEpBA,EAAM2J,KAAKgX,IAAIzuB,KAAKo7B,cAAe3jB,KAAK+W,IAAIxuB,KAAKq7B,cAAevtB,GAEhE,IAAI9N,KAAKm7B,YAAcrtB,EACtB,MAED9N,MAAKm7B,WAAartB,CAElB9N,MAAKq6B,iB3ButNCt5B,WAAY,KACZC,aAAc,M2BhtNrBL,QAAAC,eAAW65B,EAAAl6B,UAAA,gB3BwtNJM,I2BxtNP,WAEC,MAAOb,MAAKo7B,e3BytNN14B,I2BttNP,SAAwBoL,GAEvB,GAAI9N,KAAKo7B,eAAiBttB,EACzB,MAED9N,MAAKo7B,cAAgBttB,CAErB9N,MAAK26B,UAAYljB,KAAKgX,IAAIzuB,KAAKo7B,cAAe3jB,KAAK+W,IAAIxuB,KAAKq7B,cAAer7B,KAAKm7B,c3BqtN1Ep6B,WAAY,KACZC,aAAc,M2B9sNrBL,QAAAC,eAAW65B,EAAAl6B,UAAA,gB3BstNJM,I2BttNP,WAEC,MAAOb,MAAKq7B,e3ButNN34B,I2BptNP,SAAwBoL,GAEvB,GAAI9N,KAAKq7B,eAAiBvtB,EACzB,MAED9N,MAAKq7B,cAAgBvtB,CAErB9N,MAAK26B,UAAYljB,KAAKgX,IAAIzuB,KAAKo7B,cAAe3jB,KAAK+W,IAAIxuB,KAAKq7B,cAAer7B,KAAKm7B,c3BmtN1Ep6B,WAAY,KACZC,aAAc,M2B7sNrBL,QAAAC,eAAW65B,EAAAl6B,UAAA,gB3BmtNJM,I2BntNP,WAEC,MAAOb,MAAKy7B,e3BotNN/4B,I2BjtNP,SAAwBoL,GAEvB,GAAI9N,KAAKy7B,eAAiB3tB,EACzB,MAED9N,MAAKy7B,cAAgB3tB,CAErB9N,MAAKq6B,iB3BgtNCt5B,WAAY,KACZC,aAAc,M2BhrNdy5B,GAAAl6B,UAAAyZ,OAAP,SAAcugB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIv6B,KAAKm7B,YAAcn7B,KAAKi7B,oBAAsBj7B,KAAKk7B,WAAal7B,KAAKg7B,kBAAmB,CAE3Fh7B,KAAKq6B,eAEL,IAAIr6B,KAAKy7B,cAAe,CACvB,GAAIz7B,KAAKk7B,UAAY,EAAG,CACvBl7B,KAAKg7B,mBAAqBh7B,KAAKk7B,UAAU,IAAM,IAAMl7B,KAAKk7B,SAC1Dl7B,MAAKk7B,UAAYl7B,KAAKk7B,UAAU,IAAM,QAChC,CACNl7B,KAAKg7B,mBAAqBh7B,KAAKk7B,UAAU,IAAMl7B,KAAKk7B,SACpDl7B,MAAKk7B,UAAYl7B,KAAKk7B,UAAU,IAGjC,MAAOl7B,KAAKk7B,UAAYl7B,KAAKg7B,mBAAqB,IACjDh7B,KAAKg7B,mBAAqB,GAE3B,OAAOh7B,KAAKk7B,UAAYl7B,KAAKg7B,kBAAoB,IAChDh7B,KAAKg7B,mBAAqB,IAG5B,GAAIT,EAAa,CAChBv6B,KAAKi7B,qBAAuBj7B,KAAKm7B,WAAan7B,KAAKi7B,qBAAqBj7B,KAAK86B,MAAQ,EACrF96B,MAAKg7B,oBAAsBh7B,KAAKk7B,UAAYl7B,KAAKg7B,oBAAoBh7B,KAAK86B,MAAQ,OAC5E,CACN96B,KAAKi7B,mBAAqBj7B,KAAKm7B,UAC/Bn7B,MAAKg7B,kBAAoBh7B,KAAKk7B,UAI/B,GAAKzjB,KAAKqT,IAAI9qB,KAAK26B,UAAY36B,KAAKi7B,oBAAsB,KAAUxjB,KAAKqT,IAAI9qB,KAAKk7B,UAAYl7B,KAAKg7B,mBAAqB,IAAO,CAC9Hh7B,KAAKi7B,mBAAqBj7B,KAAKm7B,UAC/Bn7B,MAAKg7B,kBAAoBh7B,KAAKk7B,WAIhCl7B,KAAKm6B,aAAazqB,UAAY1P,KAAKi7B,kBACnCj7B,MAAKm6B,aAAaxqB,UAAY3P,KAAKg7B,iBAEnC,IAAIh7B,KAAKu7B,eAAgB,CACxB,GAAIv7B,KAAK07B,IAAK,CACb17B,KAAKm6B,aAAazzB,UAAUie,YAAY3kB,KAAKu7B,oBACvC,CACNv7B,KAAKm6B,aAAan3B,GAAKhD,KAAKu7B,eAAe9jB,KAAKkkB,IAAI37B,KAAKk7B,UAAUhzB,EAAWgG,mBAC9ElO,MAAKm6B,aAAaj3B,GAAKlD,KAAKu7B,eAAe9jB,KAAKmkB,IAAI57B,KAAKk7B,UAAUhzB,EAAWgG,oBAE/ElO,KAAKu7B,eAAiB,EAGvB,GAAIv7B,KAAKw7B,iBAAkB,CAC1Bx7B,KAAKm6B,aAAazzB,UAAUoe,UAAU9kB,KAAKw7B,iBAC3Cx7B,MAAKw7B,iBAAmB,GAKnBf,GAAAl6B,UAAAs7B,cAAP,SAAqB/tB,GAEpB,GAAIA,GAAO,EACV,MAED9N,MAAKu7B,gBAAkBztB,CAEvB9N,MAAKq6B,gBAGCI,GAAAl6B,UAAAu7B,gBAAP,SAAuBhuB,GAEtB,GAAIA,GAAO,EACV,MAED9N,MAAKw7B,kBAAoB1tB,CAEzB9N,MAAKq6B,gBAGP,OAAAI,IArPoCP,EAuPLv6B,GAAAJ,QAAtBk7B,I3B+qNNlf,kCAAkCna,UAAU64B,gDAAgD,kDAAkD8B,mDAAmD,SAASt9B,EAAQkB,EAAOJ,GAC5N,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Bp7NtB,IAAO27B,GAAev9B,EAAa,iD5B67NnC,I4Br7NMw9B,GAAgB,SAAAv7B,GAASX,EAAzBk8B,EAAgBv7B,EAErB,SAFKu7B,GAEO9B,EAAmC+B,EAAmCvB,EAAuBnjB,GAA7F,GAAA2iB,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA+B,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAvB,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAnjB,QAAA,GAAqB,CAArBA,EAAA,IAExG9W,EAAAlB,KAAAQ,KAAMm6B,EAAc+B,EAAc,EAAGvB,EAAWnjB,GAG1CykB,EAAA17B,UAAAyZ,OAAP,SAAcugB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEbA,EAAcA,CAEd,KAAKv6B,KAAKk8B,aACT,MAEDl8B,MAAK06B,SAAW16B,KAAKm8B,eAAexsB,UAAY,GAChDjP,GAAAH,UAAMyZ,OAAMxa,KAAAQ,MAEd,OAAAi8B,IAjB+BD,EAmBLr8B,GAAAJ,QAAjB08B,I5Bu7NNG,iDAAiD,mDAAmDA,kDAAkD,SAAS39B,EAAQkB,EAAOJ,GACjL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Bx9NtB,IAAO6H,GAAUzJ,EAAc,kCAC/B,IAAO6J,GAAQ7J,EAAe,gCAG9B,IAAO49B,GAAgB59B,EAAa,kD7B89NpC,I6Bv9NMu9B,GAAe,SAAAt7B,GAASX,EAAxBi8B,EAAet7B,EA6NpB,SA7NKs7B,GA6NO7B,EAAmC+B,EAAmCxB,EAAqBC,EAAuBnjB,EAAwBojB,EAA2BC,EAA0ByB,EAA2BC,EAA2BzB,EAAkB0B,EAAoBzB,GAA3R,GAAAZ,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA+B,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAxB,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAnjB,QAAA,GAAsB,CAAtBA,EAAA,IAAwB,GAAAojB,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAyB,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAzB,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA0B,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAAzB,QAAA,GAA4B,CAA5BA,EAAA,MAEtSr6B,EAAAlB,KAAAQ,KAAMm6B,EAAc+B,EA7Ndl8B,MAAAg7B,kBAA2B,CAC3Bh7B,MAAAi7B,mBAA4B,EAE3Bj7B,MAAAk7B,UAAmB,CACnBl7B,MAAAm7B,WAAoB,EACpBn7B,MAAAy8B,UAAmB,GACnBz8B,MAAA08B,cAAuBC,QACvB38B,MAAA48B,aAAsBD,QACtB38B,MAAAo7B,eAAwB,EACxBp7B,MAAAq7B,cAAuB,EACvBr7B,MAAAs7B,OAAgB,CAChBt7B,MAAA68B,SAAkB,CAClB78B,MAAAy7B,cAAwB,KACxBz7B,MAAA88B,QAAmB,GAAIx0B,EAkN9BtI,MAAKwX,SAAWA,CAChBxX,MAAK06B,SAAWA,CAChB16B,MAAK26B,UAAYA,CACjB36B,MAAKs8B,YAAgBA,GAAe,KAAQA,GAAeK,QAC3D38B,MAAKu8B,YAAgBA,GAAe,KAAQA,EAAcI,QAC1D38B,MAAK46B,aAAeA,CACpB56B,MAAK66B,aAAeA,CACpB76B,MAAK86B,MAAQA,CACb96B,MAAKw8B,QAAUA,CACfx8B,MAAK+6B,aAAeA,CAGpB/6B,MAAKg7B,kBAAoBh7B,KAAKk7B,SAC9Bl7B,MAAKi7B,mBAAqBj7B,KAAKm7B,WArNhCx6B,OAAAC,eAAWo7B,EAAAz7B,UAAA,S7Bq/NJM,I6Br/NP,WAEC,MAAOb,MAAKs7B,Q7Bs/NN54B,I6Bn/NP,SAAiBoL,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAI9N,KAAKs7B,QAAUxtB,EAClB,MAED9N,MAAKs7B,OAASxtB,CAEd9N,MAAKq6B,iB7Bi/NCt5B,WAAY,KACZC,aAAc,M6B5+NrBL,QAAAC,eAAWo7B,EAAAz7B,UAAA,Y7Bk/NJM,I6Bl/NP,WAEC,MAAOb,MAAKk7B,W7Bm/NNx4B,I6Bh/NP,SAAoBoL,GAEnBA,EAAM2J,KAAKgX,IAAIzuB,KAAK08B,aAAcjlB,KAAK+W,IAAIxuB,KAAK48B,aAAc9uB,GAE9D,IAAI9N,KAAKk7B,WAAaptB,EACrB,MAED9N,MAAKk7B,UAAYptB,CAEjB9N,MAAKq6B,iB7B8+NCt5B,WAAY,KACZC,aAAc,M6Bz+NrBL,QAAAC,eAAWo7B,EAAAz7B,UAAA,a7B++NJM,I6B/+NP,WAEC,MAAOb,MAAKm7B,Y7Bg/NNz4B,I6B7+NP,SAAqBoL,GAEpBA,EAAM2J,KAAKgX,IAAIzuB,KAAKo7B,cAAe3jB,KAAK+W,IAAIxuB,KAAKq7B,cAAevtB,GAEhE,IAAI9N,KAAKm7B,YAAcrtB,EACtB,MAED9N,MAAKm7B,WAAartB,CAElB9N,MAAKq6B,iB7B2+NCt5B,WAAY,KACZC,aAAc,M6Bt+NrBL,QAAAC,eAAWo7B,EAAAz7B,UAAA,Y7B4+NJM,I6B5+NP,WAEC,MAAOb,MAAKy8B,W7B6+NN/5B,I6B1+NP,SAAoBoL,GAEnB,GAAI9N,KAAKy8B,WAAa3uB,EACrB,MAED9N,MAAKy8B,UAAY3uB,CAEjB9N,MAAKq6B,iB7By+NCt5B,WAAY,KACZC,aAAc,M6Bl+NrBL,QAAAC,eAAWo7B,EAAAz7B,UAAA,e7B0+NJM,I6B1+NP,WAEC,MAAOb,MAAK08B,c7B2+NNh6B,I6Bx+NP,SAAuBoL,GAEtB,GAAI9N,KAAK08B,cAAgB5uB,EACxB,MAED9N,MAAK08B,aAAe5uB,CAEpB9N,MAAK06B,SAAWjjB,KAAKgX,IAAIzuB,KAAK08B,aAAcjlB,KAAK+W,IAAIxuB,KAAK48B,aAAc58B,KAAKk7B,a7Bu+NvEn6B,WAAY,KACZC,aAAc,M6Bh+NrBL,QAAAC,eAAWo7B,EAAAz7B,UAAA,e7Bw+NJM,I6Bx+NP,WAEC,MAAOb,MAAK48B,c7By+NNl6B,I6Bt+NP,SAAuBoL,GAEtB,GAAI9N,KAAK48B,cAAgB9uB,EACxB,MAED9N,MAAK48B,aAAe9uB,CAEpB9N,MAAK06B,SAAWjjB,KAAKgX,IAAIzuB,KAAK08B,aAAcjlB,KAAK+W,IAAIxuB,KAAK48B,aAAc58B,KAAKk7B,a7Bq+NvEn6B,WAAY,KACZC,aAAc,M6B99NrBL,QAAAC,eAAWo7B,EAAAz7B,UAAA,gB7Bs+NJM,I6Bt+NP,WAEC,MAAOb,MAAKo7B,e7Bu+NN14B,I6Bp+NP,SAAwBoL,GAEvB,GAAI9N,KAAKo7B,eAAiBttB,EACzB,MAED9N,MAAKo7B,cAAgBttB,CAErB9N,MAAK26B,UAAYljB,KAAKgX,IAAIzuB,KAAKo7B,cAAe3jB,KAAK+W,IAAIxuB,KAAKq7B,cAAer7B,KAAKm7B,c7Bm+N1Ep6B,WAAY,KACZC,aAAc,M6B59NrBL,QAAAC,eAAWo7B,EAAAz7B,UAAA,gB7Bo+NJM,I6Bp+NP,WAEC,MAAOb,MAAKq7B,e7Bq+NN34B,I6Bl+NP,SAAwBoL,GAEvB,GAAI9N,KAAKq7B,eAAiBvtB,EACzB,MAED9N,MAAKq7B,cAAgBvtB,CAErB9N,MAAK26B,UAAYljB,KAAKgX,IAAIzuB,KAAKo7B,cAAe3jB,KAAK+W,IAAIxuB,KAAKq7B,cAAer7B,KAAKm7B,c7Bi+N1Ep6B,WAAY,KACZC,aAAc,M6B19NrBL,QAAAC,eAAWo7B,EAAAz7B,UAAA,W7Bk+NJM,I6Bl+NP,WAEC,MAAOb,MAAK68B,U7Bm+NNn6B,I6Bh+NP,SAAmBoL,GAElB,GAAI9N,KAAK68B,UAAY/uB,EACpB,MAED9N,MAAK68B,SAAW/uB,CAEhB9N,MAAKq6B,iB7B+9NCt5B,WAAY,KACZC,aAAc,M6B19NrBL,QAAAC,eAAWo7B,EAAAz7B,UAAA,gB7Bg+NJM,I6Bh+NP,WAEC,MAAOb,MAAKy7B,e7Bi+NN/4B,I6B99NP,SAAwBoL,GAEvB,GAAI9N,KAAKy7B,eAAiB3tB,EACzB,MAED9N,MAAKy7B,cAAgB3tB,CAErB9N,MAAKq6B,iB7B69NCt5B,WAAY,KACZC,aAAc,M6Bz7Ndg7B,GAAAz7B,UAAAyZ,OAAP,SAAcugB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIv6B,KAAKm7B,YAAcn7B,KAAKi7B,oBAAsBj7B,KAAKk7B,WAAal7B,KAAKg7B,kBAAmB,CAE3Fh7B,KAAKq6B,eAEL,IAAIr6B,KAAKy7B,cAAe,CACvB,GAAIz7B,KAAKk7B,UAAY,EAAG,CACvBl7B,KAAKg7B,mBAAqBh7B,KAAKk7B,UAAU,IAAM,IAAMl7B,KAAKk7B,SAC1Dl7B,MAAKk7B,UAAYl7B,KAAKk7B,UAAU,IAAM,QAChC,CACNl7B,KAAKg7B,mBAAqBh7B,KAAKk7B,UAAU,IAAMl7B,KAAKk7B,SACpDl7B,MAAKk7B,UAAYl7B,KAAKk7B,UAAU,IAGjC,MAAOl7B,KAAKk7B,UAAYl7B,KAAKg7B,mBAAqB,IACjDh7B,KAAKg7B,mBAAqB,GAE3B,OAAOh7B,KAAKk7B,UAAYl7B,KAAKg7B,kBAAoB,IAChDh7B,KAAKg7B,mBAAqB,IAG5B,GAAIT,EAAa,CAChBv6B,KAAKi7B,qBAAuBj7B,KAAKm7B,WAAan7B,KAAKi7B,qBAAqBj7B,KAAK86B,MAAQ,EACrF96B,MAAKg7B,oBAAsBh7B,KAAKk7B,UAAYl7B,KAAKg7B,oBAAoBh7B,KAAK86B,MAAQ,OAC5E,CACN96B,KAAKg7B,kBAAoBh7B,KAAKk7B,SAC9Bl7B,MAAKi7B,mBAAqBj7B,KAAKm7B,WAIhC,GAAK1jB,KAAKqT,IAAI9qB,KAAK26B,UAAY36B,KAAKi7B,oBAAsB,KAAUxjB,KAAKqT,IAAI9qB,KAAKk7B,UAAYl7B,KAAKg7B,mBAAqB,IAAO,CAC9Hh7B,KAAKi7B,mBAAqBj7B,KAAKm7B,UAC/Bn7B,MAAKg7B,kBAAoBh7B,KAAKk7B,WAIhC,GAAItoB,GAAgB5S,KAAiB,aAAGA,KAAKk8B,aAAax1B,UAAUoM,SAAY9S,KAAmB,eAAGA,KAAK+8B,eAAiB/8B,KAAKg9B,QACjIh9B,MAAKm6B,aAAan3B,EAAI4P,EAAI5P,EAAIhD,KAAKwX,SAASC,KAAKkkB,IAAI37B,KAAKg7B,kBAAkB9yB,EAAWgG,oBAAoBuJ,KAAKmkB,IAAI57B,KAAKi7B,mBAAmB/yB,EAAWgG,mBACvJlO,MAAKm6B,aAAal3B,EAAI2P,EAAI3P,EAAIjD,KAAKwX,SAASC,KAAKkkB,IAAI37B,KAAKi7B,mBAAmB/yB,EAAWgG,oBAAoBlO,KAAKw8B,OACjHx8B,MAAKm6B,aAAaj3B,EAAI0P,EAAI1P,EAAIlD,KAAKwX,SAASC,KAAKmkB,IAAI57B,KAAKg7B,kBAAkB9yB,EAAWgG,oBAAoBuJ,KAAKmkB,IAAI57B,KAAKi7B,mBAAmB/yB,EAAWgG,mBAEvJlO,MAAK88B,QAAQ95B,GAAKyU,KAAKkkB,IAAI37B,KAAKg7B,kBAAkB9yB,EAAWgG,oBAAoBuJ,KAAKkkB,IAAI37B,KAAKi7B,mBAAmB/yB,EAAWgG,mBAC7HlO,MAAK88B,QAAQ75B,EAAIwU,KAAKmkB,IAAI57B,KAAKi7B,mBAAmB/yB,EAAWgG,mBAC7DlO,MAAK88B,QAAQ55B,GAAKuU,KAAKmkB,IAAI57B,KAAKg7B,kBAAkB9yB,EAAWgG,oBAAoBuJ,KAAKkkB,IAAI37B,KAAKi7B,mBAAmB/yB,EAAWgG,mBAE7H,IAAIlO,KAAKs6B,eAAgB,CACxB,GAAIt6B,KAAKi9B,iBACRj9B,KAAKs6B,eAAeplB,OAAOlV,KAAKi9B,iBAAkBj9B,KAAK88B,aACnD,IAAI98B,KAAKm8B,eACbn8B,KAAKs6B,eAAeplB,OAAOlV,KAAKm8B,eAAe1jB,MAAOzY,KAAKm8B,eAAerlB,cAAgB9W,KAAKm8B,eAAez1B,UAAUoM,SAAU9S,KAAK88B,UAG3I,OAAAd,IAjT8BK,EAmT9B18B,GAAyBJ,QAAhBy8B,I7Bi8NNzgB,kCAAkCna,UAAUwa,gCAAgCxa,UAAU87B,kDAAkD,oDAAoDA,mDAAmD,SAASz+B,EAAQkB,EAAOJ,GAC1Q,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8BpwOtB,IAAOiI,GAAQ7J,EAAe,gCAG9B,IAAOy7B,GAAcz7B,EAAa,gDAClC,IAAOmK,GAAkBnK,EAAY,+CAErC,IAAM49B,GAAgB,SAAA37B,GAASX,EAAzBs8B,EAAgB37B,EAQrB,SARK27B,GAQOlC,EAAmC+B,GARhD,GAAAnzB,GAAA/I,IAQa,IAAAm6B,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA+B,QAAA,GAAiC,CAAjCA,EAAA,KAE9Cx7B,EAAAlB,KAAAQ,KAAMm6B,EANAn6B,MAAAg9B,SAAoB,GAAI10B,GAAS,EAAK,EAAK,EAQjDtI,MAAKm9B,+BAAiC,SAAC3wB,GAA6B,MAAAzD,GAAKq0B,sBAAsB5wB,GAE/F,IAAI0vB,EACHl8B,KAAKk8B,aAAeA,MAEpBl8B,MAAK+8B,eAAiB,GAAIz0B,GAG5B3H,OAAAC,eAAWy7B,EAAA97B,UAAA,kB9B8vOJM,I8B9vOP,WAEC,MAAOb,MAAKi9B,kB9B+vONv6B,I8B5vOP,SAA0BoL,GAEzB,GAAI9N,KAAKm8B,eAAgB,CACxBn8B,KAAKm8B,eAAe7uB,oBAAoB1E,EAAmByI,uBAAwBrR,KAAKm9B,+BACxFn9B,MAAKm8B,eAAiB,KAGvBn8B,KAAKi9B,iBAAmBnvB,CACxB9N,MAAKq6B,iB9B4vOCt5B,WAAY,KACZC,aAAc,M8B1vOrBL,QAAAC,eAAWy7B,EAAA97B,UAAA,gB9B6vOJM,I8B7vOP,WAEC,MAAOb,MAAKm8B,gB9B8vONz5B,I8B3vOP,SAAwBoL,GAEvB,GAAI9N,KAAKi9B,iBACRj9B,KAAKi9B,iBAAmB,IAEzB,IAAIj9B,KAAKm8B,gBAAkBruB,EAC1B,MAED,IAAI9N,KAAKm8B,eACRn8B,KAAKm8B,eAAe7uB,oBAAoB1E,EAAmByI,uBAAwBrR,KAAKm9B,+BAEzFn9B,MAAKm8B,eAAiBruB,CAEtB,IAAI9N,KAAKm8B,eACRn8B,KAAKm8B,eAAe3uB,iBAAiB5E,EAAmByI,uBAAwBrR,KAAKm9B,+BAEtFn9B,MAAKq6B,iB9BuvOCt5B,WAAY,KACZC,aAAc,M8BpvOdq7B,GAAA97B,UAAAyZ,OAAP,SAAcugB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIv6B,KAAKs6B,eAAgB,CACxB,GAAIt6B,KAAKi9B,iBACRj9B,KAAKs6B,eAAeplB,OAAOlV,KAAKi9B,sBAC5B,IAAIj9B,KAAKm8B,eACbn8B,KAAKs6B,eAAeplB,OAAOlV,KAAKm8B,eAAe1jB,MAAOzY,KAAKm8B,eAAerlB,cAAgB9W,KAAKm8B,eAAez1B,UAAUoM,WAInHupB,GAAA97B,UAAA68B,sBAAR,SAA8B5wB,GAE7BxM,KAAKq6B,gBAEP,OAAAgC,IA3E+BnC,EA6ELv6B,GAAAJ,QAAjB88B,I9BuvONzgB,gCAAgCxa,UAAU64B,gDAAgD,gDAAgDje,+CAA+C,iDAAiDqhB,mDAAmD,SAAS5+B,EAAQkB,EAAOJ,GACxT,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+B/0OtB,IAAOiI,GAAQ7J,EAAe,gCAG9B,IAAO49B,GAAgB59B,EAAa,kD/Bq1OpC,I+B90OM6+B,GAAgB,SAAA58B,GAASX,EAAzBu9B,EAAgB58B,EA+BrB,SA/BK48B,GA+BOnD,EAAmC+B,EAAmCqB,EAAsBC,EAAkBC,GAA9G,GAAAtD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAA+B,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAqB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAEzH/8B,EAAAlB,KAAAQ,KAAMm6B,EAAc+B,EAJdl8B,MAAA09B,eAA0B,GAAIp1B,GAAS,EAAG,KAAM,IAMtDtI,MAAKu9B,UAAYA,CACjBv9B,MAAKy9B,QAAUA,CACfz9B,MAAKw9B,KAAOA,CAEZx9B,MAAK29B,UAAY,GAAIr1B,EACrBtI,MAAK49B,IAAM,GAAIt1B,EACftI,MAAK69B,SAAW,GAAIv1B,EACpBtI,MAAK89B,OAAS,GAAIx1B,EAClBtI,MAAK+9B,cAAgB,GAAIz1B,EACzBtI,MAAKg+B,iBAAmB,GAAI11B,GAItBg1B,EAAA/8B,UAAAyZ,OAAP,SAAcugB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI0D,EAEJ,KAAKj+B,KAAKm8B,iBAAmBn8B,KAAKs6B,eACjC,MAED2D,GAAOj+B,KAAKm8B,eAAez1B,UAAUukB,SAASiT,qBAAqBl+B,KAAK09B,eACxE19B,MAAKg+B,iBAAiBh7B,EAAIhD,KAAKm8B,eAAen5B,EAAIi7B,EAAKj7B,CACvDhD,MAAKg+B,iBAAiB/6B,EAAIjD,KAAKm8B,eAAel5B,EAAIg7B,EAAKh7B,CACvDjD,MAAKg+B,iBAAiB96B,EAAIlD,KAAKm8B,eAAej5B,EAAI+6B,EAAK/6B,CAEvDlD,MAAK69B,SAAW79B,KAAKs6B,eAAe5zB,UAAUoM,SAASqrB,IAAIn+B,KAAKg+B,iBAChEh+B,MAAK69B,SAASO,SAASp+B,KAAKu9B,UAE5Bv9B,MAAK49B,IAAIpvB,SAASxO,KAAK29B,UACvB39B,MAAK49B,IAAIQ,QAAQp+B,KAAKy9B,QAEtBz9B,MAAK89B,OAAO96B,EAAIhD,KAAK69B,SAAS76B,EAAIhD,KAAK49B,IAAI56B,CAC3ChD,MAAK89B,OAAO76B,EAAIjD,KAAK69B,SAAS56B,EAAIjD,KAAK49B,IAAI36B,CAC3CjD,MAAK89B,OAAO56B,EAAIlD,KAAK69B,SAAS36B,EAAIlD,KAAK49B,IAAI16B,CAE3ClD,MAAK+9B,cAAcvvB,SAASxO,KAAK89B,OACjC99B,MAAK+9B,cAAcK,QAAQ,EAAEp+B,KAAKw9B,KAElCx9B,MAAK29B,UAAUU,YAAYr+B,KAAK+9B,cAEhC/9B,MAAKs6B,eAAe5zB,UAAUoM,SAAW9S,KAAKs6B,eAAe5zB,UAAUoM,SAASqrB,IAAIn+B,KAAK29B,UAEzFj9B,GAAAH,UAAMyZ,OAAMxa,KAAAQ,MAEd,OAAAs9B,IA/E+BjB,EAiFL18B,GAAAJ,QAAjB+9B,I/B8yON1hB,gCAAgCxa,UAAU87B,kDAAkD,oDAAoDoB,qCAAqC,SAAS7/B,EAAQkB,EAAOJ,GAQhN,GgC14OMg/B,GAAS,WAAf,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,KAAc,MAMdF,GAAAG,OAAgB,QAC/B,OAAAH,KAEmB5+B,GAAAJ,QAAVg/B,OhC24OHI,wCAAwC,SAASlgC,EAAQkB,EAAOJ,GAOtE,GiCx6OMq/B,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,OAAgB,QAKhBD,GAAAE,OAAgB,QAC/B,OAAAF,KAEAj/B,GAAsBJ,QAAbq/B,OjC06OHG,+CAA+C,SAAStgC,EAAQkB,EAAOJ,GAW7E,GkC97OMy/B,GAAmB,WAAzB,QAAMA,MAESA,EAAAC,SAAkB,SAClBD,GAAAE,SAAkB,SACjC,OAAAF,KAE6Br/B,GAAAJ,QAApBy/B,OlCi8OHG,oCAAoC,SAAS1gC,EAAQkB,EAAOJ,GAelE,GmCr8OM6/B,GAAQ,WAAd,QAAMA,MAuCEA,EAAA7+B,UAAA8+B,gBAAP,SAAuBC,EAAsB1V,EAAsB2V,EAAuBC,GAA7C,GAAA5V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAA2V,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OAmBnFJ,GAAA7+B,UAAAk/B,UAAP,SAAiBC,EAAsBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,GAwFhCP,GAAA7+B,UAAAq/B,kBAAP,SAAyBnvB,EAAmB4P,EAA8Bwf,EAAsBC,EAA8BlW,EAAsBmW,EAA6BC,EAAoCC,GAAvF,GAAArW,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAmW,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAkC,CAAlCA,EAAA,MAAoC,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAiE9Mb,GAAA7+B,UAAA2a,MAAP,YAYOkkB,GAAA7+B,UAAAiO,SAAP,SAAgB0xB,IAuDTd,GAAA7+B,UAAA4/B,aAAP,SAAoBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAgBC,IAmCrGrB,GAAA7+B,UAAAmgC,QAAP,SAAeC,EAAiBC,EAAiBJ,EAAgBC,IAoB1DrB,GAAA7+B,UAAAsgC,WAAP,SAAkB79B,EAAUC,EAAU8oB,IAqB/BqT,GAAA7+B,UAAAugC,YAAP,SAAmB99B,EAAUC,EAAUsN,EAAcnC,IAiB9CgxB,GAAA7+B,UAAAwgC,iBAAP,SAAwBC,IAkDjB5B,GAAA7+B,UAAA0gC,SAAP,SAAgBC,EAAgCpP,EAAoBqP,IAsB7D/B,GAAA7+B,UAAA6gC,SAAP,SAAgBp+B,EAAUC,EAAUsN,EAAcnC,IA+B3CgxB,GAAA7+B,UAAA8gC,cAAP,SAAqBr+B,EAAUC,EAAUsN,EAAcnC,EAAekzB,EAAqBC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAAC,KAyBpFpC,GAAA7+B,UAAAkhC,cAAP,SAAqBC,EAAwBz7B,EAAsC07B,EAA8BC,GAApE,GAAA37B,QAAA,GAAoC,CAApCA,EAAA,KAAsC,GAAA07B,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,MAgB1GxC,GAAA7+B,UAAAshC,QAAP,YAkCOzC,GAAA7+B,UAAAuhC,gBAAP,SAAuBxC,EAAsB1V,EAAsB2V,EAAuBC,GAA7C,GAAA5V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAA2V,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OA2EnFJ,GAAA7+B,UAAAwhC,kBAAP,SAAyBtxB,EAAmB4P,EAA8Bwf,EAAsBC,EAAsBlW,EAAsBmW,EAAkCC,EAAgDC,GAAxG,GAAArW,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAmW,QAAA,GAAgC,CAAhCA,EAAA,KAAkC,GAAAC,QAAA,GAA8C,CAA9CA,EAAA,KAAgD,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAgLvNb,GAAA7+B,UAAAyhC,UAAP,SAAiB7hB,EAAsBuf,EAA0BC,EAAkBsC,EAA8BC,EAAgCC,EAAuBC,EAA0BC,GAAjL,GAAAliB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAuf,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAsC,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAqB3LjD,GAAA7+B,UAAA+hC,OAAP,SAAct/B,EAAUC,IAejBm8B,GAAA7+B,UAAA4V,OAAP,SAAcnT,EAAUC,IAIzB,OAAAm8B,KAEAz/B,GAAkBJ,QAAT6/B,OnCq6OHmD,yCAAyC,SAAS9jC,EAAQkB,EAAOJ,SAEjEijC,+CAA+C,SAAS/jC,EAAQkB,EAAOJ,GAQ7E,GoC7wQMkjC,GAAmB,WAAzB,QAAMA,MAeSA,EAAAC,WAAoB,WAcpBD,GAAAE,IAAa,KAC5B,OAAAF,KAEA9iC,GAA6BJ,QAApBkjC,OpC8wQHG,sCAAsC,SAASnkC,EAAQkB,EAAOJ,GASpE,GqCtzQMsjC,GAAU,WAAhB,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,MAAe,OAMfF,GAAArE,MAAe,OAC9B,OAAAqE,KAEoBljC,GAAAJ,QAAXsjC,OrCuzQHG,yCAAyC,SAASvkC,EAAQkB,EAAOJ,GAKvE,GsCr1QM0jC,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,WAAoB,YAMpBD,GAAAxE,KAAc,MAOdwE,GAAAE,OAAgB,QAWhBF,GAAAG,SAAkB,UACjC,OAAAH,KAEAtjC,GAAuBJ,QAAd0jC,OtCq1QHI,yCAAyC,SAAS5kC,EAAQkB,EAAOJ,GAMvE,GuCh4QM+jC,GAAa,WAAnB,QAAMA,MAOSA,EAAAC,OAAgB,QAWhBD,GAAAE,KAAc,MAMdF,GAAAG,MAAe,OAC9B,OAAAH,KAEA3jC,GAAuBJ,QAAd+jC,OvCi4QHI,wCAAwC,SAASjlC,EAAQkB,EAAOJ,GAStE,GwCl6QMokC,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,IAAa,KAKbD,GAAAE,QAAiB,SAKjBF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAhkC,GAAsBJ,QAAbokC,OxCm6QHI,2CAA2C,SAAStlC,EAAQkB,EAAOJ,GAsBzE,GyC97QMykC,GAAe,WAArB,QAAMA,MAKSA,EAAAC,SAAkB,UAKlBD,GAAAvF,KAAc,MAMduF,GAAAE,SAAkB,UACjC,OAAAF,KAEArkC,GAAyBJ,QAAhBykC,OzC+7QHG,yCAAyC,SAAS1lC,EAAQkB,EAAOJ,GACvE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0C1+QtB,IAAO+jC,GAAS3lC,EAAe,iCAE/B,IAAOuJ,GAAcvJ,EAAc,sCAInC,IAAOqK,GAAarK,EAAc,wCAElC,IAAO+J,GAAU/J,EAAe,uCAGhC,IAAO4lC,GAAa5lC,EAAc,0C1CwgRlC,I0Cl+QM6lC,GAAS,SAAA5jC,GAASX,EAAlBukC,EAAS5jC,EA+Ld,SA/LK4jC,GA+LOz9B,EAAuB09B,EAA+BC,GA/LnE,GAAAz7B,GAAA/I,IA+LoC,IAAAukC,QAAA,GAA6B,CAA7BA,EAAA,OAA+B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEjE9jC,EAAAlB,KAAAQ,KAEAA,MAAK6O,WAAa,IAElB7O,MAAKykC,sBAAwB,SAACj4B,GAAwB,MAAAzD,GAAK27B,cAAcl4B,GAEzExM,MAAK6G,SAAWA,CAEhB7G,MAAK2kC,gBAAkB99B,EAAS0J,KAChCvQ,MAAK4kC,iBAAmB/9B,EAASuH,MAEjCpO,MAAK6kC,eAAiB7kC,KAAKkjB,UAAU4hB,WAAa,GAAIV,GAAU,EAAG,EAAGpkC,KAAK2kC,gBAAiB3kC,KAAK4kC,iBAGjG5kC,MAAKgN,YAAcxE,EAAWyE,gBAE9BjN,MAAK2kC,gBAAkB99B,EAAS0J,MA9LjC5P,OAAAC,eAAW0jC,EAAA/jC,UAAA,Y1Co+QJM,I0Cp+QP,WAEC,MAAOb,MAAK+kC,W1Cq+QNhkC,WAAY,KACZC,aAAc,M0Ch+QrBL,QAAAC,eAAW0jC,EAAA/jC,UAAA,a1Cs+QJM,I0Ct+QP,WAEC,MAAOyjC,GAAUpjC,W1Cu+QXH,WAAY,KACZC,aAAc,M0C79QrBL,QAAAC,eAAW0jC,EAAA/jC,UAAA,iB1Cm+QJM,I0Cn+QP,WAEC,MAAOb,MAAK6kC,gB1Co+QN9jC,WAAY,KACZC,aAAc,M0C/9QrBL,QAAAC,eAAW0jC,EAAA/jC,UAAA,mB1Cq+QJM,I0Cr+QP,WAEC,MAAOb,MAAK4kC,kB1Cs+QN7jC,WAAY,KACZC,aAAc,M0Cj+QrBL,QAAAC,eAAW0jC,EAAA/jC,UAAA,kB1Cu+QJM,I0Cv+QP,WAEC,MAAOb,MAAK2kC,iB1Cw+QN5jC,WAAY,KACZC,aAAc,M0Cn+QrBL,QAAAC,eAAW0jC,EAAA/jC,UAAA,Y1Cy+QJM,I0Cz+QP,WAEC,MAAOb,MAAKkjB,W1C0+QNxgB,I0Cv+QP,SAAoBC,GAEnB,GAAIA,GAAS3C,KAAKkjB,UACjB,MAED,IAAIljB,KAAKkjB,UAAW,CACnBljB,KAAKkjB,UAAUC,aAAanjB,KAC5BA,MAAKkjB,UAAU5V,oBAAoB+2B,EAAcW,aAAchlC,KAAKykC,uBAIrEzkC,KAAKkjB,UAAYvgB,CAEjB,IAAI3C,KAAKkjB,UAAW,CACnBljB,KAAKkjB,UAAUE,UAAUpjB,KACzBA,MAAKkjB,UAAU1V,iBAAiB62B,EAAcW,aAAchlC,KAAKykC,yB1Cq+Q5D1jC,WAAY,KACZC,aAAc,M0Ct8QrBL,QAAAC,eAAW0jC,EAAA/jC,UAAA,e1C48QJM,I0C58QP,WAEC,MAAOb,MAAKqjB,c1C68QN3gB,I0C18QP,SAAuBC,GAEtB3C,KAAKqjB,aAAe1gB,G1C28Qd5B,WAAY,KACZC,aAAc,M0Cv8QrBL,QAAAC,eAAW0jC,EAAA/jC,UAAA,kB1C68QJM,I0C78QP,WAGC,MAAOb,MAAKujB,iB1C88QN7gB,I0C38QP,SAA0BC,GAGzB3C,KAAK0G,UAAUu+B,eAAiBtiC,CAEhC3C,MAAKklC,wB1C48QCnkC,WAAY,KACZC,aAAc,M0Cz8QrBL,QAAAC,eAAW0jC,EAAA/jC,UAAA,wB1C48QJM,I0C58QP,WAEC,MAAOb,MAAKmlC,uB1C68QNziC,I0C18QP,SAAgCC,GAG/B3C,KAAKmlC,sBAAwBxiC,CAC7B3C,MAAKklC,wB1C28QCnkC,WAAY,KACZC,aAAc,M0Cz8QbsjC,GAAA/jC,UAAA2kC,qBAAR,WAECllC,KAAKujB,gBAAgB,GAAIvb,EACzB,IAAKhI,KAA0B,uBAAIA,KAAK0G,UAAwB,eAAE,CAEjE1G,KAAKujB,gBAAgBlW,gBAAoBrN,KAAK0G,UAAUu+B,eAAe53B,gBAAkBrN,KAAKmlC,sBAAsB93B,eACpHrN,MAAKujB,gBAAgB6hB,cAAoBplC,KAAK0G,UAAUu+B,eAAeG,cAAgBplC,KAAKmlC,sBAAsBC,aAClHplC,MAAKujB,gBAAgB8hB,eAAoBrlC,KAAK0G,UAAUu+B,eAAeI,eAAiBrlC,KAAKmlC,sBAAsBE,cACnHrlC,MAAKujB,gBAAgB+hB,gBAAoBtlC,KAAK0G,UAAUu+B,eAAeK,gBAAkBtlC,KAAKmlC,sBAAsBG,eACpHtlC,MAAKujB,gBAAgBgiB,YAAoBvlC,KAAK0G,UAAUu+B,eAAeM,YAAcvlC,KAAKmlC,sBAAsBI,WAChHvlC,MAAKujB,gBAAgBiiB,UAAoBxlC,KAAK0G,UAAUu+B,eAAeO,UAAYxlC,KAAKmlC,sBAAsBK,SAC9GxlC,MAAKujB,gBAAgBkiB,WAAoBzlC,KAAK0G,UAAUu+B,eAAeQ,WAAazlC,KAAKmlC,sBAAsBM,UAC/GzlC,MAAKujB,gBAAgBmiB,YAAoB1lC,KAAK0G,UAAUu+B,eAAeS,YAAc1lC,KAAKmlC,sBAAsBO,gBAE5G,IAAI1lC,KAAK0G,UAAUu+B,eAAe,CACtCjlC,KAAKujB,gBAAgBlW,gBAAoBrN,KAAK0G,UAAUu+B,eAAe53B,eACvErN,MAAKujB,gBAAgB6hB,cAAoBplC,KAAK0G,UAAUu+B,eAAeG,aACvEplC,MAAKujB,gBAAgB8hB,eAAoBrlC,KAAK0G,UAAUu+B,eAAeI,cACvErlC,MAAKujB,gBAAgB+hB,gBAAoBtlC,KAAK0G,UAAUu+B,eAAeK,eACvEtlC,MAAKujB,gBAAgBgiB,YAAoBvlC,KAAK0G,UAAUu+B,eAAeM,WACvEvlC,MAAKujB,gBAAgBiiB,UAAoBxlC,KAAK0G,UAAUu+B,eAAeO,SACvExlC,MAAKujB,gBAAgBkiB,WAAoBzlC,KAAK0G,UAAUu+B,eAAeQ,UACvEzlC,MAAKujB,gBAAgBmiB,YAAoB1lC,KAAK0G,UAAUu+B,eAAeS,gBAEnE,IAAI1lC,KAAKmlC,sBAAsB,CACnCnlC,KAAKujB,gBAAgBlW,gBAAoBrN,KAAKmlC,sBAAsB93B,eACpErN,MAAKujB,gBAAgB6hB,cAAoBplC,KAAKmlC,sBAAsBC,aACpEplC,MAAKujB,gBAAgB8hB,eAAoBrlC,KAAKmlC,sBAAsBE,cACpErlC,MAAKujB,gBAAgB+hB,gBAAoBtlC,KAAKmlC,sBAAsBG,eACpEtlC,MAAKujB,gBAAgBgiB,YAAoBvlC,KAAKmlC,sBAAsBI,WACpEvlC,MAAKujB,gBAAgBiiB,UAAoBxlC,KAAKmlC,sBAAsBK,SACpExlC,MAAKujB,gBAAgBkiB,WAAoBzlC,KAAKmlC,sBAAsBM,UACpEzlC,MAAKujB,gBAAgBmiB,YAAoB1lC,KAAKmlC,sBAAsBO,aA4B/DpB,GAAA/jC,UAAA4R,kBAAP,WAECzR,EAAAH,UAAM4R,kBAAiB3S,KAAAQ,KAEvBA,MAAKoS,YAAY7B,MAAQvQ,KAAK6kC,eAAet0B,KAC7CvQ,MAAKoS,YAAYhE,OAASpO,KAAK6kC,eAAez2B,OAGxCk2B,GAAA/jC,UAAAwF,MAAP,WAEC,GAAIA,GAAkB,GAAIu+B,GAAUtkC,KAAK6G,SACzC,OAAOd,GAWDu+B,GAAA/jC,UAAAoG,gBAAP,SAAuBI,EAAkC8S,GAExD,MAAO7Z,MAAKsP,kBAAkBq2B,uBAAuB3lC,KAAMA,KAAK6G,SAAU7G,KAAKgY,qBAAsBjR,GAM9Fu9B,GAAA/jC,UAAAmkC,cAAR,SAAsBl4B,GAErBxM,KAAK2kC,gBAAkB3kC,KAAKkjB,UAAU3S,KACtCvQ,MAAK4kC,iBAAmB5kC,KAAKkjB,UAAU9U,MAEvCpO,MAAK6kC,eAAiB7kC,KAAKkjB,UAAU4hB,WAAa,GAAIV,GAAU,EAAG,EAAGpkC,KAAK2kC,gBAAiB3kC,KAAK4kC,iBAEjG5kC,MAAKyN,oBAEL,IAAIC,GAAa1N,KAAK6L,cAAcpM,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK6L,cAAc3M,GAAGukB,qBAGjB6gB,GAAA/jC,UAAAqlC,eAAP,SAAsB5Q,GAKrB,GAAIh1B,KAAKiS,eACRjS,KAAKiS,eAAeC,YAErB8iB,GAAS6Q,uBAAuB7lC,MAG1BskC,GAAA/jC,UAAAyY,iBAAP,SAAwBR,GAEvBA,EAAUstB,iBAAiB9lC,MAGrBskC,GAAA/jC,UAAAuY,mBAAP,SAA0BN,GAEzBA,EAAUutB,mBAAmB/lC,MAnRhBskC,GAAApjC,UAAmB,mBAqRlC,OAAAojC,IAvRwBx7B,EAyRxBnJ,GAAmBJ,QAAV+kC,I1Cs6QNhpB,sCAAsCla,UAAU4kC,iCAAiC5kC,UAAU0G,wCAAwC,wCAAwCiU,uCAAuC,uCAAuCkqB,0CAA0C,4CAA4CrM,sCAAsC,SAASn7B,EAAQkB,EAAOJ,GAChZ,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2CvvRtB,IAAO8H,GAAQ1J,EAAgB,gCAC/B,IAAOynC,GAAOznC,EAAgB,+BAE9B,IAAO0nC,GAAe1nC,EAAc,yCAEpC,IAAO2nC,GAAqB3nC,EAAY,oDAGxC,IAAO+J,GAAU/J,EAAe,uCAChC,IAAO8e,GAAsB9e,EAAY,uDAGzC,IAAOm2B,GAAWn2B,EAAe,wCAGjC,IAAMk2B,GAAM,SAAAj0B,GAASX,EAAf40B,EAAMj0B,EAWX,SAXKi0B,GAWOkD,GAXb,GAAA9uB,GAAA/I,IAWa,IAAA63B,QAAA,GAA6B,CAA7BA,EAAA,KAEXn3B,EAAAlB,KAAAQ,KATOA,MAAAqmC,gBAA2B,GAAIl+B,EAC/BnI,MAAAsmC,qBAA+B,IAG/BtmC,MAAAumC,oBAA8B,IAOrCvmC,MAAK6O,WAAa,IAElB7O,MAAKwmC,mCAAqC,SAACh6B,GAA0B,MAAAzD,GAAK09B,0BAA0Bj6B,GAEpGxM,MAAK0mC,YAAc7O,GAAc,GAAIuO,EACrCpmC,MAAK0mC,YAAYl5B,iBAAiB24B,EAAgBQ,eAAgB3mC,KAAKwmC,mCAEvExmC,MAAK4mC,iBAEL,KAAK,GAAI1nC,GAAW,EAAGA,EAAI,IAAKA,EAC/Bc,KAAK4mC,eAAe1nC,GAAK,GAAIgnC,EAE9BlmC,MAAKkD,GAAK,GAGVlD,MAAKgN,YAAcxE,EAAW6jB,KAI/B1rB,OAAAC,eAAW+zB,EAAAp0B,UAAA,a3CquRJM,I2CruRP,WAEC,MAAO8zB,GAAOzzB,W3CsuRRH,WAAY,KACZC,aAAc,M2CpuRb2zB,GAAAp0B,UAAAkmC,0BAAR,SAAkCj6B,GAEjCxM,KAAKsmC,qBAAuB,IAC5BtmC,MAAKumC,oBAAsB,IAC3BvmC,MAAK2Y,cAAcnM,GAGpB7L,QAAAC,eAAW+zB,EAAAp0B,UAAA,iB3CquRJM,I2CruRP,WAEC,GAAIb,KAAKumC,oBACRvmC,KAAK6mC,eAEN,OAAO7mC,MAAK4mC,gB3CquRN7lC,WAAY,KACZC,aAAc,M2CnuRb2zB,GAAAp0B,UAAAsmC,cAAR,WAEC,GAAI5nC,GAAUiB,EAAU0oB,C3CsuRlB,I2CpuRFke,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAI1nC,EACJ,IAAIqV,GAAe,GAAI1J,OAAc,GAErC,IAAIg8B,EACJ9nC,MAAK+nC,eAAe9d,cAAczU,EAElCsxB,GAAMtxB,EAAI,EACVuxB,GAAMvxB,EAAI,EACVwxB,GAAMxxB,EAAI,EACVyxB,GAAMzxB,EAAI,GACV0xB;EAAM1xB,EAAI,EACV2xB,GAAM3xB,EAAI,EACV4xB,GAAM5xB,EAAI,EACV6xB,GAAM7xB,EAAI,GACV8xB,GAAM9xB,EAAI,EACV+xB,GAAM/xB,EAAI,EACVgyB,GAAMhyB,EAAI,GACViyB,GAAMjyB,EAAI,GACVkyB,GAAMlyB,EAAI,EACVmyB,GAAMnyB,EAAI,EACVoyB,GAAMpyB,EAAI,GACVqyB,GAAMryB,EAAI,GAGVrV,GAAIH,KAAK4mC,eAAe,EACxB3nC,GAAIyoC,EAAMZ,CACV5mC,GAAIynC,EAAMZ,CACVne,GAAIgf,EAAMZ,CACVc,GAAS,EAAErwB,KAAKC,KAAKzY,EAAEA,EAAIiB,EAAEA,EAAI0oB,EAAEA,EACnCzoB,GAAElB,EAAIA,EAAE6oC,CACR3nC,GAAED,EAAIA,EAAE4nC,CACR3nC,GAAEyoB,EAAIA,EAAEkf,CACR3nC,GAAEF,IAAM4nC,EAAMZ,GAAKa,CAGnB3nC,GAAIH,KAAK4mC,eAAe,EACxB3nC,GAAIyoC,EAAMZ,CACV5mC,GAAIynC,EAAMZ,CACVne,GAAIgf,EAAMZ,CACVc,GAAS,EAAErwB,KAAKC,KAAKzY,EAAEA,EAAIiB,EAAEA,EAAI0oB,EAAEA,EACnCzoB,GAAElB,EAAIA,EAAE6oC,CACR3nC,GAAED,EAAIA,EAAE4nC,CACR3nC,GAAEyoB,EAAIA,EAAEkf,CACR3nC,GAAEF,GAAKgnC,EAAMY,GAAKC,CAGlB3nC,GAAIH,KAAK4mC,eAAe,EACxB3nC,GAAIyoC,EAAMR,CACVhnC,GAAIynC,EAAMR,CACVve,GAAIgf,EAAMR,CACVU,GAAS,EAAErwB,KAAKC,KAAKzY,EAAEA,EAAIiB,EAAEA,EAAI0oB,EAAEA,EACnCzoB,GAAElB,EAAIA,EAAE6oC,CACR3nC,GAAED,EAAIA,EAAE4nC,CACR3nC,GAAEyoB,EAAIA,EAAEkf,CACR3nC,GAAEF,IAAM4nC,EAAMR,GAAKS,CAGnB3nC,GAAIH,KAAK4mC,eAAe,EACxB3nC,GAAIyoC,EAAMR,CACVhnC,GAAIynC,EAAMR,CACVve,GAAIgf,EAAMR,CACVU,GAAS,EAAErwB,KAAKC,KAAKzY,EAAEA,EAAIiB,EAAEA,EAAI0oB,EAAEA,EACnCzoB,GAAElB,EAAIA,EAAE6oC,CACR3nC,GAAED,EAAIA,EAAE4nC,CACR3nC,GAAEyoB,EAAIA,EAAEkf,CACR3nC,GAAEF,GAAKonC,EAAMQ,GAAKC,CAGlB3nC,GAAIH,KAAK4mC,eAAe,EACxB3nC,GAAIqoC,CACJpnC,GAAIqnC,CACJ3e,GAAI4e,CACJM,GAAS,EAAErwB,KAAKC,KAAKzY,EAAEA,EAAIiB,EAAEA,EAAI0oB,EAAEA,EACnCzoB,GAAElB,EAAIA,EAAE6oC,CACR3nC,GAAED,EAAIA,EAAE4nC,CACR3nC,GAAEyoB,EAAIA,EAAEkf,CACR3nC,GAAEF,GAAKwnC,EAAIK,CAGX3nC,GAAIH,KAAK4mC,eAAe,EACxB3nC,GAAIyoC,EAAMJ,CACVpnC,GAAIynC,EAAMJ,CACV3e,GAAIgf,EAAMJ,CACVM,GAAS,EAAErwB,KAAKC,KAAKzY,EAAEA,EAAIiB,EAAEA,EAAI0oB,EAAEA,EACnCzoB,GAAElB,EAAIA,EAAE6oC,CACR3nC,GAAED,EAAIA,EAAE4nC,CACR3nC,GAAEyoB,EAAIA,EAAEkf,CACR3nC,GAAEF,GAAKwnC,EAAMI,GAAKC,CAElB9nC,MAAKumC,oBAAsB,MAOrB5R,GAAAp0B,UAAAqO,0BAAP,WAEClO,EAAAH,UAAMqO,0BAAyBpP,KAAAQ,KAE/BA,MAAKsmC,qBAAuB,IAC5BtmC,MAAKumC,oBAAsB,KAM5B5lC,QAAAC,eAAW+zB,EAAAp0B,UAAA,c3CwtRJM,I2CxtRP,WAEC,MAAOb,MAAK0mC,a3CytRNhkC,I2CttRP,SAAsBC,GAErB,GAAI3C,KAAK0mC,aAAe/jC,EACvB,MAED,KAAKA,EACJ,KAAM,IAAIvD,OAAM,6BAEjBY,MAAK0mC,YAAYp5B,oBAAoB64B,EAAgBQ,eAAgB3mC,KAAKwmC,mCAC1ExmC,MAAK0mC,YAAc/jC,CACnB3C,MAAK0mC,YAAYl5B,iBAAiB24B,EAAgBQ,eAAgB3mC,KAAKwmC,mCACvExmC,MAAK2Y,cAAc,GAAIic,GAAYA,EAAY+C,mBAAoB33B,Q3CqtR7De,WAAY,KACZC,aAAc,M2ChtRrBL,QAAAC,eAAW+zB,EAAAp0B,UAAA,kB3CstRJM,I2CttRP,WAEC,GAAIb,KAAKsmC,qBAAsB,CAC9BtmC,KAAKqmC,gBAAgB73B,SAASxO,KAAKsS,sBACnCtS,MAAKqmC,gBAAgB2B,OAAOhoC,KAAK0mC,YAAY9c,OAC7C5pB,MAAKsmC,qBAAuB,MAG7B,MAAOtmC,MAAKqmC,iB3CstRNtlC,WAAY,KACZC,aAAc,M2C5sRd2zB,GAAAp0B,UAAA+4B,OAAP,SAAc2O,EAAWC,EAAW7O,GAEnC,MAAOr5B,MAAKyO,eAAeyvB,qBAAqBl+B,KAAK0mC,YAAY5P,UAAUmR,EAAIC,EAAI7O,IAS7E1E,GAAAp0B,UAAAw4B,QAAP,SAAeC,GAEd,MAAOh5B,MAAK0mC,YAAY3N,QAAQ/4B,KAAKsS,sBAAsBvC,gBAAgBipB,IAWrErE,GAAAp0B,UAAAu2B,UAAP,SAAiBmR,EAAWC,EAAW7O,GAEtC,MAAOr5B,MAAKyO,eAAesB,gBAAgB/P,KAAK0mC,YAAY5P,UAAUmR,EAAIC,EAAI7O,IAGxE1E,GAAAp0B,UAAAqlC,eAAP,SAAsB5Q,GAKrB,GAAIh1B,KAAKiS,eACRjS,KAAKiS,eAAeC,aAKfyiB,GAAAp0B,UAAAyY,iBAAP,SAAwBR,GAEvBA,EAAUke,iBAAiB12B,MAGrB20B,GAAAp0B,UAAAuY,mBAAP,SAA0BN,GAEzBA,EAAU2vB,mBAAmBnoC,MA/PhB20B,GAAAzzB,UAAmB,gBAiQlC,OAAAyzB,IAnQqBpX,EAqQrB5d,GAAgBJ,QAAPo1B,I3C6sRNyT,yCAAyChnC,UAAUoa,gCAAgCpa,UAAUinC,+BAA+BjnC,UAAUknC,oDAAoDlnC,UAAU2a,uCAAuC,uCAAuCsD,uDAAuD,uDAAuDwa,wCAAwC,0CAA0C0O,gDAAgD,SAAS9pC,EAAQkB,EAAOJ,GAC7hB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Ct+RtB,IAAO8H,GAAQ1J,EAAgB,gCAC/B,IAAO6J,GAAQ7J,EAAgB,gCAG/B,IAAOgf,GAAShf,EAAe,oCAC/B,IAAO+J,GAAU/J,EAAe,uCAIhC,IAAO+pC,GAAuB/pC,EAAY,qEAE1C,IAAMgqC,GAAgB,SAAA/nC,GAASX,EAAzB0oC,EAAgB/nC,EAQrB,SARK+nC,GAQOC,EAAiBC,EAAkBC,GAAnC,GAAAF,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,GAAe,EAAG,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE9CloC,EAAAlB,KAAAQ,KALOA,MAAA6oC,aAA6B,GAAI/8B,OAAc,GAOtD9L,MAAK6O,WAAa,IAElB7O,MAAKkpB,UAAY,GAAI5gB,GAASogC,EAAMC,EAAMC,EAE1C5oC,MAAK8oC,gBAAkB,GAAIxgC,EAG3BtI,MAAKgN,YAAcxE,EAAW6jB,KAG/B1rB,OAAAC,eAAW6nC,EAAAloC,UAAA,kB5C29RJM,I4C39RP,WAEC,GAAIb,KAAKmJ,sBACRnJ,KAAKiQ,uBAEN,OAAOjQ,MAAK8oC,iB5C29RN/nC,WAAY,KACZC,aAAc,M4Cz9RrBL,QAAAC,eAAW6nC,EAAAloC,UAAA,a5C49RJM,I4C59RP,WAEC,MAAOb,MAAK+oC,Y5C69RNrmC,I4C19RP,SAAqBC,GAEpB3C,KAAK+oC,WAAapmC,CAElB,KAAK3C,KAAKgpC,WACThpC,KAAKgpC,WAAa,GAAI1gC,EAEvBtI,MAAKgpC,WAAWhmC,EAAIhD,KAAKgD,EAAIhD,KAAK+oC,WAAW/lC,CAC7ChD,MAAKgpC,WAAW/lC,EAAIjD,KAAKiD,EAAIjD,KAAK+oC,WAAW9lC,CAC7CjD,MAAKgpC,WAAW9lC,EAAIlD,KAAKkD,EAAIlD,KAAK+oC,WAAW7lC,CAE7ClD,MAAKkV,OAAOlV,KAAKgpC,a5Cw9RXjoC,WAAY,KACZC,aAAc,M4Cr9RdynC,GAAAloC,UAAA0P,sBAAP,WAECvP,EAAAH,UAAM0P,sBAAqBzQ,KAAAQ,KAC3BA,MAAKyO,eAAeuB,aAAa,EAAGhQ,KAAK8oC,gBACzC9oC,MAAK8oC,gBAAgBpzB,YAIf+yB,GAAAloC,UAAAse,oBAAP,WAEC,MAAO,IAAI2pB,GAILC,GAAAloC,UAAA4e,2BAAP,SAAkCC,EAAgBzI,EAAexB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIK,GAAoB,GAAI1J,MAC5B,IAAIgK,GAAa,GAAI3N,EAErB2N,GAAEtH,SAAS4Q,EAAO1I,wBAAwBC,GAC1Cb,GAAEkyB,OAAOhoC,KAAKsS,sBAEd,KAAKtS,KAAKipC,gBACTjpC,KAAKipC,kBAENnzB,GAAEozB,iBAAiBlpC,KAAK6oC,aAAc7oC,KAAKipC,gBAE3C,IAAIE,GAAcxM,SAAUyM,GAAezM,QAC3C,IAAI0M,GAAc1M,SAAU2M,GAAe3M,QAC3C,IAAI4M,GAAc5M,SAAU6M,GAAe7M,QAC3C,IAAI18B,EACJ,KAAK,GAAIf,GAAW,EAAGA,EAAI,IAAK,CAC/Be,EAAID,KAAKipC,gBAAgB/pC,IAEzB,IAAIe,EAAIkpC,EACPA,EAAOlpC,CAER,IAAIA,EAAImpC,EACPA,EAAOnpC,CAERA,GAAID,KAAKipC,gBAAgB/pC,IAEzB,IAAIe,EAAIopC,EACPA,EAAOppC,CAER,IAAIA,EAAIqpC,EACPA,EAAOrpC,CAERA,GAAID,KAAKipC,gBAAgB/pC,IAEzB,IAAIe,EAAIspC,EACPA,EAAOtpC,CAER,IAAIA,EAAIupC,EACPA,EAAOvpC,EAGT,GAAIwpC,GAAmB,GAAGL,EAAOD,EACjC,IAAIO,GAAmB,GAAGJ,EAAOD,EACjC,IAAIM,GAAmB,GAAGH,EAAOD,EACjC/zB,GAAI,GAAK,EAAEi0B,CACXj0B,GAAI,GAAK,EAAEk0B,CACXl0B,GAAI,IAAMm0B,CACVn0B,GAAI,MAAQ4zB,EAAOD,GAAMM,CACzBj0B,GAAI,MAAQ8zB,EAAOD,GAAMK,CACzBl0B,GAAI,KAAO+zB,EAAKI,CAChBn0B,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,CAEV,KAAKL,EACJA,EAAS,GAAIhN,EAEdgN,GAAOY,gBAAgBP,EACvBL,GAAOkE,QAAQvD,EAEf,OAAOX,GAGDszB,GAAAloC,UAAAqlC,eAAP,SAAsB5Q,IAKfyT,GAAAloC,UAAAyY,iBAAP,SAAwBR,GAEvBA,EAAUoxB,2BAA2B5pC,MAG/ByoC,GAAAloC,UAAAuY,mBAAP,SAA0BN,GAEzBA,EAAUqxB,6BAA6B7pC,MASjCyoC,GAAAloC,UAAA4R,kBAAP,WAECzR,EAAAH,UAAM4R,kBAAiB3S,KAAAQ,K5C67RjB,I4C17RF0uB,GAAc1uB,KAAKoS,YAAYpP,CACnC,IAAI2rB,GAAc3uB,KAAKoS,YAAYnP,EAAIjD,KAAKoS,YAAYhE,MACxD,IAAIwgB,GAAc5uB,KAAKoS,YAAYlP,CACnC,IAAI2rB,GAAc7uB,KAAKoS,YAAYpP,EAAIhD,KAAKoS,YAAY7B,KACxD,IAAIue,GAAc9uB,KAAKoS,YAAYnP,CACnC,IAAI8rB,GAAc/uB,KAAKoS,YAAYlP,EAAIlD,KAAKoS,YAAYvE,KAExD7N,MAAK6oC,aAAa,GAAKna,CACvB1uB,MAAK6oC,aAAa,GAAKla,CACvB3uB,MAAK6oC,aAAa,GAAKja,CACvB5uB,MAAK6oC,aAAa,GAAKha,CACvB7uB,MAAK6oC,aAAa,GAAKla,CACvB3uB,MAAK6oC,aAAa,GAAKja,CACvB5uB,MAAK6oC,aAAa,GAAKna,CACvB1uB,MAAK6oC,aAAa,GAAK/Z,CACvB9uB,MAAK6oC,aAAa,GAAKja,CACvB5uB,MAAK6oC,aAAa,GAAKha,CACvB7uB,MAAK6oC,aAAa,IAAM/Z,CACxB9uB,MAAK6oC,aAAa,IAAMja,CACxB5uB,MAAK6oC,aAAa,IAAMna,CACxB1uB,MAAK6oC,aAAa,IAAMla,CACxB3uB,MAAK6oC,aAAa,IAAM9Z,CACxB/uB,MAAK6oC,aAAa,IAAMha,CACxB7uB,MAAK6oC,aAAa,IAAMla,CACxB3uB,MAAK6oC,aAAa,IAAM9Z,CACxB/uB,MAAK6oC,aAAa,IAAMna,CACxB1uB,MAAK6oC,aAAa,IAAM/Z,CACxB9uB,MAAK6oC,aAAa,IAAM9Z,CACxB/uB,MAAK6oC,aAAa,IAAMha,CACxB7uB,MAAK6oC,aAAa,IAAM/Z,CACxB9uB,MAAK6oC,aAAa,IAAM9Z,EAE1B,OAAA0Z,IA1L+BhrB,EA4LL9d,GAAAJ,QAAjBkpC,I5C27RNjtB,gCAAgCpa,UAAUwa,gCAAgCxa,UAAUkc,oCAAoC,oCAAoCvB,uCAAuC,uCAAuC+tB,qEAAqE,uEAAuEC,uCAAuC,SAAStrC,EAAQkB,EAAOJ,SAElbyqC,0CAA0C,SAASvrC,EAAQkB,EAAOJ,GACxE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6CtoStB,IAAOjB,GAAKX,EAAgB,+BAG5B,IAAOgf,GAAShf,EAAe,oCAC/B,IAAO+J,GAAU/J,EAAe,uCAKhC,IAAMwrC,GAAU,SAAAvpC,GAASX,EAAnBkqC,EAAUvpC,EAKf,SALKupC,GAKOC,EAAsBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEjCzpC,EAAAlB,KAAAQ,KAEAA,MAAK6O,WAAa,IAElB7O,MAAKoqC,YAAcF,CACnBlqC,MAAKqqC,aAAeF,CAGpBnqC,MAAKgN,YAAcxE,EAAW6jB,KAG/B1rB,OAAAC,eAAWqpC,EAAA1pC,UAAA,c7C4nSJM,I6C5nSP,WAEC,MAAOb,MAAKoqC,a7C6nSN1nC,I6C1nSP,SAAsBC,GAErB3C,KAAKoqC,YAAcznC,G7C2nSb5B,WAAY,KACZC,aAAc,M6CznSrBL,QAAAC,eAAWqpC,EAAA1pC,UAAA,e7C4nSJM,I6C5nSP,WAEC,MAAOb,MAAKqqC,c7C6nSN3nC,I6C1nSP,SAAuBC,GAEtB3C,KAAKqqC,aAAe1nC,G7C2nSd5B,WAAY,KACZC,aAAc,M6CxnSdipC,GAAA1pC,UAAA4e,2BAAP,SAAkCC,EAAgBzI,EAAexB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAI/V,GAAM,wEAGV6qC,GAAA1pC,UAAAqlC,eAAP,SAAsB5Q,IAKfiV,GAAA1pC,UAAAyY,iBAAP,SAAwBR,GAEvBA,EAAU8xB,qBAAqBtqC,MAGzBiqC,GAAA1pC,UAAAuY,mBAAP,SAA0BN,GAEzBA,EAAU+xB,uBAAuBvqC,MAEnC,OAAAiqC,IA1DyBxsB,EA4DL9d,GAAAJ,QAAX0qC,I7CunSNza,+BAA+BpuB,UAAUkc,oCAAoC,oCAAoCvB,uCAAuC,yCAAyCyuB,2CAA2C,SAAS/rC,EAAQkB,EAAOJ,GACvQ,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8C7rStB,IAAOyI,GAAarK,EAAc,wCAElC,IAAO+J,GAAU/J,EAAe,uC9CksShC,I8CzrSMgsC,GAAW,SAAA/pC,GAASX,EAApB0qC,EAAW/pC,EAsIhB,SAtIK+pC,GAsIO5jC,EAAuB6jC,EAAwBC,EAAsBxqB,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,EAEhFzf,EAAAlB,KAAAQ,KAEAA,MAAK6O,WAAa,IAElB7O,MAAK6G,SAAWA,CAEhB7G,MAAK4qC,eAAiBF,CACtB1qC,MAAK6qC,aAAeF,CACpB3qC,MAAK8qC,eAAiB3qB,EAAU,EAGhCngB,MAAKgN,YAAcxE,EAAWyE,iBAnI/BtM,OAAAC,eAAW6pC,EAAAlqC,UAAA,Y9CisSJM,I8CjsSP,WAEC,MAAOb,MAAK+kC,W9CksSNhkC,WAAY,KACZC,aAAc,M8C7rSrBL,QAAAC,eAAW6pC,EAAAlqC,UAAA,a9CmsSJM,I8CnsSP,WAEC,MAAO4pC,GAAYvpC,W9CosSbH,WAAY,KACZC,aAAc,M8C/rSrBL,QAAAC,eAAW6pC,EAAAlqC,UAAA,gB9CqsSJM,I8CrsSP,WAEC,MAAOb,MAAK4qC,gB9CssSN7pC,WAAY,KACZC,aAAc,M8CpsSrBL,QAAAC,eAAW6pC,EAAAlqC,UAAA,iB9CusSJmC,I8CvsSP,SAAyBC,GAExB,GAAI3C,KAAK4qC,gBAAkBjoC,EAC1B,MAED3C,MAAK4qC,eAAiBjoC,CAEtB3C,MAAK+qC,0B9CssSChqC,WAAY,KACZC,aAAc,M8CjsSrBL,QAAAC,eAAW6pC,EAAAlqC,UAAA,e9CusSJM,I8CvsSP,WAEC,MAAOb,MAAK6qC,c9CwsSNnoC,I8CrsSP,SAAuBC,GAEtB,GAAI3C,KAAK6qC,cAAgBloC,EACxB,MAED3C,MAAK6qC,aAAeloC,CAEpB3C,MAAK+qC,0B9CosSChqC,WAAY,KACZC,aAAc,M8C/rSrBL,QAAAC,eAAW6pC,EAAAlqC,UAAA,Y9CqsSJM,I8CrsSP,WAEC,MAAOb,MAAKkjB,W9CssSNxgB,I8CnsSP,SAAoBC,GAEnB,GAAI3C,KAAK6G,SACR7G,KAAK6G,SAASsc,aAAanjB,KAE5BA,MAAKkjB,UAAYvgB,CAEjB,IAAI3C,KAAK6G,SACR7G,KAAK6G,SAASuc,UAAUpjB,O9CksSnBe,WAAY,KACZC,aAAc,M8C7rSrBL,QAAAC,eAAW6pC,EAAAlqC,UAAA,a9CmsSJM,I8CnsSP,WAEC,MAAOb,MAAK8qC,eAAe,G9CosSrBpoC,I8CjsSP,SAAqBC,GAEpB,GAAI3C,KAAK8qC,gBAAkBnoC,EAC1B,MAED3C,MAAK8qC,eAAiBnoC,EAAM,EAE5B3C,MAAK+qC,0B9CgsSChqC,WAAY,KACZC,aAAc,M8C3rSrBL,QAAAC,eAAW6pC,EAAAlqC,UAAA,e9CisSJM,I8CjsSP,WAEC,MAAOb,MAAKqjB,c9CksSN3gB,I8C/rSP,SAAuBC,GAEtB3C,KAAKqjB,aAAe1gB,G9CgsSd5B,WAAY,KACZC,aAAc,M8C5rSrBL,QAAAC,eAAW6pC,EAAAlqC,UAAA,kB9CksSJM,I8ClsSP,WAEC,MAAOb,MAAKujB,iB9CmsSN7gB,I8ChsSP,SAA0BC,GAEzB3C,KAAKujB,gBAAkB5gB,G9CisSjB5B,WAAY,KACZC,aAAc,M8CxqSdypC,GAAAlqC,UAAAU,QAAP,WAECjB,KAAK4qC,eAAiB,IACtB5qC,MAAK6qC,aAAe,KAMdJ,GAAAlqC,UAAA4R,kBAAP,WAECzR,EAAAH,UAAM4R,kBAAiB3S,KAAAQ,KAEvBA,MAAKoS,YAAYpP,EAAIyU,KAAK+W,IAAIxuB,KAAK4qC,eAAe5nC,EAAGhD,KAAK6qC,aAAa7nC,EACvEhD,MAAKoS,YAAYnP,EAAIwU,KAAK+W,IAAIxuB,KAAK4qC,eAAe3nC,EAAGjD,KAAK6qC,aAAa5nC,EACvEjD,MAAKoS,YAAYlP,EAAIuU,KAAK+W,IAAIxuB,KAAK4qC,eAAe1nC,EAAGlD,KAAK6qC,aAAa3nC,EACvElD,MAAKoS,YAAY7B,MAAQkH,KAAKqT,IAAI9qB,KAAK4qC,eAAe5nC,EAAIhD,KAAK6qC,aAAa7nC,EAC5EhD,MAAKoS,YAAYhE,OAASqJ,KAAKqT,IAAI9qB,KAAK4qC,eAAe3nC,EAAIjD,KAAK6qC,aAAa5nC,EAC7EjD,MAAKoS,YAAYvE,MAAQ4J,KAAKqT,IAAI9qB,KAAK4qC,eAAe1nC,EAAIlD,KAAK6qC,aAAa3nC,GAGtEunC,GAAAlqC,UAAAiS,qBAAP,WAEC9R,EAAAH,UAAMiS,qBAAoBhT,KAAAQ,KAE1BA,MAAKmS,mBAEL,IAAI64B,IAAoBhrC,KAAK6qC,aAAa7nC,EAAIhD,KAAK4qC,eAAe5nC,GAAG,CACrE,IAAIioC,IAAqBjrC,KAAK6qC,aAAa5nC,EAAIjD,KAAK4qC,eAAe3nC,GAAG,CACtE,IAAIioC,IAAoBlrC,KAAK6qC,aAAa3nC,EAAIlD,KAAK4qC,eAAe1nC,GAAG,CACrElD,MAAKyS,eAAezP,EAAIhD,KAAK4qC,eAAe5nC,EAAIgoC,CAChDhrC,MAAKyS,eAAexP,EAAIjD,KAAK4qC,eAAe3nC,EAAIgoC,CAChDjrC,MAAKyS,eAAevP,EAAIlD,KAAK4qC,eAAe1nC,EAAIgoC,CAChDlrC,MAAKyS,eAAesZ,OAAStU,KAAKC,KAAKszB,EAAUA,EAAYC,EAAWA,EAAaC,EAAUA,GAMxFT,GAAAlqC,UAAAwqC,uBAAR,WAEC,GAAIr9B,GAAa1N,KAAK6L,cAAcpM,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK6L,cAAc3M,GAAGukB,qBAGjBgnB,GAAAlqC,UAAAqlC,eAAP,SAAsB5Q,GAKrB,GAAIh1B,KAAKiS,eACRjS,KAAKiS,eAAeC,YAErB8iB,GAAS6Q,uBAAuB7lC,MAG1ByqC,GAAAlqC,UAAAyY,iBAAP,SAAwBR,GAEvBA,EAAUstB,iBAAiB9lC,MAGrByqC,GAAAlqC,UAAAuY,mBAAP,SAA0BN,GAEzBA,EAAUutB,mBAAmB/lC,MApNhByqC,GAAAvpC,UAAmB,qBAsNlC,OAAAupC,IAxN0B3hC,EA0NLnJ,GAAAJ,QAAZkrC,I9C4pSN3iC,wCAAwC,wCAAwCiU,uCAAuC,yCAAyCovB,oCAAoC,SAAS1sC,EAAQkB,EAAOJ,GAC/N,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+C14StB,IAAOgI,GAAK5J,EAAgB,6BAO5B,IAAO4d,GAAQ5d,EAAgB,mCAE/B,IAAOqD,GAAgBrD,EAAc,2CACrC,IAAO2d,GAAa3d,EAAc,0CAClC,IAAO8e,GAAsB9e,EAAY,uDAEzC,IAAO2sC,GAAW3sC,EAAe,sC/C04SjC,I+Cj4SM4sC,GAAI,SAAA3qC,GAASX,EAAbsrC,EAAI3qC,EAyMT,SAzMK2qC,GAyMOC,EAAmBzkC,GAzMhC,GAAAkC,GAAA/I,IAyMgC,IAAA6G,QAAA,GAA4B,CAA5BA,EAAA,KAE9BnG,EAAAlB,KAAAQ,KAjMOA,MAAA2e,cAAwB,IACxB3e,MAAAurC,wBAAkC,IAkMzCvrC,MAAK6O,WAAa,IAElB7O,MAAKwrC,WAAa,GAAI1/B,MAEtB9L,MAAKyrC,iCAAmC,SAACj/B,GAAwB,MAAAzD,GAAK2iC,wBAAwBl/B,GAC9FxM,MAAK2rC,4BAA8B,SAACn/B,GAAwB,MAAAzD,GAAK6iC,mBAAmBp/B,GACpFxM,MAAK6rC,8BAAgC,SAACr/B,GAAwB,MAAAzD,GAAK+iC,qBAAqBt/B,GAGxFxM,MAAKsrC,SAAWA,GAAY,GAAIjvB,EAEhCrc,MAAK6G,SAAWA,EApMjBlG,OAAAC,eAAWyqC,EAAA9qC,UAAA,Y/Cw4SJM,I+Cx4SP,WAEC,MAAOb,MAAK+kC,W/Cy4SNriC,I+Ct4SP,SAAoBC,GAEnB,GAAI3C,KAAK+kC,UACR/kC,KAAK+kC,UAAUgH,YAAY/rC,KAE5BA,MAAK+kC,UAAYpiC,CAEjB,IAAI+K,GAAa1N,KAAKwrC,WAAW/rC,MACjC,IAAIusC,EAEJ,KAAK,GAAI9sC,GAAW,EAAGA,EAAIwO,IAAOxO,EAAG,CACpC8sC,EAAUhsC,KAAKwrC,WAAWtsC,EAG1B,IAAI8sC,EAAQnlC,SAAU,CACrBmlC,EAAQnlC,SAASsc,aAAa6oB,EAC9BA,GAAQnlC,SAASuc,UAAU4oB,GAI5BA,EAAQxoB,iCAGT,GAAIxjB,KAAK+kC,UACR/kC,KAAK+kC,UAAUkH,SAASjsC,O/Ci4SnBe,WAAY,KACZC,aAAc,M+C53SrBL,QAAAC,eAAWyqC,EAAA9qC,UAAA,a/Ck4SJM,I+Cl4SP,WAEC,MAAOwqC,GAAKnqC,W/Cm4SNH,WAAY,KACZC,aAAc,M+C93SrBL,QAAAC,eAAWyqC,EAAA9qC,UAAA,gB/Co4SJM,I+Cp4SP,WAEC,MAAOb,MAAK2e,e/Cq4SNjc,I+Cl4SP,SAAwBC,GAEvB3C,KAAK2e,cAAgBhc,G/Cm4Sf5B,WAAY,KACZC,aAAc,M+C93SrBL,QAAAC,eAAWyqC,EAAA9qC,UAAA,Y/Co4SJM,I+Cp4SP,WAEC,GAAIb,KAAKiS,eACRjS,KAAKiS,eAAeC,YAErB,OAAOlS,MAAKksC,W/Co4SNxpC,I+Cj4SP,SAAoBC,GAEnB,GAAIzD,EAEJ,IAAIc,KAAKksC,UAAW,CACnBlsC,KAAKksC,UAAU5+B,oBAAoB8O,EAAcW,eAAgB/c,KAAKyrC,iCACtEzrC,MAAKksC,UAAU5+B,oBAAoB8O,EAAcK,mBAAoBzc,KAAK2rC,4BAC1E3rC,MAAKksC,UAAU5+B,oBAAoB8O,EAAcQ,qBAAsB5c,KAAK6rC,8BAE5E,KAAK3sC,EAAI,EAAGA,EAAIc,KAAKwrC,WAAW/rC,SAAUP,EACzCc,KAAKwrC,WAAWtsC,GAAG+B,SAEpBjB,MAAKwrC,WAAW/rC,OAAS,EAG1BO,KAAKksC,UAAYvpC,CAEjB,IAAI3C,KAAKksC,UAAW,CAEnBlsC,KAAKksC,UAAU1+B,iBAAiB4O,EAAcW,eAAgB/c,KAAKyrC,iCACnEzrC,MAAKksC,UAAU1+B,iBAAiB4O,EAAcK,mBAAoBzc,KAAK2rC,4BACvE3rC,MAAKksC,UAAU1+B,iBAAiB4O,EAAcQ,qBAAsB5c,KAAK6rC,8BAEzE,IAAIM,GAAkCnsC,KAAKksC,UAAUE,aAErD,KAAKltC,EAAI,EAAGA,EAAIitC,EAAS1sC,SAAUP,EAClCc,KAAKqsC,WAAWF,EAASjtC,M/C23SrB6B,WAAY,KACZC,aAAc,M+Cr3SrBL,QAAAC,eAAWyqC,EAAA9qC,UAAA,Y/C23SJM,I+C33SP,WAEC,MAAOb,MAAKkjB,W/C43SNxgB,I+Cz3SP,SAAoBC,GAEnB,GAAIA,GAAS3C,KAAKkjB,UACjB,MAED,IAAIhkB,EACJ,IAAIwO,GAAa1N,KAAKwrC,WAAW/rC,MACjC,IAAIusC,EAEJ,KAAK9sC,EAAI,EAAGA,EAAIwO,EAAKxO,IACpB,GAAIc,KAAKkjB,YAAc8oB,EAAUhsC,KAAKwrC,WAAWtsC,IAAI2H,UAAY7G,KAAKkjB,UACrEljB,KAAKkjB,UAAUC,aAAa6oB,EAE9BhsC,MAAKkjB,UAAYvgB,CAEjB,KAAKzD,EAAI,EAAGA,EAAIwO,EAAKxO,IACpB,GAAIc,KAAKkjB,YAAc8oB,EAAUhsC,KAAKwrC,WAAWtsC,IAAI2H,UAAY7G,KAAKkjB,UACrEljB,KAAKkjB,UAAUE,UAAU4oB,I/Cs3SrBjrC,WAAY,KACZC,aAAc,M+Cj3SrBL,QAAAC,eAAWyqC,EAAA9qC,UAAA,0B/Cu3SJM,I+Cv3SP,WAEC,MAAOb,MAAKurC,yB/Cw3SN7oC,I+Cr3SP,SAAkCC,GAEjC3C,KAAKurC,wBAA0B5oC,G/Cs3SzB5B,WAAY,KACZC,aAAc,M+Ch3SrBL,QAAAC,eAAWyqC,EAAA9qC,UAAA,a/Cu3SJM,I+Cv3SP,WAKC,GAAIb,KAAKiS,eACRjS,KAAKiS,eAAeC,YAErB,OAAOlS,MAAKwrC,Y/Cu3SNzqC,WAAY,KACZC,aAAc,M+Cl3SrBL,QAAAC,eAAWyqC,EAAA9qC,UAAA,e/Cw3SJM,I+Cx3SP,WAEC,MAAOb,MAAKqjB,c/Cy3SN3gB,I+Ct3SP,SAAuBC,GAEtB3C,KAAKqjB,aAAe1gB,G/Cu3Sd5B,WAAY,KACZC,aAAc,M+Cl3SrBL,QAAAC,eAAWyqC,EAAA9qC,UAAA,kB/Cw3SJM,I+Cx3SP,WAEC,MAAOb,MAAKoN,kB/Cy3SN1K,I+Ct3SP,SAA0BC,GAEzBjC,EAAAH,UAAMgN,oBAAmB/N,KAAAQ,KAAC2C,I/Cu3SpB5B,WAAY,KACZC,aAAc,M+C31SdqqC,GAAA9qC,UAAA+rC,oBAAP,WAECtsC,KAAKsrC,SAAS7kC,oBAAoBzG,KAAKuR,WACvCvR,MAAKuR,WAAWzE,WAMVu+B,GAAA9qC,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOzB,KAAAQ,KAEbA,MAAK6G,SAAW,IAChB7G,MAAKsrC,SAAW,KAOVD,GAAA9qC,UAAAgsC,+BAAP,WAECvsC,KAAKutB,qBAEJ,IAAIvtB,KAAK+kC,UACT/kC,KAAK+kC,UAAU9jC,UAmBVoqC,GAAA9qC,UAAAwF,MAAP,WAEC,GAAIA,GAAa,GAAIslC,GAAK,KAAM,KAE1BrrC,MAAKwsC,aAAazmC,EAExB,OAAOA,GAGEslC,GAAA9qC,UAAAisC,aAAP,SAAoBzmC,GAEhBA,EAAMulC,SAAWtrC,KAAKksC,SACtBnmC,GAAMc,SAAW7G,KAAKkjB,SACtBnd,GAAMwL,WAAavR,KAAKuR,UACxBxL,GAAMwJ,MAAQvP,KAAKuP,KACnBxJ,GAAMyS,UAAYxY,KAAKwY,SACvBzS,GAAM0mC,WAAazsC,KAAKysC,UAGxB1mC,GAAMyL,KAAOxR,KAAKwR,IAClBzL,GAAMqG,aAAepM,KAAKoM,YAC1BrG,GAAM2mC,uBAAyB1sC,KAAK0sC,sBACpC3mC,GAAMsnB,aAAertB,KAAKqtB,YAC1BtnB,GAAMqS,cAAgBpY,KAAKoY,aAG3BrS,GAAM4mC,MAAQ3sC,KAAK2sC,KACzB5mC,GAAMqD,SAAWpJ,KAAKoJ,QACtBrD,GAAMsD,QAAUrJ,KAAKqJ,QAASrJ,KAAKqJ,QAAQoI,SAAW,IAEhD,IAAI/D,GAAa1N,KAAKwrC,WAAW/rC,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EAC9B6G,EAAMylC,WAAWtsC,GAAG2H,SAAW7G,KAAKwrC,WAAWtsC,GAAGwkB,uBAGtDhW,GAAM1N,KAAKwtB,WACX,IAAIxa,EAEJ,KAAK9T,EAAI,EAAGA,EAAIwO,IAAOxO,EAAG,CACtB8T,EAAMhT,KAAKytB,WAAWvuB,GAAG6G,OACzBA,GAAM+mB,SAAkC9Z,GAG5C,GAAIhT,KAAK+kC,UACLh/B,EAAMkd,SAAWjjB,KAAK+kC,UAAUh/B,QASpCslC,GAAA9qC,UAAAqsC,0BAAP,SAAiCplC,GAEhC,MAAOxH,MAAKwrC,WAAWxrC,KAAKksC,UAAUE,cAAczyB,QAAQnS,IAQtD6jC,GAAA9qC,UAAA4R,kBAAP,WAECzR,EAAAH,UAAM4R,kBAAiB3S,KAAAQ,KAEvB,IAAId,GAAU8gB,EAAU7f,EAAUuN,CAClC,IAAIy+B,GAAkCnsC,KAAKksC,UAAUE,aACrD,IAAItvB,EACJ,IAAI+vB,EACJ,IAAIhwB,GAAqBsvB,EAAS1sC,MAClC,IAAIivB,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAC9B,IAAI+d,GAAiBC,CAErB,IAAIlwB,EAAc,EAAG,CACpB3d,EAAI,CACJ4d,GAAUqvB,EAAS,EACnBU,GAAoB/vB,EAAQha,sBAE5B,IAAI9C,KAAKwtB,YAAa,CACrBqB,EAAO7uB,KAAKoS,YAAY7B,OAASme,EAAO1uB,KAAKoS,YAAYpP,EACzD8rB,GAAO9uB,KAAKoS,YAAYhE,QAAUugB,EAAO3uB,KAAKoS,YAAYnP,EAC1D8rB,GAAO/uB,KAAKoS,YAAYvE,OAAS+gB,EAAO5uB,KAAKoS,YAAYlP,EACzD4pC,GAAW9sC,KAAKoS,YAAYvE,OAASk/B,EAAW/sC,KAAKoS,YAAYlP,OAC3D,CACNwrB,EAAOG,EAAOge,EAAkB3tC,EAChCyvB,GAAOG,EAAO+d,EAAkB3tC,EAAI,EACpC,IAAG4d,EAAQkwB,QAAQlrC,GAAkB,CACpC8sB,EAAOG,EAAO,CACdge,GAAWD,EAAW,MAEnB,CACHC,EAAWD,EAAWD,EAAkB3tC,EAAI,IAI9C,IAAK8gB,EAAI,EAAGA,EAAInD,EAAamD,IAAK,CACjClD,EAAUqvB,EAASnsB,EACnB6sB,GAAoB/vB,EAAQha,sBAC5B4K,GAAMm/B,EAAkBptC,MACxB,KAAKP,EAAI,EAAGA,EAAIwO,EAAKxO,GAAG,EAAG,CAC1BiB,EAAI0sC,EAAkB3tC,EACtB,IAAIiB,EAAIuuB,EACPA,EAAOvuB,MACH,IAAIA,EAAI0uB,EACZA,EAAO1uB,CAERA,GAAI0sC,EAAkB3tC,EAAI,EAE1B,IAAIiB,EAAIwuB,EACPA,EAAOxuB,MACH,IAAIA,EAAI2uB,EACZA,EAAO3uB,CAERA,GAAI0sC,EAAkB3tC,EAAI,EAE1B,IAAIiB,EAAI4sC,EACPA,EAAW5sC,MACP,IAAIA,EAAI2sC,EACZA,EAAW3sC,EAEb,IAAK2c,EAAQkwB,QAAQlrC,GAAmB,CACvC8sB,EAAOme,CACPhe,GAAO+d,GAKT9sC,KAAKoS,YAAY7B,MAAQse,GAAQ7uB,KAAKoS,YAAYpP,EAAI0rB,EACtD1uB,MAAKoS,YAAYhE,OAAS0gB,GAAQ9uB,KAAKoS,YAAYnP,EAAI0rB,EACvD3uB,MAAKoS,YAAYvE,MAAQkhB,GAAQ/uB,KAAKoS,YAAYlP,EAAI0rB,IAKjDyc,GAAA9qC,UAAAiS,qBAAP,WAEC9R,EAAAH,UAAMiS,qBAAoBhT,KAAAQ,KAE1B,IAAIuT,GAAUvT,KAAK4N,QACnB,IAAIq/B,GAAiB15B,EAAIvQ,EAAIuQ,EAAIhD,MAAM,CACvC,IAAI28B,GAAiB35B,EAAItQ,EAAIsQ,EAAInF,OAAO,CACxC,IAAI++B,GAAiB55B,EAAIrQ,EAAIqQ,EAAI1F,MAAM,CAEvC,IAAI3O,GAAU8gB,EAAU7f,EAAUuN,CAClC,IAAIy+B,GAAkCnsC,KAAKksC,UAAUE,aACrD,IAAItvB,EACJ,IAAI+vB,EACJ,IAAIhwB,GAAqBsvB,EAAS1sC,MAClC,IAAI2tC,GAA0B,CAC9B,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAI3wB,EAAc,EAAG,CACpB3d,EAAI,CACJ4d,GAAUqvB,EAAS,EACnBU,GAAoB/vB,EAAQha,sBAC5B,KAAKkd,EAAI,EAAGA,EAAInD,EAAamD,IAAK,CACjClD,EAAUqvB,EAASnsB,EACnB6sB,GAAoB/vB,EAAQha,sBAC5B4K,GAAMm/B,EAAkBptC,MAExB,KAAKP,EAAI,EAAGA,EAAIwO,EAAKxO,GAAK,EAAG,CAC5BouC,EAAYT,EAAkB3tC,GAAK+tC,CACnCM,GAAYV,EAAkB3tC,EAAI,GAAKguC,CACvCM,GAAYX,EAAkB3tC,EAAI,GAAKiuC,CACvCE,GAAgBC,EAAUA,EAAYC,EAAUA,EAAYC,EAAUA,CAEtE,IAAIJ,EAAmBC,EACtBD,EAAmBC,IAKvBrtC,KAAKyS,eAAezP,EAAIiqC,CACxBjtC,MAAKyS,eAAexP,EAAIiqC,CACxBltC,MAAKyS,eAAevP,EAAIiqC,CACxBntC,MAAKyS,eAAesZ,OAAStU,KAAKC,KAAK01B,GAQhC/B,GAAA9qC,UAAAmrC,wBAAR,SAAgCl/B,GAE/BxM,KAAKyN,qBAQE49B,GAAA9qC,UAAAqrC,mBAAR,SAA2Bp/B,GAE1BxM,KAAKqsC,WAAW7/B,EAAMhF,aAQf6jC,GAAA9qC,UAAAurC,qBAAR,SAA6Bt/B,GAE5B,GAAIw/B,EACJ,IAAIlvB,GAA0BtQ,EAAMhF,WACpC,IAAIkG,GAAa1N,KAAKwrC,WAAW/rC,MACjC,IAAIP,EAMJ,KAAKA,EAAI,EAAGA,EAAIwO,IAAOxO,EAAG,CAEzB8sC,EAAUhsC,KAAKwrC,WAAWtsC,EAE1B,IAAI8sC,EAAQxkC,aAAesV,EAAS,CACnCkvB,EAAQ/qC,SAERjB,MAAKwrC,WAAW5xB,OAAO1a,EAAG,EAE1B,UAIAwO,CACF,MAAOxO,EAAIwO,IAAOxO,EACjBc,KAAKwrC,WAAWtsC,GAAG6jB,QAAU7jB,EAQvBmsC,GAAA9qC,UAAA8rC,WAAR,SAAmB7kC,GAElB,GAAIimC,GAA6BrC,EAAYsC,SAASlmC,EAEtD,IAAIwkC,GAAmB,GAAIyB,GAAajmC,EAAaxH,KAAM,KAC3D,IAAI0N,GAAa1N,KAAKwrC,WAAW/rC,MAEjCusC,GAAQjpB,QAAUrV,CAElB1N,MAAKwrC,WAAW99B,GAAOs+B,CAEvBhsC,MAAKyN,qBAYC49B,GAAA9qC,UAAAoG,gBAAP,SAAuBI,EAAkC8S,GAExD7Z,KAAKgY,qBAAqB21B,gBAAkB,IAE5C,IAAI3B,EAEJ,IAAIt+B,GAAa1N,KAAK4tC,UAAUnuC,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EAAG,CACpC8sC,EAAUhsC,KAAK4tC,UAAU1uC,EAEzB,IAAI8sC,EAAQxkC,YAAYb,gBAAgB3G,KAAKsP,kBAAmB08B,EAAQnlC,SAAU7G,KAAKgY,qBAAsBjR,GAA4B,CACxIA,EAA4B/G,KAAKgY,qBAAqB0hB,gBAEtD15B,MAAKgY,qBAAqB21B,gBAAkB3B,CAE5C,KAAKnyB,EACJ,MAAO,OAIV,MAAO7Z,MAAKgY,qBAAqB21B,iBAAmB,KAS9CtC,GAAA9qC,UAAAqlC,eAAP,SAAsB5Q,GAKrB,GAAIh1B,KAAKiS,eACRjS,KAAKiS,eAAeC,YAErB,IAAIxE,GAAsB1N,KAAKwrC,WAAW/rC,MAC1C,KAAK,GAAIP,GAAoB,EAAGA,EAAIwO,EAAKxO,IACxC81B,EAAS6Q,uBAAuB7lC,KAAKwrC,WAAWtsC,IAG3CmsC,GAAA9qC,UAAAstC,iCAAP,WAEC,GAAIngC,GAAa1N,KAAKwrC,WAAW/rC,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjCc,KAAKwrC,WAAWtsC,GAAGskB,iCAGd6nB,GAAA9qC,UAAAyY,iBAAP,SAAwBR,GAEvBA,EAAUstB,iBAAiB9lC,MAGrBqrC,GAAA9qC,UAAAuY,mBAAP,SAA0BN,GAEzBA,EAAUutB,mBAAmB/lC,MAkBvBqrC,GAAA9qC,UAAAwC,aAAP,SAAoBC,EAAUC,EAAU+R,EAA2Bia,GAA3B,GAAAja,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAia,QAAA,GAAyB,CAAzBA,EAAA,MAGlE,GAAGjvB,KAAKoJ,YAAY,IAAM6lB,EAAU,MAAO,MAI3C,IAAGjvB,KAAKkvB,SAAS,MAAM,MAAO,M/CmxSxB,I+C/wSF4e,GAAc9tC,KAAK0S,cAAc,GAAIrK,GAAMrF,EAAEC,GAEjD,IAAGjD,KAAKsrC,SAAU,CACjB,GAAGtrC,KAAK4N,SAAS0f,SAASwgB,EAAM9qC,EAAG8qC,EAAM7qC,EAAG,GAAG,CAC9C,IAAK+R,EACJ,MAAO,KAER,KAAI,GAAIgL,GAAW,EAAGA,EAAIhgB,KAAKsrC,SAASc,cAAc3sC,OAAQugB,IAAK,CAClE,GAAIhgB,KAAKsrC,SAASc,cAAcpsB,GAAGjd,aAAa+qC,EAAM9qC,EAAG8qC,EAAM7qC,EAAG,GAAI,C/C+wSnD,G+C5wSdmsB,GAAiCpvB,KAAKqJ,OAC1C,IAAI+lB,EAAW,CACd,GAAI2e,GAAqC/tC,KAAK,oBAE9C,IAAI+tC,EAAc,CACjB3e,EAAY2e,EAEb,IAAK,GAAI1e,GAAgB,EAAGA,EAASD,EAAU3vB,OAAQ4vB,IAAU,CAChE,GAAIC,GAA2BF,EAAUC,EACzC,IAAIC,EAAW5d,OAAQ,CACtB,GAAIyd,GAAmBG,EAAWvsB,aAAaC,EAAGC,EAAG+R,EAAW,KAChE,IAAIma,EAAS,MAAO,YAInB,CACH,MAAO,UAQZ,GAAI6e,GAAc,KAClBA,GAAMttC,EAAAH,UAAMwC,aAAYvD,KAAAQ,KAACgD,EAAGC,EAAG+R,EAAWia,EAC1C,IAAG+e,EAAK,MAAO,KAEf,OAAO,OA/oBM3C,GAAAnqC,UAAmB,cAipBlC,OAAAmqC,IAnpBmB9tB,EAqpBnB5d,GAAcJ,QAAL8rC,I/C8wSN3vB,6BAA6Bta,UAAUK,2CAA2C,2CAA2C0a,mCAAmC,mCAAmCkD,uDAAuD,uDAAuDrC,0CAA0C,0CAA0CixB,sCAAsC,wCAAwCC,0CAA0C,SAASzvC,EAAQkB,EAAOJ,GACxhB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgDh8TtB,IAAO8H,GAAQ1J,EAAgB,gCAC/B,IAAO6J,GAAQ7J,EAAgB,gCAG/B,IAAOgf,GAAShf,EAAe,oCAC/B,IAAO+J,GAAU/J,EAAe,uCAIhC,IAAO0vC,GAAmB1vC,EAAa,iEAEvC,IAAM2vC,GAAU,SAAA1tC,GAASX,EAAnBquC,EAAU1tC,EAMf,SANK0tC,KAQJ1tC,EAAAlB,KAAAQ,KANMA,MAAAquC,SAAkB,GAClBruC,MAAAsuC,UAAmB,GAOzBtuC,MAAK6O,WAAa,IAElB7O,MAAKuuC,gBAAkB,GAAGvuC,KAAKsuC,UAAUtuC,KAAKsuC,UAAYtuC,KAAKquC,SAASruC,KAAKquC,SAG7EruC,MAAKgN,YAAcxE,EAAW4jB,OAGxBgiB,EAAA7tC,UAAAse,oBAAP,WAEC,MAAO,IAAIsvB,GAGZxtC,QAAAC,eAAWwtC,EAAA7tC,UAAA,UhDo7TJM,IgDp7TP,WAEC,MAAOb,MAAKquC,UhDq7TN3rC,IgDl7TP,SAAkBC,GAEjB3C,KAAKquC,SAAW1rC,CAEhB,IAAI3C,KAAKquC,SAAW,EAAG,CACtBruC,KAAKquC,SAAW,MACV,IAAIruC,KAAKquC,SAAWruC,KAAKsuC,UAAW,CAC1CtuC,KAAKsuC,UAAYtuC,KAAKquC,QACtBruC,MAAKyN,qBAENzN,KAAKuuC,gBAAkB,GAAIvuC,KAAKsuC,UAAUtuC,KAAKsuC,UAAYtuC,KAAKquC,SAASruC,KAAKquC,WhDm7TxEttC,WAAY,KACZC,aAAc,MgDj7TdotC,GAAA7tC,UAAAiuC,eAAP,WAEC,MAAOxuC,MAAKuuC,gBAGb5tC,QAAAC,eAAWwtC,EAAA7tC,UAAA,WhDk7TJM,IgDl7TP,WAEC,MAAOb,MAAKsuC,WhDm7TN5rC,IgDh7TP,SAAmBC,GAElB3C,KAAKsuC,UAAY3rC,CAEjB,IAAI3C,KAAKsuC,UAAY,EACpBtuC,KAAKsuC,UAAY,CAElB,IAAItuC,KAAKsuC,UAAYtuC,KAAKquC,SACzBruC,KAAKquC,SAAWruC,KAAKsuC,SAEtBtuC,MAAKuuC,gBAAkB,GAAIvuC,KAAKsuC,UAAUtuC,KAAKsuC,UAAYtuC,KAAKquC,SAASruC,KAAKquC,SAC9EruC,MAAKyN,sBhD86TC1M,WAAY,KACZC,aAAc,MgD56TdotC,GAAA7tC,UAAAiS,qBAAP,WAEC9R,EAAAH,UAAMiS,qBAAoBhT,KAAAQ,KAE1BA,MAAKyS,eAAesZ,OAAS/rB,KAAKsuC,UAG5BF,GAAA7tC,UAAA4e,2BAAP,SAAkCC,EAAgBzI,EAAexB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIK,GAAe,GAAI1J,OAAc,GACrC,IAAIgK,GAAa,GAAI3N,EAGrB2N,GAAEtH,SAAS4Q,EAAO1I,wBAAwBC,GAC1Cb,GAAEkyB,OAAOhoC,KAAKsO,SAASgE,sBACvBtS,MAAKkV,OAAOY,EAAEhD,SAEdgD,GAAEtH,SAAS4Q,EAAO1I,wBAAwBC,GAC1Cb,GAAEkyB,OAAOhoC,KAAKsS,sBAEd,IAAIiB,GAAU6L,EAAOxR,QACrB,IAAI6gC,GAAc34B,EAAEooB,qBAAqB,GAAI51B,GAASiL,EAAIC,KAAMD,EAAIG,OAAQH,EAAIm7B,OAChF,IAAIC,GAAc74B,EAAEooB,qBAAqB,GAAI51B,GAASiL,EAAIwB,MAAOxB,EAAIE,IAAKF,EAAIq7B,MAC9E,IAAIC,GAAYJ,EAAGzrC,EAAEyrC,EAAGzrC,EAAIyrC,EAAGxrC,EAAEwrC,EAAGxrC,EAAIwrC,EAAGvrC,EAAEurC,EAAGvrC,CAChD,IAAI4rC,GAAYH,EAAG3rC,EAAE2rC,EAAG3rC,EAAI2rC,EAAG1rC,EAAE0rC,EAAG1rC,EAAI0rC,EAAGzrC,EAAEyrC,EAAGzrC,CAChD,IAAIjD,GAAWwX,KAAKC,KAAKm3B,EAAKC,EAAID,EAAKC,EACvC,IAAIvF,EACJ,IAAIC,EAEJ,IAAItmC,GAAW4S,EAAEi5B,QAAQ,GACzBxF,GAAOrmC,EAAIjD,CACXupC,GAAOtmC,EAAIjD,CAEXuV,GAAI,GAAKA,EAAI,GAAK+zB,EAAKtpC,CACvBuV,GAAI,IAAMg0B,GAAMA,EAAOD,EACvB/zB,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,KAAO+zB,EAAK/zB,EAAI,GAEpB,KAAKL,EACJA,EAAS,GAAIhN,EAEdgN,GAAOY,gBAAgBP,EACvBL,GAAOkE,QAAQvD,EAEf,OAAOX,GAGDi5B,GAAA7tC,UAAAqlC,eAAP,SAAsB5Q,IAKfoZ,GAAA7tC,UAAAyY,iBAAP,SAAwBR,GAEvBA,EAAUw2B,qBAAqBhvC,MAGzBouC,GAAA7tC,UAAAuY,mBAAP,SAA0BN,GAEzBA,EAAUy2B,uBAAuBjvC,MAEnC,OAAAouC,IA/HyB3wB,EAiIzB9d,GAAoBJ,QAAX6uC,IhD+5TN5yB,gCAAgCpa,UAAUwa,gCAAgCxa,UAAUkc,oCAAoC,oCAAoCvB,uCAAuC,uCAAuCmzB,iEAAiE,mEAAmEC,qCAAqC,SAAS1wC,EAAQkB,EAAOJ,GAC9a,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiDjjUtB,IAAOyI,GAAarK,EAAc,wCjDkkUlC,IiDjjUM2wC,GAAK,SAAA1uC,GAASX,EAAdqvC,EAAK1uC,EAgBV,SAhBK0uC,KAkBJ1uC,EAAAlB,KAAAQ,MAVDW,OAAAC,eAAIwuC,EAAA7uC,UAAA,YjDsjUGM,IiDtjUP,WAEC,MAAOb,MAAKqvC,WjDujUNtuC,WAAY,KACZC,aAAc,MiD7iUdouC,GAAA7uC,UAAAwF,MAAP,WAEC,GAAIA,GAAc,GAAIqpC,EACtBrpC,GAAMwJ,MAAQvP,KAAKuP,KACnBxJ,GAAMwL,WAAavR,KAAKuR,UACxBxL,GAAMyL,KAAOA,IACbzL,GAAMqD,SAAWpJ,KAAKoJ,QACtBrD,GAAMsD,QAAUrJ,KAAKqJ,QAASrJ,KAAKqJ,QAAQoI,SAAW,IACtD1L,GAAMspC,UAAYrvC,KAAKqvC,SACvB,OAAOtpC,GAET,OAAAqpC,IAhCoBtmC,EAkCpBnJ,GAAeJ,QAAN6vC,IjDgjUNtnC,wCAAwC,0CAA0CwnC,sCAAsC,SAAS7wC,EAAQkB,EAAOJ,GACnJ,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkDxmUtB,IAAOkvC,GAAS9wC,EAAe,iCAO/B,IAAOqK,GAAarK,EAAc,wCAGlC,IAAO+J,GAAU/J,EAAe,uClDwmUhC,IkD1lUM+wC,GAAM,SAAA9uC,GAASX,EAAfyvC,EAAM9uC,EA4MX,SA5MK8uC,GA4MOC,GAAA,GAAAA,QAAA,GAAgC,CAAhCA,EAAA,KAEX/uC,EAAAlB,KAAAQ,KAzMMA,MAAA0vC,iBAA0B,CAG1B1vC,MAAA2vC,YAAqBJ,EAAUpM,MAC9BnjC,MAAA4vC,SAA0B,GAAI9jC,MAC9B9L,MAAAgjB,aAAkC,GAAIlX,MAItC9L,MAAA6vC,QAAkB,KAClB7vC,MAAA8vC,QAAkB,IAiMzB9vC,MAAK6O,WAAa,IAClB7O,MAAK+vC,QAAU,GAAIjkC,OAAwB9L,KAE3CA,MAAKyvC,QAAUA,CAGfzvC,MAAKgN,YAAcxE,EAAW6jB,KA9L/B1rB,OAAAC,eAAW4uC,EAAAjvC,UAAA,kBlD8lUJM,IkD9lUP,WAEC,MAAOb,MAAK0vC,kBlD+lUNhtC,IkD5lUP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI3C,KAAK0vC,kBAAoB/sC,EAC5B,MAED3C,MAAK0vC,iBAAmB/sC,CAExB3C,MAAKgwC,uBlD0lUCjvC,WAAY,KACZC,aAAc,MkDrlUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,UlD2lUJM,IkD3lUP,WAEC,MAAOb,MAAK6vC,SlD4lUNntC,IkDzlUP,SAAkBC,GAEjB,GAAI3C,KAAK6vC,SAAWltC,EACnB,MAED3C,MAAK6vC,QAAUltC,CAEf3C,MAAKgwC,uBlDwlUCjvC,WAAY,KACZC,aAAc,MkDnlUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,UlDylUJM,IkDzlUP,WAEC,MAAOb,MAAK8vC,SlD0lUNptC,IkDvlUP,SAAkBC,GAEjB,GAAI3C,KAAK8vC,SAAWntC,EACnB,MAED3C,MAAK8vC,QAAUntC,CAEf3C,MAAKgwC,uBlDslUCjvC,WAAY,KACZC,aAAc,MkD9kUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,elDulUJM,IkDvlUP,WAEC,MAAOb,MAAKiwC,elDwlUNlvC,WAAY,KACZC,aAAc,MkDnlUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,gBlDylUJM,IkDzlUP,WAEC,MAAOb,MAAKkwC,elD0lUNnvC,WAAY,KACZC,aAAc,MkD9kUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,alD2lUJM,IkD3lUP,WAEC,MAAOb,MAAK2vC,alD4lUNjtC,IkDzlUP,SAAqBC,GAEpB,GAAI3C,KAAK2vC,aAAehtC,EACvB,MAED3C,MAAK2vC,YAAchtC,CAEnB3C,MAAKmwC,sBlDwlUCpvC,WAAY,KACZC,aAAc,MkDtlUdwuC,GAAAjvC,UAAA4vC,mBAAP,WAEC,GAAIziC,GAAa1N,KAAK4vC,SAASnwC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK4vC,SAAS1wC,GAAGkxC,mBAQZZ,GAAAjvC,UAAAyvC,oBAAP,WAEC,GAAItiC,GAAa1N,KAAK4vC,SAASnwC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK4vC,SAAS1wC,GAAGmxC,mBAQnB1vC,QAAAC,eAAW4uC,EAAAjvC,UAAA,WlDqlUJM,IkDrlUP,WAEC,MAAOb,MAAK+vC,SlDslUNhvC,WAAY,KACZC,aAAc,MkDplUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,YlDulUJM,IkDvlUP,WAEC,MAAOb,MAAK+kC,WlDwlUNhkC,WAAY,KACZC,aAAc,MkDnlUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,elDylUJM,IkDzlUP,WAEC,MAAOb,MAAKqjB,clD0lUN3gB,IkDvlUP,SAAuBC,GAEtB3C,KAAKqjB,aAAe1gB,GlDwlUd5B,WAAY,KACZC,aAAc,MkDplUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,kBlD0lUJM,IkD1lUP,WAEC,MAAOb,MAAKujB,iBlD2lUN7gB,IkDxlUP,SAA0BC,GAEzB3C,KAAKujB,gBAAkB5gB,GlDylUjB5B,WAAY,KACZC,aAAc,MkDrlUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,WlD2lUJM,IkD3lUP,WAEC,MAAOb,MAAKswC,UlD4lUN5tC,IkDzlUP,SAAmBC,GAGlB,GAAIA,GAAS3C,KAAKswC,SACjBtwC,KAAKmwC,oBAENnwC,MAAKswC,SAAW3tC,GlDylUV5B,WAAY,KACZC,aAAc,MkDrkUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,alDwkUJM,IkDxkUP,WAEC,MAAO2uC,GAAOtuC,WlDykURH,WAAY,KACZC,aAAc,MkDvkUrBL,QAAAC,eAAW4uC,EAAAjvC,UAAA,gBlD0kUJM,IkD1kUP,WAEC,MAAO,QlD2kUDE,WAAY,KACZC,aAAc,MkDrkUdwuC,GAAAjvC,UAAAU,QAAP,WAEC,GAAI/B,EACJ,IAAIwO,EAEJA,GAAM1N,KAAK4vC,SAASnwC,MACpB,KAAKP,EAAI,EAAGA,EAAIwO,EAAKxO,IACpBc,KAAK4vC,SAAS1wC,GAAG+B,SAElBjB,MAAK4vC,SAAW,GAAI9jC,MAEpB,IAAI4B,GAAa1N,KAAKgjB,aAAavjB,MACnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAKgjB,aAAa9jB,GAAG+B,SAEtBjB,MAAKgjB,aAAe,GAAIlX,OAGlB0jC,GAAAjvC,UAAAqlC,eAAP,SAAsB5Q,IAKfwa,GAAAjvC,UAAAgwC,YAAP,SAAmBvY,GAElBh4B,KAAK4vC,SAASp2B,KAAKwe,EAEnB,OAAOA,GAGDwX,GAAAjvC,UAAAiwC,eAAP,SAAsBxY,GAErBh4B,KAAK4vC,SAASh2B,OAAO5Z,KAAK4vC,SAASj2B,QAAQqe,GAAS,EAEpD,OAAOA,GAGDwX,GAAAjvC,UAAA+Y,gBAAP,SAAuBC,GAEtBvZ,KAAKgjB,aAAaxJ,KAAKD,EAEvB,OAAOA,GAIDi2B,GAAAjvC,UAAAkZ,mBAAP,SAA0BF,GAEzB,GAAIG,GAAe1Z,KAAKgjB,aAAarJ,QAAQJ,EAE7CvZ,MAAKgjB,aAAapJ,OAAOF,EAAO,EAEhC,OAAOH,GAGDi2B,GAAAjvC,UAAAyY,iBAAP,SAAwBR,GAEvBA,EAAUi4B,iBAAiBzwC,MAGrBwvC,GAAAjvC,UAAAuY,mBAAP,SAA0BN,GAEzBA,EAAUk4B,mBAAmB1wC,MAlShBwvC,GAAAtuC,UAAmB,gBAoSlC,OAAAsuC,IAtSqB1mC,EAwSLnJ,GAAAJ,QAAPiwC,IlDqjUNmB,iCAAiCvvC,UAAU0G,wCAAwC,wCAAwCiU,uCAAuC,yCAAyC60B,yCAAyC,SAASnyC,EAAQkB,EAAOJ,GAC/Q,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmDz3UtB,IAAOmf,GAAc/gB,EAAc,4CAEnC,IAAOkD,GAAgBlD,EAAc,8CAarC,IAAO4sC,GAAI5sC,EAAiB,mCAC5B,IAAO4d,GAAQ5d,EAAgB,mCAE/B,IAAOqD,GAAgBrD,EAAc,2CnD67UrC,ImDz2UMoyC,GAAS,SAAAnwC,GAASX,EAAlB8wC,EAASnwC,EAqnBd,SArnBKmwC,KAunBJnwC,EAAAlB,KAAAQ,KAAM,GAAIqc,GA3mBHrc,MAAA8wC,MAAe,GAuFvBnwC,OAAAC,eAAWiwC,EAAAtwC,UAAA,anDyxUJM,ImDzxUP,WAEC,MAAOgwC,GAAU3vC,WnD0xUXH,WAAY,KACZC,aAAc,MmD1uUrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,iBnDsvUJM,ImDtvUP,WAEC,MAAOb,MAAK+wC,gBnDuvUNhwC,WAAY,KACZC,aAAc,MmD5uUrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,cnDwvUJM,ImDxvUP,WAEC,MAAOb,MAAKgxC,anDyvUNjwC,WAAY,KACZC,aAAc,MmD9oUrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,UnDqpUJM,ImDrpUP,WAEC,MAAOb,MAAKixC,SnDspUNlwC,WAAY,KACZC,aAAc,MmDtoUd6vC,GAAAtwC,UAAA2wC,WAAP,WAEC,MAAOlxC,MAAKmxC,YAMNN,GAAAtwC,UAAA6wC,WAAP,WAEC,MAAOpxC,MAAKqxC,YA+Bb1wC,QAAAC,eAAWiwC,EAAAtwC,UAAA,YnDinUJM,ImDjnUP,WAEC,MAAOb,MAAKsxC,WnDknUNvwC,WAAY,KACZC,aAAc,MmDpgUrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,uBnD6gUJM,ImD7gUP,WAEC,MAAOb,MAAKuxC,sBnD8gUNxwC,WAAY,KACZC,aAAc,MmDtgUrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,qBnD+gUJM,ImD/gUP,WAEC,MAAOb,MAAKwxC,oBnDghUNzwC,WAAY,KACZC,aAAc,MmDt+TrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,QnDi/TJM,ImDj/TP,WAEC,MAAOb,MAAK8wC,OnDk/TNpuC,ImD/+TP,SAAgBC,GAEf,GAAI3C,KAAK8wC,OAASnuC,EACjB,MAED3C,MAAK8wC,MAAQnuC,CACb3C,MAAKyxC,enD++TC1wC,WAAY,KACZC,aAAc,MmD9+TrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,cnDi/TJM,ImDj/TP,WAEC,MAAOb,MAAK0xC,anDk/TNhvC,ImD/+TP,SAAsBC,GAErB,GAAI3C,KAAK0xC,aAAe/uC,EACvB,MACD3C,MAAK0xC,YAAc/uC,CACnB3C,MAAKyxC,enDg/TC1wC,WAAY,KACZC,aAAc,MmD19TrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,uBnDq+TJM,ImDr+TP,WAEC,MAAOb,MAAK2xC,sBnDs+TN5wC,WAAY,KACZC,aAAc,MmDj+TrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,anDu+TJM,ImDv+TP,WAEC,MAAOb,MAAK4xC,YnDw+TNlvC,ImDt+TP,SAAqBC,GAEpB3C,KAAK4xC,WAAajvC,GnDu+TZ5B,WAAY,KACZC,aAAc,MmDl+TrBL,QAAAC,eAAWiwC,EAAAtwC,UAAA,cnDw+TJM,ImDx+TP,WAEC,MAAOb,MAAK6xC,anDy+TNnvC,ImDv+TP,SAAsBC,GAErB3C,KAAK6xC,YAAclvC,GnDw+Tb5B,WAAY,KACZC,aAAc,MmD36Td6vC,GAAAtwC,UAAAkxC,YAAP,WAGC,GAAGzxC,KAAK0xC,aAAa,KACpB,MAGD,KAAK,GAAIxyC,GAASc,KAAKsrC,SAASc,cAAc3sC,OAAO,EAAGP,GAAG,EAAGA,IAC7Dc,KAAKsrC,SAAS3uB,kBAAkB3c,KAAKsrC,SAASc,cAAcltC,GAE7D,IAAGc,KAAK8wC,OAAO,GACd,MAED,IAAIpP,GAAyB,GAAI51B,MAGjC,IAAIgmC,GAAkB9xC,KAAK0xC,YAAYK,KAAK/xC,KAAK0xC,YAAYM,WAAWC,kBACxE,IAAIC,GAAgB,CACpB,IAAIC,GAA+B,IACnC,IAAInyB,GAAW,CACf,IAAI/b,GAAW,CACf,IAAImuC,GAA0BpyC,KAAKqyC,KAAKC,WAAWC,MAAM,KACzD,KAAK,GAAIC,GAAK,EAAGA,EAAKJ,EAAU3yC,OAAQ+yC,IAAM,CAC7C,GAAIC,GAAkB,CACtB,IAAIC,KACJ,KAAK,GAAIxzC,GAAI,EAAGA,EAAIkzC,EAAUI,GAAI/yC,OAAQP,IAAK,CAC9C,GAAIyzC,GAAoD3yC,KAAK0xC,YAAYM,WAAWY,oBAAoBR,EAAUI,GAAIK,WAAW3zC,GAAGozC,WACpI,IAAIK,GAAa,KAAM,CACtB,GAAIG,GAAgCH,EAAUI,OAC9C,IAAID,GAAgB,KAAM,CnD06TP,GmDx6TdE,GAAuB,CAC3B,IAAIb,GAAa,KAAM,CACtB,IAAK,GAAIluC,GAAW,EAAGA,EAAIkuC,EAAUc,iBAAiBxzC,OAAQwE,IAAK,CAClE,GAAIkuC,EAAUc,iBAAiBhvC,IAAMjE,KAAK8wC,MAAM+B,WAAW3zC,GAAI,CAC9D8zC,EAAgBb,EAAUe,cAAcjvC,EACxC,SAIHwuC,IAAgBE,EAAUQ,WAAaH,GAAiBlB,EAAc9xC,KAAK0xC,YAAY0B;KAEnF,CAEJX,GAAYzyC,KAAK0xC,YAAYM,WAAWqB,uBAAyBvB,OAG9D,CAGJW,GAAYzyC,KAAK0xC,YAAYM,WAAWqB,uBAAyBvB,EAElEY,EAAWl5B,KAAKm5B,GAEjB,GAAIW,GAAgB,CACpB,IAAGtzC,KAAK0xC,YAAY6B,OAAO,SAAS,CACnCD,GAAUtzC,KAAK4xC,WAAWa,GAAY,MAElC,IAAGzyC,KAAK0xC,YAAY6B,OAAO,QAAQ,CACvCD,EAAUtzC,KAAK4xC,WAAWa,EAI3B,IAAK,GAAIvzC,GAAI,EAAGA,EAAIkzC,EAAUI,GAAI/yC,OAAQP,IAAK,CAC9C,GAAIyzC,GAA+BD,EAAWxzC,EAC9C,IAAIyzC,GAAa,KAAM,CACtB,GAAIG,GAAgCH,EAAUI,OAC9C,IAAID,GAAgB,KAAM,CACzB,GAAIU,GAA0BV,EAAa1vC,UAAUvC,IAAIiyC,EAAaW,YACtE,IAAIC,GAA0BZ,EAAavvC,OAAO1C,IAAIiyC,EAAaW,YACnE,KAAK,GAAIzuC,GAAW,EAAGA,EAAI8tC,EAAaW,YAAazuC,IAAK,CACzD08B,EAAS1hB,KAAQwzB,EAAWxuC,EAAI,GAAK8sC,EAAcwB,CACnD5R,GAAS1hB,KAAQwzB,EAAWxuC,EAAI,EAAI,GAAK8sC,EAAcI,CACvDxQ,GAAS1hB,KAAOwzB,EAAWxuC,EAAI,EAAI,EACnC08B,GAAS1hB,KAAO0zB,EAAW1uC,EAAI,EAC/B08B,GAAS1hB,KAAO0zB,EAAW1uC,EAAI,EAAI,EACnC08B,GAAS1hB,KAAOhgB,KAAK0xC,YAAYiC,UAAU,EAC3CjS,GAAS1hB,KAAOhgB,KAAK0xC,YAAYiC,UAAU,GnDy6T1B,GmDt6TdX,GAAuB,CAC3B,IAAIb,GAAa,KAAM,CACtB,IAAK,GAAIluC,GAAW,EAAGA,EAAIkuC,EAAUc,iBAAiBxzC,OAAQwE,IAAK,CAClE,GAAIkuC,EAAUc,iBAAiBhvC,IAAMjE,KAAK8wC,MAAM+B,WAAW3zC,GAAI,CAC9D8zC,EAAgBb,EAAUe,cAAcjvC,EACxC,SAIHqvC,IAAcX,EAAUQ,WAAaH,GAAiBlB,EAAc9xC,KAAK0xC,YAAY0B,kBAEjF,CAEJE,GAAUtzC,KAAK0xC,YAAYM,WAAWqB,uBAAyBvB,OAG7D,CACHwB,GAAUtzC,KAAK0xC,YAAYM,WAAWqB,uBAAyBvB,GAGjEI,GAAUlyC,KAAK0xC,YAAYM,WAAWC,mBAAqBH,EAE5D,GAAIvvB,GAAgC,GAAI/C,GAAeI,aAAc,EACrE2C,GAAe7f,IAAIg/B,EACnB,IAAIkS,GAAoCrxB,EAAesxB,MACvDtxB,GAAethB,SACf,IAAI6yC,GAAkC,GAAIhyC,GAAiB8xC,EAC3DE,GAAelxC,OAAO,GAAIjB,GAAiBiyC,GAC3C5zC,MAAKsrC,SAAS/uB,eAAeu3B,EAC7B9zC,MAAK4tC,UAAU,GAAG/mC,SAAS7G,KAAK0xC,YAAY7qC,SAWtCgqC,GAAAtwC,UAAAwzC,WAAP,SAAkBC,GACjBh0C,KAAK8wC,OAAOkD,EAONnD,GAAAtwC,UAAA0zC,eAAP,YAcOpD,GAAAtwC,UAAA2zC,kBAAP,SAAyBC,GAExB,MAAOn0C,MAAKo0C,gBAaNvD,GAAAtwC,UAAA8zC,oBAAP,SAA2BrxC,EAAUC,GAEpC,MAAOjD,MAAKs0C,kBAcNzD,GAAAtwC,UAAAg0C,wBAAP,SAA+BJ,GAE9B,MAAOn0C,MAAKw0C,sBAuBN3D,GAAAtwC,UAAAk0C,kBAAP,SAAyB9uC,GAExB,MAAO3F,MAAK00C,gBAaN7D,GAAAtwC,UAAAo0C,oBAAP,SAA2B3xC,EAAUC,GAEpC,MAAOjD,MAAK40C,kBAaN/D,GAAAtwC,UAAAs0C,mBAAP,SAA0BV,GAEzB,MAAOn0C,MAAK80C,iBAUNjE,GAAAtwC,UAAAw0C,cAAP,SAAqBC,GAEpB,MAAOh1C,MAAKi1C,YAUNpE,GAAAtwC,UAAA20C,eAAP,SAAsBF,GAErB,MAAOh1C,MAAKm1C,aAYNtE,GAAAtwC,UAAA60C,cAAP,SAAqBJ,GAEpB,MAAOh1C,MAAKq1C,YAYNxE,GAAAtwC,UAAA+0C,YAAP,SAAmBN,GAElB,MAAOh1C,MAAKu1C,UAeN1E,GAAAtwC,UAAAi1C,mBAAP,SAA0BrB,GAEzB,MAAOn0C,MAAKy1C,iBAqBN5E,GAAAtwC,UAAAm1C,cAAP,SAAqB3nB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,EAE/E,MAAOhuB,MAAK0xC,YAoBNb,GAAAtwC,UAAAo1C,oBAAP,SAA2BhzC,IAuBpBkuC,GAAAtwC,UAAAq1C,YAAP,SAAmB7nB,EAA2BC,EAAyBgmB,IAkBhEnD,GAAAtwC,UAAAs1C,aAAP,SAAoB9nB,EAA2BC,IAkDxC6iB,GAAAtwC,UAAAu1C,cAAP,SAAqBC,EAAmBhoB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,GAkCrF6iB,GAAAmF,iBAAd,SAA+BC,EAAiBC,GAE/C,MAAO,OAGErF,GAAAtwC,UAAAwF,MAAP,WAEI,GAAIA,GAAQ,GAAI8qC,EAChB7wC,MAAKm2C,kBAAkBpwC,EACvB,OAAOA,GAGJ8qC,GAAAtwC,UAAA41C,kBAAP,SAAyBpwC,GAE3BA,EAAMulC,SAAW,GAAIjvB,EAErBtW,GAAMwL,WAAavR,KAAKuR,UACxBxL,GAAMwJ,MAAQvP,KAAKuP,KACnBxJ,GAAMyS,UAAYxY,KAAKwY,SACvBzS,GAAM0mC,WAAazsC,KAAKysC,UAGxB1mC,GAAMyL,KAAOxR,KAAKwR,IAClBzL,GAAMqG,aAAepM,KAAKoM,YAC1BrG,GAAM2mC,uBAAyB1sC,KAAK0sC,sBACpC3mC,GAAMsnB,aAAertB,KAAKqtB,YAC1BtnB,GAAMqS,cAAgBpY,KAAKoY,aAG3BrS,GAAM4mC,MAAQ3sC,KAAK2sC,KACnB5mC,GAAMqD,SAAWpJ,KAAKoJ,QACtBrD,GAAMsD,QAAUrJ,KAAKqJ,QAASrJ,KAAKqJ,QAAQoI,SAAW,InDg4ThD,ImDz3TF/D,GAAM1N,KAAKwtB,WACf,IAAIxa,EACJ,IAAI9T,EACJ,KAAKA,EAAI,EAAGA,EAAIwO,IAAOxO,EAAG,CACzB8T,EAAMhT,KAAKytB,WAAWvuB,GAAG6G,OACzBA,GAAM+mB,SAAkC9Z,GAKzCjN,EAAMqwC,UAAUp2C,KAAKo2C,SACrBrwC,GAAMswC,WAAWr2C,KAAKq2C,UAChBtwC,GAAMuwC,WAAat2C,KAAK0xC,WAExB3rC,GAAMssC,KAAOryC,KAAK8wC,MAloCXD,GAAA3vC,UAAmB,mBAooClC,OAAA2vC,IAtoCwBxF,EAwoCL1rC,GAAAJ,QAAVsxC,InD23TNpwB,4CAA4Crf,UAAU6F,8CAA8C7F,UAAUK,2CAA2C,2CAA2C0a,mCAAmC,mCAAmCgvB,mCAAmC,qCAAqCoL,uCAAuC,SAAS93C,EAAQkB,EAAOJ,GACpZ,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoD/mWtB,IAAOjB,GAAKX,EAAe,+BAE3B,IAAM+3C,GAAS,SAAA91C,GAASX,EAAlBy2C,EAAS91C,EAEd,SAFK81C,GAEOC,GAEX/1C,EAAAlB,KAAAQ,KAAMy2C,GAER,MAAAD,IANwBp3C,EAQLO,GAAAJ,QAAVi3C,IpDinWNhnB,+BAA+BpuB,YAAYy4B,yCAAyC,SAASp7B,EAAQkB,EAAOJ,GAC/G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqDhoWtB,IAAOq2C,GAAKj4C,EAAe,+BrDsoW3B,IqD/nWMm2B,GAAW,SAAAl0B,GAASX,EAApB60B,EAAWl0B,EAMhB,SANKk0B,GAMOnkB,EAAakG,GAExBjW,EAAAlB,KAAAQ,KAAMyQ,EAENzQ,MAAK22C,QAAUhgC,EAGhBhW,OAAAC,eAAWg0B,EAAAr0B,UAAA,UrDynWJM,IqDznWP,WAEC,MAAOb,MAAK22C,SrD0nWN51C,WAAY,KACZC,aAAc,MqDxoWP4zB,GAAA+C,mBAA4B,mBAe3C,OAAA/C,IAjB0B8hB,EAmBL/2C,GAAAJ,QAAZq1B,IrD8nWNgiB,+BAA+Bx1C,YAAY4a,gDAAgD,SAASvd,EAAQkB,EAAOJ,GACtH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsD7pWtB,IAAOq2C,GAAKj4C,EAAe,+BAI3B,IAAMmK,GAAkB,SAAAlI,GAASX,EAA3B6I,EAAkBlI,EAavB,SAbKkI,GAaO6H,EAAaomC,GAExBn2C,EAAAlB,KAAAQ,KAAMyQ,EACNzQ,MAAK62C,OAASA,EAdDjuC,EAAAkuC,kBAA2B,kBAC3BluC,GAAAyI,uBAAgC,uBAChCzI,GAAAuI,cAAuB,cACvBvI,GAAA+H,iBAA0B,iBAC1B/H,GAAAiI,iBAA0B,iBAC1BjI,GAAAmI,aAAsB,aACtBnI,GAAAqI,cAAuB,cACpBrI,GAAAsP,+BAAwC,6BAS1D,OAAAtP,IAlBiC8tC,EAoBjC/2C,GAA4BJ,QAAnBqJ,ItD0pWNguC,+BAA+Bx1C,YAAY4b,2CAA2C,SAASve,EAAQkB,EAAOJ,GACjH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuDvrWtB,IAAOq2C,GAAKj4C,EAAe,+BvDgsW3B,IuDrrWM2d,GAAa,SAAA1b,GAASX,EAAtBqc,EAAa1b,EAwBlB,SAxBK0b,GAwBO3L,EAAajJ,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAExB9G,EAAAlB,KAAAQ,KAAMyQ,EAENzQ,MAAK2H,aAAeH,EAMrB7G,OAAAC,eAAWwb,EAAA7b,UAAA,evDmqWJM,IuDnqWP,WAEC,MAAOb,MAAK2H,cvDoqWN5G,WAAY,KACZC,aAAc,MuD9pWdob,GAAA7b,UAAAwF,MAAP,WAEC,MAAO,IAAIqW,GAAcpc,KAAKyQ,KAAMzQ,KAAK2H,cAxC5ByU,GAAAK,mBAA4B,kBAK5BL,GAAAQ,qBAA8B,oBAK9BR,GAAAW,eAAwB,eAgCvC,OAAAX,IA/C4Bs6B,EAiD5B/2C,GAAuBJ,QAAd6c,IvDirWNw6B,+BAA+Bx1C,YAAYke,wCAAwC,SAAS7gB,EAAQkB,EAAOJ,GAC9G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwDlvWtB,IAAOq2C,GAAKj4C,EAAe,+BAE3B,IAAM+e,GAAU,SAAA9c,GAASX,EAAnByd,EAAU9c,EAKf,SALK8c,GAKO/M,GAEX/P,EAAAlB,KAAAQ,KAAMyQ,GAIA+M,EAAAjd,UAAAwF,MAAP,WAEC,MAAO,IAAIyX,GAAWxd,KAAKyQ,MAVd+M,GAAAuB,oBAA6B,mBAY5C,OAAAvB,IAfyBk5B,EAiBL/2C,GAAAJ,QAAXie,IxDgvWNo5B,+BAA+Bx1C,YAAY6kC,2CAA2C,SAASxnC,EAAQkB,EAAOJ,GACjH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyDxwWtB,IAAOq2C,GAAKj4C,EAAe,+BAE3B,IAAM4lC,GAAa,SAAA3jC,GAASX,EAAtBskC,EAAa3jC,EAIlB,SAJK2jC,GAIO5zB,GAEX/P,EAAAlB,KAAAQ,KAAMyQ,GAJO4zB,EAAAW,aAAsB,aAMrC,OAAAX,IAR4BqS,EAU5B/2C,GAAuBJ,QAAd8kC,IzDywWNuS,+BAA+Bx1C,YAAY21C,wCAAwC,SAASt4C,EAAQkB,EAAOJ,GAC9G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0DxxWtB,IAAOq2C,GAAKj4C,EAAe,+B1D+xW3B,I0DpxWMu4C,GAAU,SAAAt2C,GAASX,EAAnBi3C,EAAUt2C,EAuIf,SAvIKs2C,GAuIOvmC,GAEX/P,EAAAlB,KAAAQ,KAAMyQ,EAtIAzQ,MAAAi3C,qBAA+B,KA4ItCt2C,OAAAC,eAAWo2C,EAAAz2C,UAAA,W1DopWJM,I0DppWP,WAEC,GAAIq2C,GAAqBl3C,KAAKi3C,oBAC9Bj3C,MAAKi3C,qBAAuB,IAG5B,OAAOC,I1DopWDn2C,WAAY,KACZC,aAAc,M0D/oWdg2C,GAAAz2C,UAAA42C,gBAAP,WAECn3C,KAAKi3C,qBAAuB,KAE5B,IAAIj3C,KAAKo3C,cACRp3C,KAAKo3C,cAAcD,kBAMdH,GAAAz2C,UAAA82C,yBAAP,WAECr3C,KAAKi3C,qBAAuB,KAE5B,IAAIj3C,KAAKo3C,cACRp3C,KAAKo3C,cAAcC,2BAMdL,GAAAz2C,UAAAwF,MAAP,WAEC,GAAIuxC,GAAoB,GAAIN,GAAWh3C,KAAKyQ,KAO5C6mC,GAAOC,QAAUv3C,KAAKu3C,OACtBD,GAAOE,QAAUx3C,KAAKw3C,OAEtBF,GAAOG,KAAOz3C,KAAKy3C,IACnBH,GAAOT,OAAS72C,KAAK62C,MACrBS,GAAO3J,gBAAkB3tC,KAAK2tC,eAC9B2J,GAAOzwC,SAAW7G,KAAK6G,QACvBywC,GAAOI,GAAK13C,KAAK03C,EACjBJ,GAAOK,cAAgB33C,KAAK23C,aAC5BL,GAAOM,YAAc53C,KAAK43C,WAC1BN,GAAO59B,MAAQ1Z,KAAK0Z,KACpB49B,GAAOO,iBAAmB73C,KAAK63C,gBAC/BP,GAAOQ,MAAQ93C,KAAK83C,KAEpBR,GAAOS,QAAU/3C,KAAK+3C,OACtBT,GAAOU,SAAWh4C,KAAKg4C,QAEvBV,GAAOF,cAAgBp3C,IACvBs3C,GAAOL,qBAAuBj3C,KAAKi3C,oBAEnC,OAAOK,GAMR32C,QAAAC,eAAWo2C,EAAAz2C,UAAA,iB1DuoWJM,I0DvoWP,WAEC,MAAOb,MAAK62C,OAAOpoC,eAAesB,gBAAgB/P,KAAK23C,gB1DwoWjD52C,WAAY,KACZC,aAAc,M0DnoWrBL,QAAAC,eAAWo2C,EAAAz2C,UAAA,e1DyoWJM,I0DzoWP,WAEC,GAAIo3C,GAAuBj4C,KAAK62C,OAAOpoC,eAAeyvB,qBAAqBl+B,KAAK43C,YAChFK,GAAYviC,WAEZ,OAAOuiC,I1DyoWDl3C,WAAY,KACZC,aAAc,M0Dl2WPg2C,GAAAkB,WAAoB,aAKpBlB,GAAAmB,UAAmB,YAKnBnB,GAAAoB,SAAkB,WAKlBpB,GAAAqB,WAAoB,aAKpBrB,GAAAsB,WAAoB,aAepBtB,GAAAuB,MAAe,SAKfvB,GAAAwB,aAAsB,eAKtBxB,GAAAyB,YAAqB,cA6KpC,OAAAzB,IAnOyBN,EAqOzB/2C,GAAoBJ,QAAXy3C,I1DorWNJ,+BAA+Bx1C,YAAYs3C,kDAAkD,SAASj6C,EAAQkB,EAAOJ,GACxH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2D36WtB,IAAOq2C,GAAKj4C,EAAgB,+B3Do7W5B,I2D16WMk6C,GAAoB,SAAAj4C,GAASX,EAA7B44C,EAAoBj4C,EAczB,SAdKi4C,GAcOloC,EAAamoC,GAExBl4C,EAAAlB,KAAAQ,KAAMyQ,EAENzQ,MAAK64C,aAAeD,EAMrBj4C,OAAAC,eAAW+3C,EAAAp4C,UAAA,e3Di6WJM,I2Dj6WP,WAEC,MAAOb,MAAK64C,c3Dk6WN93C,WAAY,KACZC,aAAc,M2D35Wd23C,GAAAp4C,UAAAwF,MAAP,WAEC,MAAO,IAAI4yC,GAAqB34C,KAAKyQ,KAAMzQ,KAAK64C,cA/BnCF,GAAAG,qBAA8B,oBAiC7C,OAAAH,IAtCmCjC,EAwCL/2C,GAAAJ,QAArBo5C,I3Du6WN/B,+BAA+Bx1C,YAAY04B,2CAA2C,SAASr7B,EAAQkB,EAAOJ,GACjH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4D99WtB,IAAOq2C,GAAKj4C,EAAe,+BAE3B,IAAMo2B,GAAa,SAAAn0B,GAASX,EAAtB80B,EAAan0B,EAKlB,SALKm0B,GAKOpkB,GAEX/P,EAAAlB,KAAAQ,KAAMyQ,GALOokB,EAAAoC,iBAA0B,iBAC1BpC,GAAAqC,gBAAyB,gBAMxC,OAAArC,IAT4B6hB,EAW5B/2C,GAAuBJ,QAAds1B,I5D+9WN+hB,+BAA+Bx1C,YAAY23C,yCAAyC,SAASt6C,EAAQkB,EAAOJ,GAC/G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Dj/WtB,IAAOq2C,GAAKj4C,EAAe,+BAE3B,IAAMu6C,GAAW,SAAAt4C,GAASX,EAApBi5C,EAAWt4C,EAOhB,SAPKs4C,GAOOvoC,EAAawoC,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAAzX,IAAwB,GAAA0X,QAAA,GAAqB,CAArBA,EAAA1X,IAEhD9gC,EAAAlB,KAAAQ,KAAMyQ,EAENzQ,MAAKm5C,WAAaF,CAClBj5C,MAAKo5C,UAAYF,EAGlBv4C,OAAAC,eAAWo4C,EAAAz4C,UAAA,a7D6+WJM,I6D7+WP,WAEC,MAAOb,MAAKm5C,Y7D8+WNp4C,WAAY,KACZC,aAAc,M6D5+WrBL,QAAAC,eAAWo4C,EAAAz4C,UAAA,Y7D++WJM,I6D/+WP,WAEC,MAAOb,MAAKo5C,W7Dg/WNr4C,WAAY,KACZC,aAAc,M6DrgXPg4C,GAAAK,OAAgB,QAsB/B,OAAAL,IAxB0BtC,EA0BL/2C,GAAAJ,QAAZy5C,I7Do/WNpC,+BAA+Bx1C,YAAY6a,wCAAwC,SAASxd,EAAQkB,EAAOJ,GAC9G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8DrhXtB,IAAOq2C,GAAKj4C,EAAe,+BAI3B,IAAMoK,GAAU,SAAAnI,GAASX,EAAnB8I,EAAUnI,EAsBf,SAtBKmI,GAsBO4H,EAAakT,GAExBjjB,EAAAlB,KAAAQ,KAAMyQ,EAENzQ,MAAK2jB,cAAgBA,EArBR9a,EAAAoQ,eAAwB,cAKxBpQ,GAAA+P,mBAA4B,kBAK5B/P,GAAAwrB,kBAA2B,kBAa1C,OAAAxrB,IA5ByB6tC,EA8BzB/2C,GAAoBJ,QAAXsJ,I9D4gXN+tC,+BAA+Bx1C,YAAY0hB,8CAA8C,SAASrkB,EAAQkB,EAAOJ,GACpH,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+DljXtB,IAAOq2C,GAAKj4C,EAAe,+B/D2jX3B,I+DnjXMojB,GAAgB,SAAAnhB,GAASX,EAAzB8hB,EAAgBnhB,EA8BrB,SA9BKmhB,GA8BOpR,EAAa8R,GAExB7hB,EAAAlB,KAAAQ,KAAMyQ,EAENzQ,MAAKs5C,gBAAkB/2B,EAMxB5hB,OAAAC,eAAWihB,EAAAthB,UAAA,kB/D0hXJM,I+D1hXP,WAEC,MAAOb,MAAKs5C,iB/D2hXNv4C,WAAY,KACZC,aAAc,M+DphXd6gB,GAAAthB,UAAAwF,MAAP,WAEC,MAAO,IAAI8b,GAAiB7hB,KAAKyQ,KAAMzQ,KAAKs5C,iBA/C/Bz3B,GAAAQ,gBAAyB,gBAKzBR,GAAAS,iBAA0B,iBAK1BT,GAAAW,iBAA0B,iBAK1BX,GAAAY,kBAA2B,kBAkC1C,OAAAZ,IAtD+B60B,EAwDL/2C,GAAAJ,QAAjBsiB,I/D4iXN+0B,+BAA+Bx1C,YAAYm4C,wCAAwC,SAAS96C,EAAQkB,EAAOJ,GAC9G,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgEhnXtB,IAAOq2C,GAAKj4C,EAAe,+BAO3B,IAAM+6C,GAAU,SAAA94C,GAASX,EAAnBy5C,EAAU94C,EA4Gf,SA5GK84C,GA4GO/oC,GAEX/P,EAAAlB,KAAAQ,KAAMyQ,EA3GAzQ,MAAAi3C,qBAA+B,KAiHtCt2C,OAAAC,eAAW44C,EAAAj5C,UAAA,WhEugXJM,IgEvgXP,WAEC,GAAIq2C,GAAqBl3C,KAAKi3C,oBAC9Bj3C,MAAKi3C,qBAAuB,IAG5B,OAAOC,IhEugXDn2C,WAAY,KACZC,aAAc,MgElgXdw4C,GAAAj5C,UAAA42C,gBAAP,WAECn3C,KAAKi3C,qBAAuB,KAE5B,IAAIj3C,KAAKo3C,cACRp3C,KAAKo3C,cAAcD,kBAMdqC,GAAAj5C,UAAA82C,yBAAP,WAECr3C,KAAKi3C,qBAAuB,KAE5B,IAAIj3C,KAAKo3C,cACRp3C,KAAKo3C,cAAcC,2BAMdmC,GAAAj5C,UAAAwF,MAAP,WAEC,GAAIuxC,GAAoB,GAAIkC,GAAWx5C,KAAKyQ,KAO5C6mC,GAAOC,QAAUv3C,KAAKu3C,OACtBD,GAAOE,QAAUx3C,KAAKw3C,OAEtBF,GAAOG,KAAOz3C,KAAKy3C,IACnBH,GAAOT,OAAS72C,KAAK62C,MACrBS,GAAO3J,gBAAkB3tC,KAAK2tC,eAC9B2J,GAAOzwC,SAAW7G,KAAK6G,QACvBywC,GAAOI,GAAK13C,KAAK03C,EACjBJ,GAAOK,cAAgB33C,KAAK23C,aAC5BL,GAAOM,YAAc53C,KAAK43C,WAC1BN,GAAO59B,MAAQ1Z,KAAK0Z,KACpB49B,GAAOO,iBAAmB73C,KAAK63C,gBAE/BP,GAAOS,QAAU/3C,KAAK+3C,OACtBT,GAAOU,SAAWh4C,KAAKg4C,QAEvBV,GAAOF,cAAgBp3C,IAEvB,OAAOs3C,GAMR32C,QAAAC,eAAW44C,EAAAj5C,UAAA,iBhE0/WJM,IgE1/WP,WAEC,MAAOb,MAAK62C,OAAOpoC,eAAesB,gBAAgB/P,KAAK23C,gBhE2/WjD52C,WAAY,KACZC,aAAc,MgEt/WrBL,QAAAC,eAAW44C,EAAAj5C,UAAA,ehE4/WJM,IgE5/WP,WAEC,GAAIo3C,GAAuBj4C,KAAK62C,OAAOpoC,eAAeyvB,qBAAqBl+B,KAAK43C,YAChFK,GAAYviC,WAEZ,OAAOuiC,IhE4/WDl3C,WAAY,KACZC,aAAc,MgExrXPw4C,GAAAC,UAAmB,YAKnBD,GAAAE,YAAqB,cAKrBF,GAAAG,WAAoB,aAKpBH,GAAAI,UAAmB,YAKnBJ,GAAAK,WAAoB,aAyKnC,OAAAL,IAtMyB9C,EAwMzB/2C,GAAoBJ,QAAXi6C,IhEmhXN5C,+BAA+Bx1C,YAAY04C,sDAAsD,SAASr7C,EAAQkB,EAAOJ,GiEpuX5H,GAAOw6C,GAAat7C,EAAc,qCAClC,IAAOu7C,GAAev7C,EAAc,uCAGpC,IAAOoiB,GAAWpiB,EAAe,sCACjC,IAAO+wC,GAAM/wC,EAAgB,qCAE7B,IAAOw7C,GAAax7C,EAAc,6CAClC,IAAOy7C,GAAez7C,EAAc,8CACpC,IAAO07C,GAAiB17C,EAAa,gDAGrC,IAAM27C,GAAsB,WAA5B,QAAMA,MAUSA,EAAAC,mBAAd,SAAiC1M,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAEhC,GAAIA,GAAmB,MAAQA,EAAgBX,QAAQnsB,GAAc,CACpE,IAAKu5B,EAAuBE,sBAC3BF,EAAuBG,4BAExB,OAAOH,GAAuBE,sBAG/B,GAAI3M,GAAmB,MAAQA,EAAgBX,QAAQwC,GAAS,CAC/D,IAAK4K,EAAuBI,4BAC3BJ,EAAuBK,kCAExB,OAAOL,GAAuBI,4BAG/B,IAAKJ,EAAuBM,wBAC3BN,EAAuBO,8BAExB,OAAOP,GAAuBM,wBAGjBN,GAAAQ,kBAAd,SAAgCjN,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAE/B,GAAIA,GAAmB,MAAQA,EAAgBX,QAAQwC,GAAS,CAC/D,IAAK4K,EAAuBS,oBAC3BT,EAAuBU,0BAExB,OAAOV,GAAuBS,oBAG/B,IAAKT,EAAuBW,gBAC3BX,EAAuBY,sBAExB,OAAOZ,GAAuBW,gBAGhBX,GAAAY,qBAAf,WAEC,IAAKZ,EAAuBa,sBAC3Bb,EAAuBc,8BAExBd,GAAuBW,gBAAkB,GAAIb,GAAgBE,EAAuBa,sBACpFb,GAAuBW,gBAAgBvpC,KAAO,iBAGhC4oC,GAAAU,yBAAf,WAEC,IAAKV,EAAuBe,wBAC3Bf,EAAuBgB,gCAExBhB,GAAuBS,oBAAsB,GAAIV,GAAkBC,EAAuBe,wBAC1Ff,GAAuBS,oBAAoBrpC,KAAO,qBAGpC4oC,GAAAgB,+BAAf,WAEC,IAAKhB,EAAuBa,sBAC3Bb,EAAuBc,8BAExB,IAAIh7C,GAAI,GAAI85C,GAAgBI,EAAuBa,sBAAsB1qC,MAEzE,KAAK,GAAIrR,GAAW,EAAGA,EAAI,EAAGA,IAC7BgB,EAAEm7C,KAAKn8C,EAAGk7C,EAAuBa,sBAElCb,GAAuBe,wBAA0Bj7C,EAGnCk6C,GAAAc,6BAAf,WAEC,GAAIh7C,GAAkB,GAAI65C,GAAc,EAAG,EAAG,MAAO,EjEqsX/C,IiElsXF76C,GAAU8gB,CACd,KAAK9gB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,IAAK8gB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACvB,GAAKA,EAAI,EAAM9gB,EAAI,EAAI,CACtBgB,EAAEo7C,SAASp8C,EAAG8gB,EAAG,YAKpBo6B,EAAuBa,sBAAwB/6C,EAGjCk6C,GAAAO,6BAAf,WAEC,IAAKP,EAAuBW,gBAC3BX,EAAuBY,sBAExBZ,GAAuBM,wBAA0B,GAAIT,GAAcG,EAAuBW,gBAC1FX,GAAuBM,wBAAwBa,OAAS,KACxDnB,GAAuBM,wBAAwBlb,OAAS,KACxD4a,GAAuBM,wBAAwBlpC,KAAO,yBAGxC4oC,GAAAK,iCAAf,WAEC,IAAKL,EAAuBS,oBAC3BT,EAAuBU,0BAExBV,GAAuBI,4BAA8B,GAAIP,GAAcG,EAAuBS,oBAC9FT,GAAuBI,4BAA4Be,OAAS,KAC5DnB,GAAuBI,4BAA4Bhb,OAAS,KAC5D4a,GAAuBI,4BAA4BhpC,KAAO,6BAG5C4oC,GAAAG,2BAAf,WAECH,EAAuBE,sBAAwB,GAAIL,EACnDG,GAAuBE,sBAAsB9oC,KAAO,uBAEtD,OAAA4oC,KAEAz6C,GAAgCJ,QAAvB66C,IjE2rXNoB,qCAAqCp6C,UAAUq6C,uCAAuCr6C,UAAUwf,sCAAsC,sCAAsC0uB,qCAAqC,qCAAqCoM,6CAA6C,6CAA6CC,8CAA8C,8CAA8CC,gDAAgD,kDAAkD7hB,4CAA4C,SAASt7B,EAAQkB,EAAOJ,GkEn0XrlB,GAAO+I,GAAQ7J,EAAgB,gCAK/B,IAAOo9C,GAAcp9C,EAAc,uClEq0XnC,IkE/zXMq2B,GAAY,WAqCjB,QArCKA,KAAN,GAAA/rB,GAAA/I,IAISA,MAAA87C,YAA0B,GAAIhwC,MAM9B9L,MAAA+7C,YAAuB,GAAIzzC,EAE3BtI,MAAAg8C,cAAsC,GAAIlwC,MAI1C9L,MAAAi8C,SAA0B,GAAIJ,GAAeA,EAAezD,SAC5Dp4C,MAAAk8C,YAA6B,GAAIL,GAAeA,EAAetD,MAC/Dv4C,MAAAm8C,UAA2B,GAAIN,GAAeA,EAAe1D,UAC7Dn4C,MAAAo8C,WAA4B,GAAIP,GAAeA,EAAexD,WAC9Dr4C,MAAAq8C,WAA4B,GAAIR,GAAeA,EAAevD,WAC9Dt4C,MAAAs8C,WAA4B,GAAIT,GAAeA,EAAe3D,WAC9Dl4C,MAAAu8C,YAA6B,GAAIV,GAAeA,EAAepD,YAC/Dz4C,MAAAw8C,kBAAmC,GAAIX,GAAeA,EAAerD,aAgB5Ex4C,MAAKy8C,gBAAkB,SAACjwC,GAAqB,MAAAzD,GAAK2zC,QAAQlwC,GAC1DxM,MAAK28C,sBAAwB,SAACnwC,GAAqB,MAAAzD,GAAK6zC,cAAcpwC,GACtExM,MAAK68C,oBAAsB,SAACrwC,GAAqB,MAAAzD,GAAK+zC,YAAYtwC,GAClExM,MAAK+8C,oBAAsB,SAACvwC,GAAqB,MAAAzD,GAAKi0C,YAAYxwC,GAClExM,MAAKi9C,kBAAoB,SAACzwC,GAAqB,MAAAzD,GAAKm0C,UAAU1wC,GAC9DxM,MAAKm9C,qBAAuB,SAAC3wC,GAAqB,MAAAzD,GAAKq0C,aAAa5wC,GACpExM,MAAKq9C,oBAAsB,SAAC7wC,GAAqB,MAAAzD,GAAKu0C,YAAY9wC,GAClExM,MAAKu9C,mBAAqB,SAAC/wC,GAAqB,MAAAzD,GAAKy0C,WAAWhxC,IAGnDsoB,EAAA1D,YAAd,WAEC,GAAIpxB,KAAKy9C,UACR,MAAOz9C,MAAKy9C,SAEb,OAAQz9C,MAAKy9C,UAAY,GAAI3oB,GAGvBA,GAAAv0B,UAAAq4B,gBAAP,SAAuBN,GAGtB,GAAIt4B,KAAKy4B,mBAAqBz4B,KAAK09C,yBAA0B,CAC5D,GAAI19C,KAAK09C,yBACR19C,KAAK29C,cAAc39C,KAAKm8C,UAAWn8C,KAAK49C,gBAAiB59C,KAAK09C,yBAE/D,IAAI19C,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKs8C,WAAYt8C,KAAK49C,iBAI3C,GAAItlB,GAAkBt4B,KAAKy4B,kBAC1Bz4B,KAAK29C,cAAe39C,KAAKq8C,WAAYr8C,KAAK49C,gBAE3C,IAAIpxC,EACJ,IAAIqxC,ElEmyXE,IkEhyXFnwC,GAAa1N,KAAKg8C,cAAcv8C,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EAAG,CACpCsN,EAAQxM,KAAKg8C,cAAc98C,EAC3B2+C,GAAarxC,EAAMqqC,MAGnB,OAAOgH,EAAY,CAClB,GAAIA,EAAW5jC,mBACd4jC,EAAWllC,cAAcnM,EAE1BqxC,GAAaA,EAAWnsC,QAK1B1R,KAAKg8C,cAAcv8C,OAAS,CAE5BO,MAAK09C,yBAA2B19C,KAAKy4B,iBAErCz4B,MAAKw4B,cAAgB,MAmBf1D,GAAAv0B,UAAAi2B,aAAP,SAAoBihB,GAEnBA,EAAKqG,YAAYtwC,iBAAiB,QAASxN,KAAKy8C,gBAChDhF,GAAKqG,YAAYtwC,iBAAiB,WAAYxN,KAAK28C,sBACnDlF,GAAKqG,YAAYtwC,iBAAiB,aAAcxN,KAAK68C,oBACrDpF,GAAKqG,YAAYtwC,iBAAiB,YAAaxN,KAAK68C,oBACpDpF,GAAKqG,YAAYtwC,iBAAiB,YAAaxN,KAAK+8C,oBACpDtF,GAAKqG,YAAYtwC,iBAAiB,UAAWxN,KAAKi9C,kBAClDxF,GAAKqG,YAAYtwC,iBAAiB,WAAYxN,KAAKi9C,kBACnDxF,GAAKqG,YAAYtwC,iBAAiB,aAAcxN,KAAKm9C,qBACrD1F,GAAKqG,YAAYtwC,iBAAiB,YAAaxN,KAAKq9C,oBACpD5F,GAAKqG,YAAYtwC,iBAAiB,WAAYxN,KAAKu9C,mBAEnDv9C,MAAK87C,YAAYtiC,KAAKi+B,GAGhB3iB,GAAAv0B,UAAAu4B,eAAP,SAAsB2e,GAErBA,EAAKqG,YAAYxwC,oBAAoB,QAAStN,KAAKy8C,gBACnDhF,GAAKqG,YAAYxwC,oBAAoB,WAAYtN,KAAK28C,sBACtDlF,GAAKqG,YAAYxwC,oBAAoB,aAActN,KAAK68C,oBACxDpF,GAAKqG,YAAYxwC,oBAAoB,YAAatN,KAAK68C,oBACvDpF,GAAKqG,YAAYxwC,oBAAoB,YAAatN,KAAK+8C,oBACvDtF,GAAKqG,YAAYxwC,oBAAoB,WAAYtN,KAAKi9C,kBACtDxF,GAAKqG,YAAYxwC,oBAAoB,UAAWtN,KAAKi9C,kBACrDxF,GAAKqG,YAAYxwC,oBAAoB,aAActN,KAAKm9C,qBACxD1F,GAAKqG,YAAYxwC,oBAAoB,YAAatN,KAAKq9C,oBACvD5F,GAAKqG,YAAYxwC,oBAAoB,WAAYtN,KAAKu9C,mBAEtDv9C,MAAK87C,YAAYiC,MAAM/9C,KAAK87C,YAAYniC,QAAQ89B,GAAO,GAOhD3iB,GAAAv0B,UAAAo9C,cAAR,SAAsBnxC,EAAsBwxC,EAAwBC,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAGnE,GAAID,EAAa,CAChBxxC,EAAMurC,QAAUiG,EAAYjG,OAC5BvrC,GAAM0xC,OAASF,EAAYE,MAC3B1xC,GAAMwrC,SAAWgG,EAAYhG,QAC7BxrC,GAAM+qC,QAAUyG,EAAYG,OAC5B3xC,GAAMgrC,QAAUwG,EAAYI,QAG7B,GAAIH,GAAY,KACfA,EAAWj+C,KAAKy4B,iBAGjB,IAAIwlB,EAAU,CAEbzxC,EAAMqqC,OAASoH,EAASt6B,aACxBnX,GAAMmhC,gBAAkBsQ,EAAStQ,eAEjCnhC,GAAMkrC,GAAKuG,EAASvG,EAEpBlrC,GAAMmrC,cAAgBsG,EAAStG,cAAesG,EAAStG,cAAc5xC,QAAU,IAE/EyG,GAAMorC,YAAcqG,EAASrG,YAAaqG,EAASrG,YAAY7xC,QAAU,IAEzEyG,GAAMkN,MAAQukC,EAASvkC,UACjB,CAENlN,EAAMkrC,GAAK,IACXlrC,GAAMqqC,OAAS,IACfrqC,GAAMmrC,cAAgB33C,KAAK+7C,WAC3BvvC,GAAMorC,YAAc53C,KAAK+7C,WACzBvvC,GAAMkN,MAAQ,CACdlN,GAAMqrC,iBAAmB,EAI1B73C,KAAKg8C,cAAcxiC,KAAKhN,GAOjBsoB,GAAAv0B,UAAAy8C,YAAR,SAAoBxwC,GAEnBxM,KAAKq+C,gBAAgB7xC,EAErB,IAAIxM,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKq8C,WAAYr8C,KAAK49C,gBAAkBpxC,GAGrDsoB,GAAAv0B,UAAAi9C,WAAR,SAAmBhxC,GAElBxM,KAAKu4B,YAAc,IAEnBv4B,MAAKq+C,gBAAgB7xC,EAErB,IAAIxM,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKm8C,UAAW3vC,GAG7BsoB,GAAAv0B,UAAA+8C,YAAR,SAAoB9wC,GAEnBxM,KAAKu4B,YAA+B/rB,EAAM2I,MAE1CnV,MAAKq+C,gBAAgB7xC,EAErB,IAAIxM,KAAKy4B,kBACRz4B,KAAK29C,cAAe39C,KAAKs8C,WAAY9vC,GAG/BsoB,GAAAv0B,UAAAm8C,QAAR,SAAgBlwC,GAEfxM,KAAKq+C,gBAAgB7xC,EAErB,IAAIxM,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKk8C,YAAa1vC,GAG/BsoB,GAAAv0B,UAAAq8C,cAAR,SAAsBpwC,GAErBxM,KAAKq+C,gBAAgB7xC,EAErB,IAAIxM,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKw8C,kBAAmBhwC,GAGrCsoB,GAAAv0B,UAAAu8C,YAAR,SAAoBtwC,GAEnBA,EAAM8xC,gBAENt+C,MAAKu4B,YAA+B/rB,EAAM2I,MAE1CnV,MAAKq+C,gBAAgB7xC,EAErB,IAAIxM,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKo8C,WAAY5vC,GAG9BsoB,GAAAv0B,UAAA28C,UAAR,SAAkB1wC,GAEjBA,EAAM8xC,gBAENt+C,MAAKq+C,gBAAgB7xC,EAErB,IAAIxM,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKi8C,SAAWzvC,GAG7BsoB,GAAAv0B,UAAA68C,aAAR,SAAqB5wC,GAEpBxM,KAAKq+C,gBAAgB7xC,EAErB,IAAIxM,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKu8C,YAAa/vC,GAI/BsoB,GAAAv0B,UAAA89C,gBAAR,SAAwB7xC,GAEvB,GAAIxM,KAAKw4B,cACR,MAED,IAAIif,EACJ,IAAI8G,EACJ,IAAIC,GAAiBhyC,EAAM2xC,SAAW,KAAO3xC,EAAM2xC,QAAU3xC,EAAMiyC,eAAe,GAAGN,OACrF,IAAIO,GAAiBlyC,EAAM4xC,SAAW,KAAO5xC,EAAM4xC,QAAU5xC,EAAMiyC,eAAe,GAAGL,OACrF,IAAI1wC,GAAa1N,KAAK87C,YAAYr8C,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAAK,CACpCu4C,EAAOz3C,KAAK87C,YAAY58C,EACxBq/C,GAAS9G,EAAKqG,YAAYa,uBAC1B,IAAIH,EAASD,EAAO/qC,MAAQgrC,EAASD,EAAOxpC,OAAS2pC,EAASH,EAAO9qC,KAAOirC,EAASH,EAAO7qC,OAAQ,CACnG+jC,EAAK9gB,SAAW,IAChB8gB,GAAK7gB,SAAW,SACV,CACN6gB,EAAK9gB,SAAW6nB,EAASD,EAAO/qC,IAChCikC,GAAK7gB,SAAW8nB,EAASH,EAAO9qC,GAChCgkC,GAAKle,gBAEL,IAAIke,EAAKhe,aAAez5B,KAAKy4B,kBAC5B,OAIHz4B,KAAKw4B,cAAgB,KAEvB,OAAA1D,KAEAn1B,GAAsBJ,QAAbu1B,IlE6uXNlZ,gCAAgCxa,UAAU21C,uCAAuC,yCAAyC6H,4CAA4C,SAASngD,EAAQkB,EAAOJ,GmEpiYjM,GAAO+I,GAAQ7J,EAAgB,gCAK/B,IAAOogD,GAAcpgD,EAAc,uCAEnC,IAAMqgD,GAAY,WA6BjB,QA7BKA,KAAN,GAAA/1C,GAAA/I,IAISA,MAAA++C,aAAuB,IACvB/+C,MAAA+7C,YAAuB,GAAIzzC,EAO3BtI,MAAAg8C,cAAsC,GAAIlwC,MAO1C9L,MAAAg/C,UAA2B,GAAIH,GAAeA,EAAejF,UAC7D55C,MAAAi/C,YAA6B,GAAIJ,GAAeA,EAAenF,YAC/D15C,MAAAk/C,WAA4B,GAAIL,GAAeA,EAAelF,WAC9D35C,MAAAm/C,UAA2B,GAAIN,GAAeA,EAAepF,UAC7Dz5C,MAAAo/C,WAA4B,GAAIP,GAAeA,EAAehF,WAQrE75C,MAAKq/C,aAAe,GAAIvzC,MACxB9L,MAAKs/C,kBAAoB,GAAI3+C,OAC7Bm+C,GAAaS,6BAA+B,GAAI5+C,OAChDm+C,GAAaU,oCAAsC,GAAI7+C,OAEvDX,MAAKy/C,qBAAuB,SAACjzC,GAAqB,MAAAzD,GAAK22C,aAAalzC,GACpExM,MAAK2/C,oBAAsB,SAACnzC,GAAqB,MAAAzD,GAAK62C,YAAYpzC,GAClExM,MAAK6/C,mBAAqB,SAACrzC,GAAqB,MAAAzD,GAAK+2C,WAAWtzC,IAGnDsyC,EAAA1tB,YAAd,WAEC,GAAIpxB,KAAKy9C,UACR,MAAOz9C,MAAKy9C,SAEb,OAAQz9C,MAAKy9C,UAAY,GAAIqB,GAOvBA,GAAAv+C,UAAAg5B,eAAP,SAAsBwmB,IAWfjB,GAAAv+C,UAAAy/C,gBAAP,SAAuBD,GAEtB,GAAI7gD,EACJ,KAAKA,EAAI,EAAGA,EAAIc,KAAKigD,kBAAmB/gD,EAAG,CAC1Cc,KAAKkgD,YAAclgD,KAAKq/C,aAAangD,EAErCc,MAAKy4B,kBAAoBqmB,EAAaS,6BAA8Bv/C,KAAKkgD,YAAYv6C,GACrF3F,MAAK09C,yBAA2BoB,EAAaU,oCAAqCx/C,KAAKkgD,YAAYv6C,GACnG,IAAI3F,KAAKy4B,mBAAqBz4B,KAAK09C,yBAA0B,CAC5D,GAAI19C,KAAK09C,yBACR19C,KAAK29C,cAAc39C,KAAKg/C,UAAWh/C,KAAKmgD,gBAAiBngD,KAAK09C,yBAA0B19C,KAAKkgD,YAC9F,IAAIlgD,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKo/C,WAAYp/C,KAAKmgD,gBAAiBngD,KAAKy4B,kBAAmBz4B,KAAKkgD,aAGzF,GAAIH,GAAkB//C,KAAKy4B,kBAC1Bz4B,KAAK29C,cAAc39C,KAAKk/C,WAAYl/C,KAAKmgD,gBAAiBngD,KAAKy4B,kBAAmBz4B,KAAKkgD,aAGzF,GAAI1zC,EACJ,IAAIqxC,EnEogYE,ImEjgYFnwC,GAAa1N,KAAKg8C,cAAcv8C,MACpC,KAAKP,EAAI,EAAGA,EAAIwO,IAAOxO,EAAG,CAEzBsN,EAAQxM,KAAKg8C,cAAc98C,EAC3B2+C,GAAarxC,EAAMqqC,MAEnB,OAAOgH,IAAeA,EAAW5jC,mBAChC4jC,EAAaA,EAAWnsC,MAEzB,IAAImsC,EACHA,EAAWllC,cAAcnM,GAE3BxM,KAAKg8C,cAAcv8C,OAAS,CAE5BO,MAAK++C,aAAe,KAEpB,KAAK7/C,EAAI,EAAGA,EAAIc,KAAKigD,kBAAmB/gD,EAAG,CAC1Cc,KAAKkgD,YAAclgD,KAAKq/C,aAAcngD,EACtC4/C,GAAaU,oCAAqCx/C,KAAKkgD,YAAYv6C,IAAOm5C,EAAaS,6BAA8Bv/C,KAAKkgD,YAAYv6C,KAIjIm5C,GAAAv+C,UAAAi2B,aAAP,SAAoBihB,GAEnBA,EAAKqG,YAAYtwC,iBAAiB,aAAcxN,KAAKy/C,qBACrDhI,GAAKqG,YAAYtwC,iBAAiB,YAAaxN,KAAK2/C,oBACpDlI,GAAKqG,YAAYtwC,iBAAiB,WAAYxN,KAAK6/C,oBAG7Cf,GAAAv+C,UAAAu4B,eAAP,SAAsB2e,GAErBA,EAAKqG,YAAYxwC,oBAAoB,aAActN,KAAKy/C,qBACxDhI,GAAKqG,YAAYxwC,oBAAoB,YAAatN,KAAK2/C,oBACvDlI,GAAKqG,YAAYxwC,oBAAoB,WAAYtN,KAAK6/C,oBAO/Cf,GAAAv+C,UAAAo9C,cAAR,SAAsBnxC,EAAsBwxC,EAAwBC,EAA6BmC,GAGhG5zC,EAAMurC,QAAUiG,EAAYjG,OAC5BvrC,GAAM0xC,OAASF,EAAYE,MAC3B1xC,GAAMwrC,SAAWgG,EAAYhG,QAC7BxrC,GAAM+qC,QAAU6I,EAAMp9C,CACtBwJ,GAAMgrC,QAAU4I,EAAMn9C,CACtBuJ,GAAM6zC,aAAeD,EAAMz6C,EAG3B,IAAIs4C,EAAU,CAEbzxC,EAAMqqC,OAASoH,EAASt6B,aACxBnX,GAAMmhC,gBAAkBsQ,EAAStQ,eAEjCnhC,GAAMkrC,GAAKuG,EAASvG,EAEpBlrC,GAAMmrC,cAAgBsG,EAAStG,cAAesG,EAAStG,cAAc5xC,QAAU,IAE/EyG,GAAMorC,YAAcqG,EAASrG,YAAaqG,EAASrG,YAAY7xC,QAAU,IAEzEyG,GAAMkN,MAAQukC,EAASvkC,KAEvBlN,GAAMqrC,iBAAmBoG,EAASvkC,UAE5B,CAENlN,EAAMkrC,GAAK,IACXlrC,GAAMqqC,OAAS,IACfrqC,GAAMmrC,cAAgB33C,KAAK+7C,WAC3BvvC,GAAMorC,YAAc53C,KAAK+7C,WACzBvvC,GAAMkN,MAAQ,CACdlN,GAAMqrC,iBAAmB,EAI1B73C,KAAKg8C,cAAcxiC,KAAKhN,GAOjBsyC,GAAAv+C,UAAAm/C,aAAR,SAAqBlzC,GAGpB,GAAI4zC,GAAmB,GAAIE,EAI3BtgD,MAAKigD,iBACLjgD,MAAKq/C,aAAa7lC,KAAK4mC,EACvBpgD,MAAKs/C,kBAAmBc,EAAMz6C,IAAOy6C,CAIrCpgD,MAAKy4B,kBAAoBqmB,EAAaS,6BAA8Ba,EAAMz6C,GAC1E,IAAI3F,KAAKy4B,kBACRz4B,KAAK29C,cAAc39C,KAAKi/C,YAAazyC,EAAOxM,KAAKy4B,kBAAmB2nB,EAErEpgD,MAAK++C,aAAe,KAGbD,GAAAv+C,UAAAq/C,YAAR,SAAoBpzC,IAkBZsyC,GAAAv+C,UAAAu/C,WAAR,SAAmBtzC,IAiBpB,OAAAsyC,KAKA,IAAMwB,GAAU,WAAhB,QAAMA,MAKN,MAAAA,KA2E+G3gD,GAAAJ,QAlFtGu/C,InE6+XNljC,gCAAgCxa,UAAUm4C,uCAAuC,yCAAyCmC,8CAA8C,SAASj9C,EAAQkB,EAAOJ,GACnM,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoE9tYtB,IAAOkgD,GAAO9hD,EAAgB,+BAE9B,IAAO+hD,GAAY/hD,EAAe,4CAElC,IAAOy7C,GAAez7C,EAAc,8CACpC,IAAOgiD,GAAWhiD,EAAe,0CpEmuYjC,IoE7tYMw7C,GAAa,SAAAv5C,GAASX,EAAtBk6C,EAAav5C,EAyBlB,SAzBKu5C,GAyBOyG,EAAyBC,EAAwBphB,EAAwBgc,GAAzE,GAAAmF,QAAA,GAAuB,CAAvBA,EAAA,KAAyB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,KAAwB,GAAAphB,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAgc,QAAA,GAAsB,CAAtBA,EAAA,MAEpF76C,EAAAlB,KAAAQ,KAvBUA,MAAA4gD,eAAyB,KAyBnC,IAAIF,YAAwBH,GAC3BG,EAAe,GAAIxG,GAAgBwG,EAEpC,IAAIA,YAAwBD,GAAa,CACxCzgD,KAAK6gD,QAAwBH,CAE7B1gD,MAAKw/B,OAAUmhB,GAAe,KAAO,KAAO,KAC5C3gD,MAAKu/B,OAASA,CACdv/B,MAAKu7C,OAASA,MACR,CACNv7C,KAAK0/B,MAAQghB,EAAcI,OAAOJ,GAAgB,QAClD1gD,MAAK2/B,MAASghB,GAAe,KAAO,EAAIG,OAAOH,IA/BjDhgD,OAAAC,eAAWq5C,EAAA15C,UAAA,apE8uYJM,IoE9uYP,WAEC,MAAOo5C,GAAc/4C,WpE+uYfH,WAAY,KACZC,aAAc,MoE7sYlBL,QAAAC,eAAWq5C,EAAA15C,UAAA,iBpEmtYPM,IoEntYJ,WAEI,MAAOb,MAAK4gD,gBpEotYZl+C,IoEltYJ,SAAyBC,GAErB,GAAI3C,KAAK4gD,gBAAkBj+C,EACvB,MACJ3C,MAAK4gD,eAAiBj+C,CACtB3C,MAAKmwC,sBpEmtYLpvC,WAAY,KACZC,aAAc,MoEzwYPi5C,GAAA/4C,UAAmB,2BAuDlC,OAAA+4C,IAzD4BuG,EA2D5B7gD,GAAuBJ,QAAd06C,IpEutYN8G,+BAA+B3/C,UAAU4/C,4CAA4C,4CAA4CrF,8CAA8C,8CAA8CsF,0CAA0C,4CAA4CC,6CAA6C,SAASziD,EAAQkB,EAAOJ,GAY3X,GqE9xYM4hD,GAAY,WAAlB,QAAMA,MAMSA,EAAAC,OAAgB,CAMhBD,GAAAE,OAAgB,CAMhBF,GAAAG,IAAa,CAC5B,OAAAH,KAEAxhD,GAAsBJ,QAAb4hD,OrE+xYHH,6CAA6C,SAASviD,EAAQkB,EAAOJ,GAC3E,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsEp0YtB,IAAOkvC,GAAS9wC,EAAe,iCAC/B,IAAOuJ,GAAcvJ,EAAc,sCAInC,IAAOi4C,GAAKj4C,EAAgB,+BAE5B,IAAO+B,GAAS/B,EAAe,oCAQ/B,IAAO4lC,GAAa5lC,EAAc,0CAClC,IAAOk6C,GAAoBl6C,EAAa,iDAGxC,IAAOy7C,GAAez7C,EAAc,8CtEq0YpC,IsEvzYM+hD,GAAY,SAAA9/C,GAASX,EAArBygD,EAAY9/C,EAqEjB,SArEK8/C,KAAN,GAAAz3C,GAAA/I,IAuEEU,GAAAlB,KAAAQ,KApEOA,MAAAuhD,oBAA8B,KAE9BvhD,MAAAwhD,eAAyB,KACzBxhD,MAAAyhD,OAAgB,CAGhBzhD,MAAA4vC,SAA0B,GAAI9jC,MAE/B9L,MAAA0vC,iBAA0B,CAC1B1vC,MAAA0hD,aAAuB,KACtB1hD,MAAA2hD,oBAA8B,IAC9B3hD,MAAA4hD,sBAA+B,CAC/B5hD,MAAA6hD,qBAA8B,CAsB/B7hD,MAAA8hD,aAAsB,CAEtB9hD,MAAA+hD,sBAA+B,CAE9B/hD,MAAAgiD,WAAqB,KAUtBhiD,MAAA2vC,YAAqBJ,EAAUpM,MAE9BnjC,MAAA6vC,QAAkB,IAClB7vC,MAAA8vC,QAAkB,IAClB9vC,MAAAiiD,QAAkB,KAClBjiD,MAAA0d,OAAgB,QAKjB1d,MAAAkiD,SAAkB,CAClBliD,MAAAmiD,QAAiB,CAWvBniD,MAAK8hD,aAAehB,OAAO9gD,KAAK2F,GAEhC3F,MAAK+vC,QAAU,GAAIjkC,MAEnB9L,MAAKoiD,uBAAyB,SAAC51C,GAAgB,MAAAzD,GAAKs5C,eAAe71C,GAEnExM,MAAKsiD,mBAAqB,MAM3B3hD,OAAAC,eAAW4/C,EAAAjgD,UAAA,StE2wYJM,IsE3wYP,WAEC,MAAOb,MAAKyhD,QtE4wYN/+C,IsEzwYP,SAAiBC,GAEhB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI3C,KAAKyhD,QAAU9+C,EAClB,MAED3C,MAAKyhD,OAAS9+C,CAEd,IAAI3C,KAAKujB,iBAAmB,KAC3BvjB,KAAKujB,gBAAkB,GAAIvb,EAE5BhI,MAAKujB,gBAAgBlW,gBAAkB1K,CAEvC3C,MAAKmwC,sBtEqwYCpvC,WAAY,KACZC,aAAc,MsEhwYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,kBtEswYJM,IsEtwYP,WAEC,MAAOb,MAAKujB,iBtEuwYN7gB,IsEpwYP,SAA0BC,GAEzB3C,KAAKujB,gBAAkB5gB,CAEvB3C,MAAKmwC,sBtEowYCpvC,WAAY,KACZC,aAAc,MsE9vYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,iBtEqwYJM,IsErwYP,WAEC,MAAOb,MAAKwhD,gBtEswYN9+C,IsEnwYP,SAAyBC,GAExB,GAAI3C,KAAKwhD,gBAAkB7+C,EAC1B,MAED3C,MAAKwhD,eAAiB7+C,CAEtB3C,MAAKmwC,sBtEkwYCpvC,WAAY,KACZC,aAAc,MsEhwYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,atEmwYJM,IsEnwYP,WAEC,MAAOb,MAAKuiD,YtEowYNxhD,WAAY,KACZC,aAAc,MsE/vYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,UtEqwYJM,IsErwYP,WAEC,MAAOb,MAAKkiD,UtEswYNnhD,WAAY,KACZC,aAAc,MsEjwYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,gBtEuwYJM,IsEvwYP,WAEC,MAAOb,MAAKkwC,etEwwYNnvC,WAAY,KACZC,aAAc,MsE/vYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,etEwwYJM,IsExwYP,WAEC,MAAOb,MAAKiwC,etEywYNvtC,IsEtwYP,SAAuBC,GAEtB,GAAI3C,KAAKiwC,eAAiBttC,EACzB,MAED,IAAI3C,KAAKiwC,cACRjwC,KAAKiwC,cAAc3iC,oBAAoBopC,EAAM8L,OAAQxiD,KAAKoiD,uBAE3DpiD,MAAKiwC,cAAgBttC,CAErB,IAAI3C,KAAKiwC,cACRjwC,KAAKiwC,cAAcziC,iBAAiBkpC,EAAM8L,OAAQxiD,KAAKoiD,uBAExDpiD,MAAKmwC,sBtEmwYCpvC,WAAY,KACZC,aAAc,MsE9vYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,UtEowYJM,IsEpwYP,WAEC,MAAOb,MAAK6vC,StEqwYNntC,IsElwYP,SAAkBC,GAEjB,GAAI3C,KAAK6vC,SAAWltC,EACnB,MAED3C,MAAK6vC,QAAUltC,CAEf3C,MAAKyiD,sBtEiwYC1hD,WAAY,KACZC,aAAc,MsE5vYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,UtEkwYJM,IsElwYP,WAEC,MAAOb,MAAK8vC,StEmwYNptC,IsEhwYP,SAAkBC,GAEjB,GAAI3C,KAAK8vC,SAAWntC,EACnB,MAED3C,MAAK8vC,QAAUntC,CAEf3C,MAAKyiD,sBtE+vYC1hD,WAAY,KACZC,aAAc,MsEzvYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,UtEgwYJM,IsEhwYP,WAEC,MAAOb,MAAKiiD,StEiwYNv/C,IsE9vYP,SAAkBC,GAEjB,GAAI3C,KAAKiiD,SAAWt/C,EACnB,MAED3C,MAAKiiD,QAAUt/C,CAEf3C,MAAKyiD,sBtE6vYC1hD,WAAY,KACZC,aAAc,MsExvYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,StE8vYJM,IsE9vYP,WAEC,MAAOb,MAAK0d,QtE+vYNhb,IsE5vYP,SAAiBC,GAEhB,GAAI3C,KAAK0d,QAAU/a,EAClB,MAED3C,MAAK0d,OAAS/a,CAEd3C,MAAKyiD,sBtE2vYC1hD,WAAY,KACZC,aAAc,MsEtvYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,WtE4vYJM,IsE5vYP,WAEC,MAAOb,MAAK0iD,WtE6vYNhgD,IsE1vYP,SAAmBC,GAElB,GAAI3C,KAAK0iD,WAAa//C,EACrB,MAED3C,MAAK0iD,UAAY//C,CAEjB3C,MAAKyiD,oBAEL,IAAIziD,KAAK0iD,UAAU1V,QAAQkN,GAAkB,CAC5C,GAAIyI,GAAoD3iD,KAAK0iD,SAC7D1iD,MAAKuiD,WAAaI,EAAgBC,UAAU9d,SAE5C9kC,MAAKkiD,SAAWS,EAAgBC,UAAUC,KAAKz0C,MAC/CpO,MAAKmiD,QAAUQ,EAAgBC,UAAUC,KAAKtyC,UACxC,CACNvQ,KAAKuiD,WAAa,IAClBviD,MAAKkiD,SAAW,CAChBliD,MAAKmiD,QAAU,EAIhBniD,KAAK8iD,uBtEsvYC/hD,WAAY,KACZC,aAAc,MsEjvYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,ctEuvYJM,IsEvvYP,WAEC,MAAOb,MAAK0hD,ctEwvYNh/C,IsErvYP,SAAsBC,GAErB,GAAI3C,KAAK0hD,cAAgB/+C,EACxB,MAED3C,MAAK0hD,aAAe/+C,CAEpB3C,MAAKyiD,sBtEovYC1hD,WAAY,KACZC,aAAc,MsE/uYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,qBtEqvYJM,IsErvYP,WAEC,MAAOb,MAAKuhD;EtEsvYN7+C,IsEnvYP,SAA6BC,GAE5B,GAAI3C,KAAKuhD,qBAAuB5+C,EAC/B,MACD3C,MAAKuhD,oBAAsB5+C,CAC3B3C,MAAKyiD,sBtEovYC1hD,WAAY,KACZC,aAAc,MsE9uYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,sBtEqvYJM,IsErvYP,WAEC,MAAOb,MAAK2hD,qBtEsvYNj/C,IsEnvYP,SAA8BC,GAE7B,GAAI3C,KAAK2hD,qBAAuBh/C,EAC/B,MAED3C,MAAK2hD,oBAAsBh/C,CAE3B3C,MAAKyiD,sBtEkvYC1hD,WAAY,KACZC,aAAc,MsE1uYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,uBtEmvYJM,IsEnvYP,WAEC,MAAOb,MAAK6hD,sBtEovYNn/C,IsEjvYP,SAA+BC,GAE9B,GAAI3C,KAAK6hD,sBAAwBl/C,EAChC,MAED3C,MAAK6hD,qBAAuBl/C,CAE5B3C,MAAKyiD,sBtEgvYC1hD,WAAY,KACZC,aAAc,MsExuYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,wBtEivYJM,IsEjvYP,WAEC,MAAOb,MAAK4hD,uBtEkvYNl/C,IsE/uYP,SAAgCC,GAE/B,GAAI3C,KAAK4hD,uBAAyBj/C,EACjC,MAED3C,MAAK4hD,sBAAwBj/C,CAE7B3C,MAAKyiD,sBtE8uYC1hD,WAAY,KACZC,aAAc,MsExuYdw/C,GAAAjgD,UAAAU,QAAP,WAEC,GAAI/B,EACJ,IAAIwO,EAEJA,GAAM1N,KAAK4vC,SAASnwC,MACpB,KAAKP,EAAI,EAAGA,EAAIwO,EAAKxO,IACpBc,KAAK4vC,SAAS1wC,GAAG+B,SAElBjB,MAAK4vC,SAAW,GAAI9jC,OAMrBnL,QAAAC,eAAW4/C,EAAAjgD,UAAA,atE2uYJM,IsE3uYP,WAEC,MAAOb,MAAKgiD,YtE4uYNt/C,IsEzuYP,SAAqBC,GAEpB,GAAI3C,KAAKgiD,WAAar/C,EACrB,MAED3C,MAAKgiD,WAAar/C,CAElB3C,MAAKyiD,sBtEwuYC1hD,WAAY,KACZC,aAAc,MsE5tYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,atEyuYJM,IsEzuYP,WAEC,MAAOb,MAAK2vC,atE0uYNjtC,IsEvuYP,SAAqBC,GAEpB,GAAI3C,KAAK2vC,aAAehtC,EACvB,MAED3C,MAAK2vC,YAAchtC,CAEnB3C,MAAKmwC,sBtEsuYCpvC,WAAY,KACZC,aAAc,MsE/tYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,sBtEuuYJM,IsEvuYP,WAEC,MAAOb,MAAK+iD,qBtEwuYNrgD,IsEruYP,SAA8BC,GAE7B,GAAI3C,KAAK+iD,qBAAuBpgD,EAC/B,MAED3C,MAAK+iD,oBAAsBpgD,CAE3B3C,MAAKyiD,sBtEouYC1hD,WAAY,KACZC,aAAc,MsE7tYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,kBtEquYJM,IsEruYP,WAEC,MAAOb,MAAK0vC,kBtEsuYNhtC,IsEnuYP,SAA0BC,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI3C,KAAK0vC,kBAAoB/sC,EAC5B,MAED3C,MAAK0vC,iBAAmB/sC,CAExB3C,MAAKyiD,sBtEiuYC1hD,WAAY,KACZC,aAAc,MsE5tYrBL,QAAAC,eAAW4/C,EAAAjgD,UAAA,StEkuYJM,IsEluYP,WAEC,MAAOb,MAAKmiD,StEmuYNphD,WAAY,KACZC,aAAc,MsErtYdw/C,GAAAjgD,UAAA6iB,UAAP,SAAiB4/B,GAEhBhjD,KAAK+vC,QAAQv2B,KAAKwpC,EAElB,IAAIC,EACJ,IAAIhgC,GAAiC+/B,EAAM//B,QAE3C,IAAIA,EACHggC,EAA+BhgC,EAASggC,YAEzC,IAAID,EAAM//B,SAAU,CACnB,GAAIjjB,KAAKkwC,eAAiB+S,GAAgBjjD,KAAKkwC,cAAe,CAC7D,KAAM,IAAI9wC,OAAM,iGACV,CACN,GAAIY,KAAKkwC,eAAiB+S,EAAc,CAEvCjjD,KAAKkwC,cAAgB+S,CAErBjjD,MAAKkjD,wBAKRF,EAAMrqC,cAAc,GAAIggC,GAAqBA,EAAqBG,qBAAsB94C,OASlFwgD,GAAAjgD,UAAA4iB,aAAP,SAAoB6/B,GAEnBhjD,KAAK+vC,QAAQn2B,OAAO5Z,KAAK+vC,QAAQp2B,QAAQqpC,GAAQ,EAEjD,IAAIhjD,KAAK+vC,QAAQtwC,QAAU,EAAG,CAC7BO,KAAKkwC,cAAgB,IAErBlwC,MAAKkjD,sBAGNF,EAAMrqC,cAAc,GAAIggC,GAAqBA,EAAqBG,qBAAsB94C,OAQzFW,QAAAC,eAAW4/C,EAAAjgD,UAAA,WtEwtYJM,IsExtYP,WAEC,MAAOb,MAAK+vC,StEytYNhvC,WAAY,KACZC,aAAc,MsEltYdw/C,GAAAjgD,UAAAkiD,mBAAP,WAEC,GAAI/0C,GAAa1N,KAAK4vC,SAASnwC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK4vC,SAAS1wC,GAAGmxC,mBAGXmQ,GAAAjgD,UAAA2iD,oBAAR,WAEC,GAAIx1C,GAAa1N,KAAK4vC,SAASnwC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK4vC,SAAS1wC,GAAGgkD,sBAGZ1C,GAAAjgD,UAAA4vC,mBAAP,WAEC,GAAIziC,GAAa1N,KAAK4vC,SAASnwC,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK4vC,SAAS1wC,GAAGkxC,mBAMXoQ,GAAAjgD,UAAA8hD,eAAR,SAAuB71C,GAEtBxM,KAAKmwC,qBAGCqQ,GAAAjgD,UAAAuiD,oBAAP,WAEC,IAAK9iD,KAAKmjD,aACTnjD,KAAKmjD,aAAe,GAAI9e,GAAcA,EAAcW,aAErDhlC,MAAK2Y,cAAc3Y,KAAKmjD,cAGlB3C,GAAAjgD,UAAAgwC,YAAP,SAAmBvY,GAElBh4B,KAAK4vC,SAASp2B,KAAKwe,EAEnB,OAAOA,GAGDwoB,GAAAjgD,UAAAiwC,eAAP,SAAsBxY,GAErBh4B,KAAK4vC,SAASh2B,OAAO5Z,KAAK4vC,SAASj2B,QAAQqe,GAAS,EAEpD,OAAOA,GAET,OAAAwoB,IApnB2BhgD,EAsnB3Bb,GAAsBJ,QAAbihD,ItE2sYN7P,iCAAiCvvC,UAAUw1C,+BAA+Bx1C,UAAUka,sCAAsCla,UAAUD,oCAAoCC,UAAU6kC,0CAA0C,0CAA0CyS,iDAAiD,iDAAiDiD,8CAA8C,gDAAgDyH,6DAA6D,SAAS3kD,EAAQkB,EAAOJ,GAC9hB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuEt2ZtB,IAAOG,GAAS/B,EAAe,oCvEg3Z/B,IuE/1ZM4kD,GAAe,SAAA3iD,GAASX,EAAxBsjD,EAAe3iD,EAqBpB,SArBK2iD,KAuBJ3iD,EAAAlB,KAAAQ,KAnBMA,MAAAsjD,iBAA0B,CAC1BtjD,MAAAujD,uBAAgC,CAChCvjD,MAAAwjD,wBAAiC,CACjCxjD,MAAAyjD,8BAAuC,CACvCzjD,MAAA0jD,iBAA0B,EAqB1BL,EAAA9iD,UAAAU,QAAP,YAOAN,QAAAC,eAAWyiD,EAAA9iD,UAAA,avEi1ZJM,IuEj1ZP,WAEC,MAAOwiD,GAAgBniD,WvEk1ZjBH,WAAY,KACZC,aAAc,MuE70ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,wBvEm1ZJM,IuEn1ZP,WAEC,MAAOb,MAAKujD,wBvEo1ZNxiD,WAAY,KACZC,aAAc,MuE/0ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,kBvEq1ZJM,IuEr1ZP,WAEC,MAAOb,MAAKsjD,kBvEs1ZNviD,WAAY,KACZC,aAAc,MuEj1ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,+BvEu1ZJM,IuEv1ZP,WAEC,MAAOb,MAAKyjD,+BvEw1ZN1iD,WAAY,KACZC,aAAc,MuEn1ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,yBvEy1ZJM,IuEz1ZP,WAEC,MAAOb,MAAKwjD,yBvE01ZNziD,WAAY,KACZC,aAAc,MuEr1ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,kBvE21ZJM,IuE31ZP,WAEC,MAAOb,MAAK0jD,kBvE41ZN3iD,WAAY,KACZC,aAAc,MuEv1ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,evE61ZJM,IuE71ZP,WAEC,MAAOb,MAAK2jD,evE81ZN5iD,WAAY,KACZC,aAAc,MuEz1ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,qBvE+1ZJM,IuE/1ZP,WAEC,MAAOb,MAAK4jD,qBvEg2ZN7iD,WAAY,KACZC,aAAc,MuE31ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,sBvEi2ZJM,IuEj2ZP,WAEC,MAAOb,MAAK6jD,sBvEk2ZN9iD,WAAY,KACZC,aAAc,MuE71ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,4BvEm2ZJM,IuEn2ZP,WAEC,MAAOb,MAAK8jD,4BvEo2ZN/iD,WAAY,KACZC,aAAc,MuE/1ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,evEq2ZJM,IuEr2ZP,WAEC,MAAOb,MAAK+jD,evEs2ZNhjD,WAAY,KACZC,aAAc,MuEj2ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,qBvEu2ZJM,IuEv2ZP,WAEC,MAAOb,MAAKgkD,qBvEw2ZNjjD,WAAY,KACZC,aAAc,MuEn2ZrBL,QAAAC,eAAWyiD,EAAA9iD,UAAA,mBvEy2ZJM,IuEz2ZP,WAEC,MAAOb,MAAKikD,mBvE02ZNljD,WAAY,KACZC,aAAc,MuEr2ZdqiD,GAAA9iD,UAAA2jD,cAAP,SAAqB3qC,GAEpBvZ,KAAKmkD,mBAAmB5qC,GAOjB8pC,GAAA9iD,UAAA4jD,mBAAR,SAA2B5qC,GvE02ZpB,GuEv2ZF6qC,GAAqB7qC,EAAW8qC,aAAavtC,aACjD,IAAIwtC,EAEJ,IAAIt4B,GAAYo4B,EAAUphD,EAAGipB,EAAYm4B,EAAUnhD,EAAGipB,EAAYk4B,EAAUlhD,CAC5E,IAAIkB,GAAWC,EAAW+R,CAC1B,IAAInR,GAAUs/C,EAAe,CAC7B,IAAIrlD,EAGJ,KAAKA,EAAI,EAAGA,EAAIc,KAAK0jD,mBAAoBxkD,EAAG,CAE3ColD,EAAWtkD,KAAK+jD,cAAc7kD,GAAG4X,aACjC1S,GAAK4nB,EAAKs4B,EAASthD,CACnBqB,GAAK4nB,EAAKq4B,EAASrhD,CACnBmT,GAAK8V,EAAKo4B,EAASphD,CAEnB+B,GAAIb,EAAGA,EAAKC,EAAGA,EAAK+R,EAAGA,CAGvBnR,GAAIA,EAAI,KAAQ,EAAEA,EAAI,GACtBjF,MAAKgkD,oBAAoB9kD,GAAK+F,CAC9Bs/C,IAASt/C,EAIVs/C,EAAQ,EAAEA,CAEV,KAAKrlD,EAAI,EAAGA,EAAIc,KAAK0jD,mBAAoBxkD,EACxCc,KAAKgkD,oBAAoB9kD,IAAMqlD,EAlLnBlB,GAAAniD,UAAmB,qBAoLlC,OAAAmiD,IAtL8B7iD,EAwL9Bb,GAAyBJ,QAAhB8jD,IvEm2ZNliD,oCAAoCC,YAAYojD,+DAA+D,SAAS/lD,EAAQkB,EAAOJ,GAC1I,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwEljatB,IAAOq2C,GAAKj4C,EAAgB,+BAG5B,IAAOgqC,GAAgBhqC,EAAc,+CACrC,IAAOwrC,GAAUxrC,EAAe,yCAChC,IAAO2vC,GAAU3vC,EAAe,yCAChC,IAAO+e,GAAU/e,EAAe,uCAChC,IAAO4kD,GAAe5kD,EAAc,4DxEwjapC,IwEjjaMgmD,GAAiB,SAAA/jD,GAASX,EAA1B0kD,EAAiB/jD,EAStB,SATK+jD,GASOC,GATb,GAAA37C,GAAA/I,IAWEU,GAAAlB,KAAAQ,KAEAA,MAAK2kD,4BAA8B,SAACn4C,GAAqB,MAAAzD,GAAK67C,mBAAmBp4C,GAEjFxM,MAAK0kD,OAASA,EAMf/jD,OAAAC,eAAW6jD,EAAAlkD,UAAA,UxE4iaJM,IwE5iaP,WAEC,MAAOb,MAAK6kD,SxE6iaNniD,IwE1iaP,SAAkBC,GAEjB,GAAImiD,GAAwB,CAC5B,IAAIC,GAA8B,CAClC,IAAIC,GAA+B,CACnC,IAAIC,GAAqC,CACzC,IAAIC,GAAwB,CAC5B,IAAIpmC,EAEJ,IAAI9e,KAAK6kD,QACR7kD,KAAKmlD,gBAENnlD,MAAK6kD,QAAUliD,CACf3C,MAAKikD,kBAAoBthD,CACzB3C,MAAK2jD,cAAgB,GAAI73C,MACzB9L,MAAK6jD,qBAAuB,GAAI/3C,MAChC9L,MAAK4jD,oBAAsB,GAAI93C,MAC/B9L,MAAK8jD,2BAA6B,GAAIh4C,MACtC9L,MAAK+jD,cAAgB,GAAIj4C,MAEzB,IAAI4B,GAAa/K,EAAMlD,MAEvB,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EAAG,CACpC4f,EAAQnc,EAAMzD,EACd4f,GAAMtR,iBAAiBgQ,EAAWuB,oBAAqB/e,KAAK2kD,4BAE5D,IAAI7lC,YAAiBsvB,GAAY,CAChC,GAAItvB,EAAM1S,aACTpM,KAAK6jD,qBAAqBmB,KAAwClmC,MAElE9e,MAAK2jD,cAAcmB,KAAiChmC,MAE/C,IAAIA,YAAiB2pB,GAAkB,CAC7C,GAAI3pB,EAAM1S,aACTpM,KAAK8jD,2BAA2BmB,KAAoDnmC,MAEpF9e,MAAK4jD,oBAAoBmB,KAA6CjmC,MAEjE,IAAIA,YAAiBmrB,GAAY,CACvCjqC,KAAK+jD,cAAcmB,KAAiCpmC,GAItD,GAAI9e,KAAKujD,wBAA0BwB,GAAwB/kD,KAAKsjD,kBAAoBwB,GAAkB9kD,KAAK0jD,kBAAoBwB,GAAkBllD,KAAKwjD,yBAA2BwB,GAAyBhlD,KAAKyjD,+BAAiCwB,EAC/O,MAEDjlD,MAAKujD,uBAAyBwB,CAC9B/kD,MAAKyjD,8BAAgCwB,CACrCjlD,MAAKsjD,iBAAmBwB,CACxB9kD,MAAKwjD,wBAA0BwB,CAC/BhlD,MAAK0jD,iBAAmBwB,CAGxBllD,MAAKgkD,oBAAsB,GAAIl4C,OAAc2L,KAAK2tC,KAAKF,EAAe,GAAG,EAGzEllD,MAAK2Y,cAAc,GAAI+9B,GAAMA,EAAM8L,UxEkia7BzhD,WAAY,KACZC,aAAc,MwE5habyjD,GAAAlkD,UAAA4kD,eAAR,WAEC,GAAIz3C,GAAa1N,KAAK6kD,QAAQplD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EACjCc,KAAK6kD,QAAQ3lD,GAAGoO,oBAAoBkQ,EAAWuB,oBAAqB/e,KAAK2kD,6BAMnEF,GAAAlkD,UAAAqkD,mBAAR,SAA2Bp4C,GAK1B,GAAIsS,GAA8BtS,EAAM2I,MAExC,IAAI2J,YAAiBsvB,GACpBpuC,KAAKqlD,mBAAgCvmC,OACjC,IAAIA,YAAiB2pB,GACzBzoC,KAAKslD,yBAA4CxmC,EAElD9e,MAAK2Y,cAAc,GAAI+9B,GAAMA,EAAM8L,SAM5BiC,GAAAlkD,UAAA+kD,yBAAR,SAAiCxmC,GAEhC,GAAIymC,GAAyCzmC,CAE7C,IAAIA,EAAM1S,aAAc,GACrBpM,KAAKujD,yBACLvjD,KAAKyjD,6BAGPzjD,MAAK4jD,oBAAoBhqC,OAAO5Z,KAAK4jD,oBAAoBjqC,QAAQ4rC,GAAK,EACtEvlD,MAAK8jD,2BAA2BtqC,KAAKsF,OAE/B,GACJ9e,KAAKujD,yBACLvjD,KAAKyjD,6BAEPzjD,MAAK8jD,2BAA2BlqC,OAAO5Z,KAAK8jD,2BAA2BnqC,QAAQ4rC,GAAK,EACpFvlD,MAAK4jD,oBAAoBpqC,KAAKsF,IAOxB2lC,GAAAlkD,UAAA8kD,mBAAR,SAA2BvmC,GAE1B,GAAI0mC,GAA6B1mC,CAEjC,IAAIA,EAAM1S,aAAc,GACrBpM,KAAKsjD,mBACLtjD,KAAKwjD,uBACPxjD,MAAK2jD,cAAc/pC,OAAO5Z,KAAK2jD,cAAchqC,QAAQ6rC,GAAK,EAC1DxlD,MAAK6jD,qBAAqBrqC,KAAKsF,OACzB,GACJ9e,KAAKsjD,mBACLtjD,KAAKwjD,uBAEPxjD,MAAK6jD,qBAAqBjqC,OAAO5Z,KAAK6jD,qBAAqBlqC,QAAQ6rC,GAAK,EACxExlD,MAAK2jD,cAAcnqC,KAAKsF,IAG3B,OAAA2lC,IA9JgCpB,EAgKL1jD,GAAAJ,QAAlBklD,IxEohaN7N,+BAA+Bx1C,UAAUmnC,+CAA+C,+CAA+CyB,yCAAyC,yCAAyCkE,yCAAyC,yCAAyC5uB,uCAAuC,uCAAuC8jC,4DAA4D,8DAA8DqC,kEAAkE,SAAShnD,EAAQkB,EAAOJ,GAChlB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyEtsatB,IAAO+H,GAAa3J,EAAc,qCAClC,IAAO2lC,GAAS3lC,EAAe,iCAC/B,IAAOi4C,GAAKj4C,EAAgB,+BAC5B,IAAOsiB,GAAetiB,EAAc,yCAEpC,IAAOinD,GAAoBjnD,EAAa,mDAKxC,IAAOk2B,GAAMl2B,EAAgB,qCAC7B,IAAO+pC,GAAuB/pC,EAAY,qEAG1C,IAAMknD,GAAmB,SAAAjlD,GAASX,EAA5B4lD,EAAmBjlD,EAgBxB,SAhBKilD,GAgBOC,GAAA,GAAAA,QAAA,GAA+B,CAA/BA,EAAA,EAEXllD,EAAAlB,KAAAQ,KAfOA,MAAA6lD,sBAAgC,IAiBvC,IAAID,EAAc,GAAKA,EAAc,EACpC,KAAM,IAAIxmD,OAAM,iDAEjBY,MAAK8lD,aAAeF,CACpB5lD,MAAK+lD,kBAAoB,GAAIhlC,GAAgB/gB,KAC7CA,MAAKgmD,OAGCL,EAAAplD,UAAA0lD,cAAP,SAAqBvsC,GAEpB,MAAO1Z,MAAKkmD,aAAaxsC,GAGnBisC,GAAAplD,UAAA4lD,cAAP,SAAqBzsC,EAAuB/W,GAE3C,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI+W,GAAS1Z,KAAK8lD,aACjB,KAAM,IAAI1mD,OAAM,qDAEjBY,MAAKkmD,aAAaxsC,GAAS/W,EAGrBgjD,GAAAplD,UAAA6lD,oBAAP,SAA2B5tC,GAE1B,MAAOxY,MAAKqmD,cAAc7tC,GAAWuvB,eAG9B4d,GAAAplD,UAAAylD,KAAR,WAEChmD,KAAKkmD,aAAe,GAAIp6C,OAAc9L,KAAK8lD,aAC3C9lD,MAAKsmD,oBAAsB,GAAIx6C,OAAc9L,KAAK8lD,aAElD,IAAIhnD,GAAW,CACf,KAAK,GAAII,GAAmBc,KAAK8lD,aAAe,EAAG5mD,GAAK,IAAKA,EAAG,CAC/Dc,KAAKkmD,aAAahnD,GAAKJ,CACvBA,IAAK,GAGNkB,KAAKumD,aAAez6C,OAAe,EAAG,GAAI,EAAG,EAC7C9L,MAAKwmD,aAAe16C,MAAc,EAAG,GAAI,GAAI,EAC7C9L,MAAKymD,eAAiB,GAAI36C,OAAiB,EAC3C9L,MAAK0mD,aAAe,GAAI56C,MACxB9L,MAAKqmD,cAAgB,GAAIv6C,MAEzB,KAAK5M,EAAI,EAAGA,EAAIc,KAAK8lD,eAAgB5mD,EAAG,CACvCc,KAAK0mD,aAAaxnD,GAAK,GAAIwmD,EAC3B1lD,MAAKqmD,cAAcnnD,GAAK,GAAIy1B,GAAO30B,KAAK0mD,aAAaxnD,KAIhDymD,GAAAplD,UAAAomD,kBAAP,SAAyBhkD,GAExBjC,EAAAH,UAAMomD,kBAAiBnnD,KAAAQ,KAAC2C,EAExB3C,MAAK4mD,yBAGEjB,GAAAplD,UAAAqmD,uBAAR,WAEC5mD,KAAK6lD,sBAAwB,KAG9BllD,QAAAC,eAAW+kD,EAAAplD,UAAA,ezEgqaJM,IyEhqaP,WAEC,MAAOb,MAAK8lD,czEiqaNpjD,IyE9paP,SAAuBC,GAEtB,GAAIA,GAAS3C,KAAK8lD,aACjB,MAED,IAAInjD,EAAQ,GAAKA,EAAQ,EACxB,KAAM,IAAIvD,OAAM,iDAEjBY,MAAK8lD,aAAenjD,CACpB3C,MAAK4mD,wBACL5mD,MAAKgmD,MACLhmD,MAAK2Y,cAAc,GAAI+9B,GAAMA,EAAM8L,UzE6pa7BzhD,WAAY,KACZC,aAAc,MyE3pad2kD,GAAAplD,UAAAsmD,cAAP,SAAqB1xC,EAAwBsD,EAAauc,GAEzD,GAAIh1B,KAAK6lD,sBACR7lD,KAAK8mD,oBAEN9mD,MAAK+mD,kBAAkBC,WAAahnD,KAAKinD,YACzCjnD,MAAK+mD,kBAAkBpwC,OAAS3W,KAAKknD,oBACrClnD,MAAK+mD,kBAAkB7rC,OACvBzC,GAAMyb,mBAAmBl0B,KAAK+mD,kBAE9B/xB,GAASmyB,iBAAiBnnD,KAAK+mD,kBAAmB5xC,EAAOytC,UAAUwE,QAASpnD,KAAK8lD,aAAc9lD,KAAKymD,eAAgBzmD,KAAKqmD,eAGlHV,GAAAplD,UAAAumD,mBAAR,WAEC,GAAIO,GAAcrnD,KAAKsnD,eAAe,EAEtCtnD,MAAKymD,eAAe,GAAK,GAAIriB,GAAU,EAAG,EAAGijB,EAAMA,EACnDrnD,MAAKymD,eAAe,GAAK,GAAIriB,GAAUijB,EAAM,EAAGA,EAAMA,EACtDrnD,MAAKymD,eAAe,GAAK,GAAIriB,GAAU,EAAGijB,EAAMA,EAAMA,EACtDrnD,MAAKymD,eAAe,GAAK,GAAIriB,GAAUijB,EAAMA,EAAMA,EAAMA,EAEzDrnD,MAAK6lD,sBAAwB,MAGvBF,GAAAplD,UAAAgnD,uBAAP,SAA8BC,GAE7B,GAAI59B,EACJ,IAAIiO,GAAyB2vB,EAAW3vB,UACxC,IAAI4vB,GAAwB5vB,EAAW6vB,IACvC,IAAIC,GAAyB9vB,EAAW+vB,IAAMH,CAE9CznD,MAAK6nD,oCAAoCL,EAAYA,EAAW3vB,WAAWiwB,eAAgB9nD,KAAK+nD,SAChG/nD,MAAK+nD,SAASh7C,YAAY,IAAK,IAAK,EACpC/M,MAAKgoD,yBAAyBp+B,OAAS5pB,KAAK+nD,QAC5C/nD,MAAKioD,kBAAkBT,EAEvB,KAAK,GAAItoD,GAAmB,EAAGA,EAAIc,KAAK8lD,eAAgB5mD,EAAG,CAC1D0qB,EAAS5pB,KAAK0mD,aAAaxnD,GAAG0qB,MAE9B5pB,MAAKsmD,oBAAoBpnD,GAAKuoD,EAAiBznD,KAAKkmD,aAAahnD,GAAGyoD,CACpE3nD,MAAKqmD,cAAcnnD,GAAGwH,UAAUukB,SAAWjrB,KAAKknD,qBAAqBxgD,UAAUukB,QAE/EjrB,MAAKkoD,0BAA0Bt+B,EAAQ5pB,KAAKkmD,aAAahnD,GAAIc,KAAKumD,aAAarnD,GAAIc,KAAKwmD,aAAatnD,GAErGc,MAAK0mD,aAAaxnD,GAAG0qB,OAASA,GAIxB+7B,GAAAplD,UAAA2nD,0BAAR,SAAkCt+B,EAAiBu+B,EAAmBC,EAAmBC,GAExF,GAAI7yC,GAAoBpN,EAAcyN,kBACtC,IAAIyyC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIj6B,GAAcoyB,OAAO8H,kBAAmBj6B,EAAcmyB,OAAO8H,kBAAmBh6B,CACpF,IAAIC,GAAciyB,OAAO+H,kBAAmB/5B,EAAcgyB,OAAO+H,kBAAmB95B,EAAc+xB,OAAO+H,iBACzG,IAAI3pD,GAAoB,CAExB,OAAOA,EAAI,GAAI,CACdopD,EAAKtoD,KAAK8oD,eAAe5pD,EACzBqpD,GAAKvoD,KAAK8oD,eAAe5pD,EAAI,EAC7BspD,GAAKxoD,KAAK8oD,eAAe5pD,EAAI,EAC7BupD,GAAKH,GAAMtoD,KAAK8oD,eAAe5pD,EAAI,IAAMopD,GAAIH,CAC7CO,GAAKH,GAAMvoD,KAAK8oD,eAAe5pD,EAAI,IAAMqpD,GAAIJ,CAC7CQ,GAAKH,GAAMxoD,KAAK8oD,eAAe5pD,EAAI,IAAMspD,GAAIL,CAC7C,IAAIG,EAAK55B,EACRA,EAAO45B,CACR,IAAIA,EAAKz5B,EACRA,EAAOy5B,CACR,IAAIC,EAAK55B,EACRA,EAAO45B,CACR,IAAIA,EAAKz5B,EACRA,EAAOy5B,CACR,IAAIC,EAAKz5B,EACRA,EAAOy5B,CACR,IAAIC,EAAK/5B,EACRA,EAAO+5B,CACR,IAAIA,EAAK55B,EACRA,EAAO45B,CACR,IAAIC,EAAK/5B,EACRA,EAAO+5B,CACR,IAAIA,EAAK55B,EACRA,EAAO45B,CACR,IAAIC,EAAK55B,EACRA,EAAO45B,CACRzpD,IAAK,EAGN0vB,EAAO,CAEP,IAAI3pB,GAAY4pB,EAAOH,CACvB,IAAIq6B,GAAYj6B,EAAOH,CACvB,IAAI1uB,GAAW,GAAG8uB,EAAOH,EAEzB,IAAIF,EAAO,EACVA,GAAQ1uB,KAAKgpD,MACd,IAAIr6B,EAAO,EACVA,GAAQ3uB,KAAKgpD,MACdt6B,GAAOjX,KAAK2I,MAAMsO,EAAK1uB,KAAKgpD,QAAQhpD,KAAKgpD,MACzCr6B,GAAOlX,KAAK2I,MAAMuO,EAAK3uB,KAAKgpD,QAAQhpD,KAAKgpD,MAEzC,IAAIC,GAAe,EAAEjpD,KAAKgpD,MAC1B/jD,GAAIwS,KAAK2I,MAAMnb,EAAEgkD,EAAQ,GAAGA,CAC5BF,GAAItxC,KAAK2I,MAAM2oC,EAAEE,EAAQ,GAAGA,CAE5Bp6B,GAAOH,EAAOzpB,CACd6pB,GAAOH,EAAOo6B,CAEd9jD,GAAI,EAAEA,CACN8jD,GAAI,EAAEA,CAENvzC,GAAI,GAAK,EAAEvQ,CACXuQ,GAAI,GAAK,EAAEuzC,CACXvzC,GAAI,IAAMvV,CACVuV,GAAI,MAAQqZ,EAAOH,GAAMzpB,CACzBuQ,GAAI,MAAQsZ,EAAOH,GAAMo6B,CACzBvzC,GAAI,KAAOoZ,EAAK3uB,CAChBuV,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFoU,GAAO7T,gBAAgBP,EACvBoU,GAAO7c,YAAY,IAAK,IAAK,EAC7B6c,GAAOzQ,kBAAkBivC,EAAYC,EAAY,EACjDz+B,GAAO7c,YAAY,GAAI,GAAI,GAGrB44C,GAAAplD,UAAAiN,iBAAP,SAAwBiD,EAAaC,GAEpC1Q,KAAK+lD,kBAAkBv4C,iBAAiBiD,EAAMC,GAGxCi1C,GAAAplD,UAAA+M,oBAAP,SAA2BmD,EAAaC,GAEvC1Q,KAAK+lD,kBAAkBz4C,oBAAoBmD,EAAMC,GAG3Ci1C,GAAAplD,UAAAoY,cAAP,SAAqBnM,GAEpB,MAAOxM,MAAK+lD,kBAAkBptC,cAAcnM,GAGtCm5C,GAAAplD,UAAA+W,iBAAP,SAAwB7G,GAEvB,MAAOzQ,MAAK+lD,kBAAkBzuC,iBAAiB7G,GAGhD9P,QAAAC,eAAI+kD,EAAAplD,UAAA,wBzE4naGM,IyE5naP,WAEC,MAAOb,MAAKsmD,qBzE6naNvlD,WAAY,KACZC,aAAc,MyE5natB,OAAA2kD,IA/PkCnd,EAiQL7oC,GAAAJ,QAApBomD,IzEgoaN/O,+BAA+Bx1C,UAAUsgB,yCAAyCtgB,UAAUqa,qCAAqCra,UAAU4kC,iCAAiC5kC,UAAU8nD,mDAAmD9nD,UAAUw4B,qCAAqC,qCAAqCkQ,qEAAqE,uEAAuEoF,kEAAkE,SAASzwC,EAAQkB,EAAOJ,GACtiB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0Er5atB,IAAO8oD,GAAS1qD,EAAe,iCAM/B,IAAOk2B,GAAMl2B,EAAgB,qCAE7B,IAAO2qD,GAAgB3qD,EAAc,8DAErC,IAAO07C,GAAiB17C,EAAa,gDAErC,IAAM0vC,GAAmB,SAAAztC,GAASX,EAA5BouC,EAAmBztC,EAMxB,SANKytC,KAQJztC,EAAAlB,KAAAQ,KAEAA,MAAKsnD,eAAiB,GACtBtnD,MAAKqpD,aAAe,GAAIv9C,MACxB9L,MAAKspD,cAGEnb,EAAA5tC,UAAA+oD,YAAR,WAECtpD,KAAKqmD,cAAgB,GAAIv6C,MACzB9L,MAAKupD,aAAe,GAAIz9C,MAGxB9L,MAAKwpD,UAAU,EAAG,GAAI,EACtBxpD,MAAKwpD,UAAU,GAAI,GAAI,EACvBxpD,MAAKwpD,WAAW,GAAI,EAAG,EACvBxpD,MAAKwpD,UAAU,GAAI,EAAG,EACtBxpD,MAAKwpD,UAAU,EAAG,EAAG,EACrBxpD,MAAKwpD,UAAU,EAAG,IAAK,GAGhBrb,GAAA5tC,UAAAipD,UAAR,SAAkB95C,EAAkBC,EAAkBC,GAErD,GAAI65C,GAAa,GAAI90B,EACrB80B,GAAI/5C,UAAYA,CAChB+5C,GAAI95C,UAAYA,CAChB85C,GAAI75C,UAAYA,CAChB65C,GAAI5xB,WAAW6vB,KAAO,GAEtB,IAAI7vB,GAA2D4xB,EAAI5xB,UACnEA,GAAW6xB,YAAc,EACzB1pD,MAAKupD,aAAa/vC,KAAKqe,EACvB4xB,GAAI5xB,WAAWC,cAAgB,CAC/B93B,MAAKqmD,cAAc7sC,KAAKiwC,GAIlBtb,GAAA5tC,UAAAopD,oBAAP,WAEE,MAAO,IAAIxP,GAAkB,GAAIgP,GAAUnpD,KAAKsnD,iBAI3CnZ,GAAA5tC,UAAAgnD,uBAAP,SAA8BC,GAE7B,GAAI1oC,GAAgC9e,KAAY,OAChD,IAAI4pD,GAAqB9qC,EAAMwvB,SAC/B,IAAI17B,GAAe5S,KAAK6pD,QAAQ/yC,aAGhC,KAAK,GAAI5X,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClCc,KAAKupD,aAAarqD,GAAG0oD,IAAMgC,CAC3B5pD,MAAKqmD,cAAcnnD,GAAGwH,UAAUoM,SAAWF,CAC3C5S,MAAKqpD,aAAanqD,GAAK,MAKlBivC,GAAA5tC,UAAAsmD,cAAP,SAAqB1xC,EAA0BsD,EAAauc,GAE3D,IAAK,GAAI91B,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIc,KAAKqpD,aAAanqD,GAAI,CACzBc,KAAK+mD,kBAAkBpwC,OAAS3W,KAAKqmD,cAAcnnD,EACnDc,MAAK+mD,kBAAkB7rC,OACvBzC,GAAMyb,mBAAmBl0B,KAAK+mD,kBAC9B/xB,GAAS80B,SAAS9pD,KAAK+mD,kBAAmB5xC,EAAO40C,YAAYC,UAAW,KAAM9qD,KAIlF,OAAAivC,IA7EkCib,EA+ElCzpD,GAA6BJ,QAApB4uC,I1E63aN8b,iCAAiC7oD,UAAUw4B,qCAAqC,qCAAqCswB,8DAA8D,8DAA8DtO,gDAAgD,kDAAkD9R,sEAAsE,SAASrrC,EAAQkB,EAAOJ,GACpb,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2E79atB,IAAOkgD,GAAO9hD,EAAgB,+BAC9B,IAAO0J,GAAQ1J,EAAgB,gCAG/B,IAAOinD,GAAoBjnD,EAAa,mDAIxC,IAAOk2B,GAAMl2B,EAAgB,qCAE7B,IAAO2qD,GAAgB3qD,EAAc,8DACrC,IAAOy7C,GAAez7C,EAAc,8CAEpC,IAAM+pC,GAAuB,SAAA9nC,GAASX,EAAhCyoC,EAAuB9nC,EAc5B,SAdK8nC,KAgBJ9nC,EAAAlB,KAAAQ,KAXMA,MAAAmqD,cAAuB,GAGvBnqD,MAAAgpD,OAAgB,EAUtBhpD,MAAKinD,eACLjnD,MAAKgoD,yBAA2B,GAAItC,EACpC1lD,MAAKknD,qBAAuB,GAAIvyB,GAAO30B,KAAKgoD,yBAC5ChoD,MAAK8oD,iBACL9oD,MAAK+nD,SAAW,GAAI5/C,GAGrBxH,OAAAC,eAAW4nC,EAAAjoC,UAAA,Q3E48aJM,I2E58aP,WAEC,MAAOb,MAAKgpD,Q3E68aNtmD,I2E18aP,SAAgBC,GAEf3C,KAAKgpD,OAASrmD,G3E28aR5B,WAAY,KACZC,aAAc,M2Ez8arBL,QAAAC,eAAW4nC,EAAAjoC,UAAA,e3E48aJM,I2E58aP,WAEC,MAAOb,MAAKmqD,e3E68aNznD,I2E18aP,SAAuBC,GAEtB3C,KAAKmqD,cAAgBxnD,G3E28af5B,WAAY,KACZC,aAAc,M2Ex8arBL,QAAAC,eAAW4nC,EAAAjoC,UAAA,oB3E48aJM,I2E58aP,WAEC,MAAOb,MAAKknD,qBAAqBnf,gB3E68a3BhnC,WAAY,KACZC,aAAc,M2E18arBL,QAAAC,eAAW4nC,EAAAjoC,UAAA,S3E88aJM,I2E98aP,WAEC,MAAOb,MAAKoqD,OAASpqD,KAAKqqD,Q3E+8apBtpD,WAAY,KACZC,aAAc,M2E78adwnC,GAAAjoC,UAAA+pD,aAAP,SAAoBC,GAEnB,GAAIvqD,KAAKwqD,WAAaD,EACrB,MAED7pD,GAAAH,UAAM+pD,aAAY9qD,KAAAQ,KAACuqD,EAEnB,IAAIvqD,KAAKwqD,UAAW,CACnBxqD,KAAKyqD,kBAAoB,IACzBzqD,MAAKsnD,eAAiBiD,EAASh6C,UACzB,CACNvQ,KAAKyqD,kBAAoB,OAIpBjiB,GAAAjoC,UAAAopD,oBAAP,WAEC,MAAO,IAAIzP,GAAgB,GAAIqG,GAAQvgD,KAAKsnD,eAAgBtnD,KAAKsnD,iBAI3D9e,GAAAjoC,UAAAsmD,cAAP,SAAqB1xC,EAAwBsD,EAAauc,GAEzDh1B,KAAK+mD,kBAAkBpwC,OAAS3W,KAAKknD,oBACrClnD,MAAK+mD,kBAAkBC,WAAahnD,KAAKinD,YACzCjnD,MAAK+mD,kBAAkB7rC,OACvBzC,GAAMyb,mBAAmBl0B,KAAK+mD,kBAC9B/xB,GAAS80B,SAAS9pD,KAAK+mD,kBAAmB5xC,EAAOytC,UAAUwE,SAIrD5e,GAAAjoC,UAAA0nD,kBAAP,SAAyBT,GAExB,GAAIkD,GAAoC1qD,KAAKknD,qBAAqByD,aAClE,IAAIC,GAAmCpD,EAAWmD,aAClD3qD,MAAKinD,aAAaxnD,OAAS,CAE3BO,MAAKinD,aAAa,GAAKyD,EAAmB,EAC1C1qD,MAAKinD,aAAa,GAAKyD,EAAmB,EAC1C1qD,MAAKinD,aAAa,GAAKyD,EAAmB,EAC1C1qD,MAAKinD,aAAa,GAAKyD,EAAmB,EAE1C,IAAI5rC,GAA4C9e,KAAK6pD,OACrD,IAAIgB,GAAe/rC,EAAMgsC,cACzB,IAAIC,GAAcF,EAAI7nD,CACtB,IAAIgoD,GAAcH,EAAI5nD,CACtB,IAAIgoD,GAAcJ,EAAI3nD,CACtB,IAAI8c,GAAW,CACf,KAAK,GAAI9gB,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIypB,GAAgBiiC,EAAkB1rD,EACtC,IAAIypB,EAAM1pB,EAAE8rD,EAAOpiC,EAAMzoB,EAAE8qD,EAAOriC,EAAMC,EAAEqiC,EAAO,EAChDjrD,KAAKinD,aAAajnC,KAAO2I,GAKrB6f,GAAAjoC,UAAAgnD,uBAAP,SAA8BC,GAE7BxnD,KAAK6nD,oCAAoCL,EAAYA,EAAW3vB,WAAWiwB,eAAgB9nD,KAAK+nD,SAChG/nD,MAAKgoD,yBAAyBp+B,OAAS5pB,KAAK+nD,QAC5C/nD,MAAKioD,kBAAkBT,GAGjBhf,GAAAjoC,UAAAsnD,oCAAP,SAA2CL,EAAmB0D,EAAuBthC,GAEpF,GAAIpU,GAAoB,GAAI1J,MAC5B,IAAI++C,EACJ,IAAI7nD,GAAUC,EAAUC,CACxB,IAAIwrB,GAAaC,CACjB,IAAIE,GAAaC,CACjB,IAAI5vB,EAEJ,IAAI4f,GAA4C9e,KAAK6pD,OACrDgB,GAAM/rC,EAAMgsC,cACZ9qD,MAAKknD,qBAAqBxgD,UAAUukB,SAAWjrB,KAAK6pD,QAAQp7C,cAC5DzL,GAAIyU,KAAK2I,OAAOonC,EAAWxkD,EAAI6nD,EAAI7nD,EAAEhD,KAAKmqD,eAAenqD,KAAKgpD,QAAQhpD,KAAKgpD,MAC3E/lD,GAAIwU,KAAK2I,OAAOonC,EAAWvkD,EAAI4nD,EAAI5nD,EAAEjD,KAAKmqD,eAAenqD,KAAKgpD,QAAQhpD,KAAKgpD,MAC3E9lD,GAAIuU,KAAK2I,OAAOonC,EAAWtkD,EAAI2nD,EAAI3nD,EAAElD,KAAKmqD,eAAenqD,KAAKgpD,QAAQhpD,KAAKgpD,MAC3EhpD,MAAKknD,qBAAqBlkD,EAAIA,CAC9BhD,MAAKknD,qBAAqBjkD,EAAIA,CAC9BjD,MAAKknD,qBAAqBhkD,EAAIA,CAE9BlD,MAAK+nD,SAASv5C,SAASxO,KAAKknD,qBAAqB50C,sBACjDtS,MAAK+nD,SAAS1uC,QAAQmuC,EAAW/4C,eACjCzO,MAAK+nD,SAAS7e,iBAAiBgiB,EAASlrD,KAAK8oD,eAE7Cp6B,GAAOG,EAAO7uB,KAAK8oD,eAAe,EAClCn6B,GAAOG,EAAO9uB,KAAK8oD,eAAe,EAClC9oD,MAAKoqD,OAASpqD,KAAK8oD,eAAe,EAElC5pD,GAAI,CACJ,OAAOA,EAAI,GAAI,CACd8D,EAAIhD,KAAK8oD,eAAe5pD,EACxB+D,GAAIjD,KAAK8oD,eAAe5pD,EAAI,EAC5BgE,GAAIlD,KAAK8oD,eAAe5pD,EAAI,EAC5B,IAAI8D,EAAI0rB,EACPA,EAAO1rB,CACR,IAAIA,EAAI6rB,EACPA,EAAO7rB,CACR,IAAIC,EAAI0rB,EACPA,EAAO1rB,CACR,IAAIA,EAAI6rB,EACPA,EAAO7rB,CACR,IAAIC,EAAIlD,KAAKoqD,OACZpqD,KAAKoqD,OAASlnD,CACfhE,IAAK,EAGNc,KAAKqqD,OAAS,CAEd,IAAIplD,GAAW4pB,EAAOH,CACtB,IAAIq6B,GAAWj6B,EAAOH,CACtB,IAAI1uB,GAAW,GAAGD,KAAKoqD,OAASpqD,KAAKqqD,OAErC,IAAI37B,EAAO,EACVA,GAAQ1uB,KAAKgpD,MAEd,IAAIr6B,EAAO,EACVA,GAAQ3uB,KAAKgpD,MAEdt6B,GAAOjX,KAAK2I,MAAMsO,EAAK1uB,KAAKgpD,QAAQhpD,KAAKgpD,MACzCr6B,GAAOlX,KAAK2I,MAAMuO,EAAK3uB,KAAKgpD,QAAQhpD,KAAKgpD,MAEzC,IAAIC,GAAe,EAAEjpD,KAAKgpD,MAC1B/jD,GAAIwS,KAAK2I,MAAMnb,EAAEgkD,EAAQ,GAAGA,CAC5BF,GAAItxC,KAAK2I,MAAM2oC,EAAEE,EAAQ,GAAGA,CAE5Bp6B,GAAOH,EAAOzpB,CACd6pB,GAAOH,EAAOo6B,CAEd9jD,GAAI,EAAEA,CACN8jD,GAAI,EAAEA,CAENvzC,GAAI,GAAK,EAAEvQ,CACXuQ,GAAI,GAAK,EAAEuzC,CACXvzC,GAAI,IAAMvV,CACVuV,GAAI,MAAQqZ,EAAOH,GAAMzpB,CACzBuQ,GAAI,MAAQsZ,EAAOH,GAAMo6B,CACzBvzC,GAAI,KAAOxV,KAAKqqD,OAAOpqD,CACvBuV,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElFoU,GAAO7T,gBAAgBP,GAEzB,OAAAgzB,IAzMsC4gB,EA2MtCzpD,GAAiCJ,QAAxBipC,I3Eq7aNuY,+BAA+B3/C,UAAUoa,gCAAgCpa,UAAU8nD,mDAAmD9nD,UAAUw4B,qCAAqC,qCAAqCswB,8DAA8D,8DAA8DvO,8CAA8C,gDAAgDwP,0EAA0E,SAAS1sD,EAAQkB,EAAOJ,GACzhB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4EjpbtB,IAAOmoC,GAAuB/pC,EAAY,qEAE1C,IAAM2sD,GAA2B,SAAA1qD,GAASX,EAApCqrD,EAA2B1qD,EAIhC,SAJK0qD,GAIOC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,GAEX3qD,EAAAlB,KAAAQ,KAEAA,MAAKqrD,cAAgBA,EAMtB1qD,OAAAC,eAAWwqD,EAAA7qD,UAAA,iB5E+obJM,I4E/obP,WAEC,MAAOb,MAAKsrD,gB5EgpbN5oD,I4E7obP,SAAyBC,GAExB,GAAIA,EAAQ,EACXA,EAAQ,MAAQ,IAAIA,EAAQ,EAC5BA,EAAQ,CAET3C,MAAKsrD,eAAiB3oD,G5E8obhB5B,WAAY,KACZC,aAAc,M4E5obdoqD,GAAA7qD,UAAAgnD,uBAAP,SAA8BC,GAE7B,GAAI0D,GAAwB1D,EAAW3vB,WAAWiwB,cAElD,KAAK,GAAI5oD,GAAmB,EAAGA,EAAI,KAAMA,EAAG,CAC3C,GAAI8F,GAAWkmD,EAAQhsD,EACvBc,MAAK8oD,eAAe5pD,GAAK8F,CACzBhF,MAAK8oD,eAAe5pD,EAAI,IAAM8F,GAAKkmD,EAAQhsD,EAAI,IAAM8F,GAAGhF,KAAKsrD,eAG9DtrD,KAAK6nD,oCAAoCL,EAAYxnD,KAAK8oD,eAAgB9oD,KAAK+nD,SAC/E/nD,MAAKgoD,yBAAyBp+B,OAAS5pB,KAAK+nD,SAE9C,OAAAqD,IAzC0C5iB,EA2C1C7oC,GAAqCJ,QAA5B6rD,I5E6obNthB,qEAAqE,uEAAuEogB,+DAA+D,SAASzrD,EAAQkB,EAAOJ,G6E3rbtO,GAAOgJ,GAAmB9J,EAAa,6CAMvC,IAAO8sD,GAAqB9sD,EAAY,oDAIxC,IAAM2qD,GAAgB,WAYrB,QAZKA,KAMEppD,KAAAsnD,eAAwB,IAGvBtnD,MAAAwrD,mBAA6B,IAKpCxrD,MAAK+mD,kBAAoB/mD,KAAKyrD,yBAGxBrC,EAAA7oD,UAAAkrD,uBAAP,WAEC,MAAO,IAAIF,GAGZ5qD,QAAAC,eAAWwoD,EAAA7oD,UAAA,qB7EwqbJM,I6ExqbP,WAEC,MAAOb,MAAKwrD,oB7EyqbN9oD,I6EtqbP,SAA6BC,GAE5B3C,KAAKwrD,mBAAqB7oD,G7EuqbpB5B,WAAY,KACZC,aAAc,M6ErqbdooD,GAAA7oD,UAAAmrD,cAAP,WAEC1rD,KAAK2rD,iBAAmB,KAGlBvC,GAAA7oD,UAAA+pD,aAAP,SAAoBC,GAEnB,GAAIvqD,KAAKwqD,YAAcxqD,KAAKyqD,kBAC3BzqD,KAAKwqD,UAAUvpD,SAEhBjB,MAAKwqD,UAAYD,EAGlB5pD,QAAAC,eAAWwoD,EAAA7oD,UAAA,S7EmqbJM,I6EnqbP,WAEC,MAAOb,MAAK6pD,S7EoqbNnnD,I6EjqbP,SAAiBC,GAEhB3C,KAAK6pD,QAAUlnD,G7EkqbT5B,WAAY,KACZC,aAAc,M6EhqbrBL,QAAAC,eAAWwoD,EAAA7oD,UAAA,Y7EmqbJM,I6EnqbP,WAEC,IAAKb,KAAKwqD,UACTxqD,KAAKwqD,UAAYxqD,KAAK2pD,qBAEvB,OAAO3pD,MAAKwqD,W7EmqbNzpD,WAAY,KACZC,aAAc,M6EjqbrBL,QAAAC,eAAWwoD,EAAA7oD,UAAA,gB7EoqbJM,I6EpqbP,WAEC,MAAOb,MAAKsnD,gB7EqqbN5kD,I6ElqbP,SAAwBC,GAEvB,GAAIA,GAAS3C,KAAKsnD,eACjB,MAEDtnD,MAAK2mD,kBAAkBhkD,I7EkqbjB5B,WAAY,KACZC,aAAc,M6EhqbdooD,GAAA7oD,UAAAU,QAAP,WAECjB,KAAK+mD,kBAAoB,IAEzB,IAAI/mD,KAAKwqD,YAAcxqD,KAAKyqD,kBAC3BzqD,KAAKwqD,UAAUvpD,SAEhBjB,MAAKwqD,UAAY,KAGXpB,GAAA7oD,UAAAopD,oBAAP,WAEC,KAAM,IAAIphD,GAGJ6gD,GAAA7oD,UAAAqrD,gBAAP,SAAuBC,EAAiC72B,GAEvDh1B,KAAK2rD,iBAAmB,KAExB3rD,MAAKunD,uBAAuBsE,EAAgBl1C,OAE5C,KAAK3W,KAAKwqD,UACTxqD,KAAKwqD,UAAYxqD,KAAK2pD,qBAEvB3pD,MAAK6mD,cAAc7mD,KAAKwqD,UAAWqB,EAAgBpzC,MAAOuc,GAGpDo0B,GAAA7oD,UAAAgnD,uBAAP,SAA8BC,GAE7B,KAAM,IAAIj/C,GAGJ6gD,GAAA7oD,UAAAsmD,cAAP,SAAqB1xC,EAAoBsD,EAAauc,GAErD,KAAM,IAAIzsB,GAGJ6gD,GAAA7oD,UAAAomD,kBAAP,SAAyBhkD,GAExB3C,KAAKsnD,eAAiB3kD,CAEtB,IAAI3C,KAAKyqD,kBAAmB,CAC3B,KAAMrrD,OAAM,2DACN,IAAIY,KAAKwqD,UAAW,CAC1BxqD,KAAKwqD,UAAUvpD,SACfjB,MAAKwqD,UAAY,MAGpB,OAAApB,KAEAzpD,GAA0BJ,QAAjB6pD,I7EopbNhuC,6CAA6Cha,UAAU0qD,oDAAoD,sDAAsDC,2CAA2C,SAASttD,EAAQkB,EAAOJ,GACvO,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8EjybtB,IAAO2rD,GAAUvtD,EAAe,0C9EuybhC,I8E9xbMwtD,GAAU,SAAAvrD,GAASX,EAAnBksD,EAAUvrD,EAIf,SAJKurD,GAIOC,EAAqBv1C,EAAgB6B,GAEhD9X,EAAAlB,KAAAQ,KAAMksD,EAAMv1C,EAAQ6B,GAMdyzC,EAAA1rD,UAAA4rD,gBAAP,SAAuBh4B,IAVT83B,GAAAtmD,GAAY,YAc3B,OAAAsmD,IAhByBD,EAkBLrsD,GAAAJ,QAAX0sD,I9E4xbNG,0CAA0C,4CAA4CC,qDAAqD,SAAS5tD,EAAQkB,EAAOJ,GACtK,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+E5zbtB,IAAO2rD,GAAUvtD,EAAe,0C/Ek0bhC,I+EzzbM6tD,GAAoB,SAAA5rD,GAASX,EAA7BusD,EAAoB5rD,EAUzB,SAVK4rD,GAUOJ,EAAqBK,EAA0B/zC,GAE1D9X,EAAAlB,KAAAQ,KAAMksD,EAAMK,EAAkB/zC,EAE9BxY,MAAKwsD,kBAAoBD,EAMnBD,EAAA/rD,UAAA4rD,gBAAP,SAAuBh4B,GAEtB,GAAIA,EAAUs4B,UAAUzsD,MACvBm0B,EAAUu4B,sBAAsB1sD,KAAKwsD,mBAOhCF,GAAA/rD,UAAAosD,gBAAP,WAEC,MAAO,OA9BML,GAAA3mD,GAAY,sBAgC3B,OAAA2mD,IAlCmCN,EAoCLrsD,GAAAJ,QAArB+sD,I/EkzbNF,0CAA0C,4CAA4CA,2CAA2C,SAAS3tD,EAAQkB,EAAOJ,GAC5J,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgFn2btB,IAAOiI,GAAQ7J,EAAgB,gCAE/B,IAAOqpB,GAAsBrpB,EAAY,mDACzC,IAAOitB,GAAcjtB,EAAc,2CAEnC,IAAO+J,GAAU/J,EAAe,uCAChC,IAAO8tB,GAAU9tB,EAAe,uCAEhC,IAAOi1B,GAAQj1B,EAAgB,wChFs2b/B,IgF51bMutD,GAAU,SAAAtrD,GAASX,EAAnBisD,EAAUtrD,EAUf,SAVKsrD,GAUOE,EAAqB9sC,EAAgB5G,GAEhD9X,EAAAlB,KAAAQ,KACAA,MAAK4sD,MAAQV,CACblsD,MAAK6sD,QAAUztC,CACfpf,MAAKg0B,WAAaxb,CAClBxY,MAAK8sD,cAAgB,CAErB9sD,MAAK2N,cAEL3N,MAAKoQ,aAAepQ,KAAK6sD,QAAQz8C,aAGlCzP,OAAAC,eAAWorD,EAAAzrD,UAAA,UhFi1bJM,IgFj1bP,WAEC,MAAOb,MAAK6sD,ShFk1bN9rD,WAAY,KACZC,aAAc,MgFh1bdgrD,GAAAzrD,UAAAwsD,iBAAP,WAEC,GAAI/sD,KAAKgtD,SACRhtD,KAAKgtD,SAASC,YAAYjtD,KAE3BA,MAAKgtD,SAAW,KAOVhB,GAAAzrD,UAAAosD,gBAAP,WAEC,MAAO3sD,MAAKof,OAAOhT,aASb4/C,GAAAzrD,UAAA+nB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKxoB,KAAK6sD,QAAQv8C,cACjB,MAAO,MAER,OAAOtQ,MAAK+R,QAAQuW,YAAYC,EAAQC,GAMlCwjC,GAAAzrD,UAAA4rD,gBAAP,SAAuBh4B,GAEtB,GAAIA,EAAUs4B,UAAUzsD,MAAO,CAC9Bm0B,EAAU+4B,YAAYltD,KAAK6sD,QAE3B,IAAI7sD,KAAKmtD,wBAA0Bh5B,EAAUi5B,kBAC5Cj5B,EAAU+4B,YAAYltD,KAAKqtD,gBAOvBrB,GAAAzrD,UAAA+sD,kBAAP,SAAyBC,EAAsBC,GAE9C,IAAKxtD,KAAK6sD,QAAQv8C,cACjB,MAAO,MAER,IAAIxJ,GAAwC9G,KAAK6sD,QAAQY,oBACzD3mD,GAAmB4mD,iBAAmB1tD,KAAK6sD,QAAQv6C,sBAAsBvC,gBAAgBw9C,EACzFzmD,GAAmB6mD,kBAAoB3tD,KAAK6sD,QAAQv6C,sBAAsB4rB,qBAAqBsvB,EAE/F,KAAK1mD,EAAmB8wC,YACvB9wC,EAAmB8wC,YAAc,GAAItvC,EAEtC,IAAIoxB,GAA0B15B,KAAK+R,QAAQkX,gBAAgBniB,EAAmB4mD,iBAAkB5mD,EAAmB6mD,kBAAmB7mD,EAAmB8wC,YAEzJ,IAAIle,EAAmB,EACtB,MAAO,MAER5yB,GAAmB4yB,iBAAmBA,CACtC5yB,GAAmBymD,YAAcA,CACjCzmD,GAAmB0mD,aAAeA,CAClC1mD,GAAmB8mD,wBAA0Bl0B,GAAoB,CAEjE,OAAO,MAODsyB,GAAAzrD,UAAAstD,oBAAP,WAEC,MAAO7tD,MAAK+R,QAAQ+7C,gBAGd9B,GAAAzrD,UAAA+X,oBAAP,WAECtY,KAAK+R,QAAQkQ,YAEbjiB,MAAKg0B,WAAW+5B,eAAe/tD,MAGzBgsD,GAAAzrD,UAAAoN,aAAP,WAEC,GAAI3N,KAAK6sD,QAAQpgB,YAAcjkC,EAAWyE,iBACzCjN,KAAK+R,QAAU,GAAI+V,GAAuB9nB,KAAK6sD,aAC3C,IAAI7sD,KAAK6sD,QAAQpgB,YAAcjkC,EAAW4jB,OAC9CpsB,KAAK+R,QAAU,GAAI2Z,GAAe1rB,KAAK6sD,aACnC,IAAI7sD,KAAK6sD,QAAQpgB,YAAcjkC,EAAW6jB,KAC9CrsB,KAAK+R,QAAU,GAAIwa,EAEpBvsB,MAAKguD,oBA3HQhC,GAAArmD,GAAY,YA6H3B,OAAAqmD,IA/HyBt4B,EAiIzB/zB,GAAoBJ,QAAXysD,IhF2zbNpwC,gCAAgCxa,UAAUsmB,mDAAmD,mDAAmD8D,2CAA2C,2CAA2CzP,uCAAuC,uCAAuCuQ,uCAAuC,uCAAuCgI,wCAAwC,0CAA0C25B,+CAA+C,SAASxvD,EAAQkB,EAAOJ,GAC9hB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiFp9btB,IAAO2rD,GAAUvtD,EAAe,0CjF09bhC,IiFj9bMyvD,GAAc,SAAAxtD,GAASX,EAAvBmuD,EAAcxtD,EAUnB,SAVKwtD,GAUOhC,EAAqBiC,EAAoB31C,GAEpD9X,EAAAlB,KAAAQ,KAAMksD,EAAMiC,EAAY31C,EAExBxY,MAAKouD,YAAcD,EAMbD,EAAA3tD,UAAA4rD,gBAAP,SAAuBh4B,GAEtB,GAAIA,EAAUs4B,UAAUzsD,MACvBm0B,EAAUk6B,gBAAgBruD,KAAKouD,aAO1BF,GAAA3tD,UAAAosD,gBAAP,WAEC,MAAO,OA9BMuB,GAAAvoD,GAAY,gBAgC3B,OAAAuoD,IAlC6BlC,EAoC7BrsD,GAAwBJ,QAAf2uD,IjF08bN9B,0CAA0C,4CAA4C93B,yCAAyC,SAAS71B,EAAQkB,EAAOJ,GkFr/b1J,GAAOgJ,GAAmB9J,EAAa,6ClF0/bvC,IkFl/bMi1B,GAAQ,WAqEb,QArEKA,KAOE1zB,KAAAsuD,gBAAyB,CAIzBtuD,MAAA8sD,cAAuB,CA4D7B9sD,MAAKuuD,aAAe,GAAIziD,OAtDzBnL,OAAAC,eAAW8yB,EAAAnzB,UAAA,gBlF8+bJM,IkF9+bP,WAEC,MAAOb,MAAKwuD,uBlF++bN9rD,IkF5+bP,SAAwBC,GAEvB,GAAI3C,KAAKwuD,uBAAyB7rD,EACjC,MAED3C,MAAKwuD,sBAAwB7rD,CAE7B3C,MAAKyuD,6BAA6BzuD,KAAKgtD,SAAUhtD,KAAKgtD,SAAS0B,qBAAuB,QlF2+bhF3tD,WAAY,KACZC,aAAc,MkFx+brBL,QAAAC,eAAW8yB,EAAAnzB,UAAA,wBlF2+bJM,IkF3+bP,WAEC,MAAOb,MAAK2uD,uBlF4+bNjsD,IkFz+bP,SAAgCC,GAE/B,GAAI3C,KAAK2uD,uBAAyBhsD,EACjC,MAED3C,MAAK2uD,sBAAwBhsD,CAE7B,KAAK,GAAIzD,GAAW,EAAGA,EAAIc,KAAKsuD,kBAAmBpvD,EAClDc,KAAKuuD,aAAarvD,GAAGuvD,6BAA6BzuD,KAAK2uD,wBlFw+blD5tD,WAAY,KACZC,aAAc,MkFn+brBL,QAAAC,eAAW8yB,EAAAnzB,UAAA,UlFy+bJM,IkFz+bP,WAEC,MAAOb,MAAKgtD,UlF0+bNjsD,WAAY,KACZC,aAAc,MkFp+brBL,QAAAC,eAAW8yB,EAAAnzB,UAAA,iBlF2+bJM,IkF3+bP,WAEC,MAAOb,MAAK8sD,elF4+bN/rD,WAAY,KACZC,aAAc,MkF39bd0yB,GAAAnzB,UAAA+nB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MASDkL,GAAAnzB,UAAA+sD,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAOD95B,GAAAnzB,UAAAosD,gBAAP,WAEC,MAAO,MAQDj5B,GAAAnzB,UAAAquD,uBAAP,SAA8BxvC,GAE7B,MAAOpf,MAOD0zB,GAAAnzB,UAAA4rD,gBAAP,SAAuBh4B,GAEtB,GAAIn0B,KAAK6uD,eAAiB,IAAM7uD,KAAKmtD,uBACpC,MAED,IAAIh5B,EAAUs4B,UAAUzsD,MAAO,CAC9B,GAAId,GAAW,CAEf;MAAOA,EAAIc,KAAKsuD,gBACftuD,KAAKuuD,aAAarvD,KAAKitD,gBAAgBh4B,EAExC,IAAIn0B,KAAKmtD,wBAA0Bh5B,EAAUi5B,kBAC5Cj5B,EAAU+4B,YAAYltD,KAAKqtD,gBAQvB35B,GAAAnzB,UAAAuuD,iBAAP,SAAwB36B,GAEvB,GAAIn0B,KAAKqtD,eAAiB,KACzBrtD,KAAKqtD,cAAgBrtD,KAAK6tD,qBAE3B15B,GAAU+4B,YAAYltD,KAAKqtD,eAQrB35B,GAAAnzB,UAAAwuD,SAAP,SAAgBC,GAEfA,EAAKhC,SAAWhtD,IAChBA,MAAK8sD,eAAiBkC,EAAKH,aAC3B7uD,MAAKuuD,aAAcvuD,KAAKsuD,mBAAsBU,CAE9CA,GAAKP,6BAA6BzuD,KAAK0uD,qBAEvC,IAAIO,GAAqBD,EAAKH,aAC9BG,GAAOhvD,IAEP,GAAG,CACFgvD,EAAKlC,eAAiBmC,SACbD,EAAOA,EAAKhC,WAAa,MAQ7Bt5B,GAAAnzB,UAAA0sD,YAAP,SAAmB+B,GAElB,GAAIt1C,GAAe1Z,KAAKuuD,aAAa50C,QAAQq1C,EAC7ChvD,MAAKuuD,aAAa70C,GAAS1Z,KAAKuuD,eAAevuD,KAAKsuD,gBACpDtuD,MAAKuuD,aAAaW,KAElBF,GAAKP,6BAA6B,MAElC,IAAIQ,GAAqBD,EAAKH,aAC9BG,GAAOhvD,IAEP,GAAG,CACFgvD,EAAKH,eAAiBI,SACbD,EAAOA,EAAKhC,WAAa,MAG5Bt5B,GAAAnzB,UAAAkuD,6BAAR,SAAqC9rD,GAEpC,GAAI3C,KAAKmtD,wBAA0BntD,KAAKwuD,uBAAyB7rD,EAChE,MAED3C,MAAKmtD,uBAAyBntD,KAAKwuD,uBAAyB7rD,CAE5D,KAAK,GAAIzD,GAAW,EAAGA,EAAIc,KAAKsuD,kBAAmBpvD,EAClDc,KAAKuuD,aAAarvD,GAAGuvD,6BAA6BzuD,KAAK2uD,sBAExD,IAAI3uD,KAAKmtD,uBAAwB,CAChCntD,KAAKqtD,cAAgBrtD,KAAK6tD,0BACpB,CAEN7tD,KAAKqtD,cAAgB,MAKhB35B,GAAAnzB,UAAAytD,kBAAP,WAEC,GAAIhuD,KAAKmtD,uBAAwB,CAEhCntD,KAAKqtD,cAAgBrtD,KAAK6tD,uBAIrBn6B,GAAAnzB,UAAAstD,oBAAP,WAEC,KAAM,IAAItlD,GAEZ,OAAAmrB,KAEA/zB,GAAkBJ,QAATm0B,IlFo8bNtY,6CAA6Cha,YAAY+tD,yCAAyC,SAAS1wD,EAAQkB,EAAOJ,GAI7H,GmF9qcM6vD,GAAQ,WAEb,QAFKA,MAKN,MAAAA,KAEAzvD,GAAkBJ,QAAT6vD,OnF8qcH76B,0CAA0C,SAAS91B,EAAQkB,EAAOJ,GoFlrcxE,GAAO0sD,GAAUxtD,EAAe,0CAChC,IAAO6tD,GAAoB7tD,EAAa,oDACxC,IAAOutD,GAAUvtD,EAAe,0CAChC,IAAOyvD,GAAczvD,EAAc,8CACnC,IAAO4wD,GAAc5wD,EAAc,8CACnC,IAAO6wD,GAAU7wD,EAAe,0CAEhC,IAAO2wD,GAAQ3wD,EAAgB,wCAC/B,IAAO8wD,GAAc9wD,EAAc,yCpFsrcnC,IoFhrcMk1B,GAAS,WAad,QAbKA,GAaO67B,GAHJxvD,KAAAyvD,aAAuB,KAK9BzvD,MAAK0vD,UAAYF,GAAuB,GAAIJ,EAE5CpvD,MAAK2vD,gBAAkB,GAAIJ,GAAetD,EAAYjsD,KACtDA,MAAK4vD,0BAA4B,GAAIL,GAAejD,EAAsBtsD,KAC1EA,MAAK6vD,gBAAkB,GAAIN,GAAevD,EAAYhsD,KACtDA,MAAK8vD,oBAAsB,GAAIP,GAAerB,EAAgBluD,KAC9DA,MAAK+vD,oBAAsB,GAAIR,GAAeF,EAAgBrvD,KAC9DA,MAAKgwD,gBAAkB,GAAIT,GAAeD,EAAYtvD,MAGvDW,OAAAC,eAAW+yB,EAAApzB,UAAA,YpFmqcJM,IoFnqcP,WAEC,MAAOb,MAAK0vD,WpFoqcN3uD,WAAY,KACZC,aAAc,MoFlqcd2yB,GAAApzB,UAAA6zB,SAAP,SAAgBD,GAEf,GAAIn0B,KAAKyvD,aACRzvD,KAAKiwD,gBAENjwD,MAAK0vD,UAAUvD,gBAAgBh4B,GAGzBR,GAAApzB,UAAAwtD,eAAP,SAAsBiB,GAErB,GAAIrwD,GAAeqB,KAAKkwD,YAExB,OAAOvxD,EAAG,CACT,GAAIqwD,GAAQrwD,EACX,MAEDA,GAAIA,EAAEwxD,kBAGPnB,EAAKmB,kBAAoBnwD,KAAKkwD,YAE9BlwD,MAAKkwD,aAAelB,CACpBhvD,MAAKyvD,aAAe,KAGd97B,GAAApzB,UAAA6vD,cAAP,SAAqBpB,GAEpB,GAAIrwD,EAEJqwD,GAAKjC,kBAEL,IAAIiC,GAAQhvD,KAAKkwD,aAAc,CAC9BlwD,KAAKkwD,aAAelB,EAAKmB,sBACnB,CACNxxD,EAAIqB,KAAKkwD,YACT,OAAOvxD,GAAKA,EAAEwxD,mBAAqBnB,EAClCrwD,EAAIA,EAAEwxD,iBAEP,IAAIxxD,EACHA,EAAEwxD,kBAAoBnB,EAAKmB,kBAG7BnB,EAAKmB,kBAAoB,IAEzB,KAAKnwD,KAAKkwD,aACTlwD,KAAKyvD,aAAe,MAGd97B,GAAApzB,UAAA0vD,eAAR,WAEC,GAAIjB,GAAkBhvD,KAAKkwD,YAC3B,IAAIG,EACJ,IAAI1xD,EACJqB,MAAKkwD,aAAe,IACpBlwD,MAAKyvD,aAAe,KAEpB,GAAG,CACFY,EAAarwD,KAAK0vD,UAAUd,uBAAuBI,EAAK5vC,OAExD,IAAI4vC,EAAKt9C,QAAU2+C,EAAY,CAC9B,GAAIrB,EACHA,EAAKjC,kBAENsD,GAAWtB,SAASC,GAGrBrwD,EAAIqwD,EAAKmB,iBACTnB,GAAKmB,kBAAoB,IAGzBnB,GAAK5vC,OAAOtF,0BAEHk1C,EAAOrwD,IAAM,MAOjBg1B,GAAApzB,UAAAm2B,iBAAP,SAAwB/f,GAEvB3W,KAAK+tD,eAAe/tD,KAAK2vD,gBAAgBW,QAAQ35C,IAM3Cgd,GAAApzB,UAAAqpC,2BAAP,SAAkC2iB,GAEjCvsD,KAAK+tD,eAAe/tD,KAAK4vD,0BAA0BU,QAAQ/D,IAMrD54B,GAAApzB,UAAAulC,iBAAP,SAAwB1mB,GAEvBpf,KAAK+tD,eAAe/tD,KAAK6vD,gBAAgBS,QAAQlxC,IAM3CuU,GAAApzB,UAAA+pC,qBAAP,SAA4B6jB,GAE3BnuD,KAAK+tD,eAAe/tD,KAAK8vD,oBAAoBQ,QAAQnC,IAM/Cx6B,GAAApzB,UAAAyuC,qBAAP,SAA4BuhB,GAE3BvwD,KAAK+tD,eAAe/tD,KAAK+vD,oBAAoBO,QAAQC,IAM/C58B,GAAApzB,UAAAkwC,iBAAP,SAAwB+f,GAEvBxwD,KAAK+tD,eAAe/tD,KAAKgwD,gBAAgBM,QAAQE,IAM3C78B,GAAApzB,UAAA4nC,mBAAP,SAA0BxxB,GAEzB3W,KAAKowD,cAAcpwD,KAAK2vD,gBAAgBc,YAAY95C,IAM9Cgd,GAAApzB,UAAAspC,6BAAP,SAAoC0iB,GAEnCvsD,KAAKowD,cAAcpwD,KAAK4vD,0BAA0Ba,YAAYlE,IAMxD54B,GAAApzB,UAAAwlC,mBAAP,SAA0B3mB,GAEzBpf,KAAKowD,cAAcpwD,KAAK6vD,gBAAgBY,YAAYrxC,IAM9CuU,GAAApzB,UAAAgqC,uBAAP,SAA8B4jB,GAE7BnuD,KAAKowD,cAAcpwD,KAAK8vD,oBAAoBW,YAAYtC,IAMlDx6B,GAAApzB,UAAA0uC,uBAAP,SAA8BshB,GAE7BvwD,KAAKowD,cAAcpwD,KAAK+vD,oBAAoBU,YAAYF,IAMlD58B,GAAApzB,UAAAmwC,mBAAP,SAA0B8f,GAEzBxwD,KAAKowD,cAAcpwD,KAAKgwD,gBAAgBS,YAAYD,IAEtD,OAAA78B,KAEmBh0B,GAAAJ,QAAVo0B,IpFuncNo4B,0CAA0C,0CAA0CM,oDAAoD,oDAAoDD,0CAA0C,0CAA0C6B,8CAA8C,8CAA8CkB,wCAAwC,wCAAwCuB,8CAA8C,8CAA8CC,0CAA0C,0CAA0CC,yCAAyC,2CAA2CF,+CAA+C,SAASjyD,EAAQkB,EAAOJ,GAC1wB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqF11ctB,IAAO2rD,GAAUvtD,EAAe,0CrFg2chC,IqFv1cM4wD,GAAc,SAAA3uD,GAASX,EAAvBsvD,EAAc3uD,EAUnB,SAVK2uD,GAUOnD,EAAqBqE,EAAoB/3C,GAEpD9X,EAAAlB,KAAAQ,KAAMksD,EAAMqE,EAAY/3C,EAExBxY,MAAK6wD,YAAcN,EAMblB,EAAA9uD,UAAA4rD,gBAAP,SAAuBh4B,GAEtB,GAAIA,EAAUs4B,UAAUzsD,MACvBm0B,EAAU28B,gBAAgB9wD,KAAK6wD,aAO1BxB,GAAA9uD,UAAAosD,gBAAP,WAEC,MAAO,OA9BM0C,GAAA1pD,GAAY,gBAgC3B,OAAA0pD,IAlC6BrD,EAoC7BrsD,GAAwBJ,QAAf8vD,IrFg1cNjD,0CAA0C,4CAA4CuE,2CAA2C,SAASlyD,EAAQkB,EAAOJ,GAC5J,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsFh4ctB,IAAO2rD,GAAUvtD,EAAe,0CtFw4chC,IsF73cM6wD,GAAU,SAAA5uD,GAASX,EAAnBuvD,EAAU5uD,EAUf,SAVK4uD,GAUOpD,EAAqB6E,EAAgBv4C,GAEhD9X,EAAAlB,KAAAQ,KAAMksD,EAAM6E,EAAQv4C,EAEpBxY,MAAKgxD,QAAUD,EAMTzB,EAAA/uD,UAAA4rD,gBAAP,SAAuBh4B,GAEtB,GAAIA,EAAUs4B,UAAqBzsD,MAClCm0B,EAAU88B,YAAYjxD,KAAKgxD,SAStB1B,GAAA/uD,UAAA+nB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAKxoB,KAAKgxD,QAAQ1gD,YACjB,MAAO,MAGR,OAAO,MApCMg/C,GAAA3pD,GAAY,YAsC3B,OAAA2pD,IAxCyBtD,EA0CLrsD,GAAAJ,QAAX+vD,ItFq3cNlD,0CAA0C,4CAA4C8E,mCAAmC,SAASzyD,EAAQkB,EAAOJ,SAE9I4xD,4CAA4C,SAAS1yD,EAAQkB,EAAOJ,SAEpE6xD,6CAA6C,SAAS3yD,EAAQkB,EAAOJ,GuFj7c3E,GAAO+I,GAAQ7J,EAAiB,gCAChC,IAAO4J,GAAK5J,EAAiB,6BvF27c7B,IuFv6cM4yD,GAAiB,WAStB,QATKA,GASOC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MAEXtxD,KAAKuxD,sBAAwBD,EAYvBD,EAAA9wD,UAAAolC,uBAAP,SAA8B6rB,EAAqB3qD,EAAuBC,EAAuCC,GAEhHD,EAAmB6mC,gBAAkB,IAUrC,OAAO,OAYD0jB,GAAA9wD,UAAAgnB,sBAAP,SAA6BkqC,EAAyC5qD,EAAuBC,EAAuCC,GAEnI,GAAIwmD,GAAuBzmD,EAAmB4mD,gBAC9C,IAAIF,GAAwB1mD,EAAmB6mD,iBAC/C,IAAIhvD,EACJ,IAAI+yD,GAAWC,EAAWC,CAC1B,IAAI5lC,GAAWC,EAAWC,CAC1B,IAAI5nB,GAAWC,EAAWstD,CAC1B,IAAI9tD,GAAWC,EAAWgmB,CAC1B,IAAI8nC,GAAc9yD,EAAUgG,EAAUC,CACtC,IAAIkP,GAAYC,EAAY29C,CAC5B,IAAI19C,GAAYC,EAAY09C,CAC5B,IAAIz9C,GAAYC,EAAYy9C,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAcC,EAAUC,CACvC,IAAIC,GAAaC,EAAaC,EAAaC,EAAYC,CACvD,IAAI/sD,GAAsBwrD,EAAoBxrD,QAAQpF,IAAI4wD,EAAoBwB,YAC9E,IAAIC,IAAiC,CACrC,IAAIC,GAAoBtsD,EAASssD,SAEjC,IAAI/vD,GAAyBquD,EAAoBruD,UAAUvC,IAAI4wD,EAAoBhe,YACnF,IAAItwC,GAAgBsuD,EAAoBruD,UAAUC,UAClD,IAAI8C,GAAmBsrD,EAAoBtrD,IAAItF,IAAI4wD,EAAoBhe,YACvE,IAAI2f,IAAe3B,EAAoBtrD,IAAI9C,UAC3C,IAAIgwD,IAAoBptD,EAAQxG,MAEhC,KAAK,GAAIia,IAAe,EAAGA,GAAQ25C,GAAY35C,IAAS,EAAG,CAE1Dg4C,EAAKzrD,EAAQyT,IAAOvW,CACpBwuD,GAAK1rD,EAAQyT,GAAQ,GAAGvW,CACxByuD,GAAK3rD,EAAQyT,GAAQ,GAAGvW,CAGxBgR,GAAM/Q,EAAUsuD,EAChBt9C,GAAMhR,EAAUsuD,EAAK,EACrBK,GAAM3uD,EAAUsuD,EAAK,EACrBr9C,GAAMjR,EAAUuuD,EAChBr9C,GAAMlR,EAAUuuD,EAAK,EACrBK,GAAM5uD,EAAUuuD,EAAK,EACrBp9C,GAAMnR,EAAUwuD,EAChBp9C,GAAMpR,EAAUwuD,EAAK,EACrBK,GAAM7uD,EAAUwuD,EAAK,EAGrBM,GAAM79C,EAAMF,CACZg+C,GAAM79C,EAAMF,CACZg+C,GAAMJ,EAAMD,CACZM,GAAM99C,EAAMJ,CACZm+C,GAAM99C,EAAMJ,CACZm+C,GAAMN,EAAMF,CACZztD,GAAK6tD,EAAII,EAAMH,EAAIE,CACnB/tD,GAAK6tD,EAAIC,EAAMH,EAAIK,CACnBV,GAAKK,EAAII,EAAMH,EAAIE,CACnBG,GAAK,EAAE/6C,KAAKC,KAAKpT,EAAGA,EAAKC,EAAGA,EAAKstD,EAAGA,EACpCvtD,IAAMkuD,CACNjuD,IAAMiuD,CACNX,IAAMW,CAGNC,GAAQnuD,EAAGkpD,EAAaxqD,EAAIuB,GAAKipD,EAAavqD,EAAI4uD,EAAGrE,EAAatqD,CAClE,KAAOiwD,GAAaV,EAAQ,GAAWU,GAAaV,GAAS,EAAO,CAEnEC,IAAOpuD,EAAG6P,EAAM5P,EAAG6P,EAAMy9C,EAAGE,EAC5BY,KAAgBruD,EAAGipD,EAAYvqD,EAAIuB,EAAGgpD,EAAYtqD,EAAI4uD,EAAGtE,EAAYrqD,EAAIwvD,EACzE/zD,GAAIg0D,EAAWF,CAEf1uD,GAAKwpD,EAAYvqD,EAAIrE,EAAE6uD,EAAaxqD,CACpCgB,GAAKupD,EAAYtqD,EAAItE,EAAE6uD,EAAavqD,CACpC+mB,GAAKujC,EAAYrqD,EAAIvE,EAAE6uD,EAAatqD,CAEpC0vD,GAAOV,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAC/BM,GAAOX,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BU,GAAOT,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BvmC,GAAKjoB,EAAKoQ,CACV8X,GAAKjoB,EAAKoQ,CACV8X,GAAKlC,EAAK+nC,CACVgB,GAAM/mC,EAAGkmC,EAAMjmC,EAAGkmC,EAAMjmC,EAAGkmC,CAC3BY,GAAMhnC,EAAGqmC,EAAMpmC,EAAGqmC,EAAMpmC,EAAGqmC,CAC3BT,GAAQ,GAAGe,EAAKC,EAAOF,EAAKA,EAC5B5tD,GAAI8sD,GAAOgB,EAAKC,EAAMH,EAAKI,EAC3B/tD,GAAI6sD,IAAQc,EAAKG,EAAMF,EAAKG,EAC5B,IAAIhuD,EAAI,EACP,QACD,IAAIC,EAAI,EACP,QACDjG,GAAI,EAAIgG,EAAIC,CACZ,MAAOjG,EAAI,IAAOL,EAAI,GAAKA,EAAIoI,EAA2B,CACzDA,EAA4BpI,CAC5Bu0D,GAAyBx5C,GAAM,CAC/B5S,GAAmB4yB,iBAAmB/6B,CACtCmI,GAAmB6wC,cAAgB,GAAIrvC,GAASvE,EAAIC,EAAIgmB,EACxDljB,GAAmB8wC,YAAc,GAAItvC,GAAShE,EAAIC,EAAIstD,EACtD/qD,GAAmB4wC,GAAK13C,KAAKszD,gBAAgBrtD,EAASE,EAAKuT,GAAO1U,EAAGC,EAAGjG,EAAGo0D,GAC3EtsD,GAAmB4S,MAAQA,EAI3B,KAAK1Z,KAAKuxD,sBACT,MAAO,QAMX,GAAI2B,GAA0B,EAC7B,MAAO,KAER,OAAO,OAYD7B,GAAA9wD,UAAAyG,mBAAP,SAA0BusD,EAAmC1sD,EAAuBC,EAAuCC,GAE1H,GAAIwmD,GAAuBzmD,EAAmB4mD,gBAC9C,IAAIF,GAAwB1mD,EAAmB6mD,iBvFq5czC,IuFj5cFhlC,GAAiB,GAAIrgB,GAAS,EAAE,GAAG,EAAE,EAEzC,IAAIgvC,GAAkB,GAAIhvC,EAC1B,IAAIkP,GAAkBmR,EAAM3lB,EAAIuqD,EAAYvqD,EAAI2lB,EAAM1lB,EAAIsqD,EAAYtqD,EAAI0lB,EAAMzlB,EAAIqqD,EAAYrqD,EAAIylB,EAAM1jB,CAC1GqyC,GAAOt0C,EAAIuqD,EAAYvqD,EAAM2lB,EAAM3lB,EAAEwU,CACrC8/B,GAAOr0C,EAAIsqD,EAAYtqD,EAAM0lB,EAAM1lB,EAAEuU,CACrC8/B,GAAOp0C,EAAIqqD,EAAYrqD,EAAMylB,EAAMzlB,EAAEsU,CACrC,IAAIg8C,GAAkB,GAAIlrD,GAASqgB,EAAM3lB,EAAE2lB,EAAM1lB,EAAE0lB,EAAMzlB,EACzD,IAAIvE,IAAa4uD,EAAYkG,WAAWD,GAAUhG,EAAaiG,WAAWD,EAC1EhG,GAAapvB,QAAQz/B,EACrB,IAAIwB,GAAaotD,EAAYpvB,IAAIqvB,EAEjC,IAAIvnD,GAAsBstD,EAAiBttD,QAAQpF,IAAI0yD,EAAiBN,YACxE,IAAIS,IAA8B,CAClC,IAAIP,GAAoBtsD,EAASssD,SAGjC,IAAI/vD,GAAyBmwD,EAAiBnwD,UAAUvC,IAAI0yD,EAAiB9f,YAC7E,IAAItwC,GAAgBowD,EAAiBnwD,UAAUC,UAC/C,IAAIE,GAAsBgwD,EAAiBhwD,OAAO1C,IAAI0yD,EAAiB9f,YACvE,IAAInwC,GAAkBiwD,EAAiBhwD,OAAOF,UAC9C,IAAI8C,GAAmBotD,EAAiBptD,IAAItF,IAAI0yD,EAAiB9f,YACjE,IAAI2f,GAAeG,EAAiBptD,IAAI9C,UACxC,IAAIgwD,GAAoBptD,EAAQxG,MAGhC,KAAI,GAAIia,GAAe,EAAGA,EAAQ25C,EAAY35C,GAAO,EACrD,CACC,GAAIlW,GAAayC,EAAQyT,EACzB,IAAIjW,GAAawC,EAAQyT,EAAQ,GAAKvW,CACtC,IAAIO,GAAauC,EAAQyT,EAAQ,GAAKvW,CAEtC,IAAIQ,GAAYP,EAAUI,EAAML,EAChC,IAAIS,GAAYR,EAAUI,EAAML,EAAS,EACzC,IAAIU,GAAYT,EAAUK,EAC1B,IAAIK,GAAYV,EAAUK,EAAM,EAChC,IAAIM,GAAYX,EAAUM,EAC1B,IAAIM,GAAYZ,EAAUM,EAAM,EAEhC,IAAIQ,GAAgBX,EAAOC,EAAMF,EACjC,IAAIa,GAAYf,EAAUI,EAAML,EAAS,EvF24chC,IuFt4cLiB,GAAYT,EAAKxD,EAAE6C,CACvB,IAAIqB,GAAYT,EAAKzD,EAAE8C,CvFw4cd,IuFr4cLqB,GAAYR,EAAKF,CACrB,IAAIW,KAAcV,EAAKF,EvFu4cd,IuFn4cLa,GAAcJ,EAAKE,EAAOD,EAAKE,CAEnC,IAAIC,EAAM,EACT,QAEDJ,GAAKP,EAAK1D,EAAE6C,CACZqB,GAAKP,EAAK3D,EAAE8C,CACZqB,GAAKN,EAAKF,CACVS,KAAOR,EAAKF,EAEZW,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EACT,QAEDJ,GAAKL,EAAK5D,EAAE6C,CACZqB,GAAKL,EAAK7D,EAAE8C,CACZqB,GAAKV,EAAKI,CACVO,KAAOZ,EAAKI,EAEZS,GAAOJ,EAAKE,EAAOD,EAAKE,CAExB,IAAIC,EAAM,EACT,QAGD,IAAIN,GAAU,EAAG,CAEhB,GAAIO,GAAaZ,EAAKF,CACtB,IAAIe,GAAaZ,EAAKF,CACtB,IAAIe,GAAaZ,EAAKJ,CACtB,IAAIiB,GAAaZ,EAAKJ,CACtB,IAAIiB,GAAa1E,EAAE6C,EAAIW,CACvB,IAAImB,GAAa3E,EAAE8C,EAAIW,CAEvB,IAAImB,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAIM,IAAYH,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIE,IAAYR,EAAMK,EAAMD,EAAMH,GAAOK,CACzC,IAAI/F,GAAW,EAAIgG,EAAIC,CAEvB,IAAIC,GAAY,GAAMF,EAAIC,CAC1B,IAAIE,GAAYF,CAEhB,IAAIhF,GAAWiF,EAAKA,EAAKC,CAEzB,IAAKlF,EAAI,GAAKkE,IAAO,GAAOlE,EAAI,GAAKkE,GAAM,EAC1C,SAIF,GAAIqT,EAAWzQ,EAA2B,CACzCA,EAA4ByQ,CAC5Bk8C,GAAsBh6C,EAAM,CAC5B5S,GAAmB4yB,iBAAmBliB,CACtC1Q,GAAmB6wC,cAAgBx3C,CACnC2G,GAAmB8wC,YAAc,GAAItvC,GAAS,EAAG,EAAG,EACpDxB,GAAmB4wC,GAAK13C,KAAKszD,gBAAgBrtD,EAASE,EAAKuT,EAAO1U,EAAGC,EAAGjG,EAAGo0D,EAC3EtsD,GAAmB4S,MAAQA,CAI3B,KAAK1Z,KAAKuxD,sBACT,MAAO,OAIV,GAAImC,GAAuB,EAC1B,MAAO,KAER,OAAO,OAYDrC,GAAA9wD,UAAAigB,kBAAP,SAAyBmzC,EAAiC9sD,EAAuBC,EAAuCC,GAEvH,MAAO,OAIAsqD,GAAA9wD,UAAA+yD,gBAAR,SAAwBrtD,EAAqB2tD,EAAqBC,EAAsB7uD,EAAUC,EAAUjG,EAAUo0D,GAErH,GAAI1b,GAAW,GAAIrvC,EACnB,IAAIyrD,GAAgB7tD,EAAQ4tD,GAAeT,CAC3C,IAAIW,GAAe,GAAIzrD,GAASsrD,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAAS7tD,EAAQ4tD,EAAgB,GAAGT,CACpC,IAAIY,GAAe,GAAI1rD,GAASsrD,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAAS7tD,EAAQ4tD,EAAgB,GAAGT,CACpC,IAAIa,GAAe,GAAI3rD,GAASsrD,EAAOE,GAASF,EAAOE,EAAS,GAChEpc,GAAG10C,EAAIhE,EAAE+0D,EAAI/wD,EAAIgC,EAAEgvD,EAAIhxD,EAAIiC,EAAEgvD,EAAIjxD,CACjC00C,GAAGz0C,EAAIjE,EAAE+0D,EAAI9wD,EAAI+B,EAAEgvD,EAAI/wD,EAAIgC,EAAEgvD,EAAIhxD,CACjC,OAAOy0C,GAET,OAAA2Z,KAEA1xD,GAA2BJ,QAAlB8xD,IvFm3cN31C,6BAA6Bta,UAAUwa,gCAAgCxa,YAAY8a,8CAA8C,SAASzd,EAAQkB,EAAOJ,GAS5J,GwF7sdMoJ,GAAkB,WA0EvB,QA1EKA,GA0EOgb,GAEX3jB,KAAK2jB,cAAgBA,EAGvB,MAAAhb,KAEAhJ,GAA4BJ,QAAnBoJ,OxFyodHqxB,yCAAyC,SAASv7B,EAAQkB,EAAOJ,GyFxudvE,GAAO+I,GAAQ7J,EAAgB,gCAQ/B,IAAOy1D,GAAgBz1D,EAAc,+CzF0udrC,IyFhudMi2B,GAAa,WA8BlB,QA9BKA,GA8BO48B,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MA1BJtxD,KAAAm0D,mBACAn0D,MAAAo0D,kBAA4B,IAG5Bp0D,MAAAq0D,aAAsB,CAwB7Br0D,MAAKs0D,kBAAoB,GAAIJ,EAE7Bl0D,MAAKuxD,sBAAwBD,CAC7BtxD,MAAKu0D,UAAY,GAAIzoD,OArBtBnL,OAAAC,eAAW8zB,EAAAn0B,UAAA,oBzFsudJM,IyFtudP,WAEC,MAAOb,MAAKo0D,mBzFuudN1xD,IyFpudP,SAA4BC,GAE3B3C,KAAKo0D,kBAAoBzxD,GzFqudnB5B,WAAY,KACZC,aAAc,MyFltdd0zB,GAAAn0B,UAAAo4B,iBAAP,SAAwB31B,EAAUC,EAAUw0C,GzFytdrC,GyFttdF8V,GAAuB9V,EAAK3gB,UAAU9zB,EAAGC,EAAG,EAChD,IAAIuqD,GAAwB/V,EAAK3gB,UAAU9zB,EAAGC,EAAG,GAAG0S,SAAS43C,EAE7D,OAAOvtD,MAAKw0D,kBAAkBjH,EAAaC,EAAc/V,EAAKh/B,OAMxDic,GAAAn0B,UAAAi0D,kBAAP,SAAyBjH,EAAsBC,EAAuB/0C,GAGrEzY,KAAKs0D,kBAAkBp5C,OAGvBlb,MAAKs0D,kBAAkB/G,YAAcA,CACrCvtD,MAAKs0D,kBAAkB9G,aAAeA,CAGtC/0C,GAAMyb,mBAAmBl0B,KAAKs0D,kBAE9Bt0D,MAAKq0D,aAAe,CACpB,IAAIrF,GAAsBhvD,KAAKs0D,kBAAkBG,UACjD,IAAIr1C,EAEJ,OAAO4vC,EAAM,CACZ,IAAKhvD,KAAK00D,UAAUt1C,EAAS4vC,EAAK5vC,QACjCpf,KAAKu0D,UAAUv0D,KAAKq0D,gBAAkBj1C,CAEvC4vC,GAAOA,EAAK2F,KAIb,IAAK30D,KAAKq0D,aACT,MAAO,KAER,OAAOr0D,MAAK40D,sBAAsB50D,KAAKs0D,mBAoBjC5/B,GAAAn0B,UAAAs0D,cAAP,SAAqBC,GAEpB90D,KAAKm0D,iBAAmBW,EAGjBpgC,GAAAn0B,UAAAm0D,UAAR,SAAkBt1C,GAEjB,GAAIpf,KAAKo0D,oBAAsBh1C,EAAOnF,mBACrC,MAAO,KAER,IAAIvM,GAAa1N,KAAKm0D,iBAAiB10D,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/B,GAAIc,KAAKm0D,iBAAiBj1D,IAAMkgB,EAC/B,MAAO,KAET,OAAO,OAGAsV,GAAAn0B,UAAAw0D,YAAR,SAAoBC,EAAiBC,GAEpC,MAAOD,GAAQvH,qBAAqB/zB,iBAAmBu7B,EAAQxH,qBAAqB/zB,iBAAkB,GAAK,EAGpGhF,GAAAn0B,UAAAq0D,sBAAR,SAA8BM,GAG7Bl1D,KAAKu0D,UAAU90D,OAASO,KAAKq0D,YAG7Br0D,MAAKu0D,UAAYv0D,KAAKu0D,UAAUY,KAAKn1D,KAAK+0D,YzFqsdpC,IyF9rdFhuD,GAAmC+5C,OAAOsU,SAC9C,IAAIC,EACJ,IAAIvuD,EACJ,IAAIsY,EACJ,IAAIlgB,EAEJ,KAAKA,EAAI,EAAGA,EAAIc,KAAKq0D,eAAgBn1D,EAAG,CACvCkgB,EAASpf,KAAKu0D,UAAUr1D,EACxB4H,GAAqBsY,EAAOquC,oBAC5B,IAAIruC,EAAOxY,gBAAiB,CAE3B,IAAKyuD,GAAmB,MAAQvuD,EAAmB4yB,iBAAmB27B,EAAgB37B,mBAAqBta,EAAOzY,gBAAgBI,EAA2B/G,KAAKuxD,uBAAwB,CACzLxqD,EAA4BD,EAAmB4yB,gBAC/C27B,GAAkBvuD,CAClB,KAAK9G,KAAKuxD,sBAAuB,CAChCvxD,KAAKs1D,oBAAoBxuD,EACzB,OAAOA,SAGH,IAAIuuD,GAAmB,MAAQvuD,EAAmB4yB,iBAAmB27B,EAAgB37B,iBAAkB,CAK7G,IAAK5yB,EAAmB8mD,wBAAyB,CAChD5tD,KAAKs1D,oBAAoBxuD,EACzB,OAAOA,KAKV,MAAOuuD,GAGA3gC,GAAAn0B,UAAA+0D,oBAAR,SAA4BxuD,GAE3B,GAAIyuD,GAA0BzuD,EAAmB6wC,eAAiB,KAAS7wC,EAAmB6wC,cAAgB,GAAIrvC,GAAcxB,EAAmB6wC,aAEnJ,IAAI6d,GAAkB1uD,EAAmB6mD,iBACzC,IAAI8H,GAAkB3uD,EAAmB4mD,gBACzC,IAAI/uD,GAAWmI,EAAmB4yB,gBAClC67B,GAAavyD,EAAIyyD,EAAOzyD,EAAIrE,EAAE62D,EAAOxyD,CACrCuyD,GAAatyD,EAAIwyD,EAAOxyD,EAAItE,EAAE62D,EAAOvyD,CACrCsyD,GAAaryD,EAAIuyD,EAAOvyD,EAAIvE,EAAE62D,EAAOtyD,EAG/BwxB,GAAAn0B,UAAAU,QAAP,YAID,OAAAyzB,KAEA/0B,GAAuBJ,QAAdm1B,IzF0rdN9Y,gCAAgCxa,UAAUs0D,+CAA+C,iDAAiDC,8CAA8C,SAASl3D,EAAQkB,EAAOJ,G0Fx4dnN,GAAOq2D,GAAcn3D,EAAc,yC1F64dnC,I0Fx4dMo3D,GAAkB,WASvB,QATKA,KAGG71D,KAAA81D,OAAgB,CAChB91D,MAAA+1D,UAAmB,CAO1B/1D,MAAK4sD,MAAQ,GAAI9gD,OAMX+pD,EAAAt1D,UAAA+vD,QAAP,WAEC,GAAI0F,EACJ,IAAIh2D,KAAK81D,QAAU91D,KAAK+1D,UAAW,CAClCC,EAAO,GAAIJ,EACX51D,MAAK4sD,MAAM5sD,KAAK81D,UAAYE,IAC1Bh2D,KAAK+1D,cACD,CACNC,EAAOh2D,KAAK4sD,MAAM5sD,KAAK81D,UAExB,MAAOE,GAMDH,GAAAt1D,UAAA01D,QAAP,WAECj2D,KAAK81D,OAAS,EAGRD,GAAAt1D,UAAAU,QAAP,WAECjB,KAAK4sD,MAAMntD,OAAS,EAEtB,OAAAo2D,KAE4Bl2D,GAAAJ,QAAnBs2D,I1Fi4dNK,yCAAyC,2CAA2CA,0CAA0C,SAASz3D,EAAQkB,EAAOJ,GAIzJ,G2Fj7dMq2D,GAAc,WAApB,QAAMA,MAWN,MAAAA,KAEwBj2D,GAAAJ,QAAfq2D,O3F26dHhF,0CAA0C,SAASnyD,EAAQkB,EAAOJ,GAIxE,G4Fz7dMgwD,GAAc,WAWnB,QAXKA,GAWO4G,EAAkC39C,GATtCxY,KAAA6vD,gBAAyB,GAAIlvD,OAWpCX,MAAKo2D,iBAAmBD,CACxBn2D,MAAKg0B,WAAaxb,EASZ+2C,EAAAhvD,UAAA+vD,QAAP,SAAelxC,GAEd,MAAQpf,MAAK6vD,gBAAgBzwC,EAAOzZ,MAAQ3F,KAAK6vD,gBAAgBzwC,EAAOzZ,IAAMyZ,EAAOtE,gBAAgB,GAAI9a,MAAKo2D,iBAAiBp2D,KAAMof,EAAQpf,KAAKg0B,cAQ5Iu7B,GAAAhvD,UAAAkwD,YAAP,SAAmBrxC,GAElB,GAAIrE,GAAwB/a,KAAK6vD,gBAAgBzwC,EAAOzZ,GAExD,IAAIoV,EAAY,CACfqE,EAAOpE,mBAAmBD,EAE1B/a,MAAK6vD,gBAAgBzwC,EAAOzZ,IAAM,KAGnC,MAAOoV,GAET,OAAAw0C,KAEwB5vD,GAAAJ,QAAfgwD,O5F+6dH8G,4CAA4C,SAAS53D,EAAQkB,EAAOJ,SAEpE+2D,uCAAuC,SAAS73D,EAAQkB,EAAOJ,SAE/Dg3D,mCAAmC,SAAS93D,EAAQkB,EAAOJ,SAE3Di3D,sCAAsC,SAAS/3D,EAAQkB,EAAOJ,SAE9D0uC,uCAAuC,SAASxvC,EAAQkB,EAAOJ,G6Fx+drE,GAAOshB,GAAWpiB,EAAe,sCACjC,IAAOgpB,GAAehpB,EAAc,0CACpC,IAAO8I,GAAY9I,EAAe,uC7F6+dlC,I6Fx+dM2sC,GAAW,WAAjB,QAAMA,MAQSA,EAAAqrB,cAAd,SAA4BC,GAE3BtrB,EAAYurB,UAAUD,EAAa9uD,WAAW1G,WAAaw1D,EAO9CtrB,GAAAsC,SAAd,SAAuBlmC,GAEtB,MAAO4jC,GAAYurB,UAAUnvD,EAAYtG,WAK3BkqC,GAAAwrB,YAAf,WAECxrB,EAAYqrB,cAAc51C,EAC1BuqB,GAAYqrB,cAAchvC,EAC1B2jB,GAAYqrB,cAAclvD,GA1BZ6jC,GAAAurB,UAAmB,GAAIh2D,OAoBvByqC,GAAAyrB,KAAOzrB,EAAYwrB,aAQnC,OAAAxrB,KAEAzrC,GAAqBJ,QAAZ6rC,I7Fo+dN/jC,uCAAuC,uCAAuCuZ,sCAAsC,sCAAsC4G,0CAA0C,4CAA4CsvC,yCAAyC,SAASr4D,EAAQkB,EAAOJ,GACpT,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8FthetB,IAAOG,GAAS/B,EAAc,oCAC9B,IAAO8J,GAAmB9J,EAAY,6C9F4hetC,I8FrheMs4D,GAAU,SAAAr2D,GAASX,EAAnBg3D,EAAUr2D,EASf,SATKq2D,KAWJr2D,EAAAlB,KAAAQ,KATMA,MAAAg3D,UAAiC,GAAIlrD,OAerCirD,EAAAx2D,UAAA6qB,aAAP,WAEC,GAAIyrB,GAAuB72C,KAAKi3D,gBAEhCj3D,MAAKg3D,UAAUx9C,KAAKq9B,EAEpB,OAAOA,GAYDkgB,GAAAx2D,UAAA02D,eAAP,WAEC,KAAM,IAAI1uD,GAGJwuD,GAAAx2D,UAAA2R,WAAP,YAID,OAAA6kD,IA5CyBv2D,EA8CLb,GAAAJ,QAAXw3D,I9F2geN37C,6CAA6Cha,UAAUD,oCAAoCC,YAAY81D,qDAAqD,SAASz4D,EAAQkB,EAAOJ,GACvL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+FjketB,IAAO82D,GAAmB14D,EAAY,iD/FuketC,I+FlkeM24D,GAAsB,SAAA12D,GAASX,EAA/Bq3D,EAAsB12D,EA6F3B,SA7FK02D,GA6FOrrC,EAAoB3d,EAAqBipD,EAAuBC,EAAuBC,GAAvF,GAAAxrC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA3d,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAipD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAElG72D,EAAAlB,KAAAQ,KAxFOA,MAAAgC,aAAsB,CA0F7BhC,MAAK2rB,QAAUI,CACf/rB,MAAKqO,QAAUD,CACfpO,MAAKw3D,WAAaH,CAClBr3D,MAAKy3D,WAAcH,EAAU,GAAK,EAAIA,EAAY,EAAIA,CACtDt3D,MAAK03D,KAAOH,EAzFb52D,OAAAC,eAAWw2D,EAAA72D,UAAA,U/FkleJM,I+FlleP,WAEC,MAAOb,MAAK2rB,S/FmleNjpB,I+FhleP,SAAkBC,GAEjB3C,KAAK2rB,QAAUhpB,CAEf3C,MAAK23D,wB/FgleC52D,WAAY,KACZC,aAAc,M+F3kerBL,QAAAC,eAAWw2D,EAAA72D,UAAA,U/FileJM,I+FjleP,WAEC,MAAOb,MAAKqO,S/FkleN3L,I+F/keP,SAAkBC,GAEjB3C,KAAKqO,QAAU1L,CACf3C,MAAK23D,wB/FgleC52D,WAAY,KACZC,aAAc,M+F3kerBL,QAAAC,eAAWw2D,EAAA72D,UAAA,a/FileJM,I+FjleP,WAEC,MAAOb,MAAKw3D,Y/FkleN90D,I+F/keP,SAAqBC,GAEpB3C,KAAKw3D,WAAa70D,CAElB3C,MAAK23D,sBACL33D,MAAK43D,mB/F+keC72D,WAAY,KACZC,aAAc,M+F1kerBL,QAAAC,eAAWw2D,EAAA72D,UAAA,a/FgleJM,I+FhleP,WAEC,MAAOb,MAAKy3D,Y/FileN/0D,I+F9keP,SAAqBC,GAEpB3C,KAAKy3D,WAAc90D,EAAM,GAAK,EAAIA,EAAQ,EAAIA,CAE9C3C,MAAK23D,sBACL33D,MAAK43D,mB/F8keC72D,WAAY,KACZC,aAAc,M+FzkerBL,QAAAC,eAAWw2D,EAAA72D,UAAA,O/F+keJM,I+F/keP,WAEC,MAAOb,MAAK03D,M/FgleNh1D,I+F7keP,SAAeC,GAEd3C,KAAK03D,KAAO/0D,CAEZ3C,MAAK23D,wB/F6keC52D,WAAY,KACZC,aAAc,M+Frjedo2D,GAAA72D,UAAAs3D,gBAAP,SAAuB1iD,EAAwBgW,GAE9C,GAAIllB,EACJ,IAAI7C,EACJ,IAAI2jB,EACJ,IAAIC,EAEJ,IAAI9nB,EACJ,IAAI8gB,EACJ,IAAI83C,GAAkB,CACtB,IAAIp+C,GAAe,CACnB,IAAIq+C,EACJ,IAAIC,GAAcC,EAAcC,EAAWC,CAC3C,IAAI9E,GAAoB,CAExB,IAAIloC,GAAgB,sBAAuB,CAE1C,GAAIitC,GAA6DjjD,CAGjEnV,MAAKgC,cAAgBhC,KAAKy3D,WAAa,IAAIz3D,KAAKw3D,WAAa,EAC7DnE,IAAcrzD,KAAKy3D,WAAa,GAAGz3D,KAAKw3D,WAAW,CAGnD,IAAIx3D,KAAKgC,cAAgBo2D,EAAiB3kB,YAAa,CACtDxtC,EAAUmyD,EAAiBnyD,QAAQpF,IAAIu3D,EAAiBnF,YACxD7vD,GAAYg1D,EAAiBh1D,UAAUvC,IAAIb,KAAKgC,aAChD+kB,GAAUqxC,EAAiBrxC,QAAQlmB,IAAIb,KAAKgC,aAC5CglB,GAAWoxC,EAAiBpxC,SAASnmB,IAAIb,KAAKgC,kBACxC,CACNiE,EAAU,GAAIga,aAAYozC,EAC1BjwD,GAAY,GAAIwc,cAAa5f,KAAKgC,aAAa,EAC/C+kB,GAAU,GAAInH,cAAa5f,KAAKgC,aAAa,EAC7CglB,GAAW,GAAIpH,cAAa5f,KAAKgC,aAAa,EAE9ChC,MAAK43D,kBAGN,IAAK53C,EAAI,EAAGA,GAAKhgB,KAAKy3D,aAAcz3C,EAAG,CAEtC,GAAIq4C,GAAkB5gD,KAAK6gD,GAAGt4C,EAAEhgB,KAAKy3D,UACrC,IAAIv0D,IAAYlD,KAAK2rB,QAAQlU,KAAKmkB,IAAIy8B,EACtC,IAAIE,GAAoBv4D,KAAK2rB,QAAQlU,KAAKkkB,IAAI08B,EAE9CN,GAAar+C,CAEb,KAAKxa,EAAI,EAAGA,GAAKc,KAAKw3D,aAAct4D,EAAG,CACtC,GAAIs5D,GAAkB,EAAE/gD,KAAK6gD,GAAGp5D,EAAEc,KAAKw3D,UACvC,IAAIx0D,GAAWu1D,EAAW9gD,KAAKmkB,IAAI48B,EACnC,IAAIlzD,GAAgB0a,EAAIhgB,KAAKy3D,WAAW,EAAGz3D,KAAKqO,QAAQ,GAAKrO,KAAKqO,QAAQ,CAC1E,IAAIpL,GAAWs1D,EAAW9gD,KAAKkkB,IAAI68B,EACnC,IAAIC,GAAiB,EAAEhhD,KAAKC,KAAK1U,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,EAC/C,IAAIw1D,GAAgBjhD,KAAKC,KAAKzU,EAAEA,EAAID,EAAEA,EAEtC,IAAIhD,KAAK03D,KAAM,CACdQ,EAAK,CACLC,GAAKO,EAAS,KAAM11D,EAAE01D,EAAS,CAC/BV,IAAS90D,CACT+0D,GAAQh1D,MAEF,CACNi1D,EAAKQ,EAAS,KAAM11D,EAAE01D,EAAS,CAC/BP,GAAK,CACLH,GAAQ/0D,CACRg1D,GAAQ/0D,EAGT,GAAIhE,GAAKc,KAAKw3D,WAAY,CAEzBp0D,EAAUsW,GAAStW,EAAU20D,EAC7B30D,GAAUsW,EAAQ,GAAKtW,EAAU20D,EAAa,EAC9C30D,GAAUsW,EAAQ,GAAKtW,EAAU20D,EAAa,EAC9ChxC,GAAQrN,IAAUqN,EAAQgxC,GAAe/0D,EAAEy1D,GAAU,EACrD1xC,GAAQrN,EAAQ,IAAMqN,EAAQgxC,EAAa,GAAOC,EAAMS,GAAU,EAClE1xC,GAAQrN,EAAQ,IAAMqN,EAAQgxC,EAAa,GAAME,EAAMQ,GAAU,EACjEzxC,GAAStN,IAAUsN,EAAS+wC,IAAeW,EAAS,MAAOz1D,EAAEy1D,EAAS,IAAI,EAC1E1xC,GAAStN,EAAQ,IAAMsN,EAAS+wC,EAAa,GAAKG,GAAI,EACtDlxC,GAAStN,EAAQ,IAAMsN,EAAS+wC,EAAa,GAAKI,GAAI,OAEhD,CAEN/0D,EAAUsW,GAAS1W,CACnBI,GAAUsW,EAAQ,GAAM1Z,KAAS,KAAGg4D,EAAQ1yD,EAAS0yD,CACrD50D,GAAUsW,EAAQ,GAAM1Z,KAAS,KAAGi4D,EAAQA,EAAQ3yD,CAEpDyhB,GAAQrN,GAAS1W,EAAEy1D,CACnB1xC,GAAQrN,EAAQ,GAAKs+C,EAAMS,CAC3B1xC,GAAQrN,EAAQ,GAAKu+C,EAAMQ,CAE3BzxC,GAAStN,GAASg/C,EAAS,MAAOz1D,EAAEy1D,EAAS,CAC7C1xC,GAAStN,EAAQ,GAAKw+C,CACtBlxC,GAAStN,EAAQ,GAAKy+C,EAGvB,GAAIj5D,EAAI,GAAK8gB,EAAI,EAAG,CACnB,GAAI/gB,IAAYe,KAAKw3D,WAAa,GAAGx3C,EAAI9gB,CACzC,IAAIgB,IAAYF,KAAKw3D,WAAa,GAAGx3C,EAAI9gB,EAAI,CAC7C,IAAI0pB,IAAY5oB,KAAKw3D,WAAa,IAAIx3C,EAAI,GAAK9gB,EAAI,CACnD,IAAIe,IAAYD,KAAKw3D,WAAa,IAAIx3C,EAAI,GAAK9gB,CAE/C,IAAI8gB,GAAKhgB,KAAKy3D,WAAY,CACzBr0D,EAAUsW,GAAStW,EAAU20D,EAC7B30D,GAAUsW,EAAQ,GAAKtW,EAAU20D,EAAa,EAC9C30D,GAAUsW,EAAQ,GAAKtW,EAAU20D,EAAa,EAE9C9xD,GAAQ6xD,KAAc74D,CACtBgH,GAAQ6xD,KAAclvC,CACtB3iB,GAAQ6xD,KAAc73D,MAEhB,IAAI+f,GAAK,EAAG,CAClB/Z,EAAQ6xD,KAAc74D,CACtBgH,GAAQ6xD,KAAc53D,CACtB+F,GAAQ6xD,KAAclvC,MAEhB,CACN3iB,EAAQ6xD,KAAc74D,CACtBgH,GAAQ6xD,KAAc53D,CACtB+F,GAAQ6xD,KAAclvC,CACtB3iB,GAAQ6xD,KAAc74D,CACtBgH,GAAQ6xD,KAAclvC,CACtB3iB,GAAQ6xD,KAAc73D,GAIxByZ,GAAS,GAKX0+C,EAAiBlyD,WAAWD,EAE5BmyD,GAAiBhzD,aAAahC,EAC9Bg1D,GAAiBxyC,WAAWmB,EAC5BqxC,GAAiBtyC,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,GAQxCisC,GAAA72D,UAAAo4D,WAAP,SAAkBxjD,EAAwBgW,GAEzC,GAAIjsB,GAAU8gB,CACd,IAAI7Z,EAGJ,IAAIglB,GAAgB,sBAAuB,CAE1C,GAAIitC,GAA6DjjD,CAGjE,IAAIijD,EAAiBjyD,KAAOnG,KAAKgC,cAAgBo2D,EAAiB3kB,YAAa,CAC9EttC,EAAMiyD,EAAiBjyD,IAAItF,IAAIb,KAAKgC,kBAC9B,CACNmE,EAAM,GAAIyZ,cAAa5f,KAAKgC,aAAa,G/FoiejC,G+FhieL0X,GAAe,CAGnB,KAAKsG,EAAI,EAAGA,GAAKhgB,KAAKy3D,aAAcz3C,EAAG,CACtC,IAAK9gB,EAAI,EAAGA,GAAKc,KAAKw3D,aAAct4D,EAAG,CAEtCiH,EAAIuT,KAAaxa,EAAEc,KAAKw3D,WAAax3D,KAAKmC,OAC1CgE,GAAIuT,KAAasG,EAAEhgB,KAAKy3D,WAAaz3D,KAAKoC,SAK5Cg2D,EAAiBx1D,OAAOuD,OAElB,IAAIglB,GAAgB,kBAAmB,GAIhD,OAAAisC,IA9RqCD,EAgSLx3D,GAAAJ,QAAvB63D,I/F8heNwB,iDAAiD,mDAAmDC,kDAAkD,SAASp6D,EAAQkB,EAAOJ,GACjL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgG30etB,IAAOy4D,GAAuBr6D,EAAW,qDhGi1ezC,IgG50eMs6D,GAAmB,SAAAr4D,GAASX,EAA5Bg5D,EAAmBr4D,EA0BxB,SA1BKq4D,GA0BOhtC,EAAoB3d,EAAqBipD,EAAuBC,EAAsB0B,EAAuBzB,GAA7G,GAAAxrC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA3d,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAipD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA0B,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAzB,QAAA,GAAkB,CAAlBA,EAAA,KAExH72D,EAAAlB,KAAAQ,KAAM,EAAG+rB,EAAQ3d,EAAQipD,EAAWC,EAAW,MAAO0B,EAAQ,KAAMzB,GAtBrE52D,OAAAC,eAAWm4D,EAAAx4D,UAAA,UhG61eJM,IgG71eP,WAEC,MAAOb,MAAKi5D,gBhG81eNv2D,IgG31eP,SAAkBC,GAEjB3C,KAAKi5D,eAAiBt2D,CAEtB3C,MAAK23D,wBhG21eC52D,WAAY,KACZC,aAAc,MgG70etB,OAAA+3D,IA9BkCD,EAgCLn5D,GAAAJ,QAApBw5D,IhGi1eNG,qDAAqD,uDAAuD3tC,kDAAkD,SAAS9sB,EAAQkB,EAAOJ,GACzL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiGx3etB,IAAO82D,GAAmB14D,EAAY,iDjG83etC,IiGz3eMopB,GAAmB,SAAAnnB,GAASX,EAA5B8nB,EAAmBnnB,EAqBxB,SArBKmnB,GAqBOtX,EAAoBnC,EAAqBP,EAAoBwpD,EAAsBC,EAAsB6B,EAAsBC,GAA/H,GAAA7oD,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAnC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAP,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAwpD,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA6B,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,KAE1I14D,EAAAlB,KAAAQ,KAEAA,MAAK6P,OAASU,CACdvQ,MAAKqO,QAAUD,CACfpO,MAAK+N,OAASF,CACd7N,MAAKw3D,WAAaH,CAClBr3D,MAAKy3D,WAAaH,CAClBt3D,MAAKq5D,WAAaF,CAClBn5D,MAAKs5D,OAASF,EAMfz4D,OAAAC,eAAWinB,EAAAtnB,UAAA,SjGq3eJM,IiGr3eP,WAEC,MAAOb,MAAK6P,QjGs3eNnN,IiGn3eP,SAAiBC,GAEhB3C,KAAK6P,OAASlN,CAEd3C,MAAK23D,wBjGm3eC52D,WAAY,KACZC,aAAc,MiG92erBL,QAAAC,eAAWinB,EAAAtnB,UAAA,UjGo3eJM,IiGp3eP,WAEC,MAAOb,MAAKqO,SjGq3eN3L,IiGl3eP,SAAkBC,GAEjB3C,KAAKqO,QAAU1L,CAEf3C,MAAK23D,wBjGk3eC52D,WAAY,KACZC,aAAc,MiG72erBL,QAAAC,eAAWinB,EAAAtnB,UAAA,SjGm3eJM,IiGn3eP,WAEC,MAAOb,MAAK+N,QjGo3eNrL,IiGj3eP,SAAiBC,GAEhB3C,KAAK+N,OAASpL,CAEd3C,MAAK23D,wBjGi3eC52D,WAAY,KACZC,aAAc,MiGv2erBL,QAAAC,eAAWinB,EAAAtnB,UAAA,SjGk3eJM,IiGl3eP,WAEC,MAAOb,MAAKs5D,QjGm3eN52D,IiGh3eP,SAAiBC,GAEhB3C,KAAKs5D,OAAS32D,CAEd3C,MAAK23D,wBjGg3eC52D,WAAY,KACZC,aAAc,MiG32erBL,QAAAC,eAAWinB,EAAAtnB,UAAA,ajGi3eJM,IiGj3eP,WAEC,MAAOb,MAAKw3D,YjGk3eN90D,IiG/2eP,SAAqBC,GAEpB3C,KAAKw3D,WAAa70D,CAElB3C,MAAK23D,sBACL33D,MAAK43D,mBjG+2eC72D,WAAY,KACZC,aAAc,MiG12erBL,QAAAC,eAAWinB,EAAAtnB,UAAA,ajGg3eJM,IiGh3eP,WAEC,MAAOb,MAAKy3D,YjGi3eN/0D,IiG92eP,SAAqBC,GAEpB3C,KAAKy3D,WAAa90D,CAElB3C,MAAK23D,sBACL33D,MAAK43D,mBjG82eC72D,WAAY,KACZC,aAAc,MiGz2erBL,QAAAC,eAAWinB,EAAAtnB,UAAA,ajG+2eJM,IiG/2eP,WAEC,MAAOb,MAAKq5D,YjGg3eN32D,IiG72eP,SAAqBC,GAEpB3C,KAAKq5D,WAAa12D,CAElB3C,MAAK23D,sBACL33D,MAAK43D,mBjG62eC72D,WAAY,KACZC,aAAc,MiGx2ed6mB,GAAAtnB,UAAAs3D,gBAAP,SAAuB1iD,EAAwBgW,GAE9C,GAAIllB,EACJ,IAAI7C,EACJ,IAAI2jB,EACJ,IAAIC,EAEJ,IAAIwrB,GAAW+mB,EAAWC,EAAWC,CACrC,IAAIv6D,GAAU8gB,EAAU05C,EAAa,CAErC,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWpuC,CAE1B,IAAIquC,EACJ,IAAI7G,EACJ,IAAI5f,EAGJomB,GAAK75D,KAAK6P,OAAO,CACjBiqD,GAAK95D,KAAKqO,QAAQ,CAClB0rD,GAAK/5D,KAAK+N,OAAO,CAEjB,IAAIod,GAAgB,sBAAuB,CAE1C,GAAIitC,GAA6DjjD,CAEjEs+B,KAAgBzzC,KAAKw3D,WAAa,IAAIx3D,KAAKy3D,WAAa,IAAMz3D,KAAKw3D,WAAa,IAAIx3D,KAAKq5D,WAAa,IAAMr5D,KAAKy3D,WAAa,IAAIz3D,KAAKq5D,WAAa,IAAI,CAExJhG,IAAerzD,KAAKw3D,WAAWx3D,KAAKy3D,WAAaz3D,KAAKw3D,WAAWx3D,KAAKq5D,WAAar5D,KAAKy3D,WAAWz3D,KAAKq5D,YAAY,EAEpH,IAAI5lB,GAAe2kB,EAAiB3kB,aAAe2kB,EAAiBnyD,SAAW,KAAM,CACpFA,EAAUmyD,EAAiBnyD,QAAQpF,IAAIu3D,EAAiBnF,YACxD7vD,GAAYg1D,EAAiBh1D,UAAUvC,IAAI4yC,EAC3C1sB,GAAUqxC,EAAiBrxC,QAAQlmB,IAAI4yC,EACvCzsB,GAAWoxC,EAAiBpxC,SAASnmB,IAAI4yC,OACnC,CACNxtC,EAAU,GAAIga,aAAYozC,EAC1BjwD,GAAY,GAAIwc,cAAa6zB,EAAY,EACzC1sB,GAAU,GAAInH,cAAa6zB,EAAY,EACvCzsB,GAAW,GAAIpH,cAAa6zB,EAAY,EAExCzzC,MAAK43D,kBAGN+B,EAAO,CACPC,GAAO,CAGPI,GAAKh6D,KAAK6P,OAAO7P,KAAKw3D,UACtByC,GAAKj6D,KAAKqO,QAAQrO,KAAKy3D,UACvB5rC,GAAK7rB,KAAK+N,OAAO/N,KAAKq5D,UAEtB,KAAKn6D,EAAI,EAAGA,GAAKc,KAAKw3D,WAAYt4D,IAAK,CACtCg7D,GAAaL,EAAK36D,EAAE86D,CAEpB,KAAKh6C,EAAI,EAAGA,GAAKhgB,KAAKy3D,WAAYz3C,IAAK,CAEtC5c,EAAUu2D,GAAQO,CAClB92D,GAAUu2D,EAAO,IAAMG,EAAK95C,EAAEi6C,CAC9B72D,GAAUu2D,EAAO,IAAMI,CACvBhzC,GAAQ4yC,GAAQ,CAChB5yC,GAAQ4yC,EAAO,GAAK,CACpB5yC,GAAQ4yC,EAAO,IAAM,CACrB3yC,GAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAO,GAAK,CACrB3yC,GAAS2yC,EAAO,GAAK,CACrBA,IAAQ,CAGRv2D,GAAUu2D,GAAQO,CAClB92D,GAAUu2D,EAAO,IAAMG,EAAK95C,EAAEi6C,CAC9B72D,GAAUu2D,EAAO,GAAKI,CACtBhzC,GAAQ4yC,GAAQ,CAChB5yC,GAAQ4yC,EAAO,GAAK,CACpB5yC,GAAQ4yC,EAAO,GAAK,CACpB3yC,GAAS2yC,IAAS,CAClB3yC,GAAS2yC,EAAO,GAAK,CACrB3yC,GAAS2yC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIz6D,GAAK8gB,EAAG,CACXwyB,EAAK,IAAItzC,EAAI,IAAIc,KAAKy3D,WAAa,IAAMz3C,EAAI,GAC7Cu5C,GAAK,GAAGr6D,GAAGc,KAAKy3D,WAAa,IAAMz3C,EAAI,GACvCw5C,GAAKhnB,EAAK,CACVinB,GAAKF,EAAK,CAEVtzD,GAAQ2zD,KAAUpnB,CAClBvsC,GAAQ2zD,KAAUJ,CAClBvzD,GAAQ2zD,KAAUH,CAClBxzD,GAAQ2zD,KAAUpnB,CAClBvsC,GAAQ2zD,KAAUH,CAClBxzD,GAAQ2zD,KAAUL,CAClBtzD,GAAQ2zD,KAAUL,EAAK,CACvBtzD,GAAQ2zD,KAAUH,EAAK,CACvBxzD,GAAQ2zD,KAAUJ,EAAK,CACvBvzD,GAAQ2zD,KAAUL,EAAK,CACvBtzD,GAAQ2zD,KAAUJ,EAAK,CACvBvzD,GAAQ2zD,KAAUpnB,EAAK,IAK1BknB,GAAO,GAAG15D,KAAKw3D,WAAa,IAAIx3D,KAAKy3D,WAAa,EAElD,KAAKv4D,EAAI,EAAGA,GAAKc,KAAKw3D,WAAYt4D,IAAK,CACtCg7D,GAAaL,EAAK36D,EAAE86D,CAEpB,KAAKh6C,EAAI,EAAGA,GAAKhgB,KAAKq5D,WAAYr5C,IAAK,CAEtC5c,EAAUu2D,GAAQO,CAClB92D,GAAUu2D,EAAO,GAAKG,CACtB12D,GAAUu2D,EAAO,IAAMI,EAAK/5C,EAAE6L,CAC9B9E,GAAQ4yC,GAAQ,CAChB5yC,GAAQ4yC,EAAO,GAAK,CACpB5yC,GAAQ4yC,EAAO,GAAK,CACpB3yC,GAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAO,GAAK,CACrB3yC,GAAS2yC,EAAO,GAAK,CACrBA,IAAQ,CAGRv2D,GAAUu2D,GAAQO,CAClB92D,GAAUu2D,EAAO,IAAMG,CACvB12D,GAAUu2D,EAAO,IAAMI,EAAK/5C,EAAE6L,CAC9B9E,GAAQ4yC,GAAQ,CAChB5yC,GAAQ4yC,EAAO,IAAM,CACrB5yC,GAAQ4yC,EAAO,GAAK,CACpB3yC,GAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAO,GAAK,CACrB3yC,GAAS2yC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIz6D,GAAK8gB,EAAG,CACXwyB,EAAKknB,EAAM,IAAIx6D,EAAI,IAAIc,KAAKq5D,WAAa,IAAMr5C,EAAI,GACnDu5C,GAAKG,EAAM,GAAGx6D,GAAGc,KAAKq5D,WAAa,IAAMr5C,EAAI,GAC7Cw5C,GAAKhnB,EAAK,CACVinB,GAAKF,EAAK,CAEVtzD,GAAQ2zD,KAAUpnB,CAClBvsC,GAAQ2zD,KAAUJ,CAClBvzD,GAAQ2zD,KAAUH,CAClBxzD,GAAQ2zD,KAAUpnB,CAClBvsC,GAAQ2zD,KAAUH,CAClBxzD,GAAQ2zD,KAAUL,CAClBtzD,GAAQ2zD,KAAUL,EAAK,CACvBtzD,GAAQ2zD,KAAUH,EAAK,CACvBxzD,GAAQ2zD,KAAUJ,EAAK,CACvBvzD,GAAQ2zD,KAAUL,EAAK,CACvBtzD,GAAQ2zD,KAAUJ,EAAK,CACvBvzD,GAAQ2zD,KAAUpnB,EAAK,IAK1BknB,GAAO,GAAG15D,KAAKw3D,WAAa,IAAIx3D,KAAKq5D,WAAa,EAElD,KAAKn6D,EAAI,EAAGA,GAAKc,KAAKq5D,WAAYn6D,IAAK,CACtCg7D,EAAYH,EAAK76D,EAAE2sB,CAEnB,KAAK7L,EAAI,EAAGA,GAAKhgB,KAAKy3D,WAAYz3C,IAAK,CAEtC5c,EAAUu2D,IAASE,CACnBz2D,GAAUu2D,EAAK,IAAMG,EAAK95C,EAAEi6C,CAC5B72D,GAAUu2D,EAAK,GAAKO,CACpBnzC,GAAQ4yC,IAAS,CACjB5yC,GAAQ4yC,EAAK,GAAK,CAClB5yC,GAAQ4yC,EAAK,GAAK,CAClB3yC,GAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAK,GAAK,CACnB3yC,GAAS2yC,EAAK,IAAM,CACpBA,IAAQ,CAGRv2D,GAAUu2D,GAAQE,CAClBz2D,GAAUu2D,EAAK,IAAMG,EAAK95C,EAAEi6C,CAC5B72D,GAAUu2D,EAAK,GAAKO,CACpBnzC,GAAQ4yC,GAAQ,CAChB5yC,GAAQ4yC,EAAK,GAAK,CAClB5yC,GAAQ4yC,EAAK,GAAK,CAClB3yC,GAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAK,GAAK,CACnB3yC,GAAS2yC,EAAK,GAAK,CACnBA,IAAQ,CAER,IAAIz6D,GAAK8gB,EAAG,CACXwyB,EAAKknB,EAAM,IAAIx6D,EAAI,IAAIc,KAAKy3D,WAAa,IAAMz3C,EAAI,GACnDu5C,GAAKG,EAAM,GAAGx6D,GAAGc,KAAKy3D,WAAa,IAAMz3C,EAAI,GAC7Cw5C,GAAKhnB,EAAK,CACVinB,GAAKF,EAAK,CAEVtzD,GAAQ2zD,KAAUpnB,CAClBvsC,GAAQ2zD,KAAUJ,CAClBvzD,GAAQ2zD,KAAUH,CAClBxzD,GAAQ2zD,KAAUpnB,CAClBvsC,GAAQ2zD,KAAUH,CAClBxzD,GAAQ2zD,KAAUL,CAClBtzD,GAAQ2zD,KAAUL,EAAK,CACvBtzD,GAAQ2zD,KAAUH,EAAK,CACvBxzD,GAAQ2zD,KAAUJ,EAAK,CACvBvzD,GAAQ2zD,KAAUL,EAAK,CACvBtzD,GAAQ2zD,KAAUJ,EAAK,CACvBvzD,GAAQ2zD,KAAUpnB,EAAK,IAK1B4lB,EAAiBlyD,WAAWD,EAE5BmyD,GAAiBhzD,aAAahC,EAC9Bg1D,GAAiBxyC,WAAWmB,EAC5BqxC,GAAiBtyC,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,CAC7C,GAAIgvC,GAAiDhlD,CAErD,IAAIilD,GAAqBp6D,KAAKy3D,WAAW,EAAKz3D,KAAKw3D,WAAW,EAAIx3D,KAAKq5D,WAAW,CAClF,IAAIj2D,EACJ,IAAI+c,EAEJ/c,GAAY,GAAIwc,cAAaw6C,EAAY,EACzCj6C,GAAY,GAAIP,cAAaw6C,EAE7BT,GAAO,CAEPC,GAAO,CAGP,KAAK16D,EAAI,EAAGA,EAAIc,KAAKy3D,aAAcv4D,EAAG,CACrCkE,EAAUu2D,MAAWE,CACrBz2D,GAAUu2D,KAAUz6D,EAAEc,KAAKqO,QAAQrO,KAAKy3D,WAAaqC,CACrD12D,GAAUu2D,MAAWI,CAErB32D,GAAUu2D,KAAUE,CACpBz2D,GAAUu2D,KAAUz6D,EAAEc,KAAKqO,QAAQrO,KAAKy3D,WAAaqC,CACrD12D,GAAUu2D,MAAWI,CAErB55C,GAAUy5C,KAAU,CAEpBx2D,GAAUu2D,MAAWE,CACrBz2D,GAAUu2D,KAAUG,EAAK56D,EAAEc,KAAKqO,QAAQrO,KAAKy3D,UAC7Cr0D,GAAUu2D,KAAUI,CAEpB32D,GAAUu2D,KAAUE,CACpBz2D,GAAUu2D,KAAUG,EAAK56D,EAAEc,KAAKqO,QAAQrO,KAAKy3D,UAC7Cr0D,GAAUu2D,KAAUI,CAEpB55C,GAAUy5C,KAAU,EAGrB,IAAK16D,EAAI,EAAGA,EAAIc,KAAKw3D,aAAct4D,EAAG,CACrCkE,EAAUu2D,KAAUz6D,EAAEc,KAAK6P,OAAO7P,KAAKw3D,WAAaqC,CACpDz2D,GAAUu2D,MAAWG,CACrB12D,GAAUu2D,MAAWI,CAErB32D,GAAUu2D,KAAUz6D,EAAEc,KAAK6P,OAAO7P,KAAKw3D,WAAaqC,CACpDz2D,GAAUu2D,KAAUG,CACpB12D,GAAUu2D,MAAWI,CAErB55C,GAAUy5C,KAAU,CAEpBx2D,GAAUu2D,KAAUE,EAAK36D,EAAEc,KAAK6P,OAAO7P,KAAKw3D,UAC5Cp0D,GAAUu2D,MAAWG,CACrB12D,GAAUu2D,KAAUI,CAEpB32D,GAAUu2D,KAAUE,EAAK36D,EAAEc,KAAK6P,OAAO7P,KAAKw3D,UAC5Cp0D,GAAUu2D,KAAUG,CACpB12D,GAAUu2D,KAAUI,CAEpB55C,GAAUy5C,KAAU,EAIrB,IAAK16D,EAAI,EAAGA,EAAIc,KAAKy3D,aAAcv4D,EAAG,CACrCkE,EAAUu2D,MAAWE,CACrBz2D,GAAUu2D,KAAUz6D,EAAEc,KAAKqO,QAAQrO,KAAKy3D,WAAaqC,CACrD12D,GAAUu2D,MAAWI,CAErB32D,GAAUu2D,MAAWE,CACrBz2D,GAAUu2D,KAAUz6D,EAAEc,KAAKqO,QAAQrO,KAAKy3D,WAAaqC,CACrD12D,GAAUu2D,KAAUI,CAEpB55C,GAAUy5C,KAAU,CAEpBx2D,GAAUu2D,KAAUE,CACpBz2D,GAAUu2D,KAAUG,EAAK56D,EAAEc,KAAKqO,QAAQrO,KAAKy3D,UAC7Cr0D,GAAUu2D,MAAWI,CAErB32D,GAAUu2D,KAAUE,CACpBz2D,GAAUu2D,KAAUG,EAAK56D,EAAEc,KAAKqO,QAAQrO,KAAKy3D,UAC7Cr0D,GAAUu2D,KAAUI,CAEpB55C,GAAUy5C,KAAU,EAGrB,IAAK16D,EAAI,EAAGA,EAAIc,KAAKq5D,aAAcn6D,EAAG,CACrCkE,EAAUu2D,KAAUE,CACpBz2D,GAAUu2D,MAAWG,CACrB12D,GAAUu2D,KAAUz6D,EAAEc,KAAK+N,OAAO/N,KAAKq5D,WAAaU,CAEpD32D,GAAUu2D,KAAUE,CACpBz2D,GAAUu2D,KAAUG,CACpB12D,GAAUu2D,KAAUz6D,EAAEc,KAAK+N,OAAO/N,KAAKq5D,WAAaU,CAEpD55C,GAAUy5C,KAAU,CAEpBx2D,GAAUu2D,MAAWE,CACrBz2D,GAAUu2D,MAAWG,CACrB12D,GAAUu2D,KAAUI,EAAK76D,EAAEc,KAAK+N,OAAO/N,KAAKq5D,UAE5Cj2D,GAAUu2D,MAAWE,CACrBz2D,GAAUu2D,KAAUG,CACpB12D,GAAUu2D,KAAUI,EAAK76D,EAAEc,KAAK+N,OAAO/N,KAAKq5D,UAE5Cl5C,GAAUy5C,KAAU,EAKrB,IAAK16D,EAAI,EAAGA,EAAIc,KAAKq5D,aAAcn6D,EAAG,CACrCkE,EAAUu2D,MAAWE,CACrBz2D,GAAUu2D,MAAWG,CACrB12D,GAAUu2D,KAAUI,EAAK76D,EAAEc,KAAK+N,OAAO/N,KAAKq5D,UAE5Cj2D,GAAUu2D,KAAUE,CACpBz2D,GAAUu2D,MAAWG,CACrB12D,GAAUu2D,KAAUI,EAAK76D,EAAEc,KAAK+N,OAAO/N,KAAKq5D,UAE5Cl5C,GAAUy5C,KAAU,CAEpBx2D,GAAUu2D,MAAWE,CACrBz2D,GAAUu2D,KAAUG,CACpB12D,GAAUu2D,KAAUz6D,EAAEc,KAAK+N,OAAO/N,KAAKq5D,WAAaU,CAEpD32D,GAAUu2D,KAAUE,CACpBz2D,GAAUu2D,KAAUG,CACpB12D,GAAUu2D,KAAUz6D,EAAEc,KAAK+N,OAAO/N,KAAKq5D,WAAaU,CAEpD55C,GAAUy5C,KAAU,EAGrB,IAAK16D,EAAI,EAAGA,EAAIc,KAAKw3D,aAAct4D,EAAG,CACrCkE,EAAUu2D,KAAUE,EAAK36D,EAAEc,KAAK6P,OAAO7P,KAAKw3D,UAC5Cp0D,GAAUu2D,MAAWG,CACrB12D,GAAUu2D,MAAWI,CAErB32D,GAAUu2D,KAAUE,EAAK36D,EAAEc,KAAK6P,OAAO7P,KAAKw3D,UAC5Cp0D,GAAUu2D,MAAWG,CACrB12D,GAAUu2D,KAAUI,CAEpB55C,GAAUy5C,KAAU,CAEpBx2D,GAAUu2D,KAAUz6D,EAAEc,KAAK6P,OAAO7P,KAAKw3D,WAAaqC,CACpDz2D,GAAUu2D,KAAUG,CACpB12D,GAAUu2D,MAAWI,CAErB32D,GAAUu2D,KAAUz6D,EAAEc,KAAK6P,OAAO7P,KAAKw3D,WAAaqC,CACpDz2D,GAAUu2D,KAAUG,CACpB12D,GAAUu2D,KAAUI,CAEpB55C,GAAUy5C,KAAU,EAIrBO,EAAa/0D,aAAahC,EAC1B+2D,GAAaj6C,aAAaC,IAOrB0H,GAAAtnB,UAAAo4D,WAAP,SAAkBxjD,EAAwBgW,GAEzC,GAAIjsB,GAAU8gB,EAAUtG,CACxB,IAAIvT,EAEJ,IAAIk0D,GAAmBC,CACvB,IAAIC,GAAoBC,CACxB,IAAIC,GAAaC,CACjB,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,CACf,IAAIrnB,EAEJ,IAAItoB,GAAgB,sBAAuB,CAE1CsoB,IAAgBzzC,KAAKw3D,WAAa,IAAIx3D,KAAKy3D,WAAa,IAAMz3D,KAAKw3D,WAAa,IAAIx3D,KAAKq5D,WAAa,IAAMr5D,KAAKy3D,WAAa,IAAIz3D,KAAKq5D,WAAa,IAAI,CAExJ,IAAIjB,GAA6DjjD,CAEjE,IAAIs+B,GAAe2kB,EAAiB3kB,aAAe2kB,EAAiBjyD,KAAO,KAAM,CAChFA,EAAMiyD,EAAiBjyD,IAAItF,IAAI4yC,OACzB,CACNttC,EAAM,GAAIyZ,cAAa6zB,EAAY,GAGpC,GAAIzzC,KAAKs5D,OAAQ,CAChBe,EAAaE,EAAc,EAAE,CAC7BD,GAAaE,EAAc,EAAE,MACvB,CACNH,EAAaC,EAAa,CAC1BC,GAAcC,EAAc,EAe7B9gD,EAAQ,CAGR+gD,GAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWr6D,KAAKw3D,UACrBsD,GAAKR,EAAWt6D,KAAKy3D,UACrB,KAAKv4D,EAAI,EAAGA,GAAKc,KAAKw3D,WAAYt4D,IAAK,CACtC,IAAK8gB,EAAI,EAAGA,GAAKhgB,KAAKy3D,WAAYz3C,IAAK,CACtC7Z,EAAIuT,MAAa+gD,EAAOv7D,EAAE27D,GAAK76D,KAAKmC,OACpCgE,GAAIuT,MAAaghD,GAAQJ,EAAat6C,EAAE86C,IAAK96D,KAAKoC,OAElD+D,GAAIuT,MAAaihD,GAAQN,EAAan7D,EAAE27D,IAAK76D,KAAKmC,OAClDgE,GAAIuT,MAAakhD,GAAQN,EAAat6C,EAAE86C,IAAK96D,KAAKoC,SAKpDq4D,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWr6D,KAAKw3D,UACrBsD,GAAKR,EAAWt6D,KAAKq5D,UACrB,KAAKn6D,EAAI,EAAGA,GAAKc,KAAKw3D,WAAYt4D,IAAK,CACtC,IAAK8gB,EAAI,EAAGA,GAAKhgB,KAAKq5D,WAAYr5C,IAAK,CACtC7Z,EAAIuT,MAAa+gD,EAAOv7D,EAAE27D,GAAI76D,KAAKmC,OACnCgE,GAAIuT,MAAaghD,GAAQJ,EAAat6C,EAAE86C,IAAK96D,KAAKoC,OAElD+D,GAAIuT,MAAaihD,EAAOz7D,EAAE27D,GAAI76D,KAAKmC,OACnCgE,GAAIuT,MAAakhD,EAAO56C,EAAE86C,GAAI96D,KAAKoC,SAKrCq4D,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWr6D,KAAKq5D,UACrByB,GAAKR,EAAWt6D,KAAKy3D,UACrB,KAAKv4D,EAAI,EAAGA,GAAKc,KAAKq5D,WAAYn6D,IAAK,CACtC,IAAK8gB,EAAI,EAAGA,GAAKhgB,KAAKy3D,WAAYz3C,IAAK,CACtC7Z,EAAIuT,MAAa+gD,EAAOv7D,EAAE27D,GAAI76D,KAAKmC,OACnCgE,GAAIuT,MAAaghD,GAAQJ,EAAat6C,EAAE86C,IAAK96D,KAAKoC,OAElD+D,GAAIuT,MAAaihD,GAAQN,EAAan7D,EAAE27D,IAAK76D,KAAKmC,OAClDgE,GAAIuT,MAAakhD,GAAQN,EAAat6C,EAAE86C,IAAK96D,KAAKoC,SAIpDg2D,EAAiBx1D,OAAOuD,OAElB,IAAIglB,GAAgB,kBAAmB,GAIhD,OAAAtD,IAjnBkCsvC,EAmnBLx3D,GAAAJ,QAApBsoB,IjGkxeN+wC,iDAAiD,mDAAmDM,sDAAsD,SAASz6D,EAAQkB,EAAOJ,GACrL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkG/4ftB,IAAO82D,GAAmB14D,EAAY,iDlGq5ftC,IkGh5fMq6D,GAAuB,SAAAp4D,GAASX,EAAhC+4D,EAAuBp4D,EAyJ5B,SAzJKo4D,GAyJOiC,EAAuBC,EAA0B5sD,EAAqBipD,EAAuBC,EAAsB2D,EAA0BC,EAA6BC,EAA8B5D,GAAxM,GAAAwD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAA5sD,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAipD,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA2D,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA5D,QAAA,GAAkB,CAAlBA,EAAA,KAEnN72D,EAAAlB,KAAAQ,KA9IOA,MAAAgC,aAAsB,CAgJ7BhC,MAAKo7D,WAAaL,CAClB/6D,MAAKi5D,eAAiB+B,CACtBh7D,MAAKqO,QAAUD,CACfpO,MAAKq7D,YAAchE,CACnBr3D,MAAKs7D,YAAchE,CACnBt3D,MAAKu7D,WAAaN,CAClBj7D,MAAKw7D,cAAgBN,CACrBl7D,MAAKy7D,eAAiBN,CACtBn7D,MAAK03D,KAAOH,EAnJb52D,OAAAC,eAAWk4D,EAAAv4D,UAAA,alGq6fJM,IkGr6fP,WAEC,MAAOb,MAAKo7D,YlGs6fN14D,IkGn6fP,SAAqBC,GAEpB3C,KAAKo7D,WAAaz4D,CAClB3C,MAAK23D,wBlGo6fC52D,WAAY,KACZC,aAAc,MkG/5frBL,QAAAC,eAAWk4D,EAAAv4D,UAAA,gBlGq6fJM,IkGr6fP,WAEC,MAAOb,MAAKi5D,gBlGs6fNv2D,IkGn6fP,SAAwBC,GAEvB3C,KAAKi5D,eAAiBt2D,CACtB3C,MAAK23D,wBlGo6fC52D,WAAY,KACZC,aAAc,MkG/5frBL,QAAAC,eAAWk4D,EAAAv4D,UAAA,UlGq6fJM,IkGr6fP,WAEC,MAAOb,MAAKqO,SlGs6fN3L,IkGn6fP,SAAkBC,GAEjB3C,KAAKqO,QAAU1L,CACf3C,MAAK23D,wBlGo6fC52D,WAAY,KACZC,aAAc,MkG/5frBL,QAAAC,eAAWk4D,EAAAv4D,UAAA,alGq6fJM,IkGr6fP,WAEC,MAAOb,MAAKq7D,alGs6fN34D,IkGn6fP,SAAqBC,GAEpB3C,KAAK07D,aAAa/4D,IlGo6fZ5B,WAAY,KACZC,aAAc,MkGl6fd83D,GAAAv4D,UAAAm7D,aAAP,SAAoB/4D,GAEnB3C,KAAKq7D,YAAc14D,CACnB3C,MAAK23D,sBACL33D,MAAK43D,kBAMNj3D,QAAAC,eAAWk4D,EAAAv4D,UAAA,alGm6fJM,IkGn6fP,WAEC,MAAOb,MAAKs7D,alGo6fN54D,IkGj6fP,SAAqBC,GAGpB3C,KAAK27D,aAAah5D,IlGi6fZ5B,WAAY,KACZC,aAAc,MkG95fd83D,GAAAv4D,UAAAo7D,aAAP,SAAoBh5D,GAEnB3C,KAAKs7D,YAAc34D,CACnB3C,MAAK23D,sBACL33D,MAAK43D,kBAONj3D,QAAAC,eAAWk4D,EAAAv4D,UAAA,alG85fJM,IkG95fP,WAEC,MAAOb,MAAKu7D,YlG+5fN74D,IkG55fP,SAAqBC,GAEpB3C,KAAKu7D,WAAa54D,CAClB3C,MAAK23D,wBlG65fC52D,WAAY,KACZC,aAAc,MkGx5frBL,QAAAC,eAAWk4D,EAAAv4D,UAAA,gBlG85fJM,IkG95fP,WAEC,MAAOb,MAAKw7D,elG+5fN94D,IkG55fP,SAAwBC,GAEvB3C,KAAKw7D,cAAgB74D,CACrB3C,MAAK23D,wBlG65fC52D,WAAY,KACZC,aAAc,MkGx5frBL,QAAAC,eAAWk4D,EAAAv4D,UAAA,OlG85fJM,IkG95fP,WAEC,MAAOb,MAAK03D,MlG+5fNh1D,IkG55fP,SAAeC,GAEd3C,KAAK03D,KAAO/0D,CACZ3C,MAAK23D,wBlG65fC52D,WAAY,KACZC,aAAc,MkG73fd83D,GAAAv4D,UAAAs3D,gBAAP,SAAuB1iD,EAAwBgW,GAE9C,GAAIllB,EACJ,IAAI7C,EACJ,IAAI2jB,EACJ,IAAIC,EAEJ,IAAI9nB,EACJ,IAAI8gB,EACJ,IAAIhd,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIy2D,EACJ,IAAIC,EAEJ,IAAI7tC,EACJ,IAAI6vC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAI1I,GAAoB,CAExB,IAAI2E,EACJ,IAAIC,EACJ,IAAIF,GAAoB,CACxB,IAAIiE,GAAyB,CAC7B,IAAIC,GAA2B,CAE/B,IAAI/D,EACJ,IAAIC,EAGJn4D,MAAKgC,aAAe,ClG63fd,IkG13fFk6D,GAA8B,EAAEzkD,KAAK6gD,GAAGt4D,KAAKq7D,WAEjD,IAAIlwC,GAAgB,sBAAuB,CAE1C,GAAIitC,GAA6DjjD,CAGjE,IAAInV,KAAKy7D,eAAgB,CACxBz7D,KAAKgC,eAAiBhC,KAAKs7D,YAAc,IAAIt7D,KAAKq7D,YAAc,EAChEhI,IAAcrzD,KAAKs7D,YAAYt7D,KAAKq7D,YAAY,EAEjD,GAAIr7D,KAAKu7D,WAAY,CACpBv7D,KAAKgC,cAAgB,GAAGhC,KAAKq7D,YAAc,EAC3ChI,IAAcrzD,KAAKq7D,YAAY,EAEhC,GAAIr7D,KAAKw7D,cAAe,CACvBx7D,KAAKgC,cAAgB,GAAGhC,KAAKq7D,YAAc,EAC3ChI,IAAcrzD,KAAKq7D,YAAY,EAIhC,GAAIr7D,KAAKgC,cAAgBo2D,EAAiB3kB,YAAa,CACtDxtC,EAAUmyD,EAAiBnyD,QAAQpF,IAAIu3D,EAAiBnF,YACxD7vD,GAAYg1D,EAAiBh1D,UAAUvC,IAAIb,KAAKgC,aAChD+kB,GAAUqxC,EAAiBrxC,QAAQlmB,IAAIb,KAAKgC,aAC5CglB,GAAWoxC,EAAiBpxC,SAASnmB,IAAIb,KAAKgC,kBACxC,CACNiE,EAAU,GAAIga,aAAYozC,EAC1BjwD,GAAY,GAAIwc,cAAa5f,KAAKgC,aAAa,EAC/C+kB,GAAU,GAAInH,cAAa5f,KAAKgC,aAAa,EAC7CglB,GAAW,GAAIpH,cAAa5f,KAAKgC,aAAa,EAE9ChC,MAAK43D,kBAGN+B,EAAO,CACPC,GAAO,CAGP,IAAI55D,KAAKu7D,YAAcv7D,KAAKo7D,WAAa,EAAG,CAE3Cl4D,GAAK,GAAIlD,KAAKqO,OAGd,IAAIrO,KAAK03D,KAAM,CACdQ,EAAK,CACLC,GAAK,CACLH,IAAS90D,CACT+0D,GAAQ,MAEF,CACNC,EAAK,CACLC,IAAM,CACNH,GAAQ,CACRC,GAAQ/0D,EAGTE,EAAUu2D,GAAQ,CAClBv2D,GAAUu2D,EAAO,GAAK3B,CACtB50D,GAAUu2D,EAAO,GAAK1B,CACtBlxC,GAAQ4yC,GAAQ,CAChB5yC,GAAQ4yC,EAAO,GAAKzB,CACpBnxC,GAAQ4yC,EAAO,GAAKxB,CACpBnxC,GAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAO,GAAK,CACrB3yC,GAAS2yC,EAAO,GAAK,CACrBA,IAAQ,CAERqC,IAAmB,CAEnB,KAAK98D,EAAI,EAAGA,GAAKc,KAAKq7D,cAAen8D,EAAG,CAGvC08D,EAAkB18D,EAAEg9D,CACpBl5D,GAAIhD,KAAKo7D,WAAW3jD,KAAKmkB,IAAIggC,EAC7B34D,GAAIjD,KAAKo7D,WAAW3jD,KAAKkkB,IAAIigC,EAE7B,IAAI57D,KAAK03D,KAAM,CACdM,GAAS90D,CACT+0D,GAAQh1D,MACF,CACN+0D,EAAQ/0D,CACRg1D,GAAQ/0D,EAGT,GAAIhE,GAAKc,KAAKq7D,YAAa,CAC1Bj4D,EAAUu2D,GAAQv2D,EAAU20D,EAAa,EACzC30D,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,EAC7C30D,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,OAEvC,CACN30D,EAAUu2D,GAAQ32D,CAClBI,GAAUu2D,EAAO,GAAK3B,CACtB50D,GAAUu2D,EAAO,GAAK1B,EAGvBlxC,EAAQ4yC,GAAQ,CAChB5yC,GAAQ4yC,EAAO,GAAKzB,CACpBnxC,GAAQ4yC,EAAO,GAAKxB,CACpBnxC,GAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAO,GAAK,CACrB3yC,GAAS2yC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIz6D,EAAI,EAAG,CAEV+G,EAAQ2zD,KAAUoC,EAAkB,CACpC/1D,GAAQ2zD,KAAUqC,CAClBh2D,GAAQ2zD,KAAUoC,EAGnBA,GAAmB,GAKrB,GAAIh8D,KAAKw7D,eAAiBx7D,KAAKi5D,eAAiB,EAAG,CAElD/1D,EAAI,GAAIlD,KAAKqO,OAEb0pD,GAAaiE,EAAgB,CAE7BC,GAAoBD,CAGpB,IAAIh8D,KAAK03D,KAAM,CACdQ,GAAM,CACNC,GAAK,CACLH,IAAS90D,CACT+0D,GAAQ,MACF,CACNC,EAAK,CACLC,GAAK,CACLH,GAAQ,CACRC,GAAQ/0D,EAGT,GAAIhE,EAAI,EAAG,CACVkE,EAAUu2D,GAAQ,CAClBv2D,GAAUu2D,EAAO,GAAK3B,CACtB50D,GAAUu2D,EAAO,GAAK1B,CACtBlxC,GAAQ4yC,GAAQ,CAChB5yC,GAAQ4yC,EAAO,GAAKzB,CACpBnxC,GAAQ4yC,EAAO,GAAKxB,CACpBnxC,GAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAO,GAAK,CACrB3yC,GAAS2yC,EAAO,GAAK,CACrBA,IAAQ,EAGTqC,GAAmB,CAEnB,KAAK98D,EAAI,EAAGA,GAAKc,KAAKq7D,cAAen8D,EAAG,CAGvC08D,EAAkB18D,EAAEg9D,CACpBl5D,GAAIhD,KAAKi5D,eAAexhD,KAAKmkB,IAAIggC,EACjC34D;EAAIjD,KAAKi5D,eAAexhD,KAAKkkB,IAAIigC,EAEjC,IAAI57D,KAAK03D,KAAM,CACdM,GAAS90D,CACT+0D,GAAQh1D,MACF,CACN+0D,EAAQ/0D,CACRg1D,GAAQ/0D,EAGT,GAAIhE,GAAKc,KAAKq7D,YAAa,CAC1Bj4D,EAAUu2D,GAAQv2D,EAAU20D,EAAa,EACzC30D,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,EAC7C30D,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,OACvC,CACN30D,EAAUu2D,GAAQ32D,CAClBI,GAAUu2D,EAAO,GAAK3B,CACtB50D,GAAUu2D,EAAO,GAAK1B,EAGvBlxC,EAAQ4yC,GAAQ,CAChB5yC,GAAQ4yC,EAAO,GAAKzB,CACpBnxC,GAAQ4yC,EAAO,GAAKxB,CACpBnxC,GAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAO,GAAK,CACrB3yC,GAAS2yC,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAIz6D,EAAI,EAAG,CAEV+G,EAAQ2zD,KAAUoC,EAAkB,CACpC/1D,GAAQ2zD,KAAUoC,CAClB/1D,GAAQ2zD,KAAUqC,EAGnBD,GAAmB,GAQrBH,EAAM77D,KAAKi5D,eAAiBj5D,KAAKo7D,UACjCU,GAAcD,EAAG77D,KAAKqO,OACtB0tD,GAAeD,GAAe,EAAI,EAAI97D,KAAKqO,QAAQwtD,CAGnD,IAAI77D,KAAKy7D,eAAgB,CACxB,GAAIx8D,EACJ,IAAIiB,EACJ,IAAI0oB,EACJ,IAAI3oB,EACJ,IAAIk8D,GAAYC,EAAYC,EAAgBC,CAE5C,KAAKt8C,EAAI,EAAGA,GAAKhgB,KAAKs7D,cAAet7C,EAAG,CACvC+L,EAAS/rB,KAAKo7D,WAAep7C,EAAEhgB,KAAKs7D,aAAct7D,KAAKo7D,WAAap7D,KAAKi5D,eACzE/1D,KAAMlD,KAAKqO,QAAQ,GAAM2R,EAAEhgB,KAAKs7D,YAAYt7D,KAAKqO,OAEjD0pD,GAAaiE,EAAgB,CAE7B,KAAK98D,EAAI,EAAGA,GAAKc,KAAKq7D,cAAen8D,EAAG,CAEvC08D,EAAkB18D,EAAEg9D,CACpBl5D,GAAI+oB,EAAOtU,KAAKmkB,IAAIggC,EACpB34D,GAAI8oB,EAAOtU,KAAKkkB,IAAIigC,EACpBO,GAAMJ,EAAYtkD,KAAKmkB,IAAIggC,EAC3BQ,GAAML,EAAYtkD,KAAKkkB,IAAIigC,EAE3B,IAAI57D,KAAK03D,KAAM,CACdQ,EAAK,CACLC,IAAMgE,CACNnE,IAAS90D,CACT+0D,GAAQh1D,CACRo5D,GAAUP,CACVQ,GAAUF,MAEJ,CACNlE,GAAMiE,CACNhE,GAAK,CACLH,GAAQ/0D,CACRg1D,GAAQ/0D,CACRm5D,GAAUD,CACVE,GAAUR,EAGX,GAAI58D,GAAKc,KAAKq7D,YAAa,CAC1Bj4D,EAAUu2D,GAAQv2D,EAAU20D,EAC5B30D,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,EAC7C30D,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,EAC7ChxC,GAAQ4yC,GAAQwC,CAChBp1C,GAAQ4yC,EAAO,GAAKmC,CACpB/0C,GAAQ4yC,EAAO,GAAKyC,CACpBp1C,GAAS2yC,GAAQyC,CACjBp1C,GAAS2yC,EAAO,GAAKzB,CACrBlxC,GAAS2yC,EAAO,GAAKxB,MACf,CACN/0D,EAAUu2D,GAAQ32D,CAClBI,GAAUu2D,EAAO,GAAK3B,CACtB50D,GAAUu2D,EAAO,GAAK1B,CACtBlxC,GAAQ4yC,GAAQwC,CAChBp1C,GAAQ4yC,EAAO,GAAK0C,CACpBt1C,GAAQ4yC,EAAO,GAAK2C,CACpBt1C,GAAS2yC,IAASyC,CAClBp1C,GAAS2yC,EAAO,GAAKzB,CACrBlxC,GAAS2yC,EAAO,GAAKxB,EAEtBwB,GAAQ,CAGR,IAAIz6D,EAAI,GAAK8gB,EAAI,EAAG,CACnB/gB,EAAI+8D,CACJ97D,GAAI87D,EAAkB,CACtBpzC,GAAI1oB,EAAIF,KAAKq7D,YAAc,CAC3Bp7D,GAAIhB,EAAIe,KAAKq7D,YAAc,CAE3Bp1D,GAAQ2zD,KAAU36D,CAClBgH,GAAQ2zD,KAAU15D,CAClB+F,GAAQ2zD,KAAUhxC,CAElB3iB,GAAQ2zD,KAAU36D,CAClBgH,GAAQ2zD,KAAUhxC,CAClB3iB,GAAQ2zD,KAAU35D,EAGnB+7D,MAMH5D,EAAiBlyD,WAAWD,EAE5BmyD,GAAiBhzD,aAAahC,EAC9Bg1D,GAAiBxyC,WAAWmB,EAC5BqxC,GAAiBtyC,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,CAC7C,GAAIgvC,GAAiDhlD,CAErD,IAAIilD,GAAqBp6D,KAAKs7D,YAAYt7D,KAAKq7D,YAAY,EAAIr7D,KAAKq7D,WACpE,IAAIj4D,GAAyB,GAAIwc,cAAaw6C,EAAY,EAC1D,IAAIj6C,GAAyB,GAAIP,cAAaw6C,EAE9CT,GAAO,CAEPC,GAAO,CACP,IAAIjuC,GAAU,EACd,KAAK3L,EAAI,EAAGA,GAAKhgB,KAAKs7D,cAAet7C,EAAG,CAEvC+L,EAAS/rB,KAAKo7D,WAAep7C,EAAEhgB,KAAKs7D,aAAct7D,KAAKo7D,WAAap7D,KAAKi5D,eACzE/1D,KAAMlD,KAAKqO,QAAQ,GAAM2R,EAAEhgB,KAAKs7D,YAAYt7D,KAAKqO,OAEjD,KAAKnP,EAAI,EAAGA,GAAKc,KAAKq7D,cAAen8D,EAAG,CAEvC08D,EAAkB18D,EAAEg9D,CACpBl5D,GAAI+oB,EAAOtU,KAAKmkB,IAAIggC,EACpB34D,GAAI8oB,EAAOtU,KAAKkkB,IAAIigC,EAEpB,IAAI57D,KAAK03D,KAAM,CACdM,GAAS90D,CACT+0D,GAAQh1D,MACF,CACN+0D,EAAQ/0D,CACRg1D,GAAQ/0D,EAGT,GAAIhE,EAAI,EAAG,CAEVkE,EAAUu2D,KAAU32D,CACpBI,GAAUu2D,KAAU3B,CACpB50D,GAAUu2D,KAAU1B,CAEpB93C,GAAUy5C,KAAU,CAGpB,IAAI55C,EAAI,EAAG,CACV,GAAIu8C,GAAev8C,GAAK,EAAI,GAAK,GAAGhgB,KAAKq7D,YAAYn8D,GAAK,GAAGA,GAAK,EAAIc,KAAKq7D,YAAY,EACvFj4D,GAAUu2D,GAAQv2D,EAAUu2D,KAAS4C,EACrCn5D,GAAUu2D,GAAQv2D,EAAUu2D,KAAS4C,EACrCn5D,GAAUu2D,GAAQv2D,EAAUu2D,KAAS4C,EAErCn5D,GAAUu2D,KAAU32D,CACpBI,GAAUu2D,KAAU3B,CACpB50D,GAAUu2D,KAAU1B,CAEpB93C,GAAUy5C,KAAU,GAMtB,GAAI16D,EAAIc,KAAKq7D,YAAa,CACzBj4D,EAAUu2D,KAAU32D,CACpBI,GAAUu2D,KAAU3B,CACpB50D,GAAUu2D,KAAU1B,IAMvBkC,EAAa/0D,aAAahC,EAC1B+2D,GAAaj6C,aAAaC,IAOrB24C,GAAAv4D,UAAAo4D,WAAP,SAAkBxjD,EAAwBgW,GAEzC,GAAIjsB,EACJ,IAAI8gB,EACJ,IAAIhd,EACJ,IAAIC,EACJ,IAAI24D,EACJ,IAAIz1D,EAEJ,IAAIglB,GAAgB,sBAAuB,CAE1C,GAAIitC,GAA6DjjD,CAGjE,IAAIijD,EAAiBjyD,KAAOnG,KAAKgC,cAAgBo2D,EAAiB3kB,YAAa,CAC9EttC,EAAMiyD,EAAiBjyD,IAAItF,IAAIb,KAAKgC,kBAC9B,CACNmE,EAAM,GAAIyZ,cAAa5f,KAAKgC,aAAa,GlGq0fjC,GkGj0fLk6D,GAA8B,EAAEzkD,KAAK6gD,GAAGt4D,KAAKq7D,WlGm0fxC,IkGh0fL3hD,GAAe,CAGnB,IAAI1Z,KAAKu7D,WAAY,CAEpBp1D,EAAIuT,KAAW,GAAI1Z,KAAKmC,OACxBgE,GAAIuT,KAAW,GAAI1Z,KAAKoC,OAExB,KAAKlD,EAAI,EAAGA,GAAKc,KAAKq7D,cAAen8D,EAAG,CAEvC08D,EAAkB18D,EAAEg9D,CACpBl5D,GAAI,GAAM,IAAMyU,KAAKmkB,IAAIggC,EACzB34D,GAAI,GAAM,GAAIwU,KAAKkkB,IAAIigC,EAEvBz1D,GAAIuT,KAAW1W,EAAEhD,KAAKmC,OACtBgE,GAAIuT,KAAWzW,EAAEjD,KAAKoC,SAKxB,GAAIpC,KAAKw7D,cAAe,CAEvBr1D,EAAIuT,KAAW,GAAI1Z,KAAKmC,OACxBgE,GAAIuT,KAAW,GAAI1Z,KAAKoC,OAExB,KAAKlD,EAAI,EAAGA,GAAKc,KAAKq7D,cAAen8D,EAAG,CAEvC08D,EAAkB18D,EAAEg9D,CACpBl5D,GAAI,GAAM,GAAIyU,KAAKmkB,IAAIggC,EACvB34D,GAAI,GAAM,GAAIwU,KAAKkkB,IAAIigC,EAEvBz1D,GAAIuT,KAAW1W,EAAEhD,KAAKmC,OACtBgE,GAAIuT,KAAWzW,EAAEjD,KAAKoC,SAKxB,GAAIpC,KAAKy7D,eAAgB,CACxB,IAAKz7C,EAAI,EAAGA,GAAKhgB,KAAKs7D,cAAet7C,EAAG,CACvC,IAAK9gB,EAAI,EAAGA,GAAKc,KAAKq7D,cAAen8D,EAAG,CAEvCiH,EAAIuT,KAAaxa,EAAEc,KAAKq7D,YAAcr7D,KAAKmC,OAC3CgE,GAAIuT,KAAasG,EAAEhgB,KAAKs7D,YAAct7D,KAAKoC,UAM9Cg2D,EAAiBx1D,OAAOuD,OAElB,IAAIglB,GAAgB,kBAAmB,GAIhD,OAAA2tC,IA5oBsC3B,EA8oBLx3D,GAAAJ,QAAxBu5D,IlGqzfNF,iDAAiD,mDAAmD4D,mDAAmD,SAAS/9D,EAAQkB,EAAOJ,GAClL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmG78gBtB,IAAO82D,GAAmB14D,EAAY,iDnGm9gBtC,ImG98gBMg+D,GAAoB,SAAA/7D,GAASX,EAA7B08D,EAAoB/7D,EAkBzB,SAlBK+7D,GAkBOlsD,EAAoBnC,EAAqBipD,EAAsBC,EAAsBC,EAAoBmF,GAAzG,GAAAnsD,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAnC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAipD,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAmF,QAAA,GAA2B,CAA3BA,EAAA,MAGpHh8D,EAAAlB,KAAAQ,KAEAA,MAAKw3D,WAAaH,CAClBr3D,MAAKy3D,WAAaH,CAClBt3D,MAAK03D,KAAOH,CACZv3D,MAAK6P,OAASU,CACdvQ,MAAKqO,QAAUD,CACfpO,MAAK28D,aAAeD,EAOrB/7D,OAAAC,eAAW67D,EAAAl8D,UAAA,anGy8gBJM,ImGz8gBP,WAEC,MAAOb,MAAKw3D,YnG08gBN90D,ImGv8gBP,SAAqBC,GAGpB3C,KAAKw3D,WAAa70D,CAElB3C,MAAK23D,sBACL33D,MAAK43D,mBnGs8gBC72D,WAAY,KACZC,aAAc,MmG/7gBrBL,QAAAC,eAAW67D,EAAAl8D,UAAA,anGs8gBJM,ImGt8gBP,WAEC,MAAOb,MAAKy3D,YnGu8gBN/0D,ImGp8gBP,SAAqBC,GAGpB3C,KAAKy3D,WAAa90D,CAElB3C,MAAK23D,sBACL33D,MAAK43D,mBnGm8gBC72D,WAAY,KACZC,aAAc,MmG77gBrBL,QAAAC,eAAW67D,EAAAl8D,UAAA,OnGm8gBJM,ImGn8gBP,WAEC,MAAOb,MAAK03D,MnGo8gBNh1D,ImGj8gBP,SAAeC,GAEd3C,KAAK03D,KAAO/0D,CAEZ3C,MAAK23D,wBnGi8gBC52D,WAAY,KACZC,aAAc,MmG57gBrBL,QAAAC,eAAW67D,EAAAl8D,UAAA,enGk8gBJM,ImGl8gBP,WAEC,MAAOb,MAAK28D,cnGm8gBNj6D,ImGh8gBP,SAAuBC,GAEtB3C,KAAK28D,aAAeh6D,CAEpB3C,MAAK23D,wBnGg8gBC52D,WAAY,KACZC,aAAc,MmG37gBrBL,QAAAC,eAAW67D,EAAAl8D,UAAA,SnGi8gBJM,ImGj8gBP,WAEC,MAAOb,MAAK6P,QnGk8gBNnN,ImG/7gBP,SAAiBC,GAEhB3C,KAAK6P,OAASlN,CAEd3C,MAAK23D,wBnG+7gBC52D,WAAY,KACZC,aAAc,MmG17gBrBL,QAAAC,eAAW67D,EAAAl8D,UAAA,UnGg8gBJM,ImGh8gBP,WAEC,MAAOb,MAAKqO,SnGi8gBN3L,ImG97gBP,SAAkBC,GAEjB3C,KAAKqO,QAAU1L,CAEf3C,MAAK23D,wBnG87gBC52D,WAAY,KACZC,aAAc,MmGz7gBdy7D,GAAAl8D,UAAAs3D,gBAAP,SAAuB1iD,EAAwBgW,GAE9C,GAAIllB,EACJ,IAAIjD,GAAUC,CACd,IAAIowD,EACJ,IAAIuJ,EACJ,IAAIC,GAAY78D,KAAKw3D,WAAa,CAElC,IAAImC,GAAaC,CAEjB,IAAIkD,EACJ,IAAIC,EAEJ,IAAI5xC,GAAgB,sBAAuB,CAE1C,GAAIitC,GAA6DjjD,CAEjE,IAAIs+B,IAAsBzzC,KAAKy3D,WAAa,GAAGoF,CAC/C,IAAIz5D,EACJ,IAAI2jB,EACJ,IAAIC,EAEJ,IAAIhnB,KAAK28D,aACRlpB,GAAe,CAEhB4f,GAAarzD,KAAKy3D,WAAWz3D,KAAKw3D,WAAW,CAE7C,IAAIx3D,KAAK28D,aACRtJ,GAAc,CAEf,IAAI+E,EAAiBnyD,SAAW,MAAQotD,GAAc+E,EAAiBnyD,QAAQxG,OAAQ,CACtFwG,EAAUmyD,EAAiBnyD,QAAQpF,IAAIu3D,EAAiBnF,iBAClD,CACNhtD,EAAU,GAAIga,aAAYozC,EAE1BrzD,MAAK43D,kBAGN,GAAInkB,GAAe2kB,EAAiB3kB,YAAa,CAChDrwC,EAAYg1D,EAAiBh1D,UAAUvC,IAAI4yC,EAC3C1sB,GAAUqxC,EAAiBrxC,QAAQlmB,IAAI4yC,EACvCzsB,GAAWoxC,EAAiBpxC,SAASnmB,IAAI4yC,OACnC,CACNrwC,EAAY,GAAIwc,cAAa6zB,EAAY,EACzC1sB,GAAU,GAAInH,cAAa6zB,EAAY,EACvCzsB,GAAW,GAAIpH,cAAa6zB,EAAY,EAExCzzC,MAAK43D,kBAGNgC,EAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAM/8D,KAAKy3D,aAAcsF,EAAI,CAEzC,IAAKD,EAAK,EAAGA,GAAM98D,KAAKw3D,aAAcsF,EAAI,CACzC95D,GAAK85D,EAAG98D,KAAKw3D,WAAa,IAAIx3D,KAAK6P,MACnC5M,IAAK85D,EAAG/8D,KAAKy3D,WAAa,IAAIz3D,KAAKqO,OAEnCjL,GAAUu2D,GAAQ32D,CAClB,IAAIhD,KAAK03D,KAAM,CACdt0D,EAAUu2D,EAAO,GAAK,CACtBv2D,GAAUu2D,EAAO,GAAK12D,MAChB,CACNG,EAAUu2D,EAAO,GAAK12D,CACtBG,GAAUu2D,EAAO,GAAK,EAGvB5yC,EAAQ4yC,GAAQ,CAEhB,IAAI35D,KAAK03D,KAAM,CACd3wC,EAAQ4yC,EAAO,GAAK,CACpB5yC,GAAQ4yC,EAAO,GAAK,MACd,CACN5yC,EAAQ4yC,EAAO,GAAK,CACpB5yC,GAAQ4yC,EAAO,IAAM,EAGtB3yC,EAAS2yC,GAAQ,CACjB3yC,GAAS2yC,EAAO,GAAK,CACrB3yC,GAAS2yC,EAAO,GAAK,CAErBA,IAAQ,CAGR,IAAI35D,KAAK28D,aAAc,CAEtB,IAAK,GAAIz9D,GAAWy6D,EAAMz6D,EAAIy6D,EAAO,IAAKz6D,EAAG,CAC5CkE,EAAUlE,GAAKkE,EAAUlE,EAAI,EAC7B6nB,GAAQ7nB,IAAM6nB,EAAQ7nB,EAAI,EAC1B8nB,GAAS9nB,IAAM8nB,EAAS9nB,EAAI,GAG7By6D,GAAQ,EAIT,GAAImD,GAAM98D,KAAKw3D,YAAcuF,GAAM/8D,KAAKy3D,WAAY,CAEnDmF,EAAOE,EAAKC,EAAGF,CACf,IAAIG,GAAch9D,KAAK28D,aAAc,EAAI,CAEzC12D,GAAQ2zD,KAAUgD,EAAKI,CACvB/2D,GAAQ2zD,MAAWgD,EAAOC,GAAIG,CAC9B/2D,GAAQ2zD,MAAWgD,EAAOC,EAAK,GAAGG,CAClC/2D,GAAQ2zD,KAAUgD,EAAKI,CACvB/2D,GAAQ2zD,MAAWgD,EAAOC,EAAK,GAAGG,CAClC/2D,GAAQ2zD,MAAWgD,EAAO,GAAGI,CAE7B,IAAIh9D,KAAK28D,aAAc,CAEtB12D,EAAQ2zD,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzC/2D,GAAQ2zD,MAAWgD,EAAOC,GAAIG,EAAO,CACrC/2D,GAAQ2zD,KAAUgD,EAAKI,EAAO,CAC9B/2D,GAAQ2zD,MAAWgD,EAAO,GAAGI,EAAO,CACpC/2D,GAAQ2zD,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzC/2D,GAAQ2zD,KAAUgD,EAAKI,EAAO,KAOlC5E,EAAiBlyD,WAAWD,EAE5BmyD,GAAiBhzD,aAAahC,EAC9Bg1D,GAAiBxyC,WAAWmB,EAC5BqxC,GAAiBtyC,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,CAC7C,GAAIgvC,GAAiDhlD,CAErD,IAAIilD,GAAsBp6D,KAAKy3D,WAAa,EAAKoF,CACjD,IAAIz5D,EACJ,IAAI+c,EAEJ,IAAI05C,GAAY75D,KAAK6P,OAAO,CAC5B,IAAIiqD,GAAY95D,KAAKqO,QAAQ,CAE7BjL,GAAY,GAAIwc,cAAaw6C,EAAY,EACzCj6C,GAAY,GAAIP,cAAaw6C,EAE7BR,GAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAM/8D,KAAKy3D,aAAcsF,EAAI,CACzC35D,EAAUu2D,MAAWE,CACrBz2D,GAAUu2D,KAAU,CACpBv2D,GAAUu2D,KAAUoD,EAAG/8D,KAAKqO,QAAUyrD,CAEtC12D,GAAUu2D,KAAUE,CACpBz2D,GAAUu2D,KAAU,CACpBv2D,GAAUu2D,KAAUoD,EAAG/8D,KAAKqO,QAAUyrD,CAEtC35C,GAAUy5C,KAAU,EAIrB,IAAKkD,EAAK,EAAGA,GAAM98D,KAAKw3D,aAAcsF,EAAI,CACzC15D,EAAUu2D,KAAUmD,EAAG98D,KAAK6P,OAASgqD,CACrCz2D,GAAUu2D,KAAU,CACpBv2D,GAAUu2D,MAAWG,CAErB12D,GAAUu2D,KAAUmD,EAAG98D,KAAK6P,OAASgqD,CACrCz2D,GAAUu2D,KAAU,CACpBv2D,GAAUu2D,KAAUG,CAEpB35C,GAAUy5C,KAAU,EAIrBO,EAAa/0D,aAAahC,EAC1B+2D,GAAaj6C,aAAaC,IAOrBs8C,GAAAl8D,UAAAo4D,WAAP,SAAkBxjD,EAAwBgW,GAEzC,GAAIhlB,EACJ,IAAIstC,EAEJ,IAAItoB,GAAgB,sBAAuB,CAE1CsoB,GAAgBzzC,KAAKy3D,WAAa,IAAMz3D,KAAKw3D,WAAa,EAE1D,IAAIx3D,KAAK28D,aACRlpB,GAAe,CAEhB,IAAI2kB,GAA6DjjD,CAEjE,IAAIijD,EAAiBjyD,KAAOstC,GAAe2kB,EAAiB3kB,YAAa,CACxEttC,EAAMiyD,EAAiBjyD,IAAItF,IAAI4yC,OACzB,CACNttC,EAAM,GAAIyZ,cAAa6zB,EAAY,EACnCzzC,MAAK23D,uBAGN,GAAIj+C,GAAe,CAEnB,KAAK,GAAIqjD,GAAY,EAAGA,GAAM/8D,KAAKy3D,aAAcsF,EAAI,CAEpD,IAAK,GAAID,GAAY,EAAGA,GAAM98D,KAAKw3D,aAAcsF,EAAI,CACpD32D,EAAIuT,GAAUojD,EAAG98D,KAAKw3D,WAAYx3D,KAAKmC,OACvCgE,GAAIuT,EAAQ,IAAM,EAAIqjD,EAAG/8D,KAAKy3D,YAAYz3D,KAAKoC,OAC/CsX,IAAS,CAET,IAAI1Z,KAAK28D,aAAc,CACtBx2D,EAAIuT,GAAUojD,EAAG98D,KAAKw3D,WAAYx3D,KAAKmC,OACvCgE,GAAIuT,EAAM,IAAM,EAAIqjD,EAAG/8D,KAAKy3D,YAAYz3D,KAAKoC,OAC7CsX,IAAS,IAKZ0+C,EAAiBx1D,OAAOuD,OAGlB,IAAIglB,GAAgB,kBAAmB,GAIhD,OAAAsxC,IAtWmCtF,EAwWLx3D,GAAAJ,QAArBk9D,InGw4gBN7D,iDAAiD,mDAAmDqE,qDAAqD,SAASx+D,EAAQkB,EAAOJ,GACpL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoG7vhBtB,IAAOy4D,GAAuBr6D,EAAW,qDpGmwhBzC,IoG9vhBMy+D,GAAsB,SAAAx8D,GAASX,EAA/Bm9D,EAAsBx8D,EAiD3B,SAjDKw8D,GAiDOnxC,EAAqBoxC,EAAmB5F,GAAxC,GAAAxrC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAoxC,QAAA,GAAiB,CAAjBA,EAAA,GAAmB,GAAA5F,QAAA,GAAkB,CAAlBA,EAAA,KAEnD72D,EAAAlB,KAAAQ,KAAM+rB,EAAQ,EAAG,EAAGoxC,EAAO,EAAG,KAAM,MAAO,MAAO5F,GA7CnD52D,OAAAC,eAAWs8D,EAAA38D,UAAA,UpG0whBJM,IoG1whBP,WAEC,MAAOb,MAAKi5D,gBpG2whBNv2D,IoGxwhBP,SAAkBC,GAEjB3C,KAAKi5D,eAAiBt2D,CACtB3C,MAAK23D,wBpGywhBC52D,WAAY,KACZC,aAAc,MoGpwhBrBL,QAAAC,eAAWs8D,EAAA38D,UAAA,SpG0whBJM,IoG1whBP,WAEC,MAAOb,MAAKq7D,apG2whBN34D,IoGxwhBP,SAAiBC,GAEhB3C,KAAK07D,aAAa/4D,IpGywhBZ5B,WAAY,KACZC,aAAc,MoGpwhBrBL,QAAAC,eAAWs8D,EAAA38D,UAAA,gBpG0whBJM,IoG1whBP,WAEC,MAAOb,MAAKs7D,apG2whBN54D,IoGxwhBP,SAAwBC,GAEvB3C,KAAK27D,aAAah5D,IpGywhBZ5B,WAAY,KACZC,aAAc,MoG7vhBtB,OAAAk8D,IArDqCpE,EAuDrCn5D,GAAgCJ,QAAvB29D,IpGiwhBNhE,qDAAqD,uDAAuDN,kDAAkD,SAASn6D,EAAQkB,EAAOJ,GACzL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqGp0hBtB,IAAO+8D,GAAgB3+D,EAAa,8CACpC,IAAO8J,GAAmB9J,EAAY,6CAGtC,IAAO4d,GAAQ5d,EAAe,mCAE9B,IAAOymB,GAAmBzmB,EAAY,8CACtC,IAAOkhB,GAAelhB,EAAa,0CACnC,IAAO4sC,GAAI5sC,EAAgB,mCAE3B,IAAOs4D,GAAUt4D,EAAc,wCrGs0hB/B,IqGj0hBM04D,GAAmB,SAAAz2D,GAASX,EAA5Bo3D,EAAmBz2D,EA0GxB,SA1GKy2D,GA0GOtwD,EAA8BskB,GAA9B,GAAAtkB,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAskB,QAAA,GAA2C,CAA3CA,EAAA,sBAEzCzqB,EAAAlB,KAAAQ,KAxGMA,MAAAq9D,WAAqB,IACrBr9D,MAAAs9D,SAAmB,IACnBt9D,MAAAmC,QAAiB,CACjBnC,MAAAoC,QAAiB,CAMhBpC,MAAAu9D,mBAA6B,IAiGpCv9D,MAAKksC,UAAY,GAAI7vB,EACrBrc,MAAKkjB,UAAYrc,CACjB7G,MAAKw9D,cAAgBryC,EA7FtBxqB,OAAAC,eAAWu2D,EAAA52D,UAAA,arGs0hBJM,IqGt0hBP,WAEC,MAAOs2D,GAAoBj2D,WrGu0hBrBH,WAAY,KACZC,aAAc,MqGl0hBrBL,QAAAC,eAAWu2D,EAAA52D,UAAA,gBrGw0hBJM,IqGx0hBP,WAEC,MAAOb,MAAKw9D,erGy0hBN96D,IqGt0hBP,SAAwBC,GAEvB,GAAI3C,KAAKw9D,eAAiB76D,EACzB,MAED3C,MAAKw9D,cAAgB76D,CAErB3C,MAAKy9D,0BrGq0hBC18D,WAAY,KACZC,aAAc,MqGn0hBrBL,QAAAC,eAAWu2D,EAAA52D,UAAA,YrGs0hBJM,IqGt0hBP,WAECb,KAAKkS,YAEL,OAAOlS,MAAKksC,WrGs0hBNnrC,WAAY,KACZC,aAAc,MqGj0hBrBL,QAAAC,eAAWu2D,EAAA52D,UAAA,YrGu0hBJM,IqGv0hBP,WAEC,MAAOb,MAAKkjB,WrGw0hBNxgB,IqGr0hBP,SAAoBC,GAEnB,GAAIA,GAAS3C,KAAKkjB,UACjB,MAEDljB,MAAKkjB,UAAYvgB,CAEjB,IAAI+K,GAAa1N,KAAKg3D,UAAUv3D,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IACvBc,KAAKg3D,UAAU93D,GAAI2H,SAAW7G,KAAKkjB,WrGo0hBtCniB,WAAY,KACZC,aAAc,MqGl0hBrBL,QAAAC,eAAWu2D,EAAA52D,UAAA,UrGq0hBJM,IqGr0hBP,WAEC,MAAOb,MAAKmC,SrGs0hBNO,IqGn0hBP,SAAkBC,GAEjB,GAAI3C,KAAKmC,QAAUQ,EAClB,MAED3C,MAAKmC,QAAUQ,CAEf3C,MAAK43D,mBrGk0hBC72D,WAAY,KACZC,aAAc,MqG/zhBrBL,QAAAC,eAAWu2D,EAAA52D,UAAA,UrGk0hBJM,IqGl0hBP,WAEC,MAAOb,MAAKoC,SrGm0hBNM,IqGh0hBP,SAAkBC,GAEjB,GAAI3C,KAAKoC,QAAUO,EAClB,MAED3C,MAAKoC,QAAUO,CAEf3C,MAAK43D,mBrG+zhBC72D,WAAY,KACZC,aAAc,MqG1yhBdm2D,GAAA52D,UAAAs3D,gBAAP,SAAuB1iD,EAAwBgW,GAE9C,KAAM,IAAI5iB,GAOJ4uD,GAAA52D,UAAAo4D,WAAP,SAAkBxjD,EAAwBgW,GAEzC,KAAM,IAAI5iB,GAMJ4uD,GAAA52D,UAAAk9D,uBAAP,WAECz9D,KAAKu9D,mBAAqB,IAC1Bv9D,MAAKq9D,WAAa,IAClBr9D,MAAKs9D,SAAW,KAMVnG,GAAA52D,UAAAo3D,qBAAP,WAEC33D,KAAKq9D,WAAa,KAMZlG,GAAA52D,UAAAq3D,gBAAP,WAEC53D,KAAKs9D,SAAW,KAMTnG,GAAA52D,UAAAm9D,mBAAR,WAGC,GAAI19D,KAAK2H,aACR3H,KAAKksC,UAAUvvB,kBAAkB3c,KAAK2H,aAEvC,IAAI3H,KAAKw9D,eAAiB,sBAAuB,CAChD,GAAIpF,GAAuC,GAAIlzC,GAAoB,GAAIk4C,GACvEhF,GAAiBvxC,kBAAoB,KACrCuxC,GAAiBtxC,mBAAqB,KACtCsxC,GAAiBpyD,cAAgB,KACjChG,MAAKksC,UAAU3vB,eAAe67C,EAC9Bp4D,MAAK2H,aAAeywD,MACd,IAAIp4D,KAAKw9D,eAAiB,kBAAmB,CACnDx9D,KAAKksC,UAAU3vB,eAAevc,KAAK2H,aAAe,GAAIgY,GAAgB,GAAIy9C,KAG3Ep9D,KAAKu9D,mBAAqB,MAOnBpG,GAAA52D,UAAAo9D,eAAR,WAEC39D,KAAK63D,gBAAgB73D,KAAK2H,aAAc3H,KAAKw9D,cAE7Cx9D,MAAKq9D,WAAa,MAMXlG,GAAA52D,UAAAq9D,UAAR,WAEC59D,KAAK24D,WAAW34D,KAAK2H,aAAc3H,KAAKw9D,cAExCx9D,MAAKs9D,SAAW,MAGVnG,GAAA52D,UAAA2R,WAAP,WAEC,GAAIlS,KAAKu9D,mBACRv9D,KAAK09D,oBAEN,IAAI19D,KAAKq9D,WACRr9D,KAAK29D,gBAEN,IAAI39D,KAAKs9D,SACRt9D,KAAK49D,YAIAzG,GAAA52D,UAAA02D,eAAP,WAEC,GAAI4G,GAAY,GAAIxyB,GAAKrrC,KAAKksC,UAAWlsC,KAAKkjB,UAC9C26C,GAAK5rD,eAAiBjS,IAEtB,OAAO69D,GA3NM1G,GAAAj2D,UAAmB,yBAsOlC,OAAAi2D,IAxOkCJ,EA0OlCp3D,GAA6BJ,QAApB43D,IrG+whBN2G,8CAA8C18D,UAAUga,6CAA6Cha,UAAU+a,mCAAmC,mCAAmCoD,0CAA0C,0CAA0C0F,8CAA8C,8CAA8CkmB,mCAAmC,mCAAmC2rB,wCAAwC,0CAA0C3qC,oDAAoD,SAAS1tB,EAAQkB,EAAOJ,GAC5kB,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsGxgiBtB,IAAO82D,GAAmB14D,EAAY,iDtG8giBtC,IsGzgiBMgtB,GAAqB,SAAA/qB,GAASX,EAA9B0rB,EAAqB/qB,EA6E1B,SA7EK+qB,GA6EOM,EAAoBsrC,EAAuBC,EAAuBC,GAAlE,GAAAxrC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAsrC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAE7E72D,EAAAlB,KAAAQ,KAEAA,MAAK2rB,QAAUI,CACf/rB,MAAKw3D,WAAaH,CAClBr3D,MAAKy3D,WAAaH,CAClBt3D,MAAK03D,KAAOH,EA1Eb52D,OAAAC,eAAW6qB,EAAAlrB,UAAA,UtGwhiBJM,IsGxhiBP,WAEC,MAAOb,MAAK2rB,StGyhiBNjpB,IsGthiBP,SAAkBC,GAEjB3C,KAAK2rB,QAAUhpB,CAEf3C,MAAK23D,wBtGshiBC52D,WAAY,KACZC,aAAc,MsGjhiBrBL,QAAAC,eAAW6qB,EAAAlrB,UAAA,atGuhiBJM,IsGvhiBP,WAEC,MAAOb,MAAKw3D,YtGwhiBN90D,IsGrhiBP,SAAqBC,GAEpB3C,KAAKw3D,WAAa70D,CAElB3C,MAAK23D,sBACL33D,MAAK43D,mBtGqhiBC72D,WAAY,KACZC,aAAc,MsGhhiBrBL,QAAAC,eAAW6qB,EAAAlrB,UAAA,atGshiBJM,IsGthiBP,WAEC,MAAOb,MAAKy3D,YtGuhiBN/0D,IsGphiBP,SAAqBC,GAEpB3C,KAAKy3D,WAAa90D,CAElB3C,MAAK23D,sBACL33D,MAAK43D,mBtGohiBC72D,WAAY,KACZC,aAAc,MsG/giBrBL,QAAAC,eAAW6qB,EAAAlrB,UAAA,OtGqhiBJM,IsGrhiBP,WAEC,MAAOb,MAAK03D,MtGshiBNh1D,IsGnhiBP,SAAeC,GAEd3C,KAAK03D,KAAO/0D,CAEZ3C,MAAK23D,wBtGmhiBC52D,WAAY,KACZC,aAAc,MsG5/hBdyqB,GAAAlrB,UAAAs3D,gBAAP,SAAuB1iD,EAAwBgW,GAE9C,GAAIllB,EACJ,IAAI7C,EACJ,IAAI2jB,EACJ,IAAIC,EAEJ,IAAI9nB,EACJ,IAAI8gB,EACJ,IAAI25C,GAAaC,CAEjB,IAAI5B,EACJ,IAAIC,EACJ,IAAIxkB,EAGJ,IAAItoB,GAAgB,sBAAuB,CAE1C,GAAIitC,GAA6DjjD,CAEjEs+B,IAAezzC,KAAKy3D,WAAa,IAAIz3D,KAAKw3D,WAAa,EAEvD,IAAI/jB,GAAe2kB,EAAiB3kB,aAAe2kB,EAAiBnyD,SAAW,KAAM,CACpFA,EAAUmyD,EAAiBnyD,QAAQpF,IAAIu3D,EAAiBnF,YACxD7vD,GAAYg1D,EAAiBh1D,UAAUvC,IAAI4yC,EAC3C1sB,GAAUqxC,EAAiBrxC,QAAQlmB,IAAI4yC,EACvCzsB,GAAWoxC,EAAiBpxC,SAASnmB,IAAI4yC,OACnC,CACNxtC,EAAU,GAAIga,cAAajgB,KAAKy3D,WAAa,GAAGz3D,KAAKw3D,WAAW,EAChEp0D,GAAY,GAAIwc,cAAa6zB,EAAY,EACzC1sB,GAAU,GAAInH,cAAa6zB,EAAY,EACvCzsB,GAAW,GAAIpH,cAAa6zB,EAAY,EAExCzzC,MAAK43D,kBAGN+B,EAAO,CACPC,GAAO,CAEP,IAAI7B,EACJ,IAAIG,EACJ,IAAIC,EAEJ,KAAKn4C,EAAI,EAAGA,GAAKhgB,KAAKy3D,aAAcz3C,EAAG,CAEtC+3C,EAAa4B,CAEb,IAAItB,GAAkB5gD,KAAK6gD,GAAGt4C,EAAEhgB,KAAKy3D,UACrC,IAAIv0D,IAAYlD,KAAK2rB,QAAQlU,KAAKmkB,IAAIy8B,EACtC,IAAIE,GAAoBv4D,KAAK2rB,QAAQlU,KAAKkkB,IAAI08B,EAE9C,KAAKn5D,EAAI,EAAGA,GAAKc,KAAKw3D,aAAct4D,EAAG,CACtC,GAAIs5D,GAAkB,EAAE/gD,KAAK6gD,GAAGp5D,EAAEc,KAAKw3D,UACvC,IAAIx0D,GAAWu1D,EAAW9gD,KAAKmkB,IAAI48B,EACnC,IAAIv1D,GAAWs1D,EAAW9gD,KAAKkkB,IAAI68B,EACnC,IAAIC,GAAiB,EAAEhhD,KAAKC,KAAK1U,EAAEA,EAAIC,EAAEA,EAAIC,EAAEA,EAC/C,IAAIw1D,GAAgBjhD,KAAKC,KAAKzU,EAAEA,EAAID,EAAEA,EAEtC,IAAIhD,KAAK03D,KAAM,CAEdQ,EAAK,CACLC,GAAKO,EAAS,KAAM11D,EAAE01D,EAAS,CAC/BV,IAAS90D,CACT+0D,GAAQh1D,MAEF,CACNi1D,EAAKQ,EAAS,KAAM11D,EAAE01D,EAAS,CAC/BP,GAAK,CACLH,GAAQ/0D,CACRg1D,GAAQ/0D,EAGT,GAAIhE,GAAKc,KAAKw3D,WAAY,CACzBp0D,EAAUu2D,GAAQv2D,EAAU20D,EAC5B30D,GAAUu2D,EAAK,GAAKv2D,EAAU20D,EAAa,EAC3C30D,GAAUu2D,EAAK,GAAKv2D,EAAU20D,EAAa,EAC3ChxC,GAAQ4yC,GAAQ5yC,EAAQgxC,GAAe/0D,EAAEy1D,EAAS,EAClD1xC,GAAQ4yC,EAAK,GAAK5yC,EAAQgxC,EAAa,GAAOC,EAAMS,EAAS,EAC7D1xC,GAAQ4yC,EAAK,GAAK5yC,EAAQgxC,EAAa,GAAME,EAAMQ,EAAS,EAC5DzxC,GAAS2yC,GAAQjB,EAAS,MAAOz1D,EAAEy1D,EAAS,CAC5C1xC,GAAS2yC,EAAK,GAAKzB,CACnBlxC,GAAS2yC,EAAK,GAAKxB,MAEb,CAEN/0D,EAAUu2D,GAAQ32D,CAClBI,GAAUu2D,EAAK,GAAK3B,CACpB50D,GAAUu2D,EAAK,GAAK1B,CACpBlxC,GAAQ4yC,GAAQ32D,EAAEy1D,CAClB1xC,GAAQ4yC,EAAK,GAAK3B,EAAMS,CACxB1xC,GAAQ4yC,EAAK,GAAK1B,EAAMQ,CACxBzxC,GAAS2yC,GAAQjB,EAAS,MAAOz1D,EAAEy1D,EAAS,CAC5C1xC,GAAS2yC,EAAK,GAAKzB,CACnBlxC,GAAS2yC,EAAK,GAAKxB,EAGpB,GAAIj5D,EAAI,GAAK8gB,EAAI,EAAG,CAEnB,GAAI/gB,IAAYe,KAAKw3D,WAAa,GAAGx3C,EAAI9gB,CACzC,IAAIgB,IAAYF,KAAKw3D,WAAa,GAAGx3C,EAAI9gB,EAAI,CAC7C,IAAI0pB,IAAY5oB,KAAKw3D,WAAa,IAAIx3C,EAAI,GAAK9gB,EAAI,CACnD,IAAIe,IAAYD,KAAKw3D,WAAa,IAAIx3C,EAAI,GAAK9gB,CAE/C,IAAI8gB,GAAKhgB,KAAKy3D,WAAY,CAEzBr0D,EAAUu2D,GAAQv2D,EAAU20D,EAC5B30D,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,EAC7C30D,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,EAE7C9xD,GAAQ2zD,KAAU36D,CAClBgH,GAAQ2zD,KAAUhxC,CAClB3iB,GAAQ2zD,KAAU35D,MAEZ,IAAI+f,GAAK,EAAG,CAElB/Z,EAAQ2zD,KAAU36D,CAClBgH,GAAQ2zD,KAAU15D,CAClB+F,GAAQ2zD,KAAUhxC,MAEZ,CACN3iB,EAAQ2zD,KAAU36D,CAClBgH,GAAQ2zD,KAAU15D,CAClB+F,GAAQ2zD,KAAUhxC,CAClB3iB,GAAQ2zD,KAAU36D,CAClBgH,GAAQ2zD,KAAUhxC,CAClB3iB,GAAQ2zD,KAAU35D,GAIpB05D,GAAQ,GAIVvB,EAAiBlyD,WAAWD,EAE5BmyD,GAAiBhzD,aAAahC,EAC9Bg1D,GAAiBxyC,WAAWmB,EAC5BqxC,GAAiBtyC,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,CAE7C,GAAIgvC,GAAiDhlD,CAErD,IAAIilD,GAAqBp6D,KAAKy3D,WAAWz3D,KAAKw3D,WAAW,EAAIx3D,KAAKw3D,UAClE,IAAIp0D,GAAyB,GAAIwc,cAAaw6C,EAAY,EAC1D,IAAIj6C,GAAyB,GAAIP,cAAaw6C,EAE9CT,GAAO,CAEPC,GAAO,CAEP,KAAK55C,EAAI,EAAGA,GAAKhgB,KAAKy3D,aAAcz3C,EAAG,CAEtC,GAAIq4C,GAAkB5gD,KAAK6gD,GAAGt4C,EAAEhgB,KAAKy3D,UACrC,IAAIv0D,IAAYlD,KAAK2rB,QAAQlU,KAAKmkB,IAAIy8B,EACtC,IAAIE,GAAoBv4D,KAAK2rB,QAAQlU,KAAKkkB,IAAI08B,EAE9C,KAAKn5D,EAAI,EAAGA,GAAKc,KAAKw3D,aAAct4D,EAAG,CACtC,GAAIs5D,GAAkB,EAAE/gD,KAAK6gD,GAAGp5D,EAAEc,KAAKw3D,UACvC,IAAIx0D,GAAWu1D,EAAW9gD,KAAKmkB,IAAI48B,EACnC,IAAIv1D,GAAWs1D,EAAW9gD,KAAKkkB,IAAI68B,EAEnC,IAAIx4D,KAAK03D,KAAM,CACdM,GAAS90D,CACT+0D,GAAQh1D,MAEF,CACN+0D,EAAQ/0D,CACRg1D,GAAQ/0D,EAGT,GAAIhE,EAAI,EAAG,CAEVkE,EAAUu2D,KAAU32D,CACpBI,GAAUu2D,KAAU3B,CACpB50D,GAAUu2D,KAAU1B,CAEpB93C,GAAUy5C,KAAU,CAGpB,IAAI55C,EAAI,EAAG,CACV,GAAIu8C,GAAev8C,GAAK,EAAI,GAAK,GAAGhgB,KAAKw3D,WAAWt4D,GAAK,GAAGA,GAAK,EAAIc,KAAKw3D,WAAW,EACrFp0D,GAAUu2D,GAAQv2D,EAAUu2D,KAAS4C,EACrCn5D,GAAUu2D,GAAQv2D,EAAUu2D,KAAS4C,EACrCn5D,GAAUu2D,GAAQv2D,EAAUu2D,KAAS4C,EAErCn5D,GAAUu2D,KAAU32D,CACpBI,GAAUu2D,KAAU3B,CACpB50D,GAAUu2D,KAAU1B,CAEpB93C,GAAUy5C,KAAU,GAMtB,GAAI16D,EAAIc,KAAKw3D,WAAY,CACxBp0D,EAAUu2D,KAAU32D,CACpBI,GAAUu2D,KAAU3B,CACpB50D,GAAUu2D,KAAU1B,IAMvBkC,EAAa/0D,aAAahC,EAC1B+2D,GAAaj6C,aAAaC,IAOrBsL,GAAAlrB,UAAAo4D,WAAP,SAAkBxjD,EAAwBgW,GAEzC,GAAIjsB,GAAU8gB,CACd,IAAIyzB,IAAsBzzC,KAAKy3D,WAAa,IAAIz3D,KAAKw3D,WAAa,EAClE,IAAIrxD,EAGJ,IAAIglB,GAAgB,sBAAuB,CAE1CsoB,GAAezzC,KAAKy3D,WAAa,IAAIz3D,KAAKw3D,WAAa,EAEvD,IAAIY,GAA6DjjD,CAEjE,IAAIs+B,GAAe2kB,EAAiB3kB,aAAe2kB,EAAiBjyD,KAAO,KAAM,CAChFA,EAAMiyD,EAAiBjyD,IAAItF,IAAI4yC,OACzB,CACNttC,EAAM,GAAIyZ,cAAa6zB,EAAY,GAGpC,GAAI/5B,GAAe,CACnB,KAAKsG,EAAI,EAAGA,GAAKhgB,KAAKy3D,aAAcz3C,EAAG,CACtC,IAAK9gB,EAAI,EAAGA,GAAKc,KAAKw3D,aAAct4D,EAAG,CACtCiH,EAAIuT,KAAaxa,EAAEc,KAAKw3D,WAAax3D,KAAKmC,OAC1CgE,GAAIuT,KAAasG,EAAEhgB,KAAKy3D,WAAaz3D,KAAKoC,SAI5Cg2D,EAAiBx1D,OAAOuD,OAElB,IAAIglB,GAAgB,kBAAmB,GAIhD,OAAAM,IAhVoC0rC,EAkVLx3D,GAAAJ,QAAtBksB,ItG+8hBNmtC,iDAAiD,mDAAmDmF,mDAAmD,SAASt/D,EAAQkB,EAAOJ,GAClL,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuG5yiBtB,IAAO82D,GAAmB14D,EAAY,iDvGkziBtC,IuG7yiBMu/D,GAAoB,SAAAt9D,GAASX,EAA7Bi+D,EAAoBt9D,EAyFzB,SAzFKs9D,GAyFOjyC,EAAoBkyC,EAAwBC,EAAuBC,EAAsB5G,GAAzF,GAAAxrC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAkyC,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA5G,QAAA,GAAkB,CAAlBA,EAAA,KAEpG72D,EAAAlB,KAAAQ,KApFOA,MAAAgC,aAAsB,CAsF7BhC,MAAK2rB,QAAUI,CACf/rB,MAAKo+D,YAAcH,CACnBj+D,MAAKq+D,WAAaH,CAClBl+D,MAAKs+D,WAAaH,CAClBn+D,MAAK03D,KAAOH,EArFb52D,OAAAC,eAAWo9D,EAAAz9D,UAAA,UvG6ziBJM,IuG7ziBP,WAEC,MAAOb,MAAK2rB,SvG8ziBNjpB,IuG3ziBP,SAAkBC,GAEjB3C,KAAK2rB,QAAUhpB,CACf3C,MAAK23D,wBvG4ziBC52D,WAAY,KACZC,aAAc,MuGvziBrBL,QAAAC,eAAWo9D,EAAAz9D,UAAA,cvG6ziBJM,IuG7ziBP,WAEC,MAAOb,MAAKo+D,avG8ziBN17D,IuG3ziBP,SAAsBC,GAErB3C,KAAKo+D,YAAcz7D,CACnB3C,MAAK23D,wBvG4ziBC52D,WAAY,KACZC,aAAc,MuGvziBrBL,QAAAC,eAAWo9D,EAAAz9D,UAAA,avG6ziBJM,IuG7ziBP,WAEC,MAAOb,MAAKq+D,YvG8ziBN37D,IuG3ziBP,SAAqBC,GAEpB3C,KAAKq+D,WAAa17D,CAClB3C,MAAK23D,sBACL33D,MAAK43D,mBvG4ziBC72D,WAAY,KACZC,aAAc,MuGvziBrBL,QAAAC,eAAWo9D,EAAAz9D,UAAA,avG6ziBJM,IuG7ziBP,WAEC,MAAOb,MAAKs+D,YvG8ziBN57D,IuG3ziBP,SAAqBC,GAEpB3C,KAAKs+D,WAAa37D,CAClB3C,MAAK23D,sBACL33D,MAAK43D,mBvG4ziBC72D,WAAY,KACZC,aAAc,MuGvziBrBL,QAAAC,eAAWo9D,EAAAz9D,UAAA,OvG6ziBJM,IuG7ziBP,WAEC,MAAOb,MAAK03D,MvG8ziBNh1D,IuG3ziBP,SAAeC,GAEd3C,KAAK03D,KAAO/0D,CACZ3C,MAAK23D,wBvG4ziBC52D,WAAY,KACZC,aAAc,MuGnyiBdg9D,GAAAz9D,UAAAs3D,gBAAP,SAAuB1iD,EAAwBgW,GAE9C,GAAIllB,EACJ,IAAI7C,EACJ,IAAI2jB,EACJ,IAAIC,EAEJ,IAAI9nB,GAAU8gB,CACd,IAAIhd,GAAUC,EAAUC,EAAUoB,EAAWC,EAAWstD,EAAW0M,EAAyBC,CAC5F,IAAI7E,EACJ,IAAIC,EACJ,IAAIvG,GAAoB,CAExB,IAAIloC,GAAgB,sBAAuB,CAE1C,GAAIitC,GAA6DjjD,CAGjEnV,MAAKgC,cAAgBhC,KAAKs+D,WAAa,IAAIt+D,KAAKq+D,WAAa,EAC7DhL,GAAarzD,KAAKs+D,WAAWt+D,KAAKq+D,WAAW,CAG7C,IAAIr+D,KAAKgC,cAAgBo2D,EAAiB3kB,YAAa,CACtDxtC,EAAUmyD,EAAiBnyD,QAAQpF,IAAIu3D,EAAiBnF,YACxD7vD,GAAYg1D,EAAiBh1D,UAAUvC,IAAIb,KAAKgC,aAChD+kB,GAAUqxC,EAAiBrxC,QAAQlmB,IAAIb,KAAKgC,aAC5CglB,GAAWoxC,EAAiBpxC,SAASnmB,IAAIb,KAAKgC,kBACxC,CACNiE,EAAU,GAAIga,aAAYozC,EAC1BjwD,GAAY,GAAIwc,cAAa5f,KAAKgC,aAAa,EAC/C+kB,GAAU,GAAInH,cAAa5f,KAAKgC,aAAa,EAC7CglB,GAAW,GAAIpH,cAAa5f,KAAKgC,aAAa,EAE9ChC,MAAK43D,kBAIN+B,EAAO,CACPC,GAAO,CvGkyiBE,IuG/xiBL6E,GAA+B,EAAEhnD,KAAK6gD,GAAGt4D,KAAKq+D,UAClD,IAAIK,GAA+B,EAAEjnD,KAAK6gD,GAAGt4D,KAAKs+D,UAElD,IAAItG,GAAcC,CAClB,IAAIC,GAAWC,EAAWwG,EAAWC,CACrC,IAAI7G,GAAoB,CACxB,IAAIiE,GAAyB,CvGgyiBpB,IuG7xiBL/8D,GAAUiB,EAAU0oB,EAAU3oB,EAAUR,CAE5C,KAAKugB,EAAI,EAAGA,GAAKhgB,KAAKs+D,aAAct+C,EAAG,CAEtC+3C,EAAaiE,EAAgB,CAE7B,KAAK98D,EAAI,EAAGA,GAAKc,KAAKq+D,aAAcn/D,EAAG,CAGtCq/D,EAAmBr/D,EAAEu/D,CACrBD,GAAmBx+C,EAAE0+C,CAErBj/D,GAASgY,KAAKmkB,IAAI4iC,EAClBl6D,GAAK7E,EAAOgY,KAAKmkB,IAAI2iC,EACrBh6D,GAAK9E,EAAOgY,KAAKkkB,IAAI4iC,EACrB1M,GAAKp6C,KAAKkkB,IAAI6iC,EAEdx7D,GAAIhD,KAAK2rB,QAAQlU,KAAKmkB,IAAI2iC,GAAoBv+D,KAAKo+D,YAAY95D,CAC/DrB,GAAIjD,KAAK2rB,QAAQlU,KAAKkkB,IAAI4iC,GAAoBv+D,KAAKo+D,YAAY75D,CAC/DrB,GAAK8c,GAAKhgB,KAAKs+D,WAAa,EAAIt+D,KAAKo+D,YAAYvM,CAEjD,IAAI7xD,KAAK03D,KAAM,CAEdiH,GAAM9M,CACN+M,GAAKr6D,CACL2zD,GAAK,CACLC,GAAM14D,EAAQ6E,EAAG7E,EAASuD,EAAEhD,KAAK2rB,OACjCqsC,IAAS90D,CACT+0D,GAAQh1D,MAEF,CACN07D,EAAKp6D,CACLq6D,GAAK/M,CACLqG,GAAMz4D,EAAQ6E,EAAG7E,EAASuD,EAAEhD,KAAK2rB,OACjCwsC,GAAK,CACLH,GAAQ/0D,CACRg1D,GAAQ/0D,EAGT,GAAIhE,GAAKc,KAAKq+D,WAAY,CACzBj7D,EAAUu2D,GAAQ32D,CAClBI,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,EAC7C30D,GAAUu2D,EAAO,GAAKv2D,EAAU20D,EAAa,OACvC,CACN30D,EAAUu2D,GAAQ32D,CAClBI,GAAUu2D,EAAO,GAAK3B,CACtB50D,GAAUu2D,EAAO,GAAK1B,EAGvBlxC,EAAQ4yC,GAAQr1D,CAChByiB,GAAQ4yC,EAAO,GAAKgF,CACpB53C,GAAQ4yC,EAAO,GAAKiF,CACpB53C,GAAS2yC,KAAUl6D,EAAQ8E,EAAG9E,EAASwD,EAAEjD,KAAK2rB,QAC9C3E,GAAS2yC,EAAO,GAAKzB,CACrBlxC,GAAS2yC,EAAO,GAAKxB,CAErBwB,IAAQ,CAGR,IAAIz6D,EAAI,GAAK8gB,EAAI,EAAG,CACnB/gB,EAAI+8D,CACJ97D,GAAI87D,EAAkB,CACtBpzC,GAAI1oB,EAAIF,KAAKq+D,WAAa,CAC1Bp+D,GAAIhB,EAAIe,KAAKq+D,WAAa,CAE1Bp4D,GAAQ2zD,KAAU36D,CAClBgH,GAAQ2zD,KAAU15D,CAClB+F,GAAQ2zD,KAAUhxC,CAElB3iB,GAAQ2zD,KAAU36D,CAClBgH,GAAQ2zD,KAAUhxC,CAClB3iB,GAAQ2zD,KAAU35D,EAGnB+7D,KAKF5D,EAAiBlyD,WAAWD,EAE5BmyD,GAAiBhzD,aAAahC,EAC9Bg1D,GAAiBxyC,WAAWmB,EAC5BqxC,GAAiBtyC,YAAYkB,OAEvB,IAAImE,GAAgB,kBAAmB,GAQxC6yC,GAAAz9D,UAAAo4D,WAAP,SAAkBxjD,EAAwBgW,GAGzC,GAAIjsB,GAAU8gB,CACd,IAAI7Z,EAGJ,IAAIglB,GAAgB,sBAAuB,CAE1C,GAAIitC,GAA6DjjD,CAGjE,IAAIijD,EAAiBjyD,KAAOnG,KAAKgC,cAAgBo2D,EAAiB3kB,YAAa,CAC9EttC,EAAMiyD,EAAiBjyD,IAAItF,IAAIb,KAAKgC,kBAC9B,CACNmE,EAAM,GAAIyZ,cAAa5f,KAAKgC,aAAa,GvGywiBjC,GuGrwiBL0X,GAAe,CAGnB,KAAKsG,EAAI,EAAGA,GAAKhgB,KAAKs+D,aAAct+C,EAAG,CACtC,IAAK9gB,EAAI,EAAGA,GAAKc,KAAKq+D,aAAcn/D,EAAG,CAEtCiH,EAAIuT,KAAaxa,EAAEc,KAAKq+D,WAAar+D,KAAKmC,OAC1CgE,GAAIuT,KAAasG,EAAEhgB,KAAKs+D,WAAat+D,KAAKoC,SAK5Cg2D,EAAiBx1D,OAAOuD,OAElB,IAAIglB,GAAgB,kBAAmB,GAIhD,OAAA6yC,IA5RmC7G,EA8RnCx3D,GAA8BJ,QAArBy+D,IvGmwiBNpF,iDAAiD,mDAAmDiG,yCAAyC,SAASpgE,EAAQkB,EAAOJ,SAElKu/D,+CAA+C,SAASrgE,EAAQkB,EAAOJ,GAI7E,GwG1ijBMw/D,GAAmB,WAAzB,QAAMA,MAEEA,EAAAx+D,UAAAy+D,uBAAP,SAA8BC,GAE7B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,KAAKH,IAASA,EAAKtK,KAAM,CACxB,MAAOsK,GAIRG,EAAOH,CACPE,GAAOF,EAAKtK,IAEZ,OAAOwK,EAAM,CACZA,EAAOA,EAAKxK,IACZ,IAAIwK,EAAM,CACTC,EAAOA,EAAKzK,IACZwK,GAAOA,EAAKxK,MAIduK,EAAQE,EAAKzK,IACbyK,GAAKzK,KAAO,IAGZsK,GAAOj/D,KAAKg/D,uBAAuBC,EACnCC,GAAQl/D,KAAKg/D,uBAAuBE,ExGuijB9B,IwGpijBF5nB,EACJ,IAAI+nB,EACJ,IAAI//D,EAEJ,KAAK2/D,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,EAAO,CACrB,GAAID,EAAKK,OAASJ,EAAMI,OAAQ,CAC/BhgE,EAAI2/D,CACJA,GAAOA,EAAKtK,SACN,CACNr1D,EAAI4/D,CACJA,GAAQA,EAAMvK,KAGf,IAAKrd,EACJA,EAASh4C,MACT+/D,GAAK1K,KAAOr1D,CAEb+/D,GAAO//D,EAGR,GAAI2/D,EACHI,EAAK1K,KAAOsK,MAAW,IAAIC,EAC3BG,EAAK1K,KAAOuK,CAEb,OAAO5nB,GAGDynB,GAAAx+D,UAAAg/D,sBAAP,SAA6BN,GAE5B,GAAIC,EACJ,IAAIC,GAAkBC,CAEtB,KAAKH,IAASA,EAAKtK,KAAM,CACxB,MAAOsK,GAIRG,EAAOH,CACPE,GAAOF,EAAKtK,IAEZ,OAAOwK,EAAM,CACZA,EAAOA,EAAKxK,IACZ,IAAIwK,EAAM,CACTC,EAAOA,EAAKzK,IACZwK,GAAOA,EAAKxK,MAIduK,EAAQE,EAAKzK,IACbyK,GAAKzK,KAAO,IAGZsK,GAAOj/D,KAAKu/D,sBAAsBN,EAClCC,GAAQl/D,KAAKu/D,sBAAsBL,ExG4hjB7B,IwGzhjBF5nB,EACJ,IAAI+nB,EACJ,IAAI//D,EACJ,IAAIkgE,GAAa,CAEjB,KAAKP,EACJ,MAAOC,EACR,KAAKA,EACJ,MAAOD,EAER,OAAOA,GAAQC,GAASD,GAAQ,MAAQC,GAAS,KAAM,CxG2hjB7C,GwGthjBLO,GAAaR,EAAKS,aACtB,IAAIC,GAAaT,EAAMQ,aAEvB,IAAID,GAAOE,EAAK,CACf,GAAIC,GAAYX,EAAKY,QACrB,IAAIC,GAAYZ,EAAMW,QAEtB,IAAID,GAAME,EAAI,CACb,GAAIb,EAAKK,OAASJ,EAAMI,OACvBE,EAAM,MACNA,IAAO,MACF,IAAII,EAAKE,EAAI,CACnBN,EAAM,MACA,CACNA,GAAO,OAEF,IAAIC,EAAME,EAAK,CACrBH,EAAM,MACA,CACNA,GAAO,EAGR,GAAIA,EAAM,EAAG,CACZlgE,EAAI2/D,CACJA,GAAOA,EAAKtK,SACN,CACNr1D,EAAI4/D,CACJA,GAAQA,EAAMvK,KAGf,IAAKrd,EAAQ,CACZA,EAASh4C,CACT+/D,GAAO//D,MACD,CACN+/D,EAAK1K,KAAOr1D,CACZ+/D,GAAO//D,GAIT,GAAI2/D,EACHI,EAAK1K,KAAOsK,MAAW,IAAIC,EAC3BG,EAAK1K,KAAOuK,CAEb,OAAO5nB,GAET,OAAAynB,KAEAp/D,GAA6BJ,QAApBw/D,OxG0hjBHgB,8CAA8C,SAASthE,EAAQkB,EAAOJ,GAI5E,GyGzrjBMygE,GAAkB,WAAxB,QAAMA,MAEEA,EAAAz/D,UAAAy+D,uBAAP,SAA8BC,GAE7B,MAAOA,GAGDe,GAAAz/D,UAAAg/D,sBAAP,SAA6BN,GAE5B,MAAOA,GAET,OAAAe,KAE4BrgE,GAAAJ,QAAnBygE,OzGyrjBHC,yCAAyC,SAASxhE,EAAQkB,EAAOJ,GAKvE,G0G7sjBM2gE,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,SAAkB,UASlBD,GAAA/8B,OAAgB,QAC/B,OAAA+8B,KAEAvgE,GAAuBJ,QAAd2gE,O1G+sjBHE,gCAAgC,SAAS3hE,EAAQkB,EAAOJ,GAC9D,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2G/ujBtB,IAAOG,GAAS/B,EAAe,oCAG/B,IAAO4hE,GAAS5hE,EAAe,8C3GyvjB/B,I2G9ujBM6hE,GAAI,SAAA5/D,GAASX,EAAbugE,EAAI5/D,EAgBT,SAhBK4/D,KAkBJ5/D,EAAAlB,KAAAQ,KAdOA,MAAAugE,aAAgC,GAAIz0D,OAoB5CnL,OAAAC,eAAW0/D,EAAA//D,UAAA,a3GyujBJM,I2GzujBP,WAEC,MAAOy/D,GAAKp/D,W3G0ujBNH,WAAY,KACZC,aAAc,M2GtujBds/D,GAAA//D,UAAAU,QAAP,YAOOq/D,GAAA//D,UAAAigE,eAAP,SAAsBC,GAErB,GAAI/yD,GAAa1N,KAAKugE,aAAa9gE,MAEnC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,IAAOxO,EAAG,CACpC,GAAGc,KAAKugE,aAAarhE,GAAGsS,MAAMivD,EAC7B,MAAOzgE,MAAKugE,aAAarhE,GAE3B,GAAIwhE,GAAuB,GAAIL,EAC/BK,GAAWlvD,KAAKivD,CAChBzgE,MAAKugE,aAAa/mD,KAAKknD,EACvB,OAAOA,GA/CMJ,GAAAp/D,UAAmB,cAkDlC,OAAAo/D,IApDmB9/D,EAsDnBb,GAAcJ,QAAL+gE,I3GyujBNn/D,oCAAoCC,UAAUu/D,8CAA8C,gDAAgDC,uCAAuC,SAASniE,EAAQkB,EAAOJ,GAI9M,G4G9yjBMshE,GAAW,WAAjB,QAAMA,MASSA,EAAApiC,KAAc,MAUdoiC,GAAAC,MAAe,OAUfD,GAAAE,SAAkB,UACjC,OAAAF,KAEAlhE,GAAqBJ,QAAZshE,O5G+yjBHG,8CAA8C,SAASviE,EAAQkB,EAAOJ,GA2B5E,G6G70jBM0hE,GAAkB,WAuBvB,QAvBKA,GAuBOluB,GAPL/yC,KAAAizC,iBAA+B,GAAInnC,MAInC9L,MAAAkzC,cAA4B,GAAIpnC,MAKtC9L,MAAKmzC,WAAW,CAChBnzC,MAAK+yC,QAAUA,CACf,IAAI/yC,KAAK+yC,SAAW,KAAM,CACzB,GAAIS,GAA0BxzC,KAAK+yC,QAAQ3vC,UAAUvC,IAAIb,KAAK+yC,QAAQU,YACtE,KAAK,GAAIzuC,GAAW,EAAGA,EAAIwuC,EAAW/zC,OAAO,EAAGuF,IAAK,CACpD,GAAGwuC,EAAWxuC,EAAE,GAAGhF,KAAKmzC,WACvBnzC,KAAKmzC,WAAWK,EAAWxuC,EAAE,KAKlC,MAAAi8D,KAE4BthE,GAAAJ,QAAnB0hE,O7G+zjBHN,+CAA+C,SAASliE,EAAQkB,EAAOJ,GAC7E,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Gz4jBtB,IAAOG,GAAS/B,EAAe,oCAM/B,IAAOwiE,GAAkBxiE,EAAa,6C9Gg5jBtC,I8Gr4jBMyiE,GAAmB,SAAAxgE,GAASX,EAA5BmhE,EAAmBxgE,EAiBxB,SAjBKwgE,KAmBJxgE,EAAAlB,KAAAQ,KACAA,MAAKmhE,YAAc,GAAIr1D,MACvB9L,MAAKohE,gBAAkB,GAAIzgE,QAMrBugE,EAAA3gE,UAAAU,QAAP,YAKOigE,GAAA3gE,UAAA8gE,eAAP,WAEC,MAAOrhE,MAAKmhE,YAEND,GAAA3gE,UAAA0xC,iBAAP,WAEC,MAAOjyC,MAAKshE,cAENJ,GAAA3gE,UAAAghE,qBAAP,SAA4B5+D,GAE3B3C,KAAKwhE,kBAAkB7+D,EAEjBu+D,GAAA3gE,UAAA8yC,qBAAP,WAEC,MAAOrzC,MAAKwhE,kBAENN,GAAA3gE,UAAAkhE,iBAAP,SAAwBC,GAEvB1hE,KAAKshE,cAAcI,EAKbR,GAAA3gE,UAAAqyC,oBAAP,SAA2B+uB,GAE1B,MAAO3hE,MAAKohE,gBAAgBO,GAKtBT,GAAA3gE,UAAAqhE,oBAAP,SAA2BD,EAAaE,GAEvC,GAAIC,GAA0C,GAAIb,GAAqCY,EACvFA,GAAOrwD,KAAKmwD,CACZ3hE,MAAKmhE,YAAY3nD,KAAKsoD,EACtB9hE,MAAKohE,gBAAgBO,GAAMG,EAG7B,OAAAZ,IAtEkC1gE,EAwElCb,GAA6BJ,QAApB2hE,I9Go3jBN//D,oCAAoCC,UAAU4/D,6CAA6C,+CAA+Ce,6CAA6C,SAAStjE,EAAQkB,EAAOJ,GAKlN,G+G/8jBMyiE,GAAiB,WAAvB,QAAMA,MAOSA,EAAAC,OAAgB,QAOhBD,GAAAE,KAAc,MAKdF,GAAAvjC,KAAc,MAOdujC,GAAAG,MAAe,OAC9B,OAAAH,KAEAriE,GAA2BJ,QAAlByiE,O/G+8jBHI,yCAAyC,SAAS3jE,EAAQkB,EAAOJ,GAOvE,GgHj/jBM8iE,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,QAAiB,SAKjBD,GAAAE,MAAe,OAC9B,OAAAF,KAEA1iE,GAAuBJ,QAAd8iE,OhHm/jBHG,2CAA2C,SAAS/jE,EAAQkB,EAAOJ,GAKzE,GiHvgkBMkjE,GAAe,WAArB,QAAMA,KAMEziE,KAAAiiE,OAAgB,QAMhBjiE,MAAA0iE,QAAiB,SAMjB1iE,MAAAkiE,KAAc,MAMdliE,MAAAmiE,MAAe,QACvB,MAAAM,KAEyB9iE,GAAAJ,QAAhBkjE,OjHugkBHE,sCAAsC,SAASlkE,EAAQkB,EAAOJ,GACpE,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkH3ikBtB,IAAOG,GAAS/B,EAAe,oClHwkkB/B,IkHzikBMmkE,GAAU,SAAAliE,GAASX,EAAnB6iE,EAAUliE,EA4Of,SA5OKkiE,GA4OOC,EAAiC9wB,EAAkBrS,EAAiCojC,EAAsBC,EAAwBC,EAA2BC,EAAiBC,EAAyB3vB,EAAuB4vB,EAAuBC,EAAwBC,EAAmBC,GAAhS,GAAAT,QAAA,GAA+B,CAA/BA,EAAA,kBAAiC,GAAA9wB,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAArS,QAAA,GAA+B,CAA/BA,EAAA,EAAiC,GAAAojC,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAe,CAAfA,EAAA,GAAiB,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAA3vB,QAAA,GAAqB,CAArBA,EAAA,OAAuB,GAAA4vB,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAE3S5iE,EAAAlB,KAAAQ,KAjFMA,MAAAujE,SAAiC,GAAIz3D,MAkF3C9L,MAAKwjE,UAAYX,CACjB7iE,MAAK+xC,KAAOA,CACZ/xC,MAAK8iE,KAAOA,CACZ9iE,MAAK+iE,OAASA,CACd/iE,MAAKgjE,UAAYA,CACjBhjE,MAAKijE,IAAMA,CACXjjE,MAAKkjE,YAAcA,CACnBljE,MAAKuzC,MAAQA,CACbvzC,MAAKmjE,WAAaA,CAClBnjE,MAAKojE,YAAcA,CACnBpjE,MAAKqjE,OAASA,CACdrjE,MAAKsjE,QAAUA,EAMhB3iE,OAAAC,eAAWgiE,EAAAriE,UAAA,alHy3jBJM,IkHz3jBP,WAEC,MAAO+hE,GAAW1hE,WlH03jBZH,WAAY,KACZC,aAAc,MkH3nkBP4hE,GAAA1hE,UAAmB,oBAkQlC,OAAA0hE,IApQyBpiE,EAsQLb,GAAAJ,QAAXqjE,IlH83jBNzhE,oCAAoCC,YAAYqiE,+CAA+C,SAAShlE,EAAQkB,EAAOJ,GAM1H,GmHpqkBMmkE,GAAmB,WAAzB,QAAMA,MASSA,EAAAvgC,OAAgB,QAOhBugC,GAAAC,UAAmB,WAClC,OAAAD,KAE6B/jE,GAAAJ,QAApBmkE,OnHsqkBHE,2CAA2C,SAASnlE,EAAQkB,EAAOJ,GAOzE,GoH/rkBMskE,GAAe,WA4DpB,QA5DKA,GA4DO7gE,EAAgBuN,EAAoBnC,EAAqB01D,EAAqBC,EAAsBT,GAApG,GAAAtgE,QAAA,GAAc,CAAdA,EAAAw+B,IAAgB,GAAAjxB,QAAA,GAAkB,CAAlBA,EAAAixB,IAAoB,GAAApzB,QAAA,GAAmB,CAAnBA,EAAAozB,IAAqB,GAAAsiC,QAAA,GAAmB,CAAnBA,EAAAtiC,IAAqB,GAAAuiC,QAAA,GAAoB,CAApBA,EAAAviC,IAAsB,GAAA8hC,QAAA,GAAoB,CAApBA,EAAA9hC,KAIjH,MAAAqiC,KAEAlkE,GAAyBJ,QAAhBskE,OpH4pkBHloB,+CAA+C,SAASl9C,EAAQkB,EAAOJ,GAC7E,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqHzukBrB,IAAO2jE,GAASvlE,EAAc,iCAC/B,IAAO8hD,GAAO9hD,EAAe,+BAE7B,IAAOW,GAAKX,EAAe,+BAC3B,IAAOwlE,GAAUxlE,EAAc,mCAE/B,IAAOgiD,GAAWhiD,EAAc,0CAEhC,IAAMy7C,GAAe,SAAAx5C,GAASX,EAAxBm6C,EAAex5C,EAyCpB,SAzCKw5C,GAyCOgqB,GAEXxjE,EAAAlB,KAAAQ,KAEA,IAAIkkE,YAAkB3jB,GACrBvgD,KAAK4iD,UAAY,GAAIohB,GAAUE,OAE/BlkE,MAAK4iD,UAAYshB,EAtCnBvjE,OAAAC,eAAWs5C,EAAA35C,UAAA,arH4ukBJM,IqH5ukBP,WAEC,MAAOq5C,GAAgBh5C,WrH6ukBjBH,WAAY,KACZC,aAAc,MqHvukBrBL,QAAAC,eAAWs5C,EAAA35C,UAAA,arH8ukBJM,IqH9ukBP,WAEC,MAAOb,MAAKmkE,YrH+ukBNzhE,IqH5ukBP,SAAqBC,GAEpB,GAAI3C,KAAKmkE,YAAcxhE,EACtB,MAED,KAAKshE,EAAWG,eAAezhE,EAAMykD,SACpC,KAAM,IAAIhoD,GAAM,oFAEjBY,MAAKmkE,WAAaxhE,CAElB3C,MAAKqkE,SAASrkE,KAAKmkE,WAAWthB,KAAKtyC,MAAOvQ,KAAKmkE,WAAWthB,KAAKz0C,OAE/DpO,MAAKskE,qBrHyukBCvjE,WAAY,KACZC,aAAc,MqH5wkBPk5C,GAAAh5C,UAAmB,2BAiDlC,OAAAg5C,IAnD8BuG,EAqD9B9gD,GAAyBJ,QAAhB26C,IrHgukBN6G,+BAA+B3/C,UAAUmjE,iCAAiCnjE,UAAUouB,+BAA+BpuB,UAAUojE,mCAAmCpjE,UAAU6/C,0CAA0C,4CAA4CrF,iDAAiD,SAASn9C,EAAQkB,EAAOJ,GAC5U,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsHlykBtB,IAAOokE,GAAWhmE,EAAc,mCAChC,IAAO0qD,GAAS1qD,EAAc,iCAE9B,IAAOgiD,GAAWhiD,EAAc,0CAGhC,IAAM07C,GAAiB,SAAAz5C,GAASX,EAA1Bo6C,EAAiBz5C,EAoCtB,SApCKy5C,GAoCO+pB,GAEXxjE,EAAAlB,KAAAQ,KAEA,IAAIkkE,YAAkB/a,GACrBnpD,KAAK+pD,YAAc,GAAI0a,GAAYP,OAEnClkE,MAAK+pD,YAAcma,EAjCrBvjE,OAAAC,eAAWu5C,EAAA55C,UAAA,atHqykBJM,IsHrykBP,WAEC,MAAOs5C,GAAkBj5C,WtHsykBnBH,WAAY,KACZC,aAAc,MsHhykBrBL,QAAAC,eAAWu5C,EAAA55C,UAAA,etHuykBJM,IsHvykBP,WAEC,MAAOb,MAAK0kE,ctHwykBNhiE,IsHrykBP,SAAuBC,GAEtB,GAAI3C,KAAK0kE,cAAgB/hE,EACxB,MAED3C,MAAK0kE,aAAe/hE,CAEpB3C,MAAKskE,qBtHoykBCvjE,WAAY,KACZC,aAAc,MsHl0kBPm5C,GAAAj5C,UAAmB,6BA2ClC,OAAAi5C,IA7CgCsG,EA+ChC9gD,GAA2BJ,QAAlB46C,ItH4xkBN8P,iCAAiC7oD,UAAUujE,mCAAmCvjE,UAAU6/C,0CAA0C,4CAA4CA,2CAA2C,SAASxiD,EAAQkB,EAAOJ,GACpP,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuHr1kBtB,IAAOG,GAAS/B,EAAc,oCvH21kB9B,IuHp1kBMgiD,GAAW,SAAA//C,GAASX,EAApB0gD,EAAW//C,EAoBhB,SApBK+/C,KAsBJ//C,EAAAlB,KAAAQ,KApBOA,MAAA4kE,WAA+B,GAAI94D,MAEpC9L,MAAA6P,OAAgB,CAChB7P,MAAAqO,QAAiB,EAExB1N,OAAAC,eAAI6/C,EAAAlgD,UAAA,SvHy1kBGM,IuHz1kBP,WAEC,MAAOb,MAAK6P,QvH01kBN9O,WAAY,KACZC,aAAc,MuHx1kBrBL,QAAAC,eAAI6/C,EAAAlgD,UAAA,UvH21kBGM,IuH31kBP,WAEC,MAAOb,MAAKqO,SvH41kBNtN,WAAY,KACZC,aAAc,MuH/0kBdy/C,GAAAlgD,UAAA+jE,kBAAP,WAEC,GAAI52D,GAAa1N,KAAK4kE,WAAWnlE,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIwO,EAAKxO,IAC/Bc,KAAK4kE,WAAW1lE,GAAG+iB,aAOdw+B,GAAAlgD,UAAAskE,eAAP,WAEC,MAAO7kE,KAAK4kE,WAAWnlE,OACtBO,KAAK4kE,WAAW,GAAG3jE,UAMdw/C,GAAAlgD,UAAAU,QAAP,WAEC,MAAOjB,KAAK4kE,WAAWnlE,OACtBO,KAAK4kE,WAAW,GAAG3jE,UAIdw/C,GAAAlgD,UAAAukE,eAAP,SAAsBC,GAErB/kE,KAAK4kE,WAAWprD,KAAKurD,EAErB,OAAOA,GAGDtkB,GAAAlgD,UAAAykE,kBAAP,SAAyBD,GAExB/kE,KAAK4kE,WAAWhrD,OAAO5Z,KAAK4kE,WAAWjrD,QAAQorD,GAAY,EAE3D,OAAOA,GAGDtkB,GAAAlgD,UAAA8jE,SAAP,SAAgB9zD,EAAcnC,GAE7BpO,KAAK6P,OAASU,CACdvQ,MAAKqO,QAAUD,EAGjB,OAAAqyC,IA3E0BjgD,EA6ELb,GAAAJ,QAAZkhD,IvHu0kBNt/C,oCAAoCC,YAAY6jE,kDAAkD,SAASxmE,EAAQkB,EAAOJ,GAC7H,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwHj6kBtB,IAAO6kE,GAAazmE,EAAc,4CxHu6kBlC,IwHl6kBM0mE,GAAkB,SAAAzkE,GAASX,EAA3BolE,EAAkBzkE,EAEvB,SAFKykE,KAIJzkE,EAAAlB,KAAAQ,MAEF,MAAAmlE,IANiCD,EAQjCvlE,GAA4BJ,QAAnB4lE,IxHm6kBNC,4CAA4C,8CAA8CA,6CAA6C,SAAS3mE,EAAQkB,EAAOJ,GyH56kBlK,GAAOs2D,GAAkBp3D,EAAa,6CzHi7kBtC,IyHz6kBMymE,GAAa,WAelB,QAfKA,KASGllE,KAAAqlE,eAAwB,CACzBrlE,MAAA6uD,cAAuB,CACvB7uD,MAAAslE,yBAAkC,CAMxCtlE,MAAKulE,qBAAuB,GAAI1P,GAMjCl1D,OAAAC,eAAWskE,EAAA3kE,UAAA,UzH65kBJM,IyH75kBP,WAEC,MAAOb,MAAKy2B,UzH85kBN/zB,IyH35kBP,SAAkBC,GAEjB3C,KAAKy2B,SAAW9zB,CAChB3C,MAAKwlE,YAAcxlE,KAAKy2B,SAASk0B,ezH45kB3B5pD,WAAY,KACZC,aAAc,MyHv5kBrBL,QAAAC,eAAWskE,EAAA3kE,UAAA,czH65kBJM,IyH75kBP,WAEC,MAAOb,MAAKylE,mBzH85kBN/iE,IyH35kBP,SAAsBC,GAErB3C,KAAKylE,kBAAoB9iE,GzH45kBnB5B,WAAY,KACZC,aAAc,MyHv5kBrBL,QAAAC,eAAWskE,EAAA3kE,UAAA,czH65kBJM,IyH75kBP,WAEC,MAAOb,MAAK0lE,czH85kBN3kE,WAAY,KACZC,aAAc,MyHz5kBrBL,QAAAC,eAAWskE,EAAA3kE,UAAA,ezH+5kBJM,IyH/5kBP,WAEC,MAAOb,MAAK6uD,ezHg6kBN9tD,WAAY,KACZC,aAAc,MyH35kBrBL,QAAAC,eAAWskE,EAAA3kE,UAAA,0BzHi6kBJM,IyHj6kBP,WAEC,MAAOb,MAAKslE,0BzHk6kBNvkE,WAAY,KACZC,aAAc,MyH75kBdkkE,GAAA3kE,UAAA2a,MAAP,WAEClb,KAAK6uD,cAAgB7uD,KAAKslE,yBAA2B,CACrDtlE,MAAKwlE,YAAcxlE,KAAKylE,kBAAmBzlE,KAAKylE,kBAAsBzlE,KAAKy2B,SAAUz2B,KAAKy2B,SAASk0B,cAAgB,IACnH3qD,MAAKqlE,eAAiBrlE,KAAKwlE,YAAaxlE,KAAKwlE,YAAY/lE,OAAS,CAClEO,MAAK0lE,aAAe,IACpB1lE,MAAKulE,qBAAqBtP,UAQpBiP,GAAA3kE,UAAAksD,UAAP,SAAiBuC,GAEhB,GAAI2W,GAAgB3lE,KAAKyY,MAAMsb,kBAAoBi7B,EAAKj7B,kBAAoBi7B,EAAK1mC,YAAYtoB,KAAKwlE,YAAaxlE,KAAKqlE,eAEpHrW,GAAKj7B,iBAAmB/zB,KAAKyY,MAAMsb,gBAEnC,OAAO4xC,GAODT,GAAA3kE,UAAAmsD,sBAAP,SAA6BttC,IAStB8lD,GAAA3kE,UAAA2sD,YAAP,SAAmB9tC,GAElBpf,KAAK6uD,eAEL,IAAIzvC,EAAOnF,mBACVja,KAAKslE,0BAEN,IAAItP,GAAsBh2D,KAAKulE,qBAAqBjV,SACpD0F,GAAK52C,OAASA,CAEd42C,GAAKrB,KAAO30D,KAAK0lE,YACjB1lE,MAAK0lE,aAAe1P,EAOdkP,GAAA3kE,UAAA8tD,gBAAP,SAAuBjvC,IAShB8lD,GAAA3kE,UAAAuwD,gBAAP,SAAuB1xC,IAShB8lD,GAAA3kE,UAAA0wD,YAAP,SAAmB7xC,IAIpB,OAAA8lD,KAEuBvlE,GAAAJ,QAAd2lE,IzHk5kBNvP,6CAA6C,+CAA+CiQ,+CAA+C,SAASnnE,EAAQkB,EAAOJ,GACtK,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0H1jlBtB,IAAO6kE,GAAazmE,EAAc,4C1HgklBlC,I0HtjlBMonE,GAAe,SAAAnlE,GAASX,EAAxB8lE,EAAenlE,EAsDpB,SAtDKmlE,KAwDJnlE,EAAAlB,KAAAQ,KAhDMA,MAAA8lE,YAAqB,CAEpB9lE,MAAA+lE,sBAA+B,CAC/B/lE,MAAAgmE,gBAAyB,CACzBhmE,MAAAimE,gBAAyB,CA8ChCjmE,MAAKkmE,SAAW,GAAIp6D,MACpB9L,MAAKmmE,mBAAqB,GAAIr6D,MAC9B9L,MAAKomE,aAAe,GAAIt6D,MACxB9L,MAAKqmE,aAAe,GAAIv6D,MAExB9L,MAAKotD,kBAAoB,KA9C1BzsD,OAAAC,eAAWilE,EAAAtlE,UAAA,qB1HujlBJM,I0HvjlBP,WAEC,MAAOb,MAAKmmE,oB1HwjlBNplE,WAAY,KACZC,aAAc,M0HnjlBrBL,QAAAC,eAAWilE,EAAAtlE,UAAA,e1HyjlBJM,I0HzjlBP,WAEC,MAAOb,MAAKqmE,c1H0jlBNtlE,WAAY,KACZC,aAAc,M0HrjlBrBL,QAAAC,eAAWilE,EAAAtlE,UAAA,U1H2jlBJM,I0H3jlBP,WAEC,MAAOb,MAAKkmE,U1H4jlBNnlE,WAAY,KACZC,aAAc,M0HvjlBrBL,QAAAC,eAAWilE,EAAAtlE,UAAA,e1H6jlBJM,I0H7jlBP,WAEC,MAAOb,MAAKomE,c1H8jlBNrlE,WAAY,KACZC,aAAc,M0HzjlBrBL,QAAAC,eAAWilE,EAAAtlE,UAAA,U1H+jlBJM,I0H/jlBP,WAEC,MAAOb,MAAKsmE,U1HgklBNvlE,WAAY,KACZC,aAAc,M0H9ilBd6kE,GAAAtlE,UAAAmsD,sBAAP,SAA6BttC,GAE5Bpf,KAAKmmE,mBAAoBnmE,KAAK+lE,yBAA+C3mD,EAOvEymD,GAAAtlE,UAAA8tD,gBAAP,SAAuBjvC,GAEtBpf,KAAKqmE,aAAcrmE,KAAKimE,mBAAmC7mD,EAOrDymD,GAAAtlE,UAAAuwD,gBAAP,SAAuB1xC,GAEtBpf,KAAKomE,aAAcpmE,KAAKgmE,mBAAmC5mD,EAOrDymD,GAAAtlE,UAAA0wD,YAAP,SAAmB7xC,GAElBpf,KAAKsmE,SAAoBlnD,EAMnBymD,GAAAtlE,UAAA2a,MAAP,WAECxa,EAAAH,UAAM2a,MAAK1b,KAAAQ,KAEXA,MAAKsmE,SAAW,IAEhB,IAAItmE,KAAK8lE,YAAc,EACtB9lE,KAAKkmE,SAASzmE,OAASO,KAAK8lE,YAAc,CAE3C,IAAI9lE,KAAK+lE,sBAAwB,EAChC/lE,KAAKmmE,mBAAmB1mE,OAASO,KAAK+lE,sBAAwB,CAE/D,IAAI/lE,KAAKgmE,gBAAkB,EAC1BhmE,KAAKomE,aAAa3mE,OAASO,KAAKgmE,gBAAkB,CAEnD,IAAIhmE,KAAKimE,gBAAkB,EAC1BjmE,KAAKqmE,aAAa5mE,OAASO,KAAKimE,gBAAkB,EAErD,OAAAJ,IA3H8BX,EA6H9BvlE,GAAyBJ,QAAhBsmE,I1HwilBNT,4CAA4C,8CAA8C1P,gDAAgD,SAASj3D,EAAQkB,EAAOJ,GACrK,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2HrrlBtB,IAAOiI,GAAQ7J,EAAgB,gCAG/B,IAAOymE,GAAazmE,EAAc,4C3H+rlBlC,I2HlrlBMy1D,GAAgB,SAAAxzD,GAASX,EAAzBm0D,EAAgBxzD,EAoCrB,SApCKwzD,KAsCJxzD,EAAAlB,KAAAQ,KApCOA,MAAAumE,aAAwB,GAAIj+D,EAC5BtI,MAAAwmE,cAAyB,GAAIl+D,EAE9BtI,MAAA+zB,iBAA0B,EAKjCpzB,OAAAC,eAAWszD,EAAA3zD,UAAA,e3HurlBJM,I2HvrlBP,WAEC,MAAOb,MAAKumE,c3HwrlBN7jE,I2HrrlBP,SAAuBC,GAEtB3C,KAAKumE,aAAe5jE,G3HsrlBd5B,WAAY,KACZC,aAAc,M2HjrlBrBL,QAAAC,eAAWszD,EAAA3zD,UAAA,gB3HurlBJM,I2HvrlBP,WAEC,MAAOb,MAAKwmE,e3HwrlBN9jE,I2HrrlBP,SAAwBC,GAEvB3C,KAAKwmE,cAAgB7jE,G3HsrlBf5B,WAAY,KACZC,aAAc,M2HvqlBdkzD,GAAA3zD,UAAAksD,UAAP,SAAiBuC,GAEhB,MAAOA,GAAK1B,kBAAkBttD,KAAKumE,aAAcvmE,KAAKwmE,eAExD,OAAAtS,IAlD+BgR,EAoD/BvlE,GAA0BJ,QAAjB20D,I3H+qlBNt4C,gCAAgCxa,UAAUgkE,4CAA4C,8CAA8CtZ,qDAAqD,SAASrtD,EAAQkB,EAAOJ,GACpN,GAAIQ,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4HvvlBtB,IAAO6kE,GAAazmE,EAAc,4C5H6vlBlC,I4HxvlBM8sD,GAAqB,SAAA7qD,GAASX,EAA9BwrD,EAAqB7qD,EAE1B,SAFK6qD,KAIJ7qD,EAAAlB,KAAAQ,MAMMurD,EAAAhrD,UAAAksD,UAAP,SAAiBuC,GAEhB,GAAI2W,GAAgB3lE,KAAKyY,MAAMsb,kBAAoBi7B,EAAKj7B,kBAAoBi7B,EAAKrC,iBAEjF,KAAKgZ,EAAO,CACX3W,EAAKj7B,iBAAmB/zB,KAAKyY,MAAMsb,gBAEnC,OAAO,OAGR,MAAOrzB,GAAAH,UAAMksD,UAASjtD,KAAAQ,KAACgvD,GAEzB,OAAAzD,IAtBoC2Z,EAwBLvlE,GAAAJ,QAAtBgsD,I5HovlBN6Z,4CAA4C,8CAA8CqB,iCAAiC,SAAShoE,EAAQkB,EAAOJ,G6HlxlBtJ,GAAOghD,GAAO9hD,EAAe,+BAC7B,IAAOulE,GAASvlE,EAAc,iCAC9B,IAAOioE,GAASjoE,EAAc,kCAE9B,IAAO+3C,GAAS/3C,EAAc,sCAC9B,IAAOy7C,GAAez7C,EAAa,8C7HsxlBnC,I6HjxlBMkoE,GAAI,WAAV,QAAMA,MAQSA,EAAAC,OAAd,SAAqB90C,GAEpB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,UAAU,IAAU,SACnB,MAAOA,EAER,OAAgBA,GAGH60C,GAAAE,UAAd,SAAwB/0C,GAEvB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,IAAIA,YAAgB40C,GACnB,MAAO50C,EAER,OAAmBA,GAcL60C,GAAAG,MAAf,SAAqBC,GAEpB,GAAItnE,GAAwBsnE,EAAItnE,MAChC,KAAK,GAAIP,GAAmB,EAAGA,EAAIO,IAAUP,EAAG,CAC/C,GAAIc,KAAKgnE,UAAUrtD,QAAQotD,EAAIE,OAAO/nE,MAAQ,EAC7C,MAAO,OAGT,MAAO,MAGMynE,GAAAO,SAAd,SAAuBp1C,GAEtB,SAAU,IAAU,SACnB,MAAOra,MAAK2I,MAAe0R,EAE5B,UAAU,IAAU,SAAU,CAC7B,GAAIA,GAAQ,SACX,MAAOra,MAAK2I,MAAM3I,KAAK0vD,SAAS,SAEjC,IAAInnE,KAAKonE,aAAe,KAAM,CAC7BpnE,KAAKonE,YAAc,GAAIzmE,OACvBX,MAAKonE,YAAY,aAAe,OAChCpnE,MAAKonE,YAAY,aAAe,MAChCpnE,MAAKonE,YAAY,kBAAoB,OACrCpnE,MAAKonE,YAAY,kBAAoB,QACrCpnE,MAAKonE,YAAY,mBAAqB,OACtCpnE,MAAKonE,YAAY,aAAe,OAChCpnE,MAAKonE,YAAY,iBAAmB,OACpCpnE,MAAKonE,YAAY,gBAAkB,OACnCpnE,MAAKonE,YAAY,QAAU,GAC3BpnE,MAAKonE,YAAY,YAAc,GAC/BpnE,MAAKonE,YAAY,cAAgB,GACjCpnE,MAAKonE,YAAY,QAAU,GAC3BpnE,MAAKonE,YAAY,cAAgB,OACjCpnE,MAAKonE,YAAY,eAAiB,KAClCpnE,MAAKonE,YAAY,gBAAkB,OACnCpnE,MAAKonE,YAAY,WAAa,OAC9BpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,cAAgB,QACjCpnE,MAAKonE,YAAY,SAAW,QAC5BpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,iBAAmB,QACpCpnE,MAAKonE,YAAY,mBAAqB,OACtCpnE,MAAKonE,YAAY,iBAAmB,OACpCpnE,MAAKonE,YAAY,YAAc,KAC/BpnE,MAAKonE,YAAY,QAAU,KAC3BpnE,MAAKonE,YAAY,aAAe,OAChCpnE,MAAKonE,YAAY,iBAAmB,KACpCpnE,MAAKonE,YAAY,QAAU,KAC3BpnE,MAAKonE,YAAY,QAAU,KAC3BpnE,MAAKonE,YAAY,aAAe,OAChCpnE,MAAKonE,YAAY,cAAgB,OACjCpnE,MAAKonE,YAAY,oBAAsB,OACvCpnE,MAAKonE,YAAY,gBAAkB,OACnCpnE,MAAKonE,YAAY,kBAAoB,OACrCpnE,MAAKonE,YAAY,YAAc,OAC/BpnE,MAAKonE,YAAY,aAAe,KAChCpnE,MAAKonE,YAAY,SAAW,KAC5BpnE,MAAKonE,YAAY,eAAiB,OAClCpnE,MAAKonE,YAAY,aAAe,OAChCpnE,MAAKonE,YAAY,QAAU,KAC3BpnE,MAAKonE,YAAY,cAAgB,OACjCpnE,MAAKonE,YAAY,aAAe,OAChCpnE,MAAKonE,YAAY,eAAiB,QAClCpnE,MAAKonE,YAAY,eAAiB,QAClCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,cAAgB,OACjCpnE,MAAKonE,YAAY,eAAiB,KAClCpnE,MAAKonE,YAAY,qBAAuB,KACxCpnE,MAAKonE,YAAY,kBAAoB,OACrCpnE,MAAKonE,YAAY,aAAe,OAChCpnE,MAAKonE,YAAY,SAAW,OAC5BpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,iBAAmB,QACpCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,QAAU,QAC3BpnE,MAAKonE,YAAY,UAAY,QAC7BpnE,MAAKonE,YAAY,SAAW,QAC5BpnE,MAAKonE,YAAY,iBAAmB,QACpCpnE,MAAKonE,YAAY,kBAAoB,QACrCpnE,MAAKonE,YAAY,YAAc,QAC/BpnE,MAAKonE,YAAY,SAAW,QAC5BpnE,MAAKonE,YAAY,eAAiB,QAClCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,OAAS,QAC1BpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,UAAY,QAC7BpnE,MAAKonE,YAAY,eAAiB,OAClCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,QAAU,QAC3BpnE,MAAKonE,YAAY,cAAgB,QACjCpnE,MAAKonE,YAAY,WAAa,OAC9BpnE,MAAKonE,YAAY,UAAY,OAC7BpnE,MAAKonE,YAAY,SAAW,QAC5BpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,cAAgB,QACjCpnE,MAAKonE,YAAY,UAAY,QAC7BpnE,MAAKonE,YAAY,cAAgB,QACjCpnE,MAAKonE,YAAY,eAAiB,QAClCpnE,MAAKonE,YAAY,SAAW,QAC5BpnE,MAAKonE,YAAY,UAAY,QAC7BpnE,MAAKonE,YAAY,cAAgB,QACjCpnE,MAAKonE,YAAY,UAAY,QAC7BpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,WAAa,QAC9BpnE,MAAKonE,YAAY,OAAS,QAC1BpnE,MAAKonE,YAAY,YAAc,QAC/BpnE,MAAKonE,YAAY,WAAa,QAC9BpnE,MAAKonE,YAAY,WAAa,QAC9BpnE,MAAKonE,YAAY,WAAa,QAC9BpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,QAAU,QAC3BpnE,MAAKonE,YAAY,iBAAmB,QACpCpnE,MAAKonE,YAAY,mBAAqB,QACtCpnE,MAAKonE,YAAY,UAAY,OAC7BpnE,MAAKonE,YAAY,eAAiB,OAClCpnE,MAAKonE,YAAY,gBAAkB,OACnCpnE,MAAKonE,YAAY,cAAgB,OACjCpnE,MAAKonE,YAAY,UAAY,OAC7BpnE,MAAKonE,YAAY,cAAgB,OACjCpnE,MAAKonE,YAAY,cAAgB,QACjCpnE,MAAKonE,YAAY,gBAAkB,QACnCpnE,MAAKonE,YAAY,UAAY,QAC7BpnE,MAAKonE,YAAY,UAAY,QAC7BpnE,MAAKonE,YAAY,QAAU,QAC3BpnE,MAAKonE,YAAY,WAAa,QAC9BpnE,MAAKonE,YAAY,YAAc,QAC/BpnE,MAAKonE,YAAY,cAAgB,QACjCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,YAAc,QAC/BpnE,MAAKonE,YAAY,wBAA0B,QAC3CpnE,MAAKonE,YAAY,gBAAkB,QACnCpnE,MAAKonE,YAAY,YAAc,QAC/BpnE,MAAKonE,YAAY,eAAiB,QAClCpnE,MAAKonE,YAAY,SAAW,QAC5BpnE,MAAKonE,YAAY,eAAiB,QAClCpnE,MAAKonE,YAAY,SAAW,QAC5BpnE,MAAKonE,YAAY,WAAa,QAC9BpnE,MAAKonE,YAAY,gBAAkB,QACnCpnE,MAAKonE,YAAY,UAAY,QAC7BpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,cAAgB,QACjCpnE,MAAKonE,YAAY,SAAW,QAC5BpnE,MAAKonE,YAAY,YAAc,QAC/BpnE,MAAKonE,YAAY,iBAAmB,QACpCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,QAAU,QAC3BpnE,MAAKonE,YAAY,SAAW,QAC5BpnE,MAAKonE,YAAY,cAAgB,QACjCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,aAAe,QAChCpnE,MAAKonE,YAAY,UAAY,QAC7BpnE,MAAKonE,YAAY,YAAc,QAC/BpnE,MAAKonE,YAAY,QAAU,OAC3BpnE,MAAKonE,YAAY,kBAAoB,OACrCpnE,MAAKonE,YAAY,aAAe,OAChCpnE,MAAKonE,YAAY,WAAa,OAC9BpnE,MAAKonE,YAAY,iBAAmB,OACpCpnE,MAAKonE,YAAY,SAAW,CAC5BpnE,MAAKonE,YAAY,eAAiB,WAGnC,GAAIpnE,KAAKonE,YAAYt1C,IAAS,KAC7B,MAAO9xB,MAAKonE,YAAYt1C,EAEzB,IAAeA,EAAMryB,QAAU,GAAMO,KAAK8mE,MAAMh1C,GAC/C,MAAOu1C,UAAS,KAAOv1C,GAGzB,MAAO,MAGM60C,GAAAjnC,MAAd,SAAoB5N,GAEnB,GAAIwlB,GAAyBt3C,KAAKknE,SAASp1C,EAE3C,IAAIwlB,GAAU,KACb,KAAM,IAAId,GAAU,wBAA0B1kB,EAE/C,OAAOwlB,GAGMqvB,GAAAW,SAAd,SAAuB91D,GAEtB,GAAIxR,KAAKunE,YAAY/1D,GACpB,MAAOA,EAER,IAAI8lC,GAAat3C,KAAKwnE,SAASh2D,EAE/B,IAAI8lC,GAAU,KACb,MAAOA,EAER,KACCA,EAASmwB,OAAOj2D,EAChBxR,MAAKwnE,SAASh2D,GAAQ8lC,CACtB,OAAOA,GACN,MAAO54C,IAGTsB,KAAKunE,YAAY/1D,GAAQ,IAEzB,OAAOA,GAGMm1D,GAAAvf,QAAd,SAAsBt1B,GAErB,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAO9xB,KAAKsnE,SAASx1C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOpzB,GACRozB,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgByuB,GACnB,MAAOzuB,EAER,IAAIA,YAAgBooB,GACnBpoB,EAA0BA,EAAM8wB,SAEjC,IAAI9wB,YAAgBkyC,GACnB,MAAoBlyC,GAAMs1B,OAE3B,MAAM,IAAI5Q,GAAU,gCAAkC1kB,GAGzC60C,GAAAe,cAAd,SAA4B51C,GAE3B,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAO9xB,KAAKsnE,SAASx1C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOpzB,GACRozB,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgBooB,GACnB,MAAOpoB,EAER,KACC,GAAI61C,GAAchB,EAAKvf,QAAQt1B,EAC/B,OAAO,IAAIooB,GAAgBytB,GAC1B,MAAOjpE,IAGT,KAAM,IAAI83C,GAAU,kCAAoC1kB,GA1S1C60C,GAAAK,UAAmB,wBAEnBL,GAAAY,YAAqB,GAAI5mE,OACzBgmE,GAAAa,SAAkB,GAAI7mE,OAyStC,OAAAgmE,KAEchnE,GAAAJ,QAALonE,I7HyulBN5lB,+BAA+B3/C,UAAUmjE,iCAAiCnjE,UAAUwmE,kCAAkCxmE,UAAUm1C,sCAAsC,sCAAsCoF,8CAA8C,gDAAgDv0C,6CAA6C,SAAS3I,EAAQkB,EAAOJ,G8HpimBlX,GAAO69D,GAAgB3+D,EAAa,8CAIpC,IAAOkD,GAAgBlD,EAAa,8CACpC,IAAOiD,GAAgBjD,EAAa,8CACpC,IAAOopE,GAAgBppE,EAAa,8CACpC,IAAOghB,GAAehhB,EAAa,6CAEnC,IAAO6J,GAAQ7J,EAAe,gCAE9B,IAAMoD,GAAgB,WAAtB,QAAMA,MAQSA,EAAAylB,oBAAd,SAAkCwgD,EAAkCC,EAAqCC,EAAyBvlE,EAAc6C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/I,GAAIW,GAAsB6hE,EAAgBjnE,IAAI4B,EAAO6C,EACrD,IAAIlC,GAAyB2kE,EAAmBlnE,IAAIknE,EAAmBtlE,MAEvE,IAAIulE,GAAU,KACbA,EAAS,GAAIH,GAAiBplE,EAAQ6C,OAClC,IAAI0iE,EAAOvlE,MAAQA,EAAQ6C,EAC/B0iE,EAAOvlE,MAAQA,EAAQ6C,CAExB,IAAI2iE,GAAkBH,EAAgBzkE,UACtC,IAAI6kE,GAAqBH,EAAmB1kE,UAE5C,IAAI8kE,GAA2BH,EAAOnnE,IAAI4B,EAAO6C,EAGjD7C,IAASwlE,CAET,IAAI/oE,GAAW,CACf,IAAI8gB,GAAW,CACf,IAAItG,EAEJ,IAAI0uD,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAInlE,GAAWC,EAAWgmB,CAC1B,IAAI/pB,EAEJ,OAAOf,EAAIuD,EAAO,CACjBiX,EAAQzT,EAAQ/G,KAAKgpE,CACrBE,GAAKhlE,EAAUsW,EACf6uD,GAAKnlE,EAAUsW,EAAQ,EACvBgvD,GAAKtlE,EAAUsW,EAAQ,EACvBA,GAAQzT,EAAQ/G,KAAKgpE,CACrBG,GAAKjlE,EAAUsW,EACf8uD,GAAKplE,EAAUsW,EAAQ,EACvBivD,GAAKvlE,EAAUsW,EAAQ,EACvBA,GAAQzT,EAAQ/G,KAAKgpE,CACrBI,GAAKllE,EAAUsW,EACf+uD,GAAKrlE,EAAUsW,EAAQ,EACvBkvD,GAAKxlE,EAAUsW,EAAQ,EACvBmvD,GAAMP,EAAKF,CACXU,GAAML,EAAKF,CACXQ,GAAMH,EAAKF,CACXM,GAAMX,EAAKD,CACXa,GAAMT,EAAKD,CACXW,GAAMP,EAAKD,CACX3kE,GAAKglE,EAAIE,EAAMH,EAAII,CACnBllE,GAAK6kE,EAAIK,EAAMH,EAAIC,CACnBh/C,GAAK8+C,EAAIE,EAAMH,EAAII,CACnBhpE,GAAIwX,KAAKC,KAAK3T,EAAGA,EAAKC,EAAGA,EAAKgmB,EAAGA,EAGjCm+C,GAAYnoD,KAAOjc,CACnBokE,GAAYnoD,KAAOhc,CACnBmkE,GAAYnoD,KAAOgK,CACnBm+C,GAAYnoD,KAAO/f,EAGpB+nE,EAAOtlE,IAAIylE,EAAa7iE,EAExB,OAAO0iE,GAGMnmE,GAAAwkB,gBAAd,SAA8ByhD,EAAkCqB,EAAuCnB,EAAyBjmE,GAE/H,GAAIkE,GAAsB6hE,EAAgBjnE,IAAIinE,EAAgBrlE,MAC9D,IAAI0lE,GAA2BgB,EAAqBtoE,IAAIsoE,EAAqB1mE,MAE7E,IAAIulE,GAAU,KACbA,EAAS,GAAItmE,GAAiBK,EAE/B,IAAIkmE,GAAkBH,EAAgBzkE,UACtC,IAAI+lE,GAAmBpB,EAAO3kE,UAE9B,IAAI0jB,GAAuBihD,EAAOnnE,IAAImnE,EAAOvlE,MAE7C,IAAIvD,GAAW,CACf,IAAIwO,GAAas6D,EAAOvlE,MAAM2mE,CAG9B,OAAOlqE,EAAIwO,EAAK,CACfqZ,EAAQ7nB,KAAO,CACf6nB,GAAQ7nB,KAAO,CACf6nB,GAAQ7nB,KAAO,EAGhBA,EAAI,CACJwO,GAAMo6D,EAAgBrlE,MAAMwlE,CAC5B,IAAIvuD,EACJ,IAAI2vD,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAGhB,OAAOrqE,EAAIwO,EAAK,CACfgM,EAAQzT,EAAQ/G,KAAKkqE,CACrBriD,GAAQrN,IAAUyuD,EAAYkB,EAC9BtiD,GAAQrN,EAAQ,IAAMyuD,EAAYmB,EAClCviD,GAAQrN,EAAQ,IAAMyuD,EAAYoB,EAClC7vD,GAAQzT,EAAQ/G,KAAKkqE,CACrBriD,GAAQrN,IAAUyuD,EAAYkB,EAC9BtiD,GAAQrN,EAAQ,IAAMyuD,EAAYmB,EAClCviD,GAAQrN,EAAQ,IAAMyuD,EAAYoB,EAClC7vD,GAAQzT,EAAQ/G,KAAKkqE,CACrBriD,GAAQrN,IAAUyuD,EAAYkB,EAC9BtiD,GAAQrN,EAAQ,IAAMyuD,EAAYmB,EAClCviD,GAAQrN,EAAQ,IAAMyuD,EAAYoB,EAClCF,IAAM,CACNC,IAAM,CACNC,IAAM,EAGPrqE,EAAI,CACJwO,GAAMs6D,EAAOvlE,MAAM2mE,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIzpE,EAGJ,OAAOf,EAAIwO,EAAK,CACf87D,EAAKziD,EAAQ7nB,EACbuqE,GAAK1iD,EAAQ7nB,EAAI,EACjBwqE,GAAK3iD,EAAQ7nB,EAAI,EACjBe,GAAI,EAAIwX,KAAKC,KAAK8xD,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErC3iD,GAAQ7nB,KAAOsqE,EAAGvpE,CAClB8mB,GAAQ7nB,KAAOuqE,EAAGxpE,CAClB8mB,GAAQ7nB,KAAOwqE,EAAGzpE,EAGnB+nE,EAAOtlE,IAAIqkB,EAEX,OAAOihD,GAGMnmE,GAAAwlB,qBAAd,SAAmCygD,EAAkCC,EAAqC4B,EAA+B3B,EAAyBvlE,EAAc6C,EAAmBskE,GAAnB,GAAAtkE,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAskE,QAAA,GAA8B,CAA9BA,EAAA,MAElM,GAAI3jE,GAAsB6hE,EAAgBjnE,IAAI4B,EAAO6C,EACrD,IAAIlC,GAAyB2kE,EAAmBlnE,IAAIknE,EAAmBtlE,MACvE,IAAI0D,GAAmBwjE,EAAa9oE,IAAI8oE,EAAalnE,MAErD,IAAIulE,GAAU,KACbA,EAAS,GAAItmE,GAAiBe,EAAQ6C,OAClC,IAAI0iE,EAAOvlE,MAAQA,EAAQ6C,EAC/B0iE,EAAOvlE,MAAQA,EAAQ6C,CAExB,IAAI4iE,GAAqBH,EAAmB1kE,UAC5C,IAAI+vD,GAAeuW,EAAatmE,UAChC,IAAI4kE,GAAkBH,EAAgBzkE,UAEtC,IAAIwmE,GAA4B7B,EAAOnnE,IAAI4B,EAAO6C,EAElD,IAAIpG,GAAW,CACf,IAAIovB,EACJ,IAAIC,EACJ,IAAIu7C,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,CAC1B,IAAIzB,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAInlE,GAAWC,EAAWgmB,CAG1BvnB,IAASwlE,CAET,OAAO/oE,EAAIuD,EAAO,CACjB6rB,EAASroB,EAAQ/G,EACjBqvB,GAAStoB,EAAQ/G,EAAI,EACrB4qE,GAAS7jE,EAAQ/G,EAAI,EAErB8qE,GAAK7jE,EAAImoB,EAAO8kC,EAAQ,EACxB6W,GAAM9jE,EAAIooB,EAAO6kC,EAAQ,GAAK4W,CAC9BE,GAAM/jE,EAAI2jE,EAAO1W,EAAQ,GAAK4W,CAE9BD,GAAKz7C,EAAO45C,CACZkC,GAAKhnE,EAAU2mE,EACfM,GAAKjnE,EAAU2mE,EAAK,EACpBO,GAAKlnE,EAAU2mE,EAAK,EACpBA,GAAKx7C,EAAO25C,CACZW,GAAMzlE,EAAU2mE,GAAMK,CACtBtB,GAAM1lE,EAAU2mE,EAAK,GAAKM,CAC1BtB,GAAM3lE,EAAU2mE,EAAK,GAAKO,CAC1BP,GAAKD,EAAO5B,CACZc,GAAM5lE,EAAU2mE,GAAMK,CACtBnB,GAAM7lE,EAAU2mE,EAAK,GAAKM,CAC1BnB,GAAM9lE,EAAU2mE,EAAK,GAAKO,CAE1BvmE,GAAKmmE,EAAIrB,EAAMoB,EAAIjB,CACnBhlE,GAAKkmE,EAAIpB,EAAMmB,EAAIhB,CACnBj/C,GAAKkgD,EAAInB,EAAMkB,EAAIf,CACnBiB,GAAQ,EAAE1yD,KAAKC,KAAK3T,EAAGA,EAAKC,EAAGA,EAAKgmB,EAAGA,EAEvC6/C,GAAa3qE,KAAOirE,EAAMpmE,CAC1B8lE,GAAa3qE,KAAOirE,EAAMnmE,CAC1B6lE,GAAa3qE,KAAOirE,EAAMngD,EAG3Bg+C,EAAOtlE,IAAImnE,EAAcvkE,EAEzB,OAAO0iE,GAGMnmE,GAAAykB,iBAAd,SAA+BwhD,EAAkCyC,EAAwCpB,EAAuCnB,EAAyBjmE,GAExK,GAAIkE,GAAsB6hE,EAAgBjnE,IAAIinE,EAAgBrlE,MAC9D,IAAIonE,GAA4BU,EAAsB1pE,IAAI0pE,EAAsB9nE,MAChF,IAAI0lE,GAA2BgB,EAAqBtoE,IAAIsoE,EAAqB1mE,MAE7E,IAAIulE,GAAU,KACbA,EAAS,GAAItmE,GAAiBK,EAE/B,IAAIkmE,GAAkBH,EAAgBzkE,UACtC,IAAI+lE,GAAmBpB,EAAO3kE,UAE9B,IAAI2jB,GAAwBghD,EAAOnnE,IAAImnE,EAAOvlE,MAE9C,IAAIvD,GAAW,CACf,IAAIwO,GAAas6D,EAAOvlE,MAAM2mE,CAG9B,OAAOlqE,EAAIwO,EAAK,CACfsZ,EAAS9nB,KAAO,CAChB8nB,GAAS9nB,KAAO,CAChB8nB,GAAS9nB,KAAO,EAGjB,GAAIsrE,EACJ,IAAI9wD,EACJ,IAAI2vD,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIkB,GAAY,CAEhBvrE,GAAI,CACJwO,GAAMo6D,EAAgBrlE,MAAMwlE,CAG5B,OAAO/oE,EAAIwO,EAAK,CACf88D,EAASrC,EAAYsC,EACrB/wD,GAAQzT,EAAQ/G,KAAKkqE,CACrBpiD,GAAStN,MAAYmwD,EAAaR,GAAImB,CACtCxjD,GAAStN,MAAYmwD,EAAaP,GAAIkB,CACtCxjD,GAAStN,IAAUmwD,EAAaN,GAAIiB,CACpC9wD,GAAQzT,EAAQ/G,KAAKkqE,CACrBpiD,GAAStN,MAAYmwD,EAAaR,GAAImB,CACtCxjD,GAAStN,MAAYmwD,EAAaP,GAAIkB,CACtCxjD,GAAStN,IAAUmwD,EAAaN,GAAIiB,CACpC9wD,GAAQzT,EAAQ/G,KAAKkqE,CACrBpiD,GAAStN,MAAYmwD,EAAaR,GAAImB,CACtCxjD,GAAStN,MAAYmwD,EAAaP,GAAIkB,CACtCxjD,GAAStN,IAAUmwD,EAAaN,GAAIiB,CACpCnB,IAAM,CACNC,IAAM,CACNC,IAAM,CACNkB,IAAM,EAGPvrE,EAAI,CACJwO,GAAMs6D,EAAOvlE,MAAM2mE,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIzpE,EAGJ,OAAOf,EAAIwO,EAAK,CACf87D,EAAKxiD,EAAS9nB,EACduqE,GAAKziD,EAAS9nB,EAAI,EAClBwqE,GAAK1iD,EAAS9nB,EAAI,EAClBe,GAAI,EAAIwX,KAAKC,KAAK8xD,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErC1iD,GAAS9nB,KAAOsqE,EAAGvpE,CACnB+mB,GAAS9nB,KAAOuqE,EAAGxpE,CACnB+mB,GAAS9nB,KAAOwqE,EAAGzpE,EAGpB+nE,EAAOtlE,IAAIskB,EAEX,OAAOghD,GAIMnmE,GAAAgE,YAAd,SAA0BiiE,EAAkCE,EAAyBjmE,EAAqCU,EAAc6C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEvI,GAAI0iE,GAAU,KACbA,EAAS,GAAIrmE,GAAiBI,EAE/B,IAAIqnE,GAAmBpB,EAAO3kE,UAE9B,IAAI8C,GAAmB6hE,EAAOnnE,IAAI4B,EAAO6C,EAEzC,IAAIpG,GAAW,CACf,IAAI8gB,GAAW,CACf,IAAItS,GAAajL,EAAM2mE,CAEvB,OAAOlqE,EAAIwO,EAAK,CACfvH,EAAIjH,KAAO8gB,EAAE,EACb7Z,GAAIjH,KAAO,GAAO8gB,EAAI,EAEtB,MAAMA,GAAK,EACVA,EAAI,EAGNgoD,EAAOtlE,IAAIyD,EAAKb,EAEhB,OAAO0iE,GAGMnmE,GAAA0e,eAAd,SAA6BunD,EAAkCE,EAAwBjmE,EAAqCU,EAAc6C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzI,GAAI0iE,GAAU,KACbA,EAAS,GAAIvoD,GAAgB1d,EAE9B,IAAI2X,GAAe,CACnB,IAAI2G,GAAoB,GAAIC,YAAW7d,EAAM,EAE7C,OAAOiX,EAAQjX,EAAM,EAAG,CACvB,GAAIiX,EAAM,EAAI,EAAG,CAChB2G,EAAO3G,GAAS,GAChB2G,GAAO3G,EAAQ,GAAK,GACpB2G,GAAO3G,EAAQ,GAAK,GACpB2G,GAAO3G,EAAQ,GAAK,QACd,CACN2G,EAAO3G,GAAS,GAChB2G,GAAO3G,EAAQ,GAAK,GACpB2G,GAAO3G,EAAQ,GAAK,GACpB2G,GAAO3G,EAAQ,GAAK,IAGrBA,GAAS,EAGVsuD,EAAOtlE,IAAI2d,EAAQ/a,EAEnB,OAAO0iE,GAGMnmE,GAAA0E,SAAd,SAAuBF,EAAeC,EAAe0hE,EAAyBvlE,EAAc6C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE3F,GAAI0iE,EAAOvlE,MAAQA,EAAQ6C,EAC1B0iE,EAAOvlE,MAAQA,EAAQ6C,CAExB,IAAI8jE,GAAmBpB,EAAO3kE,UAE9B,IAAI8C,GAAmB6hE,EAAOnnE,IAAI4B,EAAO6C,EAEzC,IAAIpG,GAAW,CACf,IAAI8gB,GAAW,CACf,IAAItS,GAAajL,EAAM2mE,CAEvB,OAAOlqE,EAAIwO,EAAK,CACfvH,EAAIjH,MAAQmH,CACZF,GAAIjH,MAAQoH,EAGb0hE,EAAOtlE,IAAIyD,EAAKb,GAGHzD,GAAA2E,MAAd,SAAoBA,EAAcwhE,EAAyBvlE,EAAc6C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExE,GAAI0iE,EAAOvlE,MAAQA,EAAQ6C,EAC1B0iE,EAAOvlE,MAAQA,EAAQ6C,CAExB,IAAI8jE,GAAmBpB,EAAO3kE,UAE9B,IAAID,GAAyB4kE,EAAOnnE,IAAI4B,EAAO6C,EAE/C,IAAIpG,GAAW,CACf,IAAI8gB,GAAW,CACf,IAAItS,GAAajL,EAAM2mE,CAEvB,OAAOlqE,EAAIwO,EAAK,CACftK,EAAUlE,MAAQsH,CAClBpD,GAAUlE,MAAQsH,CAClBpD,GAAUlE,MAAQsH,EAGnBwhE,EAAOtlE,IAAIU,EAAWkC,GAGTzD,GAAA4E,oBAAd,SAAkCC,EAAoBqhE,EAAqC2C,EAAmCC,EAAoCloE,EAAc6C,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/K,GAAIlC,GAAyB2kE,EAAmBlnE,IAAI4B,EAAO6C,EAC3D,IAAI4iE,GAAqBH,EAAmB1kE,UAE5C,IAAI0jB,EACJ,IAAI6jD,EAEJ,IAAIF,EAAkB,CACrB3jD,EAAU2jD,EAAiB7pE,IAAI4B,EAAO6C,EACtCslE,GAAYF,EAAiBrnE,WAG9B,GAAI2jB,EACJ,IAAI6jD,EAEJ,IAAIF,EAAmB,CACtB3jD,EAAW2jD,EAAkB9pE,IAAI4B,EAAO6C,EACxCulE,GAAaF,EAAkBtnE,WAGhC,GAAInE,EACJ,IAAIyyD,EACJ,IAAIC,EACJ,IAAIkZ,GAAkB,GAAIxiE,EAC1B,IAAIyiE,EAEJ,IAAIL,GAAoBC,EAAmB,CAC1CI,EAAerkE,EAAUX,OACzBglE,GAAar8D,QACbq8D,GAAaC,YAGd,GAAIC,GAAa,CACjB,IAAIC,GAAa,CACjB,IAAIC,GAAa,CAEjB,KAAKjsE,EAAI,EAAGA,EAAIuD,IAASvD,EAAG,CAE3ByyD,EAAKsZ,EAAM,CACXrZ,GAAKqZ,EAAM,CACXH,GAAO9nE,EAAII,EAAU6nE,EACrBH,GAAO7nE,EAAIG,EAAUuuD,EACrBmZ,GAAO5nE,EAAIE,EAAUwuD,EACrBkZ,GAASpkE,EAAUqJ,gBAAgB+6D,EACnC1nE,GAAU6nE,GAAOH,EAAO9nE,CACxBI,GAAUuuD,GAAMmZ,EAAO7nE,CACvBG,GAAUwuD,GAAMkZ,EAAO5nE,CACvB+nE,IAAO/C,CAEP,IAAInhD,EAAS,CAEZ4qC,EAAKuZ,EAAM,CACXtZ,GAAKsZ,EAAM,CACXJ,GAAO9nE,EAAI+jB,EAAQmkD,EACnBJ,GAAO7nE,EAAI8jB,EAAQ4qC,EACnBmZ,GAAO5nE,EAAI6jB,EAAQ6qC,EACnBkZ,GAASC,EAAa7sC,qBAAqB4sC,EAC3CA,GAAOp1D,WACPqR,GAAQmkD,GAAOJ,EAAO9nE,CACtB+jB,GAAQ4qC,GAAMmZ,EAAO7nE,CACrB8jB,GAAQ6qC,GAAMkZ,EAAO5nE,CACrBgoE,IAAON,EAGR,GAAI5jD,EAAU,CAEb2qC,EAAKwZ,EAAM,CACXvZ,GAAKuZ,EAAM,CACXL,GAAO9nE,EAAIgkB,EAASmkD,EACpBL,GAAO7nE,EAAI+jB,EAAS2qC,EACpBmZ,GAAO5nE,EAAI8jB,EAAS4qC,EACpBkZ,GAASC,EAAa7sC,qBAAqB4sC,EAC3CA,GAAOp1D,WACPsR,GAASmkD,GAAOL,EAAO9nE,CACvBgkB,GAAS2qC,GAAMmZ,EAAO7nE,CACtB+jB,GAAS4qC,GAAMkZ,EAAO5nE,CACtBioE,IAAON,GAIT9C,EAAmBrlE,IAAIU,EAAWkC,EAElC,IAAIolE,EACHA,EAAiBhoE,IAAIqkB,EAASzhB,EAE/B,IAAIqlE,EACHA,EAAkBjoE,IAAIskB,EAAU1hB,GAKpBzD,GAAAupE,cAAd,SAA4BtD,EAAgCr0B,EAAoB43B,EAA6BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAE5G,GAAIz3B,GAA0Bi0B,EAAgBj0B,MAC9C,IAAIwf,GAAoByU,EAAgBroE,MAGxC4rE,GAAc5rE,OAAS,CAGvB,IAAI4zD,EAAaxxD,EAAiB0pE,eAAiB93B,EAAc5xC,EAAiB2pE,YACjF,MAAO33B,EAER,IAAI30C,EACJ,IAAI+G,GAAoC6hE,EAAgBjnE,IAAIinE,EAAgBrlE,MAAO6oE,EACnF,IAAIG,GAA6B,GAAI3/D,MACrC,IAAI4/D,GAA0B7pE,EAAiB8pE,UAG/CD,GAAUjsE,OAAS4zD,CACnB,KAAKn0D,EAAI,EAAGA,EAAIm0D,EAAYn0D,IAC3BwsE,EAAUxsE,IAAM,CAEjB,IAAI0sE,EACJ,IAAIC,EACJ,IAAInyD,GAAe,CACnB,IAAIoyD,GAAsBR,EAAYxD,EAAgBzkE,UAItDnE,GAAI,CACJ,OAAOA,EAAIm0D,EAAayY,GAAgB5sE,EAAI,EAAI2C,EAAiB0pE,eAAiB7xD,EAAQ,EAAI7X,EAAiB2pE,YAAa,CAC3HI,EAAgB3lE,EAAQ/G,EAExB,IAAIwsE,EAAUE,IAAkB,EAAG,CAClCC,EAAaH,EAAUE,OACjB,CAGNC,EAAanyD,GACbgyD,GAAUE,GAAiBC,CAC3BR,GAAcQ,GAAcD,EAK7BH,EAAavsE,KAAO2sE,EAGrBh4B,EAAS,GAAIupB,GAAiB0K,EAAgB/1B,KAAK+1B,EAAgBzkE,WAAYooE,EAAahsE,OAAOqoE,EAAgBzkE,WAEnHykE,GAAkBA,EAAgB/hE,MAAM8tC,EACxCi0B,GAAgBplE,IAAI+oE,EAEpB,OAAO53B,GAGMhyC,GAAAkqE,eAAd,SAA6BC,EAA+BX,GAE3D,IAAKA,EAAc5rE,OAClB,MAAOusE,EAER,IAAIC,GAAgBD,EAAaC,MAEjC,IAAIvqC,GAAsBsqC,EAAaE,UAEvC,IAAIC,GAAwB,GAAI7rD,YAAW+qD,EAAc5rE,OAAOwsE,EAChE,IAAIJ,EACJ,IAAID,EACJ,IAAI1sE,GAAW,CACf,IAAI8gB,GAAW,CACf,IAAItS,GAAa29D,EAAc5rE,MAC/B,KAAKP,EAAI,EAAGA,EAAIwO,EAAKxO,IAAK,CACzB2sE,EAAa3sE,EAAE+sE,CACfL,GAAgBP,EAAcnsE,GAAG+sE,CAEjC,KAAKjsD,EAAI,EAAGA,EAAIisD,EAAQjsD,IACvBmsD,EAAWN,EAAa7rD,GAAK0hB,EAASkqC,EAAgB5rD,GAGxDgsD,EAAe,GAAI5O,GAAiB6O,EAAQv+D,EAC5Cs+D,GAAaE,WAAaC,CAE1B,OAAOH,GAxjBOnqE,GAAA2pE,YAAqB,KAErB3pE,GAAA0pE,cAAuB,QAEvB1pE,GAAA8pE,WAA2B,GAAI7/D,MAsjB/C,OAAAjK,KAEAlC,GAA0BJ,QAAjBsC,I9Hw6lBNi8D,8CAA8C18D,UAAUsf,6CAA6Ctf,UAAU6F,8CAA8C7F,UAAU8F,8CAA8C9F,UAAUgrE,8CAA8ChrE,UAAUwa,gCAAgCxa,YAAYirE,yCAAyC,SAAS5tE,EAAQkB,EAAOJ",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t//check if nmot solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _skewDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pSkewX:number = 0;\r\n\tpublic _pSkewY:number = 0;\r\n\tpublic _pSkewZ:number = 0;\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean = false;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\treturn this._pSkewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this._pSkewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSkewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\treturn this._pSkewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this._pSkewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSkewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\treturn this._pSkewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this._pSkewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSkewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = this.name;\r\n\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pSkewX != vec.x || this._pSkewY != vec.y || this._pSkewZ != vec.z) {\r\n\t\t\tthis._pSkewX = vec.x;\r\n\t\t\tthis._pSkewY = vec.y;\r\n\t\t\tthis._pSkewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew();\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._pSkewX;\r\n\t\tthis._ske.y = this._pSkewY;\r\n\t\tthis._ske.z = this._pSkewZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty =false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySkewChanged()\r\n\t{\r\n\t\tif (!this._skewChanged)\r\n\t\t\tthis._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._skewChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew()\r\n\t{\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToSkewChanged)\r\n\t\t\tthis.notifySkewChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = this.name;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\r\n\t\tif(this.visible==false)return;\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\r\n\t\t\tif(childHit) {\r\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\tif(all_masks){\r\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\r\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\tif(mask_child.parent){\r\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\r\n\t\t\t\t\t\t\tif(childHit) return true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\t// if this is a mask, directly return false\r\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\r\n\r\n\t\t// if this is invisible, all children should be invisible too.\r\n\t\t// todo: is the above statement correct for awayjs visible-property ?\r\n\t\tif(this.visible==false)return false;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\t\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tif(this.geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\r\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\r\n\r\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\r\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\r\n\t\t\t\t\t\tif (all_masks) {\r\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\r\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\r\n\t\t\t\t\t\t\tif (all_hir_masks){\r\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\r\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\r\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\r\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\r\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar hit:boolean = false;\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\r\n\t\tif(hit)\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar line_width:number=0;\r\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t\tfont_chars.push(this_char);\r\n\t\t\t}\r\n\t\t\tvar x_offset:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-line_width);\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n\t\tclone.geometry = new Geometry();\r\n\t\t//clone.material = this._material;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t//var len:number = this._subMeshes.length;\r\n\t\t//for (var i:number = 0; i < len; ++i)\r\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tvar len = this.numChildren;\r\n\t\tvar obj:any;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\tobj = this.getChildAt(i).clone();\r\n\t\t\tclone.addChild(<DisplayObjectContainer> obj);\r\n\t\t}\r\n\r\n\t\t//if (this._animator)\r\n\t\t//\tclone.animator = this._animator.clone();\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tpublic _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display/display.ts",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/HierarchicalProperties.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/Style.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/TouchPoint.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/LoaderContainer.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderOwnerEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/StyleEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/events/TransformEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/DisplayObjectNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/SceneGraphNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/MappingMode.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "./display.ts",
    "module",
    "Camera",
    "DirectionalLight",
    "Mesh",
    "MovieClip",
    "Billboard",
    "LineSegment",
    "TextField",
    "PointLight",
    "LightProbe",
    "Skybox",
    "CameraNode",
    "DirectionalLightNode",
    "EntityNode",
    "LightProbeNode",
    "PartitionBase",
    "PointLightNode",
    "SkyboxNode",
    "registerAbstraction",
    "display",
    "awayjs-display/lib/entities/Billboard",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/entities/DirectionalLight",
    "awayjs-display/lib/entities/LightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "awayjs-display/lib/entities/Mesh",
    "awayjs-display/lib/entities/MovieClip",
    "awayjs-display/lib/entities/PointLight",
    "awayjs-display/lib/entities/Skybox",
    "awayjs-display/lib/entities/TextField",
    "awayjs-display/lib/partition/CameraNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/LightProbeNode",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "cells",
    "Array",
    "lastCollisionIndex",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "_uvs",
    "_verticesDirty",
    "id",
    "setUVs",
    "getBoxBounds",
    "target",
    "getCurveGeometryBoxBounds",
    "getSphereBounds",
    "center",
    "setPositions",
    "values",
    "offset",
    "clearVertices",
    "set",
    "pInvalidateBounds",
    "invalidateVertices",
    "setCurves",
    "clone",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_available",
    "push",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "HierarchicalProperties",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "TransformEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_depthID",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "zOffset",
    "_transform",
    "addEventListener",
    "INVALIDATE_MATRIX3D",
    "event",
    "_onInvalidateMatrix3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "_onInvalidateColorTransform",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "value",
    "pInvalidateHierarchicalProperties",
    "COLOR_TRANSFORM",
    "colorTransform",
    "alphaMultiplier",
    "invalidate",
    "_pInvalidateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "_eulers",
    "x",
    "rotationX",
    "y",
    "rotationY",
    "z",
    "rotationZ",
    "height",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "_loaderInfo",
    "_updateMaskMode",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iSetScene",
    "_pScene",
    "_iAssignedPartition",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "_pivot",
    "pivot",
    "_pivotScale",
    "SCENE_TRANSFORM",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateMatrix3D",
    "_width",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_hierarchicalPropsDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "VISIBLE",
    "_explicitMasks",
    "len",
    "maskMode",
    "MASKS",
    "width",
    "scaleX",
    "position",
    "matrix3D",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "copyTo",
    "partition",
    "boundsType",
    "name",
    "mouseEnabled",
    "extra",
    "masks",
    "adapter",
    "disposeValues",
    "removeChild",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "setTo",
    "pos",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "maskFlag",
    "isMask",
    "lookAt",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "movePivot",
    "dx",
    "dy",
    "dz",
    "reset",
    "visible",
    "clearMatrix3D",
    "clearColorTransform",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "removeEventListener",
    "hasEventListener",
    "_pImplicitPartition",
    "_pPickingCollisionVO",
    "iSetParent",
    "ALL",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "invalidatePartitionBounds",
    "queueDispatch",
    "_sceneTransformChanged",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "clear",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "_iController",
    "updateController",
    "appendTranslation",
    "_iIsRoot",
    "append",
    "_matrix3DDirty",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "MASK_ID",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "MOUSE_ENABLED",
    "_updateMouseEnabled",
    "_applyRenderer",
    "renderer",
    "mouseChildren",
    "concat",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "prepend",
    "INVALIDATE_PARTITION_BOUNDS",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/HierarchicalProperties",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/TransformEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "splice",
    "indexOf",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "index",
    "Uint16Array",
    "setThickness",
    "thickness",
    "Math",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "_pIndices",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher",
    "StyleEvent",
    "Style",
    "_samplers",
    "_images",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "getImageAt",
    "texture",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "INVALIDATE_PROPERTIES",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/events/StyleEvent",
    "Short3Attributes",
    "SubGeometryEvent",
    "_numElements",
    "_invalidateVertices",
    "clearIndices",
    "invalidateIndicies",
    "_invalidateIndices",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "attributesView",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "RenderableOwnerEvent",
    "style",
    "_iIndex",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_style",
    "invalidateRenderOwner",
    "_uvTransform",
    "uvTransform",
    "invalidateGeometry",
    "INVALIDATE_GEOMETRY",
    "INVALIDATE_RENDER_OWNER",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "_children",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "isBlockedByScript",
    "isVisibilityByScript",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "awayjs-display/lib/base/TouchPoint",
    "TouchPoint",
    "_matrix3D",
    "_rotation",
    "_skew",
    "_scale",
    "_components",
    "director",
    "getForward",
    "negate",
    "_colorTransform",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "moveDown",
    "moveTo",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "sqrt",
    "identity",
    "elements",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_autoDeriveUVs",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "getTriangleGeometryBoxBounds",
    "getTriangleGeometrySphereBounds",
    "generateNormals",
    "generateTangents",
    "generateUVs",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_x",
    "_y",
    "_z",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "removeChildAtInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "contains",
    "getChildAtDepth",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "min",
    "max",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "bitFlag",
    "masksFlag",
    "maskHit",
    "_hitTestPointInternal",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/LoaderContainer",
    "AssetLibraryBundle",
    "Loader",
    "AssetEvent",
    "URLLoaderEvent",
    "LoaderEvent",
    "ParserEvent",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "getInstance",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "LOAD_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "LOAD_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_pTouchPoints",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "unproject",
    "getLocalMouseY",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "Rectangle",
    "RenderOwnerEvent",
    "DefaultMaterialManager",
    "pixelSnapping",
    "smoothing",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_updateDimensions",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "INVALIDATE_TEXTURE",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "getTextureAt",
    "getDefaultSampler",
    "rect",
    "imageRect",
    "frameRect",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/RenderOwnerEvent",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "DirectionalShadowMapper",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "SamplerCube",
    "ErrorBase",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "specularSampler",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "SubMeshPool",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "_iInvalidateRenderOwners",
    "bakeTransformations",
    "_meshes",
    "pop",
    "isAsset",
    "shareAnimationGeometry",
    "getSubMeshFromSubGeometry",
    "_center",
    "getNewSubMesh",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "hitTestCurveGeometry",
    "awayjs-display/lib/pool/SubMeshPool",
    "MouseEvent",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "text",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "instance",
    "add_child_to_dispose",
    "awayjs-display/lib/events/MouseEvent",
    "CubeMapShadowMapper",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "BlendMode",
    "SingleCubeTexture",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "INVALIDATE",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "TextFieldType",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGeometryDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textFields",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "textlines",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "tl",
    "words",
    "word_width",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "w",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "textWidth",
    "fw",
    "x_offset",
    "align",
    "positions2",
    "numVertices",
    "curveData2",
    "curves",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "EventBase",
    "_camera",
    "awayjs-core/lib/events/EventBase",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "_subGeometry",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "renderOwner",
    "_renderOwner",
    "INVALIDATE_ANIMATION",
    "_renderableOwner",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "Sampler2D",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "draw",
    "setPixel",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "parent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touchPointID",
    "Image2D",
    "MaterialBase",
    "imageColor",
    "_preserveAlpha",
    "invalidateTexture",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ImageBase",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateRenderOwners",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "apply",
    "acceptTraverser",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "isContainerNode",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "_updateBounds",
    "onClear",
    "_debugEntity",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "awayjs-core/lib/library/AbstractionBase",
    "_partition",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "applyEntity",
    "debugVisible",
    "isEntityCollector",
    "boundsPrimitive",
    "iMarkForUpdate",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "applyLightProbe",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pEntityNode",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphNodePool",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "isContainer",
    "awayjs-display/lib/pool/SceneGraphNodePool",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "posDim",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "curveDim",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "_pool",
    "getItem",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "ContainerNodePool",
    "_containerNodePool",
    "displayObjectContainer",
    "subMeshClass",
    "classPool",
    "newSubMesh",
    "registerClass",
    "getClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "_scaleU",
    "_scaleV",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "ImageUtils",
    "TextureBase",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "isImage2DValid",
    "setImageAt",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "boundingBox",
    "curveAttributes",
    "precheck",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "posDim2",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "awayjs-core/lib/attributes/Float4Attributes"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,gBAAA,SAAAjB,EAAAkB,EAAAJ,GCAA,GAAOK,GAAMnB,EAAgB,qCAC7B,IAAOoB,GAAgBpB,EAAc,+CACrC,IAAOqB,GAAIrB,EAAiB,mCAC5B,IAAOsB,GAAStB,EAAe,wCAC/B,IAAOuB,GAASvB,EAAe,wCAC/B,IAAOwB,GAAWxB,EAAe,0CACjC,IAAOyB,GAASzB,EAAe,wCAC/B,IAAO0B,GAAU1B,EAAe,yCAChC,IAAO2B,GAAU3B,EAAe,yCAChC,IAAO4B,GAAM5B,EAAgB,qCAC7B,IAAO6B,GAAU7B,EAAe,0CAChC,IAAO8B,GAAoB9B,EAAa,oDACxC,IAAO+B,GAAU/B,EAAe,0CAChC,IAAOgC,GAAchC,EAAc,8CACnC,IAAOiC,GAAajC,EAAc,6CAClC,IAAOkC,GAAclC,EAAc,8CACnC,IAAOmC,GAAUnC,EAAe,0CAEhCiC,GAAcG,oBAAoBP,EAAYV,EAC9Cc,GAAcG,oBAAoBN,EAAsBV,EACxDa,GAAcG,oBAAoBL,EAAYV,EAC9CY,GAAcG,oBAAoBL,EAAYR,EAC9CU,GAAcG,oBAAoBL,EAAYP,EAC9CS,GAAcG,oBAAoBL,EAAYN,EAC9CQ,GAAcG,oBAAoBL,EAAYT,EAC9CW,GAAcG,oBAAoBJ,EAAgBL,EAClDM,GAAcG,oBAAoBF,EAAgBR,EAClDO,GAAcG,oBAAoBD,EAAYP,ECK9C,IDGMS,GAAO,WAAb,QAAMA,MAGN,MAAAA,KAEAnB,GAAiBJ,QAARuB,ICDNC,wCAAwC,wCAAwCC,qCAAqC,qCAAqCC,+CAA+C,+CAA+CC,yCAAyC,yCAAyCC,0CAA0C,0CAA0CC,mCAAmC,mCAAmCC,wCAAwC,wCAAwCC,yCAAyC,yCAAyCC,qCAAqC,qCAAqCC,wCAAwC,wCAAwCC,0CAA0C,0CAA0CC,oDAAoD,oDAAoDC,0CAA0C,0CAA0CC,8CAA8C,8CAA8CC,6CAA6C,6CAA6CC,8CAA8C,8CAA8CC,0CAA0C,4CAA4CC,gCAAgC,SAASvD,EAAQkB,EAAOJ,SAE78C0C,qDAAqD,SAASxD,EAAQkB,EAAOJ,SAE7E2C,iDAAiD,SAASzD,EAAQkB,EAAOJ,SAEzE4C,8CAA8C,SAAS1D,EAAQkB,EAAOJ,SAEtE6C,0CAA0C,SAAS3D,EAAQkB,EAAOJ,SAElE8C,wDAAwD,SAAS5D,EAAQkB,EAAOJ,GACtF,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GCtDtB,IAAOG,GAAStE,EAAc,oCD4D9B,ICvDMuE,GAAiB,SAAAC,GAASX,EAA1BU,EAAiBC,EActB,SAdKD,KAgBJC,EAAAzD,KAAA+C,MAVDW,OAAAC,eAAWH,EAAAF,UAAA,cD0DJM,IC1DP,WAEC,MAAOb,MAAKc,cD2DNC,WAAY,KACZC,aAAc,MC9CdP,GAAAF,UAAAU,QAAP,YAOAN,QAAAC,eAAWH,EAAAF,UAAA,aDkDJM,IClDP,WAEC,MAAOJ,GAAkBS,WDmDnBH,WAAY,KACZC,aAAc,MCjFPP,GAAAS,UAAmB,2BA+BlC,OAAAT,IAjCgCD,EAmChCpD,GAA2BJ,QAAlByD,IDuDNU,oCAAoCC,YAAYC,yCAAyC,SAASnF,EAAQkB,EAAOJ,GAIpH,GEhGMsE,GAAa,WAAnB,QAAMA,MAKSA,EAAAC,mBAA4B,mBAK5BD,GAAAE,YAAqB,OACpC,OAAAF,KAEAlE,GAAuBJ,QAAdsE,OFkGHG,4CAA4C,SAASvF,EAAQkB,EAAOJ,GAC1E,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GGrHtB,IAAOqB,GAAgBxF,EAAc,8CACrC,IAAOyF,GAAgBzF,EAAc,8CAOrC,IAAO0F,GAAe1F,EAAc,0CAEpC,IAAO2F,GAAgB3F,EAAc,4CHoHrC,IG7GM4F,GAAgB,SAAApB,GAASX,EAAzB+B,EAAgBpB,EAyDrB,SAzDKoB,GAyDOC,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAAzD,KAAA+C,KAAM+B,EAvDC/B,MAAAgC,aAAsB,CAOvBhC,MAAAiC,MAA6B,GAAIC,MACjClC,MAAAmC,oBAA6B,CAiDnCnC,MAAKoC,WAAapC,KAAKqC,oBAAwCrC,KAAKqC,oBAAoBC,QAAQ,IAAM,GAAIZ,GAAiB1B,KAAKqC,qBAAuB,GAAIX,EAE3J1B,MAAKuC,QAAUvC,KAAKqC,oBAAwCrC,KAAKqC,oBAAoBC,QAAQ,IAAM,GAAIX,GAAiB3B,KAAKqC,qBAAuB,GAAIV,EAExJ3B,MAAKgC,aAAehC,KAAKoC,WAAWI,MAlDrC7B,OAAAC,eAAWkB,EAAAvB,UAAA,aH+GJM,IG/GP,WAEC,MAAOiB,GAAiBZ,WHgHlBH,WAAY,KACZC,aAAc,MG9GrBL,QAAAC,eAAWkB,EAAAvB,UAAA,eHiHJM,IGjHP,WAEC,MAAOb,MAAKgC,cHkHNjB,WAAY,KACZC,aAAc,MG7GrBL,QAAAC,eAAWkB,EAAAvB,UAAA,aHmHJM,IGnHP,WAEC,MAAOb,MAAKoC,YHoHNrB,WAAY,KACZC,aAAc,MG/GrBL,QAAAC,eAAWkB,EAAAvB,UAAA,UHqHJM,IGrHP,WAEC,MAAOb,MAAKuC,SHsHNxB,WAAY,KACZC,aAAc,MG/GrBL,QAAAC,eAAWkB,EAAAvB,UAAA,OHqHJM,IGrHP,WAEC,IAAKb,KAAKyC,MAAQzC,KAAK0C,eAAe1C,KAAKyC,KAAKE,IAC/C3C,KAAK4C,OAAO5C,KAAKyC,MAAQzC,KAAKoC,WAE/B,OAAOpC,MAAKyC,MHqHN1B,WAAY,KACZC,aAAc,MGrGdc,GAAAvB,UAAAsC,aAAP,SAAoBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEnB,MAAOjB,GAAiBkB,0BAA0B/C,KAAKoC,WAAYU,EAAQ9C,KAAKgC,cAG1EF,GAAAvB,UAAAyC,gBAAP,SAAuBC,EAAiBH,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAGvC,MAAOA,GASDhB,GAAAvB,UAAA2C,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAUnD,KAAKoC,WAClB,MAED,IAAIe,YAAkBzB,GAAkB,CACvC1B,KAAKqD,cAAcrD,KAAKoC,WACxBpC,MAAKoC,WAAgCe,MAC/B,IAAIA,EAAQ,CAClBnD,KAAKoC,WAAWkB,IAAIH,EAAQC,OACtB,CACNpD,KAAKqD,cAAcrD,KAAKoC,WACxBpC,MAAKoC,WAAa,GAAIV,GAAiB1B,KAAKqC,qBAG7CrC,KAAKgC,aAAehC,KAAKoC,WAAWI,KAEpCxC,MAAKuD,mBAELvD,MAAKwD,mBAAmBxD,KAAKoC,WAE7BpC,MAAK0C,eAAe1C,KAAKoC,WAAWO,IAAM,MASpCb,GAAAvB,UAAAkD,UAAP,SAAiBN,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,GAAUnD,KAAKuC,QAClB,MAED,IAAIY,YAAkBxB,GAAkB,CACvC3B,KAAKqD,cAAcrD,KAAKuC,QACxBvC,MAAKuC,QAA6BY,MAC5B,IAAIA,EAAQ,CAClBnD,KAAKuC,QAAQe,IAAIH,EAAQC,OACnB,CACNpD,KAAKqD,cAAcrD,KAAKuC,QACxBvC,MAAKuC,QAAU,GAAIZ,GAAiB3B,KAAKqC,qBAG1CrC,KAAKwD,mBAAmBxD,KAAKuC,QAE7BvC,MAAK0C,eAAe1C,KAAKuC,QAAQI,IAAM,MAUjCb,GAAAvB,UAAAqC,OAAP,SAAcO,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,GAAID,GAAUnD,KAAKyC,KAClB,MAED,IAAIU,YAAkBxB,IAAoBwB,YAAkBzB,GAAkB,CAC7E1B,KAAKqD,cAAcrD,KAAKyC,KACxBzC,MAAKyC,KAAOU,MACN,IAAIA,EAAQ,CAClB,IAAKnD,KAAKyC,MAAQzC,KAAKyC,MAAQzC,KAAKoC,WACnCpC,KAAKyC,KAAO,GAAId,GAAiB3B,KAAKqC,oBAEvCrC,MAAKyC,KAAKa,IAAIH,EAAQC,OAChB,IAAIpD,KAAKyC,MAAQzC,KAAKyC,MAAQzC,KAAKoC,WAAY,CACrDpC,KAAKqD,cAAcrD,KAAKyC,KACxBzC,MAAKyC,KAAOzC,KAAKoC,UACjB,QAGDpC,KAAKwD,mBAAmBxD,KAAKyC,KAE7BzC,MAAK0C,eAAe1C,KAAKyC,KAAKE,IAAM,MAO9Bb,GAAAvB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOhE,KAAA+C,KAEbA,MAAKoC,WAAWnB,SAChBjB,MAAKoC,WAAa,IAElBpC,MAAKuC,QAAQtB,SACbjB,MAAKuC,QAAU,IAEf,IAAIvC,KAAKyC,KAAM,CACdzC,KAAKyC,KAAKxB,SACVjB,MAAKyC,KAAO,MASPX,GAAAvB,UAAAmD,MAAP,WAEC,GAAIA,GAAyB,GAAI5B,GAAiB9B,KAAKqC,oBAAqBrC,KAAKqC,oBAAoBqB,QAAU,KAE/G,IAAI1D,KAAK2D,QACRD,EAAME,WAAW5D,KAAK2D,QAAQD,QAE/B,IAAI1D,KAAK6D,IACRH,EAAMd,OAAO5C,KAAK6D,IAAIH,QAEvB,OAAOA,GAGD5B,GAAAvB,UAAAuD,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjCnC,EAAiBoC,SAASF,EAAQC,EAAQhE,KAAK6D,IAAK7D,KAAK6D,IAAIrB,OAYvDV,GAAAvB,UAAA2D,MAAP,SAAaA,GAEZrC,EAAiBqC,MAAMA,EAAOlE,KAAKmE,UAAWnE,KAAKgC,cAG7CF,GAAAvB,UAAA6D,oBAAP,SAA2BC,GAE1BxC,EAAiBuC,oBAAoBC,EAAWrE,KAAKmE,UAAW,KAAM,KAAMnE,KAAKmE,UAAU3B,OAGrFV,GAAAvB,UAAA+D,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgBI,mBAAmB3E,KAAMwE,EAAUC,EAAoBC,GApOjE5C,GAAAZ,UAAmB,0BAsOlC,OAAAY,IAxO+BF,EA0O/BxE,GAA0BJ,QAAjB8E,IH0DN8C,8CAA8CxD,UAAUyD,8CAA8CzD,UAAU0D,0CAA0C,0CAA0CC,4CAA4C,8CAA8CC,wCAAwC,SAAS9I,EAAQkB,EAAOJ,GACjW,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GI1TtB,IAAOyB,GAAgB5F,EAAa,2CAEpC,IAAO+I,GAAW/I,EAAc,sCJqUhC,IIxTMgJ,GAAY,SAAAxE,GAASX,EAArBmF,EAAYxE,EA2BjB,SA3BKwE,GA2BOC,EAA8BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE1D9D,EAAAzD,KAAA+C,KAAMoF,EAAYZ,EAElBxE,MAAKmF,YAAcA,EApBpBxE,OAAAC,eAAWsE,EAAA3E,UAAA,aJ8TJM,II9TP,WAEC,MAAOqE,GAAahE,WJ+TdH,WAAY,KACZC,aAAc,MIxSdkE,GAAA3E,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOhE,KAAA+C,KAEbA,MAAKmF,YAAc,IAEnBD,GAAaG,WAAWC,KAAKtF,MAzChBkF,GAAAG,WAAiC,GAAInD,MAErCgD,GAAAhE,UAAmB,sBAEnBgE,GAAAK,WAAyBzD,CAuCxC,OAAAoD,IA7C2BD,EA+C3B7H,GAAsBJ,QAAbkI,IJ+SNzD,2CAA2C,2CAA2C+D,sCAAsC,wCAAwCC,yCAAyC,SAASvJ,EAAQkB,EAAOJ,GACxO,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GKnXtB,IAAOqF,GAAGxJ,EAAiB,2BAC3B,IAAOyJ,GAAczJ,EAAc,sCACnC,IAAO0J,GAAM1J,EAAgB,8BAC7B,IAAO2J,GAAU3J,EAAe,kCAChC,IAAO4J,GAAQ5J,EAAgB,gCAC/B,IAAO6J,GAAa7J,EAAc,qCAClC,IAAO8J,GAAK9J,EAAgB,6BAE5B,IAAO+J,GAAQ/J,EAAgB,gCAC/B,IAAOsE,GAAStE,EAAe,oCAM/B,IAAOgK,GAAsBhK,EAAY,iDACzC,IAAOiK,GAAUjK,EAAe,uCAIhC,IAAOoF,GAAapF,EAAc,wCAClC,IAAOkK,GAAelK,EAAc,0CAEpC,IAAOmK,GAASnK,EAAe,oCAG/B,IAAOoK,GAAkBpK,EAAa,6CAGtC,IAAOqK,GAAkBrK,EAAa,+CACtC,IAAOsK,GAActK,EAAc,2CLyenC,IKjWMuK,GAAa,SAAA/F,GAASX,EAAtB0G,EAAa/F,EA0tClB,SA1tCK+F,KAAN,GAAAC,GAAA1G,IA4tCEU,GAAAzD,KAAA+C,KAxtCOA,MAAA2G,cAAiC,GAAIzE,MAOrClC,MAAA4G,kBAA4B,IAE5B5G,MAAA6G,qBAA+B,IAMhC7G,MAAA8G,iBAA4B,GAAIhB,EAChC9F,MAAA+G,WAAqB,KACrB/G,MAAAgH,cAAwB,KACxBhH,MAAAiH,YAAqB,CACrBjH,MAAAkH,UAAmB,KASlBlH,MAAAmH,uBAAkC,GAAIrB,EAEtC9F,MAAAoH,eAA0B,GAAInB,EAE9BjG,MAAAqH,oBAA8B,IAC9BrH,MAAAsH,iBAA0B,CAE3BtH,MAAAuH,qBAA+B,IAC/BvH,MAAAwH,kBAA2B,CAE3BxH,MAAAyH,kBAAyC,GAAIvF,MAC5ClC,MAAA0H,sBAAgC,IACjC1H,MAAA2H,uBAAiC,IAmBhC3H,MAAA4H,mBAA8B,GAAI9B,EAY/B9F,MAAA6H,uBAAiC,KACpC7H,MAAA8H,UAAoB,KAKpB9H,MAAA+H,cAAyB,GAAI9B,EAkC9BjG,MAAAgI,cAAuB1G,EAAcC,kBAiIrCvB,MAAAiI,aAAuB,IA6VvBjI,MAAAkI,gBAAyB9B,EAAgB+B,OAooBzCnI,MAAAoI,QAAiB,CAUvBpI,MAAKqI,WAAa,GAAIhC,EAGtBrG,MAAKqI,WAAWC,iBAAiB9B,EAAe+B,oBAAqB,SAACC,GAAyB,MAAA9B,GAAK+B,sBAAsBD,IAC1HxI,MAAKqI,WAAWC,iBAAiB9B,EAAekC,2BAA4B,SAACF,GAAyB,MAAA9B,GAAKiC,4BAA4BH,IAGvIxI,MAAK4I,YAAczC,EAAW0C,iBA/oC/BlI,OAAAC,eAAW6F,EAAAlG,UAAA,WLqUJM,IKrUP,WAEC,MAAOb,MAAK8I,ULsUNxF,IKnUP,SAAmByF,GAElB/I,KAAK8I,SAAWC,GLoUVhI,WAAY,KACZC,aAAc,MKlUlBL,QAAAC,eAAW6F,EAAAlG,UAAA,yBLqUPM,IKrUJ,WAEI,MAAOb,MAAK6H,wBLsUZvE,IKnUJ,SAAiCyF,GAEnC,GAAI/I,KAAK6H,wBAA0BkB,EAClC,MAEK/I,MAAK6H,uBAAyBkB,CAEpC/I,MAAKgJ,kCAAkC9C,EAAuB+C,kBLkUxDlI,WAAY,KACZC,aAAc,MKrTrBL,QAAAC,eAAW6F,EAAAlG,UAAA,SL8TJM,IK9TP,WAEO,MAAOb,MAAKqI,WAAWa,eAAgBlJ,KAAKqI,WAAWa,eAAeC,gBAAkB,GL+TxF7F,IK5TJ,SAAiByF,GAEnB,IAAK/I,KAAKqI,WAAWa,eACpBlJ,KAAKqI,WAAWa,eAAiB,GAAIvD,EAEhC3F,MAAKqI,WAAWa,eAAeC,gBAAkBJ,GL4TjDhI,WAAY,KACZC,aAAc,MK7RrBL,QAAAC,eAAW6F,EAAAlG,UAAA,cLmSJM,IKnSP,WAEC,MAAOb,MAAK4I,aLoSNtF,IKjSP,SAAsByF,GAErB,GAAI/I,KAAK4I,aAAeG,EACvB,MAED/I,MAAK4I,YAAcG,CAEnB/I,MAAKoJ,YAELpJ,MAAKqJ,sBL+RCtI,WAAY,KACZC,aAAc,MKnNrBL,QAAAC,eAAW6F,EAAAlG,UAAA,SLgOJM,IKhOP,WAEC,MAAOb,MAAKsJ,SAASC,MAAMvJ,KAAKwJ,QLiO1BlG,IK9NP,SAAiBmG,GAEhB,GAAIzJ,KAAK0J,QAAUD,EAClB,MAEDzJ,MAAK0J,OAASD,CAEdzJ,MAAK2J,WAAWF,EAAIzJ,KAAKsJ,SAASC,QL6N5BxI,WAAY,KACZC,aAAc,MKxNrBL,QAAAC,eAAW6F,EAAAlG,UAAA,UL8NJM,IK9NP,WAEC,IAAKb,KAAK4J,QACT5J,KAAK4J,QAAU,GAAI3D,EAEpBjG,MAAK4J,QAAQC,EAAI7J,KAAK8J,SACtB9J,MAAK4J,QAAQG,EAAI/J,KAAKgK,SACtBhK,MAAK4J,QAAQK,EAAIjK,KAAKkK,SAEtB,OAAOlK,MAAK4J,SL6NNtG,IK1NP,SAAkByF,GAEjB/I,KAAK8J,UAAYf,EAAMc,CACvB7J,MAAKgK,UAAYjB,EAAMgB,CACvB/J,MAAKkK,UAAYnB,EAAMkB,GL2NjBlJ,WAAY,KACZC,aAAc,MKzHrBL,QAAAC,eAAW6F,EAAAlG,UAAA,ULsNJM,IKtNP,WAEC,MAAOb,MAAKsJ,SAASa,OAAOnK,KAAKoK,QLuN3B9G,IKpNP,SAAkBmG,GAEjB,GAAIzJ,KAAKqK,SAAWZ,EACnB,MAEDzJ,MAAKqK,QAAUZ,CAEfzJ,MAAKsK,WAAWb,EAAIzJ,KAAKsJ,SAASa,SLmN5BpJ,WAAY,KACZC,aAAc,MKzMrBL,QAAAC,eAAW6F,EAAAlG,UAAA,SLoNJM,IKpNP,WAEC,GAAIb,KAAKuK,SACR,MAAOvK,MAAKuK,SAASC,cAAcxK,KAEpC,OAAO,ILoNDe,WAAY,KACZC,aAAc,MK/MrBL,QAAAC,eAAW6F,EAAAlG,UAAA,yBLqNJM,IKrNP,WAEC,GAAIb,KAAKyK,4BAA6B,CACrCzK,KAAKmH,uBAAuBuD,SAAS1K,KAAK2K,eAC1C3K,MAAKmH,uBAAuByD,QAC5B5K,MAAKyK,4BAA8B,MAEpC,MAAOzK,MAAKmH,wBLsNNpG,WAAY,KACZC,aAAc,MKjNrBL,QAAAC,eAAW6F,EAAAlG,UAAA,YLuNJM,IKvNP,WAEC,MAAOb,MAAK+G,YLwNNhG,WAAY,KACZC,aAAc,MKnNrBL,QAAAC,eAAW6F,EAAAlG,UAAA,eLyNJM,IKzNP,WAEC,MAAOb,MAAKgH,eL0NNjG,WAAY,KACZC,aAAc,MK3MrBL,QAAAC,eAAW6F,EAAAlG,UAAA,cL2NJM,IK3NP,WAEC,MAAOb,MAAK6K,aL4NN9J,WAAY,KACZC,aAAc,MKzLrBL,QAAAC,eAAW6F,EAAAlG,UAAA,YL4LJM,IK5LP,WAEC,MAAOb,MAAK8H,WL6LNxE,IK1LP,SAAoByF,GAEnB,GAAI/I,KAAK8H,WAAaiB,EACrB,MAED/I,MAAK8H,UAAYiB,CAEjB/I,MAAKsH,gBAAkByB,EAAO/I,KAAK2C,IAAM,CAEzC3C,MAAK8K,mBLwLC/J,WAAY,KACZC,aAAc,MKvKrBL,QAAAC,eAAW6F,EAAAlG,UAAA,gBL0LJM,IK1LP,WAEC,MAAOb,MAAK0H,uBL2LNpE,IKxLP,SAAwByF,GAEvB,GAAI/I,KAAK0H,uBAAyBqB,EACjC,MAED/I,MAAK0H,sBAAwBqB,GLwLvBhI,WAAY,KACZC,aAAc,MK9KrBL,QAAAC,eAAW6F,EAAAlG,UAAA,ULwLJM,IKxLP,WAEC,MAAOb,MAAK+K,SLyLNhK,WAAY,KACZC,aAAc,MKhLrBL,QAAAC,eAAW6F,EAAAlG,UAAA,UL0LJM,IK1LP,WAEC,MAAOb,MAAKgL,SL2LNjK,WAAY,KACZC,aAAc,MK/KrBL,QAAAC,eAAW6F,EAAAlG,UAAA,QL4LJM,IK5LP,WAEO,MAAOb,MAAKiL,QL6LZ3H,IK1LJ,SAAgByF,GAEZ/I,KAAKiL,OAASlC,GL2LdhI,WAAY,KACZC,aAAc,MKtKrBL,QAAAC,eAAW6F,EAAAlG,UAAA,ULuLJM,IKvLP,WAEC,MAAOb,MAAKuK,ULwLNxJ,WAAY,KACZC,aAAc,MKnLrBL,QAAAC,eAAW6F,EAAAlG,UAAA,aLyLJM,IKzLP,WAEC,MAAOb,MAAKkL,oBL0LN5H,IKvLP,SAAqByF,GAEpB,GAAI/I,KAAKkL,oBAAsBnC,EAC9B,MAED/I,MAAKkL,mBAAqBnC,CAE1B/I,MAAKmL,WAAWnL,KAAKoL,QAASpL,KAAKuK,SAAUvK,KAAKuK,SAASc,oBAAsB,KAEjFrL,MAAKsL,cAAc,GAAI/E,GAAmBA,EAAmBgF,kBAAmBvL,QLqL1Ee,WAAY,KACZC,aAAc,MKhLrBL,QAAAC,eAAW6F,EAAAlG,UAAA,mBLsLJM,IKtLP,WAEC,MAAOb,MAAKwL,mBLuLNlI,IKpLP,SAA2ByF,GAE1B/I,KAAKwL,kBAAoBzC,GLqLnBhI,WAAY,KACZC,aAAc,MKhLrBL,QAAAC,eAAW6F,EAAAlG,UAAA,SLsLJM,IKtLP,WAEC,MAAOb,MAAKyL,QLuLNnI,IKnLP,SAAiBoI,GAEhB,GAAI1L,KAAKyL,QAAUzL,KAAKyL,OAAO5B,GAAK6B,EAAM7B,GAAK7J,KAAKyL,OAAO1B,GAAK2B,EAAM3B,GAAK/J,KAAKyL,OAAOxB,GAAKyB,EAAMzB,EACjG,MAED,KAAKyB,EAAO,CACX1L,KAAKyL,OAAS,IACdzL,MAAK2L,YAAc,SACb,CACN,IAAK3L,KAAKyL,OACTzL,KAAKyL,OAAS,GAAIxF,EAEnBjG,MAAKyL,OAAO5B,EAAI6B,EAAM7B,CACtB7J,MAAKyL,OAAO1B,EAAI2B,EAAM3B,CACtB/J,MAAKyL,OAAOxB,EAAIyB,EAAMzB,EAGvBjK,KAAKgJ,kCAAkC9C,EAAuB0F,kBLkLxD7K,WAAY,KACZC,aAAc,MKtJrBL,QAAAC,eAAW6F,EAAAlG,UAAA,QLmLJM,IKnLP,WAEC,MAAOb,MAAK6L,OLoLN9K,WAAY,KACZC,aAAc,MKjKrBL,QAAAC,eAAW6F,EAAAlG,UAAA,aL2KJM,IK3KP,WAEC,MAAOb,MAAKqI,WAAWyD,SAASjC,EAAEhE,EAAWkG,oBL4KvCzI,IKzKP,SAAqBmG,GAEpB,GAAIzJ,KAAK8J,WAAaL,EACrB,MAEDzJ,MAAKqI,WAAWyD,SAASjC,EAAIJ,EAAI5D,EAAWmG,kBAE5ChM,MAAKqI,WAAW4D,sBLwKVlL,WAAY,KACZC,aAAc,MK/JrBL,QAAAC,eAAW6F,EAAAlG,UAAA,aLyKJM,IKzKP,WAEC,MAAOb,MAAKqI,WAAWyD,SAAS/B,EAAElE,EAAWkG,oBL0KvCzI,IKvKP,SAAqBmG,GAEpB,GAAIzJ,KAAKgK,WAAaP,EACrB,MAEDzJ,MAAKqI,WAAWyD,SAAS/B,EAAIN,EAAI5D,EAAWmG,kBAE5ChM,MAAKqI,WAAW4D,sBLsKVlL,WAAY,KACZC,aAAc,MK7JrBL,QAAAC,eAAW6F,EAAAlG,UAAA,aLuKJM,IKvKP,WAEC,MAAOb,MAAKqI,WAAWyD,SAAS7B,EAAEpE,EAAWkG,oBLwKvCzI,IKrKP,SAAqBmG,GAEpB,GAAIzJ,KAAKkK,WAAaT,EACrB,MAEDzJ,MAAKqI,WAAWyD,SAAS7B,EAAIR,EAAI5D,EAAWmG,kBAE5ChM,MAAKqI,WAAW4D,sBLoKVlL,WAAY,KACZC,aAAc,MKtGrBL,QAAAC,eAAW6F,EAAAlG,UAAA,ULiHJM,IKjHP,WAEC,MAAOb,MAAKqI,WAAWnE,MAAM2F,GLkHvBvG,IK/GP,SAAkBmG,GAGjBzJ,KAAKkM,OAAS,IAEdlM,MAAKmM,WAAW1C,IL+GV1I,WAAY,KACZC,aAAc,MKrGrBL,QAAAC,eAAW6F,EAAAlG,UAAA,ULgHJM,IKhHP,WAEC,MAAOb,MAAKqI,WAAWnE,MAAM6F,GLiHvBzG,IK9GP,SAAkBmG,GAGjBzJ,KAAKqK,QAAU,IAEfrK,MAAKsK,WAAWb,IL8GV1I,WAAY,KACZC,aAAc,MKnGrBL,QAAAC,eAAW6F,EAAAlG,UAAA,UL+GJM,IK/GP,WAEC,MAAOb,MAAKqI,WAAWnE,MAAM+F,GLgHvB3G,IK7GP,SAAkBmG,GAGjBzJ,KAAK0J,OAAS,IAEd1J,MAAK2J,WAAWF,IL6GV1I,WAAY,KACZC,aAAc,MKvGrBL,QAAAC,eAAW6F,EAAAlG,UAAA,SL8GJM,IK9GP,WAEC,MAAOb,MAAKqI,WAAW+D,KAAKvC,GL+GtBvG,IK5GP,SAAiBmG,GAEhB,GAAIzJ,KAAKqM,OAAS5C,EACjB,MAEDzJ,MAAKqI,WAAW+D,KAAKvC,EAAIJ,CAEzBzJ,MAAKqI,WAAW4D,sBL2GVlL,WAAY,KACZC,aAAc,MKrGrBL,QAAAC,eAAW6F,EAAAlG,UAAA,SL4GJM,IK5GP,WAEC,MAAOb,MAAKqI,WAAW+D,KAAKrC,GL6GtBzG,IK1GP,SAAiBmG,GAEhB,GAAIzJ,KAAKsM,OAAS7C,EACjB,MAEDzJ,MAAKqI,WAAW+D,KAAKrC,EAAIN,CAEzBzJ,MAAKqI,WAAW4D,sBLyGVlL,WAAY,KACZC,aAAc,MKnGrBL,QAAAC,eAAW6F,EAAAlG,UAAA,SL0GJM,IK1GP,WAEC,MAAOb,MAAKqI,WAAW+D,KAAKnC,GL2GtB3G,IKxGP,SAAiBmG,GAEhB,GAAIzJ,KAAKuM,OAAS9C,EACjB,MAEDzJ,MAAKqI,WAAW+D,KAAKnC,EAAIR,CAEzBzJ,MAAKqI,WAAW4D,sBLuGVlL,WAAY,KACZC,aAAc,MKlGrBL,QAAAC,eAAW6F,EAAAlG,UAAA,SLwGJM,IKxGP,WAEC,MAAOb,MAAKoL,SLyGNrK,WAAY,KACZC,aAAc,MKpGrBL,QAAAC,eAAW6F,EAAAlG,UAAA,iBL0GJM,IK1GP,WAEC,GAAIb,KAAKwM,oBAAqB,CAC7B,GAAIxM,KAAKyL,QAAUzL,KAAKgI,eAAiB1G,EAAcE,YAAa,CACnExB,KAAKoH,eAAiBpH,KAAK2K,eAAe8B,gBAAgBzM,KAAK2L,iBAEzD,CACN3L,KAAK2K,eAAe+B,aAAa,EAAG1M,KAAKoH,gBAG1CpH,KAAKwM,oBAAsB,MAE5B,MAAOxM,MAAKoH,gBL0GNrG,WAAY,KACZC,aAAc,MKxGrBL,QAAAC,eAAW6F,EAAAlG,UAAA,kBL2GJM,IK3GP,WAEC,GAAIb,KAAK2M,wBAA0BzG,EAAuB0F,gBACzD5L,KAAK4M,uBAEN,OAAO5M,MAAK8G,kBL2GN/F,WAAY,KACZC,aAAc,MK9ErBL,QAAAC,eAAW6F,EAAAlG,UAAA,wBLoFJM,IKpFP,WAEC,MAAOb,MAAK6M,uBLqFN9L,WAAY,KACZC,aAAc,MKhFrBL,QAAAC,eAAW6F,EAAAlG,UAAA,gBLsFJM,IKtFP,WAEC,MAAOb,MAAK8M,eLuFNxJ,IKpFP,SAAwByF,GAEvB,GAAIA,GAAS/I,KAAK8M,cACjB,MAED9M,MAAK8M,cAAgB/D,CAErB/I,MAAKoJ,cLmFCrI,WAAY,KACZC,aAAc,MK3CrBL,QAAAC,eAAW6F,EAAAlG,UAAA,aLoFJM,IKpFP,WAEC,MAAOb,MAAKqI,YLqFNtH,WAAY,KACZC,aAAc,MK9ErBL,QAAAC,eAAW6F,EAAAlG,UAAA,WLsFJM,IKtFP,WAEC,MAAOb,MAAKqH,qBLuFN/D,IKpFP,SAAmByF,GAElB,GAAI/I,KAAKqH,qBAAuB0B,EAC/B,MAED/I,MAAKqH,oBAAsB0B,CAE3B/I,MAAKgJ,kCAAkC9C,EAAuB6G,ULmFxDhM,WAAY,KACZC,aAAc,MKjFrBL,QAAAC,eAAW6F,EAAAlG,UAAA,SLoFJM,IKpFP,WAEC,MAAOb,MAAKgN,gBLqFN1J,IKlFP,SAAiByF,GAEhB,GAAI/I,KAAKgN,gBAAkBjE,EAC1B,MAED/I,MAAKgN,eAAiBjE,CAGtB,IAAIA,GAAS,MAAQA,EAAM7L,OAAQ,CAClC,GAAI+P,GAAalE,EAAM7L,MACvB,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAC/BoM,EAAMpM,GAAGuQ,SAAW,KAGtBlN,KAAKgJ,kCAAkC9C,EAAuBiH,QLgFxDpM,WAAY,KACZC,aAAc,MKpErBL,QAAAC,eAAW6F,EAAAlG,UAAA,SLiFJM,IKjFP,WAEC,MAAOb,MAAKsJ,SAAS8D,MAAMpN,KAAKqN,QLkF1B/J,IK/EP,SAAiBmG,GAEhB,GAAIzJ,KAAKkM,QAAUzC,EAClB,MAEDzJ,MAAKkM,OAASzC,CAEdzJ,MAAKmM,WAAW1C,EAAIzJ,KAAKsJ,SAAS8D,QL8E5BrM,WAAY,KACZC,aAAc,MKlErBL,QAAAC,eAAW6F,EAAAlG,UAAA,KL+EJM,IK/EP,WAEC,MAAOb,MAAKqI,WAAWiF,SAASzD,GLgF1BvG,IK7EP,SAAamG,GAEZ,GAAIzJ,KAAKqI,WAAWiF,SAASzD,GAAKJ,EACjC,MAEDzJ,MAAKqI,WAAWkF,SAASC,QAAQ,IAAM/D,CAEvCzJ,MAAKqI,WAAWoF,sBL4EV1M,WAAY,KACZC,aAAc,MKhErBL,QAAAC,eAAW6F,EAAAlG,UAAA,KL6EJM,IK7EP,WAEC,MAAOb,MAAKqI,WAAWiF,SAASvD,GL8E1BzG,IK3EP,SAAamG,GAEZ,GAAIzJ,KAAKqI,WAAWiF,SAASvD,GAAKN,EACjC,MAEDzJ,MAAKqI,WAAWkF,SAASC,QAAQ,IAAM/D,CAEvCzJ,MAAKqI,WAAWoF,sBL0EV1M,WAAY,KACZC,aAAc,MKrDrBL,QAAAC,eAAW6F,EAAAlG,UAAA,KL2EJM,IK3EP,WAEC,MAAOb,MAAKqI,WAAWiF,SAASrD,GL4E1B3G,IKzEP,SAAamG,GAEZ,GAAIzJ,KAAKqI,WAAWiF,SAASrD,GAAKR,EACjC,MAEDzJ,MAAKqI,WAAWkF,SAASC,QAAQ,IAAM/D,CAEvCzJ,MAAKqI,WAAWoF,sBLwEV1M,WAAY,KACZC,aAAc,MK5CdyF,GAAAlG,UAAA+H,iBAAP,SAAwBoF,EAAaC,GAEpCjN,EAAAH,UAAM+H,iBAAgBrL,KAAA+C,KAAC0N,EAAMC,EAE7B,QAAQD,GACP,IAAKnH,GAAmBqH,cACvB5N,KAAK6N,sBAAwB,IAC7B,MACD,KAAKtH,GAAmBuH,uBACvB9N,KAAK+N,+BAAiC,IACtC,QAOItH,GAAAlG,UAAAmD,MAAP,WAEC,GAAIsK,GAA4B,GAAIvH,EAEpCzG,MAAKiO,OAAOD,EAEZ,OAAOA,GAGDvH,GAAAlG,UAAA0N,OAAP,SAAcD,GAEbA,EAAYE,UAAYlO,KAAKkL,kBAC7B8C,GAAYG,WAAanO,KAAK4I,WAC9BoF,GAAYtC,MAAQ1L,KAAKyL,MACzBuC,GAAYI,KAAOpO,KAAKiL,MACxB+C,GAAYK,aAAerO,KAAK0H,qBAChCsG,GAAYM,MAAQtO,KAAKsO,KACzBN,GAAYd,SAAWlN,KAAK8H,SAE5B,IAAI9H,KAAKgN,eACRgB,EAAYO,MAAQvO,KAAKgN,cAE1B,IAAIhN,KAAK8I,SACRkF,EAAYQ,QAAUxO,KAAK8I,SAASpF,MAAMsK,EAE3CA,GAAY3F,WAAWkF,SAAWvN,KAAKqI,WAAWkF,QAElD,IAAIvN,KAAKqI,WAAWa,eACnB8E,EAAY3J,UAAU6E,eAAiBlJ,KAAKqI,WAAWa,eAAexF,QAMjE+C,GAAAlG,UAAAU,QAAP,WAECjB,KAAKyO,gBAGChI,GAAAlG,UAAAkO,cAAP,WAEC,GAAIzO,KAAKuK,SACRvK,KAAKuK,SAASmE,YAAY1O,KAmB3BA,MAAKgN,eAAiB,KA2BhBvG,GAAAlG,UAAAoO,UAAP,SAAiBC,GAEhB,MAAO5O,MAAK6O,QAqBNpI,GAAAlG,UAAAuO,QAAP,SAAeF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEd,MAAO5O,MAAK6O,QAGNpI,GAAAlG,UAAA+I,OAAP,SAAcsF,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEb,GAAI5O,KAAK+O,eACR/O,KAAK+O,eAAeC,YAGrB,IAAIhP,KAAK4G,kBAAmB,CAC3B5G,KAAKiP,mBAGL,IAAIjP,KAAKkM,QAAU,KAClBlM,KAAKmM,WAAWnM,KAAKkM,OAAOlM,KAAKkP,YAAY9B,MAE9C,IAAIpN,KAAKqK,SAAW,KACnBrK,KAAKsK,WAAWtK,KAAKqK,QAAQrK,KAAKkP,YAAY/E,OAE/C,IAAInK,KAAK0J,QAAU,KAClB1J,KAAK2J,WAAW3J,KAAK0J,OAAO1J,KAAKkP,YAAY3F,OAG/C,GAAIqF,GAAyB,MAAQA,GAAyB5O,KAC7D,MAAOA,MAAKkP,WAEb,IAAIN,GAAyB5O,KAAKuK,SACjC,MAAOvK,MAAKqI,WAAWkF,SAAS4B,aAAanP,KAAKkP,iBAElD,OAAON,GAAsBQ,sBAAsBD,aAAanP,KAAK2K,eAAewE,aAAanP,KAAKkP,cAGjGzI,GAAAlG,UAAA8O,UAAP,SAAiBT,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEhB,GAAI5O,KAAK+O,eACR/O,KAAK+O,eAAeC,YAErB,IAAIhP,KAAK6G,qBACR7G,KAAKsP,sBAEN,OAAOtP,MAAKuP,eAoBN9I,GAAAlG,UAAAiP,cAAP,SAAqBC,EAAa3M,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,KAEjC9C,KAAK+H,cAAc2H,MAAMD,EAAM5F,EAAG4F,EAAM1F,EAAG,EAC3C,IAAI4F,GAAe3P,KAAKoP,sBAAsB3C,gBAAgBzM,KAAK+H,cAAe/H,KAAK+H,cAEvF,KAAKjF,EACJA,EAAS,GAAIkD,EAEdlD,GAAO+G,EAAI8F,EAAI9F,CACf/G,GAAOiH,EAAI4F,EAAI5F,CAEf,OAAOjH,GAqBD2D,GAAAlG,UAAAqP,gBAAP,SAAuBtC,GAEtB,MAAOtN,MAAKoP,sBAAsB3C,gBAAgBa,GAW5C7G,GAAAlG,UAAAsP,cAAP,SAAqBC,GAEpB,GAAIC,GAAaD,EAAIxG,QACrB,KAAIyG,EAAQ,MAAO,MACnB,IAAIC,GAAgB,GAAIhK,GAAM+J,EAAOlG,EAAEkG,EAAOhG,EAC9C,IAAIkG,GAAmB,GAAIjK,GAAM+J,EAAOlG,EAAEkG,EAAOhG,EAAEgG,EAAO5F,OAC1D,IAAI+F,GAAiB,GAAIlK,GAAM+J,EAAOlG,EAAEkG,EAAO3C,MAAM2C,EAAOhG,EAC5D,IAAIoG,GAAoB,GAAInK,GAAM+J,EAAOlG,EAAEkG,EAAO3C,MAAM2C,EAAOhG,EAAEgG,EAAO5F,OAExE6F,GAAUhQ,KAAKwP,cAAcM,EAAIM,cAAcJ,GAC/CC,GAAajQ,KAAKwP,cAAcM,EAAIM,cAAcH,GAClDC,GAAWlQ,KAAKwP,cAAcM,EAAIM,cAAcF,GAChDC,GAAcnQ,KAAKwP,cAAcM,EAAIM,cAAcD,GAEnD,IAAIE,GAAUrQ,KAAKsJ,QACnB,KAAI+G,EAAK,MAAO,MAGhB,IAAGL,EAAQnG,GAAKwG,EAAIC,MAAQN,EAAQnG,GAAKwG,EAAIC,MAAQN,EAAQjG,GAAKsG,EAAIE,KAAOP,EAAQjG,GAAKsG,EAAIG,OAAQ,MAAO,KAC7G,IAAGP,EAAWpG,GAAKwG,EAAIC,MAAQL,EAAWpG,GAAKwG,EAAIC,MAAQL,EAAWlG,GAAKsG,EAAIE,KAAON,EAAWlG,GAAKsG,EAAIG,OAAQ,MAAO,KACzH,IAAGN,EAASrG,GAAKwG,EAAIC,MAAQJ,EAASrG,GAAKwG,EAAIC,MAAQJ,EAASnG,GAAKsG,EAAIE,KAAOL,EAASnG,GAAKsG,EAAIG,OAAQ,MAAO,KACjH,IAAGL,EAAYtG,GAAKwG,EAAIC,MAAQH,EAAYtG,GAAKwG,EAAIC,MAAQH,EAAYpG,GAAKsG,EAAIE,KAAOJ,EAAYpG,GAAKsG,EAAIG,OAAQ,MAAO,KLcvH,IKXFC,GAAaP,EAASnG,EAAIiG,EAAQjG,CACtC,IAAI2G,KAAeR,EAASrG,EAAImG,EAAQnG,EAExC,IAAI8G,GAAaR,EAAYpG,EAAImG,EAASnG,CAC1C,IAAI6G,KAAeT,EAAYtG,EAAIqG,EAASrG,EAE5C,IAAIgH,GAAaZ,EAAWlG,EAAIoG,EAAYpG,CAC5C,IAAI+G,KAAeb,EAAWpG,EAAIsG,EAAYtG,EAE9C,IAAIkH,GAAaf,EAAQjG,EAAIkG,EAAWlG,CACxC,IAAIiH,KAAehB,EAAQnG,EAAIoG,EAAWpG,EAE1C,IAAIoH,GAAaZ,EAAIC,KAAON,EAAQnG,CACpC,IAAIqH,GAAab,EAAIE,IAAMP,EAAQjG,CACnC,IAAIoH,GAAad,EAAIC,KAAOJ,EAASrG,CACrC,IAAIuH,GAAaf,EAAIE,IAAML,EAASnG,CACpC,IAAIsH,GAAahB,EAAIC,KAAOH,EAAYtG,CACxC,IAAIyH,GAAajB,EAAIE,IAAMJ,EAAYpG,CACvC,IAAIwH,GAAalB,EAAIC,KAAOL,EAAWpG,CACvC,IAAI2H,GAAanB,EAAIE,IAAMN,EAAWlG,CAEtC,IAAI0H,GAAehB,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIQ,GAAef,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIO,GAAed,EAAIQ,EAAMP,EAAIQ,CACjC,IAAIM,GAAeb,EAAIQ,EAAMP,EAAIQ,CAGjC,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMZ,EAAIwB,MAAQ7B,EAAQnG,CAC1BqH,GAAMb,EAAIE,IAAMP,EAAQjG,CACxBoH,GAAMd,EAAIwB,MAAQ3B,EAASrG,CAC3BuH,GAAMf,EAAIE,IAAML,EAASnG,CACzBsH,GAAMhB,EAAIwB,MAAQ1B,EAAYtG,CAC9ByH,GAAMjB,EAAIE,IAAMJ,EAAYpG,CAC5BwH,GAAMlB,EAAIwB,MAAQ5B,EAAWpG,CAC7B2H,GAAMnB,EAAIE,IAAMN,EAAWlG,CAE3B0H,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMZ,EAAIC,KAAON,EAAQnG,CACzBqH,GAAMb,EAAIG,OAASR,EAAQjG,CAC3BoH,GAAMd,EAAIC,KAAOJ,EAASrG,CAC1BuH,GAAMf,EAAIG,OAASN,EAASnG,CAC5BsH,GAAMhB,EAAIC,KAAOH,EAAYtG,CAC7ByH,GAAMjB,EAAIG,OAASL,EAAYpG,CAC/BwH,GAAMlB,EAAIC,KAAOL,EAAWpG,CAC5B2H,GAAMnB,EAAIG,OAASP,EAAWlG,CAE9B0H,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExDX,GAAMZ,EAAIwB,MAAQ7B,EAAQnG,CAC1BqH,GAAMb,EAAIG,OAASR,EAAQjG,CAC3BoH,GAAMd,EAAIwB,MAAQ3B,EAASrG,CAC3BuH,GAAMf,EAAIG,OAASN,EAASnG,CAC5BsH,GAAMhB,EAAIwB,MAAQ1B,EAAYtG,CAC9ByH,GAAMjB,EAAIG,OAASL,EAAYpG,CAC/BwH,GAAMlB,EAAIwB,MAAQ5B,EAAWpG,CAC7B2H,GAAMnB,EAAIG,OAASP,EAAWlG,CAE9B0H,GAAQhB,EAAIQ,EAAMP,EAAIQ,CACtBQ,GAAQf,EAAIQ,EAAMP,EAAIQ,CACtBO,GAAQd,EAAIQ,EAAMP,EAAIQ,CACtBM,GAAQb,EAAIQ,EAAMP,EAAIQ,CAGtB,IAAGC,EAAO,GAAKC,EAAO,GAAKC,EAAO,GAAKC,EAAO,EAAG,MAAO,KAExD,OAAO,OAqBDnL,GAAAlG,UAAAuR,aAAP,SAAoBjI,EAAUE,EAAUgI,EAA2BC,GAA3B,GAAAD,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,MAElE,MAAO,OAGDvL,GAAAlG,UAAA0R,OAAP,WAEC,MAAOjS,MAAKsH,kBAAoB,EAS1Bb,GAAAlG,UAAA2R,OAAP,SAAcpP,EAAiBqP,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAG9B,GAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIJ,GAAU,KACbA,EAASlM,EAASuM,WAElBL,GAAOM,WAERJ,GAAQvP,EAAO4P,SAAS1S,KAAKqI,WAAWiF,SACxC+E,GAAMI,WAENH,GAAQH,EAAOQ,aAAaN,EAC5BC,GAAMG,WAEN,IAAIH,EAAMpV,OAAS,IAAM,CACxBoV,EAAMzI,EAAIsI,EAAOpI,CACjBuI,GAAMvI,EAAIoI,EAAOtI,CACjByI,GAAMrI,EAAI,CACVqI,GAAMG,YAGPL,EAAQC,EAAMM,aAAaL,EAE3BC,GAAMxM,EAAc6M,kBAEpBL,GAAI,GAAKD,EAAMzI,CACf0I,GAAI,GAAKD,EAAMvI,CACfwI,GAAI,GAAKD,EAAMrI,CACfsI,GAAI,GAAK,CAETA,GAAI,GAAKH,EAAMvI,CACf0I,GAAI,GAAKH,EAAMrI,CACfwI,GAAI,GAAKH,EAAMnI,CACfsI,GAAI,GAAK,CAETA,GAAI,GAAKF,EAAMxI,CACf0I,GAAI,GAAKF,EAAMtI,CACfwI,GAAI,IAAMF,EAAMpI,CAChBsI,GAAI,IAAM,CAEV,IAAIM,GAAa,GAAI/M,EACrB+M,GAAEC,gBAAgBP,EAElB,IAAIQ,GAAeF,EAAEG,YAAY,EAEjChT,MAAK8J,UAAYiJ,EAAIlJ,EAAEhE,EAAWkG,kBAClC/L,MAAKgK,UAAY+I,EAAIhJ,EAAElE,EAAWkG,kBAClC/L,MAAKkK,UAAY6I,EAAI9I,EAAEpE,EAAWkG,mBA0B5BtF,GAAAlG,UAAA6P,cAAP,SAAqBX,EAAa3M,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,KAEjC9C,KAAK+H,cAAc2H,MAAMD,EAAM5F,EAAG4F,EAAM1F,EAAG,EAC3C,IAAI4F,GAAe3P,KAAK2K,eAAe8B,gBAAgBzM,KAAK+H,cAAe/H,KAAK+H,cAEhF,KAAKjF,EACJA,EAAS,GAAIkD,EAEdlD,GAAO+G,EAAI8F,EAAI9F,CACf/G,GAAOiH,EAAI4F,EAAI5F,CAEf,OAAOjH,GA4BD2D,GAAAlG,UAAA0S,gBAAP,SAAuB3F,GAEtB,MAAOtN,MAAK2K,eAAe8B,gBAAgBa,GAUrC7G,GAAAlG,UAAA2S,UAAP,SAAiBC,EAAWC,EAAWC,GAEtC,GAAIF,GAAM,GAAKC,GAAM,GAAKC,GAAM,EAC/B,MAEDrT,MAAKyL,OAAO5B,GAAKsJ,CACjBnT,MAAKyL,OAAO1B,GAAKqJ,CACjBpT,MAAKyL,OAAOxB,GAAKoJ,CAEjBrT,MAAKgJ,kCAAkC9C,EAAuB0F,iBAGxDnF,GAAAlG,UAAA+S,MAAP,WAECtT,KAAKuT,QAAU,IAEf,IAAGvT,KAAKqI,WAAWkF,SAClBvN,KAAKqI,WAAWmL,eAEjB,IAAGxT,KAAKqI,WAAWa,eAClBlJ,KAAKqI,WAAWoL,qBAGjBzT,MAAKuO,MAAQ,IAEbvO,MAAKkN,SAAW,MAKVzG,GAAAlG,UAAAmT,wBAAP,SAA+BC,GAE9B,GAAI3T,KAAKkI,iBAAmB9B,EAAgBwN,aAAc,CACzD,GAAIC,GAAwBF,EAAOhJ,eAAeqI,WAClD,IAAI9O,GAAiB2P,EAAM,EAC3BA,GAAM,GAAGnJ,SAAS1K,KAAK8T,cACvB5P,GAAM2F,EAAI7J,KAAKqN,MACfnJ,GAAM6F,EAAI/J,KAAKoK,MACflG,GAAM+F,EAAIjK,KAAKwJ,MACfxJ,MAAK4H,mBAAmBmM,UAAUF,EAGlC,IAAI7T,KAAKyL,QAAUzL,KAAKgI,eAAiB1G,EAAcE,YACtDxB,KAAK4H,mBAAmBoM,oBAAoBhU,KAAKyL,OAAO5B,EAAE7J,KAAKqN,QAASrN,KAAKyL,OAAO1B,EAAE/J,KAAKoK,QAASpK,KAAKyL,OAAOxB,EAAEjK,KAAKwJ,OAExH,OAAOxJ,MAAK4H,mBAGb,MAAO5H,MAAK2K,eAMNlE,GAAAlG,UAAA0T,oBAAP,SAA2BvG,EAAaC,GAEvCjN,EAAAH,UAAM0T,oBAAmBhX,KAAA+C,KAAC0N,EAAMC,EAEhC,IAAI3N,KAAKkU,iBAAiBxG,GACzB,MAED,QAAQA,GACP,IAAKnH,GAAmBqH,cACvB5N,KAAK6N,sBAAwB,KAC7B,MACD,KAAKtH,GAAmBuH,uBACvB9N,KAAK+N,+BAAiC,IACtC,QAYHpN,QAAAC,eAAW6F,EAAAlG,UAAA,uBL9CJM,IK8CP,WAEC,MAAOb,MAAKmU,qBL7CNpT,WAAY,KACZC,aAAc,MKkDrBL,QAAAC,eAAW6F,EAAAlG,UAAA,wBL5CJM,IK4CP,WAEC,IAAKb,KAAKoU,qBACTpU,KAAKoU,qBAAuB,GAAI9N,GAAmBtG,KAEpD,OAAOA,MAAKoU,sBL5CNrT,WAAY,KACZC,aAAc,MKiDdyF,GAAAlG,UAAA8T,WAAP,SAAkBtL,GAEjB/I,KAAKuK,SAAWxB,CAEV,IAAIA,EACT/I,KAAKmL,WAAWpC,EAAMqC,QAASrC,EAAMsC,yBAErCrL,MAAKmL,WAAW,KAAM,KAEvBnL,MAAKgJ,kCAAkC9C,EAAuBoO,KAGxD7N,GAAAlG,UAAAyI,kCAAP,SAAyCuL,GAExC,GAAIC,IAAuBxU,KAAK2M,wBAA0B4H,GAAaA,CACvE,KAAKC,EACJ,MAAO,KAERxU,MAAK2M,yBAA2B4H,CAEhC,IAAIC,EAAetO,EAAuB0F,gBAAiB,CAC1D5L,KAAKyK,4BAA8B,IACnCzK,MAAKwM,oBAAsB,IAE3B,IAAIxM,KAAKyU,SACRzU,KAAK0U,2BAEN,IAAI1U,KAAKuK,SACRvK,KAAKuK,SAASlB,oBAEf,IAAIrJ,KAAK+N,+BACR/N,KAAK2U,cAAc3U,KAAK4U,yBAA2B5U,KAAK4U,uBAAyB,GAAIrO,GAAmBA,EAAmBuH,uBAAwB9N,QAGrJ,MAAO,OAMDyG,GAAAlG,UAAA4K,WAAP,SAAkB0J,EAAa3G,GAE9B,GAAI4G,GAAuB9U,KAAKoL,SAAWyJ,CAE3C,IAAI7U,KAAKoL,SAAWpL,KAAKmU,oBAAqB,CAE7CnU,KAAKoL,QAAQ2J,sBAAsB/U,KAAKmU,oBAGxCnU,MAAKmU,oBAAoBa,mBAAmBhV,KAG5CA,MAAKiV,QAINjV,KAAKmU,oBAAsBnU,KAAKkL,oBAAsBgD,CAGtD,IAAI4G,EACH9U,KAAKoL,QAAUyJ,CAEhB,IAAI7U,KAAKoL,SAAWpL,KAAKmU,oBAAqB,CAE7CnU,KAAKoL,QAAQ8J,oBAAoBlV,KAAKmU,oBAGtCnU,MAAKmU,oBAAoBgB,iBAAiBnV,MAG3C,GAAI8U,GAAgB9U,KAAK6N,sBACxB7N,KAAK2U,cAAc3U,KAAKoV,gBAAkBpV,KAAKoV,cAAgB,GAAI7O,GAAmBA,EAAmBqH,cAAe5N,QAMnHyG,GAAAlG,UAAAqM,sBAAP,WAEC,GAAI5M,KAAKqV,aACRrV,KAAKqV,aAAaC,kBAEnBtV,MAAK8G,iBAAiB4D,SAAS1K,KAAKqI,WAAWkF,SAE/C,IAAIvN,KAAKyL,OAAQ,CAChB,IAAKzL,KAAK2L,YACT3L,KAAK2L,YAAc,GAAI1F,EAExBjG,MAAK2L,YAAY9B,EAAI7J,KAAKyL,OAAO5B,EAAE7J,KAAKqI,WAAWnE,MAAM2F,CACzD7J,MAAK2L,YAAY5B,EAAI/J,KAAKyL,OAAO1B,EAAE/J,KAAKqI,WAAWnE,MAAM6F,CACzD/J,MAAK2L,YAAY1B,EAAIjK,KAAKyL,OAAOxB,EAAEjK,KAAKqI,WAAWnE,MAAM+F,CACzDjK,MAAK8G,iBAAiBkN,oBAAoBhU,KAAK2L,YAAY9B,GAAI7J,KAAK2L,YAAY5B,GAAI/J,KAAK2L,YAAY1B,EACrG,IAAIjK,KAAKgI,eAAiB1G,EAAcE,YACvCxB,KAAK8G,iBAAiByO,kBAAkBvV,KAAKyL,OAAO5B,EAAG7J,KAAKyL,OAAO1B,EAAG/J,KAAKyL,OAAOxB,GAIpF,GAAIjK,KAAKuK,WAAavK,KAAKuK,SAASiL,SACnCxV,KAAK8G,iBAAiB2O,OAAOzV,KAAKuK,SAASI,eAE5C3K,MAAK0V,eAAiB,KACtB1V,MAAK2V,eAAiB,KACtB3V,MAAK4V,eAAiB,KACtB5V,MAAK6V,WAAa,KAClB7V,MAAK8V,YAAc,KAEnB9V,MAAK2M,yBAA2BzG,EAAuB0F,gBAYjDnF,GAAAlG,UAAA+D,gBAAP,SAAuBI,EAAkCqR,GAExD,MAAO,OAMDtP,GAAAlG,UAAAyV,iBAAP,WAEC,GAAIhW,KAAKqV,aACRrV,KAAKqV,aAAaY,QL5Eb,IK+EFhJ,GAAajN,KAAK2G,cAAczJ,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjCqD,KAAKsL,cAActL,KAAK2G,cAAchK,GAEvCqD,MAAK2G,cAAczJ,OAAS,EAMtBuJ,GAAAlG,UAAA2V,YAAP,WAEC,GAAIlW,KAAK2M,wBAA0BzG,EAAuB6G,QACzD/M,KAAKmW,gBAEN,OAAOnW,MAAKuH,qBAMNd,GAAAlG,UAAA6V,iBAAP,WAEC,GAAIpW,KAAK2M,wBAA0BzG,EAAuBmQ,QACzDrW,KAAKsW,eAEN,OAAOtW,MAAKwH,iBAMNf,GAAAlG,UAAAgW,gBAAP,WAEC,GAAIvW,KAAK2M,wBAA0BzG,EAAuBiH,MACzDnN,KAAKwW,cAEN,OAAOxW,MAAKyW,gBAGNhQ,GAAAlG,UAAAmW,cAAP,WAEC,GAAI1W,KAAK2M,wBAA0BzG,EAAuBiH,MACzDnN,KAAKwW,cAEN,OAAOxW,MAAKyH,kBAGNhB,GAAAlG,UAAAoW,yBAAP,WAEC,GAAI3W,KAAK2M,wBAA0BzG,EAAuB+C,gBACzDjJ,KAAK4W,uBAEN,OAAO5W,MAAK6W,yBAONpQ,GAAAlG,UAAAuW,iBAAP,WAEC,GAAI9W,KAAK2M,wBAA0BzG,EAAuB6Q,cACzD/W,KAAKgX,qBAEN,OAAOhX,MAAK2H,wBAA0B3H,KAAK0H,sBAGrCjB,GAAAlG,UAAA0W,eAAP,SAAsBC,IAUdzQ,GAAAlG,UAAAkI,sBAAR,SAA8BD,GAE7B,GAAIxI,KAAK0V,eACR,MAED1V,MAAK0V,eAAiB,IAEtB1V,MAAKgJ,kCAAkC9C,EAAuB0F,iBAMvDnF,GAAAlG,UAAAoI,4BAAR,SAAoCH,GAEnCxI,KAAKgJ,kCAAkC9C,EAAuB+C,iBAGxDxC,GAAAlG,UAAA8I,mBAAP,WAECrJ,KAAK4G,kBAAoB,IACzB5G,MAAK6G,qBAAuB,IAE5B,IAAI7G,KAAKyU,SACRzU,KAAK0U,2BAEN,IAAI1U,KAAKuK,SACRvK,KAAKuK,SAASlB,qBAGT5C,GAAAlG,UAAA0O,kBAAP,WAECjP,KAAK4G,kBAAoB,KAEzB,IAAI5G,KAAKkP,aAAe,KACvBlP,KAAKkP,YAAc,GAAIxJ,GAGlBe,GAAAlG,UAAA+O,qBAAP,WAECtP,KAAK6G,qBAAuB,KAE5B,IAAI7G,KAAKuP,gBAAkB,KAC1BvP,KAAKuP,eAAiB,GAAI3J,GAGpBa,GAAAlG,UAAAoU,cAAR,SAAsBnM,GAGrBxI,KAAK2G,cAAcrB,KAAKkD,GAGjB/B,GAAAlG,UAAA4L,WAAR,SAAmB1C,GAElB,GAAIzJ,KAAKqN,QAAU5D,EAClB,MAEDzJ,MAAKqI,WAAWnE,MAAM2F,EAAIJ,CAE1BzJ,MAAKqI,WAAW4D,qBAGTxF,GAAAlG,UAAA+J,WAAR,SAAmBb,GAElB,GAAIzJ,KAAKoK,QAAUX,EAClB,MAEDzJ,MAAKqI,WAAWnE,MAAM6F,EAAIN,CAE1BzJ,MAAKqI,WAAW4D,qBAGTxF,GAAAlG,UAAAoJ,WAAR,SAAmBF,GAElB,GAAIzJ,KAAKwJ,QAAUC,EAClB,MAEDzJ,MAAKqI,WAAWnE,MAAM+F,EAAIR,CAE1BzJ,MAAKqI,WAAW4D,qBAGVxF,GAAAlG,UAAAyW,oBAAP,WAEChX,KAAK2H,uBAA0B3H,KAAa,SAAGA,KAAKuK,SAAS4M,eAAiBnX,KAAKuK,SAAS5C,uBAAyB,IAGrH,IAAI3H,KAAK2H,wBAA0B3H,KAAKuK,WAAavK,KAAKwL,kBACzDxL,KAAKwL,kBAAqBxL,KAAKuK,SAASiB,iBAEzCxL,MAAK2M,yBAA2BzG,EAAuB6Q;CAGhDtQ,GAAAlG,UAAA4V,eAAR,WAECnW,KAAKuH,qBAAwBvH,KAAa,SAAGA,KAAKqH,qBAAuBrH,KAAKuK,SAAS2L,cAAgBlW,KAAKqH,mBAE5GrH,MAAK2M,yBAA2BzG,EAAuB6G,QAGhDtG,GAAAlG,UAAA+V,cAAR,WAECtW,KAAKwH,iBAAoBxH,KAAKuK,UAAYvK,KAAKuK,SAAS6L,qBAAuB,EAAIpW,KAAKuK,SAAS6L,mBAAqBpW,KAAKsH,eAE3HtH,MAAK2M,yBAA2BzG,EAAuBmQ,QAGhD5P,GAAAlG,UAAAiW,aAAR,WAECxW,KAAKyW,gBAAmBzW,KAAKuK,UAAYvK,KAAKuK,SAASgM,kBAAqBvW,KAAKgN,gBAAkB,KAAOhN,KAAKuK,SAASgM,kBAAkBa,QAAQpX,KAAKgN,iBAAmBhN,KAAKuK,SAASgM,kBAAkBa,SAAYpX,KAAKgN,gBAAkB,MAAQhN,KAAKgN,gBAAkB,IAE5QhN,MAAKyH,kBAAkBvK,OAAS,CAEhC,IAAI8C,KAAKyW,iBAAmBzW,KAAKyW,gBAAgBvZ,OAAQ,CACxD,GAAIma,GAAmBrX,KAAKyW,gBAAgBvZ,MAC5C,IAAIoa,EACJ,IAAIC,EACJ,IAAIC,EACJ,KAAK,GAAI7a,GAAW,EAAGA,EAAI0a,EAAW1a,IAAK,CAC1C4a,EAAmBvX,KAAKyW,gBAAgB9Z,EACxC2a,GAAcC,EAAiBra,MAC/Bsa,GAAmB,GAAItV,MACvB,KAAK,GAAIuV,GAAW,EAAGA,EAAIH,EAAaG,IACvCD,EAAiBlS,KAAKiS,EAAiBE,GAAG9U,GAE3C3C,MAAKyH,kBAAkBnC,KAAKkS,IAI9BxX,KAAK2M,yBAA2BzG,EAAuBiH,MAGhD1G,GAAAlG,UAAAqW,sBAAR,WAEC,IAAK5W,KAAK6W,yBACT7W,KAAK6W,yBAA2B,GAAIlR,EAErC,IAAI3F,KAAK6H,wBAA0B7H,KAAKuK,UAAYvK,KAAKuK,SAASoM,2BAA4B,CAC7F3W,KAAK6W,yBAAyBnM,SAAS1K,KAAKuK,SAASoM,2BAErD,IAAI3W,KAAKqI,WAAWa,eACnBlJ,KAAK6W,yBAAyBa,QAAQ1X,KAAKqI,WAAWa,oBACjD,CACN,GAAIlJ,KAAKqI,WAAWa,eACnBlJ,KAAK6W,yBAAyBnM,SAAS1K,KAAKqI,WAAWa,oBAEvDlJ,MAAK6W,yBAAyB5B,QAGhCjV,KAAK2M,yBAA2BzG,EAAuB+C,gBAGjDxC,GAAAlG,UAAAuK,gBAAP,WAEC,GAAI9K,KAAKkN,SACRlN,KAAKqO,aAAe,KAErBrO,MAAKgJ,kCAAkC9C,EAAuBmQ,SAGxD5P,GAAAlG,UAAA0U,MAAP,WAECvU,EAAAH,UAAM0U,MAAKhY,KAAA+C,KAEX,IAAIrD,EAEJ,IAAIqD,KAAKoU,qBAAsB,CAC9BpU,KAAKoU,qBAAqBnT,SAC1BjB,MAAKoU,qBAAuB,KAG7BpU,KAAK6W,yBAA2B,IAChC7W,MAAKyW,gBAAkB,KAGjBhQ,GAAAlG,UAAAmU,0BAAP,WAEC1U,KAAKsL,cAAc,GAAI/E,GAAmBA,EAAmBoR,4BAA6B3X,OAE5F,OAAAyG,IA5sE4BjG,EA8sELpD,GAAAJ,QAAdyJ,IL/JNmR,2BAA2BxW,UAAUyW,sCAAsCzW,UAAU0W,kCAAkC1W,UAAU2W,gCAAgC3W,UAAU4W,qCAAqC5W,UAAU6W,6BAA6B7W,UAAU8W,8BAA8B9W,UAAU+W,gCAAgC/W,UAAUD,oCAAoCC,UAAUC,wCAAwC,wCAAwC+W,iDAAiD,iDAAiDC,0CAA0C,0CAA0CC,oCAAoC,oCAAoCC,uCAAuC,uCAAuCC,+CAA+C,+CAA+CC,2CAA2C,2CAA2CC,6CAA6C,+CAA+CC,oCAAoC,SAASzc,EAAQkB,EAAOJ,GAC5mC,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GM1tEtB,IAAOG,GAAStE,EAAc,oCAG9B,IAAO0c,GAAa1c,EAAa,0CNyuEjC,IMztEM2c,GAAQ,SAAAnY,GAASX,EAAjB8Y,EAAQnY,EAsBb,SAtBKmY,KAwBJnY,EAAAzD,KAAA+C,KApBOA,MAAA8Y,eAAwC,GAAI5W,OAEpDvB,OAAAC,eAAWiY,EAAAtY,UAAA,aN6tEJM,IM7tEP,WAEC,MAAOgY,GAAS3X,WN8tEVH,WAAY,KACZC,aAAc,MMztErBL,QAAAC,eAAWiY,EAAAtY,UAAA,iBN+tEJM,IM/tEP,WAEC,MAAOb,MAAK8Y,gBNguEN/X,WAAY,KACZC,aAAc,MMttEd6X,GAAAtY,UAAA6D,oBAAP,SAA2BC,GAE1B,GAAI4I,GAAajN,KAAK8Y,eAAe5b,MACrC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjCqD,KAAK8Y,eAAenc,GAAGyH,oBAAoBC,GAOtCwU,GAAAtY,UAAAwY,eAAP,SAAsB5T,GAErBnF,KAAK8Y,eAAexT,KAAKH,EAEzBA,GAAY6T,eAAiBhZ,IAE7B,IAAIA,KAAKkU,iBAAiB0E,EAAcK,oBACvCjZ,KAAKsL,cAAc,GAAIsN,GAAcA,EAAcK,mBAAoB9T,GAExEnF,MAAKkZ,kBAAkB/T,GAOjB0T,GAAAtY,UAAA4Y,kBAAP,SAAyBhU,GAExBnF,KAAK8Y,eAAeM,OAAOpZ,KAAK8Y,eAAeO,QAAQlU,GAAc,EAErEA,GAAYlE,SAEZ,IAAIjB,KAAKkU,iBAAiB0E,EAAcU,sBACvCtZ,KAAKsL,cAAc,GAAIsN,GAAcA,EAAcU,qBAAsBnU,GAE1EnF,MAAKkZ,kBAAkB/T,GAOjB0T,GAAAtY,UAAAmD,MAAP,WAEC,GAAIA,GAAiB,GAAImV,EACzB,IAAI5L,GAAajN,KAAK8Y,eAAe5b,MAErC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjC+G,EAAMqV,eAAe/Y,KAAK8Y,eAAenc,GAAG+G,QAE7C,OAAOA,GAODmV,GAAAtY,UAAA2D,MAAP,SAAaA,GAEZ,GAAIqV,GAAqBvZ,KAAK8Y,eAAe5b,MAC7C,KAAK,GAAIP,GAAW,EAAGA,EAAI4c,IAAe5c,EACzCqD,KAAK8Y,eAAenc,GAAGuH,MAAMA,GAMxB2U,GAAAtY,UAAAU,QAAP,WAEC,IAAK,GAAItE,GAAWqD,KAAK8Y,eAAe5b,OAAS,EAAGP,GAAG,EAAGA,IACzDqD,KAAKmZ,kBAAkBnZ,KAAK8Y,eAAenc,IAQtCkc,GAAAtY,UAAAuD,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjC,GAAIuV,GAAqBvZ,KAAK8Y,eAAe5b,MAE7C,KAAK,GAAIP,GAAW,EAAGA,EAAI4c,IAAe5c,EACzCqD,KAAK8Y,eAAenc,GAAGmH,QAAQC,EAAQC,GAGlC6U,GAAAtY,UAAA2Y,kBAAP,SAAyBM,GAExB,GAAIxZ,KAAKkU,iBAAiB0E,EAAca,gBACvCzZ,KAAKsL,cAAc,GAAIsN,GAAcA,EAAca,eAAgBD,IAnHvDX,GAAA3X,UAAmB,kBAqHlC,OAAA2X,IAvHuBrY,EAyHLpD,GAAAJ,QAAT6b,INqsEN1X,oCAAoCC,UAAUsY,0CAA0C,4CAA4CtB,kDAAkD,SAASlc,EAAQkB,EAAOJ,GAIjN,GOn1EMkJ,GAAsB,WAA5B,QAAMA,MAKSA,EAAA6Q,cAAuB,CAKvB7Q,GAAA6G,QAAiB,CAKjB7G,GAAAmQ,QAAiB,CAKjBnQ,GAAAiH,MAAe,CAKfjH,GAAA+C,gBAAyB,EAKzB/C,GAAA0F,gBAAyB,EAKzB1F,GAAAoO,IAAa,EAC5B,OAAApO,KAEA9I,GAAgCJ,QAAvBkJ,OPg1EHyT,2CAA2C,SAASzd,EAAQkB,EAAOJ,SAEnE4c,wCAAwC,SAAS1d,EAAQkB,EAAOJ,SAEhE6c,4CAA4C,SAAS3d,EAAQkB,EAAOJ,SAEpE8c,yCAAyC,SAAS5d,EAAQkB,EAAOJ,SAEjE+c,oCAAoC,SAAS7d,EAAQkB,EAAOJ,SAE5Dgd,qCAAqC,SAAS9d,EAAQkB,EAAOJ,GACnE,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GQv4EtB,IAAO4Z,GAAmB/d,EAAY,6CAEtC,IAAOge,GAAsBhe,EAAW,uDAGxC,IAAOie,GAAUje,EAAc,uCAG/B,IAAMke,GAAS,SAAA1Z,GAASX,EAAlBqa,EAAS1Z,EA2Bd,SA3BK0Z,KA6BJ1Z,EAAAzD,KAAA+C,KA3BOA,MAAAqa,OAAgB,QAChBra,MAAAsa,QAAiB,CACjBta,MAAAua,QAAiB,CACjBva,MAAAwa,QAAiB,CAEjBxa,MAAAya,cAAuB,QACvBza,MAAA0a,SAAkB,CACnB1a,MAAA2a,WAAoB,CACpB3a,MAAA4a,WAAoB,CACpB5a,MAAA6a,WAAoB,CAEnB7a,MAAA8a,UAAmB,CACpB9a,MAAA+a,YAAqB,CACrB/a,MAAAgb,YAAqB,CACrBhb,MAAAib,YAAqB,CAEpBjb,MAAAkb,SAAkB,CACnBlb,MAAAmb,WAAoB,CACpBnb,MAAAob,WAAoB,CACpBpb,MAAAqb,WAAoB,CAEnBrb,MAAAsb,cAAwB,MAShC3a,OAAAC,eAAWwZ,EAAA7Z,UAAA,gBR43EJM,IQ53EP,WAEC,MAAOb,MAAKsb,eR63ENhY,IQ13EP,SAAwByF,GAEvB,GAAI/I,KAAKsb,eAAiBvS,EACzB,MAED/I,MAAKsb,cAAgBvS,CAErB,IAAIA,EAAO,CACV,GAAI/I,KAAKub,eAAiB,KACzBvb,KAAKub,cAAgBvb,KAAKwb,qBAE3Bxb,MAAKub,cAAcE,MAAQzb,SACrB,CACNA,KAAKub,cAActa,SACnBjB,MAAKub,cAAgB,KAGtBvb,KAAKsL,cAAc,GAAI6O,GAAWA,EAAWuB,uBRy3EvC3a,WAAY,KACZC,aAAc,MQv3EdoZ,GAAA7Z,UAAAib,oBAAP,WAEC,KAAM,IAAIvB,GAGXtZ,QAAAC,eAAWwZ,EAAA7Z,UAAA,YRw3EJM,IQx3EP,WAEC,MAAOb,MAAK8a,WRy3ENxX,IQt3EP,SAAoByF,GAEnB,GAAIA,EAAQ,EACXA,EAAQ,CAET/I,MAAK8a,UAAY/R,CACjB/I,MAAK2b,kBRs3EC5a,WAAY,KACZC,aAAc,MQp3ErBL,QAAAC,eAAWwZ,EAAA7Z,UAAA,WRu3EJM,IQv3EP,WAEC,MAAOb,MAAKkb,URw3EN5X,IQr3EP,SAAmByF,GAElB,GAAIA,EAAQ,EACXA,EAAQ,CAET/I,MAAKkb,SAAWnS,CAChB/I,MAAK4b,iBRq3EC7a,WAAY,KACZC,aAAc,MQn3ErBL,QAAAC,eAAWwZ,EAAA7Z,UAAA,SRs3EJM,IQt3EP,WAEC,MAAOb,MAAKqa,QRu3EN/W,IQp3EP,SAAiByF,GAEhB/I,KAAKqa,OAAStR,CACd/I,MAAKsa,SAAYta,KAAKqa,QAAU,GAAM,KAAM,GAC5Cra,MAAKua,SAAYva,KAAKqa,QAAU,EAAK,KAAM,GAC3Cra,MAAKwa,SAAWxa,KAAKqa,OAAS,KAAM,GAEpCra,MAAK4b,eACL5b,MAAK2b,kBRo3EC5a,WAAY,KACZC,aAAc,MQl3ErBL,QAAAC,eAAWwZ,EAAA7Z,UAAA,WRq3EJM,IQr3EP,WAEC,MAAOb,MAAK0a,URs3ENpX,IQn3EP,SAAmByF,GAElB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET/I,MAAK0a,SAAW3R,CAChB/I,MAAK6b,iBRm3EC9a,WAAY,KACZC,aAAc,MQj3ErBL,QAAAC,eAAWwZ,EAAA7Z,UAAA,gBRo3EJM,IQp3EP,WAEC,MAAOb,MAAKya,eRq3ENnX,IQl3EP,SAAwByF,GAEvB/I,KAAKya,cAAgB1R,CACrB/I,MAAK6b,iBRm3EC9a,WAAY,KACZC,aAAc,MQj3EboZ,GAAA7Z,UAAAsb,cAAR,WAEC7b,KAAK2a,YAAe3a,KAAKya,eAAiB,GAAM,KAAM,IAAKza,KAAK0a,QAChE1a,MAAK4a,YAAe5a,KAAKya,eAAiB,EAAK,KAAM,IAAKza,KAAK0a,QAC/D1a,MAAK6a,YAAc7a,KAAKya,cAAgB,KAAM,IAAKza,KAAK0a,SAGlDN,GAAA7Z,UAAAub,2BAAP,SAAkCC,EAAgBpI,EAAe7Q,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAImX,GAGHG,GAAA7Z,UAAAob,eAAR,WAEC3b,KAAK+a,YAAc/a,KAAKsa,QAAQta,KAAK8a,SACrC9a,MAAKgb,YAAchb,KAAKua,QAAQva,KAAK8a,SACrC9a,MAAKib,YAAcjb,KAAKwa,QAAQxa,KAAK8a,UAG9BV,GAAA7Z,UAAAqb,cAAR,WAEC5b,KAAKmb,WAAanb,KAAKsa,QAAQta,KAAKkb,QACpClb,MAAKob,WAAapb,KAAKua,QAAQva,KAAKkb,QACpClb,MAAKqb,WAAarb,KAAKwa,QAAQxa,KAAKkb,SAGrCva,QAAAC,eAAWwZ,EAAA7Z,UAAA,gBR62EJM,IQ72EP,WAEC,MAAOb,MAAKub,eR82ENjY,IQ32EP,SAAwByF,GAEvB/I,KAAKub,cAAgBxS,CACrB/I,MAAKub,cAAcE,MAAQzb,MR42ErBe,WAAY,KACZC,aAAc,MQ32EtB,OAAAoZ,IAzKwBF,EA2KxB9c,GAAmBJ,QAAVod,IR+2EN4B,6CAA6C5a,UAAU6a,uDAAuD,uDAAuDC,uCAAuC,yCAAyCC,2CAA2C,SAASjgB,EAAQkB,EAAOJ,GAC3T,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GSviFtB,IAAO+b,GAAclgB,EAAc,4CACnC,IAAOmgB,GAAengB,EAAc,6CAEpC,IAAOogB,GAAgBpgB,EAAc,8CAKrC,IAAO0F,GAAe1F,EAAc,0CAEpC,IAAO2F,GAAgB3F,EAAc,4CTuiFrC,IShiFMqgB,GAAe,SAAA7b,GAASX,EAAxBwc,EAAe7b,EAyDpB,SAzDK6b,GAyDOxa,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAAzD,KAAA+C,KAAM+B,EAvDC/B,MAAAgC,aAAsB,CAyD7BhC,MAAKoC,WAAa,GAAIga,GAAeI,aAAc,EAAGza,GA/CvDpB,OAAAC,eAAW2b,EAAAhc,UAAA,aTkiFJM,ISliFP,WAEC,MAAO0b,GAAgBrb,WTmiFjBH,WAAY,KACZC,aAAc,MS9hFrBL,QAAAC,eAAW2b,EAAAhc,UAAA,aToiFJM,ISpiFP,WAEC,MAAOb,MAAKoC,YTqiFNrB,WAAY,KACZC,aAAc,MShiFrBL,QAAAC,eAAW2b,EAAAhc,UAAA,aTsiFJM,IStiFP,WAEC,MAAOb,MAAKyc,YTuiFN1b,WAAY,KACZC,aAAc,MSliFrBL,QAAAC,eAAW2b,EAAAhc,UAAA,UTwiFJM,ISxiFP,WAEC,IAAKb,KAAK0c,QACT1c,KAAK2c,UAAU3c,KAAK0c,QAErB,OAAO1c,MAAK0c,STwiFN3b,WAAY,KACZC,aAAc,MSniFrBL,QAAAC,eAAW2b,EAAAhc,UAAA,eTyiFJM,ISziFP,WAEC,MAAOb,MAAKgC,cT0iFNjB,WAAY,KACZC,aAAc,MS9hFdub,GAAAhc,UAAAsC,aAAP,SAAoBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAGnB,MAAOA,GAGDyZ,GAAAhc,UAAAyC,gBAAP,SAAuBC,EAAiBH,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAGvC,MAAOA,GASDyZ,GAAAhc,UAAA2C,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkBiZ,GAAgB,CACrCpc,KAAKqD,cAAcrD,KAAKoC,WACxBpC,MAAKoC,WAA8Be,MAC7B,IAAIA,EAAQ,CAClB,GAAIxG,GAAW,CACf,IAAI8a,GAAW,CACf,IAAImF,GAAe,CACnB,IAAIzY,GAAyB,GAAIqY,cAAarZ,EAAOjG,OAAO,EAC5D,IAAIyG,GAAsB,GAAIkZ,aAAY1Z,EAAOjG,OAEjD,OAAOP,EAAIwG,EAAOjG,OAAQ,CACzB,GAAI0f,EAAM,EAAI,EAAG,CAChBzY,EAAUyY,GAASzZ,EAAOxG,EAAI,EAC9BwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAAI,EAClCwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAAI,EAClCwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAC9BwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAAI,EAClCwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAAI,OAC5B,CACNwH,EAAUyY,GAASzZ,EAAOxG,EAC1BwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAAI,EAClCwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAAI,EAClCwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAAI,EAClCwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAAI,EAClCwH,GAAUyY,EAAQ,GAAKzZ,EAAOxG,EAAI,GAGnCigB,GAAS,CAET,MAAMnF,GAAK,EAAG,CACb,GAAIjb,GAAWogB,EAAM,EAAI,CACzBjZ,GAAQL,KAAK9G,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,EAAGA,EAAI,GAAIG,EACpD8a,GAAI,CACJ9a,IAAK,GAIPqD,KAAKoC,WAAWkB,IAAIa,EAAWf,EAAO,EAEtCpD,MAAK4D,WAAWD,EAASP,OACnB,CACNpD,KAAKqD,cAAcrD,KAAKoC,WACxBpC,MAAKoC,WAAa,GAAIga,GAAeI,aAAc,EAAGxc,KAAKqC,qBAG5DrC,KAAKgC,aAAehC,KAAKoC,WAAWI,KAEpCxC,MAAKuD,mBAELvD,MAAKwD,mBAAmBxD,KAAKoC,WAE7BpC,MAAK0C,eAAe1C,KAAKoC,WAAWO,IAAM,MASpC4Z,GAAAhc,UAAAuc,aAAP,SAAoB3Z,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,YAAkBmZ,GAAkB,CACvCtc,KAAKyc,WAAgCtZ,MAC/B,IAAIA,EAAQ,CAClB,IAAKnD,KAAKyc,WACTzc,KAAKyc,WAAa,GAAIH,GAAiBtc,KAAKqC,oBAE7C,IAAI1F,GAAW,CACf,IAAI8a,GAAW,CACf,IAAImF,GAAe,CACnB,IAAIG,GAAyB,GAAIP,cAAarZ,EAAOjG,OAAO,EAE5D,OAAOP,EAAIwG,EAAOjG,OAAQ,CACzB6f,EAAUH,GAAUI,KAAKC,MAAM,GAAIL,EAAQ,IAAO,GAAKzZ,EAAOxG,GAAKwG,EAAOxG,EAE1E,MAAM8a,GAAK,EAAG,CACbA,EAAI,CACJ9a,KAGDigB,IAGD5c,KAAKyc,WAAWnZ,IAAIyZ,EAAW3Z,EAAO,OAChC,IAAIpD,KAAKyc,WAAY,CAC3Bzc,KAAKyc,WAAWxb,SAChBjB,MAAKyc,WAAa,KAGnBzc,KAAKwD,mBAAmBxD,KAAKyc,WAE7Bzc,MAAK0C,eAAe1C,KAAKyc,WAAW9Z,IAAM,MAUpC4Z,GAAAhc,UAAAoc,UAAP,SAAiBxZ,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE5B,GAAID,EAAQ,CACX,GAAIA,GAAUnD,KAAK0c,QAClB,MAED,IAAIvZ,YAAkBkZ,GAAiB,CACtCrc,KAAKqD,cAAcrD,KAAK0c,QACxB1c,MAAK0c,QAA4BvZ,MAC3B,CACN,IAAKnD,KAAK0c,QACT1c,KAAK0c,QAAU,GAAIL,GAAgBrc,KAAKqC,oBAGzC,IAAI1F,GAAW,CACf,IAAI8a,GAAW,CACf,IAAImF,GAAe,CACnB,IAAIM,GAAoB,GAAIC,YAAWha,EAAOjG,OAAO,EAErD,OAAOP,EAAIwG,EAAOjG,OAAQ,CACzB,GAAI0f,EAAM,EAAI,EAAG,CAChBM,EAAON,GAASzZ,EAAOxG,EAAI,EAC3BugB,GAAON,EAAQ,GAAKzZ,EAAOxG,EAAI,EAC/BugB,GAAON,EAAQ,GAAKzZ,EAAOxG,EAAI,EAC/BugB,GAAON,EAAQ,GAAKzZ,EAAOxG,EAAI,OACzB,CACNugB,EAAON,GAASzZ,EAAOxG,EACvBugB,GAAON,EAAQ,GAAKzZ,EAAOxG,EAAI,EAC/BugB,GAAON,EAAQ,GAAKzZ,EAAOxG,EAAI,EAC/BugB,GAAON,EAAQ,GAAKzZ,EAAOxG,EAAI,GAIhC,KAAM8a,GAAK,EAAG,CACbA,EAAI,CACJ9a,IAAK,EAGNigB,GAAS,EAGV5c,KAAK0c,QAAQpZ,IAAI4Z,EAAQ9Z,EAAO,QAE3B,CAENpD,KAAK0c,QAAU7a,EAAiBub,eAAepd,KAAKqd,UAAWrd,KAAK0c,QAAS1c,KAAKqC,oBAAqBrC,KAAKgC,cAG7GhC,KAAKwD,mBAAmBxD,KAAK0c,QAE7B1c,MAAK0C,eAAe1C,KAAK0c,QAAQ/Z,IAAM,MAMjC4Z,GAAAhc,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOhE,KAAA+C,KAEbA,MAAKoC,WAAWnB,SAChBjB,MAAKoC,WAAa,IAElBpC,MAAKyc,WAAWxb,SAChBjB,MAAKyc,WAAa,IAElBzc,MAAK0c,QAAQzb,SACbjB,MAAK0c,QAAU,KAOTH,GAAAhc,UAAAmD,MAAP,WAEC,GAAIA,GAAwB,GAAI6Y,GAAgBvc,KAAKqC,oBAAqBrC,KAAKqC,oBAAoBqB,QAAU,KAE7GA,GAAME,WAAW5D,KAAKqd,UAAU3Z,QAEhCA,GAAMR,aAAalD,KAAKoC,WAAWsB,QACnCA,GAAMoZ,aAAa9c,KAAKyc,WAAW/Y,QACnCA,GAAMiZ,UAAU3c,KAAK0c,QAAQhZ,QAE7B,OAAOA,GAGD6Y,GAAAhc,UAAA+D,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgB+Y,kBAAkBtd,KAAMwE,EAAUC,EAAoBC,GAjRhE6X,GAAArb,UAAmB,yBAmRlC,OAAAqb,IArR8B3a,EAuR9BxE,GAAyBJ,QAAhBuf,IT8+ENgB,4CAA4Cnc,UAAUoc,6CAA6Cpc,UAAUqc,8CAA8Crc,UAAU0D,0CAA0C,0CAA0CC,4CAA4C,8CAA8C2Y,uCAAuC,SAASxhB,EAAQkB,EAAOJ,GACrZ,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GU1xFtB,IAAOkc,GAAergB,EAAa,0CAEnC,IAAO+I,GAAW/I,EAAc,sCVqyFhC,IUxxFMyhB,GAAW,SAAAjd,GAASX,EAApB4d,EAAWjd,EA2BhB,SA3BKid,GA2BOxY,EAA6BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEzD9D,EAAAzD,KAAA+C,KAAMoF,EAAYZ,EAElBxE,MAAKmF,YAAcA,EApBpBxE,OAAAC,eAAW+c,EAAApd,UAAA,aV8xFJM,IU9xFP,WAEC,MAAO8c,GAAYzc,WV+xFbH,WAAY,KACZC,aAAc,MUxwFd2c,GAAApd,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOhE,KAAA+C,KAEbA,MAAKmF,YAAc,IAEnBwY,GAAYtY,WAAWC,KAAKtF,MAzCf2d,GAAAtY,WAAgC,GAAInD,MAEpCyb,GAAAzc,UAAmB,qBAEnByc,GAAApY,WAAyBgX,CAuCxC,OAAAoB,IA7C0B1Y,EA+C1B7H,GAAqBJ,QAAZ2gB,IV+wFNxB,0CAA0C,0CAA0C3W,sCAAsC,wCAAwC6S,2CAA2C,SAASnc,EAAQkB,EAAOJ,GW/0FxO,GAAMoJ,GAAe,WAArB,QAAMA,MAKSA,EAAA+B,QAAiB,SAKjB/B,GAAAwN,aAAsB,aAKtBxN,GAAAwX,gBAAyB,gBACxC,OAAAxX,KAEAhJ,GAAyBJ,QAAhBoJ,OXi1FHyX,iCAAiC,SAAS3hB,EAAQkB,EAAOJ,GAC/D,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GYr2FtB,IAAOyd,GAAe5hB,EAAc,yCACpC,IAAO6hB,GAAU7hB,EAAe,uCZ22FhC,IYr2FM8hB,GAAK,SAAAtd,GAASX,EAAdie,EAAKtd,EAwDV,SAxDKsd,KA0DJtd,EAAAzD,KAAA+C,KAvDOA,MAAAie,UAAmB,GAAItd,OAEvBX,MAAAke,QAAiB,GAAIvd,OACrBX,MAAAqa,OAAgB,SAExB1Z,OAAAC,eAAWod,EAAAzd,UAAA,WZs2FJM,IYt2FP,WAEC,MAAOb,MAAKme,UZu2FN7a,IYp2FP,SAAmByF,GAElB,GAAI/I,KAAKme,UAAYpV,EACpB,MAED/I,MAAKme,SAAWpV,CAEhB/I,MAAKoe,yBZm2FCrd,WAAY,KACZC,aAAc,MYj2FrBL,QAAAC,eAAWod,EAAAzd,UAAA,SZo2FJM,IYp2FP,WAEC,MAAOb,MAAKqe,QZq2FN/a,IYl2FP,SAAiByF,GAEhB,GAAI/I,KAAKqe,QAAUtV,EAClB,MAED/I,MAAKqe,OAAStV,CAEd/I,MAAKoe,yBZi2FCrd,WAAY,KACZC,aAAc,MY51FrBL,QAAAC,eAAWod,EAAAzd,UAAA,SZk2FJM,IYl2FP,WAEC,MAAOb,MAAKqa,QZm2FN/W,IYh2FP,SAAiByF,GAEhB,GAAI/I,KAAKqa,QAAUtR,EAClB,MAED/I,MAAKqa,OAAStR,CAEd/I,MAAKoe,yBZ+1FCrd,WAAY,KACZC,aAAc,MYx1Fdgd,GAAAzd,UAAA+d,WAAP,SAAkBC,EAAqB3B,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEtC,OAAQ5c,KAAKke,QAAQK,EAAQ5b,IAAK3C,KAAKke,QAAQK,EAAQ5b,IAAIia,GAAS,OAAS5c,KAAKqe,OAG5EL,GAAAzd,UAAAie,aAAP,SAAoBD,EAAqB3B,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAExC,OAAQ5c,KAAKie,UAAUM,EAAQ5b,IAAK3C,KAAKie,UAAUM,EAAQ5b,IAAIia,GAAS,OAAS5c,KAAKme,SAGhFH,GAAAzd,UAAAke,WAAP,SAAkBC,EAAiBH,EAAqB3B,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEvD,IAAK5c,KAAKke,QAAQK,EAAQ5b,IACzB3C,KAAKke,QAAQK,EAAQ5b,IAAM,GAAIT,MAEhClC,MAAKke,QAAQK,EAAQ5b,IAAIia,GAAS8B,EAG5BV,GAAAzd,UAAAoe,aAAP,SAAoBC,EAAqBL,EAAqB3B,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAE7D,IAAK5c,KAAKie,UAAUM,EAAQ5b,IAC3B3C,KAAKie,UAAUM,EAAQ5b,IAAM,GAAIT,MAElClC,MAAKie,UAAUM,EAAQ5b,IAAIia,GAASgC,CAEpC5e,MAAKoe,wBAICJ,GAAAzd,UAAAse,cAAP,SAAqBN,EAAqB3B,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAEzC,IAAK5c,KAAKke,QAAQK,EAAQ5b,IACzB,MAED3C,MAAKke,QAAQK,EAAQ5b,IAAIia,GAAS,IAElC5c,MAAKoe,wBAGCJ,GAAAzd,UAAAue,gBAAP,SAAuBP,EAAqB3B,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,EAE3C,IAAK5c,KAAKie,UAAUM,EAAQ5b,IAC3B,MAED3C,MAAKie,UAAUM,EAAQ5b,IAAIia,GAAS,IAEpC5c,MAAKoe,wBAGEJ,GAAAzd,UAAA6d,sBAAR,WAECpe,KAAKsL,cAAc,GAAIyS,GAAWA,EAAWgB,sBAAuB/e,OAEtE,OAAAge,IAlHoBF,EAoHpB1gB,GAAeJ,QAANghB,IZ60FNgB,yCAAyC5d,UAAU6d,uCAAuC,yCAAyCna,2CAA2C,SAAS5I,EAAQkB,EAAOJ,GACzM,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,Ga78FtB,IAAO6e,GAAgBhjB,EAAc,8CACrC,IAAO+d,GAAmB/d,EAAa,6CAMvC,IAAOsE,GAAStE,EAAe,oCAG/B,IAAOijB,GAAgBjjB,EAAc,6Cb48FrC,Iap8FM0F,GAAe,SAAAlB,GAASX,EAAxB6B,EAAelB,EA0CpB,SA1CKkB,GA0COG,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAAzD,KAAA+C,KAxCOA,MAAAof,aAAsB,CAMvBpf,MAAA0C,eAAwB,GAAI/B,OAC5BX,MAAAqf,oBAA6B,GAAI1e,OAmCvCX,MAAKqC,oBAAsBN,EAjC5BpB,OAAAC,eAAWgB,EAAArB,UAAA,sBbq8FJM,Iar8FP,WAEC,MAAOb,MAAKqC,qBbs8FNtB,WAAY,KACZC,aAAc,Maj8FrBL,QAAAC,eAAWgB,EAAArB,UAAA,Wbu8FJM,Iav8FP,WAEC,MAAOb,MAAKqd,Wbw8FNtc,WAAY,KACZC,aAAc,Man8FrBL,QAAAC,eAAWgB,EAAArB,UAAA,eby8FJM,Iaz8FP,WAEC,MAAOb,MAAKof,cb08FNre,WAAY,KACZC,aAAc,Max8FrBL,QAAAC,eAAWgB,EAAArB,UAAA,eb28FJM,Ia38FP,WAEC,KAAM,IAAIoZ,Ib48FJlZ,WAAY,KACZC,aAAc,Ma77FdY,GAAArB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOhE,KAAA+C,KAEbA,MAAKgZ,eAAiB,IAEtB,IAAIhZ,KAAKqd,UAAW,CACnBrd,KAAKqd,UAAUpc,SACfjB,MAAKqd,UAAY,MAYZzb,GAAArB,UAAAqD,WAAP,SAAkBT,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,GAAID,YAAkB+b,GAAkB,CACvC,GAAIlf,KAAKqd,UACRrd,KAAKsf,cAENtf,MAAKqd,UAA+Bla,MAC9B,IAAIA,EAAQ,CAClB,IAAKnD,KAAKqd,UACTrd,KAAKqd,UAAY,GAAI6B,EAEtBlf,MAAKqd,UAAU/Z,IAAIH,EAAQC,OACrB,IAAIpD,KAAKqd,UAAW,CAC1Brd,KAAKqd,UAAUpc,SACfjB,MAAKqd,UAAY,IAEjBrd,MAAKsf,eAGN,GAAItf,KAAKqd,UAAW,CACnBrd,KAAKof,aAAepf,KAAKqd,UAAU7a,KAEnCxC,MAAKuf,yBACC,CACNvf,KAAKof,aAAe,GAOfxd,GAAArB,UAAAgD,kBAAP,WAEC,GAAIvD,KAAKgZ,eACRhZ,KAAKgZ,eAAeE,kBAAkBlZ,MAcjC4B,GAAArB,UAAAmD,MAAP,WAEC,KAAM,IAAIuW,GAGJrY,GAAArB,UAAA6D,oBAAP,SAA2BC,IASpBzC,GAAArB,UAAA2D,MAAP,SAAaA,IAKNtC,GAAArB,UAAAuD,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,GAK3BpC,GAAArB,UAAAsC,aAAP,SAAoBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEnB,KAAM,IAAImX,GAGJrY,GAAArB,UAAAyC,gBAAP,SAAuBC,EAAiBH,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAEvC,KAAM,IAAImX,GAGJrY,GAAArB,UAAAuR,aAAP,SAAoBjI,EAAUE,EAAUE,EAAUoG,GAEjD,KAAM,IAAI4J,GAGHrY,GAAArB,UAAAgf,mBAAR,WAEC,IAAKvf,KAAKwf,mBACTxf,KAAKwf,mBAAqB,GAAIL,GAAiBA,EAAiBM,mBAAoBzf,KAAKqd,UAE1Frd,MAAKsL,cAActL,KAAKwf,oBAGjB5d,GAAArB,UAAA+e,aAAR,WAECtf,KAAKsL,cAAc,GAAI6T,GAAiBA,EAAiBO,cAAe1f,KAAKqd,YAGvEzb,GAAArB,UAAAiD,mBAAP,SAA0Bmc,GAEzB,IAAKA,GAAkB3f,KAAK0C,eAAeid,EAAehd,IACzD,MAED3C,MAAK0C,eAAeid,EAAehd,IAAM,IAEzC,KAAK3C,KAAKqf,oBAAoBM,EAAehd,IAC5C3C,KAAKqf,oBAAoBM,EAAehd,IAAM,GAAIwc,GAAiBA,EAAiBS,oBAAqBD,EAE1G3f,MAAKsL,cAActL,KAAKqf,oBAAoBM,EAAehd,KAIrDf,GAAArB,UAAA8C,cAAP,SAAqBsc,GAEpB,IAAKA,EACJ,MAEDA,GAAe1e,SAEfjB,MAAKsL,cAAc,GAAI6T,GAAiBA,EAAiBU,eAAgBF,GAEzE3f,MAAK0C,eAAeid,EAAehd,IAAM,IACzC3C,MAAKqf,oBAAoBM,EAAehd,IAAM,KAGxCf,GAAArB,UAAA+D,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,KAAM,IAAIuV,GAEZ,OAAArY,IA3M8BpB,EA6MLpD,GAAAJ,QAAhB4E,Ib84FNke,8CAA8C1e,UAAU4a,6CAA6C5a,UAAUD,oCAAoCC,UAAU2e,6CAA6C,+CAA+Cva,uCAAuC,SAAStJ,EAAQkB,EAAOJ,GAC3T,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GchnGtB,IAAOG,GAAStE,EAAe,oCAK/B,IAAO8jB,GAAoB9jB,EAAa,iDAGxC,IAAO6hB,GAAU7hB,EAAe,uCdsnGhC,Ic3mGM+I,GAAW,SAAAvE,GAASX,EAApBkF,EAAWvE,EAkGhB,SAlGKuE,GAkGOG,EAAiBZ,EAA8Byb,GAlG5D,GAAAvZ,GAAA1G,IAkG8B,IAAAwE,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAyb,QAAA,GAAkB,CAAlBA,EAAA,KAE1Dvf,EAAAzD,KAAA+C,KAhGMA,MAAAkgB,QAAiB,CAkGvBlgB,MAAKmgB,gCAAkC,SAAC3X,GAAqB,MAAA9B,GAAK0Z,wBAAwB5X,GAE1FxI,MAAKoF,WAAaA,CAClBpF,MAAKigB,MAAQA,CACbjgB,MAAKwE,SAAWA,EAtFjB7D,OAAAC,eAAWqE,EAAA1E,UAAA,YdinGJM,IcjnGP,WAEC,MAAOb,MAAKoF,WAAWib,UdknGjBtf,WAAY,KACZC,aAAc,Mc7mGrBL,QAAAC,eAAWqE,EAAA1E,UAAA,YdmnGJM,IcnnGP,WAEC,MAAOb,MAAKsgB,WAAatgB,KAAKoF,WAAWZ,UdonGnClB,IcjnGP,SAAoByF,GAEnB,GAAI/I,KAAKwE,SACRxE,KAAKwE,SAAS+b,aAAavgB,KAE5BA,MAAKsgB,UAAYvX,CAEjB,IAAI/I,KAAKwE,SACRxE,KAAKwE,SAASgc,UAAUxgB,OdgnGnBe,WAAY,KACZC,aAAc,Mc3mGrBL,QAAAC,eAAWqE,EAAA1E,UAAA,SdinGJM,IcjnGP,WAEC,MAAOb,MAAKygB,QAAUzgB,KAAKoF,WAAW6a,OdknGhC3c,Ic/mGP,SAAiByF,GAEhB,GAAI/I,KAAKygB,QAAU1X,EAClB,MAED,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOxM,oBAAoB8J,EAAWgB,sBAAuB/e,KAAKmgB,gCAExEngB,MAAKygB,OAAS1X,CAEd,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOnY,iBAAiByV,EAAWgB,sBAAuB/e,KAAKmgB,gCAErEngB,MAAK0gB,yBd4mGC3f,WAAY,KACZC,aAAc,McvmGrBL,QAAAC,eAAWqE,EAAA1E,UAAA,kBd6mGJM,Ic7mGP,WAEC,MAAOb,MAAKoF,WAAWuF,gBd8mGjB5J,WAAY,KACZC,aAAc,McpmGrBL,QAAAC,eAAWqE,EAAA1E,UAAA,ed0mGJM,Ic1mGP,WAEC,MAAOb,MAAK2gB,cAAgB3gB,KAAKoF,WAAWwb,ad2mGtCtd,IcxmGP,SAAuByF,GAEtB/I,KAAK2gB,aAAe5X,GdymGdhI,WAAY,KACZC,aAAc,McplGdiE,GAAA1E,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOhE,KAAA+C,KAEbA,MAAKigB,MAAQ,IACbjgB,MAAKoF,WAAa,KAQZH,GAAA1E,UAAAmT,wBAAP,SAA+BC,GAE9B,MAAO3T,MAAKoF,WAAWsO,wBAAwBC,GAGzC1O,GAAA1E,UAAAsgB,mBAAP,WAEC7gB,KAAKsL,cAAc,GAAI0U,GAAqBA,EAAqBc,oBAAqB9gB,OAGhFiF,GAAA1E,UAAAmgB,sBAAP,WAEC1gB,KAAKsL,cAAc,GAAI0U,GAAqBA,EAAqBe,wBAAyB/gB,OAGpFiF,GAAA1E,UAAAygB,sBAAP,WAEC,MAAOhhB,MAAKsgB,UAGLrb,GAAA1E,UAAA6f,wBAAR,SAAgC5X,GAE/BxI,KAAK0gB,wBAGP,OAAAzb,IAvJ0BzE,EAyJ1BpD,GAAqBJ,QAAZiI,Id8kGN9D,oCAAoCC,UAAU6f,iDAAiD,iDAAiDhC,uCAAuC,yCAAyCiC,oCAAoC,SAAShlB,EAAQkB,EAAOJ,Ge/vG/R,GAAOkJ,GAAsBhK,EAAa,iDAK1C,IAAOyJ,GAAczJ,EAAe,sCAGpC,IAAOilB,GAAkBjlB,EAAc,iDAGvC,IAAMklB,GAAQ,WA8Cb,QA9CKA,KAEGphB,KAAAqhB,aAEDrhB,MAAAshB,kBAwCAthB,MAAAuhB,aAAoB,CAI1BvhB,MAAKwhB,mBAELxhB,MAAKyhB,uBACLzhB,MAAK0hB,UACL1hB,MAAK2hB,gBACL3hB,MAAK4hB,2BAGL5hB,MAAKqhB,WAAW,GAAKrhB,KAAK6hB,cAC1B7hB,MAAKqhB,WAAW,GAAKrhB,KAAK8hB,qBAC1B9hB,MAAKqhB,WAAW,GAAKrhB,KAAK+hB,YAC1B/hB,MAAKqhB,WAAW,GAAKrhB,KAAKgiB,WAC1BhiB,MAAKqhB,WAAW,GAAKrhB,KAAKiiB,kBAC1BjiB,MAAKqhB,WAAW,GAAKrhB,KAAKkiB,iBAC1BliB,MAAKqhB,WAAW,IAAMrhB,KAAKmiB,oBAC3BniB,MAAKqhB,WAAW,IAAMrhB,KAAKoiB,cAC3BpiB,MAAKqhB,WAAW,KAAOrhB,KAAKqiB,eAC5BriB,MAAKqhB,WAAW,KAAOrhB,KAAKsiB,aAItBlB,EAAA7gB,UAAAgiB,KAAP,WAEC,GAAIviB,KAAKwiB,uBAAyB,MAAQxiB,KAAKyiB,cAAgB,MAAQziB,KAAK0iB,oBAAsB,KACjG,MAED1iB,MAAK2iB,uBACL3iB,MAAK4iB,2BACL,IAAIC,GAAY,CAChB,IAAIC,GAAK,CACT,IAAIC,GAAM,CACV,IAAIC,GAAe,CACnB,IAAIC,GAAuB,CAC3B,KAAIH,EAAK,EAAGA,EAAK9iB,KAAKuhB,aAAcuB,IAAK,CACxC,GAAII,GAASljB,KAAK0iB,mBAAmB,EAErC,IAAG1iB,KAAKyiB,aAAaK,GAAM,EAC1BG,EAAuBD,CAExBhjB,MAAK2iB,qBAAqBK,GAAgBH,CAC1C7iB,MAAK4iB,yBAAyBI,KAAkBC,CAEhD,KAAIF,EAAM,EAAGA,EAAMG,EAAUH,IAC5B/iB,KAAKwhB,iBAAiBqB,KAAeC,GAIjC1B,GAAA7gB,UAAA4iB,gBAAP,SAAuBC,GAEtB,GAAGpjB,KAAK2hB,cAAcyB,IAAiB,KACtC,MAAO,EAER,UAAWpjB,MAAK2hB,cAAcyB,IAAmB,SAChD,MAAOpjB,MAAK2hB,cAAcyB,OACvB,CACH,KAAM,IAAIvmB,OAAM,oDAGjB,MAAO,GAEDukB,GAAA7gB,UAAA8iB,gBAAP,SAAuBta,EAAcqa,GAEpC,GAAGjC,EAAmBmC,iBAAiB,CfmsG7B,Ge/rGLC,GAAexa,EAAMya,MAAM,YAAY,GAAGA,MAAM,MAAM,EAC1D,IAAGrC,EAAmBmC,iBAAiBC,GAAc,CACpDvjB,KAAK2hB,cAAcyB,GAAkBjC,EAAmBmC,iBAAiBC,EACzEvjB,MAAK4hB,yBAAyBwB,GAAgB,IAC9C,YAEG,CACH,KAAM,IAAIvmB,OAAM,2KAA2K0mB,EAAa,UAG1MvjB,KAAK2hB,cAAcyB,GAAkBra,EAG9BqY,GAAA7gB,UAAAkjB,aAAR,SAAqBC,EAAcC,EAAgBC,GAClD,GAAIvK,GAAUqK,EAAIG,UAAUD,GAAY,GAAGE,OAAOH,EAClD,OAAQtK,IAAW,EAAMA,GAAWuK,GAAY,GAAMvK,EAIhD+H,GAAA7gB,UAAAwjB,4BAAP,SAAmCC,EAAqBC,EAAqBC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAE5E,GAAGlkB,KAAK2hB,cAAcsC,IAAe,KAAK,CACzC,GAAGjkB,KAAK4hB,yBAAyBqC,IAAe,KAAK,CACpDjkB,KAAK2hB,cAAcsC,GAAgBD,EAAUxV,QAAQ2V,WAAWnkB,KAAK2hB,cAAcsC,GACnFjkB,MAAK4hB,yBAAyBqC,GAAc,KAE7C,GAAGC,EACF/C,EAAmBiD,oBAAoBJ,EAAWhkB,KAAK2hB,cAAcsC,QAErE9C,GAAmBkD,0BAA0BL,EAAWhkB,KAAK2hB,cAAcsC,KAK9EtjB,QAAAC,eAAWwgB,EAAA7gB,UAAA,af2rGJM,Ie3rGP,WAEC,MAAOb,MAAKwhB,iBAAiBtkB,Qf4rGvB6D,WAAY,KACZC,aAAc,MezrGdogB,GAAA7gB,UAAA+jB,2BAAP,SAAkC3hB,GAEjC,MAAO3C,MAAKyhB,qBAAqB9e,GAG3Bye,GAAA7gB,UAAAgkB,8BAAP,SAAqCC,GAEpC,MAAOxkB,MAAKwhB,iBAAiBgD,GAGvBpD,GAAA7gB,UAAAkkB,0BAAP,SAAiC9hB,GAEhC,GAAI+hB,GAA2B1kB,KAAKyhB,qBAAqB9e,GAAIe,OAC7DghB,GAAWtW,KAAO,EAClB,OAAOsW,GAGDtD,GAAA7gB,UAAAokB,uBAAP,SAA8BpkB,GAE7B,GAAIoC,GAAK3C,KAAKyhB,qBAAqBvkB,MACnC8C,MAAKyhB,qBAAqB9e,GAAMpC,EAG1B6gB,GAAA7gB,UAAAqkB,YAAP,SAAmBZ,EAAqBa,GAEvC,GAAIC,GAAyB9kB,KAAK0hB,QAAQmD,EAC1C,IAAGC,GAAmB,EACrBd,EAAUe,kBAAoB/kB,KAAK2iB,qBAAqBmC,GAGnD1D,GAAA7gB,UAAAykB,UAAP,SAAiBhB,EAAqBjb,EAAckc,GAAA,GAAAA,QAAA,GAA2B,CAA3BA,EAAA,MAEnD,GAAIC,GAA8BlB,EAAUmB,wBAC5C,IAAIC,GAA6BplB,KAAKwhB,iBAAiBzY,EAEvD,IAAImc,GAAwBE,EAC3B,MAED,IAAIF,EAAuB,GAAKE,EAAqB,CACpDplB,KAAKqlB,mBAAmBrB,GAAYiB,EAAa,KACjD,QAGD,GAAIK,GAAyBtlB,KAAK4iB,yBAAyBwC,EfgrGrD,Ie5qGFG,GAAwBH,EAAsBF,CAClD,IAAIM,GAAoBF,EAAkBJ,Cf+qGpC,Ie3qGFO,GAA8BF,IAAiBC,EAAWN,EAAuB,EAAII,CAEzF,IAAI3oB,EACJ,IAAI+oB,EAEJ,IAAIF,EACH,IAAK7oB,EAAIqnB,EAAU1M,YAAc,EAAG3a,GAAK,EAAGA,IAC3C,GAAIqnB,EAAU2B,UAAUhpB,GAAGuK,SAAW,EACrC8c,EAAU4B,cAAcjpB,EAG3B,KAAK4oB,EACJvB,EAAU6B,iBf0qGL,IevqGFC,GAA0B9B,EAAU+B,oBAGxC/lB,MAAKgmB,MAAMP,EAAqBL,EAAqBU,Ef0qG/C,IerqGFG,EACJ,KAAKtpB,EAAIqnB,EAAU1M,YAAc,EAAG3a,GAAK,EAAGA,IAAK,CAChDspB,EAAQjC,EAAU2B,UAAUhpB,EAC5B,IAAIspB,EAAM/e,SAAW,EAAG,CACvB,GAAI4e,EAAiBG,EAAM/e,WAAa+e,EAAMhf,WAAY,CACzD+c,EAAU4B,cAAcjpB,OAClB,KAAK4oB,EAAc,CACzB,GAAGU,EAAMzX,QAAS,CACjB,IAAKyX,EAAMzX,QAAQ0X,oBAAqB,CACvCD,EAAM5hB,UAAUmP,eAChByS,GAAM5hB,UAAUoP,qBAGhBwS,GAAM1X,MAAQ,IACd0X,GAAM/Y,SAAW,MAElB,IAAK+Y,EAAMzX,QAAQ2X,uBAAwB,CAC1CF,EAAM1S,QAAU,SAUrB,IAAK,GAAI6S,KAAON,GAAkB,CACjCG,EAAQjC,EAAUS,0BAA0BzkB,KAAKqmB,iBAAiBP,EAAiBM,GAAK,GACxF,IAAIH,EAAMhf,aAAe,EACxB+c,EAAUsC,oBAAoBL,EAAOM,OAAOH,GAAMN,EAAiBM,IAGrE,IAAKnB,GAAejlB,KAAK2iB,qBAAqByC,IAAwBrc,EACrE/I,KAAK+jB,4BAA4BC,EAAWoB,EAAqB,KAIlEplB,MAAKwmB,MAAMxC,EAEXA,GAAUmB,yBAA2BC,EAG/BhE,GAAA7gB,UAAAylB,MAAP,SAAaP,EAA4BL,EAA4BU,GAEpE,GAAInpB,EACJ,IAAI+oB,EAEJ1lB,MAAKshB,gBAAgBpkB,OAAS,CAC9B,IAAIupB,GAAa,CACjB,IAAIC,EACJ,IAAIC,EACJ,KAAKjB,EAAID,EAAqBC,GAAKN,EAAqBM,IAAK,CAC5D,GAAIkB,GAA2B5mB,KAAKwiB,sBAAsBkD,EAC1D,IAAIjD,GAAsBziB,KAAKyiB,aAAaiD,EAE5C,IAAIjD,EAAe,EAAG,CAErBiE,EAAc1mB,KAAK6mB,qBAAqBD,EACxCD,GAAYD,EAAc1mB,KAAK8mB,sBAAsBF,IACrD,KAAKjqB,EAAI+pB,EAAa/pB,EAAIgqB,EAAWhqB,UAC7BmpB,GAAiB9lB,KAAK+mB,oBAAoBpqB,GAAK,OAGxD,GAAI8lB,EAAe,EAAG,CACrBiE,EAAc1mB,KAAK6mB,qBAAqBD,EACxCD,GAAYD,EAAc1mB,KAAK8mB,sBAAsBF,IAGrD,KAAKjqB,EAAIgqB,EAAY,EAAGhqB,GAAK+pB,EAAa/pB,IACzCmpB,EAAiB9lB,KAAKqmB,iBAAiB1pB,EAAE,EAAI,GAAK,OAASA,EAG7D,GAAI8lB,EAAe,EAClBziB,KAAKshB,gBAAgBmF,KAAgBG,GAIjCxF,GAAA7gB,UAAAimB,MAAP,SAAaxC,GAEZ,GAAI0B,EACJ,IAAIzY,GAAajN,KAAKshB,gBAAgBpkB,MACtC,KAAKwoB,EAAI,EAAGA,EAAIzY,EAAKyY,IACpB1lB,KAAKgnB,cAAchD,EAAWhkB,KAAKshB,gBAAgBoE,IAG9CtE,GAAA7gB,UAAA8kB,mBAAP,SAA0BrB,EAAqBiD,EAA4B/C,GAA5B,GAAA+C,QAAA,GAA0B,CAA1BA,EAAA,KAA4B,GAAA/C,QAAA,GAA2B,CAA3BA,EAAA,MAE1E,GAAIgD,GAAoBlD,EAAUe,iBAClC,IAAIoC,GAA2BnnB,KAAKwhB,iBAAiB0F,EAErD,IAAGD,GAAejnB,KAAK2iB,qBAAqBwE,IAAsBD,EACjElnB,KAAK+jB,4BAA4BC,EAAWmD,EAAmBjD,EAEhE,IAAGF,EAAUmB,0BAA4BgC,EAAmB,CAC3DnD,EAAUmB,yBAA2BgC,CAErC,IAAIP,GAAoB5mB,KAAKwiB,sBAAsB2E,EACnD,IAAI1E,GAAeziB,KAAKyiB,aAAa0E,EAErC,IAAG1E,EAAe,EAAG,CACpB,IAAK,GAAI9lB,GAAWqnB,EAAU1M,YAAc,EAAG3a,GAAK,EAAGA,IACtD,GAAIqnB,EAAU2B,UAAUhpB,GAAGuK,SAAW,EACrC8c,EAAU4B,cAAcjpB,OACpB,IAAI8lB,EAAe,EAAG,CAC5BziB,KAAKonB,wBAAwBpD,EAAW4C,KAGzC,GAAGnE,EAAe,EACjBziB,KAAKqnB,qBAAqBrD,EAAW4C,IAEtC,IAAGnE,EAAe,EACjBziB,KAAKgnB,cAAchD,EAAW4C,MAM1BxF,GAAA7gB,UAAA6mB,wBAAP,SAA+BE,EAA2BV,GAEzD,GAAIF,GAAqB1mB,KAAK6mB,qBAAqBD,EACnD,IAAID,GAAmBD,EAAc1mB,KAAK8mB,sBAAsBF,EAChE,KAAI,GAAIjqB,GAAW+pB,EAAa/pB,EAAIgqB,EAAWhqB,IAC9C2qB,EAAgB1B,cAAc0B,EAAgBC,sBAAsBvnB,KAAK+mB,oBAAoBpqB,GAAK,QAK7FykB,GAAA7gB,UAAA8mB,qBAAP,SAA4BC,EAA2BV,Gf2oGhD,GevoGFY,EACJ,IAAId,GAAqB1mB,KAAK6mB,qBAAqBD,EACnD,IAAID,GAAmBD,EAAc1mB,KAAK8mB,sBAAsBF,EAChE,KAAK,GAAIjqB,GAAWgqB,EAAY,EAAGhqB,GAAK+pB,EAAa/pB,IAAK,CACzD6qB,EAAM7qB,EAAE,CACR2qB,GAAgBhB,oBAAoBgB,EAAgB7C,0BAA0BzkB,KAAKqmB,iBAAiBmB,IAAOxnB,KAAKqmB,iBAAiBmB,EAAM,GAAK,MAAO7qB,IAI9IykB,GAAA7gB,UAAAymB,cAAP,SAAqBhD,EAAqB4C,GAEzC,GAAIzmB,EACJ,IAAIsnB,EACJ,IAAIC,EACJ,IAAIhB,GAAqB1mB,KAAK6mB,qBAAqBD,EACnD,IAAID,GAAmBD,EAAc1mB,KAAK8mB,sBAAsBF,EAChE,IAAIX,EACJ,KAAI,GAAItpB,GAAW+pB,EAAa/pB,EAAIgqB,EAAWhqB,IAAK,CACnDspB,EAAQjC,EAAU2D,oBAAoB3nB,KAAK4nB,oBAAoBjrB,GAC/D,IAAIspB,EAAO,CAEVjmB,KAAK6nB,SAAWC,QAAQ7B,EAAMzX,SAAWyX,EAAMzX,QAAQ0X,oBAEvDuB,GAAkBznB,KAAK+nB,kCAAkCprB,EACzD+qB,GAAkBD,EAAkBznB,KAAKgoB,iCAAiCrrB,EAC1E,KAAIwD,EAAIsnB,EAAiBtnB,EAAIunB,EAAiBvnB,IAC7CH,KAAKqhB,WAAWrhB,KAAKioB,qBAAqB9nB,IAAIlD,KAAK+C,KAAMimB,EAAOjC,EAAWhkB,KAAKkoB,sBAAsB/nB,MAKnGihB,GAAA7gB,UAAAshB,eAAP,SAAsBoE,EAAqBjC,EAAqBrnB,GAE/D,GAAIqD,KAAK6nB,SACR,MAEDlrB,IAAK,CACL,IAAIwrB,GAAsBlC,EAAM5hB,UAAUkJ,QAC1C4a,GAAW3a,QAAQ,GAAKxN,KAAKooB,8BAA8BzrB,IAC3DwrB,GAAW3a,QAAQ,GAAKxN,KAAKooB,8BAA8BzrB,IAC3DwrB,GAAW3a,QAAQ,GAAKxN,KAAKooB,8BAA8BzrB,IAC3DwrB,GAAW3a,QAAQ,GAAKxN,KAAKooB,8BAA8BzrB,IAC3DwrB,GAAW3a,QAAQ,IAAMxN,KAAKooB,8BAA8BzrB,IAC5DwrB,GAAW3a,QAAQ,IAAMxN,KAAKooB,8BAA8BzrB,EAE5DspB,GAAM5hB,UAAUgkB,uBAGVjH,GAAA7gB,UAAAuhB,sBAAP,SAA6BmE,EAAqBjC,EAAqBrnB,GAEtE,GAAIqD,KAAK6nB,SACR,MAEDlrB,IAAK,CACL,IAAI2rB,GAAwBrC,EAAM5hB,UAAU6E,iBAAmB+c,EAAM5hB,UAAU6E,eAAiB,GAAIvD,GACpG2iB,GAAOC,cAAgBvoB,KAAKwoB,yBAAyB7rB,IACrD2rB,GAAOG,gBAAkBzoB,KAAKwoB,yBAAyB7rB,IACvD2rB,GAAOI,eAAiB1oB,KAAKwoB,yBAAyB7rB,IACtD2rB,GAAOnf,gBAAkBnJ,KAAKwoB,yBAAyB7rB,IACvD2rB,GAAOK,UAAY3oB,KAAKwoB,yBAAyB7rB,IACjD2rB,GAAOM,YAAc5oB,KAAKwoB,yBAAyB7rB,IACnD2rB,GAAOO,WAAa7oB,KAAKwoB,yBAAyB7rB,IAClD2rB,GAAOQ,YAAc9oB,KAAKwoB,yBAAyB7rB,EAEnDspB,GAAM5hB,UAAU0kB,2BAGV3H,GAAA7gB,UAAAwhB,aAAP,SAAoBkE,EAAqBjC,EAAqBrnB,Gf+nGvD,Ge1nGFqsB,EACJ,IAAIza,GAA6B,GAAIrM,MACrC,IAAI+mB,GAAkBjpB,KAAKkpB,sBAAsBvsB,IAIjD,KAAI,GAAIkW,GAAW,EAAGA,EAAIoW,EAAUpW,IACnC,GAAImW,EAAOhF,EAAU2D,oBAAoB3nB,KAAKkpB,sBAAsBvsB,MACnE4R,EAAMjJ,KAAK0jB,EAGb/C,GAAM1X,MAAQA,EAGR6S,GAAA7gB,UAAAyhB,YAAP,SAAmBiE,EAAqBjC,EAAqBrnB,GAE5DspB,EAAM7X,KAAOpO,KAAKmpB,0BAA0BxsB,EAC5CqnB,GAAUxV,QAAQ4a,qBAAqBnD,GAGjC7E,GAAA7gB,UAAA0hB,mBAAP,SAA0Bnf,EAAsBwkB,EAA2B3qB,GAE1EmG,EAAOsL,KAAOpO,KAAKmpB,0BAA0BxsB,EAEhCmG,GAAQumB,oBACrB/B,GAAgB9Y,QAAQ4a,qBAAqBtmB,GAGvCse,GAAA7gB,UAAA2hB,kBAAP,SAAyB+D,EAAqBjC,EAAqBrnB,GAElE,IAAKspB,EAAMzX,UAAYyX,EAAMzX,QAAQ2X,uBACpCF,EAAM1S,QAAUuU,QAAQnrB,GAGnBykB,GAAA7gB,UAAA4hB,qBAAP,SAA4B8D,EAAqBjC,EAAqBrnB,GAErE,GAAIqD,KAAK6nB,SACR,MAEDlrB,IAAK,CAEL,IAAIwrB,GAAsBlC,EAAM5hB,UAAUkJ,QAC1C4a,GAAW3a,QAAQ,GAAKxN,KAAKspB,oCAAoC3sB,IACjEwrB,GAAW3a,QAAQ,GAAKxN,KAAKspB,oCAAoC3sB,IACjEwrB,GAAW3a,QAAQ,GAAKxN,KAAKspB,oCAAoC3sB,IACjEwrB,GAAW3a,QAAQ,GAAKxN,KAAKspB,oCAAoC3sB,EAEjEspB,GAAM5hB,UAAUgkB,sBAEhBpC,GAAMjd,kCAAkC9C,EAAuB0F,iBAGzDwV,GAAA7gB,UAAA6hB,eAAP,SAAsB6D,EAAqBjC,EAAqBrnB,GAE/D,GAAIqD,KAAK6nB,SACR,MAEDlrB,IAAK,CAEL,IAAIwrB,GAAsBlC,EAAM5hB,UAAUkJ,QAC1C4a,GAAW3a,QAAQ,IAAMxN,KAAKupB,8BAA8B5sB,IAC5DwrB,GAAW3a,QAAQ,IAAMxN,KAAKupB,8BAA8B5sB,EAE5DspB,GAAM5hB,UAAUoJ,qBAGV2T,GAAA7gB,UAAA8hB,gBAAP,SAAuB4D,EAAqBjC,EAAqBrnB,GAEhEspB,EAAM/Y,SAAW,KAGXkU,GAAA7gB,UAAA+hB,aAAP,SAAoB2D,EAAqBjC,EAAqBrnB,GAE7DspB,EAAM1X,MAAQ,KAEhB,OAAA6S,KAEkBhkB,GAAAJ,QAATokB,IfkmGNvJ,sCAAsCzW,UAAUgX,iDAAiD,iDAAiDoR,iDAAiD,mDAAmDC,sCAAsC,SAASvtB,EAAQkB,EAAOJ,GAIvT,GgB5mHM0sB,GAAU,WAQf,QARKA,GAQO7f,EAAUE,EAAUpH,GAE/B3C,KAAK6J,EAAIA,CACT7J,MAAK+J,EAAIA,CACT/J,MAAK2C,GAAKA,EAEZ,MAAA+mB,KAEAtsB,GAAoBJ,QAAX0sB,OhBsmHHpR,qCAAqC,SAASpc,EAAQkB,EAAOJ,GACnE,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiB9nHtB,IAAOyd,GAAe5hB,EAAc,yCAGpC;GAAO4J,GAAQ5J,EAAgB,gCAC/B,IAAO6J,GAAa7J,EAAc,qCAElC,IAAO+J,GAAQ/J,EAAgB,gCAK/B,IAAOsK,GAActK,EAAc,2CjBgrHnC,IiBxnHMmK,GAAS,SAAA3F,GAASX,EAAlBsG,EAAS3F,EA2Qd,SA3QK2F,KA6QJ3F,EAAAzD,KAAA+C,KAvQOA,MAAA2pB,UAAqB,GAAI7jB,EAEzB9F,MAAA4pB,UAAqB,GAAI3jB,EACzBjG,MAAA6pB,MAAiB,GAAI5jB,EACrBjG,MAAA8pB,OAAkB,GAAI7jB,GAAS,EAAG,EAAG,EAwQ5CjG,MAAK+pB,YAAc,GAAI7nB,OAAgB,EAEvClC,MAAK+pB,YAAY,GAAK/pB,KAAK4pB,SAC3B5pB,MAAK+pB,YAAY,GAAK/pB,KAAK6pB,KAC3B7pB,MAAK+pB,YAAY,GAAK/pB,KAAK8pB,OArQ5BnpB,OAAAC,eAAWyF,EAAA9F,UAAA,cjB0nHJM,IiB1nHP,WAEC,GAAImpB,GAAoBjkB,EAAckkB,WAAWjqB,KAAK2pB,UACtDK,GAASE,QAET,OAAOF,IjB0nHDjpB,WAAY,KACZC,aAAc,MiBlnHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,kBjB2nHJM,IiB3nHP,WAEC,MAAOb,MAAKmqB,iBjB4nHN7mB,IiBznHP,SAA0BmG,GAEzB,GAAIzJ,KAAKmqB,iBAAmB1gB,EAC3B,MAEDzJ,MAAKmqB,gBAAkB1gB,CAEvBzJ,MAAK+oB,4BjBwnHChoB,WAAY,KACZC,aAAc,MiB/mHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,8BjBynHJM,IiBznHP,WAEC,MAAOb,MAAKoqB,6BjB0nHNrpB,WAAY,KACZC,aAAc,MiB7mHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,sBjB2nHJM,IiB3nHP,WAEC,MAAOb,MAAKqqB,qBjB4nHNtpB,WAAY,KACZC,aAAc,MiBvnHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,cjB6nHJM,IiB7nHP,WAEC,GAAImpB,GAAoBjkB,EAAcukB,MAAMtqB,KAAK2pB,UACjDK,GAASE,QAET,OAAOF,IjB6nHDjpB,WAAY,KACZC,aAAc,MiBxnHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,iBjB8nHJM,IiB9nHP,WAEC,MAAOkF,GAAckkB,WAAWjqB,KAAK2pB,YjB+nH/B5oB,WAAY,KACZC,aAAc,MiB1nHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,cjBgoHJM,IiBhoHP,WAEC,GAAImpB,GAAoBjkB,EAAcwkB,SAASvqB,KAAK2pB,UACpDK,GAASE,QAET,OAAOF,IjBgoHDjpB,WAAY,KACZC,aAAc,MiBpmHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,YjBmnHJM,IiBnnHP,WAEC,GAAIb,KAAK0V,eACR1V,KAAKwqB,iBAEN,OAAOxqB,MAAK2pB,WjBmnHNrmB,IiBhnHP,SAAoBmG,GAEnB,IAAK,GAAI9M,GAAW,EAAGA,EAAI,GAAIA,IAC9BqD,KAAK2pB,UAAUnc,QAAQ7Q,GAAK8M,EAAI+D,QAAQ7Q,EAEzCqD,MAAKqoB,wBjBgnHCtnB,WAAY,KACZC,aAAc,MiB/lHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,ejBsmHJM,IiBtmHP,WAEC,MAAOb,MAAKyqB,cjBumHN1pB,WAAY,KACZC,aAAc,MiBlmHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,YjBwmHJM,IiBxmHP,WAEC,MAAOb,MAAK2pB,UAAUrc,UjBymHhBvM,WAAY,KACZC,aAAc,MiBpmHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,ejB0mHJM,IiB1mHP,WAEC,MAAOkF,GAAcwkB,SAASvqB,KAAKuN,WjB2mH7BxM,WAAY,KACZC,aAAc,MiBtmHrBL,QAAAC,eAAWyF,EAAA9F,UAAA,YjB4mHJM,IiB5mHP,WAEC,GAAIb,KAAK0qB,iBACR1qB,KAAK2qB,mBAEN,OAAO3qB,MAAK4pB,WjB4mHN7oB,WAAY,KACZC,aAAc,MiBnmHdqF,GAAA9F,UAAAqqB,SAAP,SAAgBC,EAAWC,EAAWC,GAErC,GAAI/qB,KAAK0qB,iBACR1qB,KAAK2qB,mBAEN3qB,MAAK4pB,UAAU/f,EAAIghB,CACnB7qB,MAAK4pB,UAAU7f,EAAI+gB,CACnB9qB,MAAK4pB,UAAU3f,EAAI8gB,CAEnB/qB,MAAKiM,qBAMNtL,QAAAC,eAAWyF,EAAA9F,UAAA,SjBymHJM,IiBzmHP,WAEC,GAAIb,KAAK0qB,iBACR1qB,KAAK2qB,mBAEN,OAAO3qB,MAAK8pB,QjBymHN/oB,WAAY,KACZC,aAAc,MiBvmHdqF,GAAA9F,UAAAyqB,QAAP,SAAeC,EAAWC,EAAWC,GAEpC,GAAInrB,KAAK0qB,iBACR1qB,KAAK2qB,mBAEN3qB,MAAK8pB,OAAOjgB,EAAIohB,CAChBjrB,MAAK8pB,OAAO/f,EAAImhB,CAChBlrB,MAAK8pB,OAAO7f,EAAIkhB,CAEhBnrB,MAAKiM,qBAMNtL,QAAAC,eAAWyF,EAAA9F,UAAA,QjBsmHJM,IiBtmHP,WAEC,GAAIb,KAAK0qB,iBACR1qB,KAAK2qB,mBAEN,OAAO3qB,MAAK6pB,OjBsmHN9oB,WAAY,KACZC,aAAc,MiBpmHdqF,GAAA9F,UAAA6qB,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,GAAInrB,KAAK0qB,iBACR1qB,KAAK2qB,mBAEN3qB,MAAK6pB,MAAMhgB,EAAIohB,CACfjrB,MAAK6pB,MAAM9f,EAAImhB,CACflrB,MAAK6pB,MAAM5f,EAAIkhB,CAEfnrB,MAAKiM,qBAONtL,QAAAC,eAAWyF,EAAA9F,UAAA,YjBkmHJM,IiBlmHP,WAEC,MAAOkF,GAAcukB,MAAMtqB,KAAKuN,WjBmmH1BxM,WAAY,KACZC,aAAc,MiBnlHdqF,GAAA9F,UAAAU,QAAP,YAuBOoF,GAAA9F,UAAA8qB,oBAAP,SAA2BC,GAE1B,MAAO,IAAIxlB,GASLO,GAAA9F,UAAAgrB,YAAP,SAAmBC,GAElBxrB,KAAKyrB,eAAexlB,EAASylB,OAAQF,GAQ/BnlB,GAAA9F,UAAAorB,aAAP,SAAoBH,GAEnBxrB,KAAKyrB,eAAexlB,EAASylB,QAASF,GAShCnlB,GAAA9F,UAAAqrB,SAAP,SAAgBJ,GAEfxrB,KAAKyrB,eAAexlB,EAAS4lB,QAASL,GAQhCnlB,GAAA9F,UAAAurB,UAAP,SAAiBN,GAEhBxrB,KAAKyrB,eAAexlB,EAAS4lB,OAAQL,GAQ/BnlB,GAAA9F,UAAAwrB,OAAP,SAAcP,GAEbxrB,KAAKyrB,eAAexlB,EAASuM,OAAQgZ,GAQ/BnlB,GAAA9F,UAAAyrB,SAAP,SAAgBR,GAEfxrB,KAAKyrB,eAAexlB,EAASuM,QAASgZ,GAWhCnlB,GAAA9F,UAAA0rB,OAAP,SAAc9Y,EAAWC,EAAWC,GAEnCrT,KAAK2pB,UAAUnc,QAAQ,IAAM2F,CAC7BnT,MAAK2pB,UAAUnc,QAAQ,IAAM4F,CAC7BpT,MAAK2pB,UAAUnc,QAAQ,IAAM6F,CAE7BrT,MAAKyN,qBAQCpH,GAAA9F,UAAA2rB,MAAP,SAAaC,GAEZnsB,KAAKosB,OAAOnmB,EAAS4lB,OAAQM,GAQvB9lB,GAAA9F,UAAA8rB,KAAP,SAAYF,GAEXnsB,KAAKosB,OAAOnmB,EAASylB,OAAQS,GAQvB9lB,GAAA9F,UAAA+rB,IAAP,SAAWH,GAEVnsB,KAAKosB,OAAOnmB,EAASuM,OAAQ2Z,GASvB9lB,GAAA9F,UAAA6rB,OAAP,SAAcG,EAAeJ,GAE5BnsB,KAAKuN,SAASif,gBAAgBL,EAAOI,EAErCvsB,MAAKqoB,uBASChiB,GAAA9F,UAAAksB,UAAP,SAAiBF,EAAef,GAE/B,GAAI3hB,GAAW0iB,EAAK1iB,EAAGE,EAAWwiB,EAAKxiB,EAAGE,EAAWsiB,EAAKtiB,CAC1D,IAAIgD,GAAaue,EAASxO,KAAK0P,KAAK7iB,EAAEA,EAAIE,EAAEA,EAAIE,EAAEA,EAElDjK,MAAKuN,SAASgI,kBAAkB1L,EAAEoD,EAAKlD,EAAEkD,EAAKhD,EAAEgD,EAEhDjN,MAAKyN,qBASCpH,GAAA9F,UAAAkrB,eAAP,SAAsBc,EAAef,GAEpC,GAAI3hB,GAAW0iB,EAAK1iB,EAAGE,EAAWwiB,EAAKxiB,EAAGE,EAAWsiB,EAAKtiB,CAC1D,IAAIgD,GAAaue,EAASxO,KAAK0P,KAAK7iB,EAAEA,EAAIE,EAAEA,EAAIE,EAAEA,EAElDjK,MAAKuN,SAASyG,mBAAmBnK,EAAEoD,EAAKlD,EAAEkD,EAAKhD,EAAEgD,EAEjDjN,MAAKyN,qBAGCpH,GAAA9F,UAAAiT,cAAP,WAECxT,KAAK2pB,UAAUgD,UACf3sB,MAAKqoB,uBAGChiB,GAAA9F,UAAAkT,oBAAP,WAEC,IAAKzT,KAAKmqB,gBACT,MAEDnqB,MAAKmqB,gBAAgBlV,OACrBjV,MAAK+oB,2BAQC1iB,GAAA9F,UAAA0L,mBAAP,WAECjM,KAAK0V,eAAiB,IAEtB1V,MAAKsL,cAAc,GAAI9E,GAAeA,EAAe+B,oBAAqBvI,OAGpEqG,GAAA9F,UAAA8nB,qBAAP,WAECroB,KAAKyN,oBAELzN,MAAK0qB,iBAAmB,KAMlBrkB,GAAA9F,UAAAkN,mBAAP,WAECzN,KAAK2pB,UAAUlc,oBAEfzN,MAAKsL,cAAc,GAAI9E,GAAeA,EAAe+B,oBAAqBvI,OAGpEqG,GAAA9F,UAAAwoB,yBAAP,WAEC/oB,KAAKsL,cAAc,GAAI9E,GAAeA,EAAekC,2BAA4B1I,OAM1EqG,GAAA9F,UAAAiqB,gBAAR,WAECxqB,KAAK2pB,UAAU5V,UAAU/T,KAAK+pB,YAE9B/pB,MAAK0V,eAAiB,MAIfrP,GAAA9F,UAAAoqB,kBAAR,WAEC,GAAIiC,GAA2B5sB,KAAK2pB,UAAU3W,WAC9C,IAAID,EAEJA,GAAM6Z,EAAS,EAEf5sB,MAAK4pB,UAAU/f,EAAIkJ,EAAIlJ,CACvB7J,MAAK4pB,UAAU7f,EAAIgJ,EAAIhJ,CACvB/J,MAAK4pB,UAAU3f,EAAI8I,EAAI9I,CAEvB8I,GAAM6Z,EAAS,EAEf5sB,MAAK6pB,MAAMhgB,EAAIkJ,EAAIlJ,CACnB7J,MAAK6pB,MAAM9f,EAAIgJ,EAAIhJ,CACnB/J,MAAK6pB,MAAM5f,EAAI8I,EAAI9I,CAEnB8I,GAAM6Z,EAAS,EAEf5sB,MAAK8pB,OAAOjgB,EAAIkJ,EAAIlJ,CACpB7J,MAAK8pB,OAAO/f,EAAIgJ,EAAIhJ,CACpB/J,MAAK8pB,OAAO7f,EAAI8I,EAAI9I,CAEpBjK,MAAK0qB,iBAAmB,MAE1B,OAAArkB,IApiBwByX,EAsiBL1gB,GAAAJ,QAAVqJ,IjBmhHN2Y,yCAAyC5d,UAAU2W,gCAAgC3W,UAAU4W,qCAAqC5W,UAAU+W,gCAAgC/W,UAAUqX,2CAA2C,6CAA6CoU,+CAA+C,SAAS3wB,EAAQkB,EAAOJ,GACxV,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkBhoItB,IAAO+b,GAAclgB,EAAc,4CAEnC,IAAOwF,GAAgBxF,EAAc,8CACrC,IAAOyF,GAAgBzF,EAAc,8CAQrC,IAAO0F,GAAe1F,EAAc,0CAEpC,IAAO2F,GAAgB3F,EAAc,4ClB6nIrC,IkBtnIM4wB,GAAmB,SAAApsB,GAASX,EAA5B+sB,EAAmBpsB,EAkOxB,SAlOKosB,GAkOO/qB,GAAA,GAAAA,QAAA,GAA0C,CAA1CA,EAAA,KAEXrB,EAAAzD,KAAA+C,KAAM+B,EAhOC/B,MAAAgC,aAAsB,CACtBhC,MAAA+sB,kBAA4B,IAC5B/sB,MAAAgtB,mBAA6B,IAe7BhtB,MAAAitB,mBAA6B,IAC7BjtB,MAAAktB,oBAA8B,IAC9BltB,MAAAmtB,eAAyB,KA+MhCntB,MAAKoC,WAAapC,KAAKqC,oBAAwCrC,KAAKqC,oBAAoBC,QAAQ,IAAM,GAAIZ,GAAiB1B,KAAKqC,qBAAuB,GAAIX,EAE3J1B,MAAKgC,aAAehC,KAAKoC,WAAWI,MA5MrC7B,OAAAC,eAAWksB,EAAAvsB,UAAA,alB4mIJM,IkB5mIP,WAEC,MAAOisB,GAAoB5rB,WlB6mIrBH,WAAY,KACZC,aAAc,MkB1mIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,elB6mIJM,IkB7mIP,WAEC,MAAOb,MAAKgC,clB8mINjB,WAAY,KACZC,aAAc,MkBvmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,uBlB+mIJM,IkB/mIP,WAEC,MAAOb,MAAKotB,sBlBgnIN9pB,IkB7mIP,SAA+ByF,GAE9B,GAAI/I,KAAKotB,sBAAwBrkB,EAChC,MAED/I,MAAKotB,qBAAuBrkB,GlB6mItBhI,WAAY,KACZC,aAAc,MkBxmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,mBlB8mIJM,IkB9mIP,WAEC,MAAOb,MAAKqtB,kBlB+mIN/pB,IkB5mIP,SAA2ByF,GAE1B,GAAI/I,KAAKqtB,kBAAoBtkB,EAC5B,MAED/I,MAAKqtB,iBAAmBtkB,CAExB,IAAI/I,KAAKstB,cACRttB,KAAKstB,cAAcC,WAAavtB,KAAKqtB,gBAEtC,IAAIrtB,KAAKwtB,cACRxtB,KAAKwtB,cAAcD,WAAavtB,KAAKqtB,kBlB0mIhCtsB,WAAY,KACZC,aAAc,MkBnmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,iBlB2mIJM,IkB3mIP,WAEC,MAAOb,MAAKmtB,gBlB4mIN7pB,IkBzmIP,SAAyByF,GAExB,GAAI/I,KAAKmtB,gBAAkBpkB,EAC1B,MAED/I,MAAKmtB,eAAiBpkB,GlBymIhBhI,WAAY,KACZC,aAAc,MkBnmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,qBlB0mIJM,IkB1mIP,WAEC,MAAOb,MAAKitB,oBlB2mIN3pB,IkBxmIP,SAA6ByF,GAE5B,GAAI/I,KAAKitB,oBAAsBlkB,EAC9B,MAED/I,MAAKitB,mBAAqBlkB,GlBwmIpBhI,WAAY,KACZC,aAAc,MkBlmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,sBlBymIJM,IkBzmIP,WAEC,MAAOb,MAAKktB,qBlB0mIN5pB,IkBvmIP,SAA8ByF,GAE7B,GAAI/I,KAAKktB,qBAAuBnkB,EAC/B,MAED/I,MAAKktB,oBAAsBnkB,GlBumIrBhI,WAAY,KACZC,aAAc,MkBlmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,alBwmIJM,IkBxmIP,WAEC,MAAOb,MAAKoC,YlBymINrB,WAAY,KACZC,aAAc,MkBpmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,WlB0mIJM,IkB1mIP,WAEC,IAAKb,KAAKytB,UAAYztB,KAAK0C,eAAe1C,KAAKytB,SAAS9qB,IACvD3C,KAAK0tB,WAAW1tB,KAAKytB,SAEtB,OAAOztB,MAAKytB,UlB0mIN1sB,WAAY,KACZC,aAAc,MkBrmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,YlB2mIJM,IkB3mIP,WAEC,IAAKb,KAAK2tB,WAAa3tB,KAAK0C,eAAe1C,KAAK2tB,UAAUhrB,IACzD3C,KAAK4tB,YAAY5tB,KAAK2tB,UAEvB,OAAO3tB,MAAK2tB,WlB2mIN5sB,WAAY,KACZC,aAAc,MkBtmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,elB4mIJM,IkB5mIP,WAEC,GAAIb,KAAK+sB,kBACR/sB,KAAK6tB,mBAEN,OAAO7tB,MAAK8tB,clB4mIN/sB,WAAY,KACZC,aAAc,MkBvmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,gBlB6mIJM,IkB7mIP,WAEC,GAAIb,KAAKgtB,mBACRhtB,KAAK+tB,oBAEN,OAAO/tB,MAAKguB,elB6mINjtB,WAAY,KACZC,aAAc,MkBxmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,OlB8mIJM,IkB9mIP,WAEC,IAAKb,KAAKyC,MAAQzC,KAAK0C,eAAe1C,KAAKyC,KAAKE,IAC/C3C,KAAK4C,OAAO5C,KAAKyC,KAElB,OAAOzC,MAAKyC,MlB8mIN1B,WAAY,KACZC,aAAc,MkBzmIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,gBlB+mIJM,IkB/mIP,WAEC,MAAOb,MAAKiuB,elBgnINltB,WAAY,KACZC,aAAc,MkB3mIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,gBlBinIJM,IkBjnIP,WAEC,MAAOb,MAAKstB,elBknINvsB,WAAY,KACZC,aAAc,MkB7mIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,gBlBmnIJM,IkBnnIP,WAEC,MAAOb,MAAKwtB,elBonINzsB,WAAY,KACZC,aAAc,MkBlnIrBL,QAAAC,eAAWksB,EAAAvsB,UAAA,wBlBqnIJM,IkBrnIP,WAEC,MAAOb,MAAKkuB,uBlBsnINntB,WAAY,KACZC,aAAc,MkBxmId8rB,GAAAvsB,UAAAsC,aAAP,SAAoBC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,KAEnB,MAAOjB,GAAiBssB,6BAA6BnuB,KAAKoC,WAAYU,EAAQ9C,KAAKgC,cAG7E8qB,GAAAvsB,UAAAyC,gBAAP,SAAuBC,EAAiBH,GAAA,GAAAA,QAAA,GAAoB,CAApBA,EAAA,KAEvC,MAAOjB,GAAiBusB,gCAAgCpuB,KAAKoC,WAAYa,EAAQH,EAAQ9C,KAAKgC,cAGxF8qB,GAAAvsB,UAAAuR,aAAP,SAAoBjI,EAAUE,EAAUE,GAEvC,MAAO,MASD6iB,GAAAvsB,UAAA2C,aAAP,SAAoBC,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/B,GAAID,GAAUnD,KAAKoC,WAClB,MAED,IAAIe,YAAkBzB,GAAkB,CACvC1B,KAAKqD,cAAcrD,KAAKoC,WACxBpC,MAAKoC,WAAgCe,MAC/B,IAAIA,EAAQ,CAClBnD,KAAKoC,WAAWkB,IAAIH,EAAQC,OACtB,CACNpD,KAAKqD,cAAcrD,KAAKoC,WACxBpC,MAAKoC,WAAa,GAAIV,GAAiB1B,KAAKqC,qBAG7CrC,KAAKgC,aAAehC,KAAKoC,WAAWI,KAEpC,IAAIxC,KAAKitB,mBACRjtB,KAAKwD,mBAAmBxD,KAAKytB,SAE9B,IAAIztB,KAAKktB,oBACRltB,KAAKwD,mBAAmBxD,KAAK2tB,UAE9B,IAAI3tB,KAAKmtB,eACRntB,KAAKwD,mBAAmBxD,KAAKyC,KAE9BzC,MAAKuD,mBAELvD,MAAKwD,mBAAmBxD,KAAKoC,WAE7BpC,MAAK0C,eAAe1C,KAAKoC,WAAWO,IAAM,MASpCmqB,GAAAvsB,UAAAmtB,WAAP,SAAkBvqB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B,IAAKpD,KAAKitB,mBAAoB,CAC7B,GAAI9pB,GAAUnD,KAAKytB,SAClB,MAED,IAAItqB,YAAkBzB,GAAkB,CACvC1B,KAAKqD,cAAcrD,KAAKytB,SACxBztB,MAAKytB,SAA8BtqB,MAC7B,IAAIA,EAAQ,CAClB,IAAKnD,KAAKytB,SACTztB,KAAKytB,SAAW,GAAI/rB,GAAiB1B,KAAKqC,oBAE3CrC,MAAKytB,SAASnqB,IAAIH,EAAQC,OACpB,IAAIpD,KAAKytB,SAAU,CACzBztB,KAAKqD,cAAcrD,KAAKytB,SACxBztB,MAAKytB,SAAW,IAChB,aAEK,CACN,GAAIztB,KAAK+sB,kBACR/sB,KAAK6tB,mBAEN7tB,MAAKytB,SAAW5rB,EAAiBwsB,gBAAgBruB,KAAKqd,UAAWrd,KAAK8tB,aAAc9tB,KAAKytB,SAAUztB,KAAKqC,qBAGzGrC,KAAKwD,mBAAmBxD,KAAKytB,SAE7BztB,MAAK0C,eAAe1C,KAAKytB,SAAS9qB,IAAM,MASlCmqB,GAAAvsB,UAAAqtB,YAAP,SAAmBzqB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE9B,IAAKpD,KAAKktB,oBAAqB,CAC9B,GAAI/pB,GAAUnD,KAAK2tB,UAClB,MAED,IAAIxqB,YAAkBzB,GAAkB,CACvC1B,KAAKqD,cAAcrD,KAAK2tB,UACxB3tB,MAAK2tB,UAA+BxqB,MAC9B,IAAIA,EAAQ,CAClB,IAAKnD,KAAK2tB,UACT3tB,KAAK2tB,UAAY,GAAIjsB,GAAiB1B,KAAKqC,oBAE5CrC,MAAK2tB,UAAUrqB,IAAIH,EAAQC,OACrB,IAAIpD,KAAK2tB,UAAW,CAC1B3tB,KAAKqD,cAAcrD,KAAK2tB,UACxB3tB,MAAK2tB,UAAY,IACjB,aAEK,CACN,GAAI3tB,KAAKgtB,mBACRhtB,KAAK+tB,oBAEN,IAAI/tB,KAAK+sB,kBACR/sB,KAAK6tB,mBAEN7tB,MAAK2tB,UAAY9rB,EAAiBysB,iBAAiBtuB,KAAKqd,UAAWrd,KAAKguB,cAAehuB,KAAK8tB,aAAc9tB,KAAK2tB,UAAW3tB,KAAKqC,qBAGhIrC,KAAKwD,mBAAmBxD,KAAK2tB,UAE7B3tB,MAAK0C,eAAe1C,KAAK2tB,UAAUhrB,IAAM,MASnCmqB,GAAAvsB,UAAAqC,OAAP,SAAcO,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzB,IAAKpD,KAAKmtB,eAAgB,CACzB,GAAIhqB,GAAUnD,KAAKyC,KAClB,MAED,IAAIU,YAAkBxB,GAAkB,CACvC3B,KAAKqD,cAAcrD,KAAKyC,KACxBzC,MAAKyC,KAA0BU,MACzB,IAAIA,EAAQ,CAClB,IAAKnD,KAAKyC,KACTzC,KAAKyC,KAAO,GAAId,GAAiB3B,KAAKqC,oBAEvCrC,MAAKyC,KAAKa,IAAIH,EAAQC,OAChB,IAAIpD,KAAKyC,KAAM,CACrBzC,KAAKqD,cAAcrD,KAAKyC,KACxBzC,MAAKyC,KAAO,IACZ,aAEK,CACNzC,KAAKyC,KAAOZ,EAAiB0sB,YAAYvuB,KAAKqd,UAAWrd,KAAKyC,KAAMzC,KAAKqC,oBAAqBrC,KAAKgC,cAGpG,GAAIhC,KAAKktB,oBACRltB,KAAKwD,mBAAmBxD,KAAK2tB,UAE9B3tB,MAAKwD,mBAAmBxD,KAAKyC,KAE7BzC,MAAK0C,eAAe1C,KAAKyC,KAAKE,IAAM,MAS9BmqB,GAAAvsB,UAAAiuB,gBAAP,SAAuBrrB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAUnD,KAAKiuB,cAClB,MAED,IAAI9qB,YAAkBxB,GAAkB,CACvC3B,KAAKqD,cAAcrD,KAAKiuB,cACxBjuB,MAAKiuB,cAAmC9qB,MAClC,IAAIA,EAAQ,CAClB,IAAKnD,KAAKiuB,cACTjuB,KAAKiuB,cAAgB,GAAItsB,GAAiB3B,KAAKqC,oBAEhDrC,MAAKiuB,cAAc3qB,IAAIH,EAAQC,OACzB,IAAIpD,KAAKiuB,cAAe,CAC9BjuB,KAAKqD,cAAcrD,KAAKiuB,cACxBjuB,MAAKiuB,cAAgB,IACrB,QAGDjuB,KAAKwD,mBAAmBxD,KAAKiuB,cAE7BjuB,MAAK0C,eAAe1C,KAAKiuB,cAActrB,IAAM,MASvCmqB,GAAAvsB,UAAAkuB,gBAAP,SAAuBtrB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAUnD,KAAKstB,cAClB,MAED,IAAInqB,YAAkBiZ,GAAgB,CACrCpc,KAAKqD,cAAcrD,KAAKstB,cACxBttB,MAAKstB,cAAiCnqB,MAChC,IAAIA,EAAQ,CAClB,IAAKnD,KAAKstB,cACTttB,KAAKstB,cAAgB,GAAIlR,GAAeI,aAAcxc,KAAKqtB,iBAAkBrtB,KAAKqC,oBAEnF,IAAIrC,KAAKotB,qBAAsB,CAC9B,GAAIzwB,GAAW,CACf,IAAI+xB,EACJ,IAAIC,GAAkB,CACtB,IAAIC,GAAa,GAAIjuB,OAErBX,MAAKkuB,sBAAwB,GAAIhsB,MAEjC,OAAOvF,EAAIwG,EAAOjG,OAAQ,CACzBwxB,EAAWvrB,EAAOxG,EAGlB,IAAIiyB,EAAIF,IAAattB,UAAW,CAC/BwtB,EAAIF,GAAYC,CAChB3uB,MAAKkuB,sBAAsBS,KAAcD,EAI1CvrB,EAAOxG,KAAOiyB,EAAIF,IAIpB1uB,KAAKstB,cAAchqB,IAAIH,EAAQC,OAEzB,IAAIpD,KAAKstB,cAAe,CAC9BttB,KAAKqD,cAAcrD,KAAKstB,cACxBttB,MAAKstB,cAAgB,IACrB,QAGDttB,KAAKwD,mBAAmBxD,KAAKstB,cAE7BttB,MAAK0C,eAAe1C,KAAKstB,cAAc3qB,IAAM,MASvCmqB,GAAAvsB,UAAAsuB,gBAAP,SAAuB1rB,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAElC,GAAID,GAAUnD,KAAKwtB,cAClB,MAED,IAAIrqB,YAAkBiZ,GAAgB,CACrCpc,KAAKqD,cAAcrD,KAAKwtB,cACxBxtB,MAAKwtB,cAAiCrqB,MAChC,IAAIA,EAAQ,CAClB,IAAKnD,KAAKwtB,cACTxtB,KAAKwtB,cAAgB,GAAIpR,GAAeI,aAAcxc,KAAKqtB,iBAAkBrtB,KAAKqC,oBAEnFrC,MAAKwtB,cAAclqB,IAAIH,EAAQC,OAEzB,IAAIpD,KAAKwtB,cAAe,CAC9BxtB,KAAKqD,cAAcrD,KAAKwtB,cACxBxtB,MAAKwtB,cAAgB,IACrB,QAGDxtB,KAAKwD,mBAAmBxD,KAAKwtB,cAE7BxtB,MAAK0C,eAAe1C,KAAKwtB,cAAc7qB,IAAM,MAMvCmqB,GAAAvsB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOhE,KAAA+C,KAEbA,MAAKoC,WAAWnB,SAChBjB,MAAKoC,WAAa,IAElB,IAAIpC,KAAKytB,SAAU,CAClBztB,KAAKytB,SAASxsB,SACdjB,MAAKytB,SAAW,KAGjB,GAAIztB,KAAK2tB,UAAW,CACnB3tB,KAAK2tB,UAAU1sB,SACfjB,MAAK2tB,UAAY,KAGlB,GAAI3tB,KAAKyC,KAAM,CACdzC,KAAKyC,KAAKxB,SACVjB,MAAKyC,KAAO,KAGb,GAAIzC,KAAKiuB,cAAe,CACvBjuB,KAAKiuB,cAAchtB,SACnBjB,MAAKiuB,cAAgB,KAGtB,GAAIjuB,KAAKstB,cAAe,CACvBttB,KAAKstB,cAAcrsB,SACnBjB,MAAKstB,cAAgB,KAGtB,GAAIttB,KAAKwtB,cAAe,CACvBxtB,KAAKwtB,cAAcvsB,SACnBjB,MAAKwtB,cAAgB,KAGtB,GAAIxtB,KAAK8tB,aAAc,CACtB9tB,KAAK8tB,aAAa7sB,SAClBjB,MAAK8tB,aAAe,KAGrB,GAAI9tB,KAAKguB,cAAe,CACvBhuB,KAAKguB,cAAc/sB,SACnBjB,MAAKguB,cAAgB,MAYhBlB,GAAAvsB,UAAAqD,WAAP,SAAkBT,EAAYC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE7B1C,EAAAH,UAAMqD,WAAU3G,KAAA+C,KAACmD,EAAQC,EAEzBpD,MAAK+sB,kBAAoB,IACzB/sB,MAAKgtB,mBAAqB,IAE1B,IAAIhtB,KAAKitB,mBACRjtB,KAAKwD,mBAAmBxD,KAAKytB,SAE9B,IAAIztB,KAAKktB,oBACRltB,KAAKwD,mBAAmBxD,KAAK2tB,UAE9B,IAAI3tB,KAAKmtB,eACRntB,KAAKwD,mBAAmBxD,KAAKyC,MAOxBqqB,GAAAvsB,UAAAmD,MAAP,WAEC,GAAIA,GAA4B,GAAIopB,GAAoB9sB,KAAKqC,oBAAqBrC,KAAKqC,oBAAoBqB,QAAU,KAGrHA,GAAMorB,kBAAoB,KAC1BprB,GAAMqrB,mBAAqB,KAC3BrrB,GAAMsrB,cAAgB,KAEtB,IAAIhvB,KAAK2D,QACRD,EAAME,WAAW5D,KAAK2D,QAAQD,QAE/B,IAAI1D,KAAKivB,QACRvrB,EAAMgqB,WAAW1tB,KAAKivB,QAAQvrB,QAE/B,IAAI1D,KAAK6D,IACRH,EAAMd,OAAO5C,KAAK6D,IAAIH,QAEvB,IAAI1D,KAAKkvB,SACRxrB,EAAMkqB,YAAY5tB,KAAKkvB,SAASxrB,QAEjC,IAAI1D,KAAKmvB,aACRzrB,EAAM8qB,gBAAgBxuB,KAAKmvB,aAAazrB,QAEzCA,GAAM0rB,gBAAkBpvB,KAAKqtB,gBAE7B,IAAIrtB,KAAKqvB,aACR3rB,EAAM+qB,gBAAgBzuB,KAAKqvB,aAAa3rB,QAEzC,IAAI1D,KAAKsvB,aACR5rB,EAAMmrB,gBAAgB7uB,KAAKsvB,aAAa5rB,QAGzCA,GAAMorB,kBAAoB9uB,KAAKitB,kBAC/BvpB,GAAMqrB,mBAAqB/uB,KAAKktB,mBAChCxpB,GAAMsrB,cAAgBhvB,KAAKmtB,cAE3B,OAAOzpB,GAGDopB,GAAAvsB,UAAAuD,QAAP,SAAeC,EAAmBC,GAAnB,GAAAD,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAEjCnC,EAAiBoC,SAASF,EAAQC,EAAQhE,KAAK6D,IAAK7D,KAAK6D,IAAIrB,OAOvDsqB,GAAAvsB,UAAA2D,MAAP,SAAaA,GAEZrC,EAAiBqC,MAAMA,EAAOlE,KAAKmE,UAAWnE,KAAKgC,cAG7C8qB,GAAAvsB,UAAA6D,oBAAP,SAA2BC,GAE1BxC,EAAiBuC,oBAAoBC,EAAWrE,KAAKmE,UAAWnE,KAAKivB,QAASjvB,KAAKkvB,SAAUlvB,KAAKgC,cAM3F8qB,GAAAvsB,UAAAwtB,mBAAR,WAEC/tB,KAAKguB,cAAgBnsB,EAAiB0tB,qBAAqBvvB,KAAKqd,UAAWrd,KAAKoC,WAAYpC,KAAK6D,IAAK7D,KAAKguB,cAAehuB,KAAKqd,UAAU7a,MAEzIxC,MAAKgtB,mBAAqB,MAMnBF,GAAAvsB,UAAAstB,kBAAR,WAEC7tB,KAAK8tB,aAAejsB,EAAiB2tB,oBAAoBxvB,KAAKqd,UAAWrd,KAAKoC,WAAYpC,KAAK8tB,aAAc9tB,KAAKqd,UAAU7a,MAE5HxC,MAAK+sB,kBAAoB,MAGnBD,GAAAvsB,UAAA+D,gBAAP,SAAuBC,EAAkCC,EAAuBC,EAAuCC,GAEtH,MAAOH,GAAgBkrB,sBAAsBzvB,KAAMwE,EAAUC,EAAoBC,GApqBpEooB,GAAA5rB,UAAmB,6BAsqBlC,OAAA4rB,IAxqBkClrB,EA0qBLxE,GAAAJ,QAApB8vB,IlB8+HNvP,4CAA4Cnc,UAAUwD,8CAA8CxD,UAAUyD,8CAA8CzD,UAAU0D,0CAA0C,0CAA0CC,4CAA4C,8CAA8C2qB,2CAA2C,SAASxzB,EAAQkB,EAAOJ,GAC1Z,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmBhrJtB,IAAOysB,GAAmB5wB,EAAY,8CAEtC,IAAO+I,GAAW/I,EAAc,sCnB2rJhC,ImB9qJMyzB,GAAe,SAAAjvB,GAASX,EAAxB4vB,EAAejvB,EA2BpB,SA3BKivB,GA2BOxqB,EAAiCC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAE7D9D,EAAAzD,KAAA+C,KAAMoF,EAAYZ,EAElBxE,MAAKmF,YAAcA,EApBpBxE,OAAAC,eAAW+uB,EAAApvB,UAAA,anBorJJM,ImBprJP,WAEC,MAAO8uB,GAAgBzuB,WnBqrJjBH,WAAY,KACZC,aAAc,MmB9pJd2uB,GAAApvB,UAAAU,QAAP,WAECP,EAAAH,UAAMU,QAAOhE,KAAA+C,KAEbA,MAAKmF,YAAc,IAEnBwqB,GAAgBtqB,WAAWC,KAAKtF,MAzCnB2vB,GAAAtqB,WAAoC,GAAInD,MAExCytB,GAAAzuB,UAAmB,yBAEnByuB,GAAApqB,WAAyBunB,CAuCxC,OAAA6C,IA7C8B1qB,EA+C9B7H,GAAyBJ,QAAhB2yB,InBqqJNnqB,sCAAsC,sCAAsCqnB,8CAA8C,gDAAgD+C,oDAAoD,SAAS1zB,EAAQkB,EAAOJ,GACzP,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoBxuJtB,IAAOwvB,GAAmB3zB,EAAa,2CAIvC,IAAO4zB,GAAkB5zB,EAAa,+CAGtC,IAAO6zB,GAAmB7zB,EAAa,iDpB0uJvC,IoBnuJM8zB,GAAsB,SAAAtvB,GAASX,EAA/BiwB,EAAsBtvB,EAoB3B,SApBKsvB,GAoBOjU,GAEXrb,EAAAzD,KAAA+C,KAAM+b,EAnBC/b,MAAAiwB,GAAY,CACZjwB,MAAAkwB,GAAY,CACZlwB,MAAAmwB,GAAY,CACZnwB,MAAAkM,OAAgB,CAChBlM,MAAAqK,QAAiB,CACjBrK,MAAA0J,OAAgB,CAChB1J,MAAAowB,SAAkB,CAClBpwB,MAAAqwB,SAAkB,CAClBrwB,MAAAswB,SAAkB,CAClBtwB,MAAAuwB,cAAuB,CACvBvwB,MAAAwwB,cAAuB,CACvBxwB,MAAAywB,cAAuB,EAcxBT,EAAAzvB,UAAAmwB,QAAP,WAEC1wB,KAAKiwB,GAAKjwB,KAAKkwB,GAAKlwB,KAAKmwB,GAAK,CAC9BnwB,MAAKkM,OAASlM,KAAKqK,QAAUrK,KAAK0J,OAAS,CAC3C1J,MAAKowB,SAAWpwB,KAAKqwB,SAAWrwB,KAAKswB,SAAW,CAChDtwB,MAAKuwB,cAAgBvwB,KAAKwwB,cAAgBxwB,KAAKywB,cAAgB,EAMzDT,GAAAzvB,UAAAowB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAG7wB,KAAK8wB,cACP9wB,KAAK+wB,UAEN,KAAK,GAAIp0B,GAAW,EAAGA,EAAIk0B,IAAal0B,EAAG,CAE1C,GAAIq0B,GAAgBJ,EAAOj0B,EAC3B,IAAID,GAAWs0B,EAAMt0B,CACrB,IAAIwD,GAAW8wB,EAAM9wB,CACrB,IAAI+wB,GAAWD,EAAMC,CACrB,IAAIC,GAAwBx0B,EAAI,GAAIsD,KAAKuwB,cAAgBvwB,KAAKuwB,aAC9D,IAAIY,GAAwBjxB,EAAI,GAAIF,KAAKwwB,cAAgBxwB,KAAKwwB,aAC9D,IAAIY,GAAwBH,EAAI,GAAIjxB,KAAKywB,cAAgBzwB,KAAKywB,aAC9D,IAAIY,GAAkB30B,GAAGsD,KAAKowB,SAAWc,GAAkBhxB,GAAGF,KAAKqwB,SAAWc,GAAkBF,GAAGjxB,KAAKswB,SAAWc,GAAkBJ,EAAM/wB,CAE3I,IAAIoxB,EAAW,EACd,MAAO,OAGT,MAAO,MAGDrB,GAAAzvB,UAAA+wB,gBAAP,SAAuBhkB,EAAmBikB,EAAoBC,GAE7D,GAAGxxB,KAAK8wB,cACP9wB,KAAK+wB,UAEN,OAAO/wB,MAAKyxB,KAAKH,gBAAgBhkB,EAAUikB,EAAWC,GAKhDxB,GAAAzvB,UAAAmxB,gBAAP,SAAuBV,GAEtB,GAAIt0B,GAAWs0B,EAAMt0B,CACrB,IAAIwD,GAAW8wB,EAAM9wB,CACrB,IAAI+wB,GAAWD,EAAMC,CACrB,IAAIU,GAAwBj1B,EAAEsD,KAAKowB,SAAWlwB,EAAEF,KAAKqwB,SAAWY,EAAEjxB,KAAKswB,SAAWU,EAAM/wB,CAExF,IAAIvD,EAAI,EACPA,GAAKA,CAEN,IAAIwD,EAAI,EACPA,GAAKA,CAEN,IAAI+wB,EAAI,EACPA,GAAKA,CAEN,IAAIW,GAAqBl1B,EAAEsD,KAAKuwB,cAAgBrwB,EAAEF,KAAKwwB,cAAgBS,EAAEjxB,KAAKywB,aAE9E,OAAOkB,GAAiBC,EAAa/B,EAAoBgC,MAAQF,GAAkBC,EAAa/B,EAAoBiC,KAAOjC,EAAoBkC,UAGzI/B,GAAAzvB,UAAAwwB,SAAP,WAECrwB,EAAAH,UAAMwwB,SAAQ9zB,KAAA+C,KAEdA,MAAKyxB,KAAOzxB,KAAKgyB,SAAS1oB,QAC1B,IAAI2oB,GAAkBjyB,KAAKgyB,SAASrnB,cACpC,IAAIunB,GAAYlyB,KAAKyxB,KAAKrkB,MAAM,CAChC,IAAI+kB,GAAYnyB,KAAKyxB,KAAKtnB,OAAO,CACjC,IAAIioB,GAAYpyB,KAAKyxB,KAAKloB,MAAM,CAChC,IAAI8oB,GAAYryB,KAAKyxB,KAAK5nB,EAAIqoB,CAC9B,IAAII,GAAYtyB,KAAKyxB,KAAK1nB,EAAIooB,CAC9B,IAAII,GAAYvyB,KAAKyxB,KAAKxnB,EAAImoB,CAC9B,IAAI7f,GAAmB0f,EAAOzkB,OAE9B,IAAIglB,GAAajgB,EAAI,GAAIkgB,EAAalgB,EAAI,GAAImgB,EAAangB,EAAI,GAAIogB,EAAapgB,EAAI,GACpF,IAAIqgB,GAAargB,EAAI,GAAIsgB,EAAatgB,EAAI,GAAIugB,EAAavgB,EAAI,GAAIwgB,EAAaxgB,EAAI,GACpF,IAAIygB,GAAazgB,EAAI,GAAI0gB,EAAa1gB,EAAI,GAAI2gB,EAAa3gB,EAAI,IAAK4gB,EAAa5gB,EAAI,GAErFvS,MAAKowB,SAAWiC,EAAGG,EAAMF,EAAGG,EAAMF,EAAGG,EAAMC,CAC3C3yB,MAAKqwB,SAAWgC,EAAGO,EAAMN,EAAGO,EAAMN,EAAGO,EAAMC,CAC3C/yB,MAAKswB,SAAW+B,EAAGW,EAAMV,EAAGW,EAAMV,EAAGW,EAAMC,CAE3CnzB,MAAKuwB,cAAgBvT,KAAKoW,IAAIlB,EAAGM,EAAML,EAAGM,EAAML,EAAGM,EACnD1yB,MAAKwwB,cAAgBxT,KAAKoW,IAAIlB,EAAGU,EAAMT,EAAGU,EAAMT,EAAGU,EACnD9yB,MAAKywB,cAAgBzT,KAAKoW,IAAIlB,EAAGc,EAAMb,EAAGc,EAAMb,EAAGc,EAEnD,IAAIlzB,KAAKqzB,QAAS,CACjBrzB,KAAKqzB,QAAQjmB,MAAQpN,KAAKyxB,KAAKrkB,KAC/BpN,MAAKqzB,QAAQlpB,OAASnK,KAAKyxB,KAAKtnB,MAChCnK,MAAKqzB,QAAQ9pB,MAAQvJ,KAAKyxB,KAAKloB,KAC/BvJ,MAAKszB,kBAAkBjvB,UAAUkJ,SAAW0kB,EAG7CjyB,KAAKkM,OAASlM,KAAKuwB,cAAc,CACjCvwB,MAAKqK,QAAUrK,KAAKwwB,cAAc,CAClCxwB,MAAK0J,OAAS1J,KAAKywB,cAAc,CAEjCzwB,MAAKiwB,GAAKjwB,KAAKowB,SAAWpwB,KAAKuwB,aAC/BvwB,MAAKkwB,GAAKlwB,KAAKqwB,SAAWrwB,KAAKwwB,aAC/BxwB,MAAKmwB,GAAKnwB,KAAKswB,SAAWtwB,KAAKywB,cAGzBT,GAAAzvB,UAAAgzB,wBAAP,WAECvzB,KAAKqzB,QAAU,GAAItD,EACnB/vB,MAAKqzB,QAAQG,aAAe,iBAE5B,OAAcxzB,MAAKqzB,QAAQI,eAE7B,OAAAzD,IA9IqCF,EAgJL1yB,GAAAJ,QAAvBgzB,IpBisJN0D,2CAA2CtyB,UAAUuyB,+CAA+C,+CAA+CC,iDAAiD,mDAAmDC,4CAA4C,SAAS33B,EAAQkB,EAAOJ,GAC9T,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqBr2JtB,IAAOwvB,GAAmB3zB,EAAa,2CAKvC,IAAO4zB,GAAkB5zB,EAAa,+CAGtC,IAAO43B,GAAqB53B,EAAY,mDAExC,IAAM63B,GAAc,SAAArzB,GAASX,EAAvBg0B,EAAcrzB,EASnB,SATKqzB,GASOhY,GAEXrb,EAAAzD,KAAA+C,KAAM+b,EARC/b,MAAAg0B,QAAiB,CACjBh0B,MAAAowB,SAAkB,CAClBpwB,MAAAqwB,SAAkB,CAClBrwB,MAAAswB,SAAkB,EAQnByD,EAAAxzB,UAAAmwB,QAAP,WAEC1wB,KAAKowB,SAAWpwB,KAAKqwB,SAAWrwB,KAAKswB,SAAW,CAChDtwB,MAAKg0B,QAAU,EAGTD,GAAAxzB,UAAAowB,YAAP,SAAmBC,EAAuBC,GAEzC,GAAG7wB,KAAK8wB,cACP9wB,KAAK+wB,UAEN,KAAK,GAAIp0B,GAAW,EAAGA,EAAIk0B,IAAal0B,EAAG,CAC1C,GAAIq0B,GAAgBJ,EAAOj0B,EAC3B,IAAIu0B,GAAwBF,EAAMt0B,EAAI,GAAIsD,KAAKg0B,QAAUh0B,KAAKg0B,OAC9D,IAAI7C,GAAwBH,EAAM9wB,EAAI,GAAIF,KAAKg0B,QAAUh0B,KAAKg0B,OAC9D,IAAI5C,GAAwBJ,EAAMC,EAAI,GAAIjxB,KAAKg0B,QAAUh0B,KAAKg0B,OAC9D,IAAI3C,GAAkBL,EAAMt0B,GAAIsD,KAAKowB,SAAWc,GAAmBF,EAAM9wB,GAAIF,KAAKqwB,SAAWc,GAAkBH,EAAMC,GAAIjxB,KAAKswB,SAAWc,GAAmBJ,EAAM/wB,CAClK,IAAIoxB,EAAW,EAAG,CACjB,MAAO,QAGT,MAAO,MAGD0C,GAAAxzB,UAAA+wB,gBAAP,SAAuBhkB,EAAmBikB,EAAoBC,GAE7D,GAAGxxB,KAAK8wB,cACP9wB,KAAK+wB,UAEN,OAAO/wB,MAAKi0B,QAAQ3C,gBAAgBhkB,EAAUikB,EAAWC,GAInDuC,GAAAxzB,UAAAmxB,gBAAP,SAAuBV,GAEtB,GAAIt0B,GAAWs0B,EAAMt0B,CACrB,IAAIwD,GAAW8wB,EAAM9wB,CACrB,IAAI+wB,GAAWD,EAAMC,CACrB,IAAIiD,GAAYx3B,EAAEsD,KAAKowB,SAAWlwB,EAAEF,KAAKqwB,SAAWY,EAAEjxB,KAAKswB,SAAWU,EAAM/wB,CAE5E,IAAIvD,EAAI,EACPA,GAAKA,CAEN,IAAIwD,EAAI,EACPA,GAAKA,CAEN,IAAI+wB,EAAI,EACPA,GAAKA,CAEN,IAAIkD,IAAaz3B,EAAIwD,EAAI+wB,GAAGjxB,KAAKg0B,OAEjC,OAAOE,GAAKC,EAAItE,EAAoBgC,MAAQqC,GAAMC,EAAItE,EAAoBiC,KAAOjC,EAAoBkC,UAG/FgC,GAAAxzB,UAAAwwB,SAAP,WAECrwB,EAAAH,UAAMwwB,SAAQ9zB,KAAA+C,KAEdA,MAAKi0B,QAAUj0B,KAAKgyB,SAAS3iB,WAC7B,IAAI4iB,GAAkBjyB,KAAKgyB,SAASrnB,cAEpC,IAAI0nB,GAAYryB,KAAKi0B,QAAQpqB,CAC7B,IAAIyoB,GAAYtyB,KAAKi0B,QAAQlqB,CAC7B,IAAIwoB,GAAYvyB,KAAKi0B,QAAQhqB,CAC7B,IAAI3N,GAAW0D,KAAKi0B,QAAQG,MAE5B,IAAI7hB,GAAmB0f,EAAOzkB,OAE9B,IAAIglB,GAAajgB,EAAI,GAAIkgB,EAAalgB,EAAI,GAAImgB,EAAangB,EAAI,GAAIogB,EAAapgB,EAAI,GACpF,IAAIqgB,GAAargB,EAAI,GAAIsgB,EAAatgB,EAAI,GAAIugB,EAAavgB,EAAI,GAAIwgB,EAAaxgB,EAAI,GACpF,IAAIygB,GAAazgB,EAAI,GAAI0gB,EAAa1gB,EAAI,GAAI2gB,EAAa3gB,EAAI,IAAK4gB,EAAa5gB,EAAI,GAErFvS,MAAKowB,SAAWiC,EAAGG,EAAMF,EAAGG,EAAMF,EAAGG,EAAMC,CAC3C3yB,MAAKqwB,SAAWgC,EAAGO,EAAMN,EAAGO,EAAMN,EAAGO,EAAMC,CAC3C/yB,MAAKswB,SAAW+B,EAAGW,EAAMV,EAAGW,EAAMV,EAAGW,EAAMC,CAE3C,IAAIkB,GAAY7B,EAAMC,EAAMC,CAC5B,IAAI4B,GAAY1B,EAAMC,EAAMC,CAC5B,IAAIyB,GAAYvB,EAAMC,EAAMC,CAC5BlzB,MAAKg0B,QAAU13B,EAAE0gB,KAAK0P,MAAM2H,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,GAAI,EAEnD,IAAIv0B,KAAKqzB,QAAS,CACjBrzB,KAAKqzB,QAAQe,OAAS93B,CACtB0D,MAAKszB,kBAAkBzpB,EAAIwoB,CAC3BryB,MAAKszB,kBAAkBvpB,EAAIuoB,CAC3BtyB,MAAKszB,kBAAkBrpB,EAAIsoB,CAC3BvyB,MAAKszB,kBAAkBjvB,UAAUkJ,SAAW0kB,GAIvC8B,GAAAxzB,UAAAgzB,wBAAP,WAECvzB,KAAKqzB,QAAU,GAAIS,EACnB9zB,MAAKqzB,QAAQG,aAAe,iBAE5B,OAAcxzB,MAAKqzB,QAAQI,eAE7B,OAAAM,IA/G6BjE,EAiHL1yB,GAAAJ,QAAf+2B,IrBm0JNL,2CAA2CtyB,UAAUuyB,+CAA+C,+CAA+Ca,mDAAmD,qDAAqDb,gDAAgD,SAASz3B,EAAQkB,EAAOJ,GsB37JtU,GAAOid,GAAmB/d,EAAa,6CAKvC,IAAM4zB,GAAkB,WAMvB,QANKA,GAMO/T,GAFL/b,KAAA8wB,cAAwB,IAI9B9wB,MAAKgyB,SAAWjW,EAGV+T,EAAAvvB,UAAAU,QAAP,WAECjB,KAAKgyB,SAAW,IAChBhyB,MAAKszB,kBAAoB,KAG1B3yB,QAAAC,eAAWkvB,EAAAvvB,UAAA,mBtBi7JJM,IsBj7JP,WAEC,GAAIb,KAAKszB,mBAAqB,KAAM,CACnCtzB,KAAKszB,kBAAoBtzB,KAAKuzB,yBAE9BvzB,MAAK8wB,cAAgB,KAGtB,GAAG9wB,KAAK8wB,cACP9wB,KAAK+wB,UAEN,OAAO/wB,MAAKszB,mBtB+6JNvyB,WAAY,KACZC,aAAc,MsB76Jd8uB,GAAAvvB,UAAAmwB,QAAP,WAEC,KAAM,IAAIzW,GAGJ6V,GAAAvvB,UAAAowB,YAAP,SAAmBC,EAAuBC,GAEzC,KAAM,IAAI5W,GAGJ6V,GAAAvvB,UAAAmD,MAAP,WAEC,KAAM,IAAIuW,GAGJ6V,GAAAvvB,UAAA+wB,gBAAP,SAAuBhkB,EAAmBikB,EAAoBC,GAE7D,OAAQ,EAGF1B,GAAAvvB,UAAAmxB,gBAAP,SAAuBV,GAEtB,KAAM,IAAI/W,GAGJ6V,GAAAvvB,UAAAwwB,SAAP,WAEC/wB,KAAK8wB,cAAgB,MAGfhB,GAAAvvB,UAAA6I,WAAP,WAECpJ,KAAK8wB,cAAgB,KAGfhB,GAAAvvB,UAAAgzB,wBAAP,WAEC,KAAM,IAAItZ,GAEZ,OAAA6V,KAEA1yB,GAA4BJ,QAAnB8yB,ItBk6JN9T,6CAA6C5a,YAAYmX,wCAAwC,SAASrc,EAAQkB,EAAOJ,GAI5H,GuBp/JMmJ,GAAU,WAAhB,QAAMA,MAKSA,EAAAsuB,OAAgB,QAKhBtuB,GAAA0C,iBAA0B,gBAK1B1C,GAAAuuB,KAAc,MAC7B,OAAAvuB,KAEA/I,GAAoBJ,QAAXmJ,OvBq/JHwuB,wCAAwC,SAASz4B,EAAQkB,EAAOJ,GACtE,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwB/gKtB,IAAOwvB,GAAmB3zB,EAAa,2CAGvC,IAAO4zB,GAAkB5zB,EAAa,+CAGtC,IAAM04B,GAAU,SAAAl0B,GAASX,EAAnB60B,EAAUl0B,EAIf,SAJKk0B,GAIOC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAEXn0B,EAAAzD,KAAA+C,KAAM,KAENA,MAAK80B,UAAYD,EAIXD,EAAAr0B,UAAAmD,MAAP,WAEC,MAAO,IAAIkxB,GAAW50B,KAAK80B,WAIrBF,GAAAr0B,UAAAowB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO7wB,MAAK80B,UAGNF,GAAAr0B,UAAAmxB,gBAAP,SAAuBV,GAEtB,MAAOnB,GAAoBkC,UAE7B,OAAA6C,IA3ByB9E,EA6BL1yB,GAAAJ,QAAX43B,IxBsgKNlB,2CAA2CtyB,UAAUuyB,+CAA+C,iDAAiD1X,wDAAwD,SAAS/f,EAAQkB,EAAOJ,GACxO,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyB5iKtB,IAAO00B,GAAa74B,EAAc,uCAClC,IAAO84B,GAAU94B,EAAe,oCAGhC,IAAOuK,GAAavK,EAAc,wCAClC,IAAOgK,GAAsBhK,EAAY,iDzBkkKzC,IyBziKMge,GAAsB,SAAAxZ,GAASX,EAA/Bma,EAAsBxZ,EA0F3B,SA1FKwZ,KA4FJxZ,EAAAzD,KAAA+C,KAxFOA,MAAAi1B,eAAyB,IACzBj1B,MAAAk1B,gBACAl1B,MAAAm1B,kBAA2B,CAE5Bn1B,MAAA2lB,UAAiC,GAAIzjB,MAsF3ClC,MAAKgH,cAAgB,KAjFtBrG,OAAAC,eAAWsZ,EAAA3Z,UAAA,azBojKJM,IyBpjKP,WAEC,MAAOqZ,GAAuBhZ,WzBqjKxBH,WAAY,KACZC,aAAc,MyB9hKrBL,QAAAC,eAAWsZ,EAAA3Z,UAAA,iBzBsjKJM,IyBtjKP,WAEC,GAAIb,KAAK2M,wBAA0BzG,EAAuB6Q,cACzD/W,KAAKgX,qBAEN,OAAOhX,MAAKi1B,gBzBsjKN3xB,IyBnjKP,SAAyByF,GAExB,GAAI/I,KAAKi1B,gBAAkBlsB,EAC1B,MAED/I,MAAKi1B,eAAiBlsB,CAEtB/I,MAAKgJ,kCAAkC9C,EAAuB6Q,gBzBkjKxDhW,WAAY,KACZC,aAAc,MyB7iKrBL,QAAAC,eAAWsZ,EAAA3Z,UAAA,ezBmjKJM,IyBnjKP,WAEC,MAAOb,MAAK2lB,UAAUzoB,QzBojKhB6D,WAAY,KACZC,aAAc,MyBp/JdkZ,GAAA3Z,UAAA60B,SAAP,SAAgBnP,GAEf,MAAOjmB,MAAKq1B,WAAWpP,EAAOjmB,KAAK2lB,UAAUzoB,QAGvCgd,GAAA3Z,UAAA+0B,gBAAP,SAAuBrP,EAAqB1c,EAAcgsB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEzD,GAAItP,GAAS,KACZ,KAAM,IAAI8O,GAAc,kCAGzB,IAAI9O,EAAM1b,SACT0b,EAAM1b,SAASirB,sBAAsBvP,EAAM1b,SAASC,cAAcyb,GAGnE,IAAIrJ,GAAQ5c,KAAKunB,sBAAsBhe,EAEvC,IAAIqT,IAAU,EAAG,CAChB,GAAI2Y,EAAS,CACZv1B,KAAK4lB,cAAchJ,OACb,CAEN5c,KAAKs1B,gBAAgBt1B,KAAK2lB,UAAU/I,GAAQrT,EAAQ,EAAG,QAIzD,GAAIvJ,KAAKm1B,kBAAoB5rB,EAAQ,EACpCvJ,KAAKm1B,kBAAoB5rB,EAAQ,CAElCvJ,MAAKk1B,cAAc3rB,GAAS0c,CAC5BjmB,MAAK2lB,UAAUrgB,KAAK2gB,EAEpBA,GAAM/e,SAAWqC,CAEjB0c,GAAM5R,WAAWrU,KAEjBA,MAAKqJ,oBAEL,OAAO4c,GAgCD/L,GAAA3Z,UAAA80B,WAAP,SAAkBpP,EAAqBrJ,GAEtC,MAAO5c,MAAKs1B,gBAAgBrP,EAAQrJ,EAAQ5c,KAAK2lB,UAAUzoB,OAAS8C,KAAK2lB,UAAU/I,GAAO1V,SAAWlH,KAAKy1B,sBAAuB,OAG3Hvb,GAAA3Z,UAAAm1B,YAAP,WAAmB,GAAAC,KzBwgKZ,KyBxgKY,GAAAC,GAAA,EAAAA,EAAAC,UAAA34B,OAAA04B,IAAkC,CAAlCD,EAAAC,EAAA,GAAAC,UAAAD,GAElB,GAAI3oB,GAAa0oB,EAAWz4B,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAKsQ,EAAKtQ,IAChCqD,KAAKo1B,SAASO,EAAWh5B,IAMpBud,GAAA3Z,UAAAmD,MAAP,WAEC,GAAIsK,GAAqC,GAAIkM,EAE7Cla,MAAKiO,OAAOD,EAEZ,OAAOA,GAGDkM,GAAA3Z,UAAA0N,OAAP,SAAcD,GAEbtN,EAAAH,UAAM0N,OAAMhR,KAAA+C,KAACgO,EAEbA,GAAYmJ,cAAgBnX,KAAKi1B,cAEjC,IAAIhoB,GAAajN,KAAK2lB,UAAUzoB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjCqR,EAAYonB,SAASp1B,KAAK2lB,UAAUhpB,GAAG+G,SAelCwW,GAAA3Z,UAAAu1B,SAAP,SAAgB7P,GAEf,MAAOjmB,MAAK2lB,UAAUtM,QAAQ4M,IAAU,EAMlC/L,GAAA3Z,UAAAkO,cAAP,WAEC,IAAK,GAAI9R,GAAWqD,KAAK2lB,UAAUzoB,OAAS,EAAGP,GAAK,EAAGA,IACtDqD,KAAK0O,YAAY1O,KAAK2lB,UAAUhpB,GAEjC+D,GAAAH,UAAMkO,cAAaxR,KAAA+C,MAGbka,GAAA3Z,UAAAw1B,gBAAP,SAAuBxsB,GAEtB,MAAOvJ,MAAKk1B,cAAc3rB,GAYpB2Q,GAAA3Z,UAAAy1B,WAAP,SAAkBpZ,GAEjB,GAAIqJ,GAAsBjmB,KAAK2lB,UAAU/I,EAEzC,IAAIqJ,GAAS,KACZ,KAAM,IAAI+O,GAAW,uDAEtB,OAAO/O,GAiBD/L,GAAA3Z,UAAA01B,eAAP,SAAsB7nB,GAErB,GAAInB,GAAajN,KAAK2lB,UAAUzoB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjC,GAAIqD,KAAK2lB,UAAUhpB,GAAGyR,MAAQA,EAC7B,MAAOpO,MAAK2lB,UAAUhpB,EAExB,OAAO,MAWDud,GAAA3Z,UAAAiK,cAAP,SAAqByb,GAEpB,GAAIiQ,GAAoBl2B,KAAK2lB,UAAUtM,QAAQ4M,EAE/C,IAAIiQ,IAAe,EAClB,KAAM,IAAInB,GAAc,+CAEzB,OAAOmB,GAGDhc,GAAA3Z,UAAAk1B,oBAAP,WAEC,GAAIz1B,KAAKm2B,uBACRn2B,KAAKo2B,yBAEN,OAAOp2B,MAAKm1B,kBAsBNjb,GAAA3Z,UAAA81B,qBAAP,SAA4B5mB,GAE3B,MAAO,IAAIvN,OAsBLgY,GAAA3Z,UAAAmO,YAAP,SAAmBuX,GAElB,GAAIA,GAAS,KACZ,KAAM,IAAI8O,GAAc,iCAEzB/0B,MAAK4lB,cAAc5lB,KAAKwK,cAAcyb,GAEtC,OAAOA,GAGD/L,GAAA3Z,UAAA+1B,mBAAP,SAA0B/sB,GAEzB,MAAOvJ,MAAK4lB,cAAc5lB,KAAKunB,sBAAsBhe,IAyB/C2Q,GAAA3Z,UAAAqlB,cAAP,SAAqBhJ,GAEpB,GAAIqJ,GAAsBjmB,KAAKw1B,sBAAsB5Y,EAErDqJ,GAAM5R,WAAW,KAEjBrU,MAAKqJ,oBAEL,OAAO4c,GAmBD/L,GAAA3Z,UAAAg2B,eAAP,SAAsBC,EAA+BC,GAA/B,GAAAD,QAAA,GAA6B,CAA7BA,EAAA,EAA+B,GAAAC,QAAA,GAAoC,CAApCA,EAAA,WAEpD,GAAID,EAAa,EAChB,KAAM,IAAIxB,GAAW,+CAEtB,IAAIyB,EAAWz2B,KAAK2lB,UAAUzoB,OAC7B,KAAM,IAAI83B,GAAW,6CAEtB,KAAI,GAAIr4B,GAAoB65B,EAAY75B,EAAI85B,EAAU95B,IACrDqD,KAAK0O,YAAY1O,KAAK2lB,UAAUhpB,IA+B3Bud,GAAA3Z,UAAAm2B,cAAP,SAAqBzQ,EAAqBrJ,IAenC1C,GAAA3Z,UAAAo2B,aAAP,SAAoBC,EAAsBC,GAEzC72B,KAAK82B,eAAe92B,KAAKwK,cAAcosB,GAAS52B,KAAKwK,cAAcqsB,IAY7D3c,GAAA3Z,UAAAu2B,eAAP,SAAsBC,EAAeC,GAEpC,GAAIztB,GAAevJ,KAAK2lB,UAAUqR,GAAQ9vB,QAC1C,IAAI+e,GAAsBjmB,KAAK2lB,UAAUoR,EAEzC/2B,MAAKs1B,gBAAgBt1B,KAAK2lB,UAAUqR,GAASh3B,KAAK2lB,UAAUoR,GAAQ7vB,SACpElH,MAAKs1B,gBAAgBrP,EAAO1c,GAStB2Q,GAAA3Z,UAAA0O,kBAAP,WAECvO,EAAAH,UAAM0O,kBAAiBhS,KAAA+C,KAEvB,IAAIqQ,EACJ,IAAIiH,GAAqBtX,KAAK2lB,UAAUzoB,MAExC,IAAIoa,EAAc,EAAG,CACpB,GAAI2f,EACJ,IAAIC,EACJ,IAAIC,GAAaC,EAAaC,CAC9B,IAAIC,GAAaC,EAAaC,CAE9B,KAAK,GAAI76B,GAAW,EAAGA,EAAI2a,IAAe3a,EAAG,CAC5C0T,EAAMrQ,KAAK2lB,UAAUhpB,GAAG2M,OAAOtJ,KAE/B,IAAIrD,GAAK,EAAG,CACX26B,EAAOjnB,EAAIjD,OAAS+pB,EAAO9mB,EAAIxG,EAC/B0tB,GAAOlnB,EAAIlG,QAAUitB,EAAO/mB,EAAItG,EAChCytB,GAAOnnB,EAAI9G,OAAS8tB,EAAOhnB,EAAIpG,OACzB,CACNitB,EAAM7mB,EAAIjD,OAAS6pB,EAAM5mB,EAAIxG,EAC7B,IAAIotB,EAAME,EACTA,EAAOF,CACR,IAAIC,EAAMI,EACTA,EAAOJ,CAERA,GAAM7mB,EAAIlG,QAAU8sB,EAAM5mB,EAAItG,EAC9B,IAAIktB,EAAMG,EACTA,EAAOH,CACR,IAAIC,EAAMK,EACTA,EAAOL,CAERA,GAAM7mB,EAAI9G,OAAS0tB,EAAM5mB,EAAIpG,EAC7B,IAAIgtB,EAAMI,EACTA,EAAOJ,CACR,IAAIC,EAAMM,EACTA,EAAON,GAIVl3B,KAAKkP,YAAY9B,MAAQkqB,GAAQt3B,KAAKkP,YAAYrF,EAAIstB,EACtDn3B,MAAKkP,YAAY/E,OAASotB,GAAQv3B,KAAKkP,YAAYnF,EAAIqtB,EACvDp3B,MAAKkP,YAAY3F,MAAQiuB,GAAQx3B,KAAKkP,YAAYjF,EAAIotB,OAChD,CACNr3B,KAAKkP,YAAYuoB,YAOZvd,GAAA3Z,UAAAyI,kCAAP,SAAyC0uB,GAExC,GAAIh3B,EAAAH,UAAMyI,kCAAiC/L,KAAA+C,KAAC03B,GAC3C,MAAO,KAER,IAAIzqB,GAAajN,KAAK2lB,UAAUzoB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjCqD,KAAK2lB,UAAUhpB,GAAGqM,kCAAkC0uB,EAErD,OAAO,OAODxd,GAAA3Z,UAAA4K,WAAP,SAAkBpC,EAAamF,GAE9BxN,EAAAH,UAAM4K,WAAUlO,KAAA+C,KAAC+I,EAAOmF,EAExB,IAAIjB,GAAajN,KAAK2lB,UAAUzoB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjCqD,KAAK2lB,UAAUhpB,GAAGwO,WAAWpC,EAAOmF,GAQ/BgM,GAAA3Z,UAAAi1B,sBAAP,SAA6B5Y,GAE5B,GAAIqJ,GAAsBjmB,KAAK2lB,UAAUvM,OAAOwD,EAAO,GAAG,EAG1D,IAAI5c,KAAKm1B,mBAAqBlP,EAAM/e,SAAW,EAC9ClH,KAAKm2B,uBAAyB,WAExBn2B,MAAKk1B,cAAcjP,EAAM/e,SAEhC+e,GAAM/e,UAAY,KAElB,OAAO+e,GAGD/L,GAAA3Z,UAAAgnB,sBAAP,SAA6Bhe,GAE5B,IAAKvJ,KAAKk1B,cAAc3rB,GACvB,OAAQ,CAET,OAAOvJ,MAAK2lB,UAAUtM,QAAQrZ,KAAKk1B,cAAc3rB,IAG1C2Q,GAAA3Z,UAAA61B,wBAAR,WAECp2B,KAAKm2B,uBAAyB,KAE9Bn2B,MAAKm1B,kBAAoB,CACzB,IAAIloB,GAAajN,KAAK2lB,UAAUzoB,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAC/B,GAAIqD,KAAKm1B,kBAAoBn1B,KAAK2lB,UAAUhpB,GAAGuK,SAC9ClH,KAAKm1B,kBAAoBn1B,KAAK2lB,UAAUhpB,GAAGuK,QAE7ClH,MAAKm1B,mBAAqB,EAmBpBjb,GAAA3Z,UAAAuR,aAAP,SAAoBjI,EAAUE,EAAUgI,EAA2B4lB,GAA3B,GAAA5lB,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAA4lB,QAAA,GAAyB,CAAzBA,EAAA,MAElE,IAAI33B,KAAKuH,qBACR,MAED,IAAGvH,KAAKwH,mBAAqB,IAAMmwB,EAClC,MAED,IAAI33B,KAAKgN,eAAgB,CACxB,GAAIic,GAAkBjpB,KAAKgN,eAAe9P,MAC1C,IAAI06B,GAAkB,KACtB,KAAK,GAAIj7B,GAAW,EAAGA,EAAIssB,EAAUtsB,IAAK,CACzC,GAAIqD,KAAKgN,eAAerQ,GAAGmV,aAAajI,EAAGE,EAAGgI,EAAW,MAAO,CAC/D6lB,EAAU,IACV,QAIF,IAAKA,EACJ,MAAO;CAGT,MAAO53B,MAAK63B,sBAAsBhuB,EAAGE,EAAGgI,EAAW4lB,GAG7Czd,GAAA3Z,UAAAs3B,sBAAP,SAA6BhuB,EAAUE,EAAUgI,EAAmB4lB,GAEnE,GAAIrgB,GAAqBtX,KAAK2lB,UAAUzoB,MACxC,KAAI,GAAIP,GAAW,EAAGA,EAAI2a,EAAa3a,IACtC,GAAGqD,KAAK2lB,UAAUhpB,GAAGmV,aAAajI,EAAEE,EAAGgI,EAAW4lB,GACjD,MAAO,KAET,OAAO,OAGDzd,GAAA3Z,UAAAuK,gBAAP,WAEC,GAAI9K,KAAKkN,SACRlN,KAAKmX,cAAgB,KAEtBzW,GAAAH,UAAMuK,gBAAe7N,KAAA+C,MAzrBRka,GAAAhZ,UAAmB,gCA2rBlC,OAAAgZ,IA7rBqCzT,EA+rBLrJ,GAAAJ,QAAvBkd,IzBk7JN4d,uCAAuC12B,UAAU22B,oCAAoC32B,UAAUqE,wCAAwC,wCAAwC2S,iDAAiD,mDAAmD4f,iDAAiD,SAAS97B,EAAQkB,EAAOJ,GAC/V,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0BtpLtB,IAAO43B,GAAkB/7B,EAAa,6CACtC,IAAOg8B,GAAMh8B,EAAgB,iCAG7B,IAAOi8B,GAAUj8B,EAAe,oCAEhC,IAAOk8B,GAAcl8B,EAAc,wCACnC,IAAOm8B,GAAWn8B,EAAe,qCACjC,IAAOo8B,GAAWp8B,EAAe,qCAGjC,IAAOge,GAAsBhe,EAAY,uD1BmtLzC,I0BjpLMq8B,GAAe,SAAA73B,GAASX,EAAxBw4B,EAAe73B,EAmGpB,SAnGK63B,GAmGOC,EAAgCC,GAnG7C,GAAA/xB,GAAA1G,IAmGa,IAAAw4B,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAE3C/3B,EAAAzD,KAAA+C,KAEAA,MAAK04B,aAAeF,CACpBx4B,MAAK24B,YAAcF,CAEnBz4B,MAAK44B,yBAA2B,SAACpwB,GAAqB,MAAA9B,GAAKmyB,gBAAgBrwB,GAC3ExI,MAAK84B,4BAA8B,SAACtwB,GAAqB,MAAA9B,GAAKqyB,mBAAmBvwB,GACjFxI,MAAKg5B,wBAA0B,SAACxwB,GAAsB,MAAA9B,GAAKuyB,eAAezwB,GAC1ExI,MAAKk5B,qBAAuB,SAAC1wB,GAAyB,MAAA9B,GAAKyyB,YAAY3wB,GACvExI,MAAKo5B,sBAAwB,SAAC5wB,GAAsB,MAAA9B,GAAK2yB,aAAa7wB,IAhEvE7H,OAAAC,eAAW23B,EAAAh4B,UAAA,W1BorLJM,I0BprLP,WAEC,MAAOb,MAAKs5B,U1BqrLNv4B,WAAY,KACZC,aAAc,M0BhnLdu3B,GAAAh4B,UAAAg5B,MAAP,WAEC,IAAKv5B,KAAKw5B,QACT,MAED,IAAIx5B,KAAK04B,aAAc,CACtB,GAAIe,EACJA,GAAMxB,EAAmByB,YAAY15B,KAAK24B,YAC1Cc,GAAIE,cAAc35B,KAAKw5B,SAGxBx5B,KAAK45B,iBA0KCrB,GAAAh4B,UAAAs5B,KAAP,SAAYC,EAAoBC,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAE/Ej6B,KAAKk6B,aAAaL,KAAKC,EAASC,EAASC,EAAIC,GAyFvC1B,GAAAh4B,UAAA45B,SAAP,SAAgBC,EAAUL,EAA8BC,EAAkBC,GAAhD,GAAAF,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,KAAkB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAEzEj6B,KAAKk6B,aAAaC,SAASC,EAAM,GAAIL,EAASC,EAAIC,GAG3C1B,GAAAh4B,UAAA25B,WAAR,WAEC,GAAIl6B,KAAK04B,aAAc,CACtB,GAAIe,GAAyBxB,EAAmByB,YAAY15B,KAAK24B,YACjE34B,MAAKw5B,QAAUC,EAAIY,gBACb,CACNr6B,KAAKw5B,QAAU,GAAItB,GAGpBl4B,KAAKw5B,QAAQlxB,iBAAiB+vB,EAAYiC,cAAet6B,KAAKg5B,wBAC9Dh5B,MAAKw5B,QAAQlxB,iBAAiB6vB,EAAWoC,mBAAoBv6B,KAAK84B,4BAClE94B,MAAKw5B,QAAQlxB,iBAAiB6vB,EAAWqC,eAAgBx6B,KAAK44B,yBAG9D54B,MAAKw5B,QAAQiB,kBAAkBz6B,KAAKk5B,qBACpCl5B,MAAKw5B,QAAQkB,uBAAuB16B,KAAKo5B,sBAEzC,OAAOp5B,MAAKw5B,QAGLjB,GAAAh4B,UAAAq5B,eAAR,WAEC55B,KAAKw5B,QAAQvlB,oBAAoBokB,EAAYiC,cAAet6B,KAAKg5B,wBACjEh5B,MAAKw5B,QAAQvlB,oBAAoBkkB,EAAWoC,mBAAoBv6B,KAAK84B,4BACrE94B,MAAKw5B,QAAQvlB,oBAAoBkkB,EAAWqC,eAAgBx6B,KAAK44B,yBAEjE,KAAK54B,KAAK04B,aACT14B,KAAKw5B,QAAQmB,MAEd36B,MAAKw5B,QAAU,KA0BTjB,GAAAh4B,UAAAq6B,OAAP,YAccrC,GAAAsC,aAAd,SAA2BC,GAE1B5C,EAAO2C,aAAaC,GAYPvC,GAAAwC,cAAd,SAA4BC,GAE3B9C,EAAO6C,cAAcC,GAGdzC,GAAAh4B,UAAAs4B,gBAAR,SAAwBrwB,GAEvBxI,KAAKsL,cAAc9C,GAMZ+vB,GAAAh4B,UAAA44B,YAAR,SAAoB3wB,GAEnB,GAAIxI,KAAKkU,iBAAiBkkB,EAAe6C,YAAa,CACrDj7B,KAAKsL,cAAc9C,EACnB,OAAO,UACD,CACN,MAAO,QAOD+vB,GAAAh4B,UAAA84B,aAAR,SAAqB7wB,GAEpB,GAAIxI,KAAKkU,iBAAiBokB,EAAY4C,aAAc,CACnDl7B,KAAKsL,cAAc9C,EACnB,OAAO,UACD,CACN,MAAO,QAID+vB,GAAAh4B,UAAAw4B,mBAAR,SAA2BvwB,GAE1BxI,KAAKsL,cAAc9C,GAMZ+vB,GAAAh4B,UAAA04B,eAAR,SAAuBzwB,GAEtBxI,KAAKs5B,SAA2B9wB,EAAM2yB,OAEtC,IAAIn7B,KAAKs5B,SACRt5B,KAAKo1B,SAASp1B,KAAKs5B,SAEpBt5B,MAAKsL,cAAc9C,EAEnBxI,MAAK45B,iBAEP,OAAArB,IArhB8Bre,EAuhB9B9c,GAAyBJ,QAAhBu7B,I1B+lLN6C,oCAAoCh6B,UAAUi6B,qCAAqCj6B,UAAUk6B,qCAAqCl6B,UAAUm6B,wCAAwCn6B,UAAUo6B,6CAA6Cp6B,UAAUq6B,iCAAiCr6B,UAAU6a,uDAAuD,yDAAyDyf,uCAAuC,SAASx/B,EAAQkB,EAAOJ,GACld,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2BvsMtB,IAAO6Z,GAAsBhe,EAAY,uDAEzC,IAAOy/B,GAAcz/B,EAAc,8CAInC,IAAM0/B,GAAK,SAAAl7B,GAASX,EAAd67B,EAAKl7B,EAOV,SAPKk7B,GAOO1tB,GAAA,GAAAA,QAAA,GAA8B,CAA9BA,EAAA,KAEXxN,EAAAzD,KAAA+C,KAPOA,MAAA67B,oBAA2C,GAAI35B,MAC/ClC,MAAA87B,YAAmC,GAAI55B,MAExClC,MAAA+7B,iBAAmB,CAMzB/7B,MAAKkO,UAAYA,GAAa,GAAIytB,EAElC37B,MAAKwV,SAAW,IAChBxV,MAAKoL,QAAUpL,KAGT47B,EAAAr7B,UAAAy7B,mBAAP,SAA0BC,GAEzB,GAAIt/B,GAAW,CACf,IAAIsQ,GAAajN,KAAK87B,YAAY5+B,MAElC++B,GAAUpnB,MAAQ7U,IAElBA,MAAK+7B,kBAEL,OAAOp/B,EAAIsQ,EACVjN,KAAK87B,YAAYn/B,KAAKu/B,SAASD,GAM1BL,GAAAr7B,UAAA2U,oBAAP,SAA2BhH,GAE1BlO,KAAK67B,oBAAoBv2B,KAAK4I,EAG9B,IAAIlO,KAAK87B,YAAYziB,QAAQnL,KAAe,EAC3ClO,KAAK87B,YAAYx2B,KAAK4I,GAMjB0tB,GAAAr7B,UAAAwU,sBAAP,SAA6B7G,GAE5BlO,KAAK67B,oBAAoBziB,OAAOpZ,KAAK67B,oBAAoBxiB,QAAQnL,GAAY,EAG7E,IAAIlO,KAAK67B,oBAAoBxiB,QAAQnL,KAAe,EACnDlO,KAAK87B,YAAY1iB,OAAOpZ,KAAK87B,YAAYziB,QAAQnL,GAAY,GAEhE,OAAA0tB,IArDoB1hB,EAuDpB9c,GAAeJ,QAAN4+B,I3BwrMN3f,uDAAuD,uDAAuDkgB,8CAA8C,gDAAgDC,sCAAsC,SAASlgC,EAAQkB,EAAOJ,G4BlvM7Q,GAAOq/B,GAAQngC,EAAgB,iCAI/B,IAAOwtB,GAAUxtB,EAAe,qCAChC,IAAO0/B,GAAK1/B,EAAgB,sCAG5B,IAAOogC,GAAapgC,EAAc,wCAElC,IAAOmB,GAAMnB,EAAgB,qCAC7B,IAAOqgC,GAAWrgC,EAAe,wCACjC,IAAOqK,GAAkBrK,EAAa,+CACtC,IAAOsgC,GAAatgC,EAAc,0CAClC,IAAOugC,GAAYvgC,EAAe,2CAElC,IAAMwgC,GAAI,WA2DT,QA3DKA,GA2DOxlB,EAAoBrC,EAAoBlB,GA3DrD,GAAAjN,GAAA1G,IA2DiC,IAAA6U,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAlB,QAAA,GAAoB,CAApBA,EAAA,KAlC5C3T,KAAAkM,OAAgB,CAChBlM,MAAAqK,QAAiB,CAEjBrK,MAAA28B,MAAe,CACf38B,MAAA48B,WAAoB,CACpB58B,MAAA68B,iBAA0B,CAC1B78B,MAAA88B,iBAA0B,CAE1B98B,MAAA+8B,eAAyB,IACzB/8B,MAAAg9B,cAAwB,IAOxBh9B,MAAAi9B,aAAuB,GAAIX,EAM5Bt8B,MAAAk9B,cAAkC,GAAIh7B,MAc5ClC,MAAKm9B,4BAA8B,SAAC30B,GAA6B,MAAA9B,GAAK02B,oBAAoB50B,GAC1FxI,MAAKq9B,6BAA+B,SAAC70B,GAAsB,MAAA9B,GAAK42B,qBAAqB90B,GACrFxI,MAAKu9B,2BAA6B,SAAC/0B,GAAwB,MAAA9B,GAAK82B,mBAAmBh1B,GACnFxI,MAAKy9B,0BAA4B,SAACj1B,GAAwB,MAAA9B,GAAKg3B,kBAAkBl1B,GAEjFxI,MAAK6U,MAAQA,GAAS,GAAI+mB,EAC1B57B,MAAK2T,OAASA,GAAU,GAAItW,EAC5B2C,MAAKkX,SAAWA,CAGhB,IAAGymB,SAAU,CACZA,SAASC,KAAK3d,MAAM4d,OAAS,KAE7B79B,MAAK89B,aAAeH,SAASI,cAAc,MAC3C/9B,MAAK89B,aAAa7d,MAAM3S,SAAW,UAEnCqwB,UAASC,KAAKI,YAAYh+B,KAAK89B,cAGhC99B,KAAKi+B,cAAgBxB,EAAa/C,aAClC15B,MAAKi+B,cAAcC,aAAal+B,MAQjCW,OAAAC,eAAW87B,EAAAn8B,UAAA,U5BgsMJM,I4BhsMP,WAEC,MAAOb,MAAKm+B,U5BisMNp9B,WAAY,KACZC,aAAc,M4B/rMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,U5BksMJM,I4BlsMP,WAEC,MAAOb,MAAKo+B,U5BmsMNr9B,WAAY,KACZC,aAAc,M4BjsMrBL,QAAAC,eAAI87B,EAAAn8B,UAAA,e5BosMGM,I4BpsMP,WAEC,MAAOb,MAAKk9B,e5BqsMNn8B,WAAY,KACZC,aAAc,M4BnsMd07B,GAAAn8B,UAAA89B,eAAP,SAAsBC,GAErB,MAAOA,GAAclvB,sBAAsB3C,gBAAgBzM,KAAKu+B,UAAUv+B,KAAKm+B,SAAUn+B,KAAKo+B,SAAU,MAAOv0B,EAGzG6yB,GAAAn8B,UAAAi+B,eAAP,SAAsBF,GAErB,MAAOA,GAAclvB,sBAAsB3C,gBAAgBzM,KAAKu+B,UAAUv+B,KAAKm+B,SAAUn+B,KAAKo+B,SAAU,MAAOr0B,EAGzG2yB,GAAAn8B,UAAAk+B,oBAAP,SAA2BH,GAE1B,GAAII,EACJ,IAAIC,GAAqC,GAAIz8B,MAE7C,IAAI+K,GAAajN,KAAKk9B,cAAchgC,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAAK,CACpC+hC,EAAgBJ,EAAclvB,sBAAsB3C,gBAAgBzM,KAAKu+B,UAAUv+B,KAAKk9B,cAAcvgC,GAAGkN,EAAG7J,KAAKk9B,cAAcvgC,GAAGoN,EAAG,KACrI40B,GAAiBr5B,KAAK,GAAIokB,GAAWgV,EAAc70B,EAAG60B,EAAc30B,EAAG/J,KAAKk9B,cAAcvgC,GAAGgG,KAG9F,MAAOg8B,GAMRh+B,QAAAC,eAAW87B,EAAAn8B,UAAA,e5B8rMJM,I4B9rMP,WAEC,MAAOb,MAAK89B,c5B+rMN/8B,WAAY,KACZC,aAAc,M4B3rMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,Y5BisMJM,I4BjsMP,WAEC,MAAOb,MAAK4+B,Y5BksMNt7B,I4B/rMP,SAAoByF,GAEnB,GAAI/I,KAAK4+B,YAAc71B,EACtB,MAED,IAAI/I,KAAK4+B,WAAY,CACpB5+B,KAAK4+B,WAAW39B,SAChBjB,MAAK4+B,WAAW3qB,oBAAoBuoB,EAAcqC,iBAAkB7+B,KAAKu9B,2BACzEv9B,MAAK4+B,WAAW3qB,oBAAoBuoB,EAAcsC,gBAAiB9+B,KAAKy9B,2BAGzEz9B,KAAK4+B,WAAa71B,CAElB/I,MAAK4+B,WAAWt2B,iBAAiBk0B,EAAcqC,iBAAkB7+B,KAAKu9B,2BACtEv9B,MAAK4+B,WAAWt2B,iBAAiBk0B,EAAcsC,gBAAiB9+B,KAAKy9B,0BAGrEz9B,MAAK++B,kBAAoB/+B,KAAK4+B,WAAWI,yBAEzC,IAAIh/B,KAAKi/B,SACRj/B,KAAK++B,kBAAkBprB,OAAS3T,KAAKi/B,QAGtCj/B,MAAK4+B,WAAWM,eAAkBl/B,KAAK68B,kBAAoB,GAAM,KAAM,GACvE78B,MAAK4+B,WAAWO,eAAkBn/B,KAAK68B,kBAAoB,EAAK,KAAM,GACtE78B,MAAK4+B,WAAWQ,eAAiBp/B,KAAK68B,iBAAmB,KAAM,GAC/D78B,MAAK4+B,WAAWS,kBAAoBr/B,KAAK88B,gBACzC98B,MAAK4+B,WAAWxxB,MAAQpN,KAAKkM,MAC7BlM,MAAK4+B,WAAWz0B,OAASnK,KAAKqK,OAC9BrK,MAAK4+B,WAAWU,aAAet/B,KAAKu/B,e5B0rM9Bx+B,WAAY,KACZC,aAAc,M4BrrMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,gB5B2rMJM,I4B3rMP,WAEC,MAAOb,MAAKu/B,e5B4rMNj8B,I4BzrMP,SAAwByF,GAEvB,GAAI/I,KAAKu/B,eAAiBx2B,EACzB,MAED/I,MAAKu/B,cAAgBx2B,CAErB,IAAI/I,KAAK4+B,WACR5+B,KAAK4+B,WAAWU,aAAet/B,KAAKu/B,e5BwrM/Bx+B,WAAY,KACZC,aAAc,M4BnrMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,mB5ByrMJM,I4BzrMP,WAEC,MAAOb,MAAK68B,kB5B0rMNv5B,I4BvrMP,SAA2ByF,GAE1B,GAAI/I,KAAK68B,kBAAoB9zB,EAC5B,MAED/I,MAAK68B,iBAAmB9zB,CAExB/I,MAAK4+B,WAAWM,eAAkBn2B,GAAS,GAAM,KAAM,GACvD/I,MAAK4+B,WAAWO,eAAkBp2B,GAAS,EAAK,KAAM,GACtD/I,MAAK4+B,WAAWQ,eAAiBr2B,EAAQ,KAAM,K5BsrMzChI,WAAY,KACZC,aAAc,M4BhrMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,mB5BurMJM,I4BvrMP,WAEC,MAAOb,MAAK88B,kB5B4rMNx5B,I4BrrMP,SAA2ByF,GAE1B,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI/I,KAAK88B,kBAAoB/zB,EAC5B,MAED/I,MAAK4+B,WAAWS,kBAAoBr/B,KAAK88B,iBAAmB/zB,G5BorMtDhI,WAAY,KACZC,aAAc,M4B9qMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,U5BqrMJM,I4BrrMP,WAEC,MAAOb,MAAKi/B,U5ByrMN37B,I4BnrMP,SAAkByF,GAEjB,GAAI/I,KAAKi/B,UAAYl2B,EACpB,MAED,IAAI/I,KAAKi/B,SACRj/B,KAAKi/B,SAAShrB,oBAAoBsoB,EAAYiD,mBAAoBx/B,KAAKq9B,6BAExEr9B,MAAKi/B,SAAWl2B,CAEhB,IAAI/I,KAAK++B,kBACR/+B,KAAK++B,kBAAkBprB,OAAS3T,KAAKi/B,QAEtC,IAAIj/B,KAAKoL,QACRpL,KAAKoL,QAAQ8C,UAAUiH,iBAAiBnV,KAAKi/B,SAE9Cj/B,MAAKi/B,SAAS32B,iBAAiBi0B,EAAYiD,mBAAoBx/B,KAAKq9B,6BACpEr9B,MAAKg9B,cAAgB,IACrBh9B,MAAK+8B,eAAiB,M5B+qMhBh8B,WAAY,KACZC,aAAc,M4BzqMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,S5BgrMJM,I4BhrMP,WAEC,MAAOb,MAAKoL,S5BorMN9H,I4B9qMP,SAAiByF,GAEhB,GAAI/I,KAAKoL,SAAWrC,EACnB,MAED,IAAI/I,KAAKoL,QACRpL,KAAKoL,QAAQ6I,oBAAoB1N,EAAmBgF,kBAAmBvL,KAAKm9B,4BAE7En9B,MAAKoL,QAAUrC,CAEf/I,MAAKoL,QAAQ9C,iBAAiB/B,EAAmBgF,kBAAmBvL,KAAKm9B,4BAEzE,IAAIn9B,KAAKi/B,SACRj/B,KAAKoL,QAAQ8C,UAAUiH,iBAAiBnV,KAAKi/B,W5B2qMxCl+B,WAAY,KACZC,aAAc,M4BrqMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,a5B4qMJM,I4B5qMP,WAEC,MAAOb,MAAK48B,Y5B6qMN77B,WAAY,KACZC,aAAc,M4BxqMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,S5B8qMJM,I4B9qMP,WAEC,MAAOb,MAAKkM,Q5B+qMN5I,I4B5qMP,SAAiByF,GAEhB,GAAI/I,KAAKkM,QAAUnD,EAClB,MAED/I,MAAKkM,OAASnD,CACd/I,MAAKy/B,aAAez/B,KAAKkM,OAAOlM,KAAKqK,OACrCrK,MAAKi/B,SAASS,WAAWC,cAAgB3/B,KAAKy/B,YAC9Cz/B,MAAK4+B,WAAWxxB,MAAQrE,CACxB,IAAG/I,KAAK89B,aAAc,CACrB99B,KAAK89B,aAAa7d,MAAM7S,MAAQrE,EAAQ,O5B6qMnChI,WAAY,KACZC,aAAc,M4BvqMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,U5B6qMJM,I4B7qMP,WAEC,MAAOb,MAAKqK,S5B8qMN/G,I4B3qMP,SAAkByF,GAEjB,GAAI/I,KAAKqK,SAAWtB,EACnB,MAED/I,MAAKqK,QAAUtB,CACf/I,MAAKy/B,aAAez/B,KAAKkM,OAAOlM,KAAKqK,OACrCrK,MAAKi/B,SAASS,WAAWC,cAAgB3/B,KAAKy/B,YAC9Cz/B,MAAK4+B,WAAWz0B,OAASpB,CACzB,IAAG/I,KAAK89B,aAAc,CACrB99B,KAAK89B,aAAa7d,MAAM9V,OAASpB,EAAQ,O5B4qMpChI,WAAY,KACZC,aAAc,M4BtqMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,e5B4qMJM,I4B5qMP,WAEC,MAAOb,MAAKi9B,c5B6qMN35B,I4B1qMP,SAAuByF,GAEtB,GAAI/I,KAAKi9B,cAAgBl0B,EACxB,MAED,IAAIA,GAAS,KACZ/I,KAAKi9B,aAAe,GAAIX,OAExBt8B,MAAKi9B,aAAel0B,G5B0qMfhI,WAAY,KACZC,aAAc,M4BrqMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,K5B2qMJM,I4B3qMP,WAEC,MAAOb,MAAK4+B,WAAW/0B,G5B4qMjBvG,I4BzqMP,SAAayF,GAEZ,GAAI/I,KAAK4+B,WAAW/0B,GAAKd,EACxB,MAED/I,MAAK4+B,WAAW/0B,GAAKd,CACrB,IAAG/I,KAAK89B,aAAc,CACrB99B,KAAK89B,aAAa7d,MAAM3P,KAAOvH,EAAQ,O5B0qMlChI,WAAY,KACZC,aAAc,M4BpqMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,K5B0qMJM,I4B1qMP,WAEC,MAAOb,MAAK4+B,WAAW70B,G5B2qMjBzG,I4BxqMP,SAAayF,GAEZ,GAAI/I,KAAK4+B,WAAW70B,GAAKhB,EACxB,MAED/I,MAAK4+B,WAAW70B,GAAKhB,CACrB,IAAG/I,KAAK89B,aAAc,CACrB99B,KAAK89B,aAAa7d,MAAM1P,IAAMxH,EAAQ,O5ByqMjChI,WAAY,KACZC,aAAc,M4BnqMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,W5ByqMJM,I4BzqMP,WAEC,MAAQb,MAAK89B,cAAgB99B,KAAK89B,aAAa7d,MAAM2f,YAAc,W5B0qM7Dt8B,I4BvqMP,SAAmByF,GAElB,GAAG/I,KAAK89B,aAAc,CACrB99B,KAAK89B,aAAa7d,MAAM2f,WAAa72B,EAAO,UAAY,W5B0qMnDhI,WAAY,KACZC,aAAc,M4BlqMrBL,QAAAC,eAAW87B,EAAAn8B,UAAA,sB5ByqMJM,I4BzqMP,WAEC,MAAO,I5B2qMDE,WAAY,KACZC,aAAc,M4BrqMd07B,GAAAn8B,UAAAs/B,OAAP,WAEC7/B,KAAK8/B,aAGL9/B,MAAKi/B,SAASS,WAAWC,cAAgB3/B,KAAKy/B,YAE9C,IAAIz/B,KAAKg9B,cAAe,CACvBh9B,KAAKg9B,cAAgB,KACrBh9B,MAAKi/B,SAASS,WAAWK,oBAAoB//B,KAAK4+B,WAAWoB,YAAYn2B,EAAG7J,KAAK4+B,WAAWoB,YAAYj2B,EAAG/J,KAAK4+B,WAAWoB,YAAY5yB,MAAOpN,KAAK4+B,WAAWoB,YAAY71B,QAG3K,GAAInK,KAAK+8B,eAAgB,CACxB/8B,KAAK+8B,eAAiB,KACtB/8B,MAAKi/B,SAASS,WAAWO,iBAAiBjgC,KAAK4+B,WAAWsB,SAASr2B,EAAG7J,KAAK4+B,WAAWsB,SAASn2B,EAAG/J,KAAK4+B,WAAWsB,SAAS9yB,MAAOpN,KAAK4+B,WAAWsB,SAAS/1B,QAI5J,IAAKnK,KAAKu/B,cAAe,CACxB,GAAIv/B,KAAKmgC,gBAAkBngC,KAAK89B,cAAgB99B,KAAKi+B,cAAcmC,cAAgBpgC,KAAKi+B,cAAcoC,cACrGrgC,KAAKi+B,cAAcqC,kBAAoBtgC,KAAKugC,YAAYC,iBAAiBxgC,KAAKm+B,SAAUn+B,KAAKo+B,SAAUp+B,KAExGA,MAAKi+B,cAAcwC,gBAAgBzgC,KAAKmgC,gBAMzCngC,KAAK++B,kBAAkB9pB,OAGvBjV,MAAKoL,QAAQ4wB,mBAAmBh8B,KAAK++B,kBAGrC/+B,MAAK4+B,WAAWiB,OAAO7/B,KAAK++B,mBAMtBrC,GAAAn8B,UAAAu/B,YAAP,WAEC,GAAIY,GAAcrE,GAElB,IAAIr8B,KAAK28B,OAAS,EACjB38B,KAAK28B,MAAQ+D,CAEd1gC,MAAK48B,WAAa8D,EAAO1gC,KAAK28B,KAC9B38B,MAAK28B,MAAQ+D,EAMPhE,GAAAn8B,UAAAU,QAAP,WAECjB,KAAK4+B,WAAW39B,SAGhBjB,MAAKi+B,cAAc0C,eAAe3gC,KAKlCA,MAAKi+B,cAAgB,IAGrBj+B,MAAK4+B,WAAa,IAClB5+B,MAAK++B,kBAAoB,KAM1Bp+B,QAAAC,eAAW87B,EAAAn8B,UAAA,oB5BspMJM,I4BtpMP,WAEC,MAAOb,MAAK++B,mB5BupMNh+B,WAAY,KACZC,aAAc,M4BhpMb07B,GAAAn8B,UAAA68B,oBAAR,SAA4B50B,GAE3B,GAAIxI,KAAKi/B,SACRj/B,KAAKoL,QAAQ8C,UAAUiH,iBAAiBnV,KAAKi/B,UAMvCvC,GAAAn8B,UAAA+8B,qBAAR,SAA6B90B,GAE5BxI,KAAKg9B,cAAgB,IACrBh9B,MAAK+8B,eAAiB,KAMfL,GAAAn8B,UAAAi9B,mBAAR,SAA2Bh1B,GAE1BxI,KAAK+8B,eAAiB,KAMfL,GAAAn8B,UAAAm9B,kBAAR,SAA0Bl1B,GAEzBxI,KAAKg9B,cAAgB,KAGfN,GAAAn8B,UAAAqgC,QAAP,SAAeC,GAEd,GAAIC,GAAa9gC,KAAKi/B,SAAS2B,QAAQC,EACvCC,GAAEj3B,EAAIi3B,EAAEj3B,EAAE7J,KAAK4+B,WAAWsB,SAAS9yB,MAAM,EAAIpN,KAAKkM,OAAOlM,KAAKi/B,SAASS,WAAWqB,OAClFD,GAAE/2B,EAAI+2B,EAAE/2B,EAAE/J,KAAK4+B,WAAWsB,SAAS/1B,OAAO,EAAInK,KAAKqK,QAAQrK,KAAKi/B,SAASS,WAAWsB,OAEpF,OAAOF,GAGDpE,GAAAn8B,UAAAg+B,UAAP,SAAiB0C,EAAWC,EAAWC,GAEtC,MAAOnhC,MAAKi/B,SAASV,UAAU,GAAG0C,EAAKjhC,KAAKkM,OAAOlM,KAAKi/B,SAASS,WAAWqB,SAAS/gC,KAAK4+B,WAAWsB,SAAS9yB,MAAO,GAAG8zB,EAAKlhC,KAAKqK,QAAQrK,KAAKi/B,SAASS,WAAWsB,SAAShhC,KAAK4+B,WAAWsB,SAAS/1B,OAAQg3B,GAIvMzE,GAAAn8B,UAAA6gC,OAAP,SAAcH,EAAWC,EAAWC,GAEnC,MAAOnhC,MAAKi/B,SAASmC,QAAQH,EAAG,EAAIjhC,KAAKkM,QAAQlM,KAAKkM,QAASg1B,EAAG,EAAIlhC,KAAKqK,SAASrK,KAAKqK,QAAS82B,GAiC5FzE,GAAAn8B,UAAA8gC,eAAP,WAEC,IAAKrhC,KAAKu/B,cAAe,CACxB,GAAIv/B,KAAK89B,cAAgB99B,KAAKi+B,cAAcmC,YAC3CpgC,KAAKi+B,cAAcqC,kBAAoBtgC,KAAKugC,YAAYC,iBAAiBxgC,KAAKm+B,SAAUn+B,KAAKo+B,SAAUp+B,UAClG,CACN,GAAIshC,GAAqCthC,KAAKugC,YAAYC,iBAAiBxgC,KAAKm+B,SAAUn+B,KAAKo+B,SAAUp+B,KAEzG,IAAIA,KAAKuhC,aAAevhC,KAAKi+B,cAAcqC,mBAAqB,MAAQgB,EAAgBE,iBAAmBxhC,KAAKi+B,cAAcqC,kBAAkBkB,iBAC/IxhC,KAAKi+B,cAAcqC,kBAAoBgB,GAG3C,OAAA5E,KAEct/B,GAAAJ,QAAL0/B,I5BunMN+E,iCAAiCrgC,UAAUqoB,qCAAqC,qCAAqCiS,sCAAsC,sCAAsCj9B,qCAAqC,qCAAqCijC,wCAAwC,wCAAwClpB,+CAA+C,+CAA+CmpB,0CAA0C,0CAA0CC,2CAA2C,2CAA2CC,wCAAwC,0CAA0CC,iDAAiD,SAAS5lC,EAAQkB,EAAOJ,G6BtvNjwB,GAAOid,GAAmB/d,EAAY,6CAItC,IAAM6lC,GAAc,WAMnB,QANKA,GAMOC,GAAA,GAAAA,QAAA,GAAiC,CAAjCA,EAAA,KAHLhiC,KAAAiiC,aAAuB,IAK7BjiC,MAAKgiC,aAAeA,EAGdD,EAAAxhC,UAAA2hC,cAAP,WAEC,GAAIliC,KAAKmiC,eACRniC,KAAKmiC,eAAeztB,4BAGtB/T,QAAAC,eAAWmhC,EAAAxhC,UAAA,gB7B8uNJM,I6B9uNP,WAEC,MAAOb,MAAKmiC,gB7B+uNN7+B,I6B5uNP,SAAwBmG,GAEvB,GAAIzJ,KAAKmiC,gBAAkB14B,EAC1B,MAED,IAAIzJ,KAAKmiC,gBAAkBniC,KAAKiiC,aAC/BjiC,KAAKmiC,eAAe9sB,aAAe,IAEpCrV,MAAKmiC,eAAiB14B,CAEtB,IAAIzJ,KAAKmiC,gBAAkBniC,KAAKiiC,aAC/BjiC,KAAKmiC,eAAe9sB,aAAerV,IAEpCA,MAAKkiC,iB7ByuNCnhC,WAAY,KACZC,aAAc,M6BvuNrBL,QAAAC,eAAWmhC,EAAAxhC,UAAA,c7B0uNJM,I6B1uNP,WAEC,MAAOb,MAAKiiC,c7B2uNN3+B,I6BxuNP,SAAsBmG,GAErB,GAAIzJ,KAAKiiC,cAAgBx4B,EACxB,MAEDzJ,MAAKiiC,aAAex4B,CAEpB,IAAIzJ,KAAKmiC,eAAgB,CACxB,GAAIniC,KAAKiiC,aACRjiC,KAAKmiC,eAAe9sB,aAAerV,SAEnCA,MAAKmiC,eAAe9sB,aAAe,O7BwuN/BtU,WAAY,KACZC,aAAc,M6BruNd+gC,GAAAxhC,UAAA0V,OAAP,SAAcmsB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,KAAM,IAAInoB,GAGJ8nB,GAAAxhC,UAAA+U,iBAAP,WAEC,GAAItV,KAAKqiC,mBAAqBriC,KAAKiiC,aAAc,CAChDjiC,KAAKqiC,kBAAoB,KACzBriC,MAAKkiC,iBAGR,OAAAH,KAEwB3kC,GAAAJ,QAAf+kC,I7BuuNN/lB,6CAA6C5a,YAAYkhC,wDAAwD,SAASpmC,EAAQkB,EAAOJ,GAC5I,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8BxzNtB,IAAOwF,GAAU3J,EAAc,kCAE/B,IAAO6lC,GAAc7lC,EAAa,gD9B+zNlC,I8BvzNMqmC,GAAqB,SAAA7hC,GAASX,EAA9BwiC,EAAqB7hC,EA6I1B,SA7IK6hC,GA6IOP,EAAmCQ,EAAqBC,EAAuBC,EAA2BC,EAA0BC,EAAkBC,GAAtJ,GAAAb,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAQ,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,MAEjKniC,EAAAzD,KAAA+C,KAAMgiC,EA7IAhiC,MAAA8iC,kBAA2B,CAC1B9iC,MAAA+iC,mBAA4B,EAE5B/iC,MAAAgjC,UAAmB,CACnBhjC,MAAAijC,WAAoB,EACpBjjC,MAAAkjC,eAAwB,EACxBljC,MAAAmjC,cAAuB,EACvBnjC,MAAAojC,OAAgB,CAChBpjC,MAAAqjC,eAAwB,CACxBrjC,MAAAsjC,iBAA0B,CAC1BtjC,MAAAujC,cAAwB,KAEzBvjC,MAAAwjC,IAAc,KAmIpBxjC,MAAKwiC,SAAWA,CAChBxiC,MAAKyiC,UAAYA,CACjBziC,MAAK0iC,aAAeA,CACpB1iC,MAAK2iC,aAAeA,CACpB3iC,MAAK4iC,MAAQA,CACb5iC,MAAK6iC,aAAeA,CAGpB7iC,MAAK8iC,kBAAoB9iC,KAAKgjC,SAC9BhjC,MAAK+iC,mBAAqB/iC,KAAKijC,WAlIhCtiC,OAAAC,eAAW2hC,EAAAhiC,UAAA,S9B20NJM,I8B30NP,WAEC,MAAOb,MAAKojC,Q9B40NN9/B,I8Bz0NP,SAAiBmG,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAIzJ,KAAKojC,QAAU35B,EAClB,MAEDzJ,MAAKojC,OAAS35B,CAEdzJ,MAAKkiC,iB9Bu0NCnhC,WAAY,KACZC,aAAc,M8Bl0NrBL,QAAAC,eAAW2hC,EAAAhiC,UAAA,Y9Bw0NJM,I8Bx0NP,WAEC,MAAOb,MAAKgjC,W9By0NN1/B,I8Bt0NP,SAAoBmG,GAEnB,GAAIzJ,KAAKgjC,WAAav5B,EACrB,MAEDzJ,MAAKgjC,UAAYv5B,CAEjBzJ,MAAKkiC,iB9Bq0NCnhC,WAAY,KACZC,aAAc,M8Bh0NrBL,QAAAC,eAAW2hC,EAAAhiC,UAAA,a9Bs0NJM,I8Bt0NP,WAEC,MAAOb,MAAKijC,Y9Bu0NN3/B,I8Bp0NP,SAAqBmG,GAEpBA,EAAMuT,KAAKka,IAAIl3B,KAAKkjC,cAAelmB,KAAKia,IAAIj3B,KAAKmjC,cAAe15B,GAEhE,IAAIzJ,KAAKijC,YAAcx5B,EACtB,MAEDzJ,MAAKijC,WAAax5B,CAElBzJ,MAAKkiC,iB9Bk0NCnhC,WAAY,KACZC,aAAc,M8B3zNrBL,QAAAC,eAAW2hC,EAAAhiC,UAAA,gB9Bm0NJM,I8Bn0NP,WAEC,MAAOb,MAAKkjC,e9Bo0NN5/B,I8Bj0NP,SAAwBmG,GAEvB,GAAIzJ,KAAKkjC,eAAiBz5B,EACzB,MAEDzJ,MAAKkjC,cAAgBz5B,CAErBzJ,MAAKyiC,UAAYzlB,KAAKka,IAAIl3B,KAAKkjC,cAAelmB,KAAKia,IAAIj3B,KAAKmjC,cAAenjC,KAAKijC,c9Bg0N1EliC,WAAY,KACZC,aAAc,M8BzzNrBL,QAAAC,eAAW2hC,EAAAhiC,UAAA,gB9Bi0NJM,I8Bj0NP,WAEC,MAAOb,MAAKmjC,e9Bk0NN7/B,I8B/zNP,SAAwBmG,GAEvB,GAAIzJ,KAAKmjC,eAAiB15B,EACzB,MAEDzJ,MAAKmjC,cAAgB15B,CAErBzJ,MAAKyiC,UAAYzlB,KAAKka,IAAIl3B,KAAKkjC,cAAelmB,KAAKia,IAAIj3B,KAAKmjC,cAAenjC,KAAKijC,c9B8zN1EliC,WAAY,KACZC,aAAc,M8BxzNrBL,QAAAC,eAAW2hC,EAAAhiC,UAAA,gB9B8zNJM,I8B9zNP,WAEC,MAAOb,MAAKujC,e9B+zNNjgC,I8B5zNP,SAAwBmG,GAEvB,GAAIzJ,KAAKujC,eAAiB95B,EACzB,MAEDzJ,MAAKujC,cAAgB95B,CAErBzJ,MAAKkiC,iB9B2zNCnhC,WAAY,KACZC,aAAc,M8B3xNduhC,GAAAhiC,UAAA0V,OAAP,SAAcmsB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIpiC,KAAKijC,YAAcjjC,KAAK+iC,oBAAsB/iC,KAAKgjC,WAAahjC,KAAK8iC,kBAAmB,CAE3F9iC,KAAKqiC,kBAAoB,IAEzB,IAAIriC,KAAKujC,cAAe,CACvB,GAAIvjC,KAAKgjC,UAAY,EAAG,CACvBhjC,KAAK8iC,mBAAqB9iC,KAAKgjC,UAAU,IAAM,IAAMhjC,KAAKgjC,SAC1DhjC,MAAKgjC,UAAYhjC,KAAKgjC,UAAU,IAAM,QAChC,CACNhjC,KAAK8iC,mBAAqB9iC,KAAKgjC,UAAU,IAAMhjC,KAAKgjC,SACpDhjC,MAAKgjC,UAAYhjC,KAAKgjC,UAAU,IAGjC,MAAOhjC,KAAKgjC,UAAYhjC,KAAK8iC,mBAAqB,IACjD9iC,KAAK8iC,mBAAqB,GAE3B,OAAO9iC,KAAKgjC,UAAYhjC,KAAK8iC,kBAAoB,IAChD9iC,KAAK8iC,mBAAqB,IAG5B,GAAIV,EAAa,CAChBpiC,KAAK+iC,qBAAuB/iC,KAAKijC,WAAajjC,KAAK+iC,qBAAqB/iC,KAAK4iC,MAAQ,EACrF5iC,MAAK8iC,oBAAsB9iC,KAAKgjC,UAAYhjC,KAAK8iC,oBAAoB9iC,KAAK4iC,MAAQ,OAC5E,CACN5iC,KAAK+iC,mBAAqB/iC,KAAKijC,UAC/BjjC,MAAK8iC,kBAAoB9iC,KAAKgjC,UAI/B,GAAKhmB,KAAKoW,IAAIpzB,KAAKyiC,UAAYziC,KAAK+iC,oBAAsB,KAAU/lB,KAAKoW,IAAIpzB,KAAKgjC,UAAYhjC,KAAK8iC,mBAAqB,IAAO,CAC9H9iC,KAAK+iC,mBAAqB/iC,KAAKijC,UAC/BjjC,MAAK8iC,kBAAoB9iC,KAAKgjC,WAIhChjC,KAAKgiC,aAAal4B,UAAY9J,KAAK+iC,kBACnC/iC,MAAKgiC,aAAah4B,UAAYhK,KAAK8iC,iBAEnC,IAAI9iC,KAAKqjC,eAAgB,CACxB,GAAIrjC,KAAKwjC,IAAK,CACbxjC,KAAKgiC,aAAa39B,UAAUknB,YAAYvrB,KAAKqjC,oBACvC,CACNrjC,KAAKgiC,aAAan4B,GAAK7J,KAAKqjC,eAAermB,KAAKymB,IAAIzjC,KAAKgjC,UAAUn9B,EAAWmG,mBAC9EhM,MAAKgiC,aAAa/3B,GAAKjK,KAAKqjC,eAAermB,KAAK0mB,IAAI1jC,KAAKgjC,UAAUn9B,EAAWmG,oBAE/EhM,KAAKqjC,eAAiB,EAGvB,GAAIrjC,KAAKsjC,iBAAkB,CAC1BtjC,KAAKgiC,aAAa39B,UAAUynB,UAAU9rB,KAAKsjC,iBAC3CtjC,MAAKsjC,iBAAmB,GAKnBf,GAAAhiC,UAAAojC,cAAP,SAAqBl6B,GAEpB,GAAIA,GAAO,EACV,MAEDzJ,MAAKqjC,gBAAkB55B,CAEvBzJ,MAAKkiC,gBAGCK,GAAAhiC,UAAAqjC,gBAAP,SAAuBn6B,GAEtB,GAAIA,GAAO,EACV,MAEDzJ,MAAKsjC,kBAAoB75B,CAEzBzJ,MAAKkiC,gBAGP,OAAAK,IArPoCR,EAuPpC3kC,GAA+BJ,QAAtBulC,I9B0xNNzqB,kCAAkC1W,UAAU0gC,gDAAgD,kDAAkD+B,mDAAmD,SAAS3nC,EAAQkB,EAAOJ,GAC5N,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+B/hOtB,IAAOyjC,GAAe5nC,EAAa,iD/BwiOnC,I+BhiOM6nC,GAAgB,SAAArjC,GAASX,EAAzBgkC,EAAgBrjC,EAErB,SAFKqjC,GAEO/B,EAAmCgC,EAAmCvB,EAAuBjX,GAA7F,GAAAwW,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAvB,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAjX,QAAA,GAAqB,CAArBA,EAAA,IAExG9qB,EAAAzD,KAAA+C,KAAMgiC,EAAcgC,EAAc,EAAGvB,EAAWjX,GAG1CuY,EAAAxjC,UAAA0V,OAAP,SAAcmsB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,IAAKpiC,KAAKgkC,aACT,MAEDhkC,MAAKwiC,SAAWxiC,KAAKikC,eAAej6B,UAAY,GAChDtJ,GAAAH,UAAM0V,OAAMhZ,KAAA+C,MAEd,OAAA+jC,IAf+BD,EAiB/B1mC,GAA0BJ,QAAjB+mC,I/BmiONG,iDAAiD,mDAAmDA,kDAAkD,SAAShoC,EAAQkB,EAAOJ,GACjL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgClkOtB,IAAOwF,GAAU3J,EAAc,kCAC/B,IAAO+J,GAAQ/J,EAAe,gCAG9B,IAAOioC,GAAgBjoC,EAAa,kDhCwkOpC,IgCjkOM4nC,GAAe,SAAApjC,GAASX,EAAxB+jC,EAAepjC,EA6NpB,SA7NKojC,GA6NO9B,EAAmCgC,EAAmCxB,EAAqBC,EAAuBjX,EAAwBkX,EAA2BC,EAA0ByB,EAA2BC,EAA2BzB,EAAkB0B,EAAoBzB,GAA3R,GAAAb,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAxB,QAAA,GAAmB,CAAnBA,EAAA,EAAqB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAjX,QAAA,GAAsB,CAAtBA,EAAA,IAAwB,GAAAkX,QAAA,GAAyB,CAAzBA,GAAuB,GAAI,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAAyB,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,KAA2B,GAAAzB,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAA0B,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAAzB,QAAA,GAA4B,CAA5BA,EAAA,MAEtSniC,EAAAzD,KAAA+C,KAAMgiC,EAAcgC,EA7NdhkC,MAAA8iC,kBAA2B,CAC3B9iC,MAAA+iC,mBAA4B,EAE3B/iC,MAAAgjC,UAAmB,CACnBhjC,MAAAijC,WAAoB,EACpBjjC,MAAAukC,UAAmB,GACnBvkC,MAAAwkC,cAAuBC,QACvBzkC,MAAA0kC,aAAsBD,QACtBzkC,MAAAkjC,eAAwB,EACxBljC,MAAAmjC,cAAuB,EACvBnjC,MAAAojC,OAAgB,CAChBpjC,MAAA2kC,SAAkB,CAClB3kC,MAAAujC,cAAwB,KACxBvjC,MAAA4kC,QAAmB,GAAI3+B,EAkN9BjG,MAAKwrB,SAAWA,CAChBxrB,MAAKwiC,SAAWA,CAChBxiC,MAAKyiC,UAAYA,CACjBziC,MAAKokC,YAAgBA,GAAe,KAAQA,GAAeK,QAC3DzkC,MAAKqkC,YAAgBA,GAAe,KAAQA,EAAcI,QAC1DzkC,MAAK0iC,aAAeA,CACpB1iC,MAAK2iC,aAAeA,CACpB3iC,MAAK4iC,MAAQA,CACb5iC,MAAKskC,QAAUA,CACftkC,MAAK6iC,aAAeA,CAGpB7iC,MAAK8iC,kBAAoB9iC,KAAKgjC,SAC9BhjC,MAAK+iC,mBAAqB/iC,KAAKijC,WArNhCtiC,OAAAC,eAAWkjC,EAAAvjC,UAAA,ShC+lOJM,IgC/lOP,WAEC,MAAOb,MAAKojC,QhCgmON9/B,IgC7lOP,SAAiBmG,GAEhBA,EAAOA,EAAM,EAAI,EAAIA,CAErB,IAAIzJ,KAAKojC,QAAU35B,EAClB,MAEDzJ,MAAKojC,OAAS35B,CAEdzJ,MAAKkiC,iBhC2lOCnhC,WAAY,KACZC,aAAc,MgCtlOrBL,QAAAC,eAAWkjC,EAAAvjC,UAAA,YhC4lOJM,IgC5lOP,WAEC,MAAOb,MAAKgjC,WhC6lON1/B,IgC1lOP,SAAoBmG,GAEnBA,EAAMuT,KAAKka,IAAIl3B,KAAKwkC,aAAcxnB,KAAKia,IAAIj3B,KAAK0kC,aAAcj7B,GAE9D,IAAIzJ,KAAKgjC,WAAav5B,EACrB,MAEDzJ,MAAKgjC,UAAYv5B,CAEjBzJ,MAAKkiC,iBhCwlOCnhC,WAAY,KACZC,aAAc,MgCnlOrBL,QAAAC,eAAWkjC,EAAAvjC,UAAA,ahCylOJM,IgCzlOP,WAEC,MAAOb,MAAKijC,YhC0lON3/B,IgCvlOP,SAAqBmG,GAEpBA,EAAMuT,KAAKka,IAAIl3B,KAAKkjC,cAAelmB,KAAKia,IAAIj3B,KAAKmjC,cAAe15B,GAEhE,IAAIzJ,KAAKijC,YAAcx5B,EACtB,MAEDzJ,MAAKijC,WAAax5B,CAElBzJ,MAAKkiC,iBhCqlOCnhC,WAAY,KACZC,aAAc,MgChlOrBL,QAAAC,eAAWkjC,EAAAvjC,UAAA,YhCslOJM,IgCtlOP,WAEC,MAAOb,MAAKukC,WhCulONjhC,IgCplOP,SAAoBmG,GAEnB,GAAIzJ,KAAKukC,WAAa96B,EACrB,MAEDzJ,MAAKukC,UAAY96B,CAEjBzJ,MAAKkiC,iBhCmlOCnhC,WAAY,KACZC,aAAc,MgC5kOrBL,QAAAC,eAAWkjC,EAAAvjC,UAAA,ehColOJM,IgCplOP,WAEC,MAAOb,MAAKwkC,chCqlONlhC,IgCllOP,SAAuBmG,GAEtB,GAAIzJ,KAAKwkC,cAAgB/6B,EACxB,MAEDzJ,MAAKwkC,aAAe/6B,CAEpBzJ,MAAKwiC,SAAWxlB,KAAKka,IAAIl3B,KAAKwkC,aAAcxnB,KAAKia,IAAIj3B,KAAK0kC,aAAc1kC,KAAKgjC,ahCilOvEjiC,WAAY,KACZC,aAAc,MgC1kOrBL,QAAAC,eAAWkjC,EAAAvjC,UAAA,ehCklOJM,IgCllOP,WAEC,MAAOb,MAAK0kC,chCmlONphC,IgChlOP,SAAuBmG,GAEtB,GAAIzJ,KAAK0kC,cAAgBj7B,EACxB,MAEDzJ,MAAK0kC,aAAej7B,CAEpBzJ,MAAKwiC,SAAWxlB,KAAKka,IAAIl3B,KAAKwkC,aAAcxnB,KAAKia,IAAIj3B,KAAK0kC,aAAc1kC,KAAKgjC,ahC+kOvEjiC,WAAY,KACZC,aAAc,MgCxkOrBL,QAAAC,eAAWkjC,EAAAvjC,UAAA,gBhCglOJM,IgChlOP,WAEC,MAAOb,MAAKkjC,ehCilON5/B,IgC9kOP,SAAwBmG,GAEvB,GAAIzJ,KAAKkjC,eAAiBz5B,EACzB,MAEDzJ,MAAKkjC,cAAgBz5B,CAErBzJ,MAAKyiC,UAAYzlB,KAAKka,IAAIl3B,KAAKkjC,cAAelmB,KAAKia,IAAIj3B,KAAKmjC,cAAenjC,KAAKijC,chC6kO1EliC,WAAY,KACZC,aAAc,MgCtkOrBL,QAAAC,eAAWkjC,EAAAvjC,UAAA,gBhC8kOJM,IgC9kOP,WAEC,MAAOb,MAAKmjC,ehC+kON7/B,IgC5kOP,SAAwBmG,GAEvB,GAAIzJ,KAAKmjC,eAAiB15B,EACzB,MAEDzJ,MAAKmjC,cAAgB15B,CAErBzJ,MAAKyiC,UAAYzlB,KAAKka,IAAIl3B,KAAKkjC,cAAelmB,KAAKia,IAAIj3B,KAAKmjC,cAAenjC,KAAKijC,chC2kO1EliC,WAAY,KACZC,aAAc,MgCpkOrBL,QAAAC,eAAWkjC,EAAAvjC,UAAA,WhC4kOJM,IgC5kOP,WAEC,MAAOb,MAAK2kC,UhC6kONrhC,IgC1kOP,SAAmBmG,GAElB,GAAIzJ,KAAK2kC,UAAYl7B,EACpB,MAEDzJ,MAAK2kC,SAAWl7B,CAEhBzJ,MAAKkiC,iBhCykOCnhC,WAAY,KACZC,aAAc,MgCpkOrBL,QAAAC,eAAWkjC,EAAAvjC,UAAA,gBhC0kOJM,IgC1kOP,WAEC,MAAOb,MAAKujC,ehC2kONjgC,IgCxkOP,SAAwBmG,GAEvB,GAAIzJ,KAAKujC,eAAiB95B,EACzB,MAEDzJ,MAAKujC,cAAgB95B,CAErBzJ,MAAKkiC,iBhCukOCnhC,WAAY,KACZC,aAAc,MgCniOd8iC,GAAAvjC,UAAA0V,OAAP,SAAcmsB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIpiC,KAAKijC,YAAcjjC,KAAK+iC,oBAAsB/iC,KAAKgjC,WAAahjC,KAAK8iC,kBAAmB,CAE3F9iC,KAAKqiC,kBAAoB,IAEzB,IAAIriC,KAAKujC,cAAe,CACvB,GAAIvjC,KAAKgjC,UAAY,EAAG,CACvBhjC,KAAK8iC,mBAAqB9iC,KAAKgjC,UAAU,IAAM,IAAMhjC,KAAKgjC,SAC1DhjC,MAAKgjC,UAAYhjC,KAAKgjC,UAAU,IAAM,QAChC,CACNhjC,KAAK8iC,mBAAqB9iC,KAAKgjC,UAAU,IAAMhjC,KAAKgjC,SACpDhjC,MAAKgjC,UAAYhjC,KAAKgjC,UAAU,IAGjC,MAAOhjC,KAAKgjC,UAAYhjC,KAAK8iC,mBAAqB,IACjD9iC,KAAK8iC,mBAAqB,GAE3B,OAAO9iC,KAAKgjC,UAAYhjC,KAAK8iC,kBAAoB,IAChD9iC,KAAK8iC,mBAAqB,IAG5B,GAAIV,EAAa,CAChBpiC,KAAK+iC,qBAAuB/iC,KAAKijC,WAAajjC,KAAK+iC,qBAAqB/iC,KAAK4iC,MAAQ,EACrF5iC,MAAK8iC,oBAAsB9iC,KAAKgjC,UAAYhjC,KAAK8iC,oBAAoB9iC,KAAK4iC,MAAQ,OAC5E,CACN5iC,KAAK8iC,kBAAoB9iC,KAAKgjC,SAC9BhjC,MAAK+iC,mBAAqB/iC,KAAKijC,WAIhC,GAAKjmB,KAAKoW,IAAIpzB,KAAKyiC,UAAYziC,KAAK+iC,oBAAsB,KAAU/lB,KAAKoW,IAAIpzB,KAAKgjC,UAAYhjC,KAAK8iC,mBAAqB,IAAO,CAC9H9iC,KAAK+iC,mBAAqB/iC,KAAKijC,UAC/BjjC,MAAK8iC,kBAAoB9iC,KAAKgjC,WAIhC,GAAIrzB,GAAgB3P,KAAiB,aAAGA,KAAKgkC,aAAa3/B,UAAUiJ,SAAYtN,KAAmB,eAAGA,KAAK6kC,eAAiB7kC,KAAK8kC,QACjI9kC,MAAKgiC,aAAan4B,EAAI8F,EAAI9F,EAAI7J,KAAKwrB,SAASxO,KAAKymB,IAAIzjC,KAAK8iC,kBAAkBj9B,EAAWmG,oBAAoBgR,KAAK0mB,IAAI1jC,KAAK+iC,mBAAmBl9B,EAAWmG,mBACvJhM,MAAKgiC,aAAaj4B,EAAI4F,EAAI5F,EAAI/J,KAAKwrB,SAASxO,KAAKymB,IAAIzjC,KAAK+iC,mBAAmBl9B,EAAWmG,oBAAoBhM,KAAKskC,OACjHtkC,MAAKgiC,aAAa/3B,EAAI0F,EAAI1F,EAAIjK,KAAKwrB,SAASxO,KAAK0mB,IAAI1jC,KAAK8iC,kBAAkBj9B,EAAWmG,oBAAoBgR,KAAK0mB,IAAI1jC,KAAK+iC,mBAAmBl9B,EAAWmG,mBAEvJhM,MAAK4kC,QAAQ/6B,GAAKmT,KAAKymB,IAAIzjC,KAAK8iC,kBAAkBj9B,EAAWmG,oBAAoBgR,KAAKymB,IAAIzjC,KAAK+iC,mBAAmBl9B,EAAWmG,mBAC7HhM,MAAK4kC,QAAQ76B,EAAIiT,KAAK0mB,IAAI1jC,KAAK+iC,mBAAmBl9B,EAAWmG,mBAC7DhM,MAAK4kC,QAAQ36B,GAAK+S,KAAK0mB,IAAI1jC,KAAK8iC,kBAAkBj9B,EAAWmG,oBAAoBgR,KAAKymB,IAAIzjC,KAAK+iC,mBAAmBl9B,EAAWmG,mBAE7H,IAAIhM,KAAKmiC,eAAgB,CACxB,GAAIniC,KAAK+kC,iBACR/kC,KAAKmiC,eAAejwB,OAAOlS,KAAK+kC,iBAAkB/kC,KAAK4kC,aACnD,IAAI5kC,KAAKikC,eACbjkC,KAAKmiC,eAAejwB,OAAOlS,KAAKikC,eAAepvB,MAAO7U,KAAKikC,eAAenwB,cAAgB9T,KAAKikC,eAAe5/B,UAAUiJ,SAAUtN,KAAK4kC,UAG3I,OAAAd,IAjT8BK,EAmT9B/mC,GAAyBJ,QAAhB8mC,IhC2iONhsB,kCAAkC1W,UAAU+W,gCAAgC/W,UAAU4jC,kDAAkD,oDAAoDA,mDAAmD,SAAS9oC,EAAQkB,EAAOJ,GAC1Q,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiC92OtB,IAAO4F,GAAQ/J,EAAe,gCAG9B,IAAO6lC,GAAc7lC,EAAa,gDAClC,IAAOqK,GAAkBrK,EAAY,+CAErC,IAAMioC,GAAgB,SAAAzjC,GAASX,EAAzBokC,EAAgBzjC,EAQrB,SARKyjC,GAQOnC,EAAmCgC,GARhD,GAAAt9B,GAAA1G,IAQa,IAAAgiC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAE9CtjC,EAAAzD,KAAA+C,KAAMgiC,EANAhiC,MAAA8kC,SAAoB,GAAI7+B,GAAS,EAAK,EAAK,EAQjDjG,MAAKilC,+BAAiC,SAACz8B,GAA6B,MAAA9B,GAAKw+B,sBAAsB18B,GAE/F,IAAIw7B,EACHhkC,KAAKgkC,aAAeA,MAEpBhkC,MAAK6kC,eAAiB,GAAI5+B,GAG5BtF,OAAAC,eAAWujC,EAAA5jC,UAAA,kBjCw2OJM,IiCx2OP,WAEC,MAAOb,MAAK+kC,kBjCy2ONzhC,IiCt2OP,SAA0BmG,GAEzB,GAAIzJ,KAAKikC,eAAgB,CACxBjkC,KAAKikC,eAAehwB,oBAAoB1N,EAAmBuH,uBAAwB9N,KAAKilC,+BACxFjlC,MAAKikC,eAAiB,KAGvBjkC,KAAK+kC,iBAAmBt7B,CACxBzJ,MAAKkiC,iBjCs2OCnhC,WAAY,KACZC,aAAc,MiCp2OrBL,QAAAC,eAAWujC,EAAA5jC,UAAA,gBjCu2OJM,IiCv2OP,WAEC,MAAOb,MAAKikC,gBjCw2ON3gC,IiCr2OP,SAAwBmG,GAEvB,GAAIzJ,KAAK+kC,iBACR/kC,KAAK+kC,iBAAmB,IAEzB,IAAI/kC,KAAKikC,gBAAkBx6B,EAC1B,MAED,IAAIzJ,KAAKikC,eACRjkC,KAAKikC,eAAehwB,oBAAoB1N,EAAmBuH,uBAAwB9N,KAAKilC,+BAEzFjlC,MAAKikC,eAAiBx6B,CAEtB,IAAIzJ,KAAKikC,eACRjkC,KAAKikC,eAAe37B,iBAAiB/B,EAAmBuH,uBAAwB9N,KAAKilC,+BAEtFjlC,MAAKkiC,iBjCi2OCnhC,WAAY,KACZC,aAAc,MiC91OdmjC,GAAA5jC,UAAA0V,OAAP,SAAcmsB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAIpiC,KAAKmiC,eAAgB,CACxB,GAAIniC,KAAK+kC,iBACR/kC,KAAKmiC,eAAejwB,OAAOlS,KAAK+kC,sBAC5B,IAAI/kC,KAAKikC,eACbjkC,KAAKmiC,eAAejwB,OAAOlS,KAAKikC,eAAepvB,MAAO7U,KAAKikC,eAAenwB,cAAgB9T,KAAKikC,eAAe5/B,UAAUiJ,WAInH62B,GAAA5jC,UAAA2kC,sBAAR,SAA8B18B,GAE7BxI,KAAKkiC,gBAEP,OAAAiC,IA3E+BpC,EA6E/B3kC,GAA0BJ,QAAjBmnC,IjCi2ONhsB,gCAAgC/W,UAAU0gC,gDAAgD,gDAAgDtpB,+CAA+C,iDAAiD2sB,mDAAmD,SAASjpC,EAAQkB,EAAOJ,GACxT,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkCz7OtB,IAAO4F,GAAQ/J,EAAe,gCAG9B,IAAOioC,GAAgBjoC,EAAa,kDlC+7OpC,IkCx7OMkpC,GAAgB,SAAA1kC,GAASX,EAAzBqlC,EAAgB1kC,EA+BrB,SA/BK0kC,GA+BOpD,EAAmCgC,EAAmCqB,EAAsBC,EAAkBC,GAA9G,GAAAvD,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAgC,QAAA,GAAiC,CAAjCA,EAAA,KAAmC,GAAAqB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAEzH7kC,EAAAzD,KAAA+C,KAAMgiC,EAAcgC,EAJdhkC,MAAAwlC,eAA0B,GAAIv/B,GAAS,EAAG,KAAM,IAMtDjG,MAAKqlC,UAAYA,CACjBrlC,MAAKulC,QAAUA,CACfvlC,MAAKslC,KAAOA,CAEZtlC,MAAKylC,UAAY,GAAIx/B,EACrBjG,MAAK0lC,IAAM,GAAIz/B,EACfjG,MAAK2lC,SAAW,GAAI1/B,EACpBjG,MAAK4lC,OAAS,GAAI3/B,EAClBjG,MAAK6lC,cAAgB,GAAI5/B,EACzBjG,MAAK8lC,iBAAmB,GAAI7/B,GAItBm/B,EAAA7kC,UAAA0V,OAAP,SAAcmsB,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEb,GAAI2D,EAEJ,KAAK/lC,KAAKikC,iBAAmBjkC,KAAKmiC,eACjC,MAEDniC,MAAKqiC,kBAAoB,IAEzB0D,GAAO/lC,KAAKikC,eAAe5/B,UAAUkJ,SAASy4B,qBAAqBhmC,KAAKwlC,eACxExlC,MAAK8lC,iBAAiBj8B,EAAI7J,KAAKikC,eAAep6B,EAAIk8B,EAAKl8B,CACvD7J;KAAK8lC,iBAAiB/7B,EAAI/J,KAAKikC,eAAel6B,EAAIg8B,EAAKh8B,CACvD/J,MAAK8lC,iBAAiB77B,EAAIjK,KAAKikC,eAAeh6B,EAAI87B,EAAK97B,CAEvDjK,MAAK2lC,SAAW3lC,KAAKmiC,eAAe99B,UAAUiJ,SAAS24B,IAAIjmC,KAAK8lC,iBAChE9lC,MAAK2lC,SAASO,SAASlmC,KAAKqlC,UAE5BrlC,MAAK0lC,IAAIh7B,SAAS1K,KAAKylC,UACvBzlC,MAAK0lC,IAAIQ,QAAQlmC,KAAKulC,QAEtBvlC,MAAK4lC,OAAO/7B,EAAI7J,KAAK2lC,SAAS97B,EAAI7J,KAAK0lC,IAAI77B,CAC3C7J,MAAK4lC,OAAO77B,EAAI/J,KAAK2lC,SAAS57B,EAAI/J,KAAK0lC,IAAI37B,CAC3C/J,MAAK4lC,OAAO37B,EAAIjK,KAAK2lC,SAAS17B,EAAIjK,KAAK0lC,IAAIz7B,CAE3CjK,MAAK6lC,cAAcn7B,SAAS1K,KAAK4lC,OACjC5lC,MAAK6lC,cAAcK,QAAQ,EAAElmC,KAAKslC,KAElCtlC,MAAKylC,UAAUU,YAAYnmC,KAAK6lC,cAEhC7lC,MAAKmiC,eAAe99B,UAAUiJ,SAAWtN,KAAKmiC,eAAe99B,UAAUiJ,SAAS24B,IAAIjmC,KAAKylC,UAEzF/kC,GAAAH,UAAM0V,OAAMhZ,KAAA+C,MAEd,OAAAolC,IAjF+BjB,EAmFL/mC,GAAAJ,QAAjBooC,IlCu5ONjtB,gCAAgC/W,UAAU4jC,kDAAkD,oDAAoDoB,qCAAqC,SAASlqC,EAAQkB,EAAOJ,GAQhN,GmCr/OMqpC,GAAS,WAAf,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,KAAc,MAMdF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAjpC,GAAmBJ,QAAVqpC,OnCs/OHI,wCAAwC,SAASvqC,EAAQkB,EAAOJ,GAOtE,GoCnhPM0pC,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,OAAgB,QAKhBD,GAAAE,OAAgB,QAC/B,OAAAF,KAEsBtpC,GAAAJ,QAAb0pC,OpCqhPHG,+CAA+C,SAAS3qC,EAAQkB,EAAOJ,GAW7E,GqCziPM8pC,GAAmB,WAAzB,QAAMA,MAESA,EAAAC,SAAkB,SAClBD,GAAAE,SAAkB,SACjC,OAAAF,KAEA1pC,GAA6BJ,QAApB8pC,OrC4iPHG,oCAAoC,SAAS/qC,EAAQkB,EAAOJ,GAelE,GsChjPMkqC,GAAQ,WAAd,QAAMA,MAuCEA,EAAA3mC,UAAA4mC,gBAAP,SAAuBC,EAAsBnV,EAAsBoV,EAAuBC,GAA7C,GAAArV,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAoV,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OAmBnFJ,GAAA3mC,UAAAgnC,UAAP,SAAiBC,EAAsBC,GAAA,GAAAA,QAAA,GAAgB,CAAhBA,EAAA,GAwFhCP,GAAA3mC,UAAAmnC,kBAAP,SAAyBh6B,EAAmBwP,EAA8ByqB,EAAsBC,EAA8B3V,EAAsB4V,EAA6BC,EAAoCC,GAAvF,GAAA9V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAA4V,QAAA,GAA2B,CAA3BA,EAAA,MAA6B,GAAAC,QAAA,GAAkC,CAAlCA,EAAA,MAAoC,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAiE9Mb,GAAA3mC,UAAA0U,MAAP,YAYOiyB,GAAA3mC,UAAAmK,SAAP,SAAgBs9B,IAuDTd,GAAA3mC,UAAA0nC,aAAP,SAAoBC,EAAkBC,EAAkBC,EAAkBC,EAAkBC,EAAgBC,IAmCrGrB,GAAA3mC,UAAAioC,QAAP,SAAeC,EAAiBC,EAAiBJ,EAAgBC,IAoB1DrB,GAAA3mC,UAAAooC,WAAP,SAAkB9+B,EAAUE,EAAUqqB,IAqB/B8S,GAAA3mC,UAAAqoC,YAAP,SAAmB/+B,EAAUE,EAAUqD,EAAcjD,IAiB9C+8B,GAAA3mC,UAAAsoC,iBAAP,SAAwBC,IAkDjB5B,GAAA3mC,UAAAwoC,SAAP,SAAgBC,EAAgC5O,EAAoB6O,IAsB7D/B,GAAA3mC,UAAA2oC,SAAP,SAAgBr/B,EAAUE,EAAUqD,EAAcjD,IA+B3C+8B,GAAA3mC,UAAA4oC,cAAP,SAAqBt/B,EAAUE,EAAUqD,EAAcjD,EAAei/B,EAAqBC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAAC,KAyBpFpC,GAAA3mC,UAAAgpC,cAAP,SAAqBC,EAAwB7lC,EAAsC8lC,EAA8BC,GAApE,GAAA/lC,QAAA,GAAoC,CAApCA,EAAA,KAAsC,GAAA8lC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,MAgB1GxC,GAAA3mC,UAAAopC,QAAP,YAkCOzC,GAAA3mC,UAAAqpC,gBAAP,SAAuBxC,EAAsBnV,EAAsBoV,EAAuBC,GAA7C,GAAArV,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAAoV,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,OA2EnFJ,GAAA3mC,UAAAspC,kBAAP,SAAyBn8B,EAAmBwP,EAA8ByqB,EAAsBC,EAAsB3V,EAAsB4V,EAAkCC,EAAgDC,GAAxG,GAAA9V,QAAA,GAAoB,CAApBA,EAAA,KAAsB,GAAA4V,QAAA,GAAgC,CAAhCA,EAAA,KAAkC,GAAAC,QAAA,GAA8C,CAA9CA,EAAA,KAAgD,GAAAC,QAAA,GAA0B,CAA1BA,EAAA,GAgLvNb,GAAA3mC,UAAAupC,UAAP,SAAiB/sB,EAAsByqB,EAA0BC,EAAkBsC,EAA8BC,EAAgCC,EAAuBC,EAA0BC,GAAjL,GAAAptB,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAyqB,QAAA,GAAwB,CAAxBA,EAAA,EAA0B,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAsC,QAAA,GAA4B,CAA5BA,EAAA,MAA8B,GAAAC,QAAA,GAA8B,CAA9BA,EAAA,KAAgC,GAAAC,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAqB3LjD,GAAA3mC,UAAA6pC,OAAP,SAAcvgC,EAAUE,IAejBm9B,GAAA3mC,UAAA0rB,OAAP,SAAcpiB,EAAUE,IAIzB,OAAAm9B,KAEkB9pC,GAAAJ,QAATkqC,OtCghPHmD,yCAAyC,SAASnuC,EAAQkB,EAAOJ,SAEjEstC,+CAA+C,SAASpuC,EAAQkB,EAAOJ,GAQ7E,GuCx3QMutC,GAAmB,WAAzB,QAAMA,MAeSA,EAAAC,WAAoB,WAcpBD,GAAAE,IAAa,KAC5B,OAAAF,KAE6BntC,GAAAJ,QAApButC,OvCy3QHG,sCAAsC,SAASxuC,EAAQkB,EAAOJ,GASpE,GwCj6QM2tC,GAAU,WAAhB,QAAMA,MAMSA,EAAAC,MAAe,OAMfD,GAAAE,MAAe,OAMfF,GAAArE,MAAe,OAC9B,OAAAqE,KAEAvtC,GAAoBJ,QAAX2tC,OxCk6QHG,yCAAyC,SAAS5uC,EAAQkB,EAAOJ,GAKvE,GyCh8QM+tC,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,WAAoB,YAMpBD,GAAAxE,KAAc,MAOdwE,GAAAE,OAAgB,QAWhBF,GAAAG,SAAkB,UACjC,OAAAH,KAEuB3tC,GAAAJ,QAAd+tC,OzCg8QHI,yCAAyC,SAASjvC,EAAQkB,EAAOJ,GAMvE,G0C3+QMouC,GAAa,WAAnB,QAAMA,MAOSA,EAAAC,OAAgB,QAWhBD,GAAAE,KAAc,MAMdF,GAAAG,MAAe,OAC9B,OAAAH,KAEAhuC,GAAuBJ,QAAdouC,O1C4+QHI,wCAAwC,SAAStvC,EAAQkB,EAAOJ,GAStE,G2C7gRMyuC,GAAY,WAAlB,QAAMA,MAKSA,EAAAC,IAAa,KAKbD,GAAAE,QAAiB,SAKjBF,GAAAG,OAAgB,QAC/B,OAAAH,KAEAruC,GAAsBJ,QAAbyuC,O3C8gRHI,2CAA2C,SAAS3vC,EAAQkB,EAAOJ,GAsBzE,G4CziRM8uC,GAAe,WAArB,QAAMA,MAKSA,EAAAC,SAAkB,UAKlBD,GAAAvF,KAAc,MAMduF,GAAAE,SAAkB,UACjC,OAAAF,KAEyB1uC,GAAAJ,QAAhB8uC,O5C0iRHttC,yCAAyC,SAAStC,EAAQkB,EAAOJ,GACvE,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6CnlRtB,IAAO4rC,GAAS/vC,EAAe,iCAK/B,IAAOuK,GAAavK,EAAc,wCAElC,IAAOiK,GAAUjK,EAAe,uCAEhC,IAAO8jB,GAAoB9jB,EAAa,iDACxC,IAAOgwC,GAAgBhwC,EAAc,6CACrC,IAAOiwC,GAAsBjwC,EAAY,qDAIzC,IAAO6hB,GAAU7hB,EAAe,uC7C+mRhC,I6C1kRMuB,GAAS,SAAAiD,GAASX,EAAlBtC,EAASiD,EAgGd,SAhGKjD,GAgGO+G,EAAuB4nC,EAA+BC,GAhGnE,GAAA3lC,GAAA1G,IAgGoC,IAAAosC,QAAA,GAA6B,CAA7BA,EAAA,OAA+B,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAEjE3rC,EAAAzD,KAAA+C,KAEAA,MAAK+G,WAAa,IAElB/G,MAAKssC,4BAA8B,SAAC9jC,GAA2B,MAAA9B,GAAK6lC,oBAAoB/jC,GACxFxI,MAAKmgB,gCAAkC,SAAC3X,GAAqB,MAAA9B,GAAK0Z,wBAAwB5X,GAE1FxI,MAAKwE,SAAWA,CAEhBxE,MAAKwsC,mBAGLxsC,MAAK4I,YAAczC,EAAW0C,iBA3F/BlI,OAAAC,eAAWnD,EAAA8C,UAAA,Y7C0kRJM,I6C1kRP,WAEC,MAAOb,MAAKysC,W7C2kRN1rC,WAAY,KACZC,aAAc,M6CtkRrBL,QAAAC,eAAWnD,EAAA8C,UAAA,a7C4kRJM,I6C5kRP,WAEC,MAAOpD,GAAUyD,W7C6kRXH,WAAY,KACZC,aAAc,M6CxkRrBL,QAAAC,eAAWnD,EAAA8C,UAAA,iB7C8kRJM,I6C9kRP,WAEC,MAAOb,MAAK0sC,gB7C+kRN3rC,WAAY,KACZC,aAAc,M6C1kRrBL,QAAAC,eAAWnD,EAAA8C,UAAA,mB7CglRJM,I6ChlRP,WAEC,MAAOb,MAAK2sC,kB7CilRN5rC,WAAY,KACZC,aAAc,M6C5kRrBL,QAAAC,eAAWnD,EAAA8C,UAAA,kB7CklRJM,I6CllRP,WAEC,MAAOb,MAAK4sC,iB7CmlRN7rC,WAAY,KACZC,aAAc,M6C9kRrBL,QAAAC,eAAWnD,EAAA8C,UAAA,Y7ColRJM,I6CplRP,WAEC,MAAOb,MAAKsgB,W7CqlRNhd,I6CllRP,SAAoByF,GAEnB,GAAIA,GAAS/I,KAAKsgB,UACjB,MAED,IAAItgB,KAAKsgB,UAAW,CACnBtgB,KAAKsgB,UAAUC,aAAavgB,KAC5BA,MAAKsgB,UAAUrM,oBAAoBi4B,EAAiBW,mBAAoB7sC,KAAKssC,6BAI9EtsC,KAAKsgB,UAAYvX,CAEjB,IAAI/I,KAAKsgB,UAAW,CACnBtgB,KAAKsgB,UAAUE,UAAUxgB,KACzBA,MAAKsgB,UAAUhY,iBAAiB4jC,EAAiBW,mBAAoB7sC,KAAKssC,+B7CglRrEvrC,WAAY,KACZC,aAAc,M6C1kRrBL,QAAAC,eAAWnD,EAAA8C,UAAA,e7CglRJM,I6ChlRP,WAEC,MAAOb,MAAK2gB,c7CilRNrd,I6C9kRP,SAAuByF,GAEtB/I,KAAK2gB,aAAe5X,G7C+kRdhI,WAAY,KACZC,aAAc,M6CzjRdvD,GAAA8C,UAAA0O,kBAAP,WAECvO,EAAAH,UAAM0O,kBAAiBhS,KAAA+C,KAEvBA,MAAKkP,YAAY9B,MAAQpN,KAAK0sC,eAAet/B,KAC7CpN,MAAKkP,YAAY/E,OAASnK,KAAK0sC,eAAeviC,OAGxC1M,GAAA8C,UAAAmD,MAAP,WAEC,GAAIA,GAAkB,GAAIjG,GAAUuC,KAAKwE,SACzC,OAAOd,GAMR/C,QAAAC,eAAWnD,EAAA8C,UAAA,S7C0jRJM,I6C1jRP,WAEC,MAAOb,MAAKygB,Q7C2jRNnd,I6CxjRP,SAAiByF,GAEhB,GAAI/I,KAAKygB,QAAU1X,EAClB,MAED,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOxM,oBAAoB8J,EAAWgB,sBAAuB/e,KAAKmgB,gCAExEngB,MAAKygB,OAAS1X,CAEd,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOnY,iBAAiByV,EAAWgB,sBAAuB/e,KAAKmgB,gCAErEngB,MAAKogB,2B7CqjRCrf,WAAY,KACZC,aAAc,M6C1iRdvD,GAAA8C,UAAA+D,gBAAP,SAAuBI,EAAkCqR,GAExD,MAAO/V,MAAKwL,kBAAkBshC,uBAAuB9sC,KAAMA,KAAKwE,SAAUxE,KAAKoU,qBAAsB1P,GAM9FjH,GAAA8C,UAAAgsC,oBAAR,SAA4B/jC,GAE3BxI,KAAKwsC,oBAGC/uC,GAAA8C,UAAA0W,eAAP,SAAsBC,GAKrB,GAAIlX,KAAK+O,eACR/O,KAAK+O,eAAeC,YAErBkI,GAAS61B,uBAAuB/sC,MAGzBvC,GAAA8C,UAAAisC,kBAAR,WAEC,GAAIjuB,GAAsBve,KAAKwE,SAASwoC,aAAa,EAErD,IAAItuB,GAAgBH,GAAqBve,KAAKygB,OAAQzgB,KAAKygB,OAAOnC,WAAWC,GAAW,QAAUve,KAAKwE,SAASyb,MAAOjgB,KAAKwE,SAASyb,MAAM3B,WAAWC,GAAW,OAASA,EAAQD,WAAW,GAAM,IAEnM,IAAII,EAAO,CACV,GAAIE,IAAkC5e,KAAKygB,OAAQzgB,KAAKygB,OAAOjC,aAAaD,GAAW,QAAUve,KAAKwE,SAASyb,MAAOjgB,KAAKwE,SAASyb,MAAMzB,aAAaD,GAAW,OAASA,EAAQC,aAAa,IAAM2tB,EAAuBc,mBAC7N,IAAIC,GAAiBtuB,EAAQuuB,WAAazuB,EAAMwuB,IAChDltC,MAAK4sC,gBAAkBM,EAAK9/B,KAC5BpN,MAAK2sC,iBAAmBO,EAAK/iC,MAC7BnK,MAAK0sC,eAAiB9tB,EAAQwuB,WAAa,GAAInB,GAAU,EAAG,EAAGjsC,KAAK4sC,gBAAiB5sC,KAAK2sC,sBACpF,CACN3sC,KAAK4sC,gBAAkB,CACvB5sC,MAAK2sC,iBAAmB,CACxB3sC,MAAK0sC,eAAiB,GAAIT,GAAU,EAAG,EAAG,EAAG,GAG9CjsC,KAAKqJ,oBAELrJ,MAAKsL,cAAc,GAAI0U,GAAqBA,EAAqBc,oBAAqB9gB,OAIhFvC,GAAA8C,UAAAmgB,sBAAP,WAEC1gB,KAAKsL,cAAc,GAAI0U,GAAqBA,EAAqBe,wBAAyB/gB,OAGnFvC,GAAA8C,UAAA6f,wBAAR,SAAgC5X,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAE/BxI,KAAK0gB,uBAEL1gB,MAAKwsC,oBA1NQ/uC,GAAAyD,UAAmB,mBA4NlC,OAAAzD,IA9NwBgJ,EAgOxBrJ,GAAmBJ,QAAVS,I7CwiRN4vC,iCAAiCjsC,UAAUqE,wCAAwC,wCAAwC8S,uCAAuC,uCAAuC+0B,6CAA6C,6CAA6CrsB,iDAAiD,iDAAiDhC,uCAAuC,uCAAuCsuB,qDAAqD,uDAAuD9uC,sCAAsC,SAASvC,EAAQkB,EAAOJ,GAChoB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Cr0RtB,IAAOyF,GAAQ5J,EAAgB,gCAC/B,IAAOsxC,GAAOtxC,EAAgB,+BAE9B,IAAOuxC,GAAevxC,EAAc,yCAEpC,IAAOwxC,GAAqBxxC,EAAY,oDAExC,IAAOgK,GAAsBhK,EAAY,iDAEzC,IAAOiK,GAAUjK,EAAe,uCAChC,IAAOge,GAAsBhe,EAAY,uDAEzC,IAAOqgC,GAAWrgC,EAAe,wCAGjC,IAAMmB,GAAM,SAAAqD,GAASX,EAAf1C,EAAMqD,EAWX,SAXKrD,GAWOqiC,GAXb,GAAAh5B,GAAA1G,IAWa,IAAA0/B,QAAA,GAA6B,CAA7BA,EAAA,KAEXh/B,EAAAzD,KAAA+C,KATOA,MAAA2tC,gBAA2B,GAAI7nC,EAC/B9F,MAAA4tC,qBAA+B,IAG/B5tC,MAAA6tC,oBAA8B,IAOrC7tC,MAAK+G,WAAa,IAElB/G,MAAK8tC,mCAAqC,SAACtlC,GAA0B,MAAA9B,GAAKqnC,0BAA0BvlC,GAEpGxI,MAAKguC,YAActO,GAAc,GAAIgO,EACrC1tC,MAAKguC,YAAY1lC,iBAAiBmlC,EAAgBQ,eAAgBjuC,KAAK8tC,mCAEvE9tC,MAAKkuC,iBAEL,KAAK,GAAIvxC,GAAW,EAAGA,EAAI,IAAKA,EAC/BqD,KAAKkuC,eAAevxC,GAAK,GAAI6wC,EAE9BxtC,MAAKiK,GAAK,GAGVjK,MAAK4I,YAAczC,EAAWuuB,KAI/B/zB,OAAAC,eAAWvD,EAAAkD,UAAA,a9CozRJM,I8CpzRP,WAEC,MAAOxD,GAAO6D,W9CqzRRH,WAAY,KACZC,aAAc,M8CnzRb3D,GAAAkD,UAAAwtC,0BAAR,SAAkCvlC,GAEjCxI,KAAK4tC,qBAAuB,IAC5B5tC,MAAK6tC,oBAAsB,IAC3B7tC,MAAKsL,cAAc9C,GAGpB7H,QAAAC,eAAWvD,EAAAkD,UAAA,iB9CozRJM,I8CpzRP,WAEC,GAAIb,KAAK6tC,oBACR7tC,KAAKmuC,eAEN,OAAOnuC,MAAKkuC,gB9CozRNntC,WAAY,KACZC,aAAc,M8ClzRb3D,GAAAkD,UAAA4tC,cAAR,WAEC,GAAIzxC,GAAUwD,EAAU+wB,C9CqzRlB,I8CnzRFmd,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIC,GAAYC,EAAYC,EAAYC,CACxC,IAAIhvC,EACJ,IAAIoS,GAAmBvS,KAAKovC,eAAe5hC,OAC3C,IAAI6hC,EAEJjB,GAAM77B,EAAI,EACV87B,GAAM97B,EAAI,EACV+7B,GAAM/7B,EAAI,EACVg8B,GAAMh8B,EAAI,GACVi8B,GAAMj8B,EAAI,EACVk8B,GAAMl8B,EAAI,EACVm8B,GAAMn8B,EAAI,EACVo8B,GAAMp8B,EAAI,GACVq8B,GAAMr8B,EAAI,EACVs8B,GAAMt8B,EAAI,EACVu8B,GAAMv8B,EAAI,GACVw8B,GAAMx8B,EAAI,GACVy8B,GAAMz8B,EAAI,EACV08B,GAAM18B,EAAI,EACV28B,GAAM38B,EAAI,GACV48B,GAAM58B,EAAI,GAGVpS,GAAIH,KAAKkuC,eAAe,EACxBxxC,GAAIsyC,EAAMZ,CACVluC,GAAI+uC,EAAMZ,CACVpd,GAAIie,EAAMZ,CACVe,GAAS,EAAEryB,KAAK0P,KAAKhwB,EAAEA,EAAIwD,EAAEA,EAAI+wB,EAAEA,EACnC9wB,GAAEzD,EAAIA,EAAE2yC,CACRlvC,GAAED,EAAIA,EAAEmvC,CACRlvC,GAAE8wB,EAAIA,EAAEoe,CACRlvC,GAAEF,IAAMkvC,EAAMZ,GAAKc,CAGnBlvC,GAAIH,KAAKkuC,eAAe,EACxBxxC,GAAIsyC,EAAMZ,CACVluC,GAAI+uC,EAAMZ,CACVpd,GAAIie,EAAMZ,CACVe,GAAS,EAAEryB,KAAK0P,KAAKhwB,EAAEA,EAAIwD,EAAEA,EAAI+wB,EAAEA,EACnC9wB,GAAEzD,EAAIA,EAAE2yC,CACRlvC,GAAED,EAAIA,EAAEmvC,CACRlvC,GAAE8wB,EAAIA,EAAEoe,CACRlvC,GAAEF,GAAKsuC,EAAMY,GAAKE,CAGlBlvC,GAAIH,KAAKkuC,eAAe,EACxBxxC,GAAIsyC,EAAMR,CACVtuC,GAAI+uC,EAAMR,CACVxd,GAAIie,EAAMR,CACVW,GAAS,EAAEryB,KAAK0P,KAAKhwB,EAAEA,EAAIwD,EAAEA,EAAI+wB,EAAEA,EACnC9wB,GAAEzD,EAAIA,EAAE2yC,CACRlvC,GAAED,EAAIA,EAAEmvC,CACRlvC,GAAE8wB,EAAIA,EAAEoe,CACRlvC,GAAEF,IAAMkvC,EAAMR,GAAKU,CAGnBlvC,GAAIH,KAAKkuC,eAAe,EACxBxxC,GAAIsyC,EAAMR,CACVtuC,GAAI+uC,EAAMR,CACVxd,GAAIie,EAAMR,CACVW,GAAS,EAAEryB,KAAK0P,KAAKhwB,EAAEA,EAAIwD,EAAEA,EAAI+wB,EAAEA,EACnC9wB,GAAEzD,EAAIA,EAAE2yC,CACRlvC,GAAED,EAAIA,EAAEmvC,CACRlvC,GAAE8wB,EAAIA,EAAEoe,CACRlvC,GAAEF,GAAK0uC,EAAMQ,GAAKE,CAGlBlvC,GAAIH,KAAKkuC,eAAe,EACxBxxC,GAAIkyC,CACJ1uC,GAAI2uC,CACJ5d,GAAI6d,CACJO,GAAS,EAAEryB,KAAK0P,KAAKhwB,EAAEA,EAAIwD,EAAEA,EAAI+wB,EAAEA,EACnC9wB,GAAEzD,EAAIA,EAAE2yC,CACRlvC,GAAED,EAAIA,EAAEmvC,CACRlvC,GAAE8wB,EAAIA,EAAEoe,CACRlvC,GAAEF,GAAK8uC,EAAIM,CAGXlvC,GAAIH,KAAKkuC,eAAe,EACxBxxC,GAAIsyC,EAAMJ,CACV1uC,GAAI+uC,EAAMJ,CACV5d,GAAIie,EAAMJ,CACVO,GAAS,EAAEryB,KAAK0P,KAAKhwB,EAAEA,EAAIwD,EAAEA,EAAI+wB,EAAEA,EACnC9wB,GAAEzD,EAAIA,EAAE2yC,CACRlvC,GAAED,EAAIA,EAAEmvC,CACRlvC,GAAE8wB,EAAIA,EAAEoe,CACRlvC,GAAEF,GAAK8uC,EAAMI,GAAKE,CAElBrvC,MAAK6tC,oBAAsB,MAIrBxwC,GAAAkD,UAAAyI,kCAAP,SAAyC0uB,GAExC,GAAIh3B,EAAAH,UAAMyI,kCAAiC/L,KAAA+C,KAAC03B,GAC3C,MAAO,KAER,IAAI13B,KAAK2M,wBAA0BzG,EAAuB0F,gBAAiB,CAC1E5L,KAAK4tC,qBAAuB,IAC5B5tC,MAAK6tC,oBAAsB,KAG5B,MAAO,OAMRltC,QAAAC,eAAWvD,EAAAkD,UAAA,c9CsyRJM,I8CtyRP,WAEC,MAAOb,MAAKguC,a9CuyRN1qC,I8CpyRP,SAAsByF,GAErB,GAAI/I,KAAKguC,aAAejlC,EACvB,MAED,KAAKA,EACJ,KAAM,IAAIlM,OAAM,6BAEjBmD,MAAKguC,YAAY/5B,oBAAoBw5B,EAAgBQ,eAAgBjuC,KAAK8tC,mCAC1E9tC,MAAKguC,YAAcjlC,CACnB/I,MAAKguC,YAAY1lC,iBAAiBmlC,EAAgBQ,eAAgBjuC,KAAK8tC,mCACvE9tC,MAAKsL,cAAc,GAAIixB,GAAYA,EAAYiD,mBAAoBx/B,Q9CmyR7De,WAAY,KACZC,aAAc,M8C9xRrBL,QAAAC,eAAWvD,EAAAkD,UAAA,kB9CoyRJM,I8CpyRP,WAEC,GAAIb,KAAK4tC,qBAAsB,CAC9B5tC,KAAK2tC,gBAAgBjjC,SAAS1K,KAAKoP,sBACnCpP,MAAK2tC,gBAAgBl4B,OAAOzV,KAAKguC,YAAY/b,OAC7CjyB,MAAK4tC,qBAAuB,MAG7B,MAAO5tC,MAAK2tC,iB9CoyRN5sC,WAAY,KACZC,aAAc,M8C1xRd3D,GAAAkD,UAAA6gC,OAAP,SAAckO,EAAWC,EAAWpO,GAEnC,MAAOnhC,MAAK2K,eAAeq7B,qBAAqBhmC,KAAKguC,YAAYzP,UAAU+Q,EAAIC,EAAIpO,IAS7E9jC,GAAAkD,UAAAqgC,QAAP,SAAeC,GAEd,MAAO7gC,MAAKguC,YAAYpN,QAAQ5gC,KAAKoP,sBAAsB3C,gBAAgBo0B,IAWrExjC,GAAAkD,UAAAg+B,UAAP,SAAiB+Q,EAAWC,EAAWpO,GAEtC,MAAOnhC,MAAK2K,eAAe8B,gBAAgBzM,KAAKguC,YAAYzP,UAAU+Q,EAAIC,EAAIpO,IAGxE9jC,GAAAkD,UAAA0W,eAAP,SAAsBC,GAKrB,GAAIlX,KAAK+O,eACR/O,KAAK+O,eAAeC,aAnPR3R,GAAA6D,UAAmB,gBAuPlC,OAAA7D,IAzPqB6c,EA2PrB9c,GAAgBJ,QAAPK,I9C+xRNmyC,yCAAyCpuC,UAAU2W,gCAAgC3W,UAAUquC,+BAA+BruC,UAAUsuC,oDAAoDtuC,UAAUgX,iDAAiD,iDAAiDG,uCAAuC,uCAAuC0D,uDAAuD,uDAAuDylB,wCAAwC,0CAA0ChjC,gDAAgD,SAASxC,EAAQkB,EAAOJ,GAC/nB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+C9iStB,IAAO0F,GAAa7J,EAAc,qCAClC,IAAO4J,GAAQ5J,EAAgB,gCAC/B,IAAO+J,GAAQ/J,EAAgB,gCAE/B,IAAOke,GAASle,EAAe,oCAC/B,IAAOgK,GAAsBhK,EAAY,iDACzC,IAAOiK,GAAUjK,EAAe,uCAGhC,IAAOyzC,GAAuBzzC,EAAY,qEAE1C,IAAMoB,GAAgB,SAAAoD,GAASX,EAAzBzC,EAAgBoD,EAUrB,SAVKpD,GAUOsyC,EAAiBC,EAAkBC,GAAnC,GAAAF,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,GAAe,EAAG,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAE9CpvC,EAAAzD,KAAA+C,KALOA,MAAA+vC,aAA6B,GAAI7tC,OAAc,GAOtDlC,MAAK+G,WAAa,IAElB/G,MAAKuxB,UAAY,GAAItrB,GAAS2pC,EAAMC,EAAMC,EAE1C9vC,MAAKgwC,gBAAkB,GAAI/pC,EAG3BjG,MAAK4I,YAAczC,EAAWuuB,KAG/B/zB,OAAAC,eAAWtD,EAAAiD,UAAA,a/CmiSJM,I+CniSP,WAEC,MAAOvD,GAAiB4D,W/CoiSlBH,WAAY,KACZC,aAAc,M+CliSrBL,QAAAC,eAAWtD,EAAAiD,UAAA,kB/CqiSJM,I+CriSP,WAEC,GAAIb,KAAK2M,wBAA0BzG,EAAuB0F,gBACzD5L,KAAK4M,uBAEN,OAAO5M,MAAKgwC,iB/CqiSNjvC,WAAY,KACZC,aAAc,M+CniSrBL,QAAAC,eAAWtD,EAAAiD,UAAA,a/CsiSJM,I+CtiSP,WAEC,MAAOb,MAAKiwC,Y/CuiSN3sC,I+CpiSP,SAAqByF,GAEpB/I,KAAKiwC,WAAalnC,CAElB,KAAK/I,KAAKkwC,WACTlwC,KAAKkwC,WAAa,GAAIjqC,EAEvBjG,MAAKkwC,WAAWrmC,EAAI7J,KAAK6J,EAAI7J,KAAKiwC,WAAWpmC,CAC7C7J,MAAKkwC,WAAWnmC,EAAI/J,KAAK+J,EAAI/J,KAAKiwC,WAAWlmC,CAC7C/J,MAAKkwC,WAAWjmC,EAAIjK,KAAKiK,EAAIjK,KAAKiwC,WAAWhmC,CAE7CjK,MAAKkS,OAAOlS,KAAKkwC,a/CkiSXnvC,WAAY,KACZC,aAAc,M+C/hSd1D,GAAAiD,UAAAqM,sBAAP,WAEClM,EAAAH,UAAMqM,sBAAqB3P,KAAA+C,KAE3BA,MAAK2K,eAAe+B,aAAa,EAAG1M,KAAKgwC,gBAEzChwC,MAAKgwC,gBAAgBv9B,YAIfnV,GAAAiD,UAAAib,oBAAP,WAEC,MAAO,IAAIm0B,GAILryC,GAAAiD,UAAAub,2BAAP,SAAkCC,EAAgBpI,EAAe7Q,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIyP,GAAmBxM,EAAc6M,kBACrC,IAAIC,GAAa,GAAI/M,EAErB+M,GAAEnI,SAASqR,EAAOrI,wBAAwBC,GAC1Cd,GAAE4C,OAAOzV,KAAKoP,sBAEd,KAAKpP,KAAKmwC,gBACTnwC,KAAKmwC,kBAENt9B,GAAEu9B,iBAAiBpwC,KAAK+vC,aAAc/vC,KAAKmwC,gBAE3C,IAAIE,GAAc5L,SAAU6L,GAAe7L,QAC3C,IAAI8L,GAAc9L,SAAU+L,GAAe/L,QAC3C,IAAIgM,GAAchM,SAAUiM,GAAejM,QAC3C,IAAIxkC,EACJ,KAAK,GAAItD,GAAW,EAAGA,EAAI,IAAK,CAC/BsD,EAAID,KAAKmwC,gBAAgBxzC,IAEzB,IAAIsD,EAAIowC,EACPA,EAAOpwC,CAER,IAAIA,EAAIqwC,EACPA,EAAOrwC,CAERA,GAAID,KAAKmwC,gBAAgBxzC,IAEzB,IAAIsD,EAAIswC,EACPA,EAAOtwC,CAER,IAAIA,EAAIuwC,EACPA,EAAOvwC,CAERA,GAAID,KAAKmwC,gBAAgBxzC,IAEzB,IAAIsD,EAAIwwC,EACPA,EAAOxwC,CAER,IAAIA,EAAIywC,EACPA,EAAOzwC,EAGT,GAAI0wC,GAAmB,GAAGL,EAAOD,EACjC,IAAIO,GAAmB,GAAGJ,EAAOD,EACjC,IAAIM,GAAmB,GAAGH,EAAOD,EACjCl+B,GAAI,GAAK,EAAEo+B,CACXp+B,GAAI,GAAK,EAAEq+B,CACXr+B,GAAI,IAAMs+B,CACVt+B,GAAI,MAAQ+9B,EAAOD,GAAMM,CACzBp+B,GAAI,MAAQi+B,EAAOD,GAAMK,CACzBr+B,GAAI,KAAOk+B,EAAKI,CAChBt+B,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAClFA,GAAI,IAAM,CAEV,KAAKzP,EACJA,EAAS,GAAIgD,EAEdhD,GAAOgQ,gBAAgBP,EACvBzP,GAAO4U,QAAQ7E,EAEf,OAAO/P,GAQDxF,GAAAiD,UAAA0O,kBAAP,WAECvO,EAAAH,UAAM0O,kBAAiBhS,KAAA+C,K/C4gSjB,I+CzgSFm3B,GAAcn3B,KAAKkP,YAAYrF,CACnC,IAAIutB,GAAcp3B,KAAKkP,YAAYnF,EAAI/J,KAAKkP,YAAY/E,MACxD,IAAIktB,GAAcr3B,KAAKkP,YAAYjF,CACnC,IAAIqtB,GAAct3B,KAAKkP,YAAYrF,EAAI7J,KAAKkP,YAAY9B,KACxD,IAAImqB,GAAcv3B,KAAKkP,YAAYnF,CACnC,IAAIytB,GAAcx3B,KAAKkP,YAAYjF,EAAIjK,KAAKkP,YAAY3F,KAExDvJ,MAAK+vC,aAAa,GAAK5Y,CACvBn3B,MAAK+vC,aAAa,GAAK3Y,CACvBp3B,MAAK+vC,aAAa,GAAK1Y,CACvBr3B,MAAK+vC,aAAa,GAAKzY,CACvBt3B,MAAK+vC,aAAa,GAAK3Y,CACvBp3B,MAAK+vC,aAAa,GAAK1Y,CACvBr3B,MAAK+vC,aAAa,GAAK5Y,CACvBn3B,MAAK+vC,aAAa,GAAKxY,CACvBv3B,MAAK+vC,aAAa,GAAK1Y,CACvBr3B,MAAK+vC,aAAa,GAAKzY,CACvBt3B,MAAK+vC,aAAa,IAAMxY,CACxBv3B,MAAK+vC,aAAa,IAAM1Y,CACxBr3B,MAAK+vC,aAAa,IAAM5Y,CACxBn3B,MAAK+vC,aAAa,IAAM3Y,CACxBp3B,MAAK+vC,aAAa,IAAMvY,CACxBx3B,MAAK+vC,aAAa,IAAMzY,CACxBt3B,MAAK+vC,aAAa,IAAM3Y,CACxBp3B,MAAK+vC,aAAa,IAAMvY,CACxBx3B,MAAK+vC,aAAa,IAAM5Y,CACxBn3B,MAAK+vC,aAAa,IAAMxY,CACxBv3B,MAAK+vC,aAAa,IAAMvY,CACxBx3B,MAAK+vC,aAAa,IAAMzY,CACxBt3B,MAAK+vC,aAAa,IAAMxY,CACxBv3B,MAAK+vC,aAAa,IAAMvY,EA/KXl6B,GAAA4D,UAAmB,0BAiLlC,OAAA5D,IAnL+B8c,EAqL/Bhd,GAA0BJ,QAAjBM,I/C2gSNya,gCAAgC3W,UAAU4W,qCAAqC5W,UAAU+W,gCAAgC/W,UAAUgX,iDAAiD,iDAAiD4B,oCAAoC,oCAAoCzB,uCAAuC,uCAAuCu4B,qEAAqE,uEAAuEC,uCAAuC,SAAS70C,EAAQkB,EAAOJ,SAEnkB2B,0CAA0C,SAASzC,EAAQkB,EAAOJ,GACxE,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgDjtStB,IAAO2wC,GAAW90C,EAAe,oCAGjC,IAAO+0C,GAAS/0C,EAAe,mCAE/B,IAAOke,GAASle,EAAe,oCAC/B,IAAOiK,GAAUjK,EAAe,uCAIhC,IAAM2B,GAAU,SAAA6C,GAASX,EAAnBlC,EAAU6C,EAYf,SAZK7C,GAYOqzC,EAAsBC,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEjCzwC,EAAAzD,KAAA+C,KARMA,MAAAoxC,eAA6B,GAAIJ,EAIjChxC,MAAAqxC,gBAA8B,GAAIL,EAMxChxC,MAAK+G,WAAa,IAElB/G,MAAKkxC,WAAaA,CAClBlxC,MAAKmxC,YAAcA,CAGnBnxC,MAAK4I,YAAczC,EAAWuuB,KAG/B/zB,OAAAC,eAAW/C,EAAA0C,UAAA,ahDksSJM,IgDlsSP,WAEC,MAAOhD,GAAWqD,WhDmsSZH,WAAY,KACZC,aAAc,MgDhsSdnD,GAAA0C,UAAAub,2BAAP,SAAkCC,EAAgBpI,EAAe7Q,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,KAAM,IAAImuC,GAAU,wEA/BPpzC,GAAAqD,UAAmB,oBAiClC,OAAArD,IAnCyBuc,EAqCzBhd,GAAoBJ,QAAXa,IhDssSNyzC,mCAAmClwC,UAAUmwC,oCAAoCnwC,UAAU4Y,oCAAoC,oCAAoCzB,uCAAuC,yCAAyC3Z,2CAA2C,SAAS1C,EAAQkB,EAAOJ,GACzT,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiDnvStB,IAAOoG,GAAavK,EAAc,wCAElC,IAAOiK,GAAUjK,EAAe,uCAChC,IAAO8jB,GAAoB9jB,EAAa,iDAKxC,IAAO6hB,GAAU7hB,EAAe,uCjDovShC,IiD/uSMwB,GAAW,SAAAgD,GAASX,EAApBrC,EAAWgD,EAyIhB,SAzIKhD,GAyIO8G,EAAuBgtC,EAAwBC,EAAsB10B,GAzIlF,GAAArW,GAAA1G,IAyIkF,IAAA+c,QAAA,GAAoB,CAApBA,EAAA,EAEhFrc,EAAAzD,KAAA+C,KAEAA,MAAKmgB,gCAAkC,SAAC3X,GAAqB,MAAA9B,GAAK0Z,wBAAwB5X,GAE1FxI,MAAK+G,WAAa,IAElB/G,MAAKwE,SAAWA,CAEhBxE,MAAK0xC,eAAiBF,CACtBxxC,MAAK2xC,aAAeF,CACpBzxC,MAAK4xC,eAAiB70B,EAAU,EAGhC/c,MAAK4I,YAAczC,EAAW0C,iBArI/BlI,OAAAC,eAAWlD,EAAA6C,UAAA,YjDsvSJM,IiDtvSP,WAEC,MAAOb,MAAKysC,WjDuvSN1rC,WAAY,KACZC,aAAc,MiDlvSrBL,QAAAC,eAAWlD,EAAA6C,UAAA,ajDwvSJM,IiDxvSP,WAEC,MAAOnD,GAAYwD,WjDyvSbH,WAAY,KACZC,aAAc,MiDpvSrBL,QAAAC,eAAWlD,EAAA6C,UAAA,gBjD0vSJM,IiD1vSP,WAEC,MAAOb,MAAK0xC,gBjD2vSN3wC,WAAY,KACZC,aAAc,MiDzvSrBL,QAAAC,eAAWlD,EAAA6C,UAAA,iBjD4vSJ+C,IiD5vSP,SAAyByF,GAExB,GAAI/I,KAAK0xC,gBAAkB3oC,EAC1B,MAED/I,MAAK0xC,eAAiB3oC,CAEtB/I,MAAK6gB,sBjD2vSC9f,WAAY,KACZC,aAAc,MiDtvSrBL,QAAAC,eAAWlD,EAAA6C,UAAA,ejD4vSJM,IiD5vSP,WAEC,MAAOb,MAAK2xC,cjD6vSNruC,IiD1vSP,SAAuByF,GAEtB,GAAI/I,KAAK2xC,cAAgB5oC,EACxB,MAED/I,MAAK2xC,aAAe5oC,CAEpB/I,MAAK6gB,sBjDyvSC9f,WAAY,KACZC,aAAc,MiDpvSrBL,QAAAC,eAAWlD,EAAA6C,UAAA,YjD0vSJM,IiD1vSP,WAEC,MAAOb,MAAKsgB,WjD2vSNhd,IiDxvSP,SAAoByF,GAEnB,GAAI/I,KAAKwE,SACRxE,KAAKwE,SAAS+b,aAAavgB,KAE5BA,MAAKsgB,UAAYvX,CAEjB,IAAI/I,KAAKwE,SACRxE,KAAKwE,SAASgc,UAAUxgB,OjDuvSnBe,WAAY,KACZC,aAAc,MiDlvSrBL,QAAAC,eAAWlD,EAAA6C,UAAA,ajDwvSJM,IiDxvSP,WAEC,MAAOb,MAAK4xC,eAAe,GjDyvSrBtuC,IiDtvSP,SAAqByF,GAEpB,GAAI/I,KAAK4xC,gBAAkB7oC,EAC1B,MAED/I,MAAK4xC,eAAiB7oC,EAAM,EAE5B/I,MAAK6gB,sBjDqvSC9f,WAAY,KACZC,aAAc,MiDhvSrBL,QAAAC,eAAWlD,EAAA6C,UAAA,ejDsvSJM,IiDtvSP,WAEC,MAAOb,MAAK2gB,cjDuvSNrd,IiDpvSP,SAAuByF,GAEtB/I,KAAK2gB,aAAe5X,GjDqvSdhI,WAAY,KACZC,aAAc,MiDjvSrBL,QAAAC,eAAWlD,EAAA6C,UAAA,kBjDuvSJM,IiDvvSP,WAEC,MAAOb,MAAKmqB,iBjDwvSN7mB,IiDrvSP,SAA0ByF,GAEzB/I,KAAKmqB,gBAAkBphB,GjDsvSjBhI,WAAY,KACZC,aAAc,MiDxtSrBL,QAAAC,eAAWlD,EAAA6C,UAAA,SjD8tSJM,IiD9tSP,WAEC,MAAOb,MAAKygB,QjD+tSNnd,IiD5tSP,SAAiByF,GAEhB,GAAI/I,KAAKygB,QAAU1X,EAClB,MAED,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOxM,oBAAoB8J,EAAWgB,sBAAuB/e,KAAKmgB,gCAExEngB,MAAKygB,OAAS1X,CAEd,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOnY,iBAAiByV,EAAWgB,sBAAuB/e,KAAKmgB,gCAErEngB,MAAK0gB,yBjDytSC3f,WAAY,KACZC,aAAc,MiDntSdtD,GAAA6C,UAAA0O,kBAAP,WAECvO,EAAAH,UAAM0O,kBAAiBhS,KAAA+C,KAEvBA,MAAKkP,YAAYrF,EAAImT,KAAKia,IAAIj3B,KAAK0xC,eAAe7nC,EAAG7J,KAAK2xC,aAAa9nC,EACvE7J,MAAKkP,YAAYnF,EAAIiT,KAAKia,IAAIj3B,KAAK0xC,eAAe3nC,EAAG/J,KAAK2xC,aAAa5nC,EACvE/J,MAAKkP,YAAYjF,EAAI+S,KAAKia,IAAIj3B,KAAK0xC,eAAeznC,EAAGjK,KAAK2xC,aAAa1nC,EACvEjK,MAAKkP,YAAY9B,MAAQ4P,KAAKoW,IAAIpzB,KAAK0xC,eAAe7nC,EAAI7J,KAAK2xC,aAAa9nC,EAC5E7J,MAAKkP,YAAY/E,OAAS6S,KAAKoW,IAAIpzB,KAAK0xC,eAAe3nC,EAAI/J,KAAK2xC,aAAa5nC,EAC7E/J,MAAKkP,YAAY3F,MAAQyT,KAAKoW,IAAIpzB,KAAK0xC,eAAeznC,EAAIjK,KAAK2xC,aAAa1nC,GAGtEvM,GAAA6C,UAAA+O,qBAAP,WAEC5O,EAAAH,UAAM+O,qBAAoBrS,KAAA+C,KAE1BA,MAAKiP,mBAEL,IAAI4iC,IAAoB7xC,KAAK2xC,aAAa9nC,EAAI7J,KAAK0xC,eAAe7nC,GAAG,CACrE,IAAIioC,IAAqB9xC,KAAK2xC,aAAa5nC,EAAI/J,KAAK0xC,eAAe3nC,GAAG,CACtE,IAAIgoC,IAAoB/xC,KAAK2xC,aAAa1nC,EAAIjK,KAAK0xC,eAAeznC,GAAG,CACrEjK,MAAKuP,eAAe1F,EAAI7J,KAAK0xC,eAAe7nC,EAAIgoC,CAChD7xC,MAAKuP,eAAexF,EAAI/J,KAAK0xC,eAAe3nC,EAAI+nC,CAChD9xC,MAAKuP,eAAetF,EAAIjK,KAAK0xC,eAAeznC,EAAI8nC,CAChD/xC,MAAKuP,eAAe6kB,OAASpX,KAAK0P,KAAKmlB,EAAUA,EAAYC,EAAWA,EAAaC,EAAUA,GAMxFr0C,GAAA6C,UAAAsgB,mBAAR,WAEC7gB,KAAKsL,cAAc,GAAI0U,GAAqBA,EAAqBc,oBAAqB9gB,OAGhFtC,GAAA6C,UAAAmgB,sBAAP,WAEC1gB,KAAKsL,cAAc,GAAI0U,GAAqBA,EAAqBe,wBAAyB/gB,OAGnFtC,GAAA6C,UAAA6f,wBAAR,SAAgC5X,GAE/BxI,KAAK0gB,wBAGChjB,GAAA6C,UAAA0W,eAAP,SAAsBC,GAKrB,GAAIlX,KAAK+O,eACR/O,KAAK+O,eAAeC,YAErBkI,GAAS61B,uBAAuB/sC,MAvOnBtC,GAAAwD,UAAmB,qBAyOlC,OAAAxD,IA9O0B+I,EAgP1BrJ,GAAqBJ,QAAZU,IjD4sSN+H,wCAAwC,wCAAwC8S,uCAAuC,uCAAuC0I,iDAAiD,iDAAiDhC,uCAAuC,yCAAyCpgB,oCAAoC,SAAS3C,EAAQkB,EAAOJ,GAC/Y,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkDl9StB,IAAO2F,GAAK9J,EAAgB,6BAC5B,IAAO+J,GAAQ/J,EAAgB,gCAM/B,IAAO2c,GAAQ3c,EAAgB,mCAG/B,IAAO0c,GAAa1c,EAAc,0CAClC,IAAOge,GAAsBhe,EAAY,uDACzC,IAAO81C,GAAW91C,EAAe,sCAIjC,IAAO2F,GAAgB3F,EAAc,4CAErC,IAAO6hB,GAAU7hB,EAAe,uClD+8ShC,IkDx8SMqB,GAAI,SAAAmD,GAASX,EAAbxC,EAAImD,EAmOT,SAnOKnD,GAmOO00C,EAAmBztC,GAnOhC,GAAAkC,GAAA1G,IAmOgC,IAAAwE,QAAA,GAA4B,CAA5BA,EAAA,KAE9B9D,EAAAzD,KAAA+C,KAvNOA,MAAAsb,cAAwB,IACxBtb,MAAAkyC,wBAAkC,IAQlClyC,MAAAmyC,WAAmB,GAAInsC,EAgN9BhG,MAAK+G,WAAa,IAElB/G,MAAKoyC,WAAa,GAAIlwC,MAEtBlC,MAAKqyC,iCAAmC,SAAC7pC,GAAwB,MAAA9B,GAAK4rC,wBAAwB9pC,GAC9FxI,MAAKuyC,4BAA8B,SAAC/pC,GAAwB,MAAA9B,GAAK8rC,mBAAmBhqC,GACpFxI,MAAKyyC,8BAAgC,SAACjqC,GAAwB,MAAA9B,GAAKgsC,qBAAqBlqC,GACxFxI,MAAKmgB,gCAAkC,SAAC3X,GAAqB,MAAA9B,GAAK0Z,wBAAwB5X,GAG1FxI,MAAKiyC,SAAWA,GAAY,GAAIp5B,EAEhC7Y,MAAKwE,SAAWA,EAxNjB7D,OAAAC,eAAWrD,EAAAgD,UAAA,YlD28SJM,IkD38SP,WAEC,MAAOb,MAAKysC,WlD48SNnpC,IkDz8SP,SAAoByF,GAEnB,GAAI/I,KAAKysC,UACRzsC,KAAKysC,UAAUkG,YAAY3yC,KAE5BA,MAAKysC,UAAY1jC,CAEjB,IAAIkE,GAAajN,KAAKoyC,WAAWl1C,MACjC,IAAI01C,EAEJ,KAAK,GAAIj2C,GAAW,EAAGA,EAAIsQ,IAAOtQ,EAAG,CACpCi2C,EAAU5yC,KAAKoyC,WAAWz1C,EAG1B,IAAIi2C,EAAQpuC,SAAU,CACrBouC,EAAQpuC,SAAS+b,aAAaqyB,EAC9BA,GAAQpuC,SAASgc,UAAUoyB,GAI5BA,EAAQ/xB,qBAGT,GAAI7gB,KAAKysC,UACRzsC,KAAKysC,UAAUoG,SAAS7yC,OlDo8SnBe,WAAY,KACZC,aAAc,MkD/7SrBL,QAAAC,eAAWrD,EAAAgD,UAAA,alDq8SJM,IkDr8SP,WAEC,MAAOtD,GAAK2D,WlDs8SNH,WAAY,KACZC,aAAc,MkDj8SrBL,QAAAC,eAAWrD,EAAAgD,UAAA,gBlDu8SJM,IkDv8SP,WAEC,MAAOb,MAAKsb,elDw8SNhY,IkDr8SP,SAAwByF,GAEvB/I,KAAKsb,cAAgBvS,GlDs8SfhI,WAAY,KACZC,aAAc,MkDj8SrBL,QAAAC,eAAWrD,EAAAgD,UAAA,YlDu8SJM,IkDv8SP,WAEC,GAAIb,KAAK+O,eACR/O,KAAK+O,eAAeC,YAErB,OAAOhP,MAAK8yC,WlDu8SNxvC,IkDp8SP,SAAoByF,GAEnB,GAAI/I,KAAK8yC,WAAa/pC,EACrB,MAED,IAAIpM,EAEJ,IAAIqD,KAAK8yC,UAAW,CACnB9yC,KAAK8yC,UAAU7+B,oBAAoB2E,EAAca,eAAgBzZ,KAAKqyC,iCACtEryC,MAAK8yC,UAAU7+B,oBAAoB2E,EAAcK,mBAAoBjZ,KAAKuyC,4BAC1EvyC,MAAK8yC,UAAU7+B,oBAAoB2E,EAAcU,qBAAsBtZ,KAAKyyC,8BAE5E,KAAK91C,EAAI,EAAGA,EAAIqD,KAAKoyC,WAAWl1C,SAAUP,EAAG,CAC5CqD,KAAKoyC,WAAWz1C,GAAGsY,OACnBjV,MAAKoyC,WAAWz1C,GAAGsE,UAGpBjB,KAAKoyC,WAAWl1C,OAAS,EAG1B8C,KAAK8yC,UAAY/pC,CAEjB,IAAI/I,KAAK8yC,UAAW,CAEnB9yC,KAAK8yC,UAAUxqC,iBAAiBsQ,EAAca,eAAgBzZ,KAAKqyC,iCACnEryC,MAAK8yC,UAAUxqC,iBAAiBsQ,EAAcK,mBAAoBjZ,KAAKuyC,4BACvEvyC,MAAK8yC,UAAUxqC,iBAAiBsQ,EAAcU,qBAAsBtZ,KAAKyyC,8BAEzE,IAAIM,GAAkC/yC,KAAK8yC,UAAUE,aAErD,KAAKr2C,EAAI,EAAGA,EAAIo2C,EAAS71C,SAAUP,EAClCqD,KAAKizC,WAAWF,EAASp2C,MlD67SrBoE,WAAY,KACZC,aAAc,MkDv7SrBL,QAAAC,eAAWrD,EAAAgD,UAAA,YlD67SJM,IkD77SP,WAEC,MAAOb,MAAKsgB,WlD87SNhd,IkD37SP,SAAoByF,GAEnB,GAAIA,GAAS/I,KAAKsgB,UACjB,MAED,IAAI3jB,EACJ,IAAIsQ,GAAajN,KAAKoyC,WAAWl1C,MACjC,IAAI01C,EAEJ,IAAI5yC,KAAKsgB,UACR,IAAK3jB,EAAI,EAAGA,EAAIsQ,EAAKtQ,IACpB,IAAKi2C,EAAU5yC,KAAKoyC,WAAWz1C,IAAI6H,UAAYxE,KAAKsgB,UACnDtgB,KAAKsgB,UAAUC,aAAaqyB,EAE/B5yC,MAAKsgB,UAAYvX,CAEjB,IAAI/I,KAAKsgB,UACR,IAAK3jB,EAAI,EAAGA,EAAIsQ,EAAKtQ,IACpB,IAAKi2C,EAAU5yC,KAAKoyC,WAAWz1C,IAAI6H,UAAYxE,KAAKsgB,UACnDtgB,KAAKsgB,UAAUE,UAAUoyB,IlDw7StB7xC,WAAY,KACZC,aAAc,MkDn7SrBL,QAAAC,eAAWrD,EAAAgD,UAAA,0BlDy7SJM,IkDz7SP,WAEC,MAAOb,MAAKkyC,yBlD07SN5uC,IkDv7SP,SAAkCyF,GAEjC/I,KAAKkyC,wBAA0BnpC,GlDw7SzBhI,WAAY,KACZC,aAAc,MkDl7SrBL,QAAAC,eAAWrD,EAAAgD,UAAA,alDy7SJM,IkDz7SP,WAKC,GAAIb,KAAK+O,eACR/O,KAAK+O,eAAeC,YAErB,OAAOhP,MAAKoyC,YlDy7SNrxC,WAAY,KACZC,aAAc,MkDp7SrBL,QAAAC,eAAWrD,EAAAgD,UAAA,elD07SJM,IkD17SP,WAEC,MAAOb,MAAK2gB,clD27SNrd,IkDx7SP,SAAuByF,GAEtB/I,KAAK2gB,aAAe5X,GlDy7SdhI,WAAY,KACZC,aAAc,MkDp7SrBL,QAAAC,eAAWrD,EAAAgD,UAAA,SlD07SJM,IkD17SP,WAEC,MAAOb,MAAKygB,QlD27SNnd,IkDx7SP,SAAiByF,GAEhB,GAAI/I,KAAKygB,QAAU1X,EAClB,MAED,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOxM,oBAAoB8J,EAAWgB,sBAAuB/e,KAAKmgB,gCAExEngB,MAAKygB,OAAS1X,CAEd,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOnY,iBAAiByV,EAAWgB,sBAAuB/e,KAAKmgB,gCAErEngB,MAAKkzC,4BlDq7SCnyC,WAAY,KACZC,aAAc,MkDv5SdzD,GAAAgD,UAAA4yC,oBAAP,WAECnzC,KAAKiyC,SAAS7tC,oBAAoBpE,KAAKqE,UAAUkJ,SACjDvN,MAAKqE,UAAUmP,gBAMTjW,GAAAgD,UAAAU,QAAP,WAECjB,KAAKyO,eAELlR,GAAK61C,QAAQ9tC,KAAKtF,MAMZzC,GAAAgD,UAAAkO,cAAP,WAEC/N,EAAAH,UAAMkO,cAAaxR,KAAA+C,KAEnBA,MAAKwE,SAAW,IAChBxE,MAAKiyC,SAAW,IAEhB,IAAIjyC,KAAKysC,UACRzsC,KAAKysC,UAAUxrC,UAmBV1D,GAAAgD,UAAAmD,MAAP,WAEC,GAAIsK,GAAoBzQ,EAAK61C,QAAc,OAAG71C,EAAK61C,QAAQC,MAAQ,GAAI91C,GAAKyC,KAAK8yC,UAAW9yC,KAAKsgB,UAEjGtgB,MAAKiO,OAAOD,EAEZ,OAAOA,GAGDzQ,GAAAgD,UAAA0N,OAAP,SAAcD,GAEbtN,EAAAH,UAAM0N,OAAMhR,KAAA+C,KAACgO,EAEb,IAAIhO,KAAKszC,QAAQ/1C,GAChByQ,EAAYikC,SAAWjyC,KAAK8yC,SAE7B9kC,GAAYxJ,SAAWxE,KAAKsgB,SAC5BtS,GAAY/F,aAAejI,KAAKsb,aAChCtN,GAAYulC,uBAAyBvzC,KAAKkyC,uBAEpC,IAAIjlC,GAAajN,KAAKoyC,WAAWl1C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACvCqR,EAAYokC,WAAWz1C,GAAG6H,SAAWxE,KAAKoyC,WAAWz1C,GAAGqkB,uBAEnD,IAAIhhB,KAAKysC,UACdz+B,EAAYqS,SAAWrgB,KAAKysC,UAAU/oC,QASjCnG,GAAAgD,UAAAizC,0BAAP,SAAiCruC,GAEhC,MAAOnF,MAAKoyC,WAAWpyC,KAAK8yC,UAAUE,cAAc35B,QAAQlU,IAQtD5H,GAAAgD,UAAA0O,kBAAP,WAECvO,EAAAH,UAAM0O,kBAAiBhS,KAAA+C,KAEvB,IAAI+yC,GAAkC/yC,KAAK8yC,UAAUE,aACrD,IAAI/lC,GAAa8lC,EAAS71C,MAC1B,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAC/BqD,KAAKkP,YAAc6jC,EAASp2C,GAAGkG,aAAa7C,KAAKkP,aAI5C3R,GAAAgD,UAAA+O,qBAAP,WAEC5O,EAAAH,UAAM+O,qBAAoBrS,KAAA+C,KAE1B,IAAIqQ,GAAUrQ,KAAKsJ,QAEnB,KAAKtJ,KAAKyzC,QACTzzC,KAAKyzC,QAAU,GAAIxtC,EAEpBjG,MAAKyzC,QAAQ5pC,EAAIwG,EAAIxG,EAAIwG,EAAIjD,MAAM,CACnCpN,MAAKyzC,QAAQ1pC,EAAIsG,EAAItG,EAAIsG,EAAIlG,OAAO,CACpCnK,MAAKyzC,QAAQxpC,EAAIoG,EAAIpG,EAAIoG,EAAI9G,MAAM,CAEnC,IAAIwpC,GAAkC/yC,KAAK8yC,UAAUE,aACrD,IAAI/lC,GAAa8lC,EAAS71C,MAC1B,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAC/BqD,KAAKuP,eAAiBwjC,EAASp2C,GAAGqG,gBAAgBhD,KAAKyzC,QAASzzC,KAAKuP,gBAQ/DhS,GAAAgD,UAAA+xC,wBAAR,SAAgC9pC,GAE/BxI,KAAKqJ,qBAQE9L,GAAAgD,UAAAiyC,mBAAR,SAA2BhqC,GAE1BxI,KAAKizC,WAAWzqC,EAAMrD,aAQf5H,GAAAgD,UAAAmyC,qBAAR,SAA6BlqC,GAE5B,GAAIoqC,EACJ,IAAIp5B,GAA0BhR,EAAMrD,WACpC,IAAI8H,GAAajN,KAAKoyC,WAAWl1C,MACjC,IAAIP,EAMJ,KAAKA,EAAI,EAAGA,EAAIsQ,IAAOtQ,EAAG,CAEzBi2C,EAAU5yC,KAAKoyC,WAAWz1C,EAE1B,IAAIi2C,EAAQztC,aAAeqU,EAAS,CACnCo5B,EAAQ39B,OACR29B,GAAQ3xC,SAERjB,MAAKoyC,WAAWh5B,OAAOzc,EAAG,EAE1B,UAIAsQ,CACF,MAAOtQ,EAAIsQ,IAAOtQ,EACjBqD,KAAKoyC,WAAWz1C,GAAGujB,QAAUvjB,EAQxBY,GAAAgD,UAAA0yC,WAAP,SAAkB9tC,GAEjB,GAAIytC,GAAmBZ,EAAY0B,cAAcvuC,EAAanF,KAAM,KACpE,IAAIiN,GAAajN,KAAKoyC,WAAWl1C,MAEjC01C,GAAQ1yB,QAAUjT,CAElBjN,MAAKoyC,WAAWnlC,GAAO2lC,CAEvB5yC,MAAKqJ,qBAYC9L,GAAAgD,UAAA+D,gBAAP,SAAuBI,EAAkCqR,GAExD/V,KAAKoU,qBAAqBu/B,gBAAkB,IAE5C,IAAIf,EAEJ,IAAI3lC,GAAajN,KAAK4zC,UAAU12C,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EAAG,CACpCi2C,EAAU5yC,KAAK4zC,UAAUj3C,EAEzB,IAAIi2C,EAAQztC,YAAYb,gBAAgBtE,KAAKwL,kBAAmBonC,EAAQpuC,SAAUxE,KAAKoU,qBAAsB1P,GAA4B,CACxIA,EAA4B1E,KAAKoU,qBAAqBotB,gBAEtDxhC,MAAKoU,qBAAqBu/B,gBAAkBf,CAE5C,KAAK78B,EACJ,MAAO,OAIV,MAAO/V,MAAKoU,qBAAqBu/B,iBAAmB,KAS9Cp2C,GAAAgD,UAAA0W,eAAP,SAAsBC,GAKrB,GAAIlX,KAAK+O,eACR/O,KAAK+O,eAAeC,YAErB,IAAI/B,GAAsBjN,KAAKoyC,WAAWl1C,MAC1C,KAAK,GAAIP,GAAoB,EAAGA,EAAIsQ,EAAKtQ,IACxCua,EAAS61B,uBAAuB/sC,KAAKoyC,WAAWz1C,IAG3CY,GAAAgD,UAAAszC,iCAAP,WAEC,GAAI5mC,GAAajN,KAAKoyC,WAAWl1C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjCqD,KAAKoyC,WAAWz1C,GAAGkkB,qBAIdtjB,GAAAgD,UAAA2yC,yBAAP,WAEC,GAAIjmC,GAAajN,KAAKoyC,WAAWl1C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjCqD,KAAKoyC,WAAWz1C,GAAG+jB,wBAGdnjB,GAAAgD,UAAAs3B,sBAAP,SAA6BhuB,EAAUE,EAAUgI,EAAmB4lB,GAEnE,GAAG33B,KAAK8yC,WAAa9yC,KAAK8yC,UAAUE,cAAc91C,OAAQ,CACzD8C,KAAKmyC,WAAWziC,MAAM7F,EAAEE,EACxB,IAAI+pC,GAAc9zC,KAAKwP,cAAcxP,KAAKmyC,WAAYnyC,KAAKmyC,WAC3D,IAAI9hC,EAGJ,MAAKA,EAAMrQ,KAAKsJ,UAAUwsB,SAASge,EAAMjqC,EAAGiqC,EAAM/pC,EAAG,GACpD,MAAO,MAGR,KAAKgI,EACJ,MAAO,KlDu1SC,IkDp1SLihC,GAAuChzC,KAAK8yC,UAAUE,aAC1D,IAAIe,GAA4Bf,EAAc91C,MAC9C,KAAI,GAAIP,GAAW,EAAGA,EAAIo3C,EAAoBp3C,IAC7C,GAAIkF,EAAiBmyC,qBAAqBF,EAAMjqC,EAAGiqC,EAAM/pC,EAAG,EAAGsG,EAAwB2iC,EAAcr2C,IACpG,MAAO,MAGV,MAAO+D,GAAAH,UAAMs3B,sBAAqB56B,KAAA+C,KAAC6J,EAAGE,EAAGgI,EAAW4lB,GAG9Cp6B,GAAAgD,UAAA0U,MAAP,WAECvU,EAAAH,UAAM0U,MAAKhY,KAAA+C,KAEX,IAAIiN,GAAajN,KAAKoyC,WAAWl1C,MACjC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAC/BqD,KAAKoyC,WAAWz1C,GAAGsY,QAGb1X,GAAAgD,UAAA6f,wBAAR,SAAgC5X,GAE/BxI,KAAKkzC,2BA9hBS31C,GAAA61C,QAAsB,GAAIlxC,MAE3B3E,GAAA2D,UAAmB,cA8hBlC,OAAA3D,IAliBmB2c,EAoiBnB9c,GAAcJ,QAALO,IlDk1SN0a,6BAA6B7W,UAAU+W,gCAAgC/W,UAAUuX,mCAAmC,mCAAmCsD,uDAAuD,uDAAuDvC,0CAA0C,0CAA0CuF,uCAAuC,uCAAuCg1B,sCAAsC,sCAAsClvC,4CAA4C,8CAA8CjG,yCAAyC,SAAS5C,EAAQkB,EAAOJ,GACjpB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN;EAAEM,UAAY,GAAIF,GmDx5TtB,IAAO83B,GAAUj8B,EAA6B,oCAG9C,IAAOge,GAAsBhe,EAAiB,uDAI9C,IAAOyB,GAASzB,EAA8B,wCAC9C,IAAOg4C,GAAUh4C,EAA6B,uCAE9C,IAAOklB,GAAQllB,EAA+B,mCAC9C,IAAOilB,GAAkBjlB,EAAqB,iDAE9C,IAAMsB,GAAS,SAAAkD,GAASX,EAAlBvC,EAASkD,EA4CX,SA5CElD,GA4CU22C,GA5ChB,GAAAztC,GAAA1G,IA4CgB,IAAAm0C,QAAA,GAAwB,CAAxBA,EAAA,KAERzzC,EAAAzD,KAAA+C,KApCIA,MAAAo0C,UAAoB,KAMpBp0C,MAAA28B,MAAe,CACf38B,MAAAq0C,oBAA6B,CAE7Br0C,MAAAs0C,WAAqB,IAKrBt0C,MAAAu0C,QAAkB,IAElBv0C,MAAAw0C,sBACAx0C,MAAAy0C,oBACAz0C,MAAA00C,oBAsFD10C,MAAA20C,KAAe,IAgBf30C,MAAAmlB,0BAAmC,CAlFtCnlB,MAAK40C,YAAc,GAAIzc,GAAWA,EAAW0c,YAAa70C,KAE1DA,MAAK80C,sBAAwB,IAE7B90C,MAAK+0C,aAAe,SAACvsC,GAAqB,MAAA9B,GAAKqe,kBAAoB,EACnE/kB,MAAKg1C,YAAc,SAACxsC,GAAqB,MAAA9B,GAAKqe,kBAAoB,EAClE/kB,MAAKi1C,aAAe,SAACzsC,GAAqB,MAAA9B,GAAKqe,kBAAoB,EACnE/kB,MAAKk1C,WAAa,SAAC1sC,GAAqB,MAAA9B,GAAKqe,kBAAoBre,EAAKqe,mBAAqB,EAAG,EAAI,EAElG/kB,MAAKm1C,UAAYhB,GAAY,GAAI/yB,GAvBxCzgB,OAAAC,eAAWpD,EAAA+C,UAAA,WnDo5TJM,ImDp5TP,WAEC,MAA2Bb,MAAK8I,UnDq5T1BxF,ImDl5TP,SAAmByF,GAElB/I,KAAK8I,SAAWC,GnDm5TVhI,WAAY,KACZC,aAAc,MmDj4TXxD,GAAA+C,UAAAU,QAAP,WAEIjB,KAAKyO,eAELjR,GAAU43C,YAAY9vC,KAAKtF,MAGxBxC,GAAA+C,UAAAkO,cAAP,WAEI/N,EAAAH,UAAMkO,cAAaxR,KAAA+C,KAEnBA,MAAKw0C,sBACLx0C,MAAKy0C,oBACLz0C,MAAK00C,qBAGFl3C,GAAA+C,UAAA80C,iBAAP,WAEI,GAAGr1C,KAAKm0C,SAAU,CACd,IAAK,GAAI/tB,KAAOpmB,MAAKw0C,oBAAqB,CACtC,GAAIx0C,KAAKw0C,oBAAoBpuB,IAAQ,KAAM,CACvC,GAAIpmB,KAAKw0C,oBAAoBpuB,GAAKktB,QAAQ31C,GAAY,CACtCqC,KAAKw0C,oBAAoBpuB,GAAMkvB,KAAmBt1C,KAAKm0C,SAAS7vB,2BAA2B8B,GAAMkvB,SAE5G,IAAIt1C,KAAKw0C,oBAAoBpuB,GAAKktB,QAAQ91C,GAAY,CAC3CwC,KAAKw0C,oBAAoBpuB,GAAMivB,uBAO/D10C,QAAAC,eAAWpD,EAAA+C,UAAA,UnD43TPM,ImD53TJ,WAEI,MAAOb,MAAKu0C,SnD63TZjxC,ImD33TJ,SAAkByF,GAEd/I,KAAKu0C,QAAUxrC,GnD43TfhI,WAAY,KACZC,aAAc,MmD13TlBL,QAAAC,eAAWpD,EAAA+C,UAAA,YnD63TPM,ImD73TJ,WAEI,MAAOb,MAAKm1C,WnD83TZ7xC,ImD33TJ,SAAoByF,GAEhB/I,KAAKm1C,UAAYpsC,GnD43TjBhI,WAAY,KACZC,aAAc,MmDr3TlBL,QAAAC,eAAWpD,EAAA+C,UAAA,anDw3TPM,ImDx3TJ,WAEI,MAAOb,MAAKm1C,UAAUI,WnDy3TtBx0C,WAAY,KACZC,aAAc,MmDv3TXxD,GAAA+C,UAAAqkB,YAAP,SAAmBC,GAGf7kB,KAAKm1C,UAAUvwB,YAAY5kB,KAAM6kB,GAQ9BrnB,GAAA+C,UAAA+S,MAAP,WAEI5S,EAAAH,UAAM+S,MAAKrW,KAAA+C,KAGXA,MAAK28B,MAAQ,CAEb,IAAG38B,KAAKwO,QACJxO,KAAKwO,QAAQgnC,gBAEjBx1C,MAAKmlB,0BAA4B,CACjC,KAAK,GAAIxoB,GAAWqD,KAAKsX,YAAc,EAAG3a,GAAK,EAAGA,IAC9CqD,KAAK4lB,cAAcjpB,EAEvBqD,MAAKy1C,aAAej4C,EAAUi4C,YAE9B,IAAIF,GAAmBv1C,KAAKm1C,UAAU3zB,iBAAiBtkB,MACvD8C,MAAKs0C,WAAaxsB,QAAQytB,EAAY,EACtC,IAAIA,EAAW,CACXv1C,KAAKq0C,mBAAqB,CAC1Br0C,MAAKm1C,UAAU9vB,mBAAmBrlB,KAAM,KAAM,UAC3C,CACHA,KAAKq0C,oBAAsB,GAK5B72C,GAAA+C,UAAAslB,gBAAP,WAEI7lB,KAAKy0C,qBAMT9zC,QAAAC,eAAWpD,EAAA+C,UAAA,qBnD02TPM,ImD12TJ,WAEI,MAAOb,MAAKq0C,oBnD22TZ/wC,ImDx2TJ,SAA6ByF,GnD62TrB,GmDv2TAkc,GAAsB,KAE1B,IAAIswB,GAAmBv1C,KAAKm1C,UAAU3zB,iBAAiBtkB,MAEvD,KAAKq4C,EACD,MAEJ,IAAIxsC,EAAQ,EAAG,CACXA,EAAQ,MACL,IAAIA,GAASwsC,EAAW,CAC3BxsC,EAAQwsC,EAAY,CACpBtwB,GAAc,KAGlB,GAAIjlB,KAAKq0C,oBAAsBtrC,EAC3B,MAEJ/I,MAAKq0C,mBAAqBtrC,CAK1B/I,MAAKy1C,aAAej4C,EAAUi4C,YAE9Bz1C,MAAKm1C,UAAUnwB,UAAUhlB,KAAM+I,EAAOkc,InDm2TtClkB,WAAY,KACZC,aAAc,MmDj2TXxD,GAAA+C,UAAA8oB,mBAAP,WAEIrpB,KAAKo0C,UAAY,IAEjBp0C,MAAK26B,MAEL36B,MAAKsI,iBAAiB4rC,EAAWwB,WAAY11C,KAAK+0C,aAClD/0C,MAAKsI,iBAAiB4rC,EAAWyB,UAAW31C,KAAKg1C,YACjDh1C,MAAKsI,iBAAiB4rC,EAAW0B,WAAY51C,KAAKi1C,aAClDj1C,MAAKsI,iBAAiB4rC,EAAW2B,SAAU71C,KAAKk1C,YAG7C13C,GAAA+C,UAAAu1C,sBAAP,WAEI91C,KAAKiU,oBAAoBigC,EAAWwB,WAAY11C,KAAK+0C,aACrD/0C,MAAKiU,oBAAoBigC,EAAWyB,UAAW31C,KAAKg1C,YACpDh1C,MAAKiU,oBAAoBigC,EAAW0B,WAAY51C,KAAKi1C,aACrDj1C,MAAKiU,oBAAoBigC,EAAW2B,SAAU71C,KAAKk1C,YAIhD13C,GAAA+C,UAAAonB,oBAAP,SAA2BouB,GAEvB,MAAO/1C,MAAK00C,kBAAkBqB,GAG3Bv4C,GAAA+C,UAAAwlB,mBAAP,WAEI,MAAO/lB,MAAKy0C,kBAGTj3C,GAAA+C,UAAA+0B,gBAAP,SAAuBrP,EAAqB1c,EAAcgsB,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAGtDtP,EAAM6uB,sBAAwB,IAE9B7uB,GAAM3S,OAEN,OAAO5S,GAAAH,UAAM+0B,gBAAer4B,KAAA+C,KAACimB,EAAO1c,EAAOgsB,GAGxC/3B,GAAA+C,UAAA+lB,oBAAP,SAA2BL,EAAqB1c,EAAcwsC,GAE1D/1C,KAAKy0C,kBAAkBlrC,GAAS0c,EAAMhf,WAAa8uC,CAEnD/1C,MAAK00C,kBAAkBqB,GAAa9vB,CAEpC,OAAOjmB,MAAKs1B,gBAAgBrP,EAAO1c,GAGhC/L,GAAA+C,UAAAi1B,sBAAP,SAA6B5Y,GAEzB,GAAIqJ,GAAsBjmB,KAAK2lB,UAAU/I,EAEzC,IAAGqJ,EAAMzX,QACLyX,EAAMzX,QAAQgnC,gBAElBx1C,MAAKwO,QAAQwnC,uBAAuB/vB,EAGpC,IAAIjmB,KAAKy0C,kBAAkBxuB,EAAM/e,WAAa+e,EAAMhf,iBACzCjH,MAAKy0C,kBAAkBxuB,EAAM/e,gBAEjClH,MAAK00C,kBAAkBzuB,EAAMhf,WAEpCgf,GAAMhf,YAAc,CAEpB,OAAOvG,GAAAH,UAAMi1B,sBAAqBv4B,KAAA+C,KAAC4c,GAGvCjc,QAAAC,eAAWpD,EAAA+C,UAAA,anD00TPM,ImD10TJ,WAEI,MAAOrD,GAAU0D,WnD20TjBH,WAAY,KACZC,aAAc,MmDt0TXxD,GAAA+C,UAAA01C,KAAP,WAEI,GAAIj2C,KAAKm1C,UAAU3zB,iBAAiBtkB,OAAS,EACzC8C,KAAKs0C,WAAa,KAMnB92C,GAAA+C,UAAA0V,OAAP,WAEIzY,EAAUi4C,aAAe,IAEzBz1C,MAAKk2C,cAEL14C,GAAUi4C,aAAe,KAGzBt0B,GAAmBg1B,eAGnBn2C,MAAKsL,cAActL,KAAK40C,YAGxBzzB,GAAmBg1B,eAGnBh1B,GAAmBi1B,mBAGnBj1B,GAAmBg1B,eAGnBh1B,GAAmBk1B,kBAGhB74C,GAAA+C,UAAAkkB,0BAAP,SAAiC9hB,GAE7B,IAAK3C,KAAKw0C,oBAAoB7xC,GAC1B3C,KAAKw0C,oBAAoB7xC,GAAM3C,KAAKm1C,UAAU1wB,0BAA0B9hB,EAE5E,OAAO3C,MAAKw0C,oBAAoB7xC,GAO7BnF,GAAA+C,UAAAo6B,KAAP,WAEI36B,KAAKs0C,WAAa,MAGf92C,GAAA+C,UAAAmD,MAAP,WAEI,GAAIsK,GAAyBxQ,EAAU43C,YAAkB,OAAG53C,EAAU43C,YAAY/B,MAAQ,GAAI71C,GAAUwC,KAAKm1C,UAE7Gn1C,MAAKiO,OAAOD,EAEZ,OAAOA,GAGJxQ,GAAA+C,UAAA0N,OAAP,SAAcD,GAEVtN,EAAAH,UAAM0N,OAAMhR,KAAA+C,KAACgO,EAEbA,GAAYmmC,SAAWn0C,KAAKm1C,SAC5BnnC,GAAY2mC,KAAO30C,KAAK20C,KAGrBn3C,GAAA+C,UAAA21C,aAAP,WAEI,GAAIl2C,KAAKs0C,aAAet0C,KAAKy1C,aAAc,CACvC,GAAIz1C,KAAKq0C,oBAAsBr0C,KAAKm1C,UAAU3zB,iBAAiBtkB,OAAS,EAAG,CACvE,GAAI8C,KAAK20C,KACL30C,KAAK+kB,kBAAoB,MAEzB/kB,MAAKs0C,WAAa,UACnB,CACHt0C,KAAKq0C,oBACLr0C,MAAKm1C,UAAU9vB,mBAAmBrlB,OAI1C,GAAIiN,GAAajN,KAAK2lB,UAAUzoB,MAChC,IAAI+oB,EACJ,KAAK,GAAItpB,GAAW,EAAGA,EAAKsQ,IAAOtQ,EAAG,CAClCspB,EAAQjmB,KAAK2lB,UAAUhpB,EAEvB,IAAIspB,EAAMqtB,QAAQ91C,GACDyoB,EAAOiwB,eAG5Bl2C,KAAKy1C,aAAe,MAIxBj4C,GAAA+C,UAAA+1C,aAAA,SAAa/sC,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAETvJ,KAAKu2C,mBAAmBhtC,EAAOvJ,KAE/B,IAAIiN,GAAMjN,KAAK2lB,UAAUzoB,MACzB,IAAI+oB,EACJ,KAAK,GAAItpB,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAAK,CACjCspB,EAAQjmB,KAAK2lB,UAAUhpB,EAEvB,IAAIspB,EAAMqtB,QAAQ91C,GACDyoB,EAAOqwB,aAAa/sC,EAAQ,OAEzCvJ,MAAKu2C,mBAAmBhtC,EAAQ,EAAG0c,IAI/CzoB,GAAA+C,UAAAg2C,mBAAA,SAAmBhtC,EAAczG,GAE7B,GAAI4gB,GAAM,EACV,KAAK,GAAI/mB,GAAI,EAAGA,EAAI4M,IAAS5M,EACzB+mB,GAAO,IAEXA,IAAO,IAAM5gB,EAAOsL,KAAO,MAAQtL,EAAOH,EAC1C6zC,SAAQC,IAAI/yB,GAGTlmB,GAAA+C,UAAA0U,MAAP,WAGI,IAAK,GAAImR,KAAOpmB,MAAKw0C,oBAAqB,CACtC,GAAIkC,GAAyB12C,KAAKw0C,oBAAoBpuB,EAGtD,IAAIswB,EAAStoC,MAAQ,GAAI,CACrB+S,EAAmBw1B,qBAAqBD,SACjC12C,MAAKw0C,oBAAoBpuB,IAIxC1lB,EAAAH,UAAM0U,MAAKhY,KAAA+C,MA/ZAxC,GAAA43C,YAA+B,GAAIlzC,MAEpC1E,GAAA0D,UAAmB,mBA+ZrC,OAAA1D,IArawB0c,EAsaL9c,GAAAJ,QAAVQ,InDyyTN49B,oCAAoCh6B,UAAU8f,mCAAmC,mCAAmCjF,uDAAuD,uDAAuDhd,wCAAwC,wCAAwC23C,uCAAuC,uCAAuCptB,iDAAiD,mDAAmDzqB,0CAA0C,SAAS7C,EAAQkB,EAAOJ,GACziB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoDhuUtB,IAAOyF,GAAQ5J,EAAgB,gCAC/B,IAAO6J,GAAa7J,EAAc,qCAClC,IAAO+J,GAAQ/J,EAAgB,gCAE/B,IAAOke,GAASle,EAAe,oCAC/B,IAAOiK,GAAUjK,EAAe,uCAGhC,IAAO26C,GAAmB36C,EAAa,iEAEvC,IAAM0B,GAAU,SAAA8C,GAASX,EAAnBnC,EAAU8C,EAQf,SARK9C,KAUJ8C,EAAAzD,KAAA+C,KANMA,MAAA82C,SAAkB,GAClB92C,MAAA+2C,UAAmB,GAOzB/2C,MAAK+G,WAAa,IAElB/G,MAAKg3C,gBAAkB,GAAGh3C,KAAK+2C,UAAU/2C,KAAK+2C,UAAY/2C,KAAK82C,SAAS92C,KAAK82C,SAG7E92C,MAAK4I,YAAczC,EAAWsuB,OAI/B9zB,OAAAC,eAAWhD,EAAA2C,UAAA,apDqtUJM,IoDrtUP,WAEC,MAAOjD,GAAWsD,WpDstUZH,WAAY,KACZC,aAAc,MoDptUdpD,GAAA2C,UAAAib,oBAAP,WAEC,MAAO,IAAIq7B,GAGZl2C,QAAAC,eAAWhD,EAAA2C,UAAA,UpDqtUJM,IoDrtUP,WAEC,MAAOb,MAAK82C,UpDstUNxzC,IoDntUP,SAAkByF,GAEjB/I,KAAK82C,SAAW/tC,CAEhB,IAAI/I,KAAK82C,SAAW,EAAG,CACtB92C,KAAK82C,SAAW,MACV,IAAI92C,KAAK82C,SAAW92C,KAAK+2C,UAAW,CAC1C/2C,KAAK+2C,UAAY/2C,KAAK82C,QACtB92C,MAAKqJ,qBAENrJ,KAAKg3C,gBAAkB,GAAIh3C,KAAK+2C,UAAU/2C,KAAK+2C,UAAY/2C,KAAK82C,SAAS92C,KAAK82C,WpDotUxE/1C,WAAY,KACZC,aAAc,MoDltUdpD,GAAA2C,UAAA02C,eAAP,WAEC,MAAOj3C,MAAKg3C,gBAGbr2C,QAAAC,eAAWhD,EAAA2C,UAAA,WpDmtUJM,IoDntUP,WAEC,MAAOb,MAAK+2C,WpDotUNzzC,IoDjtUP,SAAmByF,GAElB/I,KAAK+2C,UAAYhuC,CAEjB,IAAI/I,KAAK+2C,UAAY,EACpB/2C,KAAK+2C,UAAY,CAElB,IAAI/2C,KAAK+2C,UAAY/2C,KAAK82C,SACzB92C,KAAK82C,SAAW92C,KAAK+2C,SAEtB/2C,MAAKg3C,gBAAkB,GAAIh3C,KAAK+2C,UAAU/2C,KAAK+2C,UAAY/2C,KAAK82C,SAAS92C,KAAK82C,SAC9E92C,MAAKqJ,sBpD+sUCtI,WAAY,KACZC,aAAc,MoD7sUdpD,GAAA2C,UAAA+O,qBAAP,WAEC5O,EAAAH,UAAM+O,qBAAoBrS,KAAA+C,KAE1BA,MAAKuP,eAAe6kB,OAASp0B,KAAK+2C,UAG5Bn5C,GAAA2C,UAAAub,2BAAP,SAAkCC,EAAgBpI,EAAe7Q,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEhE,GAAIyP,GAAmBxM,EAAc6M,kBACrC,IAAIC,GAAa,GAAI/M,EAGrB+M,GAAEnI,SAASqR,EAAOrI,wBAAwBC,GAC1Cd,GAAE4C,OAAOzV,KAAKuK,SAAS6E,sBACvBpP,MAAKkS,OAAOW,EAAEvF,SAEduF,GAAEnI,SAASqR,EAAOrI,wBAAwBC,GAC1Cd,GAAE4C,OAAOzV,KAAKoP,sBAEd,IAAIiB,GAAU0L,EAAOzS,QACrB,IAAI4tC,GAAcrkC,EAAEmzB,qBAAqB,GAAI//B,GAASoK,EAAIC,KAAMD,EAAIG,OAAQH,EAAI8mC,OAChF,IAAIC,GAAcvkC,EAAEmzB,qBAAqB,GAAI//B,GAASoK,EAAIwB,MAAOxB,EAAIE,IAAKF,EAAIgnC,MAC9E,IAAIC,GAAYJ,EAAGrtC,EAAEqtC,EAAGrtC,EAAIqtC,EAAGntC,EAAEmtC,EAAGntC,EAAImtC,EAAGjtC,EAAEitC,EAAGjtC,CAChD,IAAIstC,GAAYH,EAAGvtC,EAAEutC,EAAGvtC,EAAIutC,EAAGrtC,EAAEqtC,EAAGrtC,EAAIqtC,EAAGntC,EAAEmtC,EAAGntC,CAChD,IAAIhK,GAAW+c,KAAK0P,KAAK4qB,EAAKC,EAAID,EAAKC,EACvC,IAAI9G,EACJ,IAAIC,EAEJ,IAAIzmC,GAAW4I,EAAErF,QAAQ,GACzBijC,GAAOxmC,EAAIhK,CACXywC,GAAOzmC,EAAIhK,CAEXsS,GAAI,GAAKA,EAAI,GAAKk+B,EAAKxwC,CACvBsS,GAAI,IAAMm+B,GAAMA,EAAOD,EACvBl+B,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAM,CACtGA,GAAI,KAAOk+B,EAAKl+B,EAAI,GAEpB,KAAKzP,EACJA,EAAS,GAAIgD,EAEdhD,GAAOgQ,gBAAgBP,EACvBzP,GAAO4U,QAAQ7E,EAEf,OAAO/P,GApHMlF,GAAAsD,UAAmB,oBAsHlC,OAAAtD,IAxHyBwc,EA0HzBhd,GAAoBJ,QAAXY,IpDusUNma,gCAAgC3W,UAAU4W,qCAAqC5W,UAAU+W,gCAAgC/W,UAAU4Y,oCAAoC,oCAAoCzB,uCAAuC,uCAAuCi/B,iEAAiE,mEAAmEC,qCAAqC,SAASv7C,EAAQkB,EAAOJ,GAC7d,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqDj1UtB,IAAOoG,GAAavK,EAAc,wCrDk2UlC,IqDj1UMw7C,GAAK,SAAAh3C,GAASX,EAAd23C,EAAKh3C,EAgBV,SAhBKg3C,KAkBJh3C,EAAAzD,KAAA+C,MAVDW,OAAAC,eAAI82C,EAAAn3C,UAAA,YrDs1UGM,IqDt1UP,WAEC,MAAOb,MAAK23C,WrDu1UN52C,WAAY,KACZC,aAAc,MqD70Ud02C,GAAAn3C,UAAAmD,MAAP,WAEC,GAAIA,GAAc,GAAIg0C,EACtBh0C,GAAMgI,MAAQ1L,KAAK0L,KACnBhI,GAAMW,UAAUkJ,SAAWvN,KAAKqE,UAAUkJ,QAC1C7J,GAAM0K,KAAOA,IACb1K,GAAMwJ,SAAWlN,KAAKkN,QACtBxJ,GAAM6K,MAAQvO,KAAKuO,MAAOvO,KAAKuO,MAAM6I,SAAW,IAChD1T,GAAMi0C,UAAY33C,KAAK23C,SACvB,OAAOj0C,GAET,OAAAg0C,IAhCoBjxC,EAkCpBrJ,GAAeJ,QAAN06C,IrDg1UNjyC,wCAAwC,0CAA0CzG,sCAAsC,SAAS9C,EAAQkB,EAAOJ,GACnJ,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsDx4UtB,IAAO83B,GAAUj8B,EAAe,oCAChC,IAAO07C,GAAS17C,EAAe,kCAU/B,IAAOuK,GAAavK,EAAc,wCAGlC,IAAOiK,GAAUjK,EAAe,uCAEhC,IAAO8jB,GAAoB9jB,EAAa,iDACxC,IAAOgwC,GAAgBhwC,EAAc,6CAGrC,IAAO27C,GAAiB37C,EAAa,gDAErC,IAAO8hB,GAAK9hB,EAAgB,gCAC5B,IAAO6hB,GAAU7hB,EAAe,uCtDi4UhC,IsD13UM4B,GAAM,SAAA4C,GAASX,EAAfjC,EAAM4C,EAqMX,SArMK5C,GAqMO4gB,GArMb,GAAAhY,GAAA1G,IAqMa,IAAA0e,QAAA,GAAsB,CAAtBA,EAAA,KAEXhe,EAAAzD,KAAA+C,KArMOA,MAAA83C,UAA+B,GAAI51C,MAKpClC,MAAA+3C,iBAA0B,CAG1B/3C,MAAAg4C,YAAqBJ,EAAU3M,MAI9BjrC,MAAAi4C,WAAqB,KAErBj4C,MAAAygB,OAAe,GAAIzC,EAyL1Bhe,MAAKk4C,6BAA+B,SAAC1vC,GAAqB,MAAA9B,GAAKyxC,oBAAoB3vC,GACnFxI,MAAKmgB,gCAAkC,SAAC3X,GAAqB,MAAA9B,GAAK0Z,wBAAwB5X,GAC1FxI,MAAKygB,OAAOnY,iBAAiByV,EAAWgB,sBAAuB/e,KAAKmgB,gCAEpEngB,MAAK+G,WAAa,IAClB/G,MAAKo4C,QAAU,GAAIl2C,OAAwBlC,KAE3CA,MAAKygB,OAAO/B,MAAQA,CACpB1e,MAAKue,QAAW,GAAIs5B,EAGpB73C,MAAK4I,YAAczC,EAAWuuB,KAzL/B/zB,OAAAC,eAAW9C,EAAAyC,UAAA,kBtD+3UJM,IsD/3UP,WAEC,MAAOb,MAAK+3C,kBtDg4UNz0C,IsD73UP,SAA0ByF,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI/I,KAAK+3C,kBAAoBhvC,EAC5B,MAED/I,MAAK+3C,iBAAmBhvC,CAExB/I,MAAKq4C,oBtD23UCt3C,WAAY,KACZC,aAAc,MsDt3UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,atD43UJM,IsD53UP,WAEC,MAAOb,MAAKi4C,YtD63UN30C,IsD13UP,SAAqByF,GAEpB,GAAI/I,KAAKi4C,YAAclvC,EACtB,MAED/I,MAAKi4C,WAAalvC,CAElB/I,MAAKq4C,oBtDy3UCt3C,WAAY,KACZC,aAAc,MsDj3UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,etD03UJM,IsD13UP,WAEC,MAAOb,MAAKs4C,etD23UNv3C,WAAY,KACZC,aAAc,MsDt3UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,gBtD43UJM,IsD53UP,WAEC,MAAOb,MAAKu4C,etD63UNx3C,WAAY,KACZC,aAAc,MsDj3UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,atD83UJM,IsD93UP,WAEC,MAAOb,MAAKg4C,atD+3UN10C,IsD53UP,SAAqByF,GAEpB,GAAI/I,KAAKg4C,aAAejvC,EACvB,MAED/I,MAAKg4C,YAAcjvC,CAEnB/I,MAAKoJ,ctD23UCrI,WAAY,KACZC,aAAc,MsDn3UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,WtD23UJM,IsD33UP,WAEC,MAAOb,MAAKo4C,StD43UNr3C,WAAY,KACZC,aAAc,MsD13UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,YtD63UJM,IsD73UP,WAEC,MAAOb,MAAKysC,WtD83UN1rC,WAAY,KACZC,aAAc,MsDz3UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,etD+3UJM,IsD/3UP,WAEC,MAAOb,MAAK2gB,ctDg4UNrd,IsD73UP,SAAuByF,GAEtB/I,KAAK2gB,aAAe5X,GtD83UdhI,WAAY,KACZC,aAAc,MsD13UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,kBtDg4UJM,IsDh4UP,WAEC,MAAOb,MAAKmqB,iBtDi4UN7mB,IsD93UP,SAA0ByF,GAEzB/I,KAAKmqB,gBAAkBphB,GtD+3UjBhI,WAAY,KACZC,aAAc,MsD13UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,WtDg4UJM,IsDh4UP,WAEC,MAAOb,MAAKw4C,UtDi4UNl1C,IsD93UP,SAAmByF,GAElB,GAAI/I,KAAKw4C,UAAYzvC,EACpB,MAED,IAAI/I,KAAKw4C,SACRx4C,KAAKy4C,cAAcz4C,KAAKw4C,SAEzBx4C,MAAKw4C,SAAWzvC,CAEhB,IAAI/I,KAAKw4C,SACRx4C,KAAK04C,WAAW14C,KAAKw4C,SAEtBx4C,MAAKq4C,oBtD23UCt3C,WAAY,KACZC,aAAc,MsDz3UdlD,GAAAyC,UAAAo4C,eAAP,WAEC,MAAO34C,MAAK83C,UAAU56C,OAGhBY,GAAAyC,UAAAysC,aAAP,SAAoBpwB,GAEnB,MAAO5c,MAAK83C,UAAUl7B,GAMvBjc,QAAAC,eAAW9C,EAAAyC,UAAA,StDw3UJM,IsDx3UP,WAEC,MAAOb,MAAKygB,QtDy3UN1f,WAAY,KACZC,aAAc,MsDh2UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,atDm2UJM,IsDn2UP,WAEC,MAAO/C,GAAOoD,WtDo2URH,WAAY,KACZC,aAAc,MsDl2UrBL,QAAAC,eAAW9C,EAAAyC,UAAA,gBtDq2UJM,IsDr2UP,WAEC,MAAO,QtDs2UDE,WAAY,KACZC,aAAc,MsDp2UdlD,GAAAyC,UAAA0W,eAAP,SAAsBC,IAUfpZ,GAAAyC,UAAA83C,iBAAP,WAECr4C,KAAKsL,cAAc,GAAI4gC,GAAiBA,EAAiB0M,kBAAmB54C,OAGtElC,GAAAyC,UAAAmgB,sBAAP,WAEC1gB,KAAKsL,cAAc,GAAI0U,GAAqBA,EAAqBe,wBAAyB/gB,OAGpFlC,GAAAyC,UAAAm4C,WAAP,SAAkBn6B,GAEjBve,KAAK83C,UAAUxyC,KAAKiZ,EAEpBA,GAAQjW,iBAAiB6vB,EAAW0gB,WAAY74C,KAAKk4C,6BAErDl4C,MAAKm4C,sBAGCr6C,GAAAyC,UAAAk4C,cAAP,SAAqBl6B,GAEpBve,KAAK83C,UAAU1+B,OAAOpZ,KAAK83C,UAAUz+B,QAAQkF,GAAU,EAEvDA,GAAQtK,oBAAoBkkB,EAAW0gB,WAAY74C,KAAKk4C,6BAExDl4C,MAAKm4C,sBAGEr6C,GAAAyC,UAAA43C,oBAAR,SAA4B3vC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAE3BxI,KAAKoJ,aAGEtL,GAAAyC,UAAA6f,wBAAR,SAAgC5X,GAE/BxI,KAAKq4C,mBA1QQv6C,GAAAoD,UAAmB,gBA4QlC,OAAApD,IAhRqB2I,EAkRrBrJ,GAAgBJ,QAAPc,ItDy1UNs9B,oCAAoCh6B,UAAU03C,kCAAkC13C,UAAUqE,wCAAwC,wCAAwCoY,gCAAgC,gCAAgCtF,uCAAuC,uCAAuC+0B,6CAA6C,6CAA6CrsB,iDAAiD,iDAAiDhC,uCAAuC,uCAAuC85B,gDAAgD,kDAAkD95C,yCAAyC,SAAS/C,EAAQkB,EAAOJ,GACxuB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuD7oVtB,IAAO+b,GAAclgB,EAAc,4CAEnC,IAAOyF,GAAgBzF,EAAc,8CAErC,IAAOyJ,GAAczJ,EAAc,sCAMnC,IAAOgK,GAAsBhK,EAAY,iDAKzC,IAAO88C,GAAa98C,EAAc,wCAIlC,IAAOqB,GAAIrB,EAAiB,mCAC5B,IAAO0c,GAAa1c,EAAc,0CAClC,IAAO2c,GAAQ3c,EAAgB,mCAE/B,IAAO4F,GAAgB5F,EAAc,2CvDgtVrC,IuD5nVMyB,GAAS,SAAA+C,GAASX,EAAlBpC,EAAS+C,EA8sBd,SA9sBK/C,KAgtBJ+C,EAAAzD,KAAA+C,KAAM,GAAI6Y,GAjsBH7Y,MAAAi5C,MAAe,EAmsBtBj5C,MAAK0N,KAAOsrC,EAAcE,OA5mB3Bv4C,OAAAC,eAAWjD,EAAA4C,UAAA,avD0iVJM,IuD1iVP,WAEC,MAAOlD,GAAUuD,WvD2iVXH,WAAY,KACZC,aAAc,MuD3/UrBL,QAAAC,eAAWjD,EAAA4C,UAAA,iBvDugVJM,IuDvgVP,WAEC,MAAOb,MAAKm5C,gBvDwgVNp4C,WAAY,KACZC,aAAc,MuD7/UrBL,QAAAC,eAAWjD,EAAA4C,UAAA,cvDygVJM,IuDzgVP,WAEC,MAAOb,MAAKo5C,avD0gVNr4C,WAAY,KACZC,aAAc,MuD/5UrBL,QAAAC,eAAWjD,EAAA4C,UAAA,UvDs6UJM,IuDt6UP,WAEC,MAAOb,MAAKq5C,SvDu6UNt4C,WAAY,KACZC,aAAc,MuDv5UdrD,GAAA4C,UAAA+4C,WAAP,WAEC,MAAOt5C,MAAKu5C,YAMN57C,GAAA4C,UAAAi5C,WAAP,WAEC,MAAOx5C,MAAKy5C,YA+Bb94C,QAAAC,eAAWjD,EAAA4C,UAAA,YvDk4UJM,IuDl4UP,WAEC,MAAOb,MAAK05C,WvDm4UN34C,WAAY,KACZC,aAAc,MuDrxUrBL,QAAAC,eAAWjD,EAAA4C,UAAA,uBvD8xUJM,IuD9xUP,WAEC,MAAOb,MAAK25C,sBvD+xUN54C,WAAY,KACZC,aAAc,MuDvxUrBL,QAAAC,eAAWjD,EAAA4C,UAAA,qBvDgyUJM,IuDhyUP,WAEC,MAAOb,MAAK45C,oBvDiyUN74C,WAAY,KACZC,aAAc,MuDvvUrBL,QAAAC,eAAWjD,EAAA4C,UAAA,QvDkwUJM,IuDlwUP,WAEC,MAAOb,MAAKi5C,OvDmwUN31C,IuDhwUP,SAAgByF,GAEfA,EAAQA,EAAM8wC,UAEd,IAAI75C,KAAKi5C,OAASlwC,EACjB,MAED/I,MAAKi5C,MAAQlwC,CAEb/I,MAAK85C,mBAAqB,MvD8vUpB/4C,WAAY,KACZC,aAAc,MuD5vUrBL,QAAAC,eAAWjD,EAAA4C,UAAA,cvD+vUJM,IuD/vUP,WAEC,MAAOb,MAAK+5C,avDgwUNz2C,IuD7vUP,SAAsByF,GAErB,GAAI/I,KAAK+5C,aAAehxC,EACvB,MAED/I,MAAK+5C,YAAchxC,CAEnB/I,MAAK85C,mBAAqB,MvD4vUpB/4C,WAAY,KACZC,aAAc,MuDtvUrBL,QAAAC,eAAWjD,EAAA4C,UAAA,YvD4vUJM,IuD5vUP,WAEC,GAAIb,KAAK85C,mBACR95C,KAAKg6C,aAEN,OAAOh6C,MAAK8yC,WvD4vUNxvC,IuDzvUP,SAAoByF,GAEnB,GAAI/I,KAAK8yC,WAAa/pC,EACrB,MAED,IAAIpM,EAEJ,IAAIqD,KAAK8yC,UAAW,CACnB9yC,KAAK8yC,UAAU7+B,oBAAoB2E,EAAca,eAAgBzZ,KAAKqyC,iCACtEryC,MAAK8yC,UAAU7+B,oBAAoB2E,EAAcK,mBAAoBjZ,KAAKuyC,4BAC1EvyC,MAAK8yC,UAAU7+B,oBAAoB2E,EAAcU,qBAAsBtZ,KAAKyyC,8BAE5E,KAAK91C,EAAI,EAAGA,EAAIqD,KAAKoyC,WAAWl1C,SAAUP,EACzCqD,KAAKoyC,WAAWz1C,GAAGsE,SAEpBjB,MAAKoyC,WAAWl1C,OAAS,EAG1B8C,KAAK8yC,UAAY/pC,CAEjB,IAAI/I,KAAK8yC,UAAW,CAEnB9yC,KAAK8yC,UAAUxqC,iBAAiBsQ,EAAca,eAAgBzZ,KAAKqyC,iCACnEryC,MAAK8yC,UAAUxqC,iBAAiBsQ,EAAcK,mBAAoBjZ,KAAKuyC,4BACvEvyC,MAAK8yC,UAAUxqC,iBAAiBsQ,EAAcU,qBAAsBtZ,KAAKyyC,8BAEzE,IAAIM,GAAkC/yC,KAAK8yC,UAAUE,aAErD,KAAKr2C,EAAI,EAAGA,EAAIo2C,EAAS71C,SAAUP,EAClCqD,KAAKizC,WAAWF,EAASp2C,MvDkvUrBoE,WAAY,KACZC,aAAc,MuDzuUdrD,GAAA4C,UAAA0W,eAAP,SAAsBC,GAKrB,GAAIlX,KAAK85C,mBACR95C,KAAKg6C,aAEN,IAAI/sC,GAAsBjN,KAAKoyC,WAAWl1C,MAC1C,KAAK,GAAIP,GAAoB,EAAGA,EAAIsQ,EAAKtQ,IACxCua,EAAS61B,uBAAuB/sC,KAAKoyC,WAAWz1C,IAclDgE,QAAAC,eAAWjD,EAAA4C,UAAA,avDouUJM,IuDpuUP,WAEC,MAAOb,MAAKi6C,YvDquUN32C,IuDluUP,SAAqByF,GAEpB/I,KAAKi6C,WAAalxC,CAClB,KAAI/I,KAAKqE,UAAU6E,eAClBlJ,KAAKqE,UAAU6E,eAAiB,GAAIvD,EAErC3F,MAAKqE,UAAU6E,eAAes+B,MAAQz+B,CACtC/I,MAAKgJ,kCAAkC9C,EAAuB+C,kBvDkuUxDlI,WAAY,KACZC,aAAc,MuDxtUrBL,QAAAC,eAAWjD,EAAA4C,UAAA,uBvDmuUJM,IuDnuUP,WAEC,MAAOb,MAAKk6C,sBvDouUNn5C,WAAY,KACZC,aAAc,MuD/tUrBL,QAAAC,eAAWjD,EAAA4C,UAAA,avDquUJM,IuDruUP,WAEC,MAAOb,MAAKm6C,YvDsuUN72C,IuDnuUP,SAAqByF,GAEpB/I,KAAKm6C,WAAapxC,GvDouUZhI,WAAY,KACZC,aAAc,MuD/tUrBL,QAAAC,eAAWjD,EAAA4C,UAAA,cvDquUJM,IuDruUP,WAEC,MAAOb,MAAKo6C,avDsuUN92C,IuDnuUP,SAAsByF,GAErB/I,KAAKo6C,YAAcrxC,GvDouUbhI,WAAY,KACZC,aAAc,MuDrqUdrD,GAAA4C,UAAAU,QAAP,WAECjB,KAAKyO,eAEL9Q,GAAU08C,YAAY/0C,KAAKtF,MAMrBrC,GAAA4C,UAAAkO,cAAP,WAGCzO,KAAKwE,SAAW,IAGhBxE,MAAK8yC,UAAU7xC,SAEfP,GAAAH,UAAMkO,cAAaxR,KAAA+C,KAEnBA,MAAK+5C,YAAc,KAOpBp5C,QAAAC,eAAWjD,EAAA4C,UAAA,avDmqUJM,IuDnqUP,WAKC,GAAIb,KAAK85C,mBACR95C,KAAKg6C,aAEN,OAAOh6C,MAAKoyC,YvDmqUNrxC,WAAY,KACZC,aAAc,MuD9pUdrD,GAAA4C,UAAAy5C,YAAP,WAECh6C,KAAK85C,mBAAqB,KAE1B,IAAG95C,KAAK+5C,aAAe,KACtB,MAED,IAAIhH,GAAkC/yC,KAAK8yC,UAAUE,aACrD,KAAK,GAAIr2C,GAAWo2C,EAAS71C,OAAS,EAAGP,GAAG,EAAGA,IAC9CqD,KAAK8yC,UAAU35B,kBAAkB45B,EAASp2C,GAE3C,IAAGqD,KAAKi5C,OAAS,GAChB,MAED,IAAIzP,GAAyB,GAAItnC,MAEjC,IAAIo4C,GAAkBt6C,KAAK+5C,YAAYQ,KAAKv6C,KAAK+5C,YAAYS,WAAWC,kBACxE,IAAIC,GAA4B16C,KAAK+5C,YAAYS,WAAWG,QAC5D,IAAIC,GAA4B56C,KAAK+5C,YAAYS,WAAWK,QAC5D,IAAIC,GAAgBF,CACpB,IAAIG,GAA+B,IACnC,IAAItjC,GAAW,CACf,IAAIiO,GAAW,CACf,IAAIs1B,GAAkBh7C,KAAK+5C,YAAYS,WAAWS,uBAAyBX,CAC3E,IAAIY,GAA0Bl7C,KAAKs1C,KAAKuE,WAAWr2B,MAAM,MACzD,IAAI23B,KACJ,IAAIC,KACJ,IAAIC,KACJ,KAAK,GAAIC,GAAK,EAAGA,EAAKJ,EAAUh+C,OAAQo+C,IAAM,CAE7CH,EAAkB71C,QAClB81C,GAAuB91C,QACvB+1C,GAAkB/1C,KAAK,EAGvB,IAAIi2C,GAAsBL,EAAUI,GAAI93B,MAAM,IAC9C,KAAK,GAAI7mB,GAAI,EAAGA,EAAI4+C,EAAMr+C,OAAQP,IAAK,CACtC,GAAI6+C,GAAoB,CACxB,IAAIC,KACJ,IAAIC,KACJ,IAAIC,GAAe,CACnB,KAAK,GAAIC,GAAI,EAAGA,EAAIL,EAAM5+C,GAAGO,OAAQ0+C,IAAK,CACzCtB,EAAat6C,KAAK+5C,YAAYQ,KAAOv6C,KAAK+5C,YAAYS,WAAWC,kBACjE,IAAIoB,GAAoD77C,KAAK+5C,YAAYS,WAAWsB,oBAAoBP,EAAM5+C,GAAGo/C,WAAWH,GAAG/B,WAC/H,IAAIgC,GAAa,KAAM,CACtB,GAAI77C,KAAK+5C,YAAYiC,oBAAqB,CACzC1B,EAAat6C,KAAK+5C,YAAYQ,KAAOv6C,KAAK+5C,YAAYiC,oBAAoBvB,kBAC1EoB,GAAY77C,KAAK+5C,YAAYiC,oBAAoBF,oBAAoBP,EAAM5+C,GAAGo/C,WAAWH,GAAG/B,aAG9F,GAAIgC,GAAa,KAAM,CACtB,GAAII,GAAgCJ,EAAUK,OAC9C,IAAID,GAAgB,KAAM,CvD4pUJ,GuD1pUjBE,GAAuB,CAC3B,IAAIpB,GAAa,KAAM,CACtB,IAAK,GAAIr1B,GAAW,EAAGA,EAAIq1B,EAAUqB,iBAAiBl/C,OAAQwoB,IAAK,CAClE,GAAIq1B,EAAUqB,iBAAiB12B,IAAM61B,EAAM5+C,GAAGo/C,WAAWH,GAAI,CAC5DO,EAAgBpB,EAAUsB,cAAc32B,EACxC,SAIH81B,IAAgBK,EAAUS,WAAaH,GAAiB7B,EAAct6C,KAAK+5C,YAAYwC,kBAEnF,CAEJf,GAAcR,OAGX,CAGJQ,GAAcR,EAEfU,EAAiBC,GAASrB,CAC1BmB,GAAWE,KAAWE,EAGvB,GAAKR,EAAkBA,EAAkBn+C,OAAS,GAAKs+C,GAAex7C,KAAKw8C,UAAW,CAErF,IAAK,GAAIC,GAAY,EAAGA,EAAKf,EAAiBx+C,OAAQu/C,IAAM,CAC3DtB,EAAkBA,EAAkBj+C,OAAS,GAAGoI,KAAKm2C,EAAWgB,GAChErB,GAAuBA,EAAuBl+C,OAAS,GAAGoI,KAAKo2C,EAAiBe,IAEjFpB,EAAkBA,EAAkBn+C,OAAS,IAAMs+C,MAE/C,CAIJL,EAAkB71C,QAClB81C,GAAuB91C,QACvB+1C,GAAkB/1C,KAAK,EACvB,KAAK,GAAIm3C,GAAY,EAAGA,EAAKf,EAAiBx+C,OAAQu/C,IAAM,CAC3DtB,EAAkBA,EAAkBj+C,OAAS,GAAGoI,KAAKm2C,EAAWgB,GAChErB,GAAuBA,EAAuBl+C,OAAS,GAAGoI,KAAKo2C,EAAiBe,IAEjFpB,EAAkBA,EAAkBn+C,OAAS,GAAKs+C,EAGnD,GAAI7+C,EAAK4+C,EAAMr+C,OAAS,EAAI,CAC3B,GAAKm+C,EAAkBA,EAAkBn+C,OAAS,GAAK89C,GAAqBh7C,KAAKw8C,UAAW,CAC3FrB,EAAkBA,EAAkBj+C,OAAS,GAAGoI,KAAK,KACrD81C,GAAuBA,EAAuBl+C,OAAS,GAAGoI,KAAKg1C,EAC/De,GAAkBA,EAAkBn+C,OAAS,IAAM89C,MAE/C,CACJG,EAAkB71C,MAAM,MACxB81C,GAAuB91C,MAAMg1C,GAC7Be,GAAkB/1C,KAAK01C,MAM3B,IAAK,GAAIr+C,GAAI,EAAGA,EAAIw+C,EAAkBj+C,OAAQP,IAAK,CAElD,GAAI+/C,GAAgBhC,CACpB,IAAG16C,KAAK+5C,YAAY4C,OAAO,SAAS,CACnCD,GAAU18C,KAAKm6C,WAAWkB,EAAkB1+C,IAAI,MAE5C,IAAGqD,KAAK+5C,YAAY4C,OAAO,QAAQ,CACvCD,EAAU18C,KAAKm6C,WAAWkB,EAAkB1+C,GAAI+9C,EAIjD,IAAK,GAAIt+C,GAAI,EAAGA,EAAI++C,EAAkBx+C,GAAGO,OAAQd,IAAK,CACrD,GAAIy/C,GAA+BV,EAAkBx+C,GAAGP,EACxDk+C,GAAac,EAAuBz+C,GAAGP,EACvC,IAAIy/C,GAAa,KAAM,CACtB,GAAII,GAAgCJ,EAAUK,OAC9C,IAAID,GAAgB,KAAM,CACzB,GAAIW,GAA0BX,EAAa93C,UAAUtD,IAAIo7C,EAAaY,YACtE,IAAIC,GAA0Bb,EAAac,OAAOl8C,IAAIo7C,EAAaY,YACnE,KAAK,GAAI/b,GAAW,EAAGA,EAAImb,EAAaY,YAAa/b,IAAK,CACzD0I,EAAS/xB,KAAQmlC,EAAW9b,EAAI,GAAKwZ,EAAcoC,CACnDlT,GAAS/xB,KAAQmlC,EAAW9b,EAAI,EAAI,GAAKwZ,EAAcQ,CACvDtR,GAAS/xB,KAAOmlC,EAAW9b,EAAI,EAAI,EACnC0I,GAAS/xB,KAAOqlC,EAAWhc,EAAI,EAC/B0I,GAAS/xB,KAAOqlC,EAAWhc,EAAI,EAAI,EACnC0I,GAAS/xB,KAAOzX,KAAK+5C,YAAYiD,UAAU,EAC3CxT,GAAS/xB,KAAOzX,KAAK+5C,YAAYiD,UAAU,GvDspU1B,GuDnpUdb,GAAuB,CAC3B,IAAIpB,GAAa,KAAM,CACtB,IAAK,GAAIr1B,GAAW,EAAGA,EAAIq1B,EAAUqB,iBAAiBl/C,OAAQwoB,IAAK,CAClE,GAAIq1B,EAAUqB,iBAAiB12B,IAAM1lB,KAAKi5C,MAAM8C,WAAWp/C,GAAI,CAC9Dw/C,EAAgBpB,EAAUsB,cAAc32B,EACxC,SAIHg3B,IAAcb,EAAUS,WAAaH,GAAiB7B,EAAct6C,KAAK+5C,YAAYwC,kBAEjF,CAEJG,GAAU1B,OAGR,CACH0B,GAAU1B,GAGZF,GAAW96C,KAAK+5C,YAAYS,WAAWC,mBAAqBH,EAG7D,GAAI36B,GAAgC,GAAIvD,GAAeI,aAAc,EACrEmD,GAAerc,IAAIkmC,EACnB,IAAIyT,GAAoCt9B,EAAeu9B,MACvDv9B,GAAe1e,SACf,IAAIk8C,GAAkC,GAAIr7C,GAAiBm7C,EAC3DE,GAAev6C,OAAO,GAAIjB,GAAiBs7C,GAC3Cj9C,MAAK8yC,UAAU/5B,eAAeokC,EAC9Bn9C,MAAKoyC,WAAW,GAAG5tC,SAAWxE,KAAK+5C,YAAYv1C,SAWzC7G,GAAA4C,UAAA68C,WAAP,SAAkBC,GACjBr9C,KAAKi5C,OAAOoE,EAON1/C,GAAA4C,UAAA+8C,eAAP,YAcO3/C,GAAA4C,UAAAg9C,kBAAP,SAAyBC,GAExB,MAAOx9C,MAAKy9C,gBAaN9/C,GAAA4C,UAAAm9C,oBAAP,SAA2B7zC,EAAUE,GAEpC,MAAO/J,MAAK29C,kBAcNhgD,GAAA4C,UAAAq9C,wBAAP,SAA+BJ,GAE9B,MAAOx9C,MAAK69C,sBAuBNlgD,GAAA4C,UAAAu9C,kBAAP,SAAyBn7C,GAExB,MAAO3C,MAAK+9C,gBAaNpgD,GAAA4C,UAAAy9C,oBAAP,SAA2Bn0C,EAAUE,GAEpC,MAAO/J,MAAKi+C,kBAaNtgD,GAAA4C,UAAA29C,mBAAP,SAA0BV,GAEzB,MAAOx9C,MAAKm+C,iBAUNxgD,GAAA4C,UAAA69C,cAAP,SAAqBC,GAEpB,MAAOr+C,MAAKs+C,YAUN3gD,GAAA4C,UAAAg+C,eAAP,SAAsBF,GAErB,MAAOr+C,MAAKw+C,aAYN7gD,GAAA4C,UAAAk+C,cAAP,SAAqBJ,GAEpB,MAAOr+C,MAAK0+C,YAYN/gD,GAAA4C,UAAAo+C,YAAP,SAAmBN,GAElB,MAAOr+C,MAAK4+C,UAeNjhD,GAAA4C,UAAAs+C,mBAAP,SAA0BrB,GAEzB,MAAOx9C,MAAK8+C,iBAqBNnhD,GAAA4C,UAAAw+C,cAAP,SAAqBvoB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,EAE/E,MAAOz2B,MAAK+5C,YAoBNp8C,GAAA4C,UAAAy+C,oBAAP,SAA2Bj2C,IAuBpBpL,GAAA4C,UAAA0+C,YAAP,SAAmBzoB,EAA2BC,EAAyB4mB,IAkBhE1/C,GAAA4C,UAAA2+C,aAAP,SAAoB1oB,EAA2BC,IAkDxC94B,GAAA4C,UAAA4+C,cAAP,SAAqBC,EAAmB5oB,EAAgCC,GAAhC,GAAAD,QAAA,GAA8B,CAA9BA,GAA6B,EAAG,GAAAC,QAAA,GAA4B,CAA5BA,GAA2B,GAkCrF94B,GAAA0hD,iBAAd,SAA+BC,EAAiBC,GAE/C,MAAO,OAGE5hD,GAAA4C,UAAAmD,MAAP,WAEF,GAAIsK,GAAyBrQ,EAAU08C,YAAkB,OAAG18C,EAAU08C,YAAYhH,MAAQ,GAAI11C,EAE9FqC,MAAKiO,OAAOD,EAEZ,OAAOA,GAIDrQ,GAAA4C,UAAA0N,OAAP,SAAcD,GAEbtN,EAAAH,UAAM0N,OAAMhR,KAAA+C,KAACgO,EAGbA,GAAYikC,SAAW,GAAIp5B,EAE3B7K,GAAYwuC,UAAYx8C,KAAKm6C,UAC7BnsC,GAAYwxC,WAAax/C,KAAKo6C,WAC9BpsC,GAAYyxC,WAAaz/C,KAAK+5C,WAE9B/rC,GAAYsnC,KAAOt1C,KAAKi5C,MA9yCVt7C,GAAA08C,YAA+B,GAAIn4C,MAEpCvE,GAAAuD,UAAmB,mBA8yClC,OAAAvD,IAlzCwBJ,EAozCxBH,GAAmBJ,QAAVW,IvDymUN4f,4CAA4Cnc,UAAUwD,8CAA8CxD,UAAUyW,sCAAsCzW,UAAUK,2CAA2C,2CAA2CkX,mCAAmC,mCAAmCP,iDAAiD,iDAAiDvZ,mCAAmC,mCAAmC6a,0CAA0C,0CAA0CgmC,wCAAwC,0CAA0CC,uCAAuC,SAASzjD,EAAQkB,EAAOJ,GAC1sB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwD9gXtB,IAAO4wC,GAAS/0C,EAAc,mCAE9B,IAAM0jD,GAAS,SAAAl/C,GAASX,EAAlB6/C,EAASl/C,EAEd,SAFKk/C,GAEOC,GAEXn/C,EAAAzD,KAAA+C,KAAM6/C,GAER,MAAAD,IANwB3O,EAQxB7zC,GAAmBJ,QAAV4iD,IxDghXNtO,mCAAmClwC,YAAYsgC,yCAAyC,SAASxlC,EAAQkB,EAAOJ,GACnH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyD/hXtB,IAAOy/C,GAAS5jD,EAAc,mCzDqiX9B,IyD9hXMqgC,GAAW,SAAA77B,GAASX,EAApBw8B,EAAW77B,EAMhB,SANK67B,GAMO7uB,EAAaiG,GAExBjT,EAAAzD,KAAA+C,KAAM0N,EAEN1N,MAAK+/C,QAAUpsC,EAGhBhT,OAAAC,eAAW27B,EAAAh8B,UAAA,UzDwhXJM,IyDxhXP,WAEC,MAAOb,MAAK+/C,SzDyhXNh/C,WAAY,KACZC,aAAc,MyDnhXdu7B,GAAAh8B,UAAAmD,MAAP,WAEC,MAAO,IAAI64B,GAAYv8B,KAAK0N,KAAM1N,KAAK+/C,SAtB1BxjB,GAAAiD,mBAA4B,mBAwB3C,OAAAjD,IA1B0BujB,EA4B1B1iD,GAAqBJ,QAAZu/B,IzD2hXNyjB,mCAAmC5+C,YAAYoX,gDAAgD,SAAStc,EAAQkB,EAAOJ,GAC1H,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0DnkXtB,IAAOy/C,GAAS5jD,EAAc,mCAI9B,IAAMqK,GAAkB,SAAA7F,GAASX,EAA3BwG,EAAkB7F,EAkCvB,SAlCK6F,GAkCOmH,EAAauyC,GAExBv/C,EAAAzD,KAAA+C,KAAM0N,EACN1N,MAAKkgD,QAAUD,EARhBt/C,OAAAC,eAAW2F,EAAAhG,UAAA,U1D4iXJM,I0D5iXP,WAEC,MAAOb,MAAKkgD,S1D6iXNn/C,WAAY,KACZC,aAAc,M0DjiXduF,GAAAhG,UAAAmD,MAAP,WAEC,MAAO,IAAI6C,GAAmBvG,KAAK0N,KAAM1N,KAAKkgD,SAzCjC35C,GAAA45C,kBAA2B,kBAK3B55C,GAAAuH,uBAAgC,uBAKhCvH,GAAAqH,cAAuB,cAKvBrH,GAAAgF,kBAA2B,kBAK3BhF,GAAAoR,4BAAqC,2BAuBpD,OAAApR,IAhDiCu5C,EAkDL1iD,GAAAJ,QAAnBuJ,I1D4jXNy5C,mCAAmC5+C,YAAYsY,2CAA2C,SAASxd,EAAQkB,EAAOJ,GACrH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2DvnXtB,IAAOy/C,GAAS5jD,EAAc,mC3DgoX9B,I2DrnXM0c,GAAa,SAAAlY,GAASX,EAAtB6Y,EAAalY,EAwBlB,SAxBKkY,GAwBOlL,EAAavI,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAExBzE,EAAAzD,KAAA+C,KAAM0N,EAEN1N,MAAKogD,aAAej7C,EAMrBxE,OAAAC,eAAWgY,EAAArY,UAAA,e3DmmXJM,I2DnmXP,WAEC,MAAOb,MAAKogD,c3DomXNr/C,WAAY,KACZC,aAAc,M2D9lXd4X,GAAArY,UAAAmD,MAAP,WAEC,MAAO,IAAIkV,GAAc5Y,KAAK0N,KAAM1N,KAAKogD,cAxC5BxnC,GAAAK,mBAA4B,kBAK5BL,GAAAU,qBAA8B,oBAK9BV,GAAAa,eAAwB,eAgCvC,OAAAb,IA/C4BknC,EAiD5B1iD,GAAuBJ,QAAd4b,I3DinXNonC,mCAAmC5+C,YAAY8a,wCAAwC,SAAShgB,EAAQkB,EAAOJ,GAClH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4DlrXtB,IAAOy/C,GAAS5jD,EAAc,mCAE9B,IAAMie,GAAU,SAAAzZ,GAASX,EAAnBoa,EAAUzZ,EAIf,SAJKyZ,GAIOzM,GAEXhN,EAAAzD,KAAA+C,KAAM0N,GAIAyM,EAAA5Z,UAAAmD,MAAP,WAEC,MAAO,IAAIyW,GAAWna,KAAK0N,MAVdyM,GAAAuB,oBAA6B,mBAY5C,OAAAvB,IAdyB2lC,EAgBzB1iD,GAAoBJ,QAAXmd,I5DirXN6lC,mCAAmC5+C,YAAYw1C,wCAAwC,SAAS16C,EAAQkB,EAAOJ,GAClH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6DtsXtB,IAAOy/C,GAAS5jD,EAAc,mC7D6sX9B,I6DlsXMg4C,GAAU,SAAAxzC,GAASX,EAAnBm0C,EAAUxzC,EAuIf,SAvIKwzC,GAuIOxmC,GAEXhN,EAAAzD,KAAA+C,KAAM0N,EAtIA1N,MAAAqgD,qBAA+B,KA4ItC1/C,OAAAC,eAAWszC,EAAA3zC,UAAA,W7DkkXJM,I6DlkXP,WAEC,GAAIy/C,GAAqBtgD,KAAKqgD,oBAC9BrgD,MAAKqgD,qBAAuB,IAG5B,OAAOC,I7DkkXDv/C,WAAY,KACZC,aAAc,M6D7jXdkzC,GAAA3zC,UAAAggD,gBAAP,WAECvgD,KAAKqgD,qBAAuB,KAE5B,IAAIrgD,KAAKwgD,cACRxgD,KAAKwgD,cAAcD,kBAMdrM,GAAA3zC,UAAAkgD,yBAAP,WAECzgD,KAAKqgD,qBAAuB,KAE5B,IAAIrgD,KAAKwgD,cACRxgD,KAAKwgD,cAAcC,2BAMdvM,GAAA3zC,UAAAmD,MAAP,WAEC,GAAIg9C,GAAoB,GAAIxM,GAAWl0C,KAAK0N,KAO5CgzC,GAAOC,QAAU3gD,KAAK2gD,OACtBD,GAAOE,QAAU5gD,KAAK4gD,OAEtBF,GAAOG,KAAO7gD,KAAK6gD,IACnBH,GAAOT,OAASjgD,KAAKigD,MACrBS,GAAO/M,gBAAkB3zC,KAAK2zC,eAC9B+M,GAAOl8C,SAAWxE,KAAKwE,QACvBk8C,GAAOI,GAAK9gD,KAAK8gD,EACjBJ,GAAOhiB,cAAgB1+B,KAAK0+B,aAC5BgiB,GAAOK,YAAc/gD,KAAK+gD,WAC1BL,GAAO9jC,MAAQ5c,KAAK4c,KACpB8jC,GAAOM,iBAAmBhhD,KAAKghD,gBAC/BN,GAAOO,MAAQjhD,KAAKihD,KAEpBP,GAAOQ,QAAUlhD,KAAKkhD,OACtBR,GAAOS,SAAWnhD,KAAKmhD,QAEvBT,GAAOF,cAAgBxgD,IACvB0gD,GAAOL,qBAAuBrgD,KAAKqgD,oBAEnC,OAAOK,GAMR//C,QAAAC,eAAWszC,EAAA3zC,UAAA,iB7DqjXJM,I6DrjXP,WAEC,MAAOb,MAAKigD,OAAOt1C,eAAe8B,gBAAgBzM,KAAK0+B,gB7DsjXjD39B,WAAY,KACZC,aAAc,M6DjjXrBL,QAAAC,eAAWszC,EAAA3zC,UAAA,e7DujXJM,I6DvjXP,WAEC,GAAIugD,GAAuBphD,KAAKigD,OAAOt1C,eAAeq7B,qBAAqBhmC,KAAK+gD,YAChFK,GAAY3uC,WAEZ,OAAO2uC,I7DujXDrgD,WAAY,KACZC,aAAc,M6DhxXPkzC,GAAAwB,WAAoB,aAKpBxB,GAAAyB,UAAmB,YAKnBzB,GAAA2B,SAAkB,WAKlB3B,GAAA0B,WAAoB,aAKpB1B,GAAAmN,WAAoB,aAepBnN,GAAAoN,MAAe,SAKfpN,GAAAqN,aAAsB,eAKtBrN,GAAAsN,YAAqB,cA6KpC,OAAAtN,IAnOyB4L,EAqOzB1iD,GAAoBJ,QAAXk3C,I7DkmXN8L,mCAAmC5+C,YAAYksC,8CAA8C,SAASpxC,EAAQkB,EAAOJ,GACxH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8Dz1XtB,IAAOy/C,GAAS5jD,EAAc,mCAI9B,IAAMgwC,GAAgB,SAAAxrC,GAASX,EAAzBmsC,EAAgBxrC,EAgBrB,SAhBKwrC,GAgBOx+B,EAAa+zC,GAExB/gD,EAAAzD,KAAA+C,KAAM0N,EAEN1N,MAAK0hD,aAAeD,EAMrB9gD,OAAAC,eAAWsrC,EAAA3rC,UAAA,e9D60XJM,I8D70XP,WAEC,MAAOb,MAAK0hD,c9D80XN3gD,WAAY,KACZC,aAAc,M8Dv0XdkrC,GAAA3rC,UAAAmD,MAAP,WAEC,MAAO,IAAIwoC,GAAiBlsC,KAAK0N,KAAM1N,KAAK0hD,cApC/BxV,GAAAW,mBAA4B,mBAE5BX,GAAAyV,qBAA8B,qBAE9BzV,GAAA0M,kBAA2B,kBAkC1C,OAAA1M,IAxC+B4T,EA0C/B1iD,GAA0BJ,QAAjBkvC,I9Dk1XN8T,mCAAmC5+C,YAAY6f,kDAAkD,SAAS/kB,EAAQkB,EAAOJ,GAC5H,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+Dr4XtB,IAAOy/C,GAAS5jD,EAAe,mC/D84X/B,I+Dp4XM8jB,GAAoB,SAAAtf,GAASX,EAA7BigB,EAAoBtf,EAmBzB,SAnBKsf,GAmBOtS,EAAaimC,GAExBjzC,EAAAzD,KAAA+C,KAAM0N,EAEN1N,MAAK4hD,iBAAmBjO,EAMzBhzC,OAAAC,eAAWof,EAAAzf,UAAA,mB/Ds3XJM,I+Dt3XP,WAEC,MAAOb,MAAK4hD,kB/Du3XN7gD,WAAY,KACZC,aAAc,M+Dh3Xdgf,GAAAzf,UAAAmD,MAAP,WAEC,MAAO,IAAIsc,GAAqBhgB,KAAK0N,KAAM1N,KAAK4hD,kBApCnC5hC,GAAAe,wBAAiC,2BAKjCf,GAAAc,oBAA6B,oBAiC5C,OAAAd,IA3CmC8/B,EA6CnC1iD,GAA8BJ,QAArBgjB,I/Dg4XNggC,mCAAmC5+C,YAAYugC,2CAA2C,SAASzlC,EAAQkB,EAAOJ,GACrH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF;CgE57XtB,IAAOy/C,GAAS5jD,EAAc,mCAE9B,IAAMsgC,GAAa,SAAA97B,GAASX,EAAtBy8B,EAAa97B,EAKlB,SALK87B,GAKO9uB,GAEXhN,EAAAzD,KAAA+C,KAAM0N,GALO8uB,EAAAqC,iBAA0B,iBAC1BrC,GAAAsC,gBAAyB,gBAMxC,OAAAtC,IAT4BsjB,EAWL1iD,GAAAJ,QAAdw/B,IhE67XNwjB,mCAAmC5+C,YAAYygD,yCAAyC,SAAS3lD,EAAQkB,EAAOJ,GACnH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiE/8XtB,IAAOy/C,GAAS5jD,EAAc,mCAE9B,IAAM4lD,GAAW,SAAAphD,GAASX,EAApB+hD,EAAWphD,EAOhB,SAPKohD,GAOOp0C,EAAaq0C,EAAwBC,GAAxB,GAAAD,QAAA,GAAsB,CAAtBA,EAAAzY,IAAwB,GAAA0Y,QAAA,GAAqB,CAArBA,EAAA1Y,IAEhD5oC,EAAAzD,KAAA+C,KAAM0N,EAEN1N,MAAKiiD,WAAaF,CAClB/hD,MAAKkiD,UAAYF,EAGlBrhD,OAAAC,eAAWkhD,EAAAvhD,UAAA,ajE28XJM,IiE38XP,WAEC,MAAOb,MAAKiiD,YjE48XNlhD,WAAY,KACZC,aAAc,MiE18XrBL,QAAAC,eAAWkhD,EAAAvhD,UAAA,YjE68XJM,IiE78XP,WAEC,MAAOb,MAAKkiD,WjE88XNnhD,WAAY,KACZC,aAAc,MiEv8Xd8gD,GAAAvhD,UAAAmD,MAAP,WAEC,MAAO,IAAIo+C,GAAY9hD,KAAK0N,KAAM1N,KAAKiiD,WAAYjiD,KAAKkiD,WA9B3CJ,GAAAK,OAAgB,QAgC/B,OAAAL,IAlC0BhC,EAoC1B1iD,GAAqBJ,QAAZ8kD,IjEg9XN9B,mCAAmC5+C,YAAY6d,wCAAwC,SAAS/iB,EAAQkB,EAAOJ,GAClH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkE3/XtB,IAAOy/C,GAAS5jD,EAAe,mCAI/B,IAAM6hB,GAAU,SAAArd,GAASX,EAAnBge,EAAUrd,EAcf,SAdKqd,GAcOrQ,EAAauS,GAExBvf,EAAAzD,KAAA+C,KAAM0N,EAEN1N,MAAKygB,OAASR,EATftf,OAAAC,eAAWmd,EAAAxd,UAAA,SlEw/XJM,IkEx/XP,WAEC,MAAOb,MAAKygB,QlEy/XN1f,WAAY,KACZC,aAAc,MkE5+Xd+c,GAAAxd,UAAAmD,MAAP,WAEC,MAAO,IAAIqa,GAAW/d,KAAK0N,KAAM1N,KAAKygB,QApBzB1C,GAAAgB,sBAA+B,sBAsB9C,OAAAhB,IA7ByB+hC,EA+BzB1iD,GAAoBJ,QAAX+gB,IlEu/XNiiC,mCAAmC5+C,YAAY2e,8CAA8C,SAAS7jB,EAAQkB,EAAOJ,GACxH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmE9hYtB,IAAOy/C,GAAS5jD,EAAc,mCnEuiY9B,ImE/hYMijB,GAAgB,SAAAze,GAASX,EAAzBof,EAAgBze,EA8BrB,SA9BKye,GA8BOzR,EAAaiS,GAExBjf,EAAAzD,KAAA+C,KAAM0N,EAEN1N,MAAKoiD,gBAAkBziC,EAMxBhf,OAAAC,eAAWue,EAAA5e,UAAA,kBnEsgYJM,ImEtgYP,WAEC,MAAOb,MAAKoiD,iBnEugYNrhD,WAAY,KACZC,aAAc,MmEhgYdme,GAAA5e,UAAAmD,MAAP,WAEC,MAAO,IAAIyb,GAAiBnf,KAAK0N,KAAM1N,KAAKoiD,iBA/C/BjjC,GAAAM,mBAA4B,mBAK5BN,GAAAO,cAAuB,cAKvBP,GAAAS,oBAA6B,oBAK7BT,GAAAU,eAAwB,eAkCvC,OAAAV,IAtD+B2gC,EAwD/B1iD,GAA0BJ,QAAjBmiB,InEwhYN6gC,mCAAmC5+C,YAAYihD,wCAAwC,SAASnmD,EAAQkB,EAAOJ,GAClH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoE5lYtB,IAAOy/C,GAAS5jD,EAAc,mCAO9B,IAAMomD,GAAU,SAAA5hD,GAASX,EAAnBuiD,EAAU5hD,EA4Gf,SA5GK4hD,GA4GO50C,GAEXhN,EAAAzD,KAAA+C,KAAM0N,EA3GA1N,MAAAqgD,qBAA+B,KAiHtC1/C,OAAAC,eAAW0hD,EAAA/hD,UAAA,WpEm/XJM,IoEn/XP,WAEC,GAAIy/C,GAAqBtgD,KAAKqgD,oBAC9BrgD,MAAKqgD,qBAAuB,IAG5B,OAAOC,IpEm/XDv/C,WAAY,KACZC,aAAc,MoE9+XdshD,GAAA/hD,UAAAggD,gBAAP,WAECvgD,KAAKqgD,qBAAuB,KAE5B,IAAIrgD,KAAKwgD,cACRxgD,KAAKwgD,cAAcD,kBAMd+B,GAAA/hD,UAAAkgD,yBAAP,WAECzgD,KAAKqgD,qBAAuB,KAE5B,IAAIrgD,KAAKwgD,cACRxgD,KAAKwgD,cAAcC,2BAMd6B,GAAA/hD,UAAAmD,MAAP,WAEC,GAAIg9C,GAAoB,GAAI4B,GAAWtiD,KAAK0N,KAO5CgzC,GAAOC,QAAU3gD,KAAK2gD,OACtBD,GAAOE,QAAU5gD,KAAK4gD,OAEtBF,GAAOG,KAAO7gD,KAAK6gD,IACnBH,GAAOT,OAASjgD,KAAKigD,MACrBS,GAAO/M,gBAAkB3zC,KAAK2zC,eAC9B+M,GAAOl8C,SAAWxE,KAAKwE,QACvBk8C,GAAOI,GAAK9gD,KAAK8gD,EACjBJ,GAAOhiB,cAAgB1+B,KAAK0+B,aAC5BgiB,GAAOK,YAAc/gD,KAAK+gD,WAC1BL,GAAO9jC,MAAQ5c,KAAK4c,KACpB8jC,GAAOM,iBAAmBhhD,KAAKghD,gBAE/BN,GAAOQ,QAAUlhD,KAAKkhD,OACtBR,GAAOS,SAAWnhD,KAAKmhD,QAEvBT,GAAOF,cAAgBxgD,IAEvB,OAAO0gD,GAMR//C,QAAAC,eAAW0hD,EAAA/hD,UAAA,iBpEs+XJM,IoEt+XP,WAEC,MAAOb,MAAKigD,OAAOt1C,eAAe8B,gBAAgBzM,KAAK0+B,gBpEu+XjD39B,WAAY,KACZC,aAAc,MoEl+XrBL,QAAAC,eAAW0hD,EAAA/hD,UAAA,epEw+XJM,IoEx+XP,WAEC,GAAIugD,GAAuBphD,KAAKigD,OAAOt1C,eAAeq7B,qBAAqBhmC,KAAK+gD,YAChFK,GAAY3uC,WAEZ,OAAO2uC,IpEw+XDrgD,WAAY,KACZC,aAAc,MoEpqYPshD,GAAAC,UAAmB,YAKnBD,GAAAE,YAAqB,cAKrBF,GAAAG,WAAoB,aAKpBH,GAAAI,UAAmB,YAKnBJ,GAAAK,WAAoB,aAyKnC,OAAAL,IAtMyBxC,EAwML1iD,GAAAJ,QAAXslD,IpE+/XNtC,mCAAmC5+C,YAAYqX,4CAA4C,SAASvc,EAAQkB,EAAOJ,GACtH,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqErtYtB,IAAOy/C,GAAS5jD,EAAc,mCAI9B,IAAMsK,GAAc,SAAA9F,GAASX,EAAvByG,EAAc9F,EAmBnB,SAnBK8F,GAmBOkH,EAAarJ,GAExB3D,EAAAzD,KAAA+C,KAAM0N,EAEN1N,MAAKqI,WAAahE,EATnB1D,OAAAC,eAAW4F,EAAAjG,UAAA,arE6sYJM,IqE7sYP,WAEC,MAAOb,MAAKqI,YrE8sYNtH,WAAY,KACZC,aAAc,MqEjsYdwF,GAAAjG,UAAAmD,MAAP,WAEC,MAAO,IAAI8C,GAAexG,KAAK0N,KAAM1N,KAAKqI,YAzB7B7B,GAAA+B,oBAA6B,oBAK7B/B,GAAAkC,2BAAoC,0BAsBnD,OAAAlC,IAlC6Bs5C,EAoC7B1iD,GAAwBJ,QAAfwJ,IrEgtYNw5C,mCAAmC5+C,YAAYwhD,2DAA2D,SAAS1mD,EAAQkB,EAAOJ,SAE/HuwC,sDAAsD,SAASrxC,EAAQkB,EAAOJ,GsE1vYpF,GAAO6lD,GAAS3mD,EAAe,kCAC/B,IAAO4mD,GAAa5mD,EAAc,sCAClC,IAAO6mD,GAAe7mD,EAAc,wCAGpC,IAAOyhB,GAAWzhB,EAAe,sCACjC,IAAO4B,GAAM5B,EAAgB,qCAE7B,IAAO8mD,GAAa9mD,EAAc,6CAClC,IAAO+mD,GAAe/mD,EAAc,8CACpC,IAAO27C,GAAiB37C,EAAa,gDAGrC,IAAMiwC,GAAsB,WAA5B,QAAMA,MAWSA,EAAA+W,mBAAd,SAAiCvP,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAEhC,GAAIA,GAAmB,MAAQA,EAAgBL,QAAQ31B,GAAc,CACpE,IAAKwuB,EAAuBgX,sBAC3BhX,EAAuBiX,4BAExB,OAAOjX,GAAuBgX,sBAG/B,GAAIxP,GAAmB,MAAQA,EAAgBL,QAAQx1C,GAAS,CAC/D,IAAKquC,EAAuBkX,4BAC3BlX,EAAuBmX,kCAExB,OAAOnX,GAAuBkX,4BAG/B,IAAKlX,EAAuBoX,wBAC3BpX,EAAuBqX,8BAExB,OAAOrX,GAAuBoX,wBAGjBpX,GAAAsX,kBAAd,SAAgC9P,GAAA,GAAAA,QAAA,GAAuC,CAAvCA,EAAA,KAE/B,GAAIA,GAAmB,MAAQA,EAAgBL,QAAQx1C,GAAS,CAC/D,IAAKquC,EAAuBuX,oBAC3BvX,EAAuBwX,0BAExB,OAAOxX,GAAuBuX,oBAG/B,IAAKvX,EAAuByX,gBAC3BzX,EAAuB0X,sBAExB,OAAO1X,GAAuByX,gBAGjBzX,GAAA2X,kBAAd,WAEC,IAAK3X,EAAuB4X,sBAC3B5X,EAAuB6X,sBAExB,OAAO7X,GAAuB4X,sBAGjB5X,GAAA8X,oBAAd,WAEC,IAAK9X,EAAuB+X,wBAC3B/X,EAAuBgY,wBAExB,OAAOhY,GAAuB+X,wBAGjB/X,GAAAc,kBAAd,WAEC,IAAKd,EAAuBiY,kBAC3BjY,EAAuBkY,wBAExB,OAAOlY,GAAuBiY,kBAGhBjY,GAAA0X,qBAAf,WAEC1X,EAAuByX,gBAAkB,GAAIX,EAC7C9W,GAAuByX,gBAAgBx1C,KAAO,iBAGhC+9B,GAAAwX,yBAAf,WAECxX,EAAuBuX,oBAAsB,GAAI7L,EACjD1L,GAAuBuX,oBAAoBt1C,KAAO,qBAGpC+9B,GAAAgY,uBAAf,WAEC,IAAKhY,EAAuB4X,sBAC3B5X,EAAuB6X,sBAExB,IAAI9jD,GAAI,GAAI6iD,GAAgB5W,EAAuB4X,sBAAsB32C,MAEzE,KAAK,GAAIzQ,GAAW,EAAGA,EAAI,EAAGA,IAC7BuD,EAAEokD,KAAK3nD,EAAGwvC,EAAuB4X,sBAElC5X,GAAuB+X,wBAA0BhkD,EAGnCisC,GAAA6X,qBAAf,WAEC,GAAI9jD,GAAkB,GAAI4iD,GAAc,EAAG,EAAG,MAAO,EtEmtY/C,IsEhtYFnmD,GAAU8a,CACd,KAAK9a,EAAI,EAAGA,EAAI,EAAGA,IAClB,IAAK8a,EAAI,EAAGA,EAAI,EAAGA,IAClB,GAAKA,EAAI,EAAM9a,EAAI,EAClBuD,EAAEqkD,SAAS5nD,EAAG8a,EAAG,SAEpB00B,GAAuB4X,sBAAwB7jD,EAGjCisC,GAAAqX,6BAAf,WAEC,IAAKrX,EAAuByX,gBAC3BzX,EAAuB0X,sBAExB1X,GAAuBoX,wBAA0B,GAAIP,EACrD7W,GAAuBoX,wBAAwBhlC,QAAU4tB,EAAuByX,eAChFzX,GAAuBoX,wBAAwBn1C,KAAO,yBAGxC+9B,GAAAmX,iCAAf,WAEC,IAAKnX,EAAuBuX,oBAC3BvX,EAAuBwX,0BAExBxX,GAAuBkX,4BAA8B,GAAIL,EACzD7W,GAAuBkX,4BAA4B9kC,QAAU4tB,EAAuBuX,mBACpFvX,GAAuBkX,4BAA4Bj1C,KAAO,6BAG5C+9B,GAAAiX,2BAAf,WAECjX,EAAuBgX,sBAAwB,GAAIH,EACnD7W,GAAuBgX,sBAAsB/0C,KAAO,uBAGtC+9B,GAAAkY,uBAAf,WAEClY,EAAuBiY,kBAAoB,GAAIvB,GAGjD,OAAA1W,KAEA/uC,GAAgCJ,QAAvBmvC,ItEssYNqY,sCAAsCpjD,UAAUqjD,wCAAwCrjD,UAAUsjD,kCAAkCtjD,UAAUsc,sCAAsC,sCAAsC1e,qCAAqC,qCAAqC2lD,6CAA6C,6CAA6CC,8CAA8C,8CAA8C7L,gDAAgD,kDAAkDvvB,kDAAkD,SAASttB,EAAQkB,EAAOJ,GuEh2YzoB,GAAMmkB,GAAkB,WAAxB,QAAMA,MAwBSA,EAAA0jC,YAAd,SAA0BC,GAEzB9kD,KAAK+kD,aACL/kD,MAAKglD,kBAAkBhlD,KAAK+kD,aAAaD,CACzC,OAAO9kD,MAAK+kD,YAGC5jC,GAAA8jC,cAAd,SAA4BtiD,SAEpB3C,MAAKglD,kBAAkBriD,GAGjBwe,GAAAi1B,kBAAd,WAEC,IAAI,GAAIhwB,KAAOpmB,MAAKglD,kBAAkB,CACrChlD,KAAKglD,kBAAkB5+B,GAAKnpB,QAIhBkkB,GAAAw1B,qBAAd,SAAmC1wB,GAElCjmB,KAAKklD,gBAAgB5/C,KAAK2gB,GAGb9E,GAAAiD,oBAAd,SAAkC+gC,EAAcC,GvEs0YzC,GuEn0YFzoD,GAAEqD,KAAKqlD,kBAAkBnoD,MAC7B,OAAMP,IAAI,CACTqD,KAAKslD,YAAYhgD,KAAKtF,KAAKqlD,kBAAkB1oD,GAC7CqD,MAAKulD,gBAAgBjgD,KAAKtF,KAAKwlD,sBAAsB7oD,IAEtDqD,KAAKqlD,kBAAkBnoD,OAAS,CAChC8C,MAAKwlD,sBAAsBtoD,OAAS,CACpC8C,MAAKslD,YAAYhgD,KAAK6/C,EACtBnlD,MAAKulD,gBAAgBjgD,KAAK8/C,GAGbjkC,GAAAkD,0BAAd,SAAwC8gC,EAAcC,GAErDplD,KAAKqlD,kBAAkB//C,KAAK6/C,EAC5BnlD,MAAKwlD,sBAAsBlgD,KAAK8/C,GAGnBjkC,GAAAg1B,cAAd,WAEC,GAAGn2C,KAAKslD,YAAYpoD,QAAQ,GAAK8C,KAAKqlD,kBAAkBnoD,QAAQ,EAC/D,MAED,IAAIP,GAAEqD,KAAKqlD,kBAAkBnoD,MAC7B,OAAMP,IAAI,CACTqD,KAAKslD,YAAYhgD,KAAKtF,KAAKqlD,kBAAkB1oD,GAC7CqD,MAAKulD,gBAAgBjgD,KAAKtF,KAAKwlD,sBAAsB7oD,IAEtDqD,KAAKqlD,kBAAkBnoD,OAAS,CAChC8C,MAAKwlD,sBAAsBtoD,OAAS,CAEpC,IAAIioD,EACJ,KAAKxoD,EAAI,EAAGA,EAAGqD,KAAKslD,YAAYpoD,OAAQP,IAAK,CAE5CwoD,EAAGnlD,KAAKslD,YAAY3oD,EACpB,IAAGwoD,EAAGtwC,OAAO,KAAM,CAClB,GAAI4wC,GAASN,EAAG32C,QAAU22C,EAAG32C,QAAU22C,CAEvCnlD,MAAKulD,gBAAgB5oD,GAAGM,KAAKwoD,IAU/BzlD,KAAKslD,YAAYpoD,OAAS,CAC1B8C,MAAKulD,gBAAgBroD,OAAS,EAGjBikB,GAAAk1B,gBAAd,WAEC,GAAIppC,GAAajN,KAAKklD,gBAAgBhoD,MACtC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAC/BqD,KAAKklD,gBAAgBvoD,GAAGsE,SAEzBjB,MAAKklD,gBAAgBhoD,OAAS,EApGjBikB,GAAAmC,iBAA0BliB,SAGzB+f,GAAA+jC,gBAAuC,GAAIhjD,MAG3Cif,GAAAmkC,cACAnkC,GAAAokC,kBAGApkC,GAAAkkC,oBACAlkC,GAAAqkC,wBAEArkC,GAAA6jC,kBAA2B,GAAIrkD,OAE/BwgB,GAAA4jC,YAAmB,CAuFnC,OAAA5jC,KACA/jB,GAA4BJ,QAAnBmkB,OvEs0YHygB,4CAA4C,SAAS1lC,EAAQkB,EAAOJ,GwEx7Y1E,GAAOiJ,GAAQ/J,EAAgB,gCAG/B,IAAOwtB,GAAUxtB,EAAe,qCAGhC,IAAOwpD,GAAcxpD,EAAc,uCACnC,IAAOilB,GAAkBjlB,EAAa,iDxE07YtC,IwEp7YMugC,GAAY,WAqCjB,QArCKA,KAAN,GAAA/1B,GAAA1G,IAISA,MAAA2lD,YAA0B,GAAIzjD,MAM9BlC,MAAA4lD,YAAuB,GAAI3/C,EAE3BjG,MAAA2G,cAAsC,GAAIzE,MAI1ClC,MAAA6lD,SAA0B,GAAIH,GAAeA,EAAe7P,SAC5D71C,MAAA8lD,YAA6B,GAAIJ,GAAeA,EAAepE,MAC/DthD,MAAA+lD,UAA2B,GAAIL,GAAeA,EAAe/P,UAC7D31C,MAAAgmD,WAA4B,GAAIN,GAAeA,EAAe9P,WAC9D51C,MAAAimD,WAA4B,GAAIP,GAAeA,EAAerE,WAC9DrhD,MAAAkmD,WAA4B,GAAIR,GAAeA,EAAehQ,WAC9D11C,MAAAmmD,YAA6B,GAAIT,GAAeA,EAAelE,YAC/DxhD,MAAAomD,kBAAmC,GAAIV,GAAeA,EAAenE,aAgB5EvhD,MAAKqmD,gBAAkB,SAAC79C,GAAqB,MAAA9B,GAAK4/C,QAAQ99C,GAC1DxI,MAAKumD,sBAAwB,SAAC/9C,GAAqB,MAAA9B,GAAK8/C,cAAch+C,GACtExI,MAAKymD,oBAAsB,SAACj+C,GAAqB,MAAA9B,GAAKggD,YAAYl+C,GAClExI,MAAK2mD,oBAAsB,SAACn+C,GAAqB,MAAA9B,GAAKkgD,YAAYp+C,GAClExI,MAAK6mD,kBAAoB,SAACr+C,GAAqB,MAAA9B,GAAKogD,UAAUt+C,GAC9DxI,MAAK+mD,qBAAuB,SAACv+C,GAAqB,MAAA9B,GAAKsgD,aAAax+C,GACpExI,MAAKinD,oBAAsB,SAACz+C,GAAqB,MAAA9B,GAAKwgD,YAAY1+C,GAClExI,MAAKmnD,mBAAqB,SAAC3+C,GAAqB,MAAA9B,GAAK0gD,WAAW5+C,IAGnDi0B,EAAA/C,YAAd,WAEC,GAAI15B,KAAKqnD,UACR,MAAOrnD,MAAKqnD,SAEb,OAAQrnD,MAAKqnD,UAAY,GAAI5qB,GAGvBA,GAAAl8B,UAAAkgC,gBAAP,SAAuBN,GAGtB,GAAIngC,KAAKsgC,mBAAqBtgC,KAAKsnD,yBAA0B,CAC5D,GAAItnD,KAAKsnD,yBACRtnD,KAAK2U,cAAc3U,KAAK+lD,UAAW/lD,KAAKunD,gBAAiBvnD,KAAKsnD,yBAE/D,IAAItnD,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAKkmD,WAAYlmD,KAAKunD,iBAI1C,GAAIpnB,GAAkBngC,KAAKsgC,kBAC3BtgC,KAAK2U,cAAe3U,KAAKimD,WAAYjmD,KAAKunD,gBAE3C,IAAI/+C,EACJ,IAAIg/C,ExEw5YE,IwEr5YFv6C,GAAajN,KAAK2G,cAAczJ,MACpC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EAAG,CACpC6L,EAAQxI,KAAK2G,cAAchK,EAC3B6qD,GAAah/C,EAAMy3C,MAGnB,OAAOuH,EAAY,CAClB,GAAIA,EAAW1wC,mBACd0wC,EAAWl8C,cAAc9C,EAE1Bg/C,GAAaA,EAAWC,OAIzBtmC,EAAmBg1B,gBAKpBn2C,KAAK2G,cAAczJ,OAAS,CAE5B8C,MAAKsnD,yBAA2BtnD,KAAKsgC,iBAErCtgC,MAAKqgC,cAAgB,MAmBf5D,GAAAl8B,UAAA29B,aAAP,SAAoB2iB,GAEnB,GAAGA,GAAQA,EAAK6G,YAAa,CAC5B7G,EAAK6G,YAAYp/C,iBAAiB,QAAStI,KAAKqmD,gBAChDxF,GAAK6G,YAAYp/C,iBAAiB,WAAYtI,KAAKumD,sBACnD1F,GAAK6G,YAAYp/C,iBAAiB,aAActI,KAAKymD,oBACrD5F,GAAK6G,YAAYp/C,iBAAiB,YAAatI,KAAKymD,oBACpD5F,GAAK6G,YAAYp/C,iBAAiB,YAAatI,KAAK2mD,oBACpD9F,GAAK6G,YAAYp/C,iBAAiB,YAAatI,KAAK2mD,oBACpD9F,GAAK6G,YAAYp/C,iBAAiB,UAAWtI,KAAK6mD,kBAClDhG,GAAK6G,YAAYp/C,iBAAiB,WAAYtI,KAAK6mD,kBACnDhG,GAAK6G,YAAYp/C,iBAAiB,aAActI,KAAK+mD,qBACrDlG,GAAK6G,YAAYp/C,iBAAiB,YAAatI,KAAKinD,oBACpDpG,GAAK6G,YAAYp/C,iBAAiB,WAAYtI,KAAKmnD,mBACnDnnD,MAAK2lD,YAAYrgD,KAAKu7C,IAIjBpkB,GAAAl8B,UAAAogC,eAAP,SAAsBkgB,GAErB,GAAGA,GAAQA,EAAK6G,YAAa,CAC5B7G,EAAK6G,YAAYzzC,oBAAoB,QAASjU,KAAKqmD,gBACnDxF,GAAK6G,YAAYzzC,oBAAoB,WAAYjU,KAAKumD,sBACtD1F,GAAK6G,YAAYzzC,oBAAoB,aAAcjU,KAAKymD,oBACxD5F,GAAK6G,YAAYzzC,oBAAoB,YAAajU,KAAKymD,oBACvD5F,GAAK6G,YAAYzzC,oBAAoB,YAAajU,KAAK2mD,oBACvD9F,GAAK6G,YAAYzzC,oBAAoB,YAAajU,KAAK2mD,oBACvD9F,GAAK6G,YAAYzzC,oBAAoB,WAAYjU,KAAK6mD,kBACtDhG,GAAK6G,YAAYzzC,oBAAoB,UAAWjU,KAAK6mD,kBACrDhG,GAAK6G,YAAYzzC,oBAAoB,aAAcjU,KAAK+mD,qBACxDlG,GAAK6G,YAAYzzC,oBAAoB,YAAajU,KAAKinD,oBACvDpG,GAAK6G,YAAYzzC,oBAAoB,WAAYjU,KAAKmnD,mBAEtDnnD,MAAK2lD,YAAYgC,MAAM3nD,KAAK2lD,YAAYtsC,QAAQwnC,GAAO,IAQjDpkB,GAAAl8B,UAAAoU,cAAR,SAAsBnM,EAAsBo/C,EAAaC,GAAA,GAAAA,QAAA,GAAkC,CAAlCA,EAAA,KAGxD,GAAID,EAAa,CAChBp/C,EAAM04C,QAAU0G,EAAY1G,OAC5B14C,GAAMs/C,OAASF,EAAYE,MAC3Bt/C,GAAM24C,SAAWyG,EAAYzG,QAC7B34C,GAAMm4C,QAAWiH,EAAYG,SAAW,KAAOH,EAAYG,QAAUH,EAAYI,eAAe,GAAGD,OACnGv/C,GAAMo4C,QAAWgH,EAAYK,SAAW,KAAOL,EAAYK,QAAUL,EAAYI,eAAe,GAAGC,QAGpG,GAAIJ,GAAY,KACfA,EAAW7nD,KAAKsgC,iBAGjB,IAAIunB,EAAU,CAEbr/C,EAAMy3C,OAAS4H,EAASvpB,aACxB91B,GAAMmrC,gBAAkBkU,EAASlU,eAEjCnrC,GAAMs4C,GAAK+G,EAAS/G,EAEpBt4C,GAAMk2B,cAAgBmpB,EAASnpB,cAAempB,EAASnpB,cAAch7B,QAAU,IAE/E8E,GAAMu4C,YAAc8G,EAAS9G,YAAa8G,EAAS9G,YAAYr9C,QAAU,IAEzE8E,GAAMoU,MAAQirC,EAASjrC,UACjB,CAENpU,EAAMs4C,GAAK,IACXt4C,GAAMy3C,OAAS,IACfz3C,GAAMk2B,cAAgB1+B,KAAK4lD,WAC3Bp9C,GAAMu4C,YAAc/gD,KAAK4lD,WACzBp9C,GAAMoU,MAAQ,CACdpU,GAAMw4C,iBAAmB,EAI1BhhD,KAAK2G,cAAcrB,KAAKkD,GAOjBi0B,GAAAl8B,UAAAqmD,YAAR,SAAoBp+C,GAEnBA,EAAM0/C,gBAENloD,MAAKmoD,gBAAgB3/C,EAErB,IAAIxI,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAKimD,WAAYjmD,KAAKunD,gBAAkB/+C,GAGrDi0B,GAAAl8B,UAAA6mD,WAAR,SAAmB5+C,GAElBxI,KAAKogC,YAAc,IAEnBpgC,MAAKmoD,gBAAgB3/C,EAErB,IAAIxI,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAK+lD,UAAWv9C,GAG7Bi0B,GAAAl8B,UAAA2mD,YAAR,SAAoB1+C,GAEnBxI,KAAKogC,YAA+B53B,EAAM1F,MAE1C9C,MAAKmoD,gBAAgB3/C,EAErB,IAAIxI,KAAKsgC,kBACRtgC,KAAK2U,cAAe3U,KAAKkmD,WAAY19C,GAG/Bi0B,GAAAl8B,UAAA+lD,QAAR,SAAgB99C,GAEfxI,KAAKmoD,gBAAgB3/C,EAErB,IAAIxI,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAK8lD,YAAat9C,GAG/Bi0B,GAAAl8B,UAAAimD,cAAR,SAAsBh+C,GAErBxI,KAAKmoD,gBAAgB3/C,EAErB,IAAIxI,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAKomD,kBAAmB59C,GAGrCi0B,GAAAl8B,UAAAmmD,YAAR,SAAoBl+C,GAEnBA,EAAM0/C,gBAENloD,MAAKogC,YAA+B53B,EAAM1F,MAE1C9C,MAAKmoD,gBAAgB3/C,EAErB,IAAIxI,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAKgmD,WAAYx9C,GAG9Bi0B,GAAAl8B,UAAAumD,UAAR,SAAkBt+C,GAEjBA,EAAM0/C,gBAENloD,MAAKmoD,gBAAgB3/C,EAErB,IAAIxI,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAK6lD,SAAWr9C,GAG7Bi0B,GAAAl8B,UAAAymD,aAAR,SAAqBx+C,GAEpBxI,KAAKmoD,gBAAgB3/C,EAErB,IAAIxI,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAKmmD,YAAa39C,GAI/Bi0B,GAAAl8B,UAAA4nD,gBAAR,SAAwB3/C,GAEvB,GAAIq4C,EACJ,IAAIuH,EACJ,IAAIC,GAAiB7/C,EAAMu/C,SAAW,KAAOv/C,EAAMu/C,QAAUv/C,EAAMw/C,eAAe,GAAGD,OACrF,IAAIO,GAAiB9/C,EAAMy/C,SAAW,KAAOz/C,EAAMy/C,QAAUz/C,EAAMw/C,eAAe,GAAGC,OACrF,IAAIh7C,GAAajN,KAAK2lD,YAAYzoD,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAAK,CACpCkkD,EAAO7gD,KAAK2lD,YAAYhpD,EACxBkkD,GAAK3jB,cAAchgC,OAAS,CAC5BkrD,GAASvH,EAAK6G,YAAYa,uBAE1B,IAAI//C,EAAMggD,QAAS,CAClB,GAAIC,EACJ,IAAIx7C,GAAazE,EAAMggD,QAAQtrD,MAC/B,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAAK,CACpC8rD,EAAQjgD,EAAMggD,QAAQ7rD,EACtBkkD,GAAK3jB,cAAc53B,KAAK,GAAIokB,GAAW++B,EAAMV,QAAUK,EAAO93C,KAAMm4C,EAAMR,QAAUG,EAAO73C,IAAKk4C,EAAMC,cAIxG,GAAI1oD,KAAKqgC,cACR,QAED,IAAIgoB,EAASD,EAAO93C,MAAQ+3C,EAASD,EAAOv2C,OAASy2C,EAASF,EAAO73C,KAAO+3C,EAASF,EAAO53C,OAAQ,CACnGqwC,EAAK1iB,SAAW,IAChB0iB,GAAKziB,SAAW,SACV,CACNyiB,EAAK1iB,SAAWkqB,EAASD,EAAO93C,IAChCuwC,GAAKziB,SAAWkqB,EAASF,EAAO73C,GAEhCswC,GAAKxf,gBAEL,IAAIwf,EAAKtf,aAAevhC,KAAKsgC,kBAC5B,OAIHtgC,KAAKqgC,cAAgB,KAEvB,OAAA5D,KAEsBr/B,GAAAJ,QAAby/B,IxE81YNtkB,gCAAgC/W,UAAUqoB,qCAAqC,qCAAqCmtB,uCAAuC,uCAAuCptB,iDAAiD,mDAAmDm/B,4CAA4C,SAASzsD,EAAQkB,EAAOJ,GyE9qZ7W,GAAOiJ,GAAQ/J,EAAgB,gCAK/B,IAAO0sD,GAAc1sD,EAAc,uCAEnC,IAAM2sD,GAAY,WA6BjB,QA7BKA,KAAN,GAAAniD,GAAA1G,IAISA,MAAA8oD,aAAuB,IACvB9oD,MAAA4lD,YAAuB,GAAI3/C,EAO3BjG,MAAA2G,cAAsC,GAAIzE,MAO1ClC,MAAA+oD,UAA2B,GAAIH,GAAeA,EAAelG,UAC7D1iD,MAAAgpD,YAA6B,GAAIJ,GAAeA,EAAepG,YAC/DxiD,MAAAipD,WAA4B,GAAIL,GAAeA,EAAenG,WAC9DziD,MAAAkpD,UAA2B,GAAIN,GAAeA,EAAerG,UAC7DviD,MAAAmpD,WAA4B,GAAIP,GAAeA,EAAejG,WAQrE3iD,MAAKopD,aAAe,GAAIlnD,MACxBlC,MAAKqpD,kBAAoB,GAAI1oD,OAC7BkoD,GAAaS,6BAA+B,GAAI3oD,OAChDkoD,GAAaU,oCAAsC,GAAI5oD,OAEvDX,MAAKwpD,qBAAuB,SAAChhD,GAAqB,MAAA9B,GAAK+iD,aAAajhD,GACpExI,MAAK0pD,oBAAsB,SAAClhD,GAAqB,MAAA9B,GAAKijD,YAAYnhD,GAClExI,MAAK4pD,mBAAqB,SAACphD,GAAqB,MAAA9B,GAAKmjD,WAAWrhD,IAGnDqgD,EAAAnvB,YAAd,WAEC,GAAI15B,KAAKqnD,UACR,MAAOrnD,MAAKqnD,SAEb,OAAQrnD,MAAKqnD,UAAY,GAAIwB,GAOvBA,GAAAtoD,UAAA8gC,eAAP,SAAsByoB,IAWfjB,GAAAtoD,UAAAwpD,gBAAP,SAAuBD,GAEtB,GAAIntD,EACJ,KAAKA,EAAI,EAAGA,EAAIqD,KAAKgqD,kBAAmBrtD,EAAG,CAC1CqD,KAAKiqD,YAAcjqD,KAAKopD,aAAazsD,EAErCqD,MAAKsgC,kBAAoBuoB,EAAaS,6BAA8BtpD,KAAKiqD,YAAYtnD,GACrF3C,MAAKsnD,yBAA2BuB,EAAaU,oCAAqCvpD,KAAKiqD,YAAYtnD,GACnG,IAAI3C,KAAKsgC,mBAAqBtgC,KAAKsnD,yBAA0B,CAC5D,GAAItnD,KAAKsnD,yBACRtnD,KAAK2U,cAAc3U,KAAK+oD,UAAW/oD,KAAKkqD,gBAAiBlqD,KAAKsnD,yBAA0BtnD,KAAKiqD,YAC9F,IAAIjqD,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAKmpD,WAAYnpD,KAAKkqD,gBAAiBlqD,KAAKsgC,kBAAmBtgC,KAAKiqD,aAGzF,GAAIH,GAAkB9pD,KAAKsgC,kBAC1BtgC,KAAK2U,cAAc3U,KAAKipD,WAAYjpD,KAAKkqD,gBAAiBlqD,KAAKsgC,kBAAmBtgC,KAAKiqD,aAGzF,GAAIzhD,EACJ,IAAIg/C,EzE8oZE,IyE3oZFv6C,GAAajN,KAAK2G,cAAczJ,MACpC,KAAKP,EAAI,EAAGA,EAAIsQ,IAAOtQ,EAAG,CAEzB6L,EAAQxI,KAAK2G,cAAchK,EAC3B6qD,GAAah/C,EAAMy3C,MAEnB,OAAOuH,IAAeA,EAAW1wC,mBAChC0wC,EAAaA,EAAWC,MAEzB,IAAID,EACHA,EAAWl8C,cAAc9C,GAE3BxI,KAAK2G,cAAczJ,OAAS,CAE5B8C,MAAK8oD,aAAe,KAEpB,KAAKnsD,EAAI,EAAGA,EAAIqD,KAAKgqD,kBAAmBrtD,EAAG,CAC1CqD,KAAKiqD,YAAcjqD,KAAKopD,aAAczsD,EACtCksD,GAAaU,oCAAqCvpD,KAAKiqD,YAAYtnD,IAAOkmD,EAAaS,6BAA8BtpD,KAAKiqD,YAAYtnD,KAIjIkmD,GAAAtoD,UAAA29B,aAAP,SAAoB2iB,GAEnBA,EAAK6G,YAAYp/C,iBAAiB,aAActI,KAAKwpD,qBACrD3I,GAAK6G,YAAYp/C,iBAAiB,YAAatI,KAAK0pD,oBACpD7I,GAAK6G,YAAYp/C,iBAAiB,WAAYtI,KAAK4pD,oBAG7Cf,GAAAtoD,UAAAogC,eAAP,SAAsBkgB,GAErBA,EAAK6G,YAAYzzC,oBAAoB,aAAcjU,KAAKwpD,qBACxD3I,GAAK6G,YAAYzzC,oBAAoB,YAAajU,KAAK0pD,oBACvD7I,GAAK6G,YAAYzzC,oBAAoB,WAAYjU,KAAK4pD,oBAO/Cf,GAAAtoD,UAAAoU,cAAR,SAAsBnM,EAAsBo/C,EAAwBC,EAA6BY,GAGhGjgD,EAAM04C,QAAU0G,EAAY1G,OAC5B14C,GAAMs/C,OAASF,EAAYE,MAC3Bt/C,GAAM24C,SAAWyG,EAAYzG,QAC7B34C,GAAMm4C,QAAU8H,EAAM5+C,CACtBrB,GAAMo4C,QAAU6H,EAAM1+C,CACtBvB,GAAM2hD,aAAe1B,EAAM9lD,EAG3B,IAAIklD,EAAU,CAEbr/C,EAAMy3C,OAAS4H,EAASvpB,aACxB91B,GAAMmrC,gBAAkBkU,EAASlU,eAEjCnrC,GAAMs4C,GAAK+G,EAAS/G,EAEpBt4C,GAAMk2B,cAAgBmpB,EAASnpB,cAAempB,EAASnpB,cAAch7B,QAAU,IAE/E8E,GAAMu4C,YAAc8G,EAAS9G,YAAa8G,EAAS9G,YAAYr9C,QAAU,IAEzE8E,GAAMoU,MAAQirC,EAASjrC,KAEvBpU,GAAMw4C,iBAAmB6G,EAASjrC,UAE5B,CAENpU,EAAMs4C,GAAK,IACXt4C,GAAMy3C,OAAS,IACfz3C,GAAMk2B,cAAgB1+B,KAAK4lD,WAC3Bp9C,GAAMu4C,YAAc/gD,KAAK4lD,WACzBp9C,GAAMoU,MAAQ,CACdpU,GAAMw4C,iBAAmB,EAI1BhhD,KAAK2G,cAAcrB,KAAKkD,GAOjBqgD,GAAAtoD,UAAAkpD,aAAR,SAAqBjhD,GAGpB,GAAIigD,GAAmB,GAAI/+B,EAI3B1pB,MAAKgqD,iBACLhqD,MAAKopD,aAAa9jD,KAAKmjD,EACvBzoD,MAAKqpD,kBAAmBZ,EAAM9lD,IAAO8lD,CAIrCzoD,MAAKsgC,kBAAoBuoB,EAAaS,6BAA8Bb,EAAM9lD,GAC1E,IAAI3C,KAAKsgC,kBACRtgC,KAAK2U,cAAc3U,KAAKgpD,YAAaxgD,EAAOxI,KAAKsgC,kBAAmBmoB,EAErEzoD,MAAK8oD,aAAe,KAGbD,GAAAtoD,UAAAopD,YAAR,SAAoBnhD,IAkBZqgD,GAAAtoD,UAAAspD,WAAR,SAAmBrhD,IAiBpB,OAAAqgD,KAKA,IAAMn/B,GAAU,WAAhB,QAAMA,MAKN,MAAAA,KA2E+GtsB,GAAAJ,QAlFtG6rD,IzEunZN1wC,gCAAgC/W,UAAUihD,uCAAuC,yCAAyCsC,8CAA8C,SAASzoD,EAAQkB,EAAOJ,GACnM,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0Ex2ZtB,IAAO+pD,GAAOluD,EAAgB,gCAE9B,IAAOmuD,GAAYnuD,EAAe,4CAClC,IAAO+mD,GAAe/mD,EAAc,8C1E82ZpC,I0Ev2ZM8mD,GAAa,SAAAtiD,GAASX,EAAtBijD,EAAatiD,EAyBlB,SAzBKsiD,GAyBOsH,EAAuB7iB,GAAvB,GAAA6iB,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAA7iB,QAAA,GAAgB,CAAhBA,EAAA,EAElC/mC,EAAAzD,KAAA+C,KAAMsqD,EAAY7iB,EAvBRznC,MAAAuqD,eAAyB,KA0B7B,IAAID,YAAsBF,GACtBpqD,KAAKue,QAAU,GAAI0kC,GArB9BtiD,OAAAC,eAAWoiD,EAAAziD,UAAA,a1E42ZJM,I0E52ZP,WAEC,MAAOmiD,GAAc9hD,W1E62ZfH,WAAY,KACZC,aAAc,M0Er1ZlBL,QAAAC,eAAWoiD,EAAAziD,UAAA,iB1E21ZPM,I0E31ZJ,WAEI,MAAOb,MAAKuqD,gB1E41ZZjnD,I0E11ZJ,SAAyByF,GAErB,GAAI/I,KAAKuqD,gBAAkBxhD,EACvB,MAEJ/I,MAAKuqD,eAAiBxhD,CAEtB/I,MAAKoJ,c1Ey1ZLrI,WAAY,KACZC,aAAc,M0En1ZlBL,QAAAC,eAAWoiD,EAAAziD,UAAA,W1Ey1ZPM,I0Ez1ZJ,WAEI,MAAOb,MAAKw4C,U1E01ZZl1C,I0Ev1ZJ,SAAmByF,GAEf,GAAI/I,KAAKw4C,UAAYzvC,EACjB,MAEJ,IAAI/I,KAAKw4C,SACLx4C,KAAKy4C,cAAcz4C,KAAKw4C,SAE5Bx4C,MAAKw4C,SAAWzvC,CAEhB,IAAI/I,KAAKw4C,SACLx4C,KAAK04C,WAAW14C,KAAKw4C,SAEzBx4C,MAAKwqD,qB1Eo1ZLzpD,WAAY,KACZC,aAAc,M0E55ZPgiD,GAAA9hD,UAAmB,2BAyElC,OAAA8hD,IA3E4BqH,EA6ELjtD,GAAAJ,QAAdgmD,I1Ew1ZNyH,gCAAgCrpD,UAAUspD,4CAA4C,4CAA4C9F,8CAA8C,gDAAgD+F,6CAA6C,SAASzuD,EAAQkB,EAAOJ,GAYxS,G2Eh7ZM4tD,GAAY,WAAlB,QAAMA,MAMSA,EAAAC,OAAgB,CAMhBD,GAAAE,OAAgB,CAMhBF,GAAAt2C,IAAa,CAC5B,OAAAs2C,KAEAxtD,GAAsBJ,QAAb4tD,O3Ei7ZHF,6CAA6C,SAASxuD,EAAQkB,EAAOJ,GAC3E,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Et9ZtB,IAAOu3C,GAAS17C,EAAe,kCAC/B,IAAO6uD,GAAS7uD,EAAe,kCAG/B,IAAOyJ,GAAczJ,EAAc,sCAInC,IAAOi8B,GAAUj8B,EAAe,oCAChC,IAAOsE,GAAStE,EAAe,oCAO/B,IAAOgwC,GAAgBhwC,EAAc,6CAIrC,IAAO8hB,GAAK9hB,EAAgB,gCAC5B,IAAO6hB,GAAU7hB,EAAe,uC5Es9ZhC,I4Ez8ZMmuD,GAAY,SAAA3pD,GAASX,EAArBsqD,EAAY3pD,EAwDjB,SAxDK2pD,GAwDOC,EAAuB7iB,GAxDpC,GAAA/gC,GAAA1G,IAwDa,IAAAsqD,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAA7iB,QAAA,GAAgB,CAAhBA,EAAA,EAElC/mC,EAAAzD,KAAA+C,KAxDOA,MAAA83C,UAA+B,GAAI51C,MAEnClC,MAAAgrD,oBAA8B,KAC9BhrD,MAAAirD,eAAyB,KACzBjrD,MAAAkrD,OAAgB,CAEjBlrD,MAAA+3C,iBAA0B,CAC1B/3C,MAAAmrD,aAAuB,KACtBnrD,MAAAorD,oBAA8B,IAC9BprD,MAAAqrD,sBAA+B,CAC/BrrD,MAAAsrD,qBAA8B,CAE9BtrD,MAAAygB,OAAe,GAAIzC,EAgBpBhe,MAAAurD,sBAA+B,CAE9BvrD,MAAAwrD,WAAqB,KAMrBxrD,MAAAo4C,QAAkC,GAAIl2C,MAIvClC,MAAAg4C,YAAqBJ,EAAU3M,MAE9BjrC,MAAAi4C,WAAqB,KAgB5Bj4C,MAAKmgB,gCAAkC,SAAC3X,GAAqB,MAAA9B,GAAK0Z,wBAAwB5X,GAC1FxI,MAAKygB,OAAOnY,iBAAiByV,EAAWgB,sBAAuB/e,KAAKmgB,gCAEpE,IAAImqC,YAAsBS,GACzB/qD,KAAKygB,OAAO/B,MAAoB4rC,MAC5B,IAAIA,EACRtqD,KAAKygB,OAAO+mB,MAAQjhB,OAAO+jC,EAE5BtqD,MAAKynC,MAAQA,CAEbznC,MAAKyrD,uBAAyB,SAACjjD,GAAqB,MAAA9B,GAAKglD,eAAeljD,GACxExI,MAAKk4C,6BAA+B,SAAC1vC,GAAqB,MAAA9B,GAAKyxC,oBAAoB3vC,GAEnFxI,MAAK2rD,mBAAqB,MAM3BhrD,OAAAC,eAAWypD,EAAA9pD,UAAA,S5Ek6ZJM,I4El6ZP,WAEC,MAAOb,MAAKkrD,Q5Em6ZN5nD,I4Eh6ZP,SAAiByF,GAEhB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI/I,KAAKkrD,QAAUniD,EAClB,MAED/I,MAAKkrD,OAASniD,CAEd,IAAI/I,KAAKmqB,iBAAmB,KAC3BnqB,KAAKmqB,gBAAkB,GAAIxkB,EAE5B3F,MAAKmqB,gBAAgBhhB,gBAAkBJ,CAEvC/I,MAAKoJ,c5E45ZCrI,WAAY,KACZC,aAAc,M4Ev5ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,kB5E65ZJM,I4E75ZP,WAEC,MAAOb,MAAKmqB,iB5E85ZN7mB,I4E35ZP,SAA0ByF,GAEzB/I,KAAKmqB,gBAAkBphB,CAEvB/I,MAAKoJ,c5E25ZCrI,WAAY,KACZC,aAAc,M4Er5ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,iB5E45ZJM,I4E55ZP,WAEC,MAAOb,MAAKirD,gB5E65ZN3nD,I4E15ZP,SAAyByF,GAExB,GAAI/I,KAAKirD,gBAAkBliD,EAC1B,MAED/I,MAAKirD,eAAiBliD,CAEtB/I,MAAKoJ,c5Ey5ZCrI,WAAY,KACZC,aAAc,M4Ep5ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,gB5E05ZJM,I4E15ZP,WAEC,MAAOb,MAAKu4C,e5E25ZNx3C,WAAY,KACZC,aAAc,M4El5ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,e5E25ZJM,I4E35ZP,WAEC,MAAOb,MAAKs4C,e5E45ZNh1C,I4Ez5ZP,SAAuByF,GAEtB,GAAI/I,KAAKs4C,eAAiBvvC,EACzB,MAED,IAAI/I,KAAKs4C,cACRt4C,KAAKs4C,cAAcrkC,oBAAoBkkB,EAAW0gB,WAAY74C,KAAKyrD,uBAEpEzrD,MAAKs4C,cAAgBvvC,CAErB,IAAI/I,KAAKs4C,cACRt4C,KAAKs4C,cAAchwC,iBAAiB6vB,EAAW0gB,WAAY74C,KAAKyrD,uBAEjEzrD,MAAKoJ,c5Es5ZCrI,WAAY,KACZC,aAAc,M4Ej5ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,a5Eu5ZJM,I4Ev5ZP,WAEC,MAAOb,MAAKi4C,Y5Ew5ZN30C,I4Er5ZP,SAAqByF,GAEpB,GAAI/I,KAAKi4C,YAAclvC,EACtB,MAED/I,MAAKi4C,WAAalvC,CAElB/I,MAAKq4C,oB5Eo5ZCt3C,WAAY,KACZC,aAAc,M4E94ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,S5Eo5ZJM,I4Ep5ZP,WAEC,MAAOb,MAAKygB,Q5Eq5ZNnd,I4El5ZP,SAAiByF,GAEhB,GAAI/I,KAAKygB,QAAU1X,EAClB,MAED,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOxM,oBAAoB8J,EAAWgB,sBAAuB/e,KAAKmgB,gCAExEngB,MAAKygB,OAAS1X,CAEd,IAAI/I,KAAKygB,OACRzgB,KAAKygB,OAAOnY,iBAAiByV,EAAWgB,sBAAuB/e,KAAKmgB,gCAErEngB,MAAKq4C,oB5E+4ZCt3C,WAAY,KACZC,aAAc,M4E14ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,c5Eg5ZJM,I4Eh5ZP,WAEC,MAAOb,MAAKmrD,c5Ei5ZN7nD,I4E94ZP,SAAsByF,GAErB,GAAI/I,KAAKmrD,cAAgBpiD,EACxB,MAED/I,MAAKmrD,aAAepiD,CAEpB/I,MAAKq4C,oB5E64ZCt3C,WAAY,KACZC,aAAc,M4Ex4ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,qB5E84ZJM,I4E94ZP,WAEC,MAAOb,MAAKgrD,qB5E+4ZN1nD,I4E54ZP,SAA6ByF,GAE5B,GAAI/I,KAAKgrD,qBAAuBjiD,EAC/B,MAED/I,MAAKgrD,oBAAsBjiD,CAE3B/I,MAAKq4C,oB5E24ZCt3C,WAAY,KACZC,aAAc,M4Er4ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,sB5E44ZJM,I4E54ZP,WAEC,MAAOb,MAAKorD,qB5E64ZN9nD,I4E14ZP,SAA8ByF,GAE7B,GAAI/I,KAAKorD,qBAAuBriD,EAC/B,MAED/I,MAAKorD,oBAAsBriD,CAE3B/I,MAAKq4C,oB5Ey4ZCt3C,WAAY,KACZC,aAAc,M4Ej4ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,uB5E04ZJM,I4E14ZP,WAEC,MAAOb,MAAKsrD,sB5E24ZNhoD,I4Ex4ZP,SAA+ByF,GAE9B,GAAI/I,KAAKsrD,sBAAwBviD,EAChC,MAED/I,MAAKsrD,qBAAuBviD,CAE5B/I,MAAKq4C,oB5Eu4ZCt3C,WAAY,KACZC,aAAc,M4E/3ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,wB5Ew4ZJM,I4Ex4ZP,WAEC,MAAOb,MAAKqrD,uB5Ey4ZN/nD,I4Et4ZP,SAAgCyF,GAE/B,GAAI/I,KAAKqrD,uBAAyBtiD,EACjC,MAED/I,MAAKqrD,sBAAwBtiD,CAE7B/I,MAAKq4C,oB5Eq4ZCt3C,WAAY,KACZC,aAAc,M4Eh4ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,a5Es4ZJM,I4Et4ZP,WAEC,MAAOb,MAAKwrD,Y5Eu4ZNloD,I4Ep4ZP,SAAqByF,GAEpB,GAAI/I,KAAKwrD,WAAaziD,EACrB,MAED/I,MAAKwrD,WAAaziD,CAElB/I,MAAKq4C,oB5Em4ZCt3C,WAAY,KACZC,aAAc,M4Ev3ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,a5Eo4ZJM,I4Ep4ZP,WAEC,MAAOb,MAAKg4C,a5Eq4ZN10C,I4El4ZP,SAAqByF,GAEpB,GAAI/I,KAAKg4C,aAAejvC,EACvB,MAED/I,MAAKg4C,YAAcjvC,CAEnB/I,MAAKoJ,c5Ei4ZCrI,WAAY,KACZC,aAAc,M4E13ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,sB5Ek4ZJM,I4El4ZP,WAEC,MAAOb,MAAK4rD,qB5Em4ZNtoD,I4Eh4ZP,SAA8ByF,GAE7B,GAAI/I,KAAK4rD,qBAAuB7iD,EAC/B,MAED/I,MAAK4rD,oBAAsB7iD,CAE3B/I,MAAKq4C,oB5E+3ZCt3C,WAAY,KACZC,aAAc,M4Ex3ZrBL,QAAAC,eAAWypD,EAAA9pD,UAAA,kB5Eg4ZJM,I4Eh4ZP,WAEC,MAAOb,MAAK+3C,kB5Ei4ZNz0C,I4E93ZP,SAA0ByF,GAEzB,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI/I,KAAK+3C,kBAAoBhvC,EAC5B,MAED/I,MAAK+3C,iBAAmBhvC,CAExB/I,MAAKq4C,oB5E43ZCt3C,WAAY,KACZC,aAAc,M4E92ZdqpD,GAAA9pD,UAAAigB,UAAP,SAAiBqrC,GAEhB7rD,KAAKo4C,QAAQ9yC,KAAKumD,EAElB,IAAIC,EACJ,IAAIzrC,GAAiCwrC,EAAMxrC,QAE3C,IAAIA,EACHyrC,EAA+BzrC,EAASyrC,YAEzC,IAAID,EAAMxrC,SAAU,CACnB,GAAIrgB,KAAKu4C,eAAiBuT,GAAgB9rD,KAAKu4C,cAAe,CAC7D,KAAM,IAAI17C,OAAM,iGACV,CACN,GAAImD,KAAKu4C,eAAiBuT,EAAc,CAEvC9rD,KAAKu4C,cAAgBuT,CAErB9rD,MAAK+rD,wBAKRF,EAAMnrC,wBASA2pC,GAAA9pD,UAAAggB,aAAP,SAAoBsrC,GAEnB7rD,KAAKo4C,QAAQh/B,OAAOpZ,KAAKo4C,QAAQ/+B,QAAQwyC,GAAQ,EAEjD,IAAI7rD,KAAKo4C,QAAQl7C,QAAU,EAAG,CAC7B8C,KAAKu4C,cAAgB,IAErBv4C,MAAK+rD,sBAGNF,EAAMnrC,wBAQP/f,QAAAC,eAAWypD,EAAA9pD,UAAA,W5Ei3ZJM,I4Ej3ZP,WAEC,MAAOb,MAAKo4C,S5Ek3ZNr3C,WAAY,KACZC,aAAc,M4Eh3ZdqpD,GAAA9pD,UAAAo4C,eAAP,WAEC,MAAO34C,MAAK83C,UAAU56C,OAGhBmtD,GAAA9pD,UAAAysC,aAAP,SAAoBpwB,GAEnB,MAAO5c,MAAK83C,UAAUl7B,GAQhBytC,GAAA9pD,UAAA83C,iBAAP,WAECr4C,KAAKsL,cAAc,GAAI4gC,GAAiBA,EAAiB0M,kBAAmB54C,OAGrEqqD,GAAA9pD,UAAAwrD,oBAAR,WAEC/rD,KAAKsL,cAAc,GAAI4gC,GAAiBA,EAAiByV,qBAAsB3hD,OAGzEqqD,GAAA9pD,UAAAyrD,uBAAP,WAEC,GAAI/+C,GAAajN,KAAKo4C,QAAQl7C,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAC/BqD,KAAKo4C,QAAQz7C,GAAG+jB,wBAMV2pC,GAAA9pD,UAAAmrD,eAAR,SAAuBljD,GAEtBxI,KAAKoJ,aAGCihD,GAAA9pD,UAAAiqD,kBAAP,WAECxqD,KAAKsL,cAAc,GAAI4gC,GAAiBA,EAAiBW,mBAAoB7sC,OAGvEqqD,GAAA9pD,UAAA0rD,aAAP,SAAoB1tC,EAAqB3B,GAExC,GAAIjgB,GAAWqD,KAAK83C,UAAUz+B,QAAQkF,EAEtC,IAAI5hB,GAAKigB,EACR,WACI,IAAIjgB,IAAM,EACdqD,KAAK83C,UAAU1+B,OAAOzc,EAAG,EAE1BqD,MAAK83C,UAAU1+B,OAAOwD,EAAO,EAAG2B,EAEhCA,GAAQjW,iBAAiB6vB,EAAW0gB,WAAY74C,KAAKk4C,6BAErDl4C,MAAKm4C,sBAGCkS,GAAA9pD,UAAAm4C,WAAP,SAAkBn6B,GAEjB,GAAIve,KAAK83C,UAAUz+B,QAAQkF,KAAa,EACvC,MAEDve,MAAK83C,UAAUxyC,KAAKiZ,EAEpBA,GAAQjW,iBAAiB6vB,EAAW0gB,WAAY74C,KAAKk4C,6BAErDl4C,MAAKm4C,sBAGCkS,GAAA9pD,UAAAk4C,cAAP,SAAqBl6B,GAEpBve,KAAK83C,UAAU1+B,OAAOpZ,KAAK83C,UAAUz+B,QAAQkF,GAAU,EAEvDA,GAAQtK,oBAAoBkkB,EAAW0gB,WAAY74C,KAAKk4C,6BAExDl4C,MAAKm4C,sBAGEkS,GAAA9pD,UAAA43C,oBAAR,SAA4B3vC,GAAA,GAAAA,QAAA,GAAuB,CAAvBA,EAAA,KAE3BxI,KAAKq4C,kBAELr4C,MAAKgsD,yBAGE3B,GAAA9pD,UAAA6f,wBAAR,SAAgC5X,GAE/BxI,KAAKq4C,mBAEP,OAAAgS,IAljB2B7pD,EAojB3BpD,GAAsBJ,QAAbqtD,I5Eo1ZNjvB,oCAAoCh6B,UAAUyW,sCAAsCzW,UAAU03C,kCAAkC13C,UAAU8qD,kCAAkC9qD,UAAUD,oCAAoCC,UAAUyc,gCAAgC,gCAAgCyvB,6CAA6C,6CAA6CruB,uCAAuC,yCAAyCktC,6DAA6D,SAASjwD,EAAQkB,EAAOJ,GACtiB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6E96atB,IAAOG,GAAStE,EAAe,oC7Ew7a/B,I6Ex6aMkwD,GAAe,SAAA1rD,GAASX,EAAxBqsD,EAAe1rD,EAqBpB,SArBK0rD,KAuBJ1rD,EAAAzD,KAAA+C,KAnBMA,MAAAqsD,iBAA0B,CAC1BrsD,MAAAssD,uBAAgC,CAChCtsD,MAAAusD,wBAAiC,CACjCvsD,MAAAwsD,8BAAuC,CACvCxsD,MAAAysD,iBAA0B,EAqB1BL,EAAA7rD,UAAAU,QAAP,YAOAN,QAAAC,eAAWwrD,EAAA7rD,UAAA,a7E05aJM,I6E15aP,WAEC,MAAOurD,GAAgBlrD,W7E25ajBH,WAAY,KACZC,aAAc,M6Et5arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,wB7E45aJM,I6E55aP,WAEC,MAAOb,MAAKssD,wB7E65aNvrD,WAAY,KACZC,aAAc,M6Ex5arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,kB7E85aJM,I6E95aP,WAEC,MAAOb,MAAKqsD,kB7E+5aNtrD,WAAY,KACZC,aAAc,M6E15arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,+B7Eg6aJM,I6Eh6aP,WAEC,MAAOb,MAAKwsD,+B7Ei6aNzrD,WAAY,KACZC,aAAc,M6E55arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,yB7Ek6aJM,I6El6aP,WAEC,MAAOb,MAAKusD,yB7Em6aNxrD,WAAY,KACZC,aAAc,M6E95arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,kB7Eo6aJM,I6Ep6aP,WAEC,MAAOb,MAAKysD,kB7Eq6aN1rD,WAAY,KACZC,aAAc,M6Eh6arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,e7Es6aJM,I6Et6aP,WAEC,MAAOb,MAAK0sD,e7Eu6aN3rD,WAAY,KACZC,aAAc,M6El6arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,qB7Ew6aJM,I6Ex6aP,WAEC,MAAOb,MAAK2sD,qB7Ey6aN5rD,WAAY,KACZC,aAAc,M6Ep6arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,sB7E06aJM,I6E16aP,WAEC,MAAOb,MAAK4sD,sB7E26aN7rD,WAAY,KACZC,aAAc,M6Et6arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,4B7E46aJM,I6E56aP,WAEC,MAAOb,MAAK6sD,4B7E66aN9rD,WAAY,KACZC,aAAc,M6Ex6arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,e7E86aJM,I6E96aP,WAEC,MAAOb,MAAK8sD;E7E+6aN/rD,WAAY,KACZC,aAAc,M6E16arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,qB7Eg7aJM,I6Eh7aP,WAEC,MAAOb,MAAK+sD,qB7Ei7aNhsD,WAAY,KACZC,aAAc,M6E56arBL,QAAAC,eAAWwrD,EAAA7rD,UAAA,mB7Ek7aJM,I6El7aP,WAEC,MAAOb,MAAKgtD,mB7Em7aNjsD,WAAY,KACZC,aAAc,M6E96adorD,GAAA7rD,UAAA0sD,cAAP,SAAqBlxC,GAEpB/b,KAAKktD,mBAAmBnxC,GAOjBqwC,GAAA7rD,UAAA2sD,mBAAR,SAA2BnxC,G7Em7apB,G6Eh7aFoxC,GAAqBpxC,EAAOjI,aAChC,IAAIs5C,EAEJ,IAAI/4B,GAAY84B,EAAUtjD,EAAGyqB,EAAY64B,EAAUpjD,EAAGwqB,EAAY44B,EAAUljD,CAC5E,IAAIkJ,GAAWC,EAAWC,CAC1B,IAAIuoC,GAAUyR,EAAe,CAC7B,IAAI1wD,EAGJ,KAAKA,EAAI,EAAGA,EAAIqD,KAAKysD,mBAAoB9vD,EAAG,CAE3CywD,EAAWptD,KAAK8sD,cAAcnwD,GAAGmX,aACjCX,GAAKkhB,EAAK+4B,EAASvjD,CACnBuJ,GAAKkhB,EAAK84B,EAASrjD,CACnBsJ,GAAKkhB,EAAK64B,EAASnjD,CAEnB2xC,GAAIzoC,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,CAGvBuoC,GAAIA,EAAI,KAAQ,EAAEA,EAAI,GACtB57C,MAAK+sD,oBAAoBpwD,GAAKi/C,CAC9ByR,IAASzR,EAIVyR,EAAQ,EAAEA,CAEV,KAAK1wD,EAAI,EAAGA,EAAIqD,KAAKysD,mBAAoB9vD,EACxCqD,KAAK+sD,oBAAoBpwD,IAAM0wD,EAlLnBjB,GAAAlrD,UAAmB,qBAoLlC,OAAAkrD,IAtL8B5rD,EAwLLpD,GAAAJ,QAAhBovD,I7E46aNjrD,oCAAoCC,YAAYksD,+DAA+D,SAASpxD,EAAQkB,EAAOJ,GAC1I,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8E1nbtB,IAAO83B,GAAUj8B,EAAe,oCAGhC,IAAOoB,GAAgBpB,EAAc,+CACrC,IAAO2B,GAAU3B,EAAe,yCAChC,IAAO0B,GAAU1B,EAAe,yCAChC,IAAOie,GAAUje,EAAe,uCAChC,IAAOkwD,GAAelwD,EAAc,4D9EgobpC,I8EznbMqxD,GAAiB,SAAA7sD,GAASX,EAA1BwtD,EAAiB7sD,EAStB,SATK6sD,GASOC,GATb,GAAA9mD,GAAA1G,IAWEU,GAAAzD,KAAA+C,KAEAA,MAAKytD,4BAA8B,SAACjlD,GAAqB,MAAA9B,GAAKgnD,mBAAmBllD,GAEjFxI,MAAKwtD,OAASA,EAMf7sD,OAAAC,eAAW2sD,EAAAhtD,UAAA,U9EonbJM,I8EpnbP,WAEC,MAAOb,MAAK2tD,S9EqnbNrqD,I8ElnbP,SAAkByF,GAEjB,GAAI6kD,GAAwB,CAC5B,IAAIC,GAA8B,CAClC,IAAIC,GAA+B,CACnC,IAAIC,GAAqC,CACzC,IAAIC,GAAwB,CAC5B,IAAIvyC,EAEJ,IAAIzb,KAAK2tD,QACR3tD,KAAKiuD,gBAENjuD,MAAK2tD,QAAU5kD,CACf/I,MAAKgtD,kBAAoBjkD,CACzB/I,MAAK0sD,cAAgB,GAAIxqD,MACzBlC,MAAK4sD,qBAAuB,GAAI1qD,MAChClC,MAAK2sD,oBAAsB,GAAIzqD,MAC/BlC,MAAK6sD,2BAA6B,GAAI3qD,MACtClC,MAAK8sD,cAAgB,GAAI5qD,MAEzB,IAAI+K,GAAalE,EAAM7L,MAEvB,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EAAG,CACpC8e,EAAQ1S,EAAMpM,EACd8e,GAAMnT,iBAAiB6R,EAAWuB,oBAAqB1b,KAAKytD,4BAE5D,IAAIhyC,YAAiB7d,GAAY,CAChC,GAAI6d,EAAMxT,aACTjI,KAAK4sD,qBAAqBkB,KAAwCryC,MAElEzb,MAAK0sD,cAAckB,KAAiCnyC,MAE/C,IAAIA,YAAiBne,GAAkB,CAC7C,GAAIme,EAAMxT,aACTjI,KAAK6sD,2BAA2BkB,KAAoDtyC,MAEpFzb,MAAK2sD,oBAAoBkB,KAA6CpyC,MAEjE,IAAIA,YAAiB5d,GAAY,CACvCmC,KAAK8sD,cAAckB,KAAiCvyC,GAItD,GAAIzb,KAAKssD,wBAA0BuB,GAAwB7tD,KAAKqsD,kBAAoBuB,GAAkB5tD,KAAKysD,kBAAoBuB,GAAkBhuD,KAAKusD,yBAA2BuB,GAAyB9tD,KAAKwsD,+BAAiCuB,EAC/O,MAED/tD,MAAKssD,uBAAyBuB,CAC9B7tD,MAAKwsD,8BAAgCuB,CACrC/tD,MAAKqsD,iBAAmBuB,CACxB5tD,MAAKusD,wBAA0BuB,CAC/B9tD,MAAKysD,iBAAmBuB,CAGxBhuD,MAAK+sD,oBAAsB,GAAI7qD,OAAc8a,KAAKkxC,KAAKF,EAAe,GAAG,EAGzEhuD,MAAKsL,cAAc,GAAI6sB,GAAWA,EAAW0gB,WAAY74C,Q9E0mbnDe,WAAY,KACZC,aAAc,M8EpmbbusD,GAAAhtD,UAAA0tD,eAAR,WAEC,GAAIhhD,GAAajN,KAAK2tD,QAAQzwD,MAC9B,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EACjCqD,KAAK2tD,QAAQhxD,GAAGsX,oBAAoBkG,EAAWuB,oBAAqB1b,KAAKytD,6BAMnEF,GAAAhtD,UAAAmtD,mBAAR,SAA2BllD,GAK1B,GAAIiT,GAA8BjT,EAAM1F,MAExC,IAAI2Y,YAAiB7d,GACpBoC,KAAKmuD,mBAAgC1yC,OACjC,IAAIA,YAAiBne,GACzB0C,KAAKouD,yBAA4C3yC,EAElDzb,MAAKsL,cAAc,GAAI6sB,GAAWA,EAAW0gB,WAAY74C,OAMlDutD,GAAAhtD,UAAA6tD,yBAAR,SAAiC3yC,GAEhC,GAAI4yC,GAAyC5yC,CAE7C,IAAIA,EAAMxT,aAAc,GACrBjI,KAAKssD,yBACLtsD,KAAKwsD,6BAGPxsD,MAAK2sD,oBAAoBvzC,OAAOpZ,KAAK2sD,oBAAoBtzC,QAAQg1C,GAAK,EACtEruD,MAAK6sD,2BAA2BvnD,KAAKmW,OAE/B,GACJzb,KAAKssD,yBACLtsD,KAAKwsD,6BAEPxsD,MAAK6sD,2BAA2BzzC,OAAOpZ,KAAK6sD,2BAA2BxzC,QAAQg1C,GAAK,EACpFruD,MAAK2sD,oBAAoBrnD,KAAKmW,IAOxB8xC,GAAAhtD,UAAA4tD,mBAAR,SAA2B1yC,GAE1B,GAAI6yC,GAA6B7yC,CAEjC,IAAIA,EAAMxT,aAAc,GACrBjI,KAAKqsD,mBACLrsD,KAAKusD,uBACPvsD,MAAK0sD,cAActzC,OAAOpZ,KAAK0sD,cAAcrzC,QAAQi1C,GAAK,EAC1DtuD,MAAK4sD,qBAAqBtnD,KAAKmW,OACzB,GACJzb,KAAKqsD,mBACLrsD,KAAKusD,uBAEPvsD,MAAK4sD,qBAAqBxzC,OAAOpZ,KAAK4sD,qBAAqBvzC,QAAQi1C,GAAK,EACxEtuD,MAAK0sD,cAAcpnD,KAAKmW,IAG3B,OAAA8xC,IA9JgCnB,EAgKhChvD,GAA2BJ,QAAlBuwD,I9E4lbNnyB,oCAAoCh6B,UAAU1C,+CAA+C,+CAA+CC,yCAAyC,yCAAyCI,yCAAyC,yCAAyCmd,uCAAuC,uCAAuCiwC,4DAA4D,8DAA8DoC,kEAAkE,SAASryD,EAAQkB,EAAOJ,GACrlB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+E9wbtB,IAAO0F,GAAa7J,EAAc,qCAClC,IAAO+vC,GAAS/vC,EAAe,iCAC/B,IAAOi8B,GAAUj8B,EAAe,oCAChC,IAAOsyD,GAAoBtyD,EAAa,mDAKxC,IAAOmB,GAAMnB,EAAgB,qCAC7B,IAAOyzC,GAAuBzzC,EAAY,qEAG1C,IAAMuyD,GAAmB,SAAA/tD,GAASX,EAA5B0uD,EAAmB/tD,EAexB,SAfK+tD,GAeOC,GAAA,GAAAA,QAAA,GAA+B,CAA/BA,EAAA,EAEXhuD,EAAAzD,KAAA+C,KAdOA,MAAA2uD,sBAAgC,IAgBvC,IAAID,EAAc,GAAKA,EAAc,EACpC,KAAM,IAAI7xD,OAAM,iDAEjBmD,MAAK4uD,aAAeF,CACpB1uD,MAAKuiB,OAGCksC,EAAAluD,UAAAsuD,cAAP,SAAqBjyC,GAEpB,MAAO5c,MAAK8uD,aAAalyC,GAGnB6xC,GAAAluD,UAAAwuD,cAAP,SAAqBnyC,EAAuB7T,GAE3C,GAAIA,EAAQ,EACXA,EAAQ,MACJ,IAAIA,EAAQ,EAChBA,EAAQ,CAET,IAAI6T,GAAS5c,KAAK4uD,aACjB,KAAM,IAAI/xD,OAAM,qDAEjBmD,MAAK8uD,aAAalyC,GAAS7T,EAGrB0lD,GAAAluD,UAAAyuD,oBAAP,SAA2B9gD,GAE1B,MAAOlO,MAAKivD,cAAc/gD,GAAWkhC,eAG9Bqf,GAAAluD,UAAAgiB,KAAR,WAECviB,KAAK8uD,aAAe,GAAI5sD,OAAclC,KAAK4uD,aAC3C5uD,MAAKkvD,oBAAsB,GAAIhtD,OAAclC,KAAK4uD,aAElD,IAAIryD,GAAW,CACf,KAAK,GAAII,GAAmBqD,KAAK4uD,aAAe,EAAGjyD,GAAK,IAAKA,EAAG,CAC/DqD,KAAK8uD,aAAanyD,GAAKJ,CACvBA,IAAK,GAGNyD,KAAKmvD,aAAejtD,OAAe,EAAG,GAAI,EAAG,EAC7ClC,MAAKovD,aAAeltD,MAAc,EAAG,GAAI,GAAI,EAC7ClC,MAAKqvD,eAAiB,GAAIntD,OAAiB,EAC3ClC,MAAKsvD,aAAe,GAAIptD,MACxBlC,MAAKivD,cAAgB,GAAI/sD,MAEzB,KAAKvF,EAAI,EAAGA,EAAIqD,KAAK4uD,eAAgBjyD,EAAG,CACvCqD,KAAKsvD,aAAa3yD,GAAK,GAAI6xD,EAC3BxuD,MAAKivD,cAActyD,GAAK,GAAIU,GAAO2C,KAAKsvD,aAAa3yD,KAIhD8xD,GAAAluD,UAAAgvD,kBAAP,SAAyBxmD,GAExBrI,EAAAH,UAAMgvD,kBAAiBtyD,KAAA+C,KAAC+I,EAExB/I,MAAKwvD,yBAGEf,GAAAluD,UAAAivD,uBAAR,WAECxvD,KAAK2uD,sBAAwB,KAG9BhuD,QAAAC,eAAW6tD,EAAAluD,UAAA,e/E0ubJM,I+E1ubP,WAEC,MAAOb,MAAK4uD,c/E2ubNtrD,I+ExubP,SAAuByF,GAEtB,GAAIA,GAAS/I,KAAK4uD,aACjB,MAED,IAAI7lD,EAAQ,GAAKA,EAAQ,EACxB,KAAM,IAAIlM,OAAM,iDAEjBmD,MAAK4uD,aAAe7lD,CACpB/I,MAAKwvD,wBACLxvD,MAAKuiB,MACLviB,MAAKsL,cAAc,GAAI6sB,GAAWA,EAAW0gB,WAAY74C,Q/EuubnDe,WAAY,KACZC,aAAc,M+ErubdytD,GAAAluD,UAAAkvD,cAAP,SAAqB3sD,EAAwB+R,EAAaqC,GAEzD,GAAIlX,KAAK2uD,sBACR3uD,KAAK0vD,oBAEN1vD,MAAK2vD,kBAAkBC,WAAa5vD,KAAK6vD,YACzC7vD,MAAK2vD,kBAAkBh8C,OAAS3T,KAAK8vD,oBACrC9vD,MAAK2vD,kBAAkB16C,OACvBJ,GAAMmnB,mBAAmBh8B,KAAK2vD,kBAE9Bz4C,GAAS64C,iBAAiB/vD,KAAK2vD,kBAAmB7sD,EAAOktD,QAAShwD,KAAK4uD,aAAc5uD,KAAKqvD,eAAgBrvD,KAAKivD,eAGxGR,GAAAluD,UAAAmvD,mBAAR,WAEC,GAAIO,GAAcjwD,KAAKkwD,eAAe,EAEtClwD,MAAKqvD,eAAe,GAAK,GAAIpjB,GAAU,EAAG,EAAGgkB,EAAMA,EACnDjwD,MAAKqvD,eAAe,GAAK,GAAIpjB,GAAUgkB,EAAM,EAAGA,EAAMA,EACtDjwD,MAAKqvD,eAAe,GAAK,GAAIpjB,GAAU,EAAGgkB,EAAMA,EAAMA,EACtDjwD,MAAKqvD,eAAe,GAAK,GAAIpjB,GAAUgkB,EAAMA,EAAMA,EAAMA,EAEzDjwD,MAAK2uD,sBAAwB,MAGvBF,GAAAluD,UAAA4vD,uBAAP,SAA8BC,GAE7B,GAAIn+B,EACJ,IAAIyN,GAAyB0wB,EAAW1wB,UACxC,IAAI2wB,GAAwB3wB,EAAW4wB,IACvC,IAAIC,GAAyB7wB,EAAW8wB,IAAMH,CAE9CrwD,MAAKywD,oCAAoCL,EAAYA,EAAW1wB,WAAWgxB,eAAgB1wD,KAAK2wD,SAChG3wD,MAAK2wD,SAASC,YAAY,IAAK,IAAK,EACpC5wD,MAAK6wD,yBAAyB5+B,OAASjyB,KAAK2wD,QAC5C3wD,MAAK8wD,kBAAkBV,EAEvB,KAAK,GAAIzzD,GAAmB,EAAGA,EAAIqD,KAAK4uD,eAAgBjyD,EAAG,CAC1Ds1B,EAASjyB,KAAKsvD,aAAa3yD,GAAGs1B,MAE9BjyB,MAAKkvD,oBAAoBvyD,GAAK0zD,EAAiBrwD,KAAK8uD,aAAanyD,GAAG4zD,CACpEvwD,MAAKivD,cAActyD,GAAG0H,UAAUkJ,SAAWvN,KAAK8vD,qBAAqBzrD,UAAUkJ,QAE/EvN,MAAK+wD,0BAA0B9+B,EAAQjyB,KAAK8uD,aAAanyD,GAAIqD,KAAKmvD,aAAaxyD,GAAIqD,KAAKovD,aAAazyD,GAErGqD,MAAKsvD,aAAa3yD,GAAGs1B,OAASA,GAIxBw8B,GAAAluD,UAAAwwD,0BAAR,SAAkC9+B,EAAiB++B,EAAmBC,EAAmBC,GAExF,GAAI3+C,GAAmBxM,EAAc6M,kBACrC,IAAIu+C,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIr6B,GAAc5Q,OAAOkrC,kBAAmBr6B,EAAc7Q,OAAOkrC,kBAAmBp6B,CACpF,IAAIC,GAAc/Q,OAAOmrC,kBAAmBn6B,EAAchR,OAAOmrC,kBAAmBl6B,EAAcjR,OAAOmrC,iBACzG,IAAI/0D,GAAoB,CAExB,OAAOA,EAAI,GAAI,CACdw0D,EAAKnxD,KAAK2xD,eAAeh1D,EACzBy0D,GAAKpxD,KAAK2xD,eAAeh1D,EAAI,EAC7B00D,GAAKrxD,KAAK2xD,eAAeh1D,EAAI,EAC7B20D,GAAKH,GAAMnxD,KAAK2xD,eAAeh1D,EAAI,IAAMw0D,GAAIH,CAC7CO,GAAKH,GAAMpxD,KAAK2xD,eAAeh1D,EAAI,IAAMy0D,GAAIJ,CAC7CQ,GAAKH,GAAMrxD,KAAK2xD,eAAeh1D,EAAI,IAAM00D,GAAIL,CAC7C,IAAIG,EAAKh6B,EACRA,EAAOg6B,CACR,IAAIA,EAAK75B,EACRA,EAAO65B,CACR,IAAIC,EAAKh6B,EACRA,EAAOg6B,CACR,IAAIA,EAAK75B,EACRA,EAAO65B,CACR,IAAIC,EAAK75B,EACRA,EAAO65B,CACR,IAAIC,EAAKn6B,EACRA,EAAOm6B,CACR,IAAIA,EAAKh6B,EACRA,EAAOg6B,CACR,IAAIC,EAAKn6B,EACRA,EAAOm6B,CACR,IAAIA,EAAKh6B,EACRA,EAAOg6B,CACR,IAAIC,EAAKh6B,EACRA,EAAOg6B,CACR70D,IAAK,EAGN06B,EAAO,CAEP,IAAIukB,GAAYtkB,EAAOH,CACvB,IAAIy6B,GAAYr6B,EAAOH,CACvB,IAAIn3B,GAAW,GAAGu3B,EAAOH,EAEzB,IAAIF,EAAO,EACVA,GAAQn3B,KAAK6xD,MACd,IAAIz6B,EAAO,EACVA,GAAQp3B,KAAK6xD,MACd16B,GAAOna,KAAKC,MAAMka,EAAKn3B,KAAK6xD,QAAQ7xD,KAAK6xD,MACzCz6B,GAAOpa,KAAKC,MAAMma,EAAKp3B,KAAK6xD,QAAQ7xD,KAAK6xD,MAEzC,IAAIC,GAAe,EAAE9xD,KAAK6xD,MAC1BjW,GAAI5+B,KAAKC,MAAM2+B,EAAEkW,EAAQ,GAAGA,CAC5BF,GAAI50C,KAAKC,MAAM20C,EAAEE,EAAQ,GAAGA,CAE5Bx6B,GAAOH,EAAOykB,CACdrkB,GAAOH,EAAOw6B,CAEdhW,GAAI,EAAEA,CACNgW,GAAI,EAAEA,CAENr/C,GAAI,GAAK,EAAEqpC,CACXrpC,GAAI,GAAK,EAAEq/C,CACXr/C,GAAI,IAAMtS,CACVsS,GAAI,MAAQ+kB,EAAOH,GAAMykB,CACzBrpC,GAAI,MAAQglB,EAAOH,GAAMw6B,CACzBr/C,GAAI,KAAO8kB,EAAKp3B,CAChBsS,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElF0f,GAAOnf,gBAAgBP,EACvB0f,GAAO2+B,YAAY,IAAK,IAAK,EAC7B3+B,GAAO1c,kBAAkB07C,EAAYC,EAAY,EACjDj/B,GAAO2+B,YAAY,GAAI,GAAI,GAG5BjwD,QAAAC,eAAI6tD,EAAAluD,UAAA,wB/E8sbGM,I+E9sbP,WAEC,MAAOb,MAAKkvD,qB/E+sbNnuD,WAAY,KACZC,aAAc,M+E9sbtB,OAAAytD,IAzOkC9e,EA2OlCvyC,GAA6BJ,QAApByxD,I/EktbNrzB,oCAAoCh6B,UAAU4W,qCAAqC5W,UAAUisC,iCAAiCjsC,UAAU2wD,mDAAmD3wD,UAAU3C,qCAAqC,qCAAqCqyC,qEAAqE,uEAAuE0G,kEAAkE,SAASt7C,EAAQkB,EAAOJ,GACxf,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgF/8btB,IAAO2xD,GAAS91D,EAAe,kCAM/B,IAAOmB,GAAMnB,EAAgB,qCAE7B,IAAO+1D,GAAgB/1D,EAAc,8DAErC,IAAO27C,GAAiB37C,EAAa,gDAErC,IAAM26C,GAAmB,SAAAn2C,GAASX,EAA5B82C,EAAmBn2C,EAMxB,SANKm2C,KAQJn2C,EAAAzD,KAAA+C,KAEAA,MAAKkwD,eAAiB,GACtBlwD,MAAKkyD,aAAe,GAAIhwD,MACxBlC,MAAKmyD,cAGEtb,EAAAt2C,UAAA4xD,YAAR,WAECnyD,KAAKivD,cAAgB,GAAI/sD,MACzBlC,MAAKoyD,aAAe,GAAIlwD,MAGxBlC,MAAKqyD,UAAU,EAAG,GAAI,EACtBryD,MAAKqyD,UAAU,GAAI,GAAI,EACvBryD,MAAKqyD,WAAW,GAAI,EAAG,EACvBryD,MAAKqyD,UAAU,GAAI,EAAG,EACtBryD,MAAKqyD,UAAU,EAAG,EAAG,EACrBryD,MAAKqyD,UAAU,EAAG,IAAK,GAGhBxb,GAAAt2C,UAAA8xD,UAAR,SAAkBvoD,EAAkBE,EAAkBE,GAErD,GAAIooD,GAAa,GAAIj1D,EACrBi1D,GAAIxoD,UAAYA,CAChBwoD,GAAItoD,UAAYA,CAChBsoD,GAAIpoD,UAAYA,CAChBooD,GAAI5yB,WAAW4wB,KAAO,GAEtB,IAAI5wB,GAA2D4yB,EAAI5yB,UACnEA,GAAW6yB,YAAc,EACzBvyD,MAAKoyD,aAAa9sD,KAAKo6B,EACvB4yB,GAAI5yB,WAAWC,cAAgB,CAC/B3/B,MAAKivD,cAAc3pD,KAAKgtD,GAIlBzb,GAAAt2C,UAAAiyD,oBAAP,WAEE,MAAO,IAAI3a,GAAkB,GAAIma,GAAUhyD,KAAKkwD,iBAI3CrZ,GAAAt2C,UAAA4vD,uBAAP,SAA8BC,GAE7B,GAAI30C,GAAgCzb,KAAY,OAChD,IAAIyyD,GAAqBh3C,EAAMs7B,SAC/B,IAAIpnC,GAAe3P,KAAK0yD,QAAQ5+C,aAGhC,KAAK,GAAInX,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClCqD,KAAKoyD,aAAaz1D,GAAG6zD,IAAMiC,CAC3BzyD,MAAKivD,cAActyD,GAAG0H,UAAUiJ,SAAWqC,CAC3C3P,MAAKkyD,aAAav1D,GAAK,MAKlBk6C,GAAAt2C,UAAAkvD,cAAP,SAAqB3sD,EAA0B+R,EAAaqC,GAE3D,IAAK,GAAIva,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIqD,KAAKkyD,aAAav1D,GAAI,CACzBqD,KAAK2vD,kBAAkBh8C,OAAS3T,KAAKivD,cAActyD,EACnDqD,MAAK2vD,kBAAkB16C,OACvBJ,GAAMmnB,mBAAmBh8B,KAAK2vD,kBAC9Bz4C,GAASy7C,SAAS3yD,KAAK2vD,kBAAmB7sD,EAAO8vD,UAAW,KAAMj2D,KAItE,OAAAk6C,IA7EkCob,EA+ElC70D,GAA6BJ,QAApB65C,IhFu7bNgc,kCAAkCzxD,UAAU3C,qCAAqC,qCAAqCq0D,8DAA8D,8DAA8D/Z,gDAAgD,kDAAkDjI,sEAAsE,SAAS50C,EAAQkB,EAAOJ,GACrb,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GiFvhctB,IAAO+pD,GAAOluD,EAAgB,gCAC9B,IAAO4J,GAAQ5J,EAAgB,gCAC/B,IAAO6J,GAAa7J,EAAc,qCAGlC,IAAOsyD,GAAoBtyD,EAAa,mDAIxC,IAAOmB,GAAMnB,EAAgB,qCAE7B,IAAO+1D,GAAgB/1D,EAAc,8DACrC,IAAO+mD,GAAe/mD,EAAc,8CAEpC,IAAMyzC,GAAuB,SAAAjvC,GAASX,EAAhC4vC,EAAuBjvC,EAc5B,SAdKivC,KAgBJjvC,EAAAzD,KAAA+C,KAXMA,MAAA+yD,cAAuB,GAGvB/yD,MAAA6xD,OAAgB,EAUtB7xD,MAAK6vD,eACL7vD,MAAK6wD,yBAA2B,GAAIrC,EACpCxuD,MAAK8vD,qBAAuB,GAAIzyD,GAAO2C,KAAK6wD,yBAC5C7wD,MAAK2xD,iBACL3xD,MAAK2wD,SAAW,GAAI7qD,GAGrBnF,OAAAC,eAAW+uC,EAAApvC,UAAA,QjFsgcJM,IiFtgcP,WAEC,MAAOb,MAAK6xD,QjFugcNvuD,IiFpgcP,SAAgByF,GAEf/I,KAAK6xD,OAAS9oD,GjFqgcRhI,WAAY,KACZC,aAAc,MiFngcrBL,QAAAC,eAAW+uC,EAAApvC,UAAA,ejFsgcJM,IiFtgcP,WAEC,MAAOb,MAAK+yD,ejFugcNzvD,IiFpgcP,SAAuByF,GAEtB/I,KAAK+yD,cAAgBhqD,GjFqgcfhI,WAAY,KACZC,aAAc,MiFlgcrBL,QAAAC,eAAW+uC,EAAApvC,UAAA,oBjFsgcJM,IiFtgcP,WAEC,MAAOb,MAAK8vD,qBAAqB1gB,gBjFugc3BruC,WAAY,KACZC,aAAc,MiFpgcrBL,QAAAC,eAAW+uC,EAAApvC,UAAA,SjFwgcJM,IiFxgcP,WAEC,MAAOb,MAAKgzD,OAAShzD,KAAKizD,QjFygcpBlyD,WAAY,KACZC,aAAc,MiFvgcd2uC,GAAApvC,UAAA2yD,aAAP,SAAoBC,GAEnB,GAAInzD,KAAKozD,WAAaD,EACrB,MAEDzyD,GAAAH,UAAM2yD,aAAYj2D,KAAA+C,KAACmzD,EAEnB,IAAInzD,KAAKozD,UAAW,CACnBpzD,KAAKqzD,kBAAoB,IACzBrzD,MAAKkwD,eAAiBiD,EAASnD,QAAQ9iB,KAAK9/B,UACtC,CACNpN,KAAKqzD,kBAAoB,OAIpB1jB,GAAApvC,UAAAiyD,oBAAP,WAEC,MAAO,IAAIvP,GAAgB,GAAImH,GAAQpqD,KAAKkwD,eAAgBlwD,KAAKkwD,iBAI3DvgB,GAAApvC,UAAAkvD,cAAP,SAAqB3sD,EAAwB+R,EAAaqC,GAEzDlX,KAAK2vD,kBAAkBh8C,OAAS3T,KAAK8vD,oBACrC9vD,MAAK2vD,kBAAkBC,WAAa5vD,KAAK6vD,YACzC7vD,MAAK2vD,kBAAkB16C,OACvBJ,GAAMmnB,mBAAmBh8B,KAAK2vD,kBAC9Bz4C,GAASy7C,SAAS3yD,KAAK2vD,kBAAmB7sD,EAAOktD,SAI3CrgB,GAAApvC,UAAAuwD,kBAAP,SAAyBV,GAExB,GAAIkD,GAAoCtzD,KAAK8vD,qBAAqByD,aAClE,IAAIC,GAAmCpD,EAAWmD,aAClDvzD,MAAK6vD,aAAa3yD,OAAS,CAE3B8C,MAAK6vD,aAAa,GAAKyD,EAAmB,EAC1CtzD,MAAK6vD,aAAa,GAAKyD,EAAmB,EAC1CtzD,MAAK6vD,aAAa,GAAKyD,EAAmB,EAC1CtzD,MAAK6vD,aAAa,GAAKyD,EAAmB,EAE1C,IAAI73C,GAA4Czb,KAAK0yD,OACrD,IAAIe,GAAeh4C,EAAMi4C,cACzB,IAAIC,GAAcF,EAAI5pD,CACtB,IAAI+pD,GAAcH,EAAI1pD,CACtB,IAAI8pD,GAAcJ,EAAIxpD,CACtB,IAAIwN,GAAW,CACf,KAAK,GAAI9a,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAIq0B,GAAgBwiC,EAAkB72D,EACtC,IAAIq0B,EAAMt0B,EAAEi3D,EAAO3iC,EAAM9wB,EAAE0zD,EAAO5iC,EAAMC,EAAE4iC,EAAO,EAChD7zD,KAAK6vD,aAAap4C,KAAOuZ,GAKrB2e,GAAApvC,UAAA4vD,uBAAP,SAA8BC,GAE7BpwD,KAAKywD,oCAAoCL,EAAYA,EAAW1wB,WAAWgxB,eAAgB1wD,KAAK2wD,SAChG3wD,MAAK6wD,yBAAyB5+B,OAASjyB,KAAK2wD,QAC5C3wD,MAAK8wD,kBAAkBV,GAGjBzgB,GAAApvC,UAAAkwD,oCAAP,SAA2CL,EAAmB0D,EAAuB7hC,GAEpF,GAAI1f,GAAmBxM,EAAc6M,kBACrC,IAAI6gD,EACJ,IAAI5pD,GAAUE,EAAUE,CACxB,IAAIktB,GAAaC,CACjB,IAAIE,GAAaC,CACjB,IAAI56B,EAEJ,IAAI8e,GAA4Czb,KAAK0yD,OACrDe,GAAMh4C,EAAMi4C,cACZ1zD,MAAK8vD,qBAAqBzrD,UAAUkJ,SAAWvN,KAAK0yD,QAAQ/nD,cAC5Dd,GAAImT,KAAKC,OAAOmzC,EAAWvmD,EAAI4pD,EAAI5pD,EAAE7J,KAAK+yD,eAAe/yD,KAAK6xD,QAAQ7xD,KAAK6xD,MAC3E9nD,GAAIiT,KAAKC,OAAOmzC,EAAWrmD,EAAI0pD,EAAI1pD,EAAE/J,KAAK+yD,eAAe/yD,KAAK6xD,QAAQ7xD,KAAK6xD,MAC3E5nD,GAAI+S,KAAKC,OAAOmzC,EAAWnmD,EAAIwpD,EAAIxpD,EAAEjK,KAAK+yD,eAAe/yD,KAAK6xD,QAAQ7xD,KAAK6xD,MAC3E7xD,MAAK8vD,qBAAqBjmD,EAAIA,CAC9B7J,MAAK8vD,qBAAqB/lD,EAAIA,CAC9B/J,MAAK8vD,qBAAqB7lD,EAAIA,CAE9BjK,MAAK2wD,SAASjmD,SAAS1K,KAAK8vD,qBAAqB1gD,sBACjDpP,MAAK2wD,SAASj5C,QAAQ04C,EAAWzlD,eACjC3K,MAAK2wD,SAASvgB,iBAAiB0jB,EAAS9zD,KAAK2xD,eAE7Cx6B,GAAOG,EAAOt3B,KAAK2xD,eAAe,EAClCv6B,GAAOG,EAAOv3B,KAAK2xD,eAAe,EAClC3xD,MAAKgzD,OAAShzD,KAAK2xD,eAAe,EAElCh1D,GAAI,CACJ,OAAOA,EAAI,GAAI,CACdkN,EAAI7J,KAAK2xD,eAAeh1D,EACxBoN,GAAI/J,KAAK2xD,eAAeh1D,EAAI,EAC5BsN,GAAIjK,KAAK2xD,eAAeh1D,EAAI,EAC5B,IAAIkN,EAAIstB,EACPA,EAAOttB,CACR,IAAIA,EAAIytB,EACPA,EAAOztB,CACR,IAAIE,EAAIqtB,EACPA,EAAOrtB,CACR,IAAIA,EAAIwtB,EACPA,EAAOxtB,CACR,IAAIE,EAAIjK,KAAKgzD,OACZhzD,KAAKgzD,OAAS/oD,CACftN,IAAK,EAGNqD,KAAKizD,OAAS,CAEd,IAAIrX,GAAWtkB,EAAOH,CACtB,IAAIy6B,GAAWr6B,EAAOH,CACtB,IAAIn3B,GAAW,GAAGD,KAAKgzD,OAAShzD,KAAKizD,OAErC,IAAI97B,EAAO,EACVA,GAAQn3B,KAAK6xD,MAEd,IAAIz6B,EAAO,EACVA,GAAQp3B,KAAK6xD,MAEd16B,GAAOna,KAAKC,MAAMka,EAAKn3B,KAAK6xD,QAAQ7xD,KAAK6xD,MACzCz6B,GAAOpa,KAAKC,MAAMma,EAAKp3B,KAAK6xD,QAAQ7xD,KAAK6xD,MAEzC,IAAIC,GAAe,EAAE9xD,KAAK6xD,MAC1BjW,GAAI5+B,KAAKC,MAAM2+B,EAAEkW,EAAQ,GAAGA,CAC5BF,GAAI50C,KAAKC,MAAM20C,EAAEE,EAAQ,GAAGA,CAE5Bx6B,GAAOH,EAAOykB,CACdrkB,GAAOH,EAAOw6B,CAEdhW,GAAI,EAAEA,CACNgW,GAAI,EAAEA,CAENr/C,GAAI,GAAK,EAAEqpC,CACXrpC,GAAI,GAAK,EAAEq/C,CACXr/C,GAAI,IAAMtS,CACVsS,GAAI,MAAQ+kB,EAAOH,GAAMykB,CACzBrpC,GAAI,MAAQglB,EAAOH,GAAMw6B,CACzBr/C,GAAI,KAAOvS,KAAKizD,OAAOhzD,CACvBsS,GAAI,IAAM,CACVA,GAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,CAElF0f,GAAOnf,gBAAgBP,GAEzB,OAAAo9B,IAzMsCsiB,EA2MtC70D,GAAiCJ,QAAxB2yC,IjF++bN53B,gCAAgC3W,UAAU4W,qCAAqC5W,UAAUqpD,gCAAgCrpD,UAAU2wD,mDAAmD3wD,UAAU3C,qCAAqC,qCAAqCq0D,8DAA8D,8DAA8DlO,8CAA8C,gDAAgDmP,0EAA0E,SAAS73D,EAAQkB,EAAOJ,GACzkB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkF5sctB,IAAOsvC,GAAuBzzC,EAAY,qEAE1C,IAAM83D,GAA2B,SAAAtzD,GAASX,EAApCi0D,EAA2BtzD,EAIhC,SAJKszD,GAIOC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,GAEXvzD,EAAAzD,KAAA+C,KAEAA,MAAKi0D,cAAgBA,EAMtBtzD,OAAAC,eAAWozD,EAAAzzD,UAAA,iBlF0scJM,IkF1scP,WAEC,MAAOb,MAAKk0D,gBlF2scN5wD,IkFxscP,SAAyByF,GAExB,GAAIA,EAAQ,EACXA,EAAQ,MAAQ,IAAIA,EAAQ,EAC5BA,EAAQ,CAET/I,MAAKk0D,eAAiBnrD,GlFyschBhI,WAAY,KACZC,aAAc,MkFvscdgzD,GAAAzzD,UAAA4vD,uBAAP,SAA8BC,GAE7B,GAAI0D,GAAwB1D,EAAW1wB,WAAWgxB,cAElD,KAAK,GAAI/zD,GAAmB,EAAGA,EAAI,KAAMA,EAAG,CAC3C,GAAImkC,GAAWgzB,EAAQn3D,EACvBqD,MAAK2xD,eAAeh1D,GAAKmkC,CACzB9gC,MAAK2xD,eAAeh1D,EAAI,IAAMmkC,GAAKgzB,EAAQn3D,EAAI,IAAMmkC,GAAG9gC,KAAKk0D,eAG9Dl0D,KAAKywD,oCAAoCL,EAAYpwD,KAAK2xD,eAAgB3xD,KAAK2wD,SAC/E3wD,MAAK6wD,yBAAyB5+B,OAASjyB,KAAK2wD,SAE9C,OAAAqD,IAzC0CrkB,EA2C1CvyC,GAAqCJ,QAA5Bg3D,IlFwscNljB,qEAAqE,uEAAuEgiB,+DAA+D,SAAS52D,EAAQkB,EAAOJ,GACtO,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmF3vctB,IAAO4Z,GAAmB/d,EAAa,6CACvC,IAAOsE,GAAStE,EAAe,oCAM/B,IAAOi4D,GAAqBj4D,EAAY,oDAIxC,IAAM+1D,GAAgB,SAAAvxD,GAASX,EAAzBkyD,EAAgBvxD,EAYrB,SAZKuxD,KAcJvxD,EAAAzD,KAAA+C,KARMA,MAAAkwD,eAAwB,IAGvBlwD,MAAAo0D,mBAA6B,IAOpCp0D,MAAK2vD,kBAAoB3vD,KAAKq0D,yBAGxBpC,EAAA1xD,UAAA8zD,uBAAP,WAEC,MAAO,IAAIF,GAGZxzD,QAAAC,eAAWqxD,EAAA1xD,UAAA,qBnFyucJM,ImFzucP,WAEC,MAAOb,MAAKo0D,oBnF0ucN9wD,ImFvucP,SAA6ByF,GAE5B/I,KAAKo0D,mBAAqBrrD,GnFwucpBhI,WAAY,KACZC,aAAc,MmFtucdixD,GAAA1xD,UAAA+zD,cAAP,WAECt0D,KAAKu0D,iBAAmB,KAGlBtC,GAAA1xD,UAAA2yD,aAAP,SAAoBC,GAEnB,GAAInzD,KAAKozD,YAAcpzD,KAAKqzD,kBAC3BrzD,KAAKozD,UAAUnyD,SAEhBjB,MAAKozD,UAAYD,EAGlBxyD,QAAAC,eAAWqxD,EAAA1xD,UAAA,SnFoucJM,ImFpucP,WAEC,MAAOb,MAAK0yD,SnFqucNpvD,ImFlucP,SAAiByF,GAEhB/I,KAAK0yD,QAAU3pD,GnFmucThI,WAAY,KACZC,aAAc,MmFjucrBL,QAAAC,eAAWqxD,EAAA1xD,UAAA,YnFoucJM,ImFpucP,WAEC,IAAKb,KAAKozD,UACTpzD,KAAKozD,UAAYpzD,KAAKwyD,qBAEvB,OAAOxyD,MAAKozD,WnFoucNryD,WAAY,KACZC,aAAc,MmFlucrBL,QAAAC,eAAWqxD,EAAA1xD,UAAA,gBnFqucJM,ImFrucP,WAEC,MAAOb,MAAKkwD,gBnFsucN5sD,ImFnucP,SAAwByF,GAEvB,GAAIA,GAAS/I,KAAKkwD,eACjB,MAEDlwD,MAAKuvD,kBAAkBxmD,InFmucjBhI,WAAY,KACZC,aAAc,MmFjucdixD,GAAA1xD,UAAAU,QAAP,WAECjB,KAAK2vD,kBAAoB,IAEzB,IAAI3vD,KAAKozD,YAAcpzD,KAAKqzD,kBAC3BrzD,KAAKozD,UAAUnyD,SAEhBjB,MAAKozD,UAAY,KAGXnB,GAAA1xD,UAAAiyD,oBAAP,WAEC,KAAM,IAAIv4C,GAGJg4C,GAAA1xD,UAAAi0D,gBAAP,SAAuBC,EAAiCv9C,GAEvDlX,KAAKu0D,iBAAmB,KAExBv0D,MAAKmwD,uBAAuBsE,EAAgB9gD,OAE5C,KAAK3T,KAAKozD,UACTpzD,KAAKozD,UAAYpzD,KAAKwyD,qBAEvBxyD,MAAKyvD,cAAczvD,KAAKozD,UAAWqB,EAAgB5/C,MAAOqC,GAGpD+6C,GAAA1xD,UAAA4vD,uBAAP,SAA8BC,GAE7B,KAAM,IAAIn2C,GAGJg4C,GAAA1xD,UAAAkvD,cAAP,SAAqB3sD,EAAoB+R,EAAaqC,GAErD,KAAM,IAAI+C,GAGJg4C,GAAA1xD,UAAAgvD,kBAAP,SAAyBxmD,GAExB/I,KAAKkwD,eAAiBnnD,CAEtB,IAAI/I,KAAKqzD,kBAAmB,CAC3B,KAAMx2D,OAAM,2DACN,IAAImD,KAAKozD,UAAW,CAC1BpzD,KAAKozD,UAAUnyD,SACfjB,MAAKozD,UAAY,MAGpB,OAAAnB,IA9H+BzxD,EAgI/BpD,GAA0BJ,QAAjBi1D,InFqtcNj2C,6CAA6C5a,UAAUD,oCAAoCC,UAAUszD,oDAAoD,sDAAsDv4B,+CAA+C,SAASjgC,EAAQkB,EAAOJ,GACzR,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoFn2ctB,IAAOs0D,GAAQz4D,EAAgB,wCAC/B,IAAOiC,GAAajC,EAAc,6CpFy2clC,IoFn2cMy/B,GAAc,SAAAj7B,GAASX,EAAvB47B,EAAcj7B,EAEnB,SAFKi7B,KAIJj7B,EAAAzD,KAAA+C,KAEAA,MAAK40D,UAAY,GAAID,GAEvB,MAAAh5B,IAR6Bx9B,EAU7Bf,GAAwBJ,QAAf2+B,IpFm2cNk5B,wCAAwC,wCAAwCv1D,6CAA6C,+CAA+CJ,2CAA2C,SAAShD,EAAQkB,EAAOJ,GAClP,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqF33ctB,IAAOpC,GAAU/B,EAAe,0CrFi4chC,IqF33cM6B,GAAU,SAAA2C,GAASX,EAAnBhC,EAAU2C,EAAhB,SAAM3C,KAAmB2C,EAAAo0D,MAAA90D,KAAA61B,WAKjB93B,EAAAwC,UAAAw0D,gBAAP,SAAuB94B,IAIxB,OAAAl+B,IATyBE,EAWzBb,GAAoBJ,QAAXe,IrF+3cNqB,0CAA0C,4CAA4CD,qDAAqD,SAASjD,EAAQkB,EAAOJ,GACtK,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GsFr5ctB,IAAOpC,GAAU/B,EAAe,0CtF25chC,IsFr5cM8B,GAAoB,SAAA0C,GAASX,EAA7B/B,EAAoB0C,EAA1B,SAAM1C,KAA6B0C,EAAAo0D,MAAA90D,KAAA61B,WAK3B73B,EAAAuC,UAAAw0D,gBAAP,SAAuB94B,GAEtB,GAAIA,EAAU+4B,UAAUh1D,MACvBi8B,EAAUg5B,sBAAsBj1D,KAAKk1D,gBAOhCl3D,GAAAuC,UAAA40D,gBAAP,WAEC,MAAO,OAET,OAAAn3D,IAnBmCC,EAqBnCb,GAA8BJ,QAArBgB,ItFu5cNoB,0CAA0C,4CAA4Cg2D,kDAAkD,SAASl5D,EAAQkB,EAAOJ,GACnK,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuFr7ctB,IAAOg1D,GAAen5D,EAAc,0CAMpC,IAAO8zB,GAAsB9zB,EAAY,mDACzC,IAAO63B,GAAc73B,EAAc,2CAEnC,IAAOiK,GAAUjK,EAAe,uCAChC,IAAO04B,GAAU14B,EAAe,uCAIhC,IAAOqK,GAAkBrK,EAAa,+CvFk7ctC,IuF56cMo5D,GAAiB,SAAA50D,GAASX,EAA1Bu1D,EAAiB50D,EA+BtB,SA/BK40D,GA+BOh3B,EAA6Bi3B,GA/B1C,GAAA7uD,GAAA1G,IAiCEU,GAAAzD,KAAA+C,KAAMs+B,EAAei3B,EA/Bfv1D,MAAAw1D,YAAqB,CAErBx1D,MAAAy1D,iBAA2B,KAQ1Bz1D,MAAA01D,aAAuB,IAOxB11D,MAAA21D,gBAA0B,KAgBhC31D,MAAK41D,qCAAuC,SAACptD,GAA6B,MAAA9B,GAAKmvD,6BAA6BrtD,GAE5GxI,MAAKk1D,eAAiB52B,CACtBt+B,MAAKk1D,eAAe5sD,iBAAiB/B,EAAmBoR,4BAA6B3X,KAAK41D,qCAE1F51D,MAAKmO,WAAanO,KAAKk1D,eAAe/mD,WAjBvCxN,OAAAC,eAAW00D,EAAA/0D,UAAA,UvFo6cJM,IuFp6cP,WAEC,GAAIb,KAAK01D,aACR11D,KAAK81D,eAEN,OAAO91D,MAAK6O,SvFo6cN9N,WAAY,KACZC,aAAc,MuFl5cds0D,GAAA/0D,UAAA40D,gBAAP,WAEC,MAAOn1D,MAAKk1D,eAAejtD,aAGrBqtD,GAAA/0D,UAAAw1D,QAAP,SAAevtD,GAEd9H,EAAAH,UAAMw1D,QAAO94D,KAAA+C,KAACwI,EAEdxI,MAAKk1D,eAAejhD,oBAAoB1N,EAAmBoR,4BAA6B3X,KAAK41D,qCAC7F51D,MAAKk1D,eAAiB,IAEtB,IAAIl1D,KAAK6O,QACR7O,KAAK6O,QAAQ5N,SAEdjB,MAAK6O,QAAU,IACf7O,MAAKg2D,aAAe,KAGdV,GAAA/0D,UAAA01D,aAAP,SAAoBztD,GAEnB9H,EAAAH,UAAM01D,aAAYh5D,KAAA+C,KAACwI,EAEnB,IAAIxI,KAAKmO,YAAcnO,KAAKk1D,eAAe/mD,WAAY,CACtDnO,KAAKmO,WAAanO,KAAKk1D,eAAe/mD,UACtCnO,MAAK01D,aAAe,MAUfJ,GAAA/0D,UAAAowB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MAODykC,GAAA/0D,UAAA21D,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAMDd,GAAA/0D,UAAAw0D,gBAAP,SAAuB94B,IAKhBq5B,GAAA/0D,UAAAs1D,6BAAP,SAAoCrtD,IAK5B8sD,GAAA/0D,UAAAu1D,cAAR,WAEC,GAAI91D,KAAK6O,QACR7O,KAAK6O,QAAQ5N,SAEd,IAAIjB,KAAKmO,YAAchI,EAAW0C,iBACjC7I,KAAK6O,QAAU,GAAImhB,GAAuBhwB,KAAKk1D,oBAC3C,IAAIl1D,KAAKmO,YAAchI,EAAWsuB,OACtCz0B,KAAK6O,QAAU,GAAIklB,GAAe/zB,KAAKk1D,oBACnC,IAAIl1D,KAAKmO,YAAchI,EAAWuuB,KACtC10B,KAAK6O,QAAU,GAAI+lB,EAEpB50B,MAAK01D,aAAe,MAEtB,OAAAJ,IA3HgCD,EA6HhCj4D,GAA2BJ,QAAlBs4D,IvFo4cNe,0CAA0Cj1D,UAAUwuB,mDAAmD,mDAAmDiE,2CAA2C,2CAA2Ctb,uCAAuC,uCAAuCoc,uCAAuC,uCAAuCnc,+CAA+C,iDAAiDpZ,2CAA2C,SAASlD,EAAQkB,EAAOJ,GACljB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwF1hdtB,IAAO4F,GAAQ/J,EAAgB,gCAQ/B,IAAOo5D,GAAiBp5D,EAAa,iDxFyhdrC,IwFphdM+B,GAAU,SAAAyC,GAASX,EAAnB9B,EAAUyC,EAOf,SAPKzC,GAOOqgC,EAA6BpwB,GAExCxN,EAAAzD,KAAA+C,KAAMs+B,EAAepwB,EAPflO,MAAAw1D,YAAqB,CAS3Bx1D,MAAKs2D,WAAapoD,EAGZjQ,EAAAsC,UAAAw1D,QAAP,SAAevtD,GAEd9H,EAAAH,UAAMw1D,QAAO94D,KAAA+C,KAACwI,EAEdxI,MAAKs2D,WAAa,KASZr4D,GAAAsC,UAAAowB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAK7wB,KAAKk1D,eAAeh/C,cACxB,MAAO,MAER,OAAO,MAQDjY,GAAAsC,UAAA21D,kBAAP,SAAyBC,EAAsBC,GAE9C,IAAKp2D,KAAKk1D,eAAeh/C,cACxB,MAAO,MAER,IAAIzR,GAAwCzE,KAAKk1D,eAAeqB,oBAChE9xD,GAAmB+xD,iBAAmBx2D,KAAKk1D,eAAe9lD,sBAAsB3C,gBAAgB0pD,EAChG1xD,GAAmBgyD,kBAAoBz2D,KAAKk1D,eAAe9lD,sBAAsB42B,qBAAqBowB,EAEtG,KAAK3xD,EAAmBs8C,YACvBt8C,EAAmBs8C,YAAc,GAAI96C,EAEtC,IAAIu7B,GAA0BxhC,KAAKooD,OAAO92B,gBAAgB7sB,EAAmB+xD,iBAAkB/xD,EAAmBgyD,kBAAmBhyD,EAAmBs8C,YAExJ,IAAIvf,EAAmB,EACtB,MAAO,MAER/8B,GAAmB+8B,iBAAmBA,CACtC/8B,GAAmB0xD,YAAcA,CACjC1xD,GAAmB2xD,aAAeA,CAClC3xD,GAAmBiyD,wBAA0Bl1B,GAAoB,CAEjE,OAAO,MAMDvjC,GAAAsC,UAAAw0D,gBAAP,SAAuB94B,GAEtB,GAAIA,EAAU+4B,UAAUh1D,MAAO,CAC9Bi8B,EAAU06B,YAAsB32D,KAAKk1D,eAErC,IAAIl1D,KAAKk1D,eAAe0B,cAAgB36B,EAAU46B,kBACjD56B,EAAU06B,YAAY32D,KAAKooD,OAAO0O,kBAI9B74D,GAAAsC,UAAAs1D,6BAAP,SAAoCrtD,GAEnCxI,KAAKooD,OAAOh/C,YAEZpJ,MAAKs2D,WAAWS,eAAe/2D,MAEjC,OAAA/B,IApFyBq3D,EAsFzBl4D,GAAoBJ,QAAXiB,IxF2/cNka,gCAAgC/W,UAAUg0D,iDAAiD,mDAAmD4B,+CAA+C,SAAS96D,EAAQkB,EAAOJ,SAElNi6D,mDAAmD,SAAS/6D,EAAQkB,EAAOJ,SAE3Ek6D,iDAAiD,SAASh7D,EAAQkB,EAAOJ,SAEzEm6D,sCAAsC,SAASj7D,EAAQkB,EAAOJ,SAE9DqC,+CAA+C,SAASnD,EAAQkB,EAAOJ,GAC7E,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyF7mdtB,IAAOpC,GAAU/B,EAAe,0CzFmndhC,IyF7mdMgC,GAAc,SAAAwC,GAASX,EAAvB7B,EAAcwC,EAApB,SAAMxC,KAAuBwC,EAAAo0D,MAAA90D,KAAA61B,WAKrB33B,EAAAqC,UAAAw0D,gBAAP,SAAuB94B,GAEtB,GAAIA,EAAU+4B,UAAUh1D,MACvBi8B,EAAUm7B,gBAAgBp3D,KAAKk1D,gBAO1Bh3D,GAAAqC,UAAA40D,gBAAP,WAEC,MAAO,OAET,OAAAj3D,IAnB6BD,EAqB7Bb,GAAwBJ,QAAfkB,IzF+mdNkB,0CAA0C,4CAA4Cy1D,yCAAyC,SAAS34D,EAAQkB,EAAOJ,GAI1J,G0FjodM23D,GAAQ,WAgBb,QAhBKA,KAEE30D,KAAAq3D,aAA4B,GAAIn1D,MAChClC,MAAAs3D,gBAAyB,CAMzBt3D,MAAAw1D,YAAqB,EAkBrBb,EAAAp0D,UAAAowB,YAAP,SAAmBC,EAAuBC,GAEzC,MAAO,MASD8jC,GAAAp0D,UAAA21D,kBAAP,SAAyBC,EAAsBC,GAE9C,MAAO,MAODzB,GAAAp0D,UAAA40D,gBAAP,WAEC,MAAO,MAGDR,GAAAp0D,UAAAU,QAAP,WAECjB,KAAKynD,OAAS,IACdznD,MAAKq3D,aAAe,KAOd1C,GAAAp0D,UAAAw0D,gBAAP,SAAuB94B,GAEtB,GAAIj8B,KAAKw1D,aAAe,EACvB,MAED,IAAIv5B,EAAU+4B,UAAUh1D,MAAO,CAC9B,IAAK,GAAIrD,GAAW,EAAGA,EAAIqD,KAAKs3D,gBAAiB36D,IAChDqD,KAAKq3D,aAAa16D,GAAGo4D,gBAAgB94B,IASjC04B,GAAAp0D,UAAAg3D,SAAP,SAAgBC,GAEfA,EAAK/P,OAASznD,IACdA,MAAKw1D,aAAegC,EAAKhC,WACzBx1D,MAAKq3D,aAAcr3D,KAAKs3D,mBAAsBE,CAE9C,IAAIhC,GAAqBgC,EAAKhC,WAC9BgC,GAAOx3D,IAEP,GAAG,CACFw3D,EAAKhC,aAAeA,SACXgC,EAAOA,EAAK/P,SAAW,MAQ3BkN,GAAAp0D,UAAAk3D,YAAP,SAAmBD,GAElB,GAAI56C,GAAe5c,KAAKq3D,aAAah+C,QAAQm+C,EAC7Cx3D,MAAKq3D,aAAaz6C,GAAS5c,KAAKq3D,eAAer3D,KAAKs3D,gBACpDt3D,MAAKq3D,aAAahkB,KAElB,IAAImiB,GAAqBgC,EAAKhC,WAC9BgC,GAAOx3D,IAEP,GAAG,CACFw3D,EAAKhC,aAAeA,SACXgC,EAAOA,EAAK/P,SAAW,MAEnC,OAAAkN,KAEAv3D,GAAkBJ,QAAT23D,O1FsmdHr1D,8CAA8C,SAASpD,EAAQkB,EAAOJ,GAI5E,G2FztdMmB,GAAa,WAWlB,QAXKA,KAIG6B,KAAA03D,iBAA0B,GAAI/2D,OAI9BX,MAAA23D,aAAuB,MAOxBx5D,EAAAoC,UAAAq3D,eAAP,SAAsBt5B,GAErB,MAAQt+B,MAAK03D,iBAAiBp5B,EAAc37B,MAAQ3C,KAAK03D,iBAAiBp5B,EAAc37B,IAAM,GAAwBxE,GAAc05D,sBAAsBv5B,EAAcp9B,WAAYo9B,EAAet+B,OAO7L7B,GAAAoC,UAAAu3D,iBAAP,SAAwBx5B,GAEvBt+B,KAAK03D,iBAAiBp5B,EAAc37B,IAAM,KAGpCxE,GAAAoC,UAAA27B,SAAP,SAAgBD,GAEf,GAAIj8B,KAAK23D,aACR33D,KAAK+3D,gBAEN/3D,MAAK40D,UAAUG,gBAAgB94B,GAGzB99B,GAAAoC,UAAAw2D,eAAP,SAAsBS,GAErB,GAAIp7D,GAAsB4D,KAAKg4D,YAE/B,OAAO57D,EAAG,CACT,GAAIo7D,GAAQp7D,EACX,MAEDA,GAAIA,EAAE67D,kBAGPT,EAAKS,kBAAoBj4D,KAAKg4D,YAE9Bh4D,MAAKg4D,aAAeR,CACpBx3D,MAAK23D,aAAe,KAGdx5D,GAAAoC,UAAA23D,cAAP,SAAqBV,GAEpB,GAAIp7D,EAEJ,IAAIo7D,EAAK/P,OAAQ,CAChB+P,EAAK/P,OAAOgQ,YAAYD,EACxBA,GAAK/P,OAAS,KAIf,GAAI+P,GAAQx3D,KAAKg4D,aAAc,CAC9Bh4D,KAAKg4D,aAAeR,EAAKS,sBACnB,CACN77D,EAAI4D,KAAKg4D,YACT,OAAO57D,GAAKA,EAAE67D,mBAAqBT,EAClCp7D,EAAIA,EAAE67D,iBAEP,IAAI77D,EACHA,EAAE67D,kBAAoBT,EAAKS,kBAG7BT,EAAKS,kBAAoB,IAEzB,KAAKj4D,KAAKg4D,aACTh4D,KAAK23D,aAAe,MAQfx5D,GAAAoC,UAAA43D,kBAAP,SAAyBX,GAExB,MAAOx3D,MAAK40D,UAGLz2D,GAAAoC,UAAAw3D,eAAR,WAEC,GAAIP,GAAyBx3D,KAAKg4D,YAClC,OAAOR,EAAM,CAEZA,EAAKtC,eAAel/C,kBACpBwhD,GAAOA,EAAKS,kBAIbT,EAAOx3D,KAAKg4D,YACZ,IAAII,EACJ,IAAIh8D,EACJ4D,MAAKg4D,aAAe,IACpBh4D,MAAK23D,aAAe,KAEpB,GAAG,CACFS,EAAap4D,KAAKm4D,kBAAkBX,EAEpC,IAAIA,EAAK/P,QAAU2Q,EAAY,CAC9B,GAAIZ,EAAK/P,OACR+P,EAAK/P,OAAOgQ,YAAYD,EACzBY,GAAWb,SAASC,GAGrBp7D,EAAIo7D,EAAKS,iBACTT,GAAKS,kBAAoB,YAEhBT,EAAOp7D,IAAM,MAMjB+B,GAAAoC,UAAA4U,iBAAP,SAAwBmpB,GAEvB,GAAIA,EAAc7pB,SACjBzU,KAAK+2D,eAAe/2D,KAAK43D,eAAet5B,IAMnCngC,GAAAoC,UAAAyU,mBAAP,SAA0BspB,GAEzB,GAAIA,EAAc7pB,SACjBzU,KAAKk4D,cAAcl4D,KAAK43D,eAAet5B,IAO3BngC,GAAAG,oBAAd,SAAkC+5D,EAAkC9yD,GAEnEpH,EAAc05D,sBAAsBtyD,EAAWrE,WAAam3D,EAhJ9Cl6D,GAAA05D,sBAA+B,GAAIl3D,OAkJnD,OAAAxC,KAEuBf,GAAAJ,QAAdmB,O3FgrdHoB,+CAA+C,SAASrD,EAAQkB,EAAOJ,GAC7E,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4Fz1dtB,IAAOpC,GAAU/B,EAAe,0C5F+1dhC,I4Fz1dMkC,GAAc,SAAAsC,GAASX,EAAvB3B,EAAcsC,EAApB,SAAMtC,KAAuBsC,EAAAo0D,MAAA90D,KAAA61B,WAKrBz3B,EAAAmC,UAAAw0D,gBAAP,SAAuB94B,GAEtB,GAAIA,EAAU+4B,UAAUh1D,MACvBi8B,EAAUq8B,gBAAgBt4D,KAAKk1D,gBAO1B92D,GAAAmC,UAAA40D,gBAAP,WAEC,MAAO,OAET,OAAA/2D,IAnB6BH,EAqB7Bb,GAAwBJ,QAAfoB,I5F21dNgB,0CAA0C,4CAA4Cm5D,+CAA+C,SAASr8D,EAAQkB,EAAOJ,GAChK,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6F13dtB,IAAOi1D,GAAiBp5D,EAAa,iD7Fg4drC,I6Fz3dMs8D,GAAc,SAAA93D,GAASX,EAAvBy4D,EAAc93D,EAApB,SAAM83D,KAAuB93D,EAAAo0D,MAAA90D,KAAA61B,UAErB71B,MAAAy1D,iBAA2B,IAE1Bz1D,MAAAq3D,aAAwC,GAAIn1D,MAC5ClC,MAAAy4D,aAA6B,GAAIv2D,MACjClC,MAAA04D,YAAuC,GAAIx2D,MAC3ClC,MAAA24D,eAAwB,CACxB34D,MAAAs3D,gBAAyB,EAU1BkB,EAAAj4D,UAAAw0D,gBAAP,SAAuB94B,GAGtB,GAAIj8B,KAAKw1D,aAAe,EACvB,MAED,IAAIx1D,KAAK44D,aACR54D,KAAK44D,aAAa7D,gBAAgB94B,EAEnC,IAAIt/B,EACJ,KAAKA,EAAI,EAAGA,EAAIqD,KAAK24D,eAAgBh8D,IACpCqD,KAAK04D,YAAY/7D,GAAGo4D,gBAAgB94B,EAErC,KAAKt/B,EAAI,EAAGA,EAAIqD,KAAKs3D,gBAAiB36D,IACrCqD,KAAKq3D,aAAa16D,GAAGo4D,gBAAgB94B,GAQhCu8B,GAAAj4D,UAAAg3D,SAAP,SAAgBC,GAEfA,EAAK/P,OAASznD,IAEd,KAAKw3D,EAAK/B,iBAAkB,CAC3Bz1D,KAAK44D,aAA4BpB,MAC3B,IAAIA,EAAKtC,eAAehoD,SAAU,CACxClN,KAAK04D,YAAYpzD,KAAKkyD,EACtBx3D,MAAK24D,eAAiB34D,KAAK04D,YAAYx7D,WACjC,CACN,GAAIqM,GAAeiuD,EAAKtC,eAAehuD,QACvC,IAAI+F,GAAajN,KAAKy4D,aAAav7D,MACnC,IAAI0f,GAAe3P,CAEnB,OAAO2P,IACN,GAAI5c,KAAKy4D,aAAa77C,GAASrT,EAC9B,KAEFqT,IAEA,IAAIA,EAAQ3P,EAAK,CAChBjN,KAAKq3D,aAAaj+C,OAAOwD,EAAO,EAAG46C,EACnCx3D,MAAKy4D,aAAar/C,OAAOwD,EAAO,EAAGrT,OAC7B,CACNvJ,KAAKq3D,aAAa/xD,KAAKkyD,EACvBx3D,MAAKy4D,aAAanzD,KAAKiE,GAExBvJ,KAAKs3D,gBAAkBt3D,KAAKy4D,aAAav7D,OAG1C,GAAIs4D,GAAqBgC,EAAK/B,iBAAoC+B,EAAMhC,YAAc,CACtFgC,GAAOx3D,IAEP,GAAG,CACFw3D,EAAKhC,aAAeA,SACXgC,EAAOA,EAAK/P,SAAW,MAQ3B+Q,GAAAj4D,UAAAk3D,YAAP,SAAmBD,GAElB,IAAKA,EAAK/B,iBAAkB,CAC3Bz1D,KAAK44D,aAAe,SACd,IAAIpB,EAAKtC,eAAehoD,SAAU,CACxClN,KAAK04D,YAAYt/C,OAAOpZ,KAAK04D,YAAYr/C,QAAQm+C,GAAO,EACxDx3D,MAAK24D,eAAiB34D,KAAK04D,YAAYx7D,WACjC,CACN,GAAI0f,GAAe5c,KAAKq3D,aAAah+C,QAAQm+C,EAE7Cx3D,MAAKq3D,aAAaj+C,OAAOwD,EAAO,EAChC5c,MAAKy4D,aAAar/C,OAAOwD,EAAO,EAEhC5c,MAAKs3D,gBAAkBt3D,KAAKy4D,aAAav7D,OAG1C,GAAIs4D,GAAqBgC,EAAKhC,WAC9BgC,GAAOx3D,IAEP,GAAG,CACFw3D,EAAKhC,aAAeA,SACXgC,EAA2BA,EAAK/P,SAAW,MAEvD,OAAA+Q,IA1G6BlD,EA2GLl4D,GAAAJ,QAAfw7D,I7F42dNpD,iDAAiD,mDAAmDyD,oDAAoD,SAAS38D,EAAQkB,EAAOJ,GACnL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD;QAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8F/9dtB,IAAOlC,GAAajC,EAAc,6CAClC,IAAO48D,GAAkB58D,EAAa,6C9Fq+dtC,I8F99dM68D,GAAmB,SAAAr4D,GAASX,EAA5Bg5D,EAAmBr4D,EAIxB,SAJKq4D,KAMJr4D,EAAAzD,KAAA+C,KAEAA,MAAKg5D,oBAAsB,GAAIF,GAAmB94D,MAG5C+4D,EAAAx4D,UAAA27B,SAAP,SAAgBD,GAEfv7B,EAAAH,UAAM27B,SAAQj/B,KAAA+C,KAACi8B,GAST88B,GAAAx4D,UAAA43D,kBAAP,SAAyBX,GAExB,GAAIA,EAAKtC,eAAehnD,WAAalO,MAAQw3D,EAAKtC,eAAe1/C,SAAU,CAC1ExV,KAAK40D,UAA6B4C,CAClC,OAAO,MAGR,IAAKA,EAAK/B,kBAAoB+B,EAAKtC,eAAe+D,YACjD,MAAOj5D,MAAKg5D,oBAAoBpB,eAAwCJ,EAAKtC,eAE9E,OAAOl1D,MAAKg5D,oBAAoBpB,eAAeJ,EAAKtC,eAAezN,QAM7DsR,GAAAx4D,UAAA4U,iBAAP,SAAwBmpB,GAEvB59B,EAAAH,UAAM4U,iBAAgBlY,KAAA+C,KAACs+B,EAEvB,IAAIA,EAAc26B,YACjBj5D,KAAK+2D,eAAe/2D,KAAKg5D,oBAAoBpB,eAAwCt5B,IAMhFy6B,GAAAx4D,UAAAyU,mBAAP,SAA0BspB,GAEzB59B,EAAAH,UAAMyU,mBAAkB/X,KAAA+C,KAACs+B,EAEzB,IAAIA,EAAc26B,YACjBj5D,KAAKk4D,cAAcl4D,KAAKg5D,oBAAoBpB,eAAwCt5B,IAEvF,OAAAy6B,IAxDkC56D,EA0DlCf,GAA6BJ,QAApB+7D,I9F+8dNz5D,6CAA6C,6CAA6C45D,6CAA6C,+CAA+C15D,2CAA2C,SAAStD,EAAQkB,EAAOJ,GAC5P,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+FzhetB,IAAOpC,GAAU/B,EAAe,0C/FiiehC,I+FzheMmC,GAAU,SAAAqC,GAASX,EAAnB1B,EAAUqC,EAAhB,SAAMrC,KAAmBqC,EAAAo0D,MAAA90D,KAAA61B,WAKjBx3B,EAAAkC,UAAAw0D,gBAAP,SAAuB94B,GAEtB,GAAIA,EAAU+4B,UAAUh1D,MACvBi8B,EAAUk9B,YAAYn5D,KAAKk1D,gBAStB72D,GAAAkC,UAAAowB,YAAP,SAAmBC,EAAuBC,GAEzC,IAAK7wB,KAAKk1D,eAAeh/C,YACxB,MAAO,MAGR,OAAO,MAET,OAAA7X,IAzByBJ,EA2BzBb,GAAoBJ,QAAXqB,I/F0heNe,0CAA0C,4CAA4Cg6D,mCAAmC,SAASl9D,EAAQkB,EAAOJ,SAE9Iq8D,4CAA4C,SAASn9D,EAAQkB,EAAOJ,SAEpEs8D,6CAA6C,SAASp9D,EAAQkB,EAAOJ,GgGnke3E,GAAOiJ,GAAQ/J,EAAiB,gCAChC,IAAO8J,GAAK9J,EAAiB,6BhG6ke7B,IgGzjeMq9D,GAAiB,WAStB,QATKA,GASOC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MAEXx5D,KAAKy5D,sBAAwBD,EAYvBD,EAAAh5D,UAAAusC,uBAAP,SAA8B4sB,EAAqBl1D,EAAuBC,EAAuCC,GAEhHD,EAAmBkvC,gBAAkB,IAUrC,OAAO,OAYD4lB,GAAAh5D,UAAAkvB,sBAAP,SAA6BkqC,EAAyCn1D,EAAuBC,EAAuCC,GAEnI,GAAIyxD,GAAuB1xD,EAAmB+xD,gBAC9C,IAAIJ,GAAwB3xD,EAAmBgyD,iBAC/C,IAAIr6D,EACJ,IAAIw9D,GAAWC,EAAWC,CAC1B,IAAIzlC,GAAWC,EAAWC,CAC1B,IAAIwlC,GAAWC,EAAWC,CAC1B,IAAI5nC,GAAWC,EAAWC,CAC1B,IAAI2nC,GAAcz9D,EAAUqkC,EAAU8a,CACtC,IAAI3qC,GAAYC,EAAYipD,CAC5B,IAAIhpD,GAAYC,EAAYgpD,CAC5B,IAAI/oD,GAAYC,EAAY+oD,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAWC,EAAcC,EAAUC,CACvC,IAAIC,GAAaC,EAAaC,EAAaC,EAAYC,CACvD,IAAIz3D,GAAsBg2D,EAAoBh2D,QAAQ9C,IAAI84D,EAAoB0B,YAC9E,IAAIC,IAAiC,CACrC,IAAIC,GAAoB/2D,EAAS+2D,SAEjC,IAAIp3D,GAAyBw1D,EAAoBx1D,UAAUtD,IAAI84D,EAAoB9c,YACnF,IAAI2e,GAAgB7B,EAAoBx1D,UAAUopB,UAClD,IAAI1pB,GAAmB81D,EAAoB91D,IAAIhD,IAAI84D,EAAoB9c,YACvE,IAAI4e,IAAe9B,EAAoB91D,IAAI0pB,UAC3C,IAAImuC,IAAoB/3D,EAAQzG,MAChC,KAAK,GAAI0f,IAAe,EAAGA,GAAQ8+C,GAAY9+C,IAAS,EAAG,CAE1Dg9C,EAAKj2D,EAAQiZ,IAAO4+C,CACpB3B,GAAKl2D,EAAQiZ,GAAQ,GAAG4+C,CACxB1B,GAAKn2D,EAAQiZ,GAAQ,GAAG4+C,CAGxBvqD,GAAM9M,EAAUy1D,EAChB1oD,GAAM/M,EAAUy1D,EAAK,EACrBO,GAAMh2D,EAAUy1D,EAAK,EACrBzoD,GAAMhN,EAAU01D,EAChBzoD,GAAMjN,EAAU01D,EAAK,EACrBO,GAAMj2D,EAAU01D,EAAK,EACrBxoD,GAAMlN,EAAU21D,EAChBxoD,GAAMnN,EAAU21D,EAAK,EACrBO,GAAMl2D,EAAU21D,EAAK,EAGrBQ,GAAMnpD,EAAMF,CACZspD,GAAMnpD,EAAMF,CACZspD,GAAMJ,EAAMD,CACZM,GAAMppD,EAAMJ,CACZypD,GAAMppD,EAAMJ,CACZypD,GAAMN,EAAMF,CACZJ,GAAKQ,EAAII,EAAMH,EAAIE,CACnBV,GAAKQ,EAAIC,EAAMH,EAAIK,CACnBV,GAAKK,EAAII,EAAMH,EAAIE,CACnBG,GAAK,EAAE59C,KAAK0P,KAAKqtC,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EACpCF,IAAMa,CACNZ,IAAMY,CACNX,IAAMW,CAGNC,GAAQd,EAAG3D,EAAavsD,EAAImwD,GAAK5D,EAAarsD,EAAIkwD,EAAG7D,EAAansD,CAClE,KAAOsxD,GAAaV,EAAQ,GAAWU,GAAaV,GAAS,EAAO,CAEnEC,IAAOf,EAAG9oD,EAAM+oD,EAAG9oD,EAAM+oD,EAAGE,EAC5BY,KAAgBhB,EAAG5D,EAAYtsD,EAAImwD,EAAG7D,EAAYpsD,EAAIkwD,EAAG9D,EAAYlsD,EAAI6wD,EACzE1+D,GAAI2+D,EAAWF,CAEfxoC,GAAK8jC,EAAYtsD,EAAIzN,EAAEg6D,EAAavsD,CACpCyoB,GAAK6jC,EAAYpsD,EAAI3N,EAAEg6D,EAAarsD,CACpCwoB,GAAK4jC,EAAYlsD,EAAI7N,EAAEg6D,EAAansD,CAEpC+wD,GAAOV,EAAIG,EAAMF,EAAIG,EAAMF,EAAIG,CAC/BM,GAAOX,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BU,GAAOT,EAAIA,EAAMC,EAAIA,EAAMC,EAAIA,CAC/BtmC,GAAKhC,EAAKphB,CACVqjB,GAAKhC,EAAKphB,CACVqjB,GAAKhC,EAAK4nC,CACVgB,GAAM9mC,EAAGimC,EAAMhmC,EAAGimC,EAAMhmC,EAAGimC,CAC3BY,GAAM/mC,EAAGomC,EAAMnmC,EAAGomC,EAAMnmC,EAAGomC,CAC3BT,GAAQ,GAAGe,EAAKC,EAAOF,EAAKA,EAC5Bl6B,GAAIo5B,GAAOgB,EAAKC,EAAMH,EAAKI,EAC3Bxf,GAAIse,IAAQc,EAAKG,EAAMF,EAAKG,EAC5B,IAAIt6B,EAAI,EACP,QACD,IAAI8a,EAAI,EACP,QACDn/C,GAAI,EAAIqkC,EAAI8a,CACZ,MAAOn/C,EAAI,IAAOL,EAAI,GAAKA,EAAIsI,EAA2B,CACzDA,EAA4BtI,CAC5Bk/D,GAAyB1+C,GAAM,CAC/BnY,GAAmB+8B,iBAAmBplC,CACtCqI,GAAmBi6B,cAAgB,GAAIz4B,GAASosB,EAAIC,EAAIC,EACxD9tB,GAAmBs8C,YAAc,GAAI96C,GAAS8zD,EAAIC,EAAIC,EACtDx1D,GAAmBq8C,GAAK9gD,KAAK27D,gBAAgBh4D,EAASE,EAAK+Y,GAAOkkB,EAAG8a,EAAGn/C,EAAGg/D,GAC3Eh3D,GAAmBmY,MAAQA,EAI3B,KAAK5c,KAAKy5D,sBACT,MAAO,QAMX,GAAI6B,GAA0B,EAC7B,MAAO,KAER,OAAO,OAYD/B,GAAAh5D,UAAAoE,mBAAP,SAA0Bi3D,EAAmCp3D,EAAuBC,EAAuCC,GAE1H,GAAIyxD,GAAuB1xD,EAAmB+xD,gBAC9C,IAAIJ,GAAwB3xD,EAAmBgyD,iBhGwiezC,IgGpieFzlC,GAAiB,GAAI/qB,GAAS,EAAE,GAAG,EAAE,EAEzC,IAAIy6C,GAAkB,GAAIz6C,EAC1B,IAAIulB,GAAkBwF,EAAMnnB,EAAIssD,EAAYtsD,EAAImnB,EAAMjnB,EAAIosD,EAAYpsD,EAAIinB,EAAM/mB,EAAIksD,EAAYlsD,EAAI+mB,EAAM4qB,CAC1G8E,GAAO72C,EAAIssD,EAAYtsD,EAAMmnB,EAAMnnB,EAAE2hB,CACrCk1B,GAAO32C,EAAIosD,EAAYpsD,EAAMinB,EAAMjnB,EAAEyhB,CACrCk1B,GAAOz2C,EAAIksD,EAAYlsD,EAAM+mB,EAAM/mB,EAAEuhB,CACrC,IAAIqwC,GAAkB,GAAI51D,GAAS+qB,EAAMnnB,EAAEmnB,EAAMjnB,EAAEinB,EAAM/mB,EACzD,IAAI7N,IAAa+5D,EAAY2F,WAAWD,GAAUzF,EAAa0F,WAAWD,EAC1EzF,GAAalwB,QAAQ9pC,EACrB,IAAI+D,GAAag2D,EAAYlwB,IAAImwB,EAEjC,IAAIzyD,GAAsBi4D,EAAiBj4D,QAAQ9C,IAAI+6D,EAAiBP,YACxE,IAAIU,IAA8B,CAClC,IAAIR,GAAoB/2D,EAAS+2D,SAGjC,IAAIp3D,GAAyBy3D,EAAiBz3D,UAAUtD,IAAI+6D,EAAiB/e,YAC7E,IAAI2e,GAAgBI,EAAiBz3D,UAAUopB,UAC/C,IAAIwvB,GAAsB6e,EAAiB7e,OAAOl8C,IAAI+6D,EAAiB/e,YACvE,IAAImf,GAAkBJ,EAAiB7e,OAAOxvB,UAC9C,IAAI1pB,GAAsB+3D,EAAiB/3D,IAAIhD,IAAI+6D,EAAiB/e,YACpE,IAAI4e,GAAeG,EAAiB/3D,IAAI0pB,UACxC,IAAImuC,GAAoB/3D,EAAQzG,MAGhC,KAAI,GAAI0f,GAAe,EAAGA,EAAQ8+C,EAAY9+C,GAAO,EACrD,CACC,GAAIq/C,GAAat4D,EAAQiZ,EACzB,IAAIs/C,GAAav4D,EAAQiZ,EAAQ,GAAK4+C,CACtC,IAAIW,GAAax4D,EAAQiZ,EAAQ,GAAK4+C,CAEtC,IAAI3wC,GAAY1mB,EAAU83D,EAAMT,EAChC,IAAI1wC,GAAY3mB,EAAU83D,EAAMT,EAAS,EACzC,IAAIY,GAAYj4D,EAAU+3D,EAC1B,IAAIG,GAAYl4D,EAAU+3D,EAAM,EAChC,IAAI7pC,GAAYluB,EAAUg4D,EAC1B,IAAI7pC,GAAYnuB,EAAUg4D,EAAM,EAEhC,IAAIG,GAAgBvf,EAAOkf,EAAMD,EACjC,IAAIjxC,GAAY5mB,EAAU83D,EAAMT,EAAS,EhG8hehC,IgGzheLroD,GAAY0X,EAAK1qB,EAAE0J,CACvB,IAAIuJ,GAAY0X,EAAK3qB,EAAE4J,ChG2hed,IgGxheLgwD,GAAYsC,EAAKvxC,CACrB,IAAIkvC,KAAcoC,EAAKvxC,EhG0hed,IgGtheL0xC,GAAcppD,EAAK4mD,EAAO3mD,EAAK4mD,CAEnC,IAAIuC,EAAM,EACT,QAEDppD,GAAKipD,EAAKj8D,EAAE0J,CACZuJ,GAAKipD,EAAKl8D,EAAE4J,CACZgwD,GAAKznC,EAAK+pC,CACVrC,KAAO3nC,EAAK+pC,EAEZG,GAAOppD,EAAK4mD,EAAO3mD,EAAK4mD,CAExB,IAAIuC,EAAM,EACT,QAEDppD,GAAKkf,EAAKlyB,EAAE0J,CACZuJ,GAAKkf,EAAKnyB,EAAE4J,CACZgwD,GAAKjvC,EAAKwH,CACV0nC,KAAOnvC,EAAKwH,EAEZkqC,GAAOppD,EAAK4mD,EAAO3mD,EAAK4mD,CAExB,IAAIuC,EAAM,EACT,QAGD,IAAID,GAAU,EAAG,CAEhB,GAAIE,GAAaJ,EAAKvxC,CACtB,IAAI4xC,GAAaJ,EAAKvxC,CACtB,IAAI4xC,GAAarqC,EAAKxH,CACtB,IAAI8xC,GAAarqC,EAAKxH,CACtB,IAAI8xC,GAAaz8D,EAAE0J,EAAIghB,CACvB,IAAIgyC,GAAa18D,EAAE4J,EAAI+gB,CAEvB,IAAIgyC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI37B,IAAY87B,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIlhB,IAAY4gB,EAAMK,EAAMD,EAAMH,GAAOK,CACzC,IAAIrgE,GAAW,EAAIqkC,EAAI8a,CAEvB,IAAImhB,GAAY,GAAMj8B,EAAI8a,CAC1B,IAAIohB,GAAYphB,CAEhB,IAAI37C,GAAW88D,EAAKA,EAAKC,CAEzB,IAAK/8D,EAAI,GAAK8qB,IAAO,GAAO9qB,EAAI,GAAK8qB,GAAM,EAC1C,SAIF,GAAIS,EAAW9mB,EAA2B,CACzCA,EAA4B8mB,CAC5BuwC,GAAsBn/C,EAAM,CAC5BnY,GAAmB+8B,iBAAmBhW,CACtC/mB,GAAmBi6B,cAAgBv+B,CACnCsE,GAAmBs8C,YAAc,GAAI96C,GAAS,EAAG,EAAG,EACpDxB,GAAmBq8C,GAAK9gD,KAAK27D,gBAAgBh4D,EAASE,EAAK+Y,EAAOkkB,EAAG8a,EAAGn/C,EAAGg/D,EAC3Eh3D,GAAmBmY,MAAQA,CAI3B,KAAK5c,KAAKy5D,sBACT,MAAO,OAIV,GAAIsC,GAAuB,EAC1B,MAAO,KAER,OAAO,OAYDxC,GAAAh5D,UAAA+c,kBAAP,SAAyB2/C,EAAiCz4D,EAAuBC,EAAuCC,GAEvH,MAAO,OAIA60D,GAAAh5D,UAAAo7D,gBAAR,SAAwBh4D,EAAqBu5D,EAAwBC,EAAsBr8B,EAAU8a,EAAUn/C,EAAUg/D,GAExH,GAAI3a,GAAW,GAAI96C,EACnB,IAAIo3D,GAAgBz5D,EAAQw5D,GAAe1B,CAC3C,IAAI4B,GAAe,GAAIp3D,GAASi3D,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAASz5D,EAAQw5D,EAAgB,GAAG1B,CACpC,IAAI6B,GAAe,GAAIr3D,GAASi3D,EAAOE,GAASF,EAAOE,EAAS,GAChEA,GAASz5D,EAAQw5D,EAAgB,GAAG1B,CACpC,IAAI8B,GAAe,GAAIt3D,GAASi3D,EAAOE,GAASF,EAAOE,EAAS,GAChEtc,GAAGj3C,EAAIpN,EAAE4gE,EAAIxzD,EAAIi3B,EAAEw8B,EAAIzzD,EAAI+xC,EAAE2hB,EAAI1zD,CACjCi3C,GAAG/2C,EAAItN,EAAE4gE,EAAItzD,EAAI+2B,EAAEw8B,EAAIvzD,EAAI6xC,EAAE2hB,EAAIxzD,CACjC,OAAO+2C,GAET,OAAAyY,KAEAn8D,GAA2BJ,QAAlBu8D,IhGsgeNthD,6BAA6B7W,UAAU+W,gCAAgC/W,YAAYsX,8CAA8C,SAASxc,EAAQkB,EAAOJ,GAS5J,GiG/1eMsJ,GAAkB,WA0EvB,QA1EKA,GA0EOg4B,GAEXt+B,KAAKs+B,cAAgBA,EAGfh4B,EAAA/F,UAAAU,QAAP,WAECjB,KAAKs+B,cAAgB,IACrBt+B,MAAK2zC,gBAAkB,KAGzB,OAAArtC,KAE4BlJ,GAAAJ,QAAnBsJ,OjGyxeHu7B,yCAAyC,SAAS3lC,EAAQkB,EAAOJ,GkG93evE,GAAOiJ,GAAQ/J,EAAgB,gCAU/B,IAAOshE,GAAgBthE,EAAc,+ClG83erC,IkGp3eMogC,GAAa,WAiClB,QAjCKA,GAiCOk9B,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,MA1BJx5D,KAAAy9D,mBACAz9D,MAAA09D,kBAA4B,IAG5B19D,MAAA29D,aAAsB,CAwB7B39D,MAAK49D,kBAAoB,GAAIJ,EAE7Bx9D,MAAKy5D,sBAAwBD,CAC7Bx5D,MAAK69D,UAAY,GAAI37D,OArBtBvB,OAAAC,eAAW07B,EAAA/7B,UAAA,oBlGu3eJM,IkGv3eP,WAEC,MAAOb,MAAK09D,mBlGw3eNp6D,IkGr3eP,SAA4ByF,GAE3B/I,KAAK09D,kBAAoB30D,GlGs3enBhI,WAAY,KACZC,aAAc,MkGn2eds7B,GAAA/7B,UAAAigC,iBAAP,SAAwB32B,EAAUE,EAAU82C,GAE3C7gD,KAAKiwB,GAAKpmB,CACV7J,MAAKkwB,GAAKnmB,CACV/J,MAAK89D,MAAQjd,ClGy2eP,IkGt2eFsV,GAAuBtV,EAAKtiB,UAAU10B,EAAGE,EAAG,EAChD,IAAIqsD,GAAwBvV,EAAKtiB,UAAU10B,EAAGE,EAAG,GAAG2I,SAASyjD,EAE7D,OAAOn2D,MAAK+9D,kBAAkB5H,EAAaC,EAAcvV,EAAKhsC,OAMxDynB,GAAA/7B,UAAAw9D,kBAAP,SAAyB5H,EAAsBC,EAAuBvhD,GAGrE7U,KAAK49D,kBAAkB3oD,OAGvBjV,MAAK49D,kBAAkBzH,YAAcA,CACrCn2D,MAAK49D,kBAAkBxH,aAAeA,CAGtCvhD,GAAMmnB,mBAAmBh8B,KAAK49D,kBAE9B59D,MAAK29D,aAAe,CACpB,IAAInG,GAAsBx3D,KAAK49D,kBAAkBI,UACjD,IAAIjiD,EAEJ,OAAOy7C,EAAM,CACZ,IAAKx3D,KAAKi+D,UAAUliD,EAASy7C,EAAKz7C,QACjC/b,KAAK69D,UAAU79D,KAAK29D,gBAAkB5hD,CAEvCy7C,GAAOA,EAAK0G,KAIb,IAAKl+D,KAAK29D,aACT,MAAO,KAER,OAAO39D,MAAKm+D,sBAAsBn+D,KAAK49D,mBAoBjCthC,GAAA/7B,UAAA69D,cAAP,SAAqBC,GAEpBr+D,KAAKy9D,iBAAmBY,EAGjB/hC,GAAA/7B,UAAA09D,UAAR,SAAkBliD,GAEjB,GAAI/b,KAAK09D,oBAAsB3hD,EAAOjF,mBACrC,MAAO,KAER,IAAI7J,GAAajN,KAAKy9D,iBAAiBvgE,MACvC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAC/B,GAAIqD,KAAKy9D,iBAAiB9gE,IAAMof,EAC/B,MAAO,KAET,OAAO,OAGAugB,GAAA/7B,UAAA+9D,YAAR,SAAoBC,EAAiBC,GAEpC,MAAOD,GAAQhI,qBAAqB/0B,iBAAmBg9B,EAAQjI,qBAAqB/0B,iBAAkB,GAAK,EAGpGlF,GAAA/7B,UAAA49D,sBAAR,SAA8BM,GAG7Bz+D,KAAK69D,UAAU3gE,OAAS8C,KAAK29D,YAG7B39D,MAAK69D,UAAY79D,KAAK69D,UAAUa,KAAK1+D,KAAKs+D,YlGq1epC,IkG90eF55D,GAAmC6hB,OAAOo4C,SAC9C,IAAIC,EACJ,IAAIn6D,EACJ,IAAIsX,EACJ,IAAIpf,EAEJ,KAAKA,EAAI,EAAGA,EAAIqD,KAAK29D,eAAgBhhE,EAAG,CACvCof,EAAS/b,KAAK69D,UAAUlhE,EACxB8H,GAAqBsX,EAAOw6C,oBAC5B,IAAIx6C,EAAOxX,gBAAiB,CAE3B,IAAKq6D,GAAmB,MAAQn6D,EAAmB+8B,iBAAmBo9B,EAAgBp9B,mBAAqBzlB,EAAOzX,gBAAgBI,EAA2B1E,KAAKy5D,uBAAwB,CACzL/0D,EAA4BD,EAAmB+8B,gBAC/Co9B,GAAkBn6D,CAClB,KAAKzE,KAAKy5D,sBAAuB,CAChCz5D,KAAK6+D,oBAAoBp6D,EACzB,OAAOA,SAGH,IAAIm6D,GAAmB,MAAQn6D,EAAmB+8B,iBAAmBo9B,EAAgBp9B,iBAAkB,CAK7G,IAAK/8B,EAAmBiyD,yBAA2B12D,KAAK8+D,kBAAkB/iD,EAAOxF,mBAAqB,CACrGvW,KAAK6+D,oBAAoBp6D,EACzB,OAAOA,KAMVzE,KAAK69D,UAAU3gE,OAAS,CAExB,OAAO0hE,GAGAtiC,GAAA/7B,UAAAu+D,kBAAR,SAA0BvwD,GAGzB,GAAIA,GAAS,KAAM,CAClB,GAAIjB,GAAoBtN,KAAK89D,MAAMv/B,UAAUv+B,KAAKiwB,GAAIjwB,KAAKkwB,GAAI,IAC/D,IAAI7Y,GAAmB9I,EAAMrR,MAC7B,IAAI6hE,EACJ,IAAIznD,EACJ,IAAI0nD,EACJ,KAAK,GAAIriE,GAAW,EAAGA,EAAI0a,EAAW1a,IAAK,CAC1CoiE,EAAWxwD,EAAM5R,EACjB2a,GAAcynD,EAAS7hE,MACvB8hE,GAAW,KACX,KAAK,GAAIvnD,GAAW,EAAGA,EAAIH,EAAaG,IAAK,CAC5C,GAAIsnD,EAAStnD,GAAG3F,aAAaxE,EAASzD,EAAGyD,EAASvD,EAAG,KAAM,MAAO,CACjEi1D,EAAW,IACX,QAIF,IAAKA,EACJ,MAAO,QAIV,MAAO,MAIA1iC,GAAA/7B,UAAAs+D,oBAAR,SAA4Bp6D,GAE3B,GAAIw6D,GAA0Bx6D,EAAmBi6B,eAAiB,KAASj6B,EAAmBi6B,cAAgB,GAAIz4B,GAAcxB,EAAmBi6B,aAEnJ,IAAIwgC,GAAkBz6D,EAAmBgyD,iBACzC,IAAI0I,GAAkB16D,EAAmB+xD,gBACzC,IAAIp6D,GAAWqI,EAAmB+8B,gBAClCy9B,GAAap1D,EAAIs1D,EAAOt1D,EAAIzN,EAAE8iE,EAAOr1D,CACrCo1D,GAAal1D,EAAIo1D,EAAOp1D,EAAI3N,EAAE8iE,EAAOn1D,CACrCk1D,GAAah1D,EAAIk1D,EAAOl1D,EAAI7N,EAAE8iE,EAAOj1D,EAG/BqyB,GAAA/7B,UAAAU,QAAP,YAID,OAAAq7B,KAEuBl/B,GAAAJ,QAAds/B,IlGo0eNnkB,gCAAgC/W,UAAUg+D,+CAA+C,iDAAiDC,8CAA8C,SAASnjE,EAAQkB,EAAOJ,GmG3jfnN,GAAOsiE,GAAcpjE,EAAc,yCnGgkfnC,ImG3jfMqjE,GAAkB,WASvB,QATKA,KAGGv/D,KAAAw/D,OAAgB,CAChBx/D,MAAAy/D,UAAmB,CAO1Bz/D,MAAK0/D,MAAQ,GAAIx9D,OAMXq9D,EAAAh/D,UAAAo/D,QAAP,WAEC,GAAIC,EACJ,IAAI5/D,KAAKw/D,QAAUx/D,KAAKy/D,UAAW,CAClCG,EAAO,GAAIN,EACXt/D,MAAK0/D,MAAM1/D,KAAKw/D,UAAYI,IAC1B5/D,KAAKy/D,cACD,CACNG,EAAO5/D,KAAK0/D,MAAM1/D,KAAKw/D,UAExB,MAAOI,GAMDL,GAAAh/D,UAAAs/D,QAAP,WAEC,GAAID,EACJ,IAAI3yD,GAAajN,KAAK0/D,MAAMxiE,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IAAK,CACpCijE,EAAO5/D,KAAK0/D,MAAM/iE,EAClBijE,GAAK7jD,OAAS,IACd6jD,GAAK1B,KAAO,KAGbl+D,KAAKw/D,OAAS,EAGRD,GAAAh/D,UAAAU,QAAP,WAECjB,KAAK0/D,MAAMxiE,OAAS,EAEtB,OAAAqiE,KAEAniE,GAA4BJ,QAAnBuiE,InGmjfNO,yCAAyC,2CAA2CA,0CAA0C,SAAS5jE,EAAQkB,EAAOJ,GAIzJ,GoG3mfMsiE,GAAc,WAApB,QAAMA,MAWN,MAAAA,KAEAliE,GAAwBJ,QAAfsiE,OpGqmfHpG,8CAA8C,SAASh9D,EAAQkB,EAAOJ,GqGrnf5E,GAAOw7D,GAAct8D,EAAc,8CrG0nfnC,IqGpnfM6jE,GAAiB,WAUtB,QAVKA,GAUO7xD,GARJlO,KAAAggE,mBAA4B,GAAIr/D,OAUvCX,MAAKs2D,WAAapoD,EASZ6xD,EAAAx/D,UAAAq3D,eAAP,SAAsBqI,GAErB,MAAQjgE,MAAKggE,mBAAmBC,EAAuBt9D,MAAQ3C,KAAKggE,mBAAmBC,EAAuBt9D,IAAM,GAAI61D,GAAeyH,EAAwBjgE,OAQzJ+/D,GAAAx/D,UAAAu3D,iBAAP,SAAwBmI,SAEhBjgE,MAAKggE,mBAAmBC,EAAuBt9D,IAExD,OAAAo9D,KAEA3iE,GAA2BJ,QAAlB+iE,IrG8mfNxH,8CAA8C,gDAAgDtkB,uCAAuC,SAAS/3C,EAAQkB,EAAOJ,GsGxpfhK,GAAOuf,GAAergB,EAAc,0CACpC,IAAO4wB,GAAmB5wB,EAAa,8CACvC,IAAO4F,GAAgB5F,EAAc,2CAIrC,IAAOyhB,GAAWzhB,EAAe,sCACjC,IAAOyzB,GAAezzB,EAAc,0CACpC,IAAOgJ,GAAYhJ,EAAe,uCtG0pflC,IsGnpfM81C,GAAW,WAAjB,QAAMA,MAISA,EAAA0B,cAAd,SAA4BvuC,EAA6BC,EAAiBZ,GAAA,GAAAA,QAAA,GAA4B,CAA5BA,EAAA,KAEzE,GAAI07D,GAA6BluB,EAAYmuB,UAAUh7D,EAAYjE,UAEnE,KAAKg/D,EAAa76D,WAAWnI,OAC5B,MAAO,IAAIgjE,GAAa/6D,EAAaC,EAAYZ,EAElD,IAAI47D,GAAsBF,EAAa76D,WAAWguC,KAElD+sB,GAAWj7D,YAAcA,CACzBi7D,GAAWh7D,WAAaA,CACxBg7D,GAAW57D,SAAWA,CAEtB,OAAO47D,GAOMpuB,GAAAquB,cAAd,SAA4BH,EAA4B36D,GAEvDysC,EAAYmuB,UAAU56D,EAAWrE,WAAag/D,EAOjCluB,GAAAsuB,SAAd,SAAuBn7D,GAEtB,MAAO6sC,GAAYmuB,UAAUh7D,EAAYjE,WAK3B8wC,GAAAuuB,YAAf,WAECvuB,EAAYquB,cAAc1iD,EAAapB,EACvCy1B,GAAYquB,cAAc1wC,EAAiB7C,EAC3CklB,GAAYquB,cAAcn7D,EAAcpD,GA1C1BkwC,GAAAmuB,UAAmB,GAAIx/D,OAoCvBqxC,GAAAwuB,KAAOxuB,EAAYuuB,aAQnC,OAAAvuB,KAEA50C,GAAqBJ,QAAZg1C,ItG0ofNvwC,2CAA2C,2CAA2CuD,uCAAuC,uCAAuCmX,0CAA0C,0CAA0CuB,sCAAsC,sCAAsCmP,8CAA8C,8CAA8C6C,0CAA0C,4CAA4C+wC,yCAAyC,SAASvkE,EAAQkB,EAAOJ,GAC1jB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GuGjtftB,IAAOG,GAAStE,EAAc,oCAC9B,IAAO+d,GAAmB/d,EAAY,6CvGutftC,IuGhtfMwkE,GAAU,SAAAhgE,GAASX,EAAnB2gE,EAAUhgE,EASf,SATKggE,KAWJhgE,EAAAzD,KAAA+C,KATMA,MAAA2gE,UAAiC,GAAIz+D,OAerCw+D,EAAAngE,UAAAkzB,aAAP,WAEC,GAAIwsB,GAAuBjgD,KAAK4gE,gBAEhC5gE,MAAK2gE,UAAUr7D,KAAK26C,EAEpB,OAAOA,GAYDygB,GAAAngE,UAAAqgE,eAAP,WAEC,KAAM,IAAI3mD,GAGJymD,GAAAngE,UAAAyO,WAAP,YAID,OAAA0xD,IA5CyBlgE,EA8CzBpD,GAAoBJ,QAAX0jE,IvGssfN1kD,6CAA6C5a,UAAUD,oCAAoCC,YAAYy/D,qDAAqD,SAAS3kE,EAAQkB,EAAOJ,GACvL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GwG5vftB,IAAOygE,GAAmB5kE,EAAY,iDxGkwftC,IwG7vfM6kE,GAAsB,SAAArgE,GAASX,EAA/BghE,EAAsBrgE,EA6F3B,SA7FKqgE,GA6FO3sC,EAAoBjqB,EAAqB62D,EAAuBC,EAAuBC,GAAvF,GAAA9sC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAjqB,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA62D,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAElGxgE,EAAAzD,KAAA+C,KAxFOA,MAAAgC,aAAsB,CA0F7BhC,MAAKg0B,QAAUI,CACfp0B,MAAKqK,QAAUF,CACfnK,MAAKmhE,WAAaH,CAClBhhE,MAAKohE,WAAcH,EAAU,GAAK,EAAIA,EAAY,EAAIA,CACtDjhE,MAAKqhE,KAAOH,EAzFbvgE,OAAAC,eAAWmgE,EAAAxgE,UAAA,UxG6wfJM,IwG7wfP,WAEC,MAAOb,MAAKg0B,SxG8wfN1wB,IwG3wfP,SAAkByF,GAEjB/I,KAAKg0B,QAAUjrB,CAEf/I,MAAKshE,wBxG2wfCvgE,WAAY,KACZC,aAAc,MwGtwfrBL,QAAAC,eAAWmgE,EAAAxgE,UAAA,UxG4wfJM,IwG5wfP,WAEC,MAAOb,MAAKqK,SxG6wfN/G,IwG1wfP,SAAkByF,GAEjB/I,KAAKqK,QAAUtB,CACf/I,MAAKshE,wBxG2wfCvgE,WAAY,KACZC,aAAc,MwGtwfrBL,QAAAC,eAAWmgE,EAAAxgE,UAAA,axG4wfJM,IwG5wfP,WAEC,MAAOb,MAAKmhE,YxG6wfN79D,IwG1wfP,SAAqByF,GAEpB/I,KAAKmhE,WAAap4D,CAElB/I,MAAKshE,sBACLthE,MAAKuhE,mBxG0wfCxgE,WAAY,KACZC,aAAc,MwGrwfrBL,QAAAC,eAAWmgE,EAAAxgE,UAAA,axG2wfJM,IwG3wfP,WAEC,MAAOb,MAAKohE,YxG4wfN99D,IwGzwfP,SAAqByF,GAEpB/I,KAAKohE,WAAcr4D,EAAM,GAAK,EAAIA,EAAQ,EAAIA,CAE9C/I,MAAKshE,sBACLthE,MAAKuhE,mBxGywfCxgE,WAAY,KACZC,aAAc,MwGpwfrBL,QAAAC,eAAWmgE,EAAAxgE,UAAA,OxG0wfJM,IwG1wfP,WAEC,MAAOb,MAAKqhE,MxG2wfN/9D,IwGxwfP,SAAeyF,GAEd/I,KAAKqhE,KAAOt4D,CAEZ/I,MAAKshE,wBxGwwfCvgE,WAAY,KACZC,aAAc,MwGhvfd+/D,GAAAxgE,UAAAihE,gBAAP,SAAuB1+D,EAAwB0wB,GAE9C,GAAI7vB,EACJ,IAAIQ,EACJ,IAAI8qB,EACJ,IAAIC,EAEJ,IAAIvyB,EACJ,IAAI8a,EACJ,IAAIgqD,GAAkB,CACtB,IAAI7kD,GAAe,CACnB,IAAI8kD,EACJ,IAAIC,GAAcC,EAAcC,EAAWC,CAC3C,IAAIpG,GAAoB,CAExB,IAAIloC,GAAgB,sBAAuB,CAE1C,GAAIuuC,GAA6Dj/D,CAGjE9C,MAAKgC,cAAgBhC,KAAKohE,WAAa,IAAIphE,KAAKmhE,WAAa,EAC7DzF,IAAc17D,KAAKohE,WAAa,GAAGphE,KAAKmhE,WAAW,CAGnD,IAAInhE,KAAKgC,cAAgB+/D,EAAiBllB,YAAa,CACtDl5C,EAAUo+D,EAAiBp+D,QAAQ9C,IAAIkhE,EAAiB1G,YACxDl3D,GAAY49D,EAAiB59D,UAAUtD,IAAIb,KAAKgC,aAChDitB,GAAU8yC,EAAiB9yC,QAAQpuB,IAAIb,KAAKgC,aAC5CktB,GAAW6yC,EAAiB7yC,SAASruB,IAAIb,KAAKgC,kBACxC,CACN2B,EAAU,GAAIkZ,aAAY6+C,EAC1Bv3D,GAAY,GAAIqY,cAAaxc,KAAKgC,aAAa,EAC/CitB,GAAU,GAAIzS,cAAaxc,KAAKgC,aAAa,EAC7CktB,GAAW,GAAI1S,cAAaxc,KAAKgC,aAAa,EAE9ChC,MAAKuhE,kBAGN,IAAK9pD,EAAI,EAAGA,GAAKzX,KAAKohE,aAAc3pD,EAAG,CAEtC,GAAIuqD,GAAkBhlD,KAAKilD,GAAGxqD,EAAEzX,KAAKohE,UACrC,IAAIn3D,IAAYjK,KAAKg0B,QAAQhX,KAAK0mB,IAAIs+B,EACtC,IAAIE,GAAoBliE,KAAKg0B,QAAQhX,KAAKymB,IAAIu+B,EAE9CN,GAAa9kD,CAEb,KAAKjgB,EAAI,EAAGA,GAAKqD,KAAKmhE,aAAcxkE,EAAG,CACtC,GAAIwlE,GAAkB,EAAEnlD,KAAKilD,GAAGtlE,EAAEqD,KAAKmhE,UACvC,IAAIt3D,GAAWq4D,EAAWllD,KAAK0mB,IAAIy+B,EACnC,IAAI/+D,GAAgBqU,EAAIzX,KAAKohE,WAAW,EAAGphE,KAAKqK,QAAQ,GAAKrK,KAAKqK,QAAQ,CAC1E,IAAIN,GAAWm4D,EAAWllD,KAAKymB,IAAI0+B,EACnC,IAAIC,GAAiB,EAAEplD,KAAK0P,KAAK7iB,EAAEA,EAAIE,EAAEA,EAAIE,EAAEA,EAC/C,IAAIo4D,GAAgBrlD,KAAK0P,KAAK3iB,EAAEA,EAAIF,EAAEA,EAEtC,IAAI7J,KAAKqhE,KAAM,CACdQ,EAAK,CACLC,GAAKO,EAAS,KAAMx4D,EAAEw4D,EAAS,CAC/BV,IAAS13D,CACT23D,GAAQ73D,MAEF,CACN83D,EAAKQ,EAAS,KAAMx4D,EAAEw4D,EAAS,CAC/BP,GAAK,CACLH,GAAQ53D,CACR63D,GAAQ33D,EAGT,GAAItN,GAAKqD,KAAKmhE,WAAY,CAEzBh9D,EAAUyY,GAASzY,EAAUu9D,EAC7Bv9D,GAAUyY,EAAQ,GAAKzY,EAAUu9D,EAAa,EAC9Cv9D,GAAUyY,EAAQ,GAAKzY,EAAUu9D,EAAa,EAC9CzyC,GAAQrS,IAAUqS,EAAQyyC,GAAe73D,EAAEu4D,GAAU,EACrDnzC,GAAQrS,EAAQ,IAAMqS,EAAQyyC,EAAa,GAAOC,EAAMS,GAAU,EAClEnzC,GAAQrS,EAAQ,IAAMqS,EAAQyyC,EAAa,GAAME,EAAMQ,GAAU,EACjElzC,GAAStS,IAAUsS,EAASwyC,IAAeW,EAAS,MAAOt4D,EAAEs4D,EAAS,IAAI,EAC1EnzC,GAAStS,EAAQ,IAAMsS,EAASwyC,EAAa,GAAKG,GAAI,EACtD3yC,GAAStS,EAAQ,IAAMsS,EAASwyC,EAAa,GAAKI,GAAI,OAEhD,CAEN39D,EAAUyY,GAAS/S,CACnB1F,GAAUyY,EAAQ,GAAM5c,KAAS,KAAG2hE,EAAQv+D,EAASu+D,CACrDx9D,GAAUyY,EAAQ,GAAM5c,KAAS,KAAG4hE,EAAQA,EAAQx+D,CAEpD6rB,GAAQrS,GAAS/S,EAAEu4D,CACnBnzC,GAAQrS,EAAQ,GAAK+kD,EAAMS,CAC3BnzC,GAAQrS,EAAQ,GAAKglD,EAAMQ,CAE3BlzC,GAAStS,GAASylD,EAAS,MAAOt4D,EAAEs4D,EAAS,CAC7CnzC,GAAStS,EAAQ,GAAKilD,CACtB3yC,GAAStS,EAAQ,GAAKklD,EAGvB,GAAInlE,EAAI,GAAK8a,EAAI,EAAG,CACnB,GAAI/a,IAAYsD,KAAKmhE,WAAa,GAAG1pD,EAAI9a,CACzC,IAAIuD,IAAYF,KAAKmhE,WAAa,GAAG1pD,EAAI9a,EAAI,CAC7C,IAAIs0B,IAAYjxB,KAAKmhE,WAAa,IAAI1pD,EAAI,GAAK9a,EAAI,CACnD,IAAIsD,IAAYD,KAAKmhE,WAAa,IAAI1pD,EAAI,GAAK9a,CAE/C,IAAI8a,GAAKzX,KAAKohE,WAAY,CACzBj9D,EAAUyY,GAASzY,EAAUu9D,EAC7Bv9D,GAAUyY,EAAQ,GAAKzY,EAAUu9D,EAAa,EAC9Cv9D,GAAUyY,EAAQ,GAAKzY,EAAUu9D,EAAa,EAE9C/9D,GAAQ89D,KAAc/kE,CACtBiH,GAAQ89D,KAAcxwC,CACtBttB,GAAQ89D,KAAcxhE,MAEhB,IAAIwX,GAAK,EAAG,CAClB9T,EAAQ89D,KAAc/kE,CACtBiH,GAAQ89D,KAAcvhE,CACtByD,GAAQ89D,KAAcxwC,MAEhB,CACNttB,EAAQ89D,KAAc/kE,CACtBiH,GAAQ89D,KAAcvhE,CACtByD,GAAQ89D,KAAcxwC,CACtBttB,GAAQ89D,KAAc/kE,CACtBiH,GAAQ89D,KAAcxwC,CACtBttB,GAAQ89D,KAAcxhE,GAIxB2c,GAAS,GAKXmlD,EAAiBn+D,WAAWD,EAE5Bo+D,GAAiB7+D,aAAaiB,EAC9B49D,GAAiBr0C,WAAWuB,EAC5B8yC,GAAiBn0C,YAAYsB,OAEvB,IAAIsE,GAAgB,kBAAmB,GAQxCutC,GAAAxgE,UAAA+hE,WAAP,SAAkBx/D,EAAwB0wB,GAEzC,GAAI72B,GAAU8a,CACd,IAAI5T,EAGJ,IAAI2vB,GAAgB,sBAAuB,CAE1C,GAAIuuC,GAA6Dj/D,CAGjE,IAAIi/D,EAAiBl+D,KAAO7D,KAAKgC,cAAgB+/D,EAAiBllB,YAAa,CAC9Eh5C,EAAMk+D,EAAiBl+D,IAAIhD,IAAIb,KAAKgC,kBAC9B,CACN6B,EAAM,GAAI2Y,cAAaxc,KAAKgC,aAAa,GxG+tfjC,GwG3tfL4a,GAAe,CAGnB,KAAKnF,EAAI,EAAGA,GAAKzX,KAAKohE,aAAc3pD,EAAG,CACtC,IAAK9a,EAAI,EAAGA,GAAKqD,KAAKmhE,aAAcxkE,EAAG,CAEtCkH,EAAI+Y,KAAajgB,EAAEqD,KAAKmhE,WAAanhE,KAAKuiE,OAC1C1+D,GAAI+Y,KAAanF,EAAEzX,KAAKohE,WAAaphE,KAAKwiE,SAK5CT,EAAiBn/D,OAAOiB,OAElB,IAAI2vB,GAAgB,kBAAmB,GAIhD,OAAAutC,IA9RqCD,EAgSrC1jE,GAAgCJ,QAAvB+jE,IxGytfN0B,iDAAiD,mDAAmDC,kDAAkD,SAASxmE,EAAQkB,EAAOJ,GACjL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyGtggBtB,IAAOsiE,GAAuBzmE,EAAW,qDzG4ggBzC,IyGvggBM0mE,GAAmB,SAAAliE,GAASX,EAA5B6iE,EAAmBliE,EA0BxB,SA1BKkiE,GA0BOxuC,EAAoBjqB,EAAqB62D,EAAuBC,EAAsB4B,EAAuB3B,GAA7G,GAAA9sC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAAjqB,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA62D,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA4B,QAAA,GAAqB,CAArBA,EAAA,KAAuB,GAAA3B,QAAA,GAAkB,CAAlBA,EAAA,KAExHxgE,EAAAzD,KAAA+C,KAAM,EAAGo0B,EAAQjqB,EAAQ62D,EAAWC,EAAW,MAAO4B,EAAQ,KAAM3B,GAtBrEvgE,OAAAC,eAAWgiE,EAAAriE,UAAA,UzGwhgBJM,IyGxhgBP,WAEC,MAAOb,MAAK8iE,gBzGyhgBNx/D,IyGthgBP,SAAkByF,GAEjB/I,KAAK8iE,eAAiB/5D,CAEtB/I,MAAKshE,wBzGshgBCvgE,WAAY,KACZC,aAAc,MyGxggBtB,OAAA4hE,IA9BkCD,EAgCLvlE,GAAAJ,QAApB4lE,IzG4ggBNG,qDAAqD,uDAAuDnvC,kDAAkD,SAAS13B,EAAQkB,EAAOJ,GACzL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G0GnjgBtB,IAAOygE,GAAmB5kE,EAAY,iD1GyjgBtC,I0GpjgBM6zB,GAAmB,SAAArvB,GAASX,EAA5BgwB,EAAmBrvB,EAqBxB,SArBKqvB,GAqBO3iB,EAAoBjD,EAAqBZ,EAAoBy3D,EAAsBC,EAAsB+B,EAAsBC,GAA/H,GAAA71D,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAjD,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAAZ,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAy3D,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA+B,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,KAE1IviE,EAAAzD,KAAA+C,KAEAA,MAAKkM,OAASkB,CACdpN,MAAKqK,QAAUF,CACfnK,MAAK0J,OAASH,CACdvJ,MAAKmhE,WAAaH,CAClBhhE,MAAKohE,WAAaH,CAClBjhE,MAAKkjE,WAAaF,CAClBhjE,MAAKmjE,OAASF,EAMftiE,OAAAC,eAAWmvB,EAAAxvB,UAAA,S1GgjgBJM,I0GhjgBP,WAEC,MAAOb,MAAKkM,Q1GijgBN5I,I0G9igBP,SAAiByF,GAEhB/I,KAAKkM,OAASnD,CAEd/I,MAAKshE,wB1G8igBCvgE,WAAY,KACZC,aAAc,M0GzigBrBL,QAAAC,eAAWmvB,EAAAxvB,UAAA,U1G+igBJM,I0G/igBP,WAEC,MAAOb,MAAKqK,S1GgjgBN/G,I0G7igBP,SAAkByF,GAEjB/I,KAAKqK,QAAUtB,CAEf/I,MAAKshE,wB1G6igBCvgE,WAAY,KACZC,aAAc,M0GxigBrBL,QAAAC,eAAWmvB,EAAAxvB,UAAA,S1G8igBJM,I0G9igBP,WAEC,MAAOb,MAAK0J,Q1G+igBNpG,I0G5igBP,SAAiByF,GAEhB/I,KAAK0J,OAASX,CAEd/I,MAAKshE,wB1G4igBCvgE,WAAY,KACZC,aAAc,M0GligBrBL,QAAAC,eAAWmvB,EAAAxvB,UAAA,S1G6igBJM,I0G7igBP,WAEC,MAAOb,MAAKmjE,Q1G8igBN7/D,I0G3igBP,SAAiByF,GAEhB/I,KAAKmjE,OAASp6D,CAEd/I,MAAKshE,wB1G2igBCvgE,WAAY,KACZC,aAAc,M0GtigBrBL,QAAAC,eAAWmvB,EAAAxvB,UAAA,a1G4igBJM,I0G5igBP,WAEC,MAAOb,MAAKmhE,Y1G6igBN79D,I0G1igBP,SAAqByF,GAEpB/I,KAAKmhE,WAAap4D,CAElB/I,MAAKshE,sBACLthE,MAAKuhE,mB1G0igBCxgE,WAAY,KACZC,aAAc,M0GrigBrBL,QAAAC,eAAWmvB,EAAAxvB,UAAA,a1G2igBJM,I0G3igBP,WAEC,MAAOb,MAAKohE,Y1G4igBN99D,I0GzigBP,SAAqByF,GAEpB/I,KAAKohE,WAAar4D,CAElB/I,MAAKshE,sBACLthE,MAAKuhE,mB1GyigBCxgE,WAAY,KACZC,aAAc,M0GpigBrBL,QAAAC,eAAWmvB,EAAAxvB,UAAA,a1G0igBJM,I0G1igBP,WAEC,MAAOb,MAAKkjE,Y1G2igBN5/D,I0GxigBP,SAAqByF,GAEpB/I,KAAKkjE,WAAan6D,CAElB/I,MAAKshE,sBACLthE,MAAKuhE,mB1GwigBCxgE,WAAY,KACZC,aAAc,M0GnigBd+uB,GAAAxvB,UAAAihE,gBAAP,SAAuB1+D,EAAwB0wB,GAE9C,GAAI7vB,EACJ,IAAIQ,EACJ,IAAI8qB,EACJ,IAAIC,EAEJ,IAAIosB,GAAW8nB,EAAWC,EAAWC,CACrC,IAAI3mE,GAAU8a,EAAU8rD,EAAa,CAErC,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAW5vC,CAE1B,IAAI6vC,EACJ,IAAIrI,EACJ,IAAI7e,EAGJ6mB,GAAK1jE,KAAKkM,OAAO,CACjBy3D,GAAK3jE,KAAKqK,QAAQ,CAClBu5D,GAAK5jE,KAAK0J,OAAO,CAEjB,IAAI8pB,GAAgB,sBAAuB,CAE1C,GAAIuuC,GAA6Dj/D,CAEjE+5C,KAAgB78C,KAAKmhE,WAAa,IAAInhE,KAAKohE,WAAa,IAAMphE,KAAKmhE,WAAa,IAAInhE,KAAKkjE,WAAa,IAAMljE,KAAKohE,WAAa,IAAIphE,KAAKkjE,WAAa,IAAI,CAExJxH,IAAe17D,KAAKmhE,WAAWnhE,KAAKohE,WAAaphE,KAAKmhE,WAAWnhE,KAAKkjE,WAAaljE,KAAKohE,WAAWphE,KAAKkjE,YAAY,EAEpH,IAAIrmB,GAAeklB,EAAiBllB,aAAeklB,EAAiBp+D,SAAW,KAAM,CACpFA,EAAUo+D,EAAiBp+D,QAAQ9C,IAAIkhE,EAAiB1G,YACxDl3D,GAAY49D,EAAiB59D,UAAUtD,IAAIg8C,EAC3C5tB,GAAU8yC,EAAiB9yC,QAAQpuB,IAAIg8C,EACvC3tB,GAAW6yC,EAAiB7yC,SAASruB,IAAIg8C,OACnC,CACNl5C,EAAU,GAAIkZ,aAAY6+C,EAC1Bv3D,GAAY,GAAIqY,cAAaqgC,EAAY,EACzC5tB,GAAU,GAAIzS,cAAaqgC,EAAY,EACvC3tB,GAAW,GAAI1S,cAAaqgC,EAAY,EAExC78C,MAAKuhE,kBAGNiC,EAAO,CACPC,GAAO,CAGPI,GAAK7jE,KAAKkM,OAAOlM,KAAKmhE,UACtB2C,GAAK9jE,KAAKqK,QAAQrK,KAAKohE,UACvBltC,GAAKl0B,KAAK0J,OAAO1J,KAAKkjE,UAEtB,KAAKvmE,EAAI,EAAGA,GAAKqD,KAAKmhE,WAAYxkE,IAAK,CACtConE,GAAaL,EAAK/mE,EAAEknE,CAEpB,KAAKpsD,EAAI,EAAGA,GAAKzX,KAAKohE,WAAY3pD,IAAK,CAEtCtT,EAAUq/D,GAAQO,CAClB5/D,GAAUq/D,EAAO,IAAMG,EAAKlsD,EAAEqsD,CAC9B3/D,GAAUq/D,EAAO,IAAMI,CACvB30C,GAAQu0C,GAAQ,CAChBv0C,GAAQu0C,EAAO,GAAK,CACpBv0C,GAAQu0C,EAAO,IAAM,CACrBt0C,GAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAO,GAAK,CACrBt0C,GAASs0C,EAAO,GAAK,CACrBA,IAAQ,CAGRr/D,GAAUq/D,GAAQO,CAClB5/D,GAAUq/D,EAAO,IAAMG,EAAKlsD,EAAEqsD,CAC9B3/D,GAAUq/D,EAAO,GAAKI,CACtB30C,GAAQu0C,GAAQ,CAChBv0C,GAAQu0C,EAAO,GAAK,CACpBv0C,GAAQu0C,EAAO,GAAK,CACpBt0C,GAASs0C,IAAS,CAClBt0C,GAASs0C,EAAO,GAAK,CACrBt0C,GAASs0C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI7mE,GAAK8a,EAAG,CACX6jC,EAAK,IAAI3+C,EAAI,IAAIqD,KAAKohE,WAAa,IAAM3pD,EAAI,GAC7C2rD,GAAK,GAAGzmE,GAAGqD,KAAKohE,WAAa,IAAM3pD,EAAI,GACvC4rD,GAAK/nB,EAAK,CACVgoB,GAAKF,EAAK,CAEVz/D,GAAQ8/D,KAAUnoB,CAClB33C,GAAQ8/D,KAAUJ,CAClB1/D,GAAQ8/D,KAAUH,CAClB3/D,GAAQ8/D,KAAUnoB,CAClB33C,GAAQ8/D,KAAUH,CAClB3/D,GAAQ8/D,KAAUL,CAClBz/D,GAAQ8/D,KAAUL,EAAK,CACvBz/D,GAAQ8/D,KAAUH,EAAK,CACvB3/D,GAAQ8/D,KAAUJ,EAAK,CACvB1/D,GAAQ8/D,KAAUL,EAAK,CACvBz/D,GAAQ8/D,KAAUJ,EAAK,CACvB1/D,GAAQ8/D,KAAUnoB,EAAK,IAK1BioB,GAAO,GAAGvjE,KAAKmhE,WAAa,IAAInhE,KAAKohE,WAAa,EAElD,KAAKzkE,EAAI,EAAGA,GAAKqD,KAAKmhE,WAAYxkE,IAAK,CACtConE,GAAaL,EAAK/mE,EAAEknE,CAEpB,KAAKpsD,EAAI,EAAGA,GAAKzX,KAAKkjE,WAAYzrD,IAAK,CAEtCtT,EAAUq/D,GAAQO,CAClB5/D,GAAUq/D,EAAO,GAAKG,CACtBx/D,GAAUq/D,EAAO,IAAMI,EAAKnsD,EAAEyc,CAC9BjF,GAAQu0C,GAAQ,CAChBv0C,GAAQu0C,EAAO,GAAK,CACpBv0C,GAAQu0C,EAAO,GAAK,CACpBt0C,GAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAO,GAAK,CACrBt0C,GAASs0C,EAAO,GAAK,CACrBA,IAAQ,CAGRr/D,GAAUq/D,GAAQO,CAClB5/D,GAAUq/D,EAAO,IAAMG,CACvBx/D,GAAUq/D,EAAO,IAAMI,EAAKnsD,EAAEyc,CAC9BjF,GAAQu0C,GAAQ,CAChBv0C,GAAQu0C,EAAO,IAAM,CACrBv0C,GAAQu0C,EAAO,GAAK,CACpBt0C,GAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAO,GAAK,CACrBt0C,GAASs0C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI7mE,GAAK8a,EAAG,CACX6jC,EAAKioB,EAAM,IAAI5mE,EAAI,IAAIqD,KAAKkjE,WAAa,IAAMzrD,EAAI,GACnD2rD,GAAKG,EAAM,GAAG5mE,GAAGqD,KAAKkjE,WAAa,IAAMzrD,EAAI,GAC7C4rD,GAAK/nB,EAAK,CACVgoB,GAAKF,EAAK,CAEVz/D,GAAQ8/D,KAAUnoB,CAClB33C,GAAQ8/D,KAAUJ,CAClB1/D,GAAQ8/D,KAAUH,CAClB3/D,GAAQ8/D,KAAUnoB,CAClB33C,GAAQ8/D,KAAUH,CAClB3/D,GAAQ8/D,KAAUL,CAClBz/D,GAAQ8/D,KAAUL,EAAK,CACvBz/D,GAAQ8/D,KAAUH,EAAK,CACvB3/D,GAAQ8/D,KAAUJ,EAAK,CACvB1/D,GAAQ8/D,KAAUL,EAAK,CACvBz/D,GAAQ8/D,KAAUJ,EAAK,CACvB1/D,GAAQ8/D,KAAUnoB,EAAK,IAK1BioB,GAAO,GAAGvjE,KAAKmhE,WAAa,IAAInhE,KAAKkjE,WAAa,EAElD,KAAKvmE,EAAI,EAAGA,GAAKqD,KAAKkjE,WAAYvmE,IAAK,CACtConE,EAAYH,EAAKjnE,EAAEu3B,CAEnB,KAAKzc,EAAI,EAAGA,GAAKzX,KAAKohE,WAAY3pD,IAAK,CAEtCtT,EAAUq/D,IAASE,CACnBv/D,GAAUq/D,EAAK,IAAMG,EAAKlsD,EAAEqsD,CAC5B3/D,GAAUq/D,EAAK,GAAKO,CACpB90C,GAAQu0C,IAAS,CACjBv0C,GAAQu0C,EAAK,GAAK,CAClBv0C,GAAQu0C,EAAK,GAAK,CAClBt0C,GAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAK,GAAK,CACnBt0C,GAASs0C,EAAK,IAAM,CACpBA,IAAQ,CAGRr/D,GAAUq/D,GAAQE,CAClBv/D,GAAUq/D,EAAK,IAAMG,EAAKlsD,EAAEqsD,CAC5B3/D,GAAUq/D,EAAK,GAAKO,CACpB90C,GAAQu0C,GAAQ,CAChBv0C,GAAQu0C,EAAK,GAAK,CAClBv0C,GAAQu0C,EAAK,GAAK,CAClBt0C,GAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAK,GAAK,CACnBt0C,GAASs0C,EAAK,GAAK,CACnBA,IAAQ,CAER,IAAI7mE,GAAK8a,EAAG,CACX6jC,EAAKioB,EAAM,IAAI5mE,EAAI,IAAIqD,KAAKohE,WAAa,IAAM3pD,EAAI,GACnD2rD,GAAKG,EAAM,GAAG5mE,GAAGqD,KAAKohE,WAAa,IAAM3pD,EAAI,GAC7C4rD,GAAK/nB,EAAK,CACVgoB,GAAKF,EAAK,CAEVz/D,GAAQ8/D,KAAUnoB,CAClB33C,GAAQ8/D,KAAUJ,CAClB1/D,GAAQ8/D,KAAUH,CAClB3/D,GAAQ8/D,KAAUnoB,CAClB33C,GAAQ8/D,KAAUH,CAClB3/D,GAAQ8/D,KAAUL,CAClBz/D,GAAQ8/D,KAAUL,EAAK,CACvBz/D,GAAQ8/D,KAAUH,EAAK,CACvB3/D,GAAQ8/D,KAAUJ,EAAK,CACvB1/D,GAAQ8/D,KAAUL,EAAK,CACvBz/D,GAAQ8/D,KAAUJ,EAAK,CACvB1/D,GAAQ8/D,KAAUnoB,EAAK,IAK1BymB,EAAiBn+D,WAAWD,EAE5Bo+D,GAAiB7+D,aAAaiB,EAC9B49D,GAAiBr0C,WAAWuB,EAC5B8yC,GAAiBn0C,YAAYsB,OAEvB,IAAIsE,GAAgB,kBAAmB,CAC7C,GAAIwwC,GAAiDlhE,CAErD,IAAImhE,GAAqBjkE,KAAKohE,WAAW,EAAKphE,KAAKmhE,WAAW,EAAInhE,KAAKkjE,WAAW,CAClF,IAAI/+D,EACJ,IAAI4Y,EAEJ5Y,GAAY,GAAIqY,cAAaynD,EAAY,EACzClnD,GAAY,GAAIP,cAAaynD,EAE7BT,GAAO,CAEPC,GAAO,CAGP,KAAK9mE,EAAI,EAAGA,EAAIqD,KAAKohE,aAAczkE,EAAG,CACrCwH,EAAUq/D,MAAWE,CACrBv/D,GAAUq/D,KAAU7mE,EAAEqD,KAAKqK,QAAQrK,KAAKohE,WAAauC,CACrDx/D,GAAUq/D,MAAWI,CAErBz/D,GAAUq/D,KAAUE,CACpBv/D,GAAUq/D,KAAU7mE,EAAEqD,KAAKqK,QAAQrK,KAAKohE,WAAauC,CACrDx/D,GAAUq/D,MAAWI,CAErB7mD,GAAU0mD,KAAU,CAEpBt/D,GAAUq/D,MAAWE,CACrBv/D,GAAUq/D,KAAUG,EAAKhnE,EAAEqD,KAAKqK,QAAQrK,KAAKohE,UAC7Cj9D,GAAUq/D,KAAUI,CAEpBz/D,GAAUq/D,KAAUE,CACpBv/D,GAAUq/D,KAAUG,EAAKhnE,EAAEqD,KAAKqK,QAAQrK,KAAKohE,UAC7Cj9D,GAAUq/D,KAAUI,CAEpB7mD,GAAU0mD,KAAU,EAGrB,IAAK9mE,EAAI,EAAGA,EAAIqD,KAAKmhE,aAAcxkE,EAAG,CACrCwH,EAAUq/D,KAAU7mE,EAAEqD,KAAKkM,OAAOlM,KAAKmhE,WAAauC,CACpDv/D,GAAUq/D,MAAWG,CACrBx/D,GAAUq/D,MAAWI,CAErBz/D,GAAUq/D,KAAU7mE,EAAEqD,KAAKkM,OAAOlM,KAAKmhE,WAAauC,CACpDv/D,GAAUq/D,KAAUG,CACpBx/D,GAAUq/D,MAAWI,CAErB7mD,GAAU0mD,KAAU,CAEpBt/D,GAAUq/D,KAAUE,EAAK/mE,EAAEqD,KAAKkM,OAAOlM,KAAKmhE,UAC5Ch9D,GAAUq/D,MAAWG,CACrBx/D,GAAUq/D,KAAUI,CAEpBz/D,GAAUq/D,KAAUE,EAAK/mE,EAAEqD,KAAKkM,OAAOlM,KAAKmhE,UAC5Ch9D,GAAUq/D,KAAUG,CACpBx/D,GAAUq/D,KAAUI,CAEpB7mD,GAAU0mD,KAAU,EAIrB,IAAK9mE,EAAI,EAAGA,EAAIqD,KAAKohE,aAAczkE,EAAG,CACrCwH,EAAUq/D,MAAWE,CACrBv/D,GAAUq/D,KAAU7mE,EAAEqD,KAAKqK,QAAQrK,KAAKohE,WAAauC,CACrDx/D,GAAUq/D,MAAWI,CAErBz/D,GAAUq/D,MAAWE,CACrBv/D,GAAUq/D,KAAU7mE,EAAEqD,KAAKqK,QAAQrK,KAAKohE,WAAauC,CACrDx/D,GAAUq/D,KAAUI,CAEpB7mD,GAAU0mD,KAAU,CAEpBt/D,GAAUq/D,KAAUE,CACpBv/D,GAAUq/D,KAAUG,EAAKhnE,EAAEqD,KAAKqK,QAAQrK,KAAKohE,UAC7Cj9D,GAAUq/D,MAAWI,CAErBz/D,GAAUq/D,KAAUE,CACpBv/D,GAAUq/D,KAAUG,EAAKhnE,EAAEqD,KAAKqK,QAAQrK,KAAKohE,UAC7Cj9D,GAAUq/D,KAAUI,CAEpB7mD,GAAU0mD,KAAU,EAGrB,IAAK9mE,EAAI,EAAGA,EAAIqD,KAAKkjE,aAAcvmE,EAAG,CACrCwH,EAAUq/D,KAAUE,CACpBv/D,GAAUq/D,MAAWG,CACrBx/D,GAAUq/D,KAAU7mE,EAAEqD,KAAK0J,OAAO1J,KAAKkjE,WAAaU,CAEpDz/D,GAAUq/D,KAAUE,CACpBv/D,GAAUq/D,KAAUG,CACpBx/D,GAAUq/D,KAAU7mE,EAAEqD,KAAK0J,OAAO1J,KAAKkjE,WAAaU,CAEpD7mD,GAAU0mD,KAAU,CAEpBt/D,GAAUq/D,MAAWE,CACrBv/D,GAAUq/D,MAAWG,CACrBx/D,GAAUq/D,KAAUI,EAAKjnE,EAAEqD,KAAK0J,OAAO1J,KAAKkjE,UAE5C/+D,GAAUq/D,MAAWE,CACrBv/D,GAAUq/D,KAAUG,CACpBx/D,GAAUq/D,KAAUI,EAAKjnE,EAAEqD,KAAK0J,OAAO1J,KAAKkjE,UAE5CnmD,GAAU0mD,KAAU,EAKrB,IAAK9mE,EAAI,EAAGA,EAAIqD,KAAKkjE,aAAcvmE,EAAG,CACrCwH,EAAUq/D,MAAWE,CACrBv/D,GAAUq/D,MAAWG,CACrBx/D,GAAUq/D,KAAUI,EAAKjnE,EAAEqD,KAAK0J,OAAO1J,KAAKkjE,UAE5C/+D,GAAUq/D,KAAUE,CACpBv/D,GAAUq/D,MAAWG,CACrBx/D,GAAUq/D,KAAUI,EAAKjnE,EAAEqD,KAAK0J,OAAO1J,KAAKkjE,UAE5CnmD,GAAU0mD,KAAU,CAEpBt/D,GAAUq/D,MAAWE,CACrBv/D,GAAUq/D,KAAUG,CACpBx/D,GAAUq/D,KAAU7mE,EAAEqD,KAAK0J,OAAO1J,KAAKkjE,WAAaU,CAEpDz/D,GAAUq/D,KAAUE,CACpBv/D,GAAUq/D,KAAUG,CACpBx/D,GAAUq/D,KAAU7mE,EAAEqD,KAAK0J,OAAO1J,KAAKkjE,WAAaU,CAEpD7mD,GAAU0mD,KAAU,EAGrB,IAAK9mE,EAAI,EAAGA,EAAIqD,KAAKmhE,aAAcxkE,EAAG,CACrCwH,EAAUq/D,KAAUE,EAAK/mE,EAAEqD,KAAKkM,OAAOlM,KAAKmhE,UAC5Ch9D,GAAUq/D,MAAWG,CACrBx/D,GAAUq/D,MAAWI,CAErBz/D,GAAUq/D,KAAUE,EAAK/mE,EAAEqD,KAAKkM,OAAOlM,KAAKmhE,UAC5Ch9D,GAAUq/D,MAAWG,CACrBx/D,GAAUq/D,KAAUI,CAEpB7mD,GAAU0mD,KAAU,CAEpBt/D,GAAUq/D,KAAU7mE,EAAEqD,KAAKkM,OAAOlM,KAAKmhE,WAAauC,CACpDv/D,GAAUq/D,KAAUG,CACpBx/D,GAAUq/D,MAAWI,CAErBz/D,GAAUq/D,KAAU7mE,EAAEqD,KAAKkM,OAAOlM,KAAKmhE,WAAauC,CACpDv/D,GAAUq/D,KAAUG,CACpBx/D,GAAUq/D,KAAUI,CAEpB7mD,GAAU0mD,KAAU,EAIrBO,EAAa9gE,aAAaiB,EAC1B6/D,GAAalnD,aAAaC,IAOrBgT,GAAAxvB,UAAA+hE,WAAP,SAAkBx/D,EAAwB0wB,GAEzC,GAAI72B,GAAU8a,EAAUmF,CACxB,IAAI/Y,EAEJ,IAAIqgE,GAAmBC,CACvB,IAAIC,GAAoBC,CACxB,IAAIC,GAAaC,CACjB,IAAIC,GAAaC,CACjB,IAAIC,GAAWC,CACf,IAAI9nB,EAEJ,IAAIrpB,GAAgB,sBAAuB,CAE1CqpB,IAAgB78C,KAAKmhE,WAAa,IAAInhE,KAAKohE,WAAa,IAAMphE,KAAKmhE,WAAa,IAAInhE,KAAKkjE,WAAa,IAAMljE,KAAKohE,WAAa,IAAIphE,KAAKkjE,WAAa,IAAI,CAExJ,IAAInB,GAA6Dj/D,CAEjE,IAAI+5C,GAAeklB,EAAiBllB,aAAeklB,EAAiBl+D,KAAO,KAAM,CAChFA,EAAMk+D,EAAiBl+D,IAAIhD,IAAIg8C,OACzB,CACNh5C,EAAM,GAAI2Y,cAAaqgC,EAAY,GAGpC,GAAI78C,KAAKmjE,OAAQ,CAChBe,EAAaE,EAAc,EAAE,CAC7BD,GAAaE,EAAc,EAAE,MACvB,CACNH,EAAaC,EAAa,CAC1BC,GAAcC,EAAc,EAe7BznD,EAAQ,CAGR0nD,GAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWlkE,KAAKmhE,UACrBwD,GAAKR,EAAWnkE,KAAKohE,UACrB,KAAKzkE,EAAI,EAAGA,GAAKqD,KAAKmhE,WAAYxkE,IAAK,CACtC,IAAK8a,EAAI,EAAGA,GAAKzX,KAAKohE,WAAY3pD,IAAK,CACtC5T,EAAI+Y,MAAa0nD,EAAO3nE,EAAE+nE,GAAK1kE,KAAKuiE,OACpC1+D,GAAI+Y,MAAa2nD,GAAQJ,EAAa1sD,EAAEktD,IAAK3kE,KAAKwiE,OAElD3+D,GAAI+Y,MAAa4nD,GAAQN,EAAavnE,EAAE+nE,IAAK1kE,KAAKuiE,OAClD1+D,GAAI+Y,MAAa6nD,GAAQN,EAAa1sD,EAAEktD,IAAK3kE,KAAKwiE,SAKpD8B,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWlkE,KAAKmhE,UACrBwD,GAAKR,EAAWnkE,KAAKkjE,UACrB,KAAKvmE,EAAI,EAAGA,GAAKqD,KAAKmhE,WAAYxkE,IAAK,CACtC,IAAK8a,EAAI,EAAGA,GAAKzX,KAAKkjE,WAAYzrD,IAAK,CACtC5T,EAAI+Y,MAAa0nD,EAAO3nE,EAAE+nE,GAAI1kE,KAAKuiE,OACnC1+D,GAAI+Y,MAAa2nD,GAAQJ,EAAa1sD,EAAEktD,IAAK3kE,KAAKwiE,OAElD3+D,GAAI+Y,MAAa4nD,EAAO7nE,EAAE+nE,GAAI1kE,KAAKuiE,OACnC1+D,GAAI+Y,MAAa6nD,EAAOhtD,EAAEktD,GAAI3kE,KAAKwiE,SAKrC8B,EAAO,EAAEF,CACTG,GAAO,EAAEF,CACTG,GAAO,EAAEJ,CACTK,GAAO,EAAEJ,CACTK,GAAKR,EAAWlkE,KAAKkjE,UACrByB,GAAKR,EAAWnkE,KAAKohE,UACrB,KAAKzkE,EAAI,EAAGA,GAAKqD,KAAKkjE,WAAYvmE,IAAK,CACtC,IAAK8a,EAAI,EAAGA,GAAKzX,KAAKohE,WAAY3pD,IAAK,CACtC5T,EAAI+Y,MAAa0nD,EAAO3nE,EAAE+nE,GAAI1kE,KAAKuiE,OACnC1+D,GAAI+Y,MAAa2nD,GAAQJ,EAAa1sD,EAAEktD,IAAK3kE,KAAKwiE,OAElD3+D,GAAI+Y,MAAa4nD,GAAQN,EAAavnE,EAAE+nE,IAAK1kE,KAAKuiE,OAClD1+D,GAAI+Y,MAAa6nD,GAAQN,EAAa1sD,EAAEktD,IAAK3kE,KAAKwiE,SAIpDT,EAAiBn/D,OAAOiB,OAElB,IAAI2vB,GAAgB,kBAAmB,GAIhD,OAAAzD,IAjnBkC+wC,EAmnBlC1jE,GAA6BJ,QAApB+yB,I1G68fN0yC,iDAAiD,mDAAmDM,sDAAsD,SAAS7mE,EAAQkB,EAAOJ,GACrL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G2G1khBtB,IAAOygE,GAAmB5kE,EAAY,iD3GglhBtC,I2G3khBMymE,GAAuB,SAAAjiE,GAASX,EAAhC4iE,EAAuBjiE,EAyJ5B,SAzJKiiE,GAyJOiC,EAAuBC,EAA0B16D,EAAqB62D,EAAuBC,EAAsB6D,EAA0BC,EAA6BC,EAA8B9D,GAAxM,GAAA0D,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAwB,CAAxBA,EAAA,GAA0B,GAAA16D,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA62D,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA6D,QAAA,GAAwB,CAAxBA,EAAA,KAA0B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,KAA6B,GAAAC,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAA9D,QAAA,GAAkB,CAAlBA,EAAA,KAEnNxgE,EAAAzD,KAAA+C,KA9IOA,MAAAgC,aAAsB,CAgJ7BhC,MAAKilE,WAAaL,CAClB5kE,MAAK8iE,eAAiB+B,CACtB7kE,MAAKqK,QAAUF,CACfnK,MAAKklE,YAAclE,CACnBhhE,MAAKmlE,YAAclE,CACnBjhE,MAAKolE,WAAaN,CAClB9kE,MAAKqlE,cAAgBN,CACrB/kE,MAAKslE,eAAiBN,CACtBhlE,MAAKqhE,KAAOH,EAnJbvgE,OAAAC,eAAW+hE,EAAApiE,UAAA,a3GgmhBJM,I2GhmhBP,WAEC,MAAOb,MAAKilE,Y3GimhBN3hE,I2G9lhBP,SAAqByF,GAEpB/I,KAAKilE,WAAal8D,CAClB/I,MAAKshE,wB3G+lhBCvgE,WAAY,KACZC,aAAc,M2G1lhBrBL,QAAAC,eAAW+hE,EAAApiE,UAAA,gB3GgmhBJM,I2GhmhBP,WAEC,MAAOb,MAAK8iE,gB3GimhBNx/D,I2G9lhBP,SAAwByF,GAEvB/I,KAAK8iE,eAAiB/5D,CACtB/I,MAAKshE,wB3G+lhBCvgE,WAAY,KACZC,aAAc,M2G1lhBrBL,QAAAC,eAAW+hE,EAAApiE,UAAA,U3GgmhBJM,I2GhmhBP,WAEC,MAAOb,MAAKqK,S3GimhBN/G,I2G9lhBP,SAAkByF,GAEjB/I,KAAKqK,QAAUtB,CACf/I,MAAKshE,wB3G+lhBCvgE,WAAY,KACZC,aAAc,M2G1lhBrBL,QAAAC,eAAW+hE,EAAApiE,UAAA,a3GgmhBJM,I2GhmhBP,WAEC,MAAOb,MAAKklE,a3GimhBN5hE,I2G9lhBP,SAAqByF,GAEpB/I,KAAKulE,aAAax8D,I3G+lhBZhI,WAAY,KACZC,aAAc,M2G7lhBd2hE,GAAApiE,UAAAglE,aAAP,SAAoBx8D,GAEnB/I,KAAKklE,YAAcn8D,CACnB/I,MAAKshE,sBACLthE,MAAKuhE,kBAMN5gE,QAAAC,eAAW+hE,EAAApiE,UAAA,a3G8lhBJM,I2G9lhBP,WAEC,MAAOb,MAAKmlE,a3G+lhBN7hE,I2G5lhBP,SAAqByF,GAGpB/I,KAAKwlE,aAAaz8D,I3G4lhBZhI,WAAY,KACZC,aAAc,M2GzlhBd2hE,GAAApiE,UAAAilE,aAAP,SAAoBz8D,GAEnB/I,KAAKmlE,YAAcp8D,CACnB/I,MAAKshE,sBACLthE,MAAKuhE,kBAON5gE,QAAAC,eAAW+hE,EAAApiE,UAAA,a3GylhBJM,I2GzlhBP,WAEC,MAAOb,MAAKolE,Y3G0lhBN9hE,I2GvlhBP,SAAqByF,GAEpB/I,KAAKolE,WAAar8D,CAClB/I,MAAKshE,wB3GwlhBCvgE,WAAY,KACZC,aAAc,M2GnlhBrBL,QAAAC,eAAW+hE,EAAApiE,UAAA,gB3GylhBJM,I2GzlhBP,WAEC,MAAOb,MAAKqlE,e3G0lhBN/hE,I2GvlhBP,SAAwByF,GAEvB/I,KAAKqlE,cAAgBt8D,CACrB/I,MAAKshE,wB3GwlhBCvgE,WAAY,KACZC,aAAc,M2GnlhBrBL,QAAAC,eAAW+hE,EAAApiE,UAAA,O3GylhBJM,I2GzlhBP,WAEC,MAAOb,MAAKqhE,M3G0lhBN/9D,I2GvlhBP,SAAeyF,GAEd/I,KAAKqhE,KAAOt4D,CACZ/I,MAAKshE,wB3GwlhBCvgE,WAAY,KACZC,aAAc,M2GxjhBd2hE,GAAApiE,UAAAihE,gBAAP,SAAuB1+D,EAAwB0wB,GAE9C,GAAI7vB,EACJ,IAAIQ,EACJ,IAAI8qB,EACJ,IAAIC,EAEJ,IAAIvyB,EACJ,IAAI8a,EACJ,IAAI5N,EACJ,IAAIE,EACJ,IAAIE,EACJ,IAAIu5D,EACJ,IAAIC,EAEJ,IAAIrvC,EACJ,IAAIqxC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIlK,GAAoB,CAExB,IAAIiG,EACJ,IAAIC,EACJ,IAAIF,GAAoB,CACxB,IAAImE,GAAyB,CAC7B,IAAIC,GAA2B,CAE/B,IAAIjE,EACJ,IAAIC,EAGJ9hE,MAAKgC,aAAe,C3GwjhBd,I2GrjhBF+jE,GAA8B,EAAE/oD,KAAKilD,GAAGjiE,KAAKklE,WAEjD,IAAI1xC,GAAgB,sBAAuB,CAE1C,GAAIuuC,GAA6Dj/D,CAGjE,IAAI9C,KAAKslE,eAAgB,CACxBtlE,KAAKgC,eAAiBhC,KAAKmlE,YAAc,IAAInlE,KAAKklE,YAAc,EAChExJ,IAAc17D,KAAKmlE,YAAYnlE,KAAKklE,YAAY,EAEjD,GAAIllE,KAAKolE,WAAY,CACpBplE,KAAKgC,cAAgB,GAAGhC,KAAKklE,YAAc,EAC3CxJ,IAAc17D,KAAKklE,YAAY,EAEhC,GAAIllE,KAAKqlE,cAAe,CACvBrlE,KAAKgC,cAAgB,GAAGhC,KAAKklE,YAAc,EAC3CxJ,IAAc17D,KAAKklE,YAAY,EAIhC,GAAIllE,KAAKgC,cAAgB+/D,EAAiBllB,YAAa,CACtDl5C,EAAUo+D,EAAiBp+D,QAAQ9C,IAAIkhE,EAAiB1G,YACxDl3D,GAAY49D,EAAiB59D,UAAUtD,IAAIb,KAAKgC,aAChDitB,GAAU8yC,EAAiB9yC,QAAQpuB,IAAIb,KAAKgC,aAC5CktB,GAAW6yC,EAAiB7yC,SAASruB,IAAIb,KAAKgC,kBACxC,CACN2B,EAAU,GAAIkZ,aAAY6+C,EAC1Bv3D,GAAY,GAAIqY,cAAaxc,KAAKgC,aAAa,EAC/CitB,GAAU,GAAIzS,cAAaxc,KAAKgC,aAAa,EAC7CktB,GAAW,GAAI1S,cAAaxc,KAAKgC,aAAa,EAE9ChC,MAAKuhE,kBAGNiC,EAAO,CACPC,GAAO,CAGP,IAAIzjE,KAAKolE,YAAcplE,KAAKilE,WAAa,EAAG,CAE3Ch7D,GAAK,GAAIjK,KAAKqK,OAGd,IAAIrK,KAAKqhE,KAAM,CACdQ,EAAK,CACLC,GAAK,CACLH,IAAS13D,CACT23D,GAAQ,MAEF,CACNC,EAAK,CACLC,IAAM,CACNH,GAAQ,CACRC,GAAQ33D,EAGT9F,EAAUq/D,GAAQ,CAClBr/D,GAAUq/D,EAAO,GAAK7B,CACtBx9D,GAAUq/D,EAAO,GAAK5B,CACtB3yC,GAAQu0C,GAAQ,CAChBv0C,GAAQu0C,EAAO,GAAK3B,CACpB5yC,GAAQu0C,EAAO,GAAK1B,CACpB5yC,GAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAO,GAAK,CACrBt0C,GAASs0C,EAAO,GAAK,CACrBA,IAAQ,CAERqC,IAAmB,CAEnB,KAAKlpE,EAAI,EAAGA,GAAKqD,KAAKklE,cAAevoE,EAAG,CAGvC8oE,EAAkB9oE,EAAEopE,CACpBl8D,GAAI7J,KAAKilE,WAAWjoD,KAAK0mB,IAAI+hC,EAC7B17D,GAAI/J,KAAKilE,WAAWjoD,KAAKymB,IAAIgiC,EAE7B,IAAIzlE,KAAKqhE,KAAM,CACdM,GAAS13D,CACT23D,GAAQ73D,MACF,CACN43D,EAAQ53D,CACR63D,GAAQ33D,EAGT,GAAItN,GAAKqD,KAAKklE,YAAa,CAC1B/gE,EAAUq/D,GAAQr/D,EAAUu9D,EAAa,EACzCv9D,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,EAC7Cv9D,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,OAEvC,CACNv9D,EAAUq/D,GAAQ35D,CAClB1F,GAAUq/D,EAAO,GAAK7B,CACtBx9D,GAAUq/D,EAAO,GAAK5B,EAGvB3yC,EAAQu0C,GAAQ,CAChBv0C,GAAQu0C,EAAO,GAAK3B,CACpB5yC,GAAQu0C,EAAO,GAAK1B,CACpB5yC,GAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAO,GAAK,CACrBt0C,GAASs0C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI7mE,EAAI,EAAG,CAEVgH,EAAQ8/D,KAAUoC,EAAkB,CACpCliE,GAAQ8/D,KAAUqC,CAClBniE,GAAQ8/D,KAAUoC,EAGnBA,GAAmB,GAKrB,GAAI7lE,KAAKqlE,eAAiBrlE,KAAK8iE,eAAiB,EAAG,CAElD74D,EAAI,GAAIjK,KAAKqK,OAEbq3D,GAAamE,EAAgB,CAE7BC,GAAoBD,CAGpB,IAAI7lE,KAAKqhE,KAAM,CACdQ,GAAM,CACNC,GAAK,CACLH,IAAS13D,CACT23D,GAAQ,MACF,CACNC,EAAK,CACLC,GAAK,CACLH,GAAQ,CACRC,GAAQ33D,EAGT,GAAItN,EAAI,EAAG,CACVwH,EAAUq/D,GAAQ,CAClBr/D,GAAUq/D,EAAO,GAAK7B,CACtBx9D,GAAUq/D,EAAO,GAAK5B,CACtB3yC,GAAQu0C,GAAQ,CAChBv0C,GAAQu0C,EAAO,GAAK3B,CACpB5yC,GAAQu0C,EAAO,GAAK1B,CACpB5yC,GAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAO,GAAK,CACrBt0C,GAASs0C,EAAO,GAAK,CACrBA,IAAQ,EAGTqC,GAAmB,CAEnB,KAAKlpE,EAAI,EAAGA,GAAKqD,KAAKklE,cAAevoE,EAAG,CAGvC8oE,EAAkB9oE,EAAEopE,CACpBl8D,GAAI7J,KAAK8iE,eAAe9lD,KAAK0mB,IAAI+hC,EACjC17D,GAAI/J,KAAK8iE,eAAe9lD,KAAKymB,IAAIgiC,EAEjC,IAAIzlE,KAAKqhE,KAAM,CACdM,GAAS13D,CACT23D,GAAQ73D,MACF,CACN43D,EAAQ53D,CACR63D,GAAQ33D,EAGT,GAAItN,GAAKqD,KAAKklE,YAAa,CAC1B/gE,EAAUq/D,GAAQr/D,EAAUu9D,EAAa,EACzCv9D,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,EAC7Cv9D,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,OACvC,CACNv9D,EAAUq/D,GAAQ35D,CAClB1F,GAAUq/D,EAAO,GAAK7B,CACtBx9D,GAAUq/D,EAAO,GAAK5B,EAGvB3yC,EAAQu0C,GAAQ,CAChBv0C,GAAQu0C,EAAO,GAAK3B,CACpB5yC,GAAQu0C,EAAO,GAAK1B,CACpB5yC,GAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAO,GAAK,CACrBt0C,GAASs0C,EAAO,GAAK,CACrBA,IAAQ,CAER,IAAI7mE,EAAI,EAAG,CAEVgH,EAAQ8/D,KAAUoC,EAAkB,CACpCliE,GAAQ8/D,KAAUoC,CAClBliE,GAAQ8/D,KAAUqC,EAGnBD,GAAmB,GAQrBH,EAAM1lE,KAAK8iE,eAAiB9iE,KAAKilE,UACjCU,GAAcD,EAAG1lE,KAAKqK,OACtBu7D,GAAeD,GAAe,EAAI,EAAI3lE,KAAKqK,QAAQq7D,CAGnD,IAAI1lE,KAAKslE,eAAgB,CACxB,GAAI5oE,EACJ,IAAIwD,EACJ,IAAI+wB,EACJ,IAAIhxB,EACJ,IAAI+lE,GAAYC,EAAYC,EAAgBC,CAE5C,KAAK1uD,EAAI,EAAGA,GAAKzX,KAAKmlE,cAAe1tD,EAAG,CACvC2c,EAASp0B,KAAKilE,WAAextD,EAAEzX,KAAKmlE,aAAcnlE,KAAKilE,WAAajlE,KAAK8iE,eACzE74D,KAAMjK,KAAKqK,QAAQ,GAAMoN,EAAEzX,KAAKmlE,YAAYnlE,KAAKqK,OAEjDq3D,GAAamE,EAAgB,CAE7B,KAAKlpE,EAAI,EAAGA,GAAKqD,KAAKklE,cAAevoE,EAAG,CAEvC8oE,EAAkB9oE,EAAEopE,CACpBl8D,GAAIuqB,EAAOpX,KAAK0mB,IAAI+hC,EACpB17D,GAAIqqB,EAAOpX,KAAKymB,IAAIgiC,EACpBO,GAAMJ,EAAY5oD,KAAK0mB,IAAI+hC,EAC3BQ,GAAML,EAAY5oD,KAAKymB,IAAIgiC,EAE3B,IAAIzlE,KAAKqhE,KAAM,CACdQ,EAAK,CACLC,IAAMkE,CACNrE,IAAS13D,CACT23D,GAAQ73D,CACRm8D,GAAUP,CACVQ,GAAUF,MAEJ,CACNpE,GAAMmE,CACNlE,GAAK,CACLH,GAAQ53D,CACR63D,GAAQ33D,CACRi8D,GAAUD,CACVE,GAAUR,EAGX,GAAIhpE,GAAKqD,KAAKklE,YAAa,CAC1B/gE,EAAUq/D,GAAQr/D,EAAUu9D,EAC5Bv9D,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,EAC7Cv9D,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,EAC7CzyC,GAAQu0C,GAAQwC,CAChB/2C,GAAQu0C,EAAO,GAAKmC,CACpB12C,GAAQu0C,EAAO,GAAKyC,CACpB/2C,GAASs0C,GAAQyC,CACjB/2C,GAASs0C,EAAO,GAAK3B,CACrB3yC,GAASs0C,EAAO,GAAK1B,MACf,CACN39D,EAAUq/D,GAAQ35D,CAClB1F,GAAUq/D,EAAO,GAAK7B,CACtBx9D,GAAUq/D,EAAO,GAAK5B,CACtB3yC,GAAQu0C,GAAQwC,CAChB/2C,GAAQu0C,EAAO,GAAK0C,CACpBj3C,GAAQu0C,EAAO,GAAK2C,CACpBj3C,GAASs0C,IAASyC,CAClB/2C,GAASs0C,EAAO,GAAK3B,CACrB3yC,GAASs0C,EAAO,GAAK1B,EAEtB0B,GAAQ,CAGR,IAAI7mE,EAAI,GAAK8a,EAAI,EAAG,CACnB/a,EAAImpE,CACJ3lE,GAAI2lE,EAAkB,CACtB50C,GAAI/wB,EAAIF,KAAKklE,YAAc,CAC3BjlE,GAAIvD,EAAIsD,KAAKklE,YAAc,CAE3BvhE,GAAQ8/D,KAAU/mE,CAClBiH,GAAQ8/D,KAAUvjE,CAClByD,GAAQ8/D,KAAUxyC,CAElBttB,GAAQ8/D,KAAU/mE,CAClBiH,GAAQ8/D,KAAUxyC,CAClBttB,GAAQ8/D,KAAUxjE,EAGnB4lE,MAMH9D,EAAiBn+D,WAAWD,EAE5Bo+D,GAAiB7+D,aAAaiB,EAC9B49D,GAAiBr0C,WAAWuB,EAC5B8yC,GAAiBn0C,YAAYsB,OAEvB,IAAIsE,GAAgB,kBAAmB,CAC7C,GAAIwwC,GAAiDlhE,CAErD,IAAImhE,GAAqBjkE,KAAKmlE,YAAYnlE,KAAKklE,YAAY,EAAIllE,KAAKklE,WACpE,IAAI/gE,GAAyB,GAAIqY,cAAaynD,EAAY,EAC1D,IAAIlnD,GAAyB,GAAIP,cAAaynD,EAE9CT,GAAO,CAEPC,GAAO,CACP,IAAIzvC,GAAU,EACd,KAAKvc,EAAI,EAAGA,GAAKzX,KAAKmlE,cAAe1tD,EAAG,CAEvC2c,EAASp0B,KAAKilE,WAAextD,EAAEzX,KAAKmlE,aAAcnlE,KAAKilE,WAAajlE,KAAK8iE,eACzE74D,KAAMjK,KAAKqK,QAAQ,GAAMoN,EAAEzX,KAAKmlE,YAAYnlE,KAAKqK,OAEjD,KAAK1N,EAAI,EAAGA,GAAKqD,KAAKklE,cAAevoE,EAAG,CAEvC8oE,EAAkB9oE,EAAEopE,CACpBl8D,GAAIuqB,EAAOpX,KAAK0mB,IAAI+hC,EACpB17D,GAAIqqB,EAAOpX,KAAKymB,IAAIgiC,EAEpB,IAAIzlE,KAAKqhE,KAAM,CACdM,GAAS13D,CACT23D,GAAQ73D,MACF,CACN43D,EAAQ53D,CACR63D,GAAQ33D,EAGT,GAAItN,EAAI,EAAG,CAEVwH,EAAUq/D,KAAU35D,CACpB1F,GAAUq/D,KAAU7B,CACpBx9D,GAAUq/D,KAAU5B,CAEpB7kD,GAAU0mD,KAAU,CAGpB,IAAIhsD,EAAI,EAAG,CACV,GAAI2uD,GAAe3uD,GAAK,EAAI,GAAK,GAAGzX,KAAKklE,YAAYvoE,GAAK,GAAGA,GAAK,EAAIqD,KAAKklE,YAAY,EACvF/gE,GAAUq/D,GAAQr/D,EAAUq/D,KAAS4C,EACrCjiE,GAAUq/D,GAAQr/D,EAAUq/D,KAAS4C,EACrCjiE,GAAUq/D,GAAQr/D,EAAUq/D,KAAS4C,EAErCjiE,GAAUq/D,KAAU35D,CACpB1F,GAAUq/D,KAAU7B,CACpBx9D,GAAUq/D,KAAU5B,CAEpB7kD,GAAU0mD,KAAU,GAMtB,GAAI9mE,EAAIqD,KAAKklE,YAAa,CACzB/gE,EAAUq/D,KAAU35D,CACpB1F,GAAUq/D,KAAU7B,CACpBx9D,GAAUq/D,KAAU5B,IAMvBoC,EAAa9gE,aAAaiB,EAC1B6/D,GAAalnD,aAAaC,IAOrB4lD,GAAApiE,UAAA+hE,WAAP,SAAkBx/D,EAAwB0wB,GAEzC,GAAI72B,EACJ,IAAI8a,EACJ,IAAI5N,EACJ,IAAIE,EACJ,IAAI07D,EACJ,IAAI5hE,EAEJ,IAAI2vB,GAAgB,sBAAuB,CAE1C,GAAIuuC,GAA6Dj/D,CAGjE,IAAIi/D,EAAiBl+D,KAAO7D,KAAKgC,cAAgB+/D,EAAiBllB,YAAa,CAC9Eh5C,EAAMk+D,EAAiBl+D,IAAIhD,IAAIb,KAAKgC,kBAC9B,CACN6B,EAAM,GAAI2Y,cAAaxc,KAAKgC,aAAa,G3GgghBjC,G2G5/gBL+jE,GAA8B,EAAE/oD,KAAKilD,GAAGjiE,KAAKklE,W3G8/gBxC,I2G3/gBLtoD,GAAe,CAGnB,IAAI5c,KAAKolE,WAAY,CAEpBvhE,EAAI+Y,KAAW,GAAI5c,KAAKuiE,OACxB1+D,GAAI+Y,KAAW,GAAI5c,KAAKwiE,OAExB,KAAK7lE,EAAI,EAAGA,GAAKqD,KAAKklE,cAAevoE,EAAG,CAEvC8oE,EAAkB9oE,EAAEopE,CACpBl8D,GAAI,GAAM,IAAMmT,KAAK0mB,IAAI+hC,EACzB17D,GAAI,GAAM,GAAIiT,KAAKymB,IAAIgiC,EAEvB5hE,GAAI+Y,KAAW/S,EAAE7J,KAAKuiE,OACtB1+D,GAAI+Y,KAAW7S,EAAE/J,KAAKwiE,SAKxB,GAAIxiE,KAAKqlE,cAAe,CAEvBxhE,EAAI+Y,KAAW,GAAI5c,KAAKuiE,OACxB1+D,GAAI+Y,KAAW,GAAI5c,KAAKwiE,OAExB,KAAK7lE,EAAI,EAAGA,GAAKqD,KAAKklE,cAAevoE,EAAG,CAEvC8oE,EAAkB9oE,EAAEopE,CACpBl8D,GAAI,GAAM,GAAImT,KAAK0mB,IAAI+hC,EACvB17D,GAAI,GAAM,GAAIiT,KAAKymB,IAAIgiC,EAEvB5hE,GAAI+Y,KAAW/S,EAAE7J,KAAKuiE,OACtB1+D,GAAI+Y,KAAW7S,EAAE/J,KAAKwiE,SAKxB,GAAIxiE,KAAKslE,eAAgB,CACxB,IAAK7tD,EAAI,EAAGA,GAAKzX,KAAKmlE,cAAe1tD,EAAG,CACvC,IAAK9a,EAAI,EAAGA,GAAKqD,KAAKklE,cAAevoE,EAAG,CAEvCkH,EAAI+Y,KAAajgB,EAAEqD,KAAKklE,YAAcllE,KAAKuiE,OAC3C1+D,GAAI+Y,KAAanF,EAAEzX,KAAKmlE,YAAcnlE,KAAKwiE,UAM9CT,EAAiBn/D,OAAOiB,OAElB,IAAI2vB,GAAgB,kBAAmB,GAIhD,OAAAmvC,IA5oBsC7B,EA8oBL1jE,GAAAJ,QAAxB2lE,I3Gg/gBNF,iDAAiD,mDAAmD4D,mDAAmD,SAASnqE,EAAQkB,EAAOJ,GAClL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G4GxoiBtB,IAAOygE,GAAmB5kE,EAAY,iD5G8oiBtC,I4GzoiBMoqE,GAAoB,SAAA5lE,GAASX,EAA7BumE,EAAoB5lE,EAkBzB,SAlBK4lE,GAkBOl5D,EAAoBjD,EAAqB62D,EAAsBC,EAAsBC,EAAoBqF,GAAzG,GAAAn5D,QAAA,GAAkB,CAAlBA,EAAA,IAAoB,GAAAjD,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA62D,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAqF,QAAA,GAA2B,CAA3BA,EAAA,MAGpH7lE,EAAAzD,KAAA+C,KAEAA,MAAKmhE,WAAaH,CAClBhhE,MAAKohE,WAAaH,CAClBjhE,MAAKqhE,KAAOH,CACZlhE,MAAKkM,OAASkB,CACdpN,MAAKqK,QAAUF,CACfnK,MAAKwmE,aAAeD,EAOrB5lE,OAAAC,eAAW0lE,EAAA/lE,UAAA,a5GooiBJM,I4GpoiBP,WAEC,MAAOb,MAAKmhE,Y5GqoiBN79D,I4GloiBP,SAAqByF,GAGpB/I,KAAKmhE,WAAap4D,CAElB/I,MAAKshE,sBACLthE,MAAKuhE,mB5GioiBCxgE,WAAY,KACZC,aAAc,M4G1niBrBL,QAAAC,eAAW0lE,EAAA/lE,UAAA,a5GioiBJM,I4GjoiBP,WAEC,MAAOb,MAAKohE,Y5GkoiBN99D,I4G/niBP,SAAqByF,GAGpB/I,KAAKohE,WAAar4D,CAElB/I,MAAKshE,sBACLthE,MAAKuhE,mB5G8niBCxgE,WAAY,KACZC,aAAc,M4GxniBrBL,QAAAC,eAAW0lE,EAAA/lE,UAAA,O5G8niBJM,I4G9niBP,WAEC,MAAOb,MAAKqhE,M5G+niBN/9D,I4G5niBP,SAAeyF,GAEd/I,KAAKqhE,KAAOt4D,CAEZ/I,MAAKshE;E5G4niBCvgE,WAAY,KACZC,aAAc,M4GvniBrBL,QAAAC,eAAW0lE,EAAA/lE,UAAA,e5G6niBJM,I4G7niBP,WAEC,MAAOb,MAAKwmE,c5G8niBNljE,I4G3niBP,SAAuByF,GAEtB/I,KAAKwmE,aAAez9D,CAEpB/I,MAAKshE,wB5G2niBCvgE,WAAY,KACZC,aAAc,M4GtniBrBL,QAAAC,eAAW0lE,EAAA/lE,UAAA,S5G4niBJM,I4G5niBP,WAEC,MAAOb,MAAKkM,Q5G6niBN5I,I4G1niBP,SAAiByF,GAEhB/I,KAAKkM,OAASnD,CAEd/I,MAAKshE,wB5G0niBCvgE,WAAY,KACZC,aAAc,M4GrniBrBL,QAAAC,eAAW0lE,EAAA/lE,UAAA,U5G2niBJM,I4G3niBP,WAEC,MAAOb,MAAKqK,S5G4niBN/G,I4GzniBP,SAAkByF,GAEjB/I,KAAKqK,QAAUtB,CAEf/I,MAAKshE,wB5GyniBCvgE,WAAY,KACZC,aAAc,M4GpniBdslE,GAAA/lE,UAAAihE,gBAAP,SAAuB1+D,EAAwB0wB,GAE9C,GAAI7vB,EACJ,IAAIkG,GAAUE,CACd,IAAI2xD,EACJ,IAAI+K,EACJ,IAAIC,GAAY1mE,KAAKmhE,WAAa,CAElC,IAAIqC,GAAaC,CAEjB,IAAIkD,EACJ,IAAIC,EAEJ,IAAIpzC,GAAgB,sBAAuB,CAE1C,GAAIuuC,GAA6Dj/D,CAEjE,IAAI+5C,IAAsB78C,KAAKohE,WAAa,GAAGsF,CAC/C,IAAIviE,EACJ,IAAI8qB,EACJ,IAAIC,EAEJ,IAAIlvB,KAAKwmE,aACR3pB,GAAe,CAEhB6e,GAAa17D,KAAKohE,WAAWphE,KAAKmhE,WAAW,CAE7C,IAAInhE,KAAKwmE,aACR9K,GAAc,CAEf,IAAIqG,EAAiBp+D,SAAW,MAAQ+3D,GAAcqG,EAAiBp+D,QAAQzG,OAAQ,CACtFyG,EAAUo+D,EAAiBp+D,QAAQ9C,IAAIkhE,EAAiB1G,iBAClD,CACN13D,EAAU,GAAIkZ,aAAY6+C,EAE1B17D,MAAKuhE,kBAGN,GAAI1kB,GAAeklB,EAAiBllB,YAAa,CAChD14C,EAAY49D,EAAiB59D,UAAUtD,IAAIg8C,EAC3C5tB,GAAU8yC,EAAiB9yC,QAAQpuB,IAAIg8C,EACvC3tB,GAAW6yC,EAAiB7yC,SAASruB,IAAIg8C,OACnC,CACN14C,EAAY,GAAIqY,cAAaqgC,EAAY,EACzC5tB,GAAU,GAAIzS,cAAaqgC,EAAY,EACvC3tB,GAAW,GAAI1S,cAAaqgC,EAAY,EAExC78C,MAAKuhE,kBAGNkC,EAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAM5mE,KAAKohE,aAAcwF,EAAI,CAEzC,IAAKD,EAAK,EAAGA,GAAM3mE,KAAKmhE,aAAcwF,EAAI,CACzC98D,GAAK88D,EAAG3mE,KAAKmhE,WAAa,IAAInhE,KAAKkM,MACnCnC,IAAK68D,EAAG5mE,KAAKohE,WAAa,IAAIphE,KAAKqK,OAEnClG,GAAUq/D,GAAQ35D,CAClB,IAAI7J,KAAKqhE,KAAM,CACdl9D,EAAUq/D,EAAO,GAAK,CACtBr/D,GAAUq/D,EAAO,GAAKz5D,MAChB,CACN5F,EAAUq/D,EAAO,GAAKz5D,CACtB5F,GAAUq/D,EAAO,GAAK,EAGvBv0C,EAAQu0C,GAAQ,CAEhB,IAAIxjE,KAAKqhE,KAAM,CACdpyC,EAAQu0C,EAAO,GAAK,CACpBv0C,GAAQu0C,EAAO,GAAK,MACd,CACNv0C,EAAQu0C,EAAO,GAAK,CACpBv0C,GAAQu0C,EAAO,IAAM,EAGtBt0C,EAASs0C,GAAQ,CACjBt0C,GAASs0C,EAAO,GAAK,CACrBt0C,GAASs0C,EAAO,GAAK,CAErBA,IAAQ,CAGR,IAAIxjE,KAAKwmE,aAAc,CAEtB,IAAK,GAAI7pE,GAAW6mE,EAAM7mE,EAAI6mE,EAAO,IAAK7mE,EAAG,CAC5CwH,EAAUxH,GAAKwH,EAAUxH,EAAI,EAC7BsyB,GAAQtyB,IAAMsyB,EAAQtyB,EAAI,EAC1BuyB,GAASvyB,IAAMuyB,EAASvyB,EAAI,GAG7B6mE,GAAQ,EAIT,GAAImD,GAAM3mE,KAAKmhE,YAAcyF,GAAM5mE,KAAKohE,WAAY,CAEnDqF,EAAOE,EAAKC,EAAGF,CACf,IAAIG,GAAc7mE,KAAKwmE,aAAc,EAAI,CAEzC7iE,GAAQ8/D,KAAUgD,EAAKI,CACvBljE,GAAQ8/D,MAAWgD,EAAOC,GAAIG,CAC9BljE,GAAQ8/D,MAAWgD,EAAOC,EAAK,GAAGG,CAClCljE,GAAQ8/D,KAAUgD,EAAKI,CACvBljE,GAAQ8/D,MAAWgD,EAAOC,EAAK,GAAGG,CAClCljE,GAAQ8/D,MAAWgD,EAAO,GAAGI,CAE7B,IAAI7mE,KAAKwmE,aAAc,CAEtB7iE,EAAQ8/D,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzCljE,GAAQ8/D,MAAWgD,EAAOC,GAAIG,EAAO,CACrCljE,GAAQ8/D,KAAUgD,EAAKI,EAAO,CAC9BljE,GAAQ8/D,MAAWgD,EAAO,GAAGI,EAAO,CACpCljE,GAAQ8/D,MAAWgD,EAAOC,EAAK,GAAGG,EAAO,CACzCljE,GAAQ8/D,KAAUgD,EAAKI,EAAO,KAOlC9E,EAAiBn+D,WAAWD,EAE5Bo+D,GAAiB7+D,aAAaiB,EAC9B49D,GAAiBr0C,WAAWuB,EAC5B8yC,GAAiBn0C,YAAYsB,OAEvB,IAAIsE,GAAgB,kBAAmB,CAC7C,GAAIwwC,GAAiDlhE,CAErD,IAAImhE,GAAsBjkE,KAAKohE,WAAa,EAAKsF,CACjD,IAAIviE,EACJ,IAAI4Y,EAEJ,IAAI2mD,GAAY1jE,KAAKkM,OAAO,CAC5B,IAAIy3D,GAAY3jE,KAAKqK,QAAQ,CAE7BlG,GAAY,GAAIqY,cAAaynD,EAAY,EACzClnD,GAAY,GAAIP,cAAaynD,EAE7BR,GAAO,CAEPD,GAAO,CAEP,KAAKoD,EAAK,EAAGA,GAAM5mE,KAAKohE,aAAcwF,EAAI,CACzCziE,EAAUq/D,MAAWE,CACrBv/D,GAAUq/D,KAAU,CACpBr/D,GAAUq/D,KAAUoD,EAAG5mE,KAAKqK,QAAUs5D,CAEtCx/D,GAAUq/D,KAAUE,CACpBv/D,GAAUq/D,KAAU,CACpBr/D,GAAUq/D,KAAUoD,EAAG5mE,KAAKqK,QAAUs5D,CAEtC5mD,GAAU0mD,KAAU,EAIrB,IAAKkD,EAAK,EAAGA,GAAM3mE,KAAKmhE,aAAcwF,EAAI,CACzCxiE,EAAUq/D,KAAUmD,EAAG3mE,KAAKkM,OAASw3D,CACrCv/D,GAAUq/D,KAAU,CACpBr/D,GAAUq/D,MAAWG,CAErBx/D,GAAUq/D,KAAUmD,EAAG3mE,KAAKkM,OAASw3D,CACrCv/D,GAAUq/D,KAAU,CACpBr/D,GAAUq/D,KAAUG,CAEpB5mD,GAAU0mD,KAAU,EAIrBO,EAAa9gE,aAAaiB,EAC1B6/D,GAAalnD,aAAaC,IAOrBupD,GAAA/lE,UAAA+hE,WAAP,SAAkBx/D,EAAwB0wB,GAEzC,GAAI3vB,EACJ,IAAIg5C,EAEJ,IAAIrpB,GAAgB,sBAAuB,CAE1CqpB,GAAgB78C,KAAKohE,WAAa,IAAMphE,KAAKmhE,WAAa,EAE1D,IAAInhE,KAAKwmE,aACR3pB,GAAe,CAEhB,IAAIklB,GAA6Dj/D,CAEjE,IAAIi/D,EAAiBl+D,KAAOg5C,GAAeklB,EAAiBllB,YAAa,CACxEh5C,EAAMk+D,EAAiBl+D,IAAIhD,IAAIg8C,OACzB,CACNh5C,EAAM,GAAI2Y,cAAaqgC,EAAY,EACnC78C,MAAKshE,uBAGN,GAAI1kD,GAAe,CAEnB,KAAK,GAAIgqD,GAAY,EAAGA,GAAM5mE,KAAKohE,aAAcwF,EAAI,CAEpD,IAAK,GAAID,GAAY,EAAGA,GAAM3mE,KAAKmhE,aAAcwF,EAAI,CACpD9iE,EAAI+Y,GAAU+pD,EAAG3mE,KAAKmhE,WAAYnhE,KAAKuiE,OACvC1+D,GAAI+Y,EAAQ,IAAM,EAAIgqD,EAAG5mE,KAAKohE,YAAYphE,KAAKwiE,OAC/C5lD,IAAS,CAET,IAAI5c,KAAKwmE,aAAc,CACtB3iE,EAAI+Y,GAAU+pD,EAAG3mE,KAAKmhE,WAAYnhE,KAAKuiE,OACvC1+D,GAAI+Y,EAAM,IAAM,EAAIgqD,EAAG5mE,KAAKohE,YAAYphE,KAAKwiE,OAC7C5lD,IAAS,IAKZmlD,EAAiBn/D,OAAOiB,OAGlB,IAAI2vB,GAAgB,kBAAmB,GAIhD,OAAA8yC,IAtWmCxF,EAwWnC1jE,GAA8BJ,QAArBspE,I5GmkiBN7D,iDAAiD,mDAAmDqE,qDAAqD,SAAS5qE,EAAQkB,EAAOJ,GACpL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6Gx7iBtB,IAAOsiE,GAAuBzmE,EAAW,qD7G87iBzC,I6Gz7iBM6qE,GAAsB,SAAArmE,GAASX,EAA/BgnE,EAAsBrmE,EAiD3B,SAjDKqmE,GAiDO3yC,EAAqB4yC,EAAmB9F,GAAxC,GAAA9sC,QAAA,GAAmB,CAAnBA,EAAA,IAAqB,GAAA4yC,QAAA,GAAiB,CAAjBA,EAAA,GAAmB,GAAA9F,QAAA,GAAkB,CAAlBA,EAAA,KAEnDxgE,EAAAzD,KAAA+C,KAAMo0B,EAAQ,EAAG,EAAG4yC,EAAO,EAAG,KAAM,MAAO,MAAO9F,GA7CnDvgE,OAAAC,eAAWmmE,EAAAxmE,UAAA,U7Gq8iBJM,I6Gr8iBP,WAEC,MAAOb,MAAK8iE,gB7Gs8iBNx/D,I6Gn8iBP,SAAkByF,GAEjB/I,KAAK8iE,eAAiB/5D,CACtB/I,MAAKshE,wB7Go8iBCvgE,WAAY,KACZC,aAAc,M6G/7iBrBL,QAAAC,eAAWmmE,EAAAxmE,UAAA,S7Gq8iBJM,I6Gr8iBP,WAEC,MAAOb,MAAKklE,a7Gs8iBN5hE,I6Gn8iBP,SAAiByF,GAEhB/I,KAAKulE,aAAax8D,I7Go8iBZhI,WAAY,KACZC,aAAc,M6G/7iBrBL,QAAAC,eAAWmmE,EAAAxmE,UAAA,gB7Gq8iBJM,I6Gr8iBP,WAEC,MAAOb,MAAKmlE,a7Gs8iBN7hE,I6Gn8iBP,SAAwByF,GAEvB/I,KAAKwlE,aAAaz8D,I7Go8iBZhI,WAAY,KACZC,aAAc,M6Gx7iBtB,OAAA+lE,IArDqCpE,EAuDrCvlE,GAAgCJ,QAAvB+pE,I7G47iBNhE,qDAAqD,uDAAuDN,kDAAkD,SAASvmE,EAAQkB,EAAOJ,GACzL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8G//iBtB,IAAO4mE,GAAgB/qE,EAAa,8CACpC,IAAO+d,GAAmB/d,EAAY,6CAGtC,IAAO2c,GAAQ3c,EAAe,mCAE9B,IAAO4wB,GAAmB5wB,EAAY,8CACtC,IAAOqgB,GAAergB,EAAa,0CACnC,IAAOqB,GAAIrB,EAAgB,mCAE3B,IAAOwkE,GAAUxkE,EAAc,wC9GigjB/B,I8G5/iBM4kE,GAAmB,SAAApgE,GAASX,EAA5B+gE,EAAmBpgE,EA0GxB,SA1GKogE,GA0GOt8D,EAA8BgvB,GAA9B,GAAAhvB,QAAA,GAA4B,CAA5BA,EAAA,KAA8B,GAAAgvB,QAAA,GAA2C,CAA3CA,EAAA,sBAEzC9yB,EAAAzD,KAAA+C,KAxGMA,MAAAknE,WAAqB,IACrBlnE,MAAAmnE,SAAmB,IACnBnnE,MAAAuiE,QAAiB,CACjBviE,MAAAwiE,QAAiB,CAMhBxiE,MAAAonE,mBAA6B,IAiGpCpnE,MAAK8yC,UAAY,GAAIj6B,EACrB7Y,MAAKsgB,UAAY9b,CACjBxE,MAAKqnE,cAAgB7zC,EA7FtB7yB,OAAAC,eAAWkgE,EAAAvgE,UAAA,a9GigjBJM,I8GjgjBP,WAEC,MAAOigE,GAAoB5/D,W9GkgjBrBH,WAAY,KACZC,aAAc,M8G7/iBrBL,QAAAC,eAAWkgE,EAAAvgE,UAAA,gB9GmgjBJM,I8GngjBP,WAEC,MAAOb,MAAKqnE,e9GogjBN/jE,I8GjgjBP,SAAwByF,GAEvB,GAAI/I,KAAKqnE,eAAiBt+D,EACzB,MAED/I,MAAKqnE,cAAgBt+D,CAErB/I,MAAKsnE,0B9GggjBCvmE,WAAY,KACZC,aAAc,M8G9/iBrBL,QAAAC,eAAWkgE,EAAAvgE,UAAA,Y9GigjBJM,I8GjgjBP,WAECb,KAAKgP,YAEL,OAAOhP,MAAK8yC,W9GigjBN/xC,WAAY,KACZC,aAAc,M8G5/iBrBL,QAAAC,eAAWkgE,EAAAvgE,UAAA,Y9GkgjBJM,I8GlgjBP,WAEC,MAAOb,MAAKsgB,W9GmgjBNhd,I8GhgjBP,SAAoByF,GAEnB,GAAIA,GAAS/I,KAAKsgB,UACjB,MAEDtgB,MAAKsgB,UAAYvX,CAEjB,IAAIkE,GAAajN,KAAK2gE,UAAUzjE,MAChC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,IACvBqD,KAAK2gE,UAAUhkE,GAAI6H,SAAWxE,KAAKsgB,W9G+/iBtCvf,WAAY,KACZC,aAAc,M8G7/iBrBL,QAAAC,eAAWkgE,EAAAvgE,UAAA,U9GggjBJM,I8GhgjBP,WAEC,MAAOb,MAAKuiE,S9GigjBNj/D,I8G9/iBP,SAAkByF,GAEjB,GAAI/I,KAAKuiE,QAAUx5D,EAClB,MAED/I,MAAKuiE,QAAUx5D,CAEf/I,MAAKuhE,mB9G6/iBCxgE,WAAY,KACZC,aAAc,M8G1/iBrBL,QAAAC,eAAWkgE,EAAAvgE,UAAA,U9G6/iBJM,I8G7/iBP,WAEC,MAAOb,MAAKwiE,S9G8/iBNl/D,I8G3/iBP,SAAkByF,GAEjB,GAAI/I,KAAKwiE,QAAUz5D,EAClB,MAED/I,MAAKwiE,QAAUz5D,CAEf/I,MAAKuhE,mB9G0/iBCxgE,WAAY,KACZC,aAAc,M8Gr+iBd8/D,GAAAvgE,UAAAihE,gBAAP,SAAuB1+D,EAAwB0wB,GAE9C,KAAM,IAAIvZ,GAOJ6mD,GAAAvgE,UAAA+hE,WAAP,SAAkBx/D,EAAwB0wB,GAEzC,KAAM,IAAIvZ,GAMJ6mD,GAAAvgE,UAAA+mE,uBAAP,WAECtnE,KAAKonE,mBAAqB,IAC1BpnE,MAAKknE,WAAa,IAClBlnE,MAAKmnE,SAAW,KAMVrG,GAAAvgE,UAAA+gE,qBAAP,WAECthE,KAAKknE,WAAa,KAMZpG,GAAAvgE,UAAAghE,gBAAP,WAECvhE,KAAKmnE,SAAW,KAMTrG,GAAAvgE,UAAAgnE,mBAAR,WAGC,GAAIvnE,KAAKogD,aACRpgD,KAAK8yC,UAAU35B,kBAAkBnZ,KAAKogD,aAEvC,IAAIpgD,KAAKqnE,eAAiB,sBAAuB,CAChD,GAAItF,GAAuC,GAAIj1C,GAAoB,GAAIm6C,GACvElF,GAAiBjzC,kBAAoB,KACrCizC,GAAiBhzC,mBAAqB,KACtCgzC,GAAiB/yC,cAAgB,KACjChvB,MAAK8yC,UAAU/5B,eAAegpD,EAC9B/hE,MAAKogD,aAAe2hB,MACd,IAAI/hE,KAAKqnE,eAAiB,kBAAmB,CACnDrnE,KAAK8yC,UAAU/5B,eAAe/Y,KAAKogD,aAAe,GAAI7jC,GAAgB,GAAI0qD,KAG3EjnE,KAAKonE,mBAAqB,MAOnBtG,GAAAvgE,UAAAinE,eAAR,WAECxnE,KAAKwhE,gBAAgBxhE,KAAKogD,aAAcpgD,KAAKqnE,cAE7CrnE,MAAKknE,WAAa,MAMXpG,GAAAvgE,UAAAknE,UAAR,WAECznE,KAAKsiE,WAAWtiE,KAAKogD,aAAcpgD,KAAKqnE,cAExCrnE,MAAKmnE,SAAW,MAGVrG,GAAAvgE,UAAAyO,WAAP,WAEC,GAAIhP,KAAKonE,mBACRpnE,KAAKunE,oBAEN,IAAIvnE,KAAKknE,WACRlnE,KAAKwnE,gBAEN,IAAIxnE,KAAKmnE,SACRnnE,KAAKynE,YAIA3G,GAAAvgE,UAAAqgE,eAAP,WAEC,GAAI8G,GAAY,GAAInqE,GAAKyC,KAAK8yC,UAAW9yC,KAAKsgB,UAC9ConD,GAAK34D,eAAiB/O,IAEtB,OAAO0nE,GA3NM5G,GAAA5/D,UAAmB,yBAsOlC,OAAA4/D,IAxOkCJ,EA0OlCtjE,GAA6BJ,QAApB8jE,I9G08iBN6G,8CAA8CvmE,UAAU4a,6CAA6C5a,UAAUuX,mCAAmC,mCAAmCwD,0CAA0C,0CAA0C0Q,8CAA8C,8CAA8ChuB,mCAAmC,mCAAmC4hE,wCAAwC,0CAA0CjsC,oDAAoD,SAASt4B,EAAQkB,EAAOJ,GAC5kB,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+GnsjBtB,IAAOygE,GAAmB5kE,EAAY,iD/GysjBtC,I+GpsjBM43B,GAAqB,SAAApzB,GAASX,EAA9B+zB,EAAqBpzB,EA6E1B,SA7EKozB,GA6EOM,EAAoB4sC,EAAuBC,EAAuBC,GAAlE,GAAA9sC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA4sC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAE7ExgE,EAAAzD,KAAA+C,KAEAA,MAAKg0B,QAAUI,CACfp0B,MAAKmhE,WAAaH,CAClBhhE,MAAKohE,WAAaH,CAClBjhE,MAAKqhE,KAAOH,EA1EbvgE,OAAAC,eAAWkzB,EAAAvzB,UAAA,U/GmtjBJM,I+GntjBP,WAEC,MAAOb,MAAKg0B,S/GotjBN1wB,I+GjtjBP,SAAkByF,GAEjB/I,KAAKg0B,QAAUjrB,CAEf/I,MAAKshE,wB/GitjBCvgE,WAAY,KACZC,aAAc,M+G5sjBrBL,QAAAC,eAAWkzB,EAAAvzB,UAAA,a/GktjBJM,I+GltjBP,WAEC,MAAOb,MAAKmhE,Y/GmtjBN79D,I+GhtjBP,SAAqByF,GAEpB/I,KAAKmhE,WAAap4D,CAElB/I,MAAKshE,sBACLthE,MAAKuhE,mB/GgtjBCxgE,WAAY,KACZC,aAAc,M+G3sjBrBL,QAAAC,eAAWkzB,EAAAvzB,UAAA,a/GitjBJM,I+GjtjBP,WAEC,MAAOb,MAAKohE,Y/GktjBN99D,I+G/sjBP,SAAqByF,GAEpB/I,KAAKohE,WAAar4D,CAElB/I,MAAKshE,sBACLthE,MAAKuhE,mB/G+sjBCxgE,WAAY,KACZC,aAAc,M+G1sjBrBL,QAAAC,eAAWkzB,EAAAvzB,UAAA,O/GgtjBJM,I+GhtjBP,WAEC,MAAOb,MAAKqhE,M/GitjBN/9D,I+G9sjBP,SAAeyF,GAEd/I,KAAKqhE,KAAOt4D,CAEZ/I,MAAKshE,wB/G8sjBCvgE,WAAY,KACZC,aAAc,M+GvrjBd8yB,GAAAvzB,UAAAihE,gBAAP,SAAuB1+D,EAAwB0wB,GAE9C,GAAI7vB,EACJ,IAAIQ,EACJ,IAAI8qB,EACJ,IAAIC,EAEJ,IAAIvyB,EACJ,IAAI8a,EACJ,IAAI+rD,GAAaC,CAEjB,IAAI9B,EACJ,IAAIC,EACJ,IAAI/kB,EAGJ,IAAIrpB,GAAgB,sBAAuB,CAE1C,GAAIuuC,GAA6Dj/D,CAEjE+5C,IAAe78C,KAAKohE,WAAa,IAAIphE,KAAKmhE,WAAa,EAEvD,IAAItkB,GAAeklB,EAAiBllB,aAAeklB,EAAiBp+D,SAAW,KAAM,CACpFA,EAAUo+D,EAAiBp+D,QAAQ9C,IAAIkhE,EAAiB1G,YACxDl3D,GAAY49D,EAAiB59D,UAAUtD,IAAIg8C,EAC3C5tB,GAAU8yC,EAAiB9yC,QAAQpuB,IAAIg8C,EACvC3tB,GAAW6yC,EAAiB7yC,SAASruB,IAAIg8C,OACnC,CACNl5C,EAAU,GAAIkZ,cAAa7c,KAAKohE,WAAa,GAAGphE,KAAKmhE,WAAW,EAChEh9D,GAAY,GAAIqY,cAAaqgC,EAAY,EACzC5tB,GAAU,GAAIzS,cAAaqgC,EAAY,EACvC3tB,GAAW,GAAI1S,cAAaqgC,EAAY,EAExC78C,MAAKuhE,kBAGNiC,EAAO,CACPC,GAAO,CAEP,IAAI/B,EACJ,IAAIG,EACJ,IAAIC,EAEJ,KAAKrqD,EAAI,EAAGA,GAAKzX,KAAKohE,aAAc3pD,EAAG,CAEtCiqD,EAAa8B,CAEb,IAAIxB,GAAkBhlD,KAAKilD,GAAGxqD,EAAEzX,KAAKohE,UACrC,IAAIn3D,IAAYjK,KAAKg0B,QAAQhX,KAAK0mB,IAAIs+B,EACtC,IAAIE,GAAoBliE,KAAKg0B,QAAQhX,KAAKymB,IAAIu+B,EAE9C,KAAKrlE,EAAI,EAAGA,GAAKqD,KAAKmhE,aAAcxkE,EAAG,CACtC,GAAIwlE,GAAkB,EAAEnlD,KAAKilD,GAAGtlE,EAAEqD,KAAKmhE,UACvC,IAAIt3D,GAAWq4D,EAAWllD,KAAK0mB,IAAIy+B,EACnC,IAAIp4D,GAAWm4D,EAAWllD,KAAKymB,IAAI0+B,EACnC,IAAIC,GAAiB,EAAEplD,KAAK0P,KAAK7iB,EAAEA,EAAIE,EAAEA,EAAIE,EAAEA,EAC/C,IAAIo4D,GAAgBrlD,KAAK0P,KAAK3iB,EAAEA,EAAIF,EAAEA,EAEtC,IAAI7J,KAAKqhE,KAAM,CAEdQ,EAAK,CACLC,GAAKO,EAAS,KAAMx4D,EAAEw4D,EAAS,CAC/BV,IAAS13D,CACT23D,GAAQ73D,MAEF,CACN83D,EAAKQ,EAAS,KAAMx4D,EAAEw4D,EAAS,CAC/BP,GAAK,CACLH,GAAQ53D,CACR63D,GAAQ33D,EAGT,GAAItN,GAAKqD,KAAKmhE,WAAY,CACzBh9D,EAAUq/D,GAAQr/D,EAAUu9D,EAC5Bv9D,GAAUq/D,EAAK,GAAKr/D,EAAUu9D,EAAa,EAC3Cv9D,GAAUq/D,EAAK,GAAKr/D,EAAUu9D,EAAa,EAC3CzyC,GAAQu0C,GAAQv0C,EAAQyyC,GAAe73D,EAAEu4D,EAAS,EAClDnzC,GAAQu0C,EAAK,GAAKv0C,EAAQyyC,EAAa,GAAOC,EAAMS,EAAS,EAC7DnzC,GAAQu0C,EAAK,GAAKv0C,EAAQyyC,EAAa,GAAME,EAAMQ,EAAS,EAC5DlzC,GAASs0C,GAAQnB,EAAS,MAAOt4D,EAAEs4D,EAAS,CAC5CnzC,GAASs0C,EAAK,GAAK3B,CACnB3yC,GAASs0C,EAAK,GAAK1B,MAEb,CAEN39D,EAAUq/D,GAAQ35D,CAClB1F,GAAUq/D,EAAK,GAAK7B,CACpBx9D,GAAUq/D,EAAK,GAAK5B,CACpB3yC,GAAQu0C,GAAQ35D,EAAEu4D,CAClBnzC,GAAQu0C,EAAK,GAAK7B,EAAMS,CACxBnzC,GAAQu0C,EAAK,GAAK5B,EAAMQ,CACxBlzC,GAASs0C,GAAQnB,EAAS,MAAOt4D,EAAEs4D,EAAS,CAC5CnzC,GAASs0C,EAAK,GAAK3B,CACnB3yC,GAASs0C,EAAK,GAAK1B,EAGpB,GAAInlE,EAAI,GAAK8a,EAAI,EAAG,CAEnB,GAAI/a,IAAYsD,KAAKmhE,WAAa,GAAG1pD,EAAI9a,CACzC,IAAIuD,IAAYF,KAAKmhE,WAAa,GAAG1pD,EAAI9a,EAAI,CAC7C,IAAIs0B,IAAYjxB,KAAKmhE,WAAa,IAAI1pD,EAAI,GAAK9a,EAAI,CACnD,IAAIsD,IAAYD,KAAKmhE,WAAa,IAAI1pD,EAAI,GAAK9a,CAE/C,IAAI8a,GAAKzX,KAAKohE,WAAY,CAEzBj9D,EAAUq/D,GAAQr/D,EAAUu9D,EAC5Bv9D,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,EAC7Cv9D,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,EAE7C/9D,GAAQ8/D,KAAU/mE,CAClBiH,GAAQ8/D,KAAUxyC,CAClBttB,GAAQ8/D,KAAUxjE,MAEZ,IAAIwX,GAAK,EAAG,CAElB9T,EAAQ8/D,KAAU/mE,CAClBiH,GAAQ8/D,KAAUvjE,CAClByD,GAAQ8/D,KAAUxyC,MAEZ,CACNttB,EAAQ8/D,KAAU/mE,CAClBiH,GAAQ8/D,KAAUvjE,CAClByD,GAAQ8/D,KAAUxyC,CAClBttB,GAAQ8/D,KAAU/mE,CAClBiH,GAAQ8/D,KAAUxyC,CAClBttB,GAAQ8/D,KAAUxjE,GAIpBujE,GAAQ,GAIVzB,EAAiBn+D,WAAWD,EAE5Bo+D,GAAiB7+D,aAAaiB,EAC9B49D,GAAiBr0C,WAAWuB,EAC5B8yC,GAAiBn0C,YAAYsB,OAEvB,IAAIsE,GAAgB,kBAAmB,CAE7C,GAAIwwC,GAAiDlhE,CAErD,IAAImhE,GAAqBjkE,KAAKohE,WAAWphE,KAAKmhE,WAAW,EAAInhE,KAAKmhE,UAClE,IAAIh9D,GAAyB,GAAIqY,cAAaynD,EAAY,EAC1D,IAAIlnD,GAAyB,GAAIP,cAAaynD,EAE9CT,GAAO,CAEPC,GAAO,CAEP,KAAKhsD,EAAI,EAAGA,GAAKzX,KAAKohE,aAAc3pD,EAAG,CAEtC,GAAIuqD,GAAkBhlD,KAAKilD,GAAGxqD,EAAEzX,KAAKohE,UACrC,IAAIn3D,IAAYjK,KAAKg0B,QAAQhX,KAAK0mB,IAAIs+B,EACtC,IAAIE,GAAoBliE,KAAKg0B,QAAQhX,KAAKymB,IAAIu+B,EAE9C,KAAKrlE,EAAI,EAAGA,GAAKqD,KAAKmhE,aAAcxkE,EAAG,CACtC,GAAIwlE,GAAkB,EAAEnlD,KAAKilD,GAAGtlE,EAAEqD,KAAKmhE,UACvC,IAAIt3D,GAAWq4D,EAAWllD,KAAK0mB,IAAIy+B,EACnC,IAAIp4D,GAAWm4D,EAAWllD,KAAKymB,IAAI0+B,EAEnC,IAAIniE,KAAKqhE,KAAM,CACdM,GAAS13D,CACT23D,GAAQ73D,MAEF,CACN43D,EAAQ53D,CACR63D,GAAQ33D,EAGT,GAAItN,EAAI,EAAG,CAEVwH,EAAUq/D,KAAU35D,CACpB1F,GAAUq/D,KAAU7B,CACpBx9D,GAAUq/D,KAAU5B,CAEpB7kD,GAAU0mD,KAAU,CAGpB,IAAIhsD,EAAI,EAAG,CACV,GAAI2uD,GAAe3uD,GAAK,EAAI,GAAK,GAAGzX,KAAKmhE,WAAWxkE,GAAK,GAAGA,GAAK,EAAIqD,KAAKmhE,WAAW,EACrFh9D,GAAUq/D,GAAQr/D,EAAUq/D,KAAS4C,EACrCjiE,GAAUq/D,GAAQr/D,EAAUq/D,KAAS4C,EACrCjiE,GAAUq/D,GAAQr/D,EAAUq/D,KAAS4C,EAErCjiE,GAAUq/D,KAAU35D,CACpB1F,GAAUq/D,KAAU7B,CACpBx9D,GAAUq/D,KAAU5B,CAEpB7kD,GAAU0mD,KAAU,GAMtB,GAAI9mE,EAAIqD,KAAKmhE,WAAY,CACxBh9D,EAAUq/D,KAAU35D,CACpB1F,GAAUq/D,KAAU7B,CACpBx9D,GAAUq/D,KAAU5B,IAMvBoC,EAAa9gE,aAAaiB,EAC1B6/D,GAAalnD,aAAaC,IAOrB+W,GAAAvzB,UAAA+hE,WAAP,SAAkBx/D,EAAwB0wB,GAEzC,GAAI72B,GAAU8a,CACd,IAAIolC,IAAsB78C,KAAKohE,WAAa,IAAIphE,KAAKmhE,WAAa,EAClE,IAAIt9D,EAGJ,IAAI2vB,GAAgB,sBAAuB,CAE1CqpB,GAAe78C,KAAKohE,WAAa,IAAIphE,KAAKmhE,WAAa,EAEvD,IAAIY,GAA6Dj/D,CAEjE,IAAI+5C,GAAeklB,EAAiBllB,aAAeklB,EAAiBl+D,KAAO,KAAM,CAChFA,EAAMk+D,EAAiBl+D,IAAIhD,IAAIg8C,OACzB,CACNh5C,EAAM,GAAI2Y,cAAaqgC,EAAY,GAGpC,GAAIjgC,GAAe,CACnB,KAAKnF,EAAI,EAAGA,GAAKzX,KAAKohE,aAAc3pD,EAAG,CACtC,IAAK9a,EAAI,EAAGA,GAAKqD,KAAKmhE,aAAcxkE,EAAG,CACtCkH,EAAI+Y,KAAajgB,EAAEqD,KAAKmhE,WAAanhE,KAAKuiE,OAC1C1+D,GAAI+Y,KAAanF,EAAEzX,KAAKohE,WAAaphE,KAAKwiE,SAI5CT,EAAiBn/D,OAAOiB,OAElB,IAAI2vB,GAAgB,kBAAmB,GAIhD,OAAAM,IAhVoCgtC,EAkVpC1jE,GAA+BJ,QAAtB82B,I/G0ojBN2uC,iDAAiD,mDAAmDmF,mDAAmD,SAAS1rE,EAAQkB,EAAOJ,GAClL,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgHv+jBtB,IAAOygE,GAAmB5kE,EAAY,iDhH6+jBtC,IgHx+jBM2rE,GAAoB,SAAAnnE,GAASX,EAA7B8nE,EAAoBnnE,EAyFzB,SAzFKmnE,GAyFOzzC,EAAoB0zC,EAAwBC,EAAuBC,EAAsB9G,GAAzF,GAAA9sC,QAAA,GAAkB,CAAlBA,EAAA,GAAoB,GAAA0zC,QAAA,GAAsB,CAAtBA,EAAA,GAAwB,GAAAC,QAAA,GAAqB,CAArBA,EAAA,GAAuB,GAAAC,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA9G,QAAA,GAAkB,CAAlBA,EAAA,KAEpGxgE,EAAAzD,KAAA+C,KApFOA,MAAAgC,aAAsB,CAsF7BhC,MAAKg0B,QAAUI,CACfp0B,MAAKioE,YAAcH,CACnB9nE,MAAKkoE,WAAaH,CAClB/nE,MAAKmoE,WAAaH,CAClBhoE,MAAKqhE,KAAOH,EArFbvgE,OAAAC,eAAWinE,EAAAtnE,UAAA,UhHw/jBJM,IgHx/jBP,WAEC,MAAOb,MAAKg0B,ShHy/jBN1wB,IgHt/jBP,SAAkByF,GAEjB/I,KAAKg0B,QAAUjrB,CACf/I,MAAKshE,wBhHu/jBCvgE,WAAY,KACZC,aAAc,MgHl/jBrBL,QAAAC,eAAWinE,EAAAtnE,UAAA,chHw/jBJM,IgHx/jBP,WAEC,MAAOb,MAAKioE,ahHy/jBN3kE,IgHt/jBP,SAAsByF,GAErB/I,KAAKioE,YAAcl/D,CACnB/I,MAAKshE,wBhHu/jBCvgE,WAAY,KACZC,aAAc,MgHl/jBrBL,QAAAC,eAAWinE,EAAAtnE,UAAA,ahHw/jBJM,IgHx/jBP,WAEC,MAAOb,MAAKkoE,YhHy/jBN5kE,IgHt/jBP,SAAqByF,GAEpB/I,KAAKkoE,WAAan/D,CAClB/I,MAAKshE,sBACLthE,MAAKuhE,mBhHu/jBCxgE,WAAY,KACZC,aAAc,MgHl/jBrBL,QAAAC,eAAWinE,EAAAtnE,UAAA,ahHw/jBJM,IgHx/jBP,WAEC,MAAOb,MAAKmoE,YhHy/jBN7kE,IgHt/jBP,SAAqByF,GAEpB/I,KAAKmoE,WAAap/D,CAClB/I,MAAKshE,sBACLthE,MAAKuhE,mBhHu/jBCxgE,WAAY,KACZC,aAAc,MgHl/jBrBL,QAAAC,eAAWinE,EAAAtnE,UAAA,OhHw/jBJM,IgHx/jBP,WAEC,MAAOb,MAAKqhE,MhHy/jBN/9D,IgHt/jBP,SAAeyF,GAEd/I,KAAKqhE,KAAOt4D,CACZ/I,MAAKshE,wBhHu/jBCvgE,WAAY,KACZC,aAAc,MgH99jBd6mE,GAAAtnE,UAAAihE,gBAAP,SAAuB1+D,EAAwB0wB,GAE9C,GAAI7vB,EACJ,IAAIQ,EACJ,IAAI8qB,EACJ,IAAIC,EAEJ,IAAIvyB,GAAU8a,CACd,IAAI5N,GAAUE,EAAUE,EAAU8vD,EAAWC,EAAWC,EAAWmO,EAAyBC,CAC5F,IAAI7E,EACJ,IAAIC,EACJ,IAAI/H,GAAoB,CAExB,IAAIloC,GAAgB,sBAAuB,CAE1C,GAAIuuC,GAA6Dj/D,CAGjE9C,MAAKgC,cAAgBhC,KAAKmoE,WAAa,IAAInoE,KAAKkoE,WAAa,EAC7DxM,GAAa17D,KAAKmoE,WAAWnoE,KAAKkoE,WAAW,CAG7C,IAAIloE,KAAKgC,cAAgB+/D,EAAiBllB,YAAa,CACtDl5C,EAAUo+D,EAAiBp+D,QAAQ9C,IAAIkhE,EAAiB1G,YACxDl3D,GAAY49D,EAAiB59D,UAAUtD,IAAIb,KAAKgC,aAChDitB,GAAU8yC,EAAiB9yC,QAAQpuB,IAAIb,KAAKgC,aAC5CktB,GAAW6yC,EAAiB7yC,SAASruB,IAAIb,KAAKgC,kBACxC,CACN2B,EAAU,GAAIkZ,aAAY6+C,EAC1Bv3D,GAAY,GAAIqY,cAAaxc,KAAKgC,aAAa,EAC/CitB,GAAU,GAAIzS,cAAaxc,KAAKgC,aAAa,EAC7CktB,GAAW,GAAI1S,cAAaxc,KAAKgC,aAAa,EAE9ChC,MAAKuhE,kBAINiC,EAAO,CACPC,GAAO,ChH69jBE,IgH19jBL6E,GAA+B,EAAEtrD,KAAKilD,GAAGjiE,KAAKkoE,UAClD,IAAIK,GAA+B,EAAEvrD,KAAKilD,GAAGjiE,KAAKmoE,UAElD,IAAIxG,GAAcC,CAClB,IAAIC,GAAWC,EAAW0G,EAAWC,CACrC,IAAI/G,GAAoB,CACxB,IAAImE,GAAyB,ChH29jBpB,IgHx9jBLnpE,GAAUwD,EAAU+wB,EAAUhxB,EAAU/C,CAE5C,KAAKua,EAAI,EAAGA,GAAKzX,KAAKmoE,aAAc1wD,EAAG,CAEtCiqD,EAAamE,EAAgB,CAE7B,KAAKlpE,EAAI,EAAGA,GAAKqD,KAAKkoE,aAAcvrE,EAAG,CAGtCyrE,EAAmBzrE,EAAE2rE,CACrBD,GAAmB5wD,EAAE8wD,CAErBrrE,GAAS8f,KAAK0mB,IAAI2kC,EAClBtO,GAAK78D,EAAO8f,KAAK0mB,IAAI0kC,EACrBpO,GAAK98D,EAAO8f,KAAKymB,IAAI2kC,EACrBnO,GAAKj9C,KAAKymB,IAAI4kC,EAEdx+D,GAAI7J,KAAKg0B,QAAQhX,KAAK0mB,IAAI0kC,GAAoBpoE,KAAKioE,YAAYlO,CAC/DhwD,GAAI/J,KAAKg0B,QAAQhX,KAAKymB,IAAI2kC,GAAoBpoE,KAAKioE,YAAYjO,CAC/D/vD,GAAKwN,GAAKzX,KAAKmoE,WAAa,EAAInoE,KAAKioE,YAAYhO,CAEjD,IAAIj6D,KAAKqhE,KAAM,CAEdmH,GAAMvO,CACNwO,GAAKzO,CACL6H,GAAK,CACLC,GAAM5kE,EAAQ68D,EAAG78D,EAAS2M,EAAE7J,KAAKg0B,OACjC2tC,IAAS13D,CACT23D,GAAQ73D,MAEF,CACNy+D,EAAKxO,CACLyO,GAAKxO,CACL4H,GAAM3kE,EAAQ68D,EAAG78D,EAAS2M,EAAE7J,KAAKg0B,OACjC8tC,GAAK,CACLH,GAAQ53D,CACR63D,GAAQ33D,EAGT,GAAItN,GAAKqD,KAAKkoE,WAAY,CACzB/jE,EAAUq/D,GAAQ35D,CAClB1F,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,EAC7Cv9D,GAAUq/D,EAAO,GAAKr/D,EAAUu9D,EAAa,OACvC,CACNv9D,EAAUq/D,GAAQ35D,CAClB1F,GAAUq/D,EAAO,GAAK7B,CACtBx9D,GAAUq/D,EAAO,GAAK5B,EAGvB3yC,EAAQu0C,GAAQzJ,CAChB9qC,GAAQu0C,EAAO,GAAKgF,CACpBv5C,GAAQu0C,EAAO,GAAKiF,CACpBv5C,GAASs0C,KAAUtmE,EAAQ88D,EAAG98D,EAAS6M,EAAE/J,KAAKg0B,QAC9C9E,GAASs0C,EAAO,GAAK3B,CACrB3yC,GAASs0C,EAAO,GAAK1B,CAErB0B,IAAQ,CAGR,IAAI7mE,EAAI,GAAK8a,EAAI,EAAG,CACnB/a,EAAImpE,CACJ3lE,GAAI2lE,EAAkB,CACtB50C,GAAI/wB,EAAIF,KAAKkoE,WAAa,CAC1BjoE,GAAIvD,EAAIsD,KAAKkoE,WAAa,CAE1BvkE,GAAQ8/D,KAAU/mE,CAClBiH,GAAQ8/D,KAAUvjE,CAClByD,GAAQ8/D,KAAUxyC,CAElBttB,GAAQ8/D,KAAU/mE,CAClBiH,GAAQ8/D,KAAUxyC,CAClBttB,GAAQ8/D,KAAUxjE,EAGnB4lE,KAKF9D,EAAiBn+D,WAAWD,EAE5Bo+D,GAAiB7+D,aAAaiB,EAC9B49D,GAAiBr0C,WAAWuB,EAC5B8yC,GAAiBn0C,YAAYsB,OAEvB,IAAIsE,GAAgB,kBAAmB,GAQxCq0C,GAAAtnE,UAAA+hE,WAAP,SAAkBx/D,EAAwB0wB,GAGzC,GAAI72B,GAAU8a,CACd,IAAI5T,EAGJ,IAAI2vB,GAAgB,sBAAuB,CAE1C,GAAIuuC,GAA6Dj/D,CAGjE,IAAIi/D,EAAiBl+D,KAAO7D,KAAKgC,cAAgB+/D,EAAiBllB,YAAa,CAC9Eh5C,EAAMk+D,EAAiBl+D,IAAIhD,IAAIb,KAAKgC,kBAC9B,CACN6B,EAAM,GAAI2Y,cAAaxc,KAAKgC,aAAa,GhHo8jBjC,GgHh8jBL4a,GAAe,CAGnB,KAAKnF,EAAI,EAAGA,GAAKzX,KAAKmoE,aAAc1wD,EAAG,CACtC,IAAK9a,EAAI,EAAGA,GAAKqD,KAAKkoE,aAAcvrE,EAAG,CAEtCkH,EAAI+Y,KAAajgB,EAAEqD,KAAKkoE,WAAaloE,KAAKuiE,OAC1C1+D,GAAI+Y,KAAanF,EAAEzX,KAAKmoE,WAAanoE,KAAKwiE,SAK5CT,EAAiBn/D,OAAOiB,OAElB,IAAI2vB,GAAgB,kBAAmB,GAIhD,OAAAq0C,IA5RmC/G,EA8RnC1jE,GAA8BJ,QAArB6qE,IhH87jBNpF,iDAAiD,mDAAmDiG,yCAAyC,SAASxsE,EAAQkB,EAAOJ,GAKxK,GiHtukBM2rE,GAAa,WAAnB,QAAMA,MAWSA,EAAAC,SAAkB,UASlBD,GAAA19B,OAAgB,QAC/B,OAAA09B,KAEAvrE,GAAuBJ,QAAd2rE,OjHwukBHE,gCAAgC,SAAS3sE,EAAQkB,EAAOJ,GAC9D,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkHxwkBtB,IAAOG,GAAStE,EAAe,oCAE/B,IAAO4sE,GAAS5sE,EAAe,8ClHmxkB/B,IkHxwkBM6sE,GAAI,SAAAroE,GAASX,EAAbgpE,EAAIroE,EAgBT,SAhBKqoE,KAkBJroE,EAAAzD,KAAA+C,KAdOA,MAAAgpE,aAAgC,GAAI9mE,OAiB5CvB,OAAAC,eAAWmoE,EAAAxoE,UAAA,elHmwkBJM,IkHnwkBP,WAEC,MAAOb,MAAKgpE,clHowkBNjoE,WAAY,KACZC,aAAc,MkHhwkBrBL,QAAAC,eAAWmoE,EAAAxoE,UAAA,alHswkBJM,IkHtwkBP,WAEC,MAAOkoE,GAAK7nE,WlHuwkBNH,WAAY,KACZC,aAAc,MkHnwkBd+nE,GAAAxoE,UAAAU,QAAP,YAOO8nE,GAAAxoE,UAAA0oE,eAAP,SAAsBC,GAErB,GAAIj8D,GAAajN,KAAKgpE,aAAa9rE,MAEnC,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,IAAOtQ,EAAG,CACpC,GAAGqD,KAAKgpE,aAAarsE,GAAGyR,MAAM86D,EAC7B,MAAOlpE,MAAKgpE,aAAarsE,GAE3B,GAAIwsE,GAAuB,GAAIL,EAC/BK,GAAW/6D,KAAK86D,CAChBlpE,MAAKgpE,aAAa1jE,KAAK6jE,EACvB,OAAOA,GAnDMJ,GAAA7nE,UAAmB,cAsDlC,OAAA6nE,IAxDmBvoE,EA0DLpD,GAAAJ,QAAL+rE,IlHswkBN5nE,oCAAoCC,UAAUgoE,8CAA8C,gDAAgDC,uCAAuC,SAASntE,EAAQkB,EAAOJ,GAI9M,GmH90kBMssE,GAAW,WAAjB,QAAMA,MASSA,EAAA/iC,KAAc,MAUd+iC,GAAAC,MAAe,OAUfD,GAAAE,SAAkB,UACjC,OAAAF,KAEAlsE,GAAqBJ,QAAZssE,OnH+0kBHG,8CAA8C,SAASvtE,EAAQkB,EAAOJ,GA2B5E,GoH/2kBM0sE,GAAkB,WAuBvB,QAvBKA,GAuBOxtB,GAPLl8C,KAAAo8C,iBAA+B,GAAIl6C,MAInClC,MAAAq8C,cAA4B,GAAIn6C,MAKtClC,MAAKs8C,WAAW,CAChBt8C,MAAKk8C,QAAUA,CACf,IAAIl8C,KAAKk8C,SAAW,KAAM,CACzB,GAAIU,GAA0B58C,KAAKk8C,QAAQ/3C,UAAUtD,IAAIb,KAAKk8C,QAAQW,YACtE,KAAK,GAAI/b,GAAW,EAAGA,EAAI8b,EAAW1/C,OAAO,EAAG4jC,IAAK,CACpD,GAAG8b,EAAW9b,EAAE,GAAG9gC,KAAKs8C,WACvBt8C,KAAKs8C,WAAWM,EAAW9b,EAAE,KAKlC,MAAA4oC,KAEAtsE,GAA4BJ,QAAnB0sE,OpHi2kBHN,+CAA+C,SAASltE,EAAQkB,EAAOJ,GAC7E,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GqH16kBtB,IAAOG,GAAStE,EAAe,oCAI/B,IAAOwtE,GAAkBxtE,EAAa,6CrHm7kBtC,IqHx6kBMytE,GAAmB,SAAAjpE,GAASX,EAA5B4pE,EAAmBjpE,EAmBxB,SAnBKipE,KAqBJjpE,EAAAzD,KAAA+C,KACAA,MAAK4pE,YAAc,GAAI1nE,MACvBlC,MAAK6pE,gBAAkB,GAAIlpE,OAC3BX,MAAK8pE,UAAU,CACf9pE,MAAK+pE,UAAU,EAMTJ,EAAAppE,UAAAU,QAAP,YAKAN,QAAAC,eAAI+oE,EAAAppE,UAAA,YrH45kBGM,IqH55kBP,WACC,MAAOb,MAAK8pE,WrH85kBNxmE,IqH35kBP,SAAayF,GACZ/I,KAAK8pE,UAAU/gE,GrH65kBThI,WAAY,KACZC,aAAc,MqH35kBrBL,QAAAC,eAAI+oE,EAAAppE,UAAA,YrH85kBGM,IqH95kBP,WACC,MAAOb,MAAK+pE,WrHg6kBNzmE,IqH75kBP,SAAayF,GACZ/I,KAAK+pE,UAAUhhE,GrH+5kBThI,WAAY,KACZC,aAAc,MqH95kBd2oE,GAAAppE,UAAAypE,eAAP,WAEC,MAAOhqE,MAAK4pE,YAEND,GAAAppE,UAAAk6C,iBAAP,WAEC,MAAOz6C,MAAKiqE,cAENN,GAAAppE,UAAA2pE,qBAAP,SAA4BnhE,GAE3B/I,KAAKmqE,kBAAkBphE,EAEjB4gE,GAAAppE,UAAA06C,qBAAP,WAEC,MAAOj7C,MAAKmqE,kBAENR,GAAAppE,UAAA6pE,iBAAP,SAAwBC,GAEvBrqE,KAAKiqE,cAAcI,EAKbV,GAAAppE,UAAAu7C,oBAAP,SAA2BwuB,GAE1B,MAAOtqE,MAAK6pE,gBAAgBS,GAKtBX,GAAAppE,UAAAgqE,oBAAP,SAA2BD,EAAaE,GAEvC,GAAIC,GAA0C,GAAIf,GAAqCc,EACvFA,GAAOp8D,KAAKk8D,CACZtqE,MAAK4pE,YAAYtkE,KAAKmlE,EACtBzqE,MAAK6pE,gBAAgBS,GAAMG,EAG7B,OAAAd,IAzFkCnpE,EA2FlCpD,GAA6BJ,QAApB2sE,IrH05kBNxoE,oCAAoCC,UAAUqoE,6CAA6C,+CAA+CiB,6CAA6C,SAASxuE,EAAQkB,EAAOJ,GAKlN,GsHrglBM2tE,GAAiB,WAAvB,QAAMA,MAOSA,EAAAC,OAAgB,QAOhBD,GAAAE,KAAc,MAKdF,GAAApkC,KAAc,MAOdokC,GAAAG,MAAe,OAC9B,OAAAH,KAE2BvtE,GAAAJ,QAAlB2tE,OtHqglBHjrB,yCAAyC,SAASxjD,EAAQkB,EAAOJ,GAOvE,GuHvilBMg8C,GAAa,WAAnB,QAAMA,MAKSA,EAAA+xB,QAAiB,SAKjB/xB,GAAAgyB,MAAe,OAKfhyB,GAAAE,OAAgB,OAC/B,OAAAF,KAEA57C,GAAuBJ,QAAdg8C,OvHwilBHiyB,2CAA2C,SAAS/uE,EAAQkB,EAAOJ,GAKzE,GwHjklBMkuE,GAAe,WAArB,QAAMA,KAMElrE,KAAA4qE,OAAgB,QAMhB5qE,MAAAmrE,QAAiB,SAMjBnrE,MAAA6qE,KAAc,MAMd7qE,MAAA8qE,MAAe,QACvB,MAAAI,KAEyB9tE,GAAAJ,QAAhBkuE,OxHiklBHE,sCAAsC,SAASlvE,EAAQkB,EAAOJ,GACpE,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GyHrmlBtB,IAAOG,GAAStE,EAAe,oCzHkolB/B,IyHpmlBMmvE,GAAU,SAAA3qE,GAASX,EAAnBsrE,EAAU3qE,EAiPf,SAjPK2qE,GAiPOC,EAAiC/wB,EAAkB/S,EAAiC+jC,EAAsBC,EAAwBC,EAA2BC,EAAiBC,EAAyBhvB,EAAuBivB,EAAuBC,EAAwBC,EAAmBC,GAAhS,GAAAT,QAAA,GAA+B,CAA/BA,EAAA,kBAAiC,GAAA/wB,QAAA,GAAgB,CAAhBA,EAAA,GAAkB,GAAA/S,QAAA,GAA+B,CAA/BA,EAAA,EAAiC,GAAA+jC,QAAA,GAAoB,CAApBA,EAAA,MAAsB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,MAAwB,GAAAC,QAAA,GAAyB,CAAzBA,EAAA,MAA2B,GAAAC,QAAA,GAAe,CAAfA,EAAA,GAAiB,GAAAC,QAAA,GAAuB,CAAvBA,EAAA,GAAyB,GAAAhvB,QAAA,GAAqB,CAArBA,EAAA,OAAuB,GAAAivB,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAC,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAE3SrrE,EAAAzD,KAAA+C,KAjFMA,MAAAgsE,SAAiC,GAAI9pE,MAkF3ClC,MAAKisE,UAAYX,CACjBtrE,MAAKu6C,KAAOA,CACZv6C,MAAKurE,KAAOA,CACZvrE,MAAKwrE,OAASA,CACdxrE,MAAKyrE,UAAYA,CACjBzrE,MAAK0rE,IAAMA,CACX1rE,MAAK2rE,YAAcA,CACnB3rE,MAAK28C,MAAQA,CACb38C,MAAK4rE,WAAaA,CAClB5rE,MAAK6rE,YAAcA,CACnB7rE,MAAK8rE,OAASA,CACd9rE,MAAK+rE,QAAUA,EAMhBprE,OAAAC,eAAWyqE,EAAA9qE,UAAA,azH+6kBJM,IyH/6kBP,WAEC,MAAOwqE,GAAWnqE,WzHg7kBZH,WAAY,KACZC,aAAc,MyHtrlBPqqE,GAAAnqE,UAAmB,oBAuQlC,OAAAmqE,IAzQyB7qE,EA2QzBpD,GAAoBJ,QAAXquE,IzHo7kBNlqE,oCAAoCC,YAAY8qE,+CAA+C,SAAShwE,EAAQkB,EAAOJ,GAM1H,G0H9tlBMmvE,GAAmB,WAAzB,QAAMA,MASSA,EAAAlhC,OAAgB,QAOhBkhC,GAAAC,UAAmB,WAClC,OAAAD,KAEA/uE,GAA6BJ,QAApBmvE,O1HgulBHE,2CAA2C,SAASnwE,EAAQkB,EAAOJ,GAOzE,G2HzvlBMsvE,GAAe,WA4DpB,QA5DKA,GA4DOziE,EAAgBuD,EAAoBjD,EAAqBoiE,EAAqBC,EAAsBT,GAApG,GAAAliE,QAAA,GAAc,CAAdA,EAAAy/B,IAAgB,GAAAl8B,QAAA,GAAkB,CAAlBA,EAAAk8B,IAAoB,GAAAn/B,QAAA,GAAmB,CAAnBA,EAAAm/B,IAAqB,GAAAijC,QAAA,GAAmB,CAAnBA,EAAAjjC,IAAqB,GAAAkjC,QAAA,GAAoB,CAApBA,EAAAljC,IAAsB,GAAAyiC,QAAA,GAAoB,CAApBA,EAAAziC,KAIjH,MAAAgjC,KAEAlvE,GAAyBJ,QAAhBsvE,O3HstlBHG,2CAA2C,SAASvwE,EAAQkB,EAAOJ,GAKzE,G4H/xlBM0vE,GAAW,WAAjB,QAAMA,MAKSA,EAAAzhC,OAAgB,QAKhByhC,GAAAC,gBAAyB,gBAKzBD,GAAAE,gBAAyB,gBACxC,OAAAF,KAEqBtvE,GAAAJ,QAAZ0vE,O5HgylBH9nB,+CAA+C,SAAS1oD,EAAQkB,EAAOJ,GAC7E,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G6HxzlBtB,IAAO4wC,GAAS/0C,EAAc,mCAC9B,IAAO2wE,GAAU3wE,EAAc,mCAE/B,IAAOwwE,GAAWxwE,EAAc,0CAChC,IAAO4wE,GAAW5wE,EAAc,0CAEhC,IAAM+mD,GAAe,SAAAviD,GAASX,EAAxBkjD,EAAeviD,EAmEpB,SAnEKuiD,GAmEO+M,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,KAEXtvD,EAAAzD,KAAA+C,KAEAA,MAAK+sE,aAAa,EAElB/sE,MAAKgwD,QAAUA,CAEfhwD,MAAKgtE,aAAeN,EAAYzhC,OAjEjCtqC,OAAAC,eAAWqiD,EAAA1iD,UAAA,a7H4zlBJM,I6H5zlBP,WAEC,MAAOoiD,GAAgB/hD,W7H6zlBjBH,WAAY,KACZC,aAAc,M6H3zlBrBL,QAAAC,eAAWqiD,EAAA1iD,UAAA,e7H8zlBJM,I6H9zlBP,WAEC,MAAOb,MAAKgtE,c7H+zlBN1pE,I6H5zlBP,SAAuByF,GAEtB,GAAI/I,KAAKgtE,cAAgBjkE,EACxB,MAED/I,MAAKgtE,aAAejkE,G7H4zlBdhI,WAAY,KACZC,aAAc,M6HpzlBrBL,QAAAC,eAAWqiD,EAAA1iD,UAAA,a7H2zlBJM,I6H3zlBP,WAEC,MAAmBb,MAAKie,UAAU,I7H4zlB5B3a,I6HzzlBP,SAAqByF,GAEpB,GAAI/I,KAAKie,UAAU,IAAMlV,EACxB,MAED/I,MAAKitE,aAAalkE,EAAO,I7HyzlBnBhI,WAAY,KACZC,aAAc,M6HnzlBrBL,QAAAC,eAAWqiD,EAAA1iD,UAAA,W7H0zlBJM,I6H1zlBP,WAEC,MAAiBb,MAAKke,QAAQ,I7H2zlBxB5a,I6HxzlBP,SAAmByF,GAElB,GAAI/I,KAAKke,QAAQ,IAAMnV,EACtB,MAED,KAAK8jE,EAAWK,eAAenkE,GAC9B,KAAM,IAAIkoC,GAAU,kFAErBjxC,MAAKmtE,WAAWpkE,EAAO,I7HuzlBjBhI,WAAY,KACZC,aAAc,M6Hp3lBPiiD,GAAA/hD,UAAmB,2BAyElC,OAAA+hD,IA7E8B6pB,EA+EL1vE,GAAAJ,QAAhBimD,I7HgzlBN3R,mCAAmClwC,UAAUgsE,mCAAmChsE,UAAUqrE,0CAA0C,0CAA0CY,0CAA0C,4CAA4Ct0B,iDAAiD,SAAS78C,EAAQkB,EAAOJ,GAChV,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G8H14lBtB,IAAOysE,GAAW5wE,EAAc,0CAGhC,IAAM27C,GAAiB,SAAAn3C,GAASX,EAA1B83C,EAAiBn3C,EAgDtB,SAhDKm3C,GAgDO+a,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,KAEXlyD,EAAAzD,KAAA+C,KAEAA,MAAK+sE,aAAa,EAElB/sE,MAAK4yD,UAAYA,EA9ClBjyD,OAAAC,eAAWi3C,EAAAt3C,UAAA,a9H+4lBJM,I8H/4lBP,WAEC,MAAOg3C,GAAkB32C,W9Hg5lBnBH,WAAY,KACZC,aAAc,M8H14lBrBL,QAAAC,eAAWi3C,EAAAt3C,UAAA,e9Hi5lBJM,I8Hj5lBP,WAEC,MAAqBb,MAAKie,UAAU,I9Hk5lB9B3a,I8H/4lBP,SAAuByF,GAEtB,GAAI/I,KAAKie,UAAU,IAAMlV,EACxB,MAED/I,MAAKitE,aAAalkE,EAAO,I9H+4lBnBhI,WAAY,KACZC,aAAc,M8Hz4lBrBL,QAAAC,eAAWi3C,EAAAt3C,UAAA,a9Hg5lBJM,I8Hh5lBP,WAEC,MAAmBb,MAAKke,QAAQ,I9Hi5lB1B5a,I8H94lBP,SAAqByF,GAEpB,GAAI/I,KAAKke,QAAQ,IAAMnV,EACtB,MAED/I,MAAKmtE,WAAWpkE,EAAO,I9H84lBjBhI,WAAY,KACZC,aAAc,M8Hz7lBP62C,GAAA32C,UAAmB,6BAsDlC,OAAA22C,IAxDgCi1B,EA0DL1vE,GAAAJ,QAAlB66C,I9Hw4lBNw1B,0CAA0C,4CAA4CA,2CAA2C,SAASnxE,EAAQkB,EAAOJ,GAC5J,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,G+H38lBtB,IAAOG,GAAStE,EAAe,oC/Hi9lB/B,I+H18lBM4wE,GAAW,SAAApsE,GAASX,EAApB+sE,EAAWpsE,EAShB,SATKosE,KAWJpsE,EAAAzD,KAAA+C,KATMA,MAAAstE,WAAoB,CACpBttE,MAAAke,QAA2B,GAAIhc,MAC/BlC,MAAAie,UAA+B,GAAI/b,OAUnC4qE,EAAAvsE,UAAAgtE,aAAP,WAEC,MAAOvtE,MAAKstE,WAGNR,GAAAvsE,UAAAwsE,aAAP,SAAoBhkE,GAEnB,GAAI/I,KAAKstE,YAAcvkE,EACtB,MAED/I,MAAKstE,WAAavkE,CAElB/I,MAAKke,QAAQhhB,OAAS6L,CACtB/I,MAAKie,UAAU/gB,OAAS6L,CAExB/I,MAAKoJ,aAGC0jE,GAAAvsE,UAAA+d,WAAP,SAAkB1B,GAEjB,MAAO5c,MAAKke,QAAQtB,GAGdkwD,GAAAvsE,UAAA4sE,WAAP,SAAkBzuD,EAAiB9B,GAElC5c,KAAKke,QAAQtB,GAAS8B,CAEtB1e,MAAKoJ,aAGC0jE,GAAAvsE,UAAAie,aAAP,SAAoB5B,GAEnB,MAAO5c,MAAKie,UAAUrB,GAGhBkwD,GAAAvsE,UAAA0sE,aAAP,SAAoBruD,EAAqBhC,GAExC5c,KAAKie,UAAUrB,GAASgC,CAExB5e,MAAKoJ,aAEP,OAAA0jE,IAvD0BtsE,EAyD1BpD,GAAqBJ,QAAZ8vE,I/Hy7lBN3rE,oCAAoCC,YAAYosE,kDAAkD,SAAStxE,EAAQkB,EAAOJ,GAC7H,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GgIhgmBtB,IAAOotE,GAAavxE,EAAc,4ChIsgmBlC,IgIjgmBMwxE,GAAkB,SAAAhtE,GAASX,EAA3B2tE,EAAkBhtE,EAEvB,SAFKgtE,KAIJhtE,EAAAzD,KAAA+C,MAEF,MAAA0tE,IANiCD,EAQLrwE,GAAAJ,QAAnB0wE,IhIkgmBNC,4CAA4C,8CAA8CA,6CAA6C,SAASzxE,EAAQkB,EAAOJ,GiI3gmBlK,GAAOuiE,GAAkBrjE,EAAa,6CjIghmBtC,IiIvgmBMuxE,GAAa,WAelB,QAfKA,KASGztE,KAAA4tE,eAAwB,CACzB5tE,MAAA6tE,cAAuB,CACvB7tE,MAAA8tE,yBAAkC,CAMxC9tE,MAAK+tE,qBAAuB,GAAIxO,GAMjC5+D,OAAAC,eAAW6sE,EAAAltE,UAAA,UjI2/lBJM,IiI3/lBP,WAEC,MAAOb,MAAKi/B,UjI4/lBN37B,IiIz/lBP,SAAkByF,GAEjB/I,KAAKi/B,SAAWl2B,CAChB/I,MAAKguE,YAAchuE,KAAKi/B,SAASs0B,ejI0/lB3BxyD,WAAY,KACZC,aAAc,MiIr/lBrBL,QAAAC,eAAW6sE,EAAAltE,UAAA,cjI2/lBJM,IiI3/lBP,WAEC,MAAOb,MAAKiuE,mBjI4/lBN3qE,IiIz/lBP,SAAsByF,GAErB/I,KAAKiuE,kBAAoBllE,GjI0/lBnBhI,WAAY,KACZC,aAAc,MiIr/lBrBL,QAAAC,eAAW6sE,EAAAltE,UAAA,cjI2/lBJM,IiI3/lBP,WAEC,MAAOb,MAAKkuE,cjI4/lBNntE,WAAY,KACZC,aAAc,MiIv/lBrBL,QAAAC,eAAW6sE,EAAAltE,UAAA,ejI6/lBJM,IiI7/lBP,WAEC,MAAOb,MAAK6tE,ejI8/lBN9sE,WAAY,KACZC,aAAc,MiIz/lBrBL,QAAAC,eAAW6sE,EAAAltE,UAAA,0BjI+/lBJM,IiI//lBP,WAEC,MAAOb,MAAK8tE,0BjIggmBN/sE,WAAY,KACZC,aAAc,MiI3/lBdysE,GAAAltE,UAAA0U,MAAP,WAECjV,KAAK6tE,cAAgB7tE,KAAK8tE,yBAA2B,CACrD9tE,MAAKguE,YAAchuE,KAAKiuE,kBAAmBjuE,KAAKiuE,kBAAsBjuE,KAAKi/B,SAAUj/B,KAAKi/B,SAASs0B,cAAgB,IACnHvzD,MAAK4tE,eAAiB5tE,KAAKguE,YAAahuE,KAAKguE,YAAY9wE,OAAS,CAClE8C,MAAKkuE,aAAe,IACpBluE,MAAK+tE,qBAAqBlO,UAQpB4N,GAAAltE,UAAAy0D,UAAP,SAAiBwC,GAEhB,GAAI2W,GAAgBnuE,KAAK6U,MAAMknB,kBAAoBy7B,EAAKz7B,kBAAoBy7B,EAAK7mC,YAAY3wB,KAAKguE,YAAahuE,KAAK4tE,eAEpHpW,GAAKz7B,iBAAmB/7B,KAAK6U,MAAMknB,gBAEnC,OAAOoyC,GAODV,GAAAltE,UAAA00D,sBAAP,SAA6Bl5C,IAStB0xD,GAAAltE,UAAAo2D,YAAP,SAAmB56C,GAElB/b,KAAK6tE,eAEL,IAAI9xD,EAAOjF,mBACV9W,KAAK8tE,0BAEN,IAAIlO,GAAsB5/D,KAAK+tE,qBAAqBpO,SACpDC,GAAK7jD,OAASA,CAEd6jD,GAAK1B,KAAOl+D,KAAKkuE,YACjBluE,MAAKkuE,aAAetO,EAOd6N,GAAAltE,UAAA62D,gBAAP,SAAuBr7C,IAShB0xD,GAAAltE,UAAA+3D,gBAAP,SAAuBv8C,IAShB0xD,GAAAltE,UAAA44D,YAAP,SAAmBp9C,IAIpB,OAAA0xD,KAEArwE,GAAuBJ,QAAdywE,IjIg/lBNpO,6CAA6C,+CAA+C+O,+CAA+C,SAASlyE,EAAQkB,EAAOJ,GACtK,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GkIzpmBtB,IAAOotE,GAAavxE,EAAc,4ClI+pmBlC,IkIrpmBMmyE,GAAe,SAAA3tE,GAASX,EAAxBsuE,EAAe3tE,EAsDpB,SAtDK2tE,KAwDJ3tE,EAAAzD,KAAA+C,KAhDMA,MAAAsuE,YAAqB,CAEpBtuE,MAAAuuE,sBAA+B,CAC/BvuE,MAAAwuE,gBAAyB,CACzBxuE,MAAAyuE,gBAAyB,CA8ChCzuE,MAAK0uE,SAAW,GAAIxsE,MACpBlC,MAAK2uE,mBAAqB,GAAIzsE,MAC9BlC,MAAK4uE,aAAe,GAAI1sE,MACxBlC,MAAK6uE,aAAe,GAAI3sE,MAExBlC,MAAK62D,kBAAoB,KA9C1Bl2D,OAAAC,eAAWytE,EAAA9tE,UAAA,qBlIspmBJM,IkItpmBP,WAEC,MAAOb,MAAK2uE,oBlIupmBN5tE,WAAY,KACZC,aAAc,MkIlpmBrBL,QAAAC,eAAWytE,EAAA9tE,UAAA,elIwpmBJM,IkIxpmBP,WAEC,MAAOb,MAAK6uE,clIypmBN9tE,WAAY,KACZC,aAAc,MkIppmBrBL,QAAAC,eAAWytE,EAAA9tE,UAAA,UlI0pmBJM,IkI1pmBP,WAEC,MAAOb,MAAK0uE,UlI2pmBN3tE,WAAY,KACZC,aAAc,MkItpmBrBL,QAAAC,eAAWytE,EAAA9tE,UAAA,elI4pmBJM,IkI5pmBP,WAEC,MAAOb,MAAK4uE,clI6pmBN7tE,WAAY,KACZC,aAAc,MkIxpmBrBL,QAAAC,eAAWytE,EAAA9tE,UAAA,UlI8pmBJM,IkI9pmBP,WAEC,MAAOb,MAAK8uE,UlI+pmBN/tE,WAAY,KACZC,aAAc,MkI7omBdqtE,GAAA9tE,UAAA00D,sBAAP,SAA6Bl5C,GAE5B/b,KAAK2uE,mBAAoB3uE,KAAKuuE,yBAA+CxyD,EAOvEsyD,GAAA9tE,UAAA62D,gBAAP,SAAuBr7C,GAEtB/b,KAAK6uE,aAAc7uE,KAAKyuE,mBAAmC1yD,EAOrDsyD,GAAA9tE,UAAA+3D,gBAAP,SAAuBv8C,GAEtB/b,KAAK4uE,aAAc5uE,KAAKwuE,mBAAmCzyD,EAOrDsyD,GAAA9tE,UAAA44D,YAAP,SAAmBp9C,GAElB/b,KAAK8uE,SAAoB/yD,EAMnBsyD,GAAA9tE,UAAA0U,MAAP,WAECvU,EAAAH,UAAM0U,MAAKhY,KAAA+C,KAEXA,MAAK8uE,SAAW,IAEhB,IAAI9uE,KAAKsuE,YAAc,EACtBtuE,KAAK0uE,SAASxxE,OAAS8C,KAAKsuE,YAAc,CAE3C,IAAItuE,KAAKuuE,sBAAwB,EAChCvuE,KAAK2uE,mBAAmBzxE,OAAS8C,KAAKuuE,sBAAwB,CAE/D,IAAIvuE,KAAKwuE,gBAAkB,EAC1BxuE,KAAK4uE,aAAa1xE,OAAS8C,KAAKwuE,gBAAkB,CAEnD,IAAIxuE,KAAKyuE,gBAAkB,EAC1BzuE,KAAK6uE,aAAa3xE,OAAS8C,KAAKyuE,gBAAkB,EAErD,OAAAJ,IA3H8BZ,EA6HLrwE,GAAAJ,QAAhBqxE,IlIuomBNV,4CAA4C,8CAA8CvO,gDAAgD,SAASljE,EAAQkB,EAAOJ,GACrK,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GmIpxmBtB,IAAO4F,GAAQ/J,EAAgB,gCAG/B,IAAOuxE,GAAavxE,EAAc,4CnI8xmBlC,ImIjxmBMshE,GAAgB,SAAA98D,GAASX,EAAzBy9D,EAAgB98D,EAoCrB,SApCK88D,KAsCJ98D,EAAAzD,KAAA+C,KApCOA,MAAA+uE,aAAwB,GAAI9oE,EAC5BjG,MAAAgvE,cAAyB,GAAI/oE,EAE9BjG,MAAA+7B,iBAA0B,EAKjCp7B,OAAAC,eAAW48D,EAAAj9D,UAAA,enIsxmBJM,ImItxmBP,WAEC,MAAOb,MAAK+uE,cnIuxmBNzrE,ImIpxmBP,SAAuByF,GAEtB/I,KAAK+uE,aAAehmE,GnIqxmBdhI,WAAY,KACZC,aAAc,MmIhxmBrBL,QAAAC,eAAW48D,EAAAj9D,UAAA,gBnIsxmBJM,ImItxmBP,WAEC,MAAOb,MAAKgvE,enIuxmBN1rE,ImIpxmBP,SAAwByF,GAEvB/I,KAAKgvE,cAAgBjmE,GnIqxmBfhI,WAAY,KACZC,aAAc,MmItwmBdw8D,GAAAj9D,UAAAy0D,UAAP,SAAiBwC,GAEhB,MAAOA,GAAKtB,kBAAkBl2D,KAAK+uE,aAAc/uE,KAAKgvE,eAExD,OAAAxR,IAlD+BiQ,EAoDLrwE,GAAAJ,QAAjBwgE,InI8wmBNrlD,gCAAgC/W,UAAUusE,4CAA4C,8CAA8CjZ,qDAAqD,SAASx4D,EAAQkB,EAAOJ,GACpN,GAAI+C,GAAYC,KAAKD,WAAa,SAAUE,EAAGC,GAC3C,IAAK,GAAIC,KAAKD,GAAG,GAAIA,EAAEE,eAAeD,GAAIF,EAAEE,GAAKD,EAAEC,EACnD,SAASE,KAAOL,KAAKM,YAAcL,EACnCI,EAAGE,UAAYL,EAAEK,SACjBN,GAAEM,UAAY,GAAIF,GoIt1mBtB,IAAOotE,GAAavxE,EAAc,4CpI41mBlC,IoIv1mBMi4D,GAAqB,SAAAzzD,GAASX,EAA9Bo0D,EAAqBzzD,EAE1B,SAFKyzD,KAIJzzD,EAAAzD,KAAA+C,MAMMm0D,EAAA5zD,UAAAy0D,UAAP,SAAiBwC,GAEhB,GAAI2W,GAAgBnuE,KAAK6U,MAAMknB,kBAAoBy7B,EAAKz7B,kBAAoBy7B,EAAKrC,iBAEjF,KAAKgZ,EAAO,CACX3W,EAAKz7B,iBAAmB/7B,KAAK6U,MAAMknB,gBAEnC,OAAO,OAGR,MAAOr7B,GAAAH,UAAMy0D,UAAS/3D,KAAA+C,KAACw3D,GAEzB,OAAArD,IAtBoCsZ,EAwBpCrwE,GAA+BJ,QAAtBm3D,IpIm1mBNwZ,4CAA4C,8CAA8CsB,iCAAiC,SAAS/yE,EAAQkB,EAAOJ,GqIj3mBtJ,GAAOotD,GAAOluD,EAAe,gCAE7B,IAAOgzE,GAAShzE,EAAc,kCAE9B,IAAO0jD,GAAS1jD,EAAc,sCAC9B,IAAO+mD,GAAe/mD,EAAa,8CrIo3mBnC,IqI/2mBMizE,GAAI,WAAV,QAAMA,MAQSA,EAAAC,OAAd,SAAqBh1C,GAEpB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,UAAU,IAAU,SACnB,MAAOA,EAER,OAAgBA,GAGH+0C,GAAAE,UAAd,SAAwBj1C,GAEvB,SAAU,IAAU,WACnBA,EAAO,GAAIA,EAEZ,IAAIA,YAAgB80C,GACnB,MAAO90C,EAER,OAAmBA,GAcL+0C,GAAAG,MAAf,SAAqB5rD,GAEpB,GAAIxmB,GAAwBwmB,EAAIxmB,MAChC,KAAK,GAAIP,GAAmB,EAAGA,EAAIO,IAAUP,EAAG,CAC/C,GAAIqD,KAAKuvE,UAAUl2D,QAAQqK,EAAI8rD,OAAO7yE,MAAQ,EAC7C,MAAO,OAGT,MAAO,MAGMwyE,GAAAM,SAAd,SAAuBr1C,GAEtB,SAAU,IAAU,SACnB,MAAOpd,MAAKC,MAAemd,EAE5B,UAAU,IAAU,SAAU,CAC7B,GAAIA,GAAQ,SACX,MAAOpd,MAAKC,MAAMD,KAAK0yD,SAAS,SAEjC,IAAI1vE,KAAK2vE,aAAe,KAAM,CAC7B3vE,KAAK2vE,YAAc,GAAIhvE,OACvBX,MAAK2vE,YAAY,aAAe,OAChC3vE,MAAK2vE,YAAY,aAAe,MAChC3vE,MAAK2vE,YAAY,kBAAoB,OACrC3vE,MAAK2vE,YAAY,kBAAoB,QACrC3vE,MAAK2vE,YAAY,mBAAqB,OACtC3vE,MAAK2vE,YAAY,aAAe,OAChC3vE,MAAK2vE,YAAY,iBAAmB,OACpC3vE;KAAK2vE,YAAY,gBAAkB,OACnC3vE,MAAK2vE,YAAY,QAAU,GAC3B3vE,MAAK2vE,YAAY,YAAc,GAC/B3vE,MAAK2vE,YAAY,cAAgB,GACjC3vE,MAAK2vE,YAAY,QAAU,GAC3B3vE,MAAK2vE,YAAY,cAAgB,OACjC3vE,MAAK2vE,YAAY,eAAiB,KAClC3vE,MAAK2vE,YAAY,gBAAkB,OACnC3vE,MAAK2vE,YAAY,WAAa,OAC9B3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,cAAgB,QACjC3vE,MAAK2vE,YAAY,SAAW,QAC5B3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,iBAAmB,QACpC3vE,MAAK2vE,YAAY,mBAAqB,OACtC3vE,MAAK2vE,YAAY,iBAAmB,OACpC3vE,MAAK2vE,YAAY,YAAc,KAC/B3vE,MAAK2vE,YAAY,QAAU,KAC3B3vE,MAAK2vE,YAAY,aAAe,OAChC3vE,MAAK2vE,YAAY,iBAAmB,KACpC3vE,MAAK2vE,YAAY,QAAU,KAC3B3vE,MAAK2vE,YAAY,QAAU,KAC3B3vE,MAAK2vE,YAAY,aAAe,OAChC3vE,MAAK2vE,YAAY,cAAgB,OACjC3vE,MAAK2vE,YAAY,oBAAsB,OACvC3vE,MAAK2vE,YAAY,gBAAkB,OACnC3vE,MAAK2vE,YAAY,kBAAoB,OACrC3vE,MAAK2vE,YAAY,YAAc,OAC/B3vE,MAAK2vE,YAAY,aAAe,KAChC3vE,MAAK2vE,YAAY,SAAW,KAC5B3vE,MAAK2vE,YAAY,eAAiB,OAClC3vE,MAAK2vE,YAAY,aAAe,OAChC3vE,MAAK2vE,YAAY,QAAU,KAC3B3vE,MAAK2vE,YAAY,cAAgB,OACjC3vE,MAAK2vE,YAAY,aAAe,OAChC3vE,MAAK2vE,YAAY,eAAiB,QAClC3vE,MAAK2vE,YAAY,eAAiB,QAClC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,cAAgB,OACjC3vE,MAAK2vE,YAAY,eAAiB,KAClC3vE,MAAK2vE,YAAY,qBAAuB,KACxC3vE,MAAK2vE,YAAY,kBAAoB,OACrC3vE,MAAK2vE,YAAY,aAAe,OAChC3vE,MAAK2vE,YAAY,SAAW,OAC5B3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,iBAAmB,QACpC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,QAAU,QAC3B3vE,MAAK2vE,YAAY,UAAY,QAC7B3vE,MAAK2vE,YAAY,SAAW,QAC5B3vE,MAAK2vE,YAAY,iBAAmB,QACpC3vE,MAAK2vE,YAAY,kBAAoB,QACrC3vE,MAAK2vE,YAAY,YAAc,QAC/B3vE,MAAK2vE,YAAY,SAAW,QAC5B3vE,MAAK2vE,YAAY,eAAiB,QAClC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,OAAS,QAC1B3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,UAAY,QAC7B3vE,MAAK2vE,YAAY,eAAiB,OAClC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,QAAU,QAC3B3vE,MAAK2vE,YAAY,cAAgB,QACjC3vE,MAAK2vE,YAAY,WAAa,OAC9B3vE,MAAK2vE,YAAY,UAAY,OAC7B3vE,MAAK2vE,YAAY,SAAW,QAC5B3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,cAAgB,QACjC3vE,MAAK2vE,YAAY,UAAY,QAC7B3vE,MAAK2vE,YAAY,cAAgB,QACjC3vE,MAAK2vE,YAAY,eAAiB,QAClC3vE,MAAK2vE,YAAY,SAAW,QAC5B3vE,MAAK2vE,YAAY,UAAY,QAC7B3vE,MAAK2vE,YAAY,cAAgB,QACjC3vE,MAAK2vE,YAAY,UAAY,QAC7B3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,WAAa,QAC9B3vE,MAAK2vE,YAAY,OAAS,QAC1B3vE,MAAK2vE,YAAY,YAAc,QAC/B3vE,MAAK2vE,YAAY,WAAa,QAC9B3vE,MAAK2vE,YAAY,WAAa,QAC9B3vE,MAAK2vE,YAAY,WAAa,QAC9B3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,QAAU,QAC3B3vE,MAAK2vE,YAAY,iBAAmB,QACpC3vE,MAAK2vE,YAAY,mBAAqB,QACtC3vE,MAAK2vE,YAAY,UAAY,OAC7B3vE,MAAK2vE,YAAY,eAAiB,OAClC3vE,MAAK2vE,YAAY,gBAAkB,OACnC3vE,MAAK2vE,YAAY,cAAgB,OACjC3vE,MAAK2vE,YAAY,UAAY,OAC7B3vE,MAAK2vE,YAAY,cAAgB,OACjC3vE,MAAK2vE,YAAY,cAAgB,QACjC3vE,MAAK2vE,YAAY,gBAAkB,QACnC3vE,MAAK2vE,YAAY,UAAY,QAC7B3vE,MAAK2vE,YAAY,UAAY,QAC7B3vE,MAAK2vE,YAAY,QAAU,QAC3B3vE,MAAK2vE,YAAY,WAAa,QAC9B3vE,MAAK2vE,YAAY,YAAc,QAC/B3vE,MAAK2vE,YAAY,cAAgB,QACjC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,YAAc,QAC/B3vE,MAAK2vE,YAAY,wBAA0B,QAC3C3vE,MAAK2vE,YAAY,gBAAkB,QACnC3vE,MAAK2vE,YAAY,YAAc,QAC/B3vE,MAAK2vE,YAAY,eAAiB,QAClC3vE,MAAK2vE,YAAY,SAAW,QAC5B3vE,MAAK2vE,YAAY,eAAiB,QAClC3vE,MAAK2vE,YAAY,SAAW,QAC5B3vE,MAAK2vE,YAAY,WAAa,QAC9B3vE,MAAK2vE,YAAY,gBAAkB,QACnC3vE,MAAK2vE,YAAY,UAAY,QAC7B3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,cAAgB,QACjC3vE,MAAK2vE,YAAY,SAAW,QAC5B3vE,MAAK2vE,YAAY,YAAc,QAC/B3vE,MAAK2vE,YAAY,iBAAmB,QACpC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,QAAU,QAC3B3vE,MAAK2vE,YAAY,SAAW,QAC5B3vE,MAAK2vE,YAAY,cAAgB,QACjC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,aAAe,QAChC3vE,MAAK2vE,YAAY,UAAY,QAC7B3vE,MAAK2vE,YAAY,YAAc,QAC/B3vE,MAAK2vE,YAAY,QAAU,OAC3B3vE,MAAK2vE,YAAY,kBAAoB,OACrC3vE,MAAK2vE,YAAY,aAAe,OAChC3vE,MAAK2vE,YAAY,WAAa,OAC9B3vE,MAAK2vE,YAAY,iBAAmB,OACpC3vE,MAAK2vE,YAAY,SAAW,CAC5B3vE,MAAK2vE,YAAY,eAAiB,WAGnC,GAAI3vE,KAAK2vE,YAAYv1C,IAAS,KAC7B,MAAOp6B,MAAK2vE,YAAYv1C,EAEzB,IAAeA,EAAMl9B,QAAU,GAAM8C,KAAKsvE,MAAMl1C,GAC/C,MAAOw1C,UAAS,KAAOx1C,GAGzB,MAAO,MAGM+0C,GAAA3nC,MAAd,SAAoBpN,GAEnB,GAAIsmB,GAAyB1gD,KAAKyvE,SAASr1C,EAE3C,IAAIsmB,GAAU,KACb,KAAM,IAAId,GAAU,wBAA0BxlB,EAE/C,OAAOsmB,GAGMyuB,GAAAU,SAAd,SAAuBzhE,GAEtB,GAAIpO,KAAK8vE,YAAY1hE,GACpB,MAAOA,EAER,IAAIsyC,GAAa1gD,KAAK+vE,SAAS3hE,EAE/B,IAAIsyC,GAAU,KACb,MAAOA,EAER,KACCA,EAASsvB,OAAO5hE,EAChBpO,MAAK+vE,SAAS3hE,GAAQsyC,CACtB,OAAOA,GACN,MAAOvkD,IAGT6D,KAAK8vE,YAAY1hE,GAAQ,IAEzB,OAAOA,GAGM+gE,GAAAnf,QAAd,SAAsB51B,GAErB,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOp6B,KAAK6vE,SAASz1C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOj+B,GACRi+B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgBgwB,GACnB,MAAOhwB,EAER,IAAIA,YAAgB6oB,GACnB7oB,EAA0BA,EAAM41B,OAEjC,MAAM,IAAIpQ,GAAU,gCAAkCxlB,GAGzC+0C,GAAAc,cAAd,SAA4B71C,GAE3B,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOp6B,KAAK6vE,SAASz1C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOj+B,GACRi+B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgB6oB,GACnB,MAAO7oB,EAER,KACC,GAAI81C,GAAcf,EAAKnf,QAAQ51B,EAC/B,OAAO,IAAI6oB,GAAgBitB,GAC1B,MAAO/zE,IAGT,KAAM,IAAIyjD,GAAU,kCAAoCxlB,GAvS1C+0C,GAAAI,UAAmB,wBAEnBJ,GAAAW,YAAqB,GAAInvE,OACzBwuE,GAAAY,SAAkB,GAAIpvE,OAsStC,OAAAwuE,KAEc/xE,GAAAJ,QAALmyE,IrIw0mBN1kB,gCAAgCrpD,UAAU+uE,kCAAkC/uE,UAAUu+C,sCAAsC,sCAAsCiF,8CAA8C,gDAAgD7/C,6CAA6C,SAAS7I,EAAQkB,EAAOJ,GsIhonBxU,GAAOiqE,GAAgB/qE,EAAa,8CAIpC,IAAOyF,GAAgBzF,EAAa,8CACpC,IAAOwF,GAAgBxF,EAAa,8CACpC,IAAOk0E,GAAgBl0E,EAAa,8CACpC,IAAOmgB,GAAengB,EAAa,6CAEnC,IAAO+J,GAAQ/J,EAAe,gCAC9B,IAAOwJ,GAAGxJ,EAAgB,2BAC1B,IAAO0J,GAAM1J,EAAe,8BAK5B,IAAM2F,GAAgB,WAAtB,QAAMA,MAUSA,EAAA2tB,oBAAd,SAAkC6gD,EAAkCC,EAAqCC,EAAyB/tE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/I,GAAIO,GAAsB0sE,EAAgBxvE,IAAI2B,EAAOY,EACrD,IAAIe,GAAyBmsE,EAAmBzvE,IAAIyvE,EAAmB9tE,MAEvE,IAAI+tE,GAAU,KACbA,EAAS,GAAIH,GAAiB5tE,EAAQY,OAClC,IAAImtE,EAAO/tE,MAAQA,EAAQY,EAC/BmtE,EAAO/tE,MAAQA,EAAQY,CAExB,IAAIotE,GAAkBH,EAAgB9iD,UACtC,IAAIkjD,GAAqBH,EAAmB/iD,UAE5C,IAAImjD,GAA2BH,EAAO1vE,IAAI2B,EAAOY,EAGjDZ,IAASguE,CAET,IAAI7zE,GAAW,CACf,IAAI8a,GAAW,CACf,IAAImF,EAEJ,IAAI+zD,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIp/C,GAAWC,EAAWC,CAC1B,IAAItyB,EAEJ,OAAOtD,EAAI6F,EAAO,CACjBoa,EAAQjZ,EAAQhH,KAAK8zE,CACrBE,GAAKxsE,EAAUyY,EACfk0D,GAAK3sE,EAAUyY,EAAQ,EACvBq0D,GAAK9sE,EAAUyY,EAAQ,EACvBA,GAAQjZ,EAAQhH,KAAK8zE,CACrBG,GAAKzsE,EAAUyY,EACfm0D,GAAK5sE,EAAUyY,EAAQ,EACvBs0D,GAAK/sE,EAAUyY,EAAQ,EACvBA,GAAQjZ,EAAQhH,KAAK8zE,CACrBI,GAAK1sE,EAAUyY,EACfo0D,GAAK7sE,EAAUyY,EAAQ,EACvBu0D,GAAKhtE,EAAUyY,EAAQ,EACvBw0D,GAAMP,EAAKF,CACXU,GAAML,EAAKF,CACXQ,GAAMH,EAAKF,CACXM,GAAMX,EAAKD,CACXa,GAAMT,EAAKD,CACXW,GAAMP,EAAKD,CACX5+C,GAAKi/C,EAAIE,EAAMH,EAAII,CACnBn/C,GAAK8+C,EAAIK,EAAMH,EAAIC,CACnBh/C,GAAK8+C,EAAIE,EAAMH,EAAII,CACnBvxE,GAAI+c,KAAK0P,KAAK2F,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAGjCm+C,GAAYj5D,KAAO4a,CACnBq+C,GAAYj5D,KAAO6a,CACnBo+C,GAAYj5D,KAAO8a,CACnBm+C,GAAYj5D,KAAOxX,EAGpBswE,EAAOjtE,IAAIotE,EAAattE,EAExB,OAAOmtE,GAGM1uE,GAAAwsB,gBAAd,SAA8BgiD,EAAkCqB,EAAuCnB,EAAyBxuE,GAE/H,GAAI4B,GAAsB0sE,EAAgBxvE,IAAIwvE,EAAgB7tE,MAC9D,IAAIkuE,GAA2BgB,EAAqB7wE,IAAI6wE,EAAqBlvE,MAE7E,IAAI+tE,GAAU,KACbA,EAAS,GAAI7uE,GAAiBK,EAE/B,IAAIyuE,GAAkBH,EAAgB9iD,UACtC,IAAIokD,GAAmBpB,EAAOhjD,UAE9B,IAAI0B,GAAuBshD,EAAO1vE,IAAI0vE,EAAO/tE,MAE7C,IAAI7F,GAAW,CACf,IAAIsQ,GAAasjE,EAAO/tE,MAAMmvE,CAG9B,OAAOh1E,EAAIsQ,EAAK,CACfgiB,EAAQtyB,KAAO,CACfsyB,GAAQtyB,KAAO,CACfsyB,GAAQtyB,KAAO,EAGhBA,EAAI,CACJsQ,GAAMojE,EAAgB7tE,MAAMguE,CAC5B,IAAI5zD,EACJ,IAAIg1D,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAGhB,OAAOn1E,EAAIsQ,EAAK,CACf2P,EAAQjZ,EAAQhH,KAAKg1E,CACrB1iD,GAAQrS,IAAU8zD,EAAYkB,EAC9B3iD,GAAQrS,EAAQ,IAAM8zD,EAAYmB,EAClC5iD,GAAQrS,EAAQ,IAAM8zD,EAAYoB,EAClCl1D,GAAQjZ,EAAQhH,KAAKg1E,CACrB1iD,GAAQrS,IAAU8zD,EAAYkB,EAC9B3iD,GAAQrS,EAAQ,IAAM8zD,EAAYmB,EAClC5iD,GAAQrS,EAAQ,IAAM8zD,EAAYoB,EAClCl1D,GAAQjZ,EAAQhH,KAAKg1E,CACrB1iD,GAAQrS,IAAU8zD,EAAYkB,EAC9B3iD,GAAQrS,EAAQ,IAAM8zD,EAAYmB,EAClC5iD,GAAQrS,EAAQ,IAAM8zD,EAAYoB,EAClCF,IAAM,CACNC,IAAM,CACNC,IAAM,EAGPn1E,EAAI,CACJsQ,GAAMsjE,EAAO/tE,MAAMmvE,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIhyE,EAGJ,OAAOtD,EAAIsQ,EAAK,CACf8kE,EAAK9iD,EAAQtyB,EACbq1E,GAAK/iD,EAAQtyB,EAAI,EACjBs1E,GAAKhjD,EAAQtyB,EAAI,EACjBsD,GAAI,EAAI+c,KAAK0P,KAAKqlD,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErChjD,GAAQtyB,KAAOo1E,EAAG9xE,CAClBgvB,GAAQtyB,KAAOq1E,EAAG/xE,CAClBgvB,GAAQtyB,KAAOs1E,EAAGhyE,EAGnBswE,EAAOjtE,IAAI2rB,EAEX,OAAOshD,GAGM1uE,GAAA0tB,qBAAd,SAAmC8gD,EAAkCC,EAAqC4B,EAA+B3B,EAAyB/tE,EAAcY,EAAmB+uE,GAAnB,GAAA/uE,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAA+uE,QAAA,GAA8B,CAA9BA,EAAA,MAElM,GAAIxuE,GAAsB0sE,EAAgBxvE,IAAI2B,EAAOY,EACrD,IAAIe,GAAyBmsE,EAAmBzvE,IAAIyvE,EAAmB9tE,MACvE,IAAIqB,GAAmBquE,EAAarxE,IAAIqxE,EAAa1vE,MAErD,IAAI+tE,GAAU,KACbA,EAAS,GAAI7uE,GAAiBc,EAAQY,OAClC,IAAImtE,EAAO/tE,MAAQA,EAAQY,EAC/BmtE,EAAO/tE,MAAQA,EAAQY,CAExB,IAAIqtE,GAAqBH,EAAmB/iD,UAC5C,IAAIkuC,GAAeyW,EAAa3kD,UAChC,IAAIijD,GAAkBH,EAAgB9iD,UAEtC,IAAI6kD,GAA4B7B,EAAO1vE,IAAI2B,EAAOY,EAElD,IAAIzG,GAAW,CACf,IAAIo6B,EACJ,IAAIC,EACJ,IAAIq7C,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,CAC1B,IAAIzB,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIp/C,GAAWC,EAAWC,CAG1B/vB,IAASguE,CAET,OAAO7zE,EAAI6F,EAAO,CACjBu0B,EAASpzB,EAAQhH,EACjBq6B,GAASrzB,EAAQhH,EAAI,EACrB01E,GAAS1uE,EAAQhH,EAAI,EAErB41E,GAAK1uE,EAAIkzB,EAAO0kC,EAAQ,EACxB+W,GAAM3uE,EAAImzB,EAAOykC,EAAQ,GAAK8W,CAC9BE,GAAM5uE,EAAIwuE,EAAO5W,EAAQ,GAAK8W,CAE9BD,GAAKv7C,EAAO05C,CACZkC,GAAKxuE,EAAUmuE,EACfM,GAAKzuE,EAAUmuE,EAAK,EACpBO,GAAK1uE,EAAUmuE,EAAK,EACpBA,GAAKt7C,EAAOy5C,CACZW,GAAMjtE,EAAUmuE,GAAMK,CACtBtB,GAAMltE,EAAUmuE,EAAK,GAAKM,CAC1BtB,GAAMntE,EAAUmuE,EAAK,GAAKO,CAC1BP,GAAKD,EAAO5B,CACZc,GAAMptE,EAAUmuE,GAAMK,CACtBnB,GAAMrtE,EAAUmuE,EAAK,GAAKM,CAC1BnB,GAAMttE,EAAUmuE,EAAK,GAAKO,CAE1BxgD,GAAKogD,EAAIrB,EAAMoB,EAAIjB,CACnBj/C,GAAKmgD,EAAIpB,EAAMmB,EAAIhB,CACnBj/C,GAAKkgD,EAAInB,EAAMkB,EAAIf,CACnBiB,GAAQ,EAAE11D,KAAK0P,KAAK2F,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAEvC6/C,GAAaz1E,KAAO+1E,EAAMrgD,CAC1B+/C,GAAaz1E,KAAO+1E,EAAMpgD,CAC1B8/C,GAAaz1E,KAAO+1E,EAAMngD,EAG3Bg+C,EAAOjtE,IAAI8uE,EAAchvE,EAEzB,OAAOmtE,GAGM1uE,GAAAysB,iBAAd,SAA+B+hD,EAAkCyC,EAAwCpB,EAAuCnB,EAAyBxuE,GAExK,GAAI4B,GAAsB0sE,EAAgBxvE,IAAIwvE,EAAgB7tE,MAC9D,IAAI4vE,GAA4BU,EAAsBjyE,IAAIiyE,EAAsBtwE,MAChF,IAAIkuE,GAA2BgB,EAAqB7wE,IAAI6wE,EAAqBlvE,MAE7E,IAAI+tE,GAAU,KACbA,EAAS,GAAI7uE,GAAiBK,EAE/B,IAAIyuE,GAAkBH,EAAgB9iD,UACtC,IAAIokD,GAAmBpB,EAAOhjD,UAE9B,IAAI2B,GAAwBqhD,EAAO1vE,IAAI0vE,EAAO/tE,MAE9C,IAAI7F,GAAW,CACf,IAAIsQ,GAAasjE,EAAO/tE,MAAMmvE,CAG9B,OAAOh1E,EAAIsQ,EAAK,CACfiiB,EAASvyB,KAAO,CAChBuyB,GAASvyB,KAAO,CAChBuyB,GAASvyB,KAAO,EAGjB,GAAIo2E,EACJ,IAAIn2D,EACJ,IAAIg1D,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIkB,GAAY,CAEhBr2E,GAAI,CACJsQ,GAAMojE,EAAgB7tE,MAAMguE,CAG5B,OAAO7zE,EAAIsQ,EAAK,CACf8lE,EAASrC,EAAYsC,EACrBp2D,GAAQjZ,EAAQhH,KAAKg1E,CACrBziD,GAAStS,MAAYw1D,EAAaR,GAAImB,CACtC7jD,GAAStS,MAAYw1D,EAAaP,GAAIkB,CACtC7jD,GAAStS,IAAUw1D,EAAaN,GAAIiB,CACpCn2D,GAAQjZ,EAAQhH,KAAKg1E,CACrBziD,GAAStS,MAAYw1D,EAAaR,GAAImB,CACtC7jD,GAAStS,MAAYw1D,EAAaP,GAAIkB,CACtC7jD,GAAStS,IAAUw1D,EAAaN,GAAIiB,CACpCn2D,GAAQjZ,EAAQhH,KAAKg1E,CACrBziD,GAAStS,MAAYw1D,EAAaR,GAAImB,CACtC7jD,GAAStS,MAAYw1D,EAAaP,GAAIkB,CACtC7jD,GAAStS,IAAUw1D,EAAaN,GAAIiB,CACpCnB,IAAM,CACNC,IAAM,CACNC,IAAM,CACNkB,IAAM,EAGPr2E,EAAI,CACJsQ,GAAMsjE,EAAO/tE,MAAMmvE,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIhyE,EAGJ,OAAOtD,EAAIsQ,EAAK,CACf8kE,EAAK7iD,EAASvyB,EACdq1E,GAAK9iD,EAASvyB,EAAI,EAClBs1E,GAAK/iD,EAASvyB,EAAI,EAClBsD,GAAI,EAAI+c,KAAK0P,KAAKqlD,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErC/iD,GAASvyB,KAAOo1E,EAAG9xE,CACnBivB,GAASvyB,KAAOq1E,EAAG/xE,CACnBivB,GAASvyB,KAAOs1E,EAAGhyE,EAGpBswE,EAAOjtE,IAAI4rB,EAEX,OAAOqhD,GAIM1uE,GAAA0sB,YAAd,SAA0B8hD,EAAkCE,EAAyBxuE,EAAqCS,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEvI,GAAImtE,GAAU,KACbA,EAAS,GAAI5uE,GAAiBI,EAE/B,IAAI4vE,GAAmBpB,EAAOhjD,UAE9B,IAAI1pB,GAAmB0sE,EAAO1vE,IAAI2B,EAAOY,EAEzC,IAAIzG,GAAW,CACf,IAAI8a,GAAW,CACf,IAAIxK,GAAazK,EAAMmvE,CAEvB,OAAOh1E,EAAIsQ,EAAK,CACfpJ,EAAIlH,KAAO8a,EAAE,EACb5T,GAAIlH,KAAO,GAAO8a,EAAI,EAEtB,MAAMA,GAAK,EACVA,EAAI,EAGN84D,EAAOjtE,IAAIO,EAAKT,EAEhB,OAAOmtE,GAGM1uE,GAAAub,eAAd,SAA6BizD,EAAkCE,EAAwBxuE,EAAqCS,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzI,GAAImtE,GAAU,KACbA,EAAS,GAAIl0D,GAAgBta,EAE9B,IAAI6a,GAAe,CACnB,IAAIM,GAAoB,GAAIC,YAAW3a,EAAM,EAE7C,OAAOoa,EAAQpa,EAAM,EAAG,CACvB,GAAIoa,EAAM,EAAI,EAAG,CAChBM,EAAON,GAAS,GAChBM,GAAON,EAAQ,GAAK,GACpBM,GAAON,EAAQ,GAAK,GACpBM,GAAON,EAAQ,GAAK,QACd,CACNM,EAAON,GAAS,GAChBM,GAAON,EAAQ,GAAK,GACpBM,GAAON,EAAQ,GAAK,GACpBM,GAAON,EAAQ,GAAK,IAGrBA,GAAS,EAGV2zD,EAAOjtE,IAAI4Z,EAAQ9Z,EAEnB,OAAOmtE,GAGM1uE,GAAAoC,SAAd,SAAuBF,EAAeC,EAAeusE,EAAuB/tE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzF,GAAImtE,EAAO/tE,MAAQA,EAAQY,EAC1BmtE,EAAO/tE,MAAQA,EAAQY,CAExB,IAAIuuE,GAAmBpB,EAAOhjD,UAE9B,IAAI1pB,GAAsB0sE,EAAO1vE,IAAI2B,EAAOY,EAE5C,IAAIzG,GAAW,CACf,IAAI8a,GAAW,CACf,IAAIxK,GAAazK,EAAMmvE,CAEvB,OAAOh1E,EAAIsQ,EAAK,CACfpJ,EAAIlH,MAAQoH,CACZF,GAAIlH,MAAQqH,EAGbusE,EAAOjtE,IAAIO,EAAKT,GAGHvB,GAAAqC,MAAd,SAAoBA,EAAcqsE,EAAyB/tE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExE,GAAImtE,EAAO/tE,MAAQA,EAAQY,EAC1BmtE,EAAO/tE,MAAQA,EAAQY,CAExB,IAAIuuE,GAAmBpB,EAAOhjD,UAE9B,IAAIppB,GAAyBosE,EAAO1vE,IAAI2B,EAAOY,EAE/C,IAAIzG,GAAW,CACf,IAAI8a,GAAW,CACf,IAAIxK,GAAazK,EAAMmvE,CAEvB,OAAOh1E,EAAIsQ,EAAK,CACf9I,EAAUxH,MAAQuH,CAClBC,GAAUxH,MAAQuH,CAClBC,GAAUxH,MAAQuH,EAGnBqsE,EAAOjtE,IAAIa,EAAWf,GAGTvB,GAAAuC,oBAAd,SAAkCC,EAAoBisE,EAAqC2C,EAAmCC,EAAoC1wE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/K,GAAIe,GAAyBmsE,EAAmBzvE,IAAI2B,EAAOY,EAC3D,IAAIqtE,GAAqBH,EAAmB/iD,UAE5C,IAAI0B,EACJ,IAAIkkD,EAEJ,IAAIF,EAAkB,CACrBhkD,EAAUgkD,EAAiBpyE,IAAI2B,EAAOY,EACtC+vE,GAAYF,EAAiB1lD,WAG9B,GAAI2B,EACJ,IAAIkkD,EAEJ,IAAIF,EAAmB,CACtBhkD,EAAWgkD,EAAkBryE,IAAI2B,EAAOY,EACxCgwE,GAAaF,EAAkB3lD,WAGhC,GAAI5wB,EACJ,IAAIk9D,EACJ,IAAIC,EACJ,IAAIuZ,GAAkB,GAAIptE,EAC1B,IAAIqtE,EAEJ,IAAIL,GAAoBC,EAAmB,CAC1CI,EAAejvE,EAAUX,OACzB4vE,GAAa1oE,QACb0oE,GAAaC,YAGd,GAAIC,GAAa,CACjB,IAAIC,GAAa,CACjB,IAAIC,GAAa,CAEjB,KAAK/2E,EAAI,EAAGA,EAAI6F,IAAS7F,EAAG,CAE3Bk9D,EAAK2Z,EAAM,CACX1Z,GAAK0Z,EAAM,CACXH,GAAOxpE,EAAI1F,EAAUqvE,EACrBH,GAAOtpE,EAAI5F,EAAU01D,EACrBwZ,GAAOppE,EAAI9F,EAAU21D,EACrBuZ,GAAShvE,EAAUoI,gBAAgB4mE,EACnClvE,GAAUqvE,GAAOH,EAAOxpE,CACxB1F,GAAU01D,GAAMwZ,EAAOtpE,CACvB5F,GAAU21D,GAAMuZ,EAAOppE,CACvBupE,IAAO/C,CAEP,IAAIxhD,EAAS,CAEZ4qC,EAAK4Z,EAAM,CACX3Z,GAAK2Z,EAAM,CACXJ,GAAOxpE,EAAIolB,EAAQwkD,EACnBJ,GAAOtpE,EAAIklB,EAAQ4qC,EACnBwZ,GAAOppE,EAAIglB,EAAQ6qC,EACnBuZ,GAASC,EAAattC,qBAAqBqtC,EAC3CA,GAAO5gE,WACPwc,GAAQwkD,GAAOJ,EAAOxpE,CACtBolB,GAAQ4qC,GAAMwZ,EAAOtpE,CACrBklB,GAAQ6qC,GAAMuZ,EAAOppE,CACrBwpE,IAAON,EAGR,GAAIjkD,EAAU,CAEb2qC,EAAK6Z,EAAM,CACX5Z,GAAK4Z,EAAM,CACXL,GAAOxpE,EAAIqlB,EAASwkD,EACpBL,GAAOtpE,EAAImlB,EAAS2qC,EACpBwZ,GAAOppE,EAAIilB,EAAS4qC,EACpBuZ,GAASC,EAAattC,qBAAqBqtC,EAC3CA,GAAO5gE,WACPyc,GAASwkD,GAAOL,EAAOxpE,CACvBqlB,GAAS2qC,GAAMwZ,EAAOtpE,CACtBmlB,GAAS4qC,GAAMuZ,EAAOppE,CACtBypE,IAAON,GAIT9C,EAAmBhtE,IAAIa,EAAWf,EAElC,IAAI6vE,EACHA,EAAiB3vE,IAAI2rB,EAAS7rB,EAE/B,IAAI8vE,EACHA,EAAkB5vE,IAAI4rB,EAAU9rB,GAKpBvB,GAAA8xE,cAAd,SAA4BtD,EAAgCxzB,EAAoB+2B,EAA6BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAE5G,GAAI32B,GAA0BmzB,EAAgBnzB,MAC9C,IAAIwe,GAAoB2U,EAAgBnzE,MAGxC02E,GAAc12E,OAAS,CAGvB,IAAIw+D,EAAa75D,EAAiBiyE,eAAiBj3B,EAAch7C,EAAiBkyE,YACjF,MAAO72B,EAER,IAAIvgD,EACJ,IAAIgH,GAAoC0sE,EAAgBxvE,IAAIwvE,EAAgB7tE,MAAOqxE,EACnF,IAAIG,GAA6B,GAAI9xE,MACrC,IAAI+xE,GAA0BpyE,EAAiBqyE,UAG/CD,GAAU/2E,OAASw+D,CACnB,KAAK/+D,EAAI,EAAGA,EAAI++D,EAAY/+D,IAC3Bs3E,EAAUt3E,IAAM,CAEjB,IAAIw3E,EACJ,IAAIC,EACJ,IAAIx3D,GAAe,CACnB,IAAIy3D,GAAsBR,EAAYxD,EAAgB9iD,UAItD5wB,GAAI,CACJ,OAAOA,EAAI++D,EAAa2Y,GAAgB13E,EAAI,EAAIkF,EAAiBiyE,eAAiBl3D,EAAQ,EAAI/a,EAAiBkyE,YAAa,CAC3HI,EAAgBxwE,EAAQhH,EAExB,IAAIs3E,EAAUE,IAAkB,EAAG,CAClCC,EAAaH,EAAUE,OACjB,CAGNC,EAAax3D,GACbq3D,GAAUE,GAAiBC,CAC3BR,GAAcQ,GAAcD,EAK7BH,EAAar3E,KAAOy3E,EAGrBl3B,EAAS,GAAI+pB,GAAiBoJ,EAAgB91B,KAAK81B,EAAgB9iD,WAAYymD,EAAa92E,OAAOmzE,EAAgB9iD,WAEnH8iD,GAAkBA,EAAgB3sE,MAAMw5C,EACxCmzB,GAAgB/sE,IAAI0wE,EAEpB,OAAO92B,GAGMr7C,GAAAyyE,eAAd,SAA6BC,EAA+BX,GAE3D,IAAKA,EAAc12E,OAClB,MAAOq3E,EAER,IAAIC,GAAgBD,EAAaC,MAEjC,IAAIhrC,GAAsB+qC,EAAaE,UAEvC,IAAIC,GAAwB,GAAIv3D,YAAWy2D,EAAc12E,OAAOs3E,EAChE,IAAIJ,EACJ,IAAID,EACJ,IAAIx3E,GAAW,CACf,IAAI8a,GAAW,CACf,IAAIxK,GAAa2mE,EAAc12E,MAC/B,KAAKP,EAAI,EAAGA,EAAIsQ,EAAKtQ,IAAK,CACzBy3E,EAAaz3E,EAAE63E,CACfL,GAAgBP,EAAcj3E,GAAG63E,CAEjC,KAAK/8D,EAAI,EAAGA,EAAI+8D,EAAQ/8D,IACvBi9D,EAAWN,EAAa38D,GAAK+xB,EAAS2qC,EAAgB18D,GAGxD88D,EAAe,GAAItN,GAAiBuN,EAAQvnE,EAC5CsnE,GAAaE,WAAaC,CAE1B,OAAOH,GAKM1yE,GAAAmyC,qBAAd,SAAmCnqC,EAAUE,EAAUE,EAAU0qE,EAAiB/Y,GAEjF,GAAI0U,GAAsC1U,EAAiBz3D,SAC3D,IAAIywE,GAAmChZ,EAAiB7e,MACxD,IAAIv6C,GAAeo5D,EAAiB/e,WAEpC,IAAI2e,GAAgB8U,EAAmB/iD,UACvC,IAAIyuC,GAAkB4Y,EAAgBrnD,UAEtC,IAAIppB,GAAyBmsE,EAAmBzvE,IAAI2B,EACpD,IAAIu6C,GAAsB63B,EAAgB/zE,IAAI2B,EAE9C,IAAIy5D,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAItxC,EACJ,IAAIC,EACJ,IAAIsxC,EACJ,IAAIC,EACJ,IAAIhqC,EACJ,IAAIC,EAEJ,IAAI1V,GAAeg/C,EAAiBz5D,kBACpC,IAAGya,IAAU,GAAKA,EAAQpa,EAC1B,CACCqyE,EACA,CACC5Y,EAAMr/C,EAAQ,CACds/C,GAAMt/C,EAAQ,CACdu/C,GAAMv/C,EAAQ,CAEdiO,GAAK1mB,EAAU83D,EAAMT,EACrB1wC,GAAK3mB,EAAU83D,EAAMT,EAAS,EAC9BY,GAAKj4D,EAAU+3D,EAAMV,EACrBa,GAAKl4D,EAAU+3D,EAAMV,EAAS,EAC9BnpC,GAAKluB,EAAUg4D,EAAMX,EACrBlpC,GAAKnuB,EAAUg4D,EAAMX,EAAS,EtIk/mBlB,IsI7+mBRroD,GAAY0X,EAAKhhB,CACrB,IAAIuJ,GAAY0X,EAAK/gB,CtI++mBT,IsI5+mBRgwD,GAAYsC,EAAKvxC,CACrB,IAAIkvC,KAAcoC,EAAKvxC,EtI8+mBX,IsI1+mBR0xC,GAAcppD,EAAK4mD,EAAO3mD,EAAK4mD,CAEnC,IAAIuC,EAAM,EACT,KAAMsY,EAEP1hE,GAAKipD,EAAKvyD,CACVuJ,GAAKipD,EAAKtyD,CACVgwD,GAAKznC,EAAK+pC,CACVrC,KAAO3nC,EAAK+pC,EAEZG,GAAOppD,EAAK4mD,EAAO3mD,EAAK4mD,CAExB,IAAIuC,EAAM,EACT,KAAMsY,EAEP1hE,GAAKkf,EAAKxoB,CACVuJ,GAAKkf,EAAKvoB,CACVgwD,GAAKjvC,EAAKwH,CACV0nC,KAAOnvC,EAAKwH,EAEZkqC,GAAOppD,EAAK4mD,EAAO3mD,EAAK4mD,CAExB,IAAIuC,EAAM,EACT,KAAMsY,EAEP,IAAIvY,GAAgBvf,EAAOkf,EAAMD,EAGjC,IAAIM,GAAU,EAAG,CAEhB,GAAIE,GAAaJ,EAAKvxC,CACtB,IAAI4xC,GAAaJ,EAAKvxC,CACtB,IAAI4xC,GAAarqC,EAAKxH,CACtB,IAAI8xC,GAAarqC,EAAKxH,CACtB,IAAI8xC,GAAa/yD,EAAIghB,CACrB,IAAIgyC,GAAa9yD,EAAI+gB,CAErB,IAAIgyC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI37B,IAAY87B,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIlhB,IAAY4gB,EAAMK,EAAMD,EAAMH,GAAOK,CtIk+mB1B,IsI99mBXC,GAAY,GAAMj8B,EAAI8a,CAC1B,IAAIohB,GAAYphB,CAEhB,IAAI37C,GAAW88D,EAAKA,EAAKC,CAEzB,IAAIjyC,GAAY5mB,EAAU83D,EAAMT,EAAS,EACzC,IAAIv7D,EAAI,GAAK8qB,IAAO,EAAG,CACtB,KAAM8pD,OACA,IAAI50E,EAAI,GAAK8qB,GAAM,EAAG,CAC5B,KAAM8pD,IAGR,MAAO,OAOT,GAAIryE,EAAQ,IAAK,CAChB,GAAIP,GAA6B25D,EAAiB35D,KAClD,IAAI6yE,GAAmB7yE,EAAM/E,OAAQ0+D,EAAiBkZ,UAAalZ,EAAiBkZ,UAAY93D,KAAKia,IAAIja,KAAKkxC,KAAKlxC,KAAK0P,KAAKlqB,IAAS,GACtI,IAAIuyE,GAAqBD,EAAUH,EAAYvnE,KAC/C,IAAI4nE,GAAqBF,EAAUH,EAAYxqE,MAC/C,IAAI8qE,GAAcN,EAAY9qE,CAC9B,IAAIqrE,GAAcP,EAAY5qE,CAE9B,KAAK9H,EAAM/E,OAAQ,CAGlB+E,EAAM/E,OAAS43E,EAAYA,CAE3B,KAAI,GAAIpvD,GAAW,EAAGA,EAAIljB,EAAOkjB,GAAG,EAAG,CACtCu2C,EAAMv2C,EAAI,CACVw2C,GAAMx2C,EAAI,CACVy2C,GAAMz2C,EAAI,CAEVmF,GAAK1mB,EAAU83D,EAAMT,EACrB1wC,GAAK3mB,EAAU83D,EAAMT,EAAS,EAC9BY,GAAKj4D,EAAU+3D,EAAMV,EACrBa,GAAKl4D,EAAU+3D,EAAMV,EAAS,EAC9BnpC,GAAKluB,EAAUg4D,EAAMX,EACrBlpC,GAAKnuB,EAAUg4D,EAAMX,EAAS,EtI09mBf,IsIv9mBX2Z,GAAqBn4D,KAAKC,OAAOD,KAAKia,IAAIpM,EAAIuxC,EAAI/pC,GAAM4iD,GAAMF,EAClE,IAAIK,GAAqBp4D,KAAKC,OAAOD,KAAKia,IAAInM,EAAIuxC,EAAI/pC,GAAM4iD,GAAMF,EAElE,IAAIK,GAAqBr4D,KAAKC,OAAOD,KAAKka,IAAIrM,EAAIuxC,EAAI/pC,GAAM4iD,GAAMF,EAClE,IAAIO,GAAqBt4D,KAAKC,OAAOD,KAAKka,IAAIpM,EAAIuxC,EAAI/pC,GAAM4iD,GAAMF,EAGlE,KAAK,GAAIr4E,GAAWw4E,EAAax4E,GAAK04E,EAAa14E,IAAK,CACvD,IAAK,GAAI8a,GAAW29D,EAAa39D,GAAK69D,EAAa79D,IAAK,CACvD,GAAImF,GAAejgB,EAAI8a,EAAEq9D,CACzB,IAAIS,IAAsBtzE,EAAM2a,KAAW3a,EAAM2a,GAAS,GAAI1a,OAG9DqzE,IAAMjwE,KAAK22D,EAAKC,EAAKC,MAMzB,GAAIqZ,IAAiBx4D,KAAKC,OAAOpT,EAAIorE,GAAMF,EAC3C,IAAIU,IAAiBz4D,KAAKC,OAAOlT,EAAImrE,GAAMF,EAE3C,IAAKQ,GAAU,GAAKA,GAAUV,GAAaW,GAAU,GAAKA,GAAUX,EACnE,MAAO,MAER,IAAIS,IAAsBtzE,EAAMuzE,GAAUC,GAAQX,EAElD,IAAIS,IAAS,KACZ,MAAO,MAER,IAAIG,IAAmBH,GAAMr4E,MAC7B,KAAK,GAAIwoB,GAAW,EAAGA,EAAIgwD,GAAWhwD,GAAK,EAAG,CAC7Cu2C,EAAMsZ,GAAM7vD,EACZw2C,GAAMqZ,GAAM7vD,EAAI,EAChBy2C,GAAMoZ,GAAM7vD,EAAI,EAEhB,IAAGy2C,GAAOv/C,EAAO,QAEjBiO,GAAK1mB,EAAU83D,EAAMT,EACrB1wC,GAAK3mB,EAAU83D,EAAMT,EAAS,EAC9BY,GAAKj4D,EAAU+3D,EAAMV,EACrBa,GAAKl4D,EAAU+3D,EAAMV,EAAS,EAC9BnpC,GAAKluB,EAAUg4D,EAAMX,EACrBlpC,GAAKnuB,EAAUg4D,EAAMX,EAAS,EtI+8mBlB,IsI58mBRroD,GAAY0X,EAAKhhB,CACrB,IAAIuJ,GAAY0X,EAAK/gB,CtI88mBT,IsI38mBRgwD,GAAYsC,EAAKvxC,CACrB,IAAIkvC,KAAcoC,EAAKvxC,EAEvB,IAAI0xC,GAAcppD,EAAK4mD,EAAO3mD,EAAK4mD,CAEnC,IAAIuC,EAAM,EACT,QAEDppD,GAAKipD,EAAKvyD,CACVuJ,GAAKipD,EAAKtyD,CACVgwD,GAAKznC,EAAK+pC,CACVrC,KAAO3nC,EAAK+pC,EAEZG,GAAOppD,EAAK4mD,EAAO3mD,EAAK4mD,CAExB,IAAIuC,EAAM,EACT,QAEDppD,GAAKkf,EAAKxoB,CACVuJ,GAAKkf,EAAKvoB,CACVgwD,GAAKjvC,EAAKwH,CACV0nC,KAAOnvC,EAAKwH,EAEZkqC,GAAOppD,EAAK4mD,EAAO3mD,EAAK4mD,CAExB,IAAIuC,EAAM,EACT,QAED,IAAID,GAAgBvf,EAAOkf,EAAMD,EAGjC,IAAIM,GAAU,EAAG,CAEhB,GAAIE,GAAaJ,EAAKvxC,CACtB,IAAI4xC,GAAaJ,EAAKvxC,CACtB,IAAI4xC,GAAarqC,EAAKxH,CACtB,IAAI8xC,GAAarqC,EAAKxH,CACtB,IAAI8xC,GAAa/yD,EAAIghB,CACrB,IAAIgyC,GAAa9yD,EAAI+gB,CAErB,IAAIgyC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI37B,IAAY87B,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIlhB,IAAY4gB,EAAMK,EAAMD,EAAMH,GAAOK,CtIk8mB1B,IsI97mBXC,GAAY,GAAMj8B,EAAI8a,CAC1B,IAAIohB,GAAYphB,CAEhB,IAAI37C,GAAW88D,EAAKA,EAAKC,CACzB,IAAIjyC,GAAY5mB,EAAU83D,EAAMT,EAAS,EAEzC,IAAIv7D,EAAI,GAAK8qB,IAAO,EACnB,aACI,IAAI9qB,EAAI,GAAK8qB,GAAM,EACvB,SAEF6wC,EAAiBz5D,mBAAqBg6D,CACtC,OAAO,MAER,MAAO,OAIR,IAAI,GAAIz2C,GAAW,EAAGA,EAAIljB,EAAOkjB,GAAK,EAAG,CACxCu2C,EAAMv2C,EAAI,CACVw2C,GAAMx2C,EAAI,CACVy2C,GAAMz2C,EAAI,CAEV,IAAGy2C,GAAOv/C,EAAO,QAEjBiO,GAAK1mB,EAAU83D,EAAMT,EACrB1wC,GAAK3mB,EAAU83D,EAAMT,EAAS,EAC9BY,GAAKj4D,EAAU+3D,EAAMV,EACrBa,GAAKl4D,EAAU+3D,EAAMV,EAAS,EAC9BnpC,GAAKluB,EAAUg4D,EAAMX,EACrBlpC,GAAKnuB,EAAUg4D,EAAMX,EAAS,EtI47mBrB,IsIv7mBLroD,GAAY0X,EAAKhhB,CACrB,IAAIuJ,GAAY0X,EAAK/gB,CtIy7mBZ,IsIt7mBLgwD,GAAYsC,EAAKvxC,CACrB,IAAIkvC,KAAcoC,EAAKvxC,EtIw7mBd,IsIp7mBL0xC,GAAcppD,EAAK4mD,EAAO3mD,EAAK4mD,CAEnC,IAAIuC,EAAM,EACT,QAEDppD,GAAKipD,EAAKvyD,CACVuJ,GAAKipD,EAAKtyD,CACVgwD,GAAKznC,EAAK+pC,CACVrC,KAAO3nC,EAAK+pC,EAEZG,GAAOppD,EAAK4mD,EAAO3mD,EAAK4mD,CAExB,IAAIuC,EAAM,EACT,QAEDppD,GAAKkf,EAAKxoB,CACVuJ,GAAKkf,EAAKvoB,CACVgwD,GAAKjvC,EAAKwH,CACV0nC,KAAOnvC,EAAKwH,EAEZkqC,GAAOppD,EAAK4mD,EAAO3mD,EAAK4mD,CAExB,IAAIuC,EAAM,EACT,QAED,IAAID,GAAgBvf,EAAOkf,EAAMD,EAGjC,IAAIM,GAAU,EAAG,CAEhB,GAAIE,GAAaJ,EAAKvxC,CACtB,IAAI4xC,GAAaJ,EAAKvxC,CACtB,IAAI4xC,GAAarqC,EAAKxH,CACtB,IAAI8xC,GAAarqC,EAAKxH,CACtB,IAAI8xC,GAAa/yD,EAAIghB,CACrB,IAAIgyC,GAAa9yD,EAAI+gB,CAErB,IAAIgyC,GAAaN,EAAMG,EAAMD,EAAMD,CACnC,IAAI37B,IAAY87B,EAAMD,EAAMD,EAAMG,GAAOC,CACzC,IAAIlhB,IAAY4gB,EAAMK,EAAMD,EAAMH,GAAOK,CtI46mB7B,IsIx6mBRC,GAAY,GAAMj8B,EAAI8a,CAC1B,IAAIohB,GAAYphB,CAEhB,IAAI37C,GAAW88D,EAAKA,EAAKC,CAEzB,IAAIjyC,GAAY5mB,EAAU83D,EAAMT,EAAS,EACzC,IAAIv7D,EAAI,GAAK8qB,IAAO,EAAG,CACtB,aACM,IAAI9qB,EAAI,GAAK8qB,GAAM,EAAG,CAC5B,UAGF6wC,EAAiBz5D,mBAAqBg6D,CACtC,OAAO,MAER,MAAO,OAGMt6D,GAAAkB,0BAAd,SAAwCutE,EAAqCC,EAAY/tE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEtG,GAAIe,GAAyBmsE,EAAmBzvE,IAAI2B,EAAOY,EAC3D,IAAIo4D,GAAgB8U,EAAmB/iD,UACvC,IAAIooD,GAAiBna,EAAO,CAE5B,IAAI+U,GAAU,KACbA,EAAS,GAAI7qE,EAEd,IAAIyxB,GAAMC,EAAME,EAAMC,EAAMp3B,CAE5Bm3B,GAAOi5C,EAAOnjE,OAAS+pB,EAAOo5C,EAAO1mE,EACrC0tB,GAAOg5C,EAAOpmE,QAAUitB,EAAOm5C,EAAOxmE,EAEtC,IAAIkD,GAAa9I,EAAUjH,MAC3B,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,GAAK6+D,EAAQ,CAC5Cr7D,EAAIgE,EAAUxH,EACd,IAAIwD,EAAIg3B,EACPA,EAAOh3B,MACH,IAAIA,EAAIm3B,EACZA,EAAOn3B,CAERA,GAAIgE,EAAUxH,EAAI,EAElB,IAAIwD,EAAIi3B,EACPA,EAAOj3B,MACH,IAAIA,EAAIo3B,EACZA,EAAOp3B,EAGTowE,EAAOnjE,MAAQkqB,GAAQi5C,EAAO1mE,EAAIstB,EAClCo5C,GAAOpmE,OAASotB,GAAQg5C,EAAOxmE,EAAIqtB,EAEnC,OAAOm5C,GAIM1uE,GAAAssB,6BAAd,SAA2CmiD,EAAqCC,EAAY/tE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzG,GAAIe,GAAyBmsE,EAAmBzvE,IAAI2B,EAAOY,EAC3D,IAAIo4D,GAAgB8U,EAAmB/iD,UAEvC,IAAIgjD,GAAU,KACbA,EAAS,GAAI7qE,EAEd,IAAIiK,EACJ,IAAIwnB,GAAco5C,EAAO1mE,CACzB,IAAIutB,GAAcm5C,EAAOxmE,CACzB,IAAIstB,GAAck5C,EAAOtmE,CACzB,IAAIqtB,GAAci5C,EAAOnjE,MAAQ+pB,CACjC,IAAII,GAAcg5C,EAAOpmE,OAASitB,CAClC,IAAII,GAAc+4C,EAAOhnE,MAAQ8tB,CAEjC,IAAIpqB,GAAa9I,EAAUjH,MAC3B,KAAK,GAAIP,GAAW,EAAGA,EAAIsQ,EAAKtQ,GAAK6+D,EAAQ,CAC5C7rD,EAAMxL,EAAUxH,EAChB,IAAIgT,EAAMwnB,EACTA,EAAOxnB,MACH,IAAIA,EAAM2nB,EACdA,EAAO3nB,CAERA,GAAMxL,EAAUxH,EAAI,EAEpB,IAAIgT,EAAMynB,EACTA,EAAOznB,MACH,IAAIA,EAAM4nB,EACdA,EAAO5nB,CAERA,GAAMxL,EAAUxH,EAAI,EAEpB,IAAIgT,EAAM0nB,EACTA,EAAO1nB,MACH,IAAIA,EAAM6nB,EACdA,EAAO7nB,EAGT4gE,EAAOnjE,MAAQkqB,GAAQi5C,EAAO1mE,EAAIstB,EAClCo5C,GAAOpmE,OAASotB,GAAQg5C,EAAOxmE,EAAIqtB,EACnCm5C,GAAOhnE,MAAQiuB,GAAQ+4C,EAAOtmE,EAAIotB,EAElC,OAAOk5C,GAGM1uE,GAAAusB,gCAAd,SAA8CkiD,EAAqCrtE,EAAiBstE,EAAe/tE,EAAcY,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEhI,GAAIe,GAAyBmsE,EAAmBzvE,IAAI2B,EAAOY,EAC3D,IAAIo4D,GAAgB8U,EAAmB/iD,UAEvC,IAAIgjD,GAAU,KACbA,EAAS,GAAI3qE,EAEd,IAAIgwE,GAA0B,CAC9B,IAAIC,EACJ,IAAI5oE,GAAM9I,EAAUjH,MACpB,IAAI44E,EACJ,IAAIC,EACJ,IAAIC,EAEJ,KAAK,GAAIr5E,GAAW,EAAGA,EAAIsQ,EAAKtQ,GAAK6+D,EAAQ,CAC5Csa,EAAY3xE,EAAUxH,GAAKsG,EAAO4G,CAClCksE,GAAY5xE,EAAUxH,EAAI,GAAKsG,EAAO8G,CACtCisE,GAAY7xE,EAAUxH,EAAI,GAAKsG,EAAOgH,CACtC4rE,GAAgBC,EAAUA,EAAYC,EAAUA,EAAYC,EAAUA,CAEtE,IAAIJ,EAAmBC,EACtBD,EAAmBC,EAGrBtF,EAAO1mE,EAAI5G,EAAO4G,CAClB0mE,GAAOxmE,EAAI9G,EAAO8G,CAClBwmE,GAAOtmE,EAAIhH,EAAOgH,CAClBsmE,GAAOn8C,OAASpX,KAAK0P,KAAKkpD,EAE1B,OAAOrF,GApgCO1uE,GAAAo0E,cAA6B,GAAIz5D,cAAa,EAE9C3a,GAAAkyE,YAAqB,KAErBlyE,GAAAiyE,cAAuB,QAEvBjyE,GAAAqyE,WAA2B,GAAIhyE,MAigC/C,OAAAL,KAEAzE,GAA0BJ,QAAjB6E,ItIi5mBN8lE,8CAA8CvmE,UAAUoc,6CAA6Cpc,UAAUwD,8CAA8CxD,UAAUyD,8CAA8CzD,UAAU80E,8CAA8C90E,UAAUwW,2BAA2BxW,UAAU8W,8BAA8B9W,UAAU+W,gCAAgC/W,iBAAiB",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\n\nPartitionBase.registerAbstraction(CameraNode, Camera);\nPartitionBase.registerAbstraction(DirectionalLightNode, DirectionalLight);\nPartitionBase.registerAbstraction(EntityNode, Mesh);\nPartitionBase.registerAbstraction(EntityNode, Billboard);\nPartitionBase.registerAbstraction(EntityNode, LineSegment);\nPartitionBase.registerAbstraction(EntityNode, TextField);\nPartitionBase.registerAbstraction(EntityNode, MovieClip);\nPartitionBase.registerAbstraction(LightProbeNode, LightProbe);\nPartitionBase.registerAbstraction(PointLightNode, PointLight);\nPartitionBase.registerAbstraction(SkyboxNode, Skybox);\n\n\n\n/**\n *\n * static shim\n */\nclass display\n{\n\n}\n\nexport = display;",
    null,
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:AttributesView;\n\n\t//used for hittesting geometry\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\n\tpublic lastCollisionIndex:number = -1;\n\tpublic divisions:number;\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():AttributesView\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs || this._positions);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getCurveGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for triangles\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.clearVertices(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(attributesView:AttributesView, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._uvs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes || values instanceof Float3Attributes) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = values;\n\t\t} else if (values) {\n\t\t\tif (!this._uvs || this._uvs == this._positions)\n\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._uvs.set(values, offset);\n\t\t} else if (this._uvs && this._uvs != this._positions) {\n\t\t\tthis.clearVertices(this._uvs);\n\t\t\tthis._uvs = this._positions;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<CurveSubMesh> = new Array<CurveSubMesh>();\n\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic subGeometry:CurveSubGeometry;\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tCurveSubMesh._available.push(this);\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-core/lib/library/LoaderInfo\");\nimport EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\n{\n\tpublic _iIsRoot:boolean;\n\tpublic _adapter:IDisplayObjectAdapter;\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pIsEntity:boolean = false;\n\tpublic _pIsContainer:boolean = false;\n\tpublic _sessionID:number = -1;\n\tpublic _depthID:number = -16384;\n\n\tprivate _explicitPartition:PartitionBase;\n\tpublic _pImplicitPartition:PartitionBase;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tprivate _explicitMaskId:number = -1;\n\tpublic _explicitMasks:Array<DisplayObject>;\n\tpublic _pImplicitVisibility:boolean = true;\n\tpublic _pImplicitMaskId:number = -1;\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tpublic _pImplicitColorTransform:ColorTransform;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _matrix3DDirty:boolean;\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _eulers:Vector3D;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _pivot:Vector3D;\n\tprivate _pivotScale:Vector3D;\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _inheritColorTransform:boolean = false;\n\tprivate _maskMode:boolean = false;\n\n\tpublic _hierarchicalPropsDirty:number;\n\n\t//temp vector used in global to local\n\tprivate _tempVector3D:Vector3D = new Vector3D();\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IDisplayObjectAdapter\n\t{\n\t\treturn this._adapter;\n\t}\n\n\tpublic set adapter(value:IDisplayObjectAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n\t\tif (this._inheritColorTransform == value)\n\t\t\treturn;\n\n        this._inheritColorTransform = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\n    }\n\n    public set alpha(value:number)\n    {\n\t\tif (!this._transform.colorTransform)\n\t\t\tthis._transform.colorTransform = new ColorTransform();\n\n        this._transform.colorTransform.alphaMultiplier = value;\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis.invalidate();\n\t\t\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tif (!this._eulers)\n\t\t\tthis._eulers = new Vector3D();\n\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isContainer()\n\t{\n\t\treturn this._pIsContainer;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\tpublic get maskMode():boolean\n\t{\n\t\treturn this._maskMode;\n\t}\n\n\tpublic set maskMode(value:boolean)\n\t{\n\t\tif (this._maskMode == value)\n\t\t\treturn;\n\n\t\tthis._maskMode = value;\n\n\t\tthis._explicitMaskId = value? this.id : -1;\n\n\t\tthis._updateMaskMode();\n\t}\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():PartitionBase\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:PartitionBase)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\n\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tif (!pivot) {\n\t\t\tthis._pivot = null;\n\t\t\tthis._pivotScale = null;\n\t\t} else {\n\t\t\tif (!this._pivot)\n\t\t\t\tthis._pivot = new Vector3D();\n\n\t\t\tthis._pivot.x = pivot.x;\n\t\t\tthis._pivot.y = pivot.y;\n\t\t\tthis._pivot.z = pivot.z;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\treturn this._transform.scale.x;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\treturn this._transform.scale.y;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\treturn this._transform.scale.z;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\treturn this._transform.skew.x;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\treturn this._transform.skew.y;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\treturn this._transform.skew.z;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.skew.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\n\t}\n\n\tpublic get masks():Array<DisplayObject>\n\t{\n\t\treturn this._explicitMasks;\n\t}\n\n\tpublic set masks(value:Array<DisplayObject>)\n\t{\n\t\tif (this._explicitMasks == value)\n\t\t\treturn;\n\n\t\tthis._explicitMasks = value;\n\n\t\t//make sure maskMode is set to true for all masks\n\t\tif (value != null && value.length) {\n\t\t\tvar len:number = value.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tvalue[i].maskMode = true;\n\t\t}\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._transform.position.x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._transform.position.x == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[12] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._transform.position.y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._transform.position.y == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[13] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._transform.position.z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._transform.position.z == val)\n\t\t\treturn;\n\n\t\tthis._transform.matrix3D.rawData[14] = val;\n\n\t\tthis._transform.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic zOffset:number = 0;\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform();\n\n\t\t//setup transform listeners\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar newInstance:DisplayObject = new DisplayObject();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObject)\n\t{\n\t\tnewInstance.partition = this._explicitPartition;\n\t\tnewInstance.boundsType = this._boundsType;\n\t\tnewInstance.pivot = this._pivot;\n\t\tnewInstance.name = this._pName;\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\n\t\tnewInstance.extra = this.extra;\n\t\tnewInstance.maskMode = this._maskMode;\n\n\t\tif (this._explicitMasks)\n\t\t\tnewInstance.masks = this._explicitMasks;\n\n\t\tif (this._adapter)\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\n\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\n\n\t\tif (this._transform.colorTransform)\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\t}\n\n\tpublic disposeValues()\n\t{\n\t\tif (this._pParent)\n\t\t\tthis._pParent.removeChild(this);\n\n\t\t//if (this._adapter) {\n\t\t//\tthis._adapter.dispose();\n\t\t//\tthis._adapter = null;\n\t\t//}\n\n\t\t//this._pos = null;\n\t\t//this._rot = null;\n\t\t//this._sca = null;\n\t\t//this._ske = null;\n\t\t//this._transformComponents = null;\n\t\t//this._transform.dispose();\n\t\t//this._transform = null;\n\t\t//\n\t\t//this._matrix3D = null;\n\t\t//this._pSceneTransform = null;\n\t\t//this._inverseSceneTransform = null;\n\n\t\tthis._explicitMasks = null;\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\tpublic isMask():boolean\n\t{\n\t\treturn this._explicitMaskId == -1;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Float32Array;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._transform.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point, target:Point = null):Point\n\t{\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\n\n\t\tif (!target)\n\t\t\ttarget = new Point();\n\n\t\ttarget.x = pos.x;\n\t\ttarget.y = pos.y;\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic reset():void\n\t{\n\t\tthis.visible = true;\n\n\t\tif(this._transform.matrix3D)\n\t\t\tthis._transform.clearMatrix3D();\n\n\t\tif(this._transform.colorTransform)\n\t\t\tthis._transform.clearColorTransform();\n\n\t\t//this.name=\"\";\n\t\tthis.masks = null;\n\n\t\tthis.maskMode = false;\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0].copyFrom(this.scenePosition);\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = false;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():PartitionBase\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n\t\tthis._pParent = value;\n\n        if (value)\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\n\t\telse\n\t\t\tthis._iSetScene(null, null);\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\n\t{\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\n\t\tif (!newPropDirty)\n\t\t\treturn true;\n\n\t\tthis._hierarchicalPropsDirty |= propDirty;\n\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._inverseSceneTransformDirty = true;\n\t\t\tthis._scenePositionDirty = true;\n\n\t\t\tif (this.isEntity)\n\t\t\t\tthis.invalidatePartitionBounds();\n\n\t\t\tif (this._pParent)\n\t\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\t\tif (this._listenToSceneTransformChanged)\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\n\n\t\t\t//gc abstraction objects\n\t\t\tthis.clear();\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\n\t\t}\n\n\t\tif (sceneChanged && this._listenToSceneChanged)\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\n\n\t\tif (this._pivot) {\n\t\t\tif (!this._pivotScale)\n\t\t\t\tthis._pivotScale = new Vector3D();\n\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\n\t\tif (this._pParent && !this._pParent._iIsRoot)\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\n\n\t\tthis._matrix3DDirty = false;\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\n\t\t\tthis._updateVisible();\n\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMaskId():number\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\n\t\t\tthis._updateMaskId();\n\n\t\treturn this._pImplicitMaskId;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMasks;\n\t}\n\n\tpublic _iMasksConfig():Array<Array<number>>\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\n\t\t\tthis._updateMasks();\n\n\t\treturn this._pImplicitMaskIds;\n\t}\n\n\tpublic _iAssignedColorTransform():ColorTransform\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\n\t\t\tthis._updateColorTransform();\n\n\t\treturn this._pImplicitColorTransform;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate _onInvalidateMatrix3D(event:TransformEvent)\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate _onInvalidateColorTransform(event:TransformEvent)\n\t{\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartitionBounds();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n\tprivate queueDispatch(event:EventBase)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.x = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.y = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._transform.scale.z = val;\n\n\t\tthis._transform.invalidateMatrix3D();\n\t}\n\n\tpublic _updateMouseEnabled()\n\t{\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\n\t}\n\n\tprivate _updateVisible()\n\t{\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\n\t}\n\n\tprivate _updateMaskId()\n\t{\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\n\t}\n\n\tprivate _updateMasks()\n\t{\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\n\n\t\tthis._pImplicitMaskIds.length = 0;\n\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\n\t\t\tvar numChildren:number;\n\t\t\tvar implicitChildren:Array<DisplayObject>;\n\t\t\tvar implicitChildIds:Array<number>;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\n\t\t\t\tnumChildren = implicitChildren.length;\n\t\t\t\timplicitChildIds = new Array<number>();\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\n\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\n\t\t\t}\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\n\t}\n\n\tprivate _updateColorTransform()\n\t{\n\t\tif (!this._pImplicitColorTransform)\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\n\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\n\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\n\t\t} else {\n\t\t\tif (this._transform.colorTransform)\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\n\t\t\telse\n\t\t\t\tthis._pImplicitColorTransform.clear();\n\t\t}\n\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseEnabled = false;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar i:number;\n\n\t\tif (this._pPickingCollisionVO) {\n\t\t\tthis._pPickingCollisionVO.dispose();\n\t\t\tthis._pPickingCollisionVO = null;\n\t\t}\n\n\t\tthis._pImplicitColorTransform = null;\n\t\tthis._pImplicitMasks = null;\n\t}\n\n\tpublic invalidatePartitionBounds()\n\t{\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase> = new Array<SubGeometryBase>();\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.dispose();\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = this._subGeometries.length - 1; i>=0; i--)\n\t\t\tthis.removeSubGeometry(this._subGeometries[i]);\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "/**\n *\n */\nclass HierarchicalProperties\n{\n\t/**\n\t *\n\t */\n\tpublic static MOUSE_ENABLED:number = 1;\n\n\t/**\n\t *\n\t */\n\tpublic static VISIBLE:number = 2;\n\n\t/**\n\t *\n\t */\n\tpublic static MASK_ID:number = 4;\n\n\t/**\n\t *\n\t */\n\tpublic static MASKS:number = 8;\n\n\t/**\n\t *\n\t */\n\tpublic static COLOR_TRANSFORM:number = 16;\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_TRANSFORM:number = 32;\n\n\t/**\n\t *\n\t */\n\tpublic static ALL:number = 63;\n}\n\nexport = HierarchicalProperties;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\t//TODO bounding calculations for lines\n\t\treturn target;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.invalidateVertices(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.clearVertices(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(colors, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.invalidateVertices(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._thickness.dispose();\n\t\tthis._thickness = null;\n\n\t\tthis._colors.dispose();\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<LineSubMesh> = new Array<LineSubMesh>();\n\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic subGeometry:LineSubGeometry;\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tLineSubMesh._available.push(this);\n\t}\n}\n\nexport = LineSubMesh;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\n\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n *\n */\nclass Style extends EventDispatcher\n{\n\tprivate _sampler:SamplerBase;\n\tprivate _samplers:Object = new Object();\n\tprivate _image:ImageBase;\n\tprivate _images:Object = new Object();\n\tprivate _color:number = 0xFFFFFF;\n\n\tpublic get sampler():SamplerBase\n\t{\n\t\treturn this._sampler;\n\t}\n\n\tpublic set sampler(value:SamplerBase)\n\t{\n\t\tif (this._sampler == value)\n\t\t\treturn;\n\n\t\tthis._sampler = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic get image():ImageBase\n\t{\n\t\treturn this._image;\n\t}\n\n\tpublic set image(value:ImageBase)\n\t{\n\t\tif (this._image == value)\n\t\t\treturn;\n\n\t\tthis._image = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\n\t{\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\n\t}\n\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\n\t{\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\n\t}\n\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\n\n\t\tthis._images[texture.id][index] = image;\n\t}\n\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\n\n\t\tthis._samplers[texture.id][index] = sampler;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\n\tpublic removeImageAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._images[texture.id])\n\t\t\treturn;\n\n\t\tthis._images[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0)\n\t{\n\t\tif (!this._samplers[texture.id])\n\t\t\treturn;\n\n\t\tthis._samplers[texture.id][index] = null;\n\n\t\tthis._invalidateProperties();\n\t}\n\n\tprivate _invalidateProperties()\n\t{\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\n\t}\n}\n\nexport = Style;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _invalidateIndices:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _invalidateVertices:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t\t\n\t\tthis.parentGeometry = null;\n\n\t\tif (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.clearIndices();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.clearIndices();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.invalidateIndicies();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate invalidateIndicies()\n\t{\n\t\tif (!this._invalidateIndices)\n\t\t\tthis._invalidateIndices = new SubGeometryEvent(SubGeometryEvent.INVALIDATE_INDICES, this._pIndices);\n\n\t\tthis.dispatchEvent(this._invalidateIndices);\n\t}\n\n\tprivate clearIndices()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.CLEAR_INDICES, this._pIndices));\n\t}\n\n\tpublic invalidateVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._invalidateVertices[attributesView.id])\n\t\t\tthis._invalidateVertices[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.INVALIDATE_VERTICES, attributesView);\n\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\n\t}\n\n\n\tpublic clearVertices(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.CLEAR_VERTICES, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._invalidateVertices[attributesView.id] = null;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _uvTransform:Matrix;\n\n\tpublic _iIndex:number = 0;\n\n\tprivate _style:Style;\n\tpublic _material:MaterialBase;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this.parentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this.parentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The style used to render the current TriangleSubMesh. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style || this.parentMesh.style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this.parentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic parentMesh:Mesh;\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform || this.parentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor(parentMesh:Mesh, material:MaterialBase = null, style:Style = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.parentMesh = parentMesh;\n\t\tthis.style = style;\n\t\tthis.material = material;\n\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.style = null;\n\t\tthis.parentMesh = null;\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this.parentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_GEOMETRY, this));\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateRenderOwner();\n\t}\n\n}\n\nexport = SubMeshBase;",
    "import HierarchicalProperties\t\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FrameScriptManager\t\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n\nclass Timeline\n{\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\n\tprivate _blocked:boolean;\n\tpublic _update_indices:Array<number> = [];\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\n\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\n\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\n\n\t// synched:\n\tpublic frame_command_indices:ArrayBufferView;\n\tpublic frame_recipe:ArrayBufferView;\n\n\t// synched:\n\tpublic command_index_stream:ArrayBufferView;\n\tpublic command_length_stream:ArrayBufferView;\n\n\tpublic add_child_stream:ArrayBufferView;\n\tpublic remove_child_stream:ArrayBufferView;\n\tpublic update_child_stream:ArrayBufferView;\n\n\tpublic update_child_props_length_stream:ArrayBufferView;\n\tpublic update_child_props_indices_stream:ArrayBufferView;\n\n\tpublic property_index_stream:ArrayBufferView;\n\tpublic property_type_stream:ArrayBufferView;\n\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\n\n\t// propertiy_values_stream:\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\n\tpublic properties_stream_strings:Array<string>;\n\n\tprivate _potentialPrototypes:Array<DisplayObject>;\n\n\tpublic numKeyFrames:number=0;\n\n\tconstructor()\n\t{\n\t\tthis.keyframe_indices = [];\n\n\t\tthis._potentialPrototypes = [];\n\t\tthis._labels = {};\n\t\tthis._framescripts = {};\n\t\tthis._framescripts_translated = {};\n\n\t\t//cache functions\n\t\tthis._functions[1] = this.update_mtx_all;\n\t\tthis._functions[2] = this.update_colortransform;\n\t\tthis._functions[3] = this.update_masks;\n\t\tthis._functions[4] = this.update_name;\n\t\tthis._functions[5] = this.update_button_name;\n\t\tthis._functions[6] = this.update_visibility;\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\n\t\tthis._functions[12] = this.update_mtx_pos;\n\t\tthis._functions[200] = this.enable_maskmode;\n\t\tthis._functions[201] = this.remove_masks;\n\n\t}\n\n\tpublic init():void\n\t{\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\n\t\t\treturn;\n\n\t\tthis.keyframe_firstframes = [];\n\t\tthis.keyframe_constructframes = [];\n\t\tvar frame_cnt = 0;\n\t\tvar ic = 0;\n\t\tvar ic2 = 0;\n\t\tvar keyframe_cnt = 0;\n\t\tvar last_construct_frame = 0;\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\n\t\t\tvar duration=this.keyframe_durations[(ic)];\n\n\t\t\tif(this.frame_recipe[ic] & 1)\n\t\t\t\tlast_construct_frame = keyframe_cnt;\n\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\n\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\n\t\t}\n\t}\n\n\tpublic get_framescript(keyframe_index:number):string\n\t{\n\t\tif(this._framescripts[keyframe_index]==null)\n\t\t\treturn \"\";\n\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\n\t\t\treturn this._framescripts[keyframe_index];\n\t\telse{\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\n\t\t}\n\n\t\treturn \"\";\n\t}\n\tpublic add_framescript(value:string, keyframe_index:number)\n\t{\n\t\tif(FrameScriptManager.frameScriptDebug){\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\n\t\t\t// try to get the functions name (it should be the first line as comment)\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\n\t\t\t}\n\t\t}\n\t\tthis._framescripts[keyframe_index] = value;\n\t}\n\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\n\t}\n\n\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\n\t{\n\t\tif(this._framescripts[keyframe_idx]!=null){\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\n\t\t\t}\n\t\t\tif(scriptPass1)\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\n\t\t\telse\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\n\n\t\t}\n\t}\n\n\tpublic get numFrames():number\n\t{\n\t\treturn this.keyframe_indices.length;\n\t}\n\n\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\n\t{\n\t\treturn this._potentialPrototypes[id];\n\n\t}\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\n\t{\n\t\treturn this.keyframe_indices[frame_index];\n\t}\n\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\n\t{\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\n\t\tthis_clone.name = \"\";\n\t\treturn this_clone;\n\t}\n\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\n\t{\n\t\tvar id = this._potentialPrototypes.length;\n\t\tthis._potentialPrototypes[id] = prototype;\n\t}\n\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\n\t{\n\t\tvar key_frame_index:number = this._labels[label];\n\t\tif(key_frame_index >= 0)\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\n\t}\n\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false)\n\t{\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\n\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\n\t\t\treturn;\n\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\n\t\t\treturn;\n\t\t}\n\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\n\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\n\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\n\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\n\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\n\t\tif (!jump_forward)\n\t\t\ttarget_mc.resetSessionIDs();\n\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\n\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\n\n\t\t// check what childs are alive on both frames.\n\t\t// childs that are not alive anymore get removed and unregistered\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\n\t\tvar child:DisplayObject;\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\n\t\t\tchild = target_mc._children[i];\n\t\t\tif (child._depthID < 0) {\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\n\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t\t} else if (!jump_forward) {\n\t\t\t\t\tif(child.adapter) {\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\n\n\t\t\t\t\t\t\t//this.name=\"\";\n\t\t\t\t\t\t\tchild.masks = null;\n\t\t\t\t\t\t\tchild.maskMode = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\n\t\t\t\t\t\t\tchild.visible = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// now we need to addchild the objects that were added before targetframe first\n\t\t// than we can add the script of the targetframe\n\t\t// than we can addchild objects added on targetframe\n\t\tfor (var key in depth_sessionIDs) {\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\n\t\t\tif (child._sessionID == -1)\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\n\t\t}\n\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\n\n\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\n\t\tthis.pass2(target_mc);\n\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\n\t}\n\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object)\n\t{\n\t\tvar i:number;\n\t\tvar k:number;\n\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\n\t\tvar update_cnt = 0;\n\t\tvar start_index:number;\n\t\tvar end_index:number;\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\n\n\t\t\tif (frame_recipe & 2) {\n\t\t\t\t// remove childs\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\tfor (i = start_index; i < end_index; i++)\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\n\t\t\t}\n\n\t\t\tif (frame_recipe & 4) {\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t\t\t// this could be changed in exporter\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\n\t\t\t}\n\n\t\t\tif (frame_recipe & 8)\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\n\t\t}\n\t}\n\n\tpublic pass2(target_mc:MovieClip)\n\t{\n\t\tvar k:number;\n\t\tvar len:number = this._update_indices.length;\n\t\tfor (k = 0; k < len; k++)\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\n\t}\n\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false)\n\t{\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\n\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\n\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\n\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\n\n\t\t\tif(frame_recipe & 1) {\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\n\t\t\t} else if (frame_recipe & 2) {\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\n\t\t\t}\n\n\t\t\tif(frame_recipe & 4)\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\n\n\t\t\tif(frame_recipe & 8)\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\n\t\t}\n\t}\n\n\n\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor(var i:number = start_index; i < end_index; i++)\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\n\t}\n\n\n\t// used to add childs when jumping between frames\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number)\n\t{\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\n\t\t// this could be changed in exporter\n\t\tvar idx:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\n\t\t\tidx = i*2;\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\n\t\t}\n\t}\n\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number)\n\t{\n\t\tvar p:number;\n\t\tvar props_start_idx:number;\n\t\tvar props_end_index:number;\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\n\t\tvar child:DisplayObject;\n\t\tfor(var i:number = start_index; i < end_index; i++) {\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\n\t\t\tif (child) {\n\t\t\t\t// check if the child is active + not blocked by script\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\n\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 6;\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\n\n\t\tchild.transform.invalidateComponents();\n\t}\n\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 8;\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\n\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.redOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[i++];\n\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[i];\n\n\t\tchild.transform.invalidateColorTransform();\n\t}\n\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\n\t\t// this is not implmeented in the runtime yet\n\t\t// for now, a second mask-groupd would overwrite the first one\n\t\tvar mask:DisplayObject;\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\n\t\tvar numMasks:number = this.properties_stream_int[i++];\n\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\n\t\tfor(var m:number = 0; m < numMasks; m++)\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\n\t\t\t\tmasks.push(mask);\n\n\n\t\tchild.masks = masks;\n\t}\n\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.name = this.properties_stream_strings[i];\n\t\ttarget_mc.adapter.registerScriptObject(child);\n\t}\n\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number)\n\t{\n\t\ttarget.name = this.properties_stream_strings[i];\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\n\t\t(<MovieClip> target).addButtonListeners();\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\n\t}\n\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\n\t\t\tchild.visible = Boolean(i);\n\t}\n\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 4;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\n\n\t\tchild.transform.invalidateComponents();\n\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\n\t}\n\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tif (this._blocked)\n\t\t\treturn;\n\n\t\ti *= 2;\n\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\n\n\t\tchild.transform.invalidatePosition();\n\t}\n\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.maskMode = true;\n\t}\n\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number)\n\t{\n\t\tchild.masks = null;\n\t}\n}\n\nexport = Timeline;",
    "/**\n *\n */\nclass TouchPoint\n{\n\tx:number;\n\n\ty:number;\n\n\tid:number;\n\n\tconstructor(x:number, y:number, id:number)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t}\n}\n\nexport = TouchPoint;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TransformEvent\t\t\t\t= require(\"awayjs-display/lib/events/TransformEvent\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform extends EventDispatcher\n{\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n\tprivate _rotation:Vector3D = new Vector3D();\n\tprivate _skew:Vector3D = new Vector3D();\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\n\tprivate _components:Array<Vector3D>;\n\tprivate _componentsDirty:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(val:ColorTransform)\n\t{\n\t\tif (this._colorTransform == val)\n\t\t\treturn;\n\n\t\tthis._colorTransform = val;\n\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Scene.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._updateMatrix3D();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 15; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\t\t\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._matrix3D.position;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._rotation;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._rotation.x = ax;\n\t\tthis._rotation.y = ay;\n\t\tthis._rotation.z = az;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._scale;\n\t}\n\n\tpublic scaleTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._scale.x = sx;\n\t\tthis._scale.y = sy;\n\t\tthis._scale.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get skew():Vector3D\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\treturn this._skew;\n\t}\n\n\tpublic skewTo(sx:number, sy:number, sz:number)\n\t{\n\t\tif (this._componentsDirty)\n\t\t\tthis._updateComponents();\n\n\t\tthis._skew.x = sx;\n\t\tthis._skew.y = sy;\n\t\tthis._skew.z = sz;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n\t\tthis._components = new Array<Vector3D>(4);\n\n\t\tthis._components[1] = this._rotation;\n\t\tthis._components[2] = this._skew;\n\t\tthis._components[3] = this._scale;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tthis._matrix3D.rawData[12] = dx;\n\t\tthis._matrix3D.rawData[13] = dy;\n\t\tthis._matrix3D.rawData[14] = dz;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tthis.matrix3D.prependRotation(angle, axis);\n\n\t\tthis.invalidateComponents();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis.invalidatePosition();\n\t}\n\n\tpublic clearMatrix3D()\n\t{\n\t\tthis._matrix3D.identity();\n\t\tthis.invalidateComponents();\n\t}\n\n\tpublic clearColorTransform()\n\t{\n\t\tif (!this._colorTransform)\n\t\t\treturn;\n\t\t\n\t\tthis._colorTransform.clear();\n\t\tthis.invalidateColorTransform();\n\t}\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tpublic invalidateMatrix3D():void\n\t{\n\t\tthis._matrix3DDirty = true;\n\t\t\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateComponents()\n\t{\n\t\tthis.invalidatePosition();\n\t\t\n\t\tthis._componentsDirty = true;\n\t}\n\t\n\t/**\n\t *\n\t */\n\tpublic invalidatePosition()\n\t{\n\t\tthis._matrix3D.invalidatePosition();\n\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\n\t}\n\n\tpublic invalidateColorTransform()\n\t{\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _updateMatrix3D()\n\t{\n\t\tthis._matrix3D.recompose(this._components);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\n\tprivate _updateComponents()\n\t{\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tthis._rotation.x = vec.x;\n\t\tthis._rotation.y = vec.y;\n\t\tthis._rotation.z = vec.z;\n\n\t\tvec = elements[2];\n\n\t\tthis._skew.x = vec.x;\n\t\tthis._skew.y = vec.y;\n\t\tthis._skew.z = vec.z;\n\n\t\tvec = elements[3];\n\n\t\tthis._scale.x = vec.x;\n\t\tthis._scale.y = vec.y;\n\t\tthis._scale.z = vec.z;\n\n\t\tthis._componentsDirty = false;\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoxBounds(target:Box = null):Box\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometryBoxBounds(this._positions, target, this._numVertices);\n\t}\n\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\n\t{\n\t\treturn SubGeometryUtils.getTriangleGeometrySphereBounds(this._positions, center, target, this._numVertices);\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.clearVertices(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.invalidateVertices(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.clearVertices(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.clearVertices(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.clearVertices(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tthis.invalidateVertices(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.clearVertices(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.clearVertices(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.clearVertices(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.clearVertices(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.invalidateVertices(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.invalidateVertices(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.invalidateVertices(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.invalidateVertices(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static _available:Array<TriangleSubMesh> = new Array<TriangleSubMesh>();\n\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic subGeometry:TriangleSubGeometry;\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper(parentMesh, material);\n\n\t\tthis.subGeometry = subGeometry;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.subGeometry = null;\n\n\t\tTriangleSubMesh._available.push(this);\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Float32Array = matrix.rawData;\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pEntity = null;\n\t\tthis._pBoundsPrimitive = null;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pInvalidated = true;\n\t\t}\n\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\nimport Extensions\t\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depth_childs:Object = {};\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _nextHighestDepthDirty:boolean;\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\n\t\t\tthis._updateMouseEnabled();\n\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsContainer = true;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\n\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\n\t\tvar index = this.getDepthIndexInternal(depth);\n\n\t\tif (index != -1) {\n\t\t\tif (replace) {\n\t\t\t\tthis.removeChildAt(index);\n\t\t\t} else {\n\t\t\t\t//move depth of existing child up by 1\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\n\t\t\t}\n\t\t}\n\n\t\tif (this._nextHighestDepth < depth + 1)\n\t\t\tthis._nextHighestDepth = depth + 1;\n\n\t\tthis._depth_childs[depth] = child;\n\t\tthis._children.push(child);\n\n\t\tchild._depthID = depth;\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObjectContainer\n\t{\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:DisplayObjectContainer)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tnewInstance.mouseChildren = this._mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance.addChild(this._children[i].clone());\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeValues()\n\t{\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\n\t\t\tthis.removeChild(this._children[i]);\n\n\t\tsuper.disposeValues();\n\t}\n\n\tpublic getChildAtDepth(depth:number):DisplayObject\n\t{\n\t\treturn this._depth_childs[depth];\n\t}\n\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\tif (this._nextHighestDepthDirty)\n\t\t\tthis._updateNextHighestDepth();\n\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._children[index2]._depthID;\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\n\t\tthis.addChildAtDepth(child, depth);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tvar min:number;\n\t\t\tvar max:number;\n\t\t\tvar minX:number, minY:number, minZ:number;\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number)\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\n\n\t\treturn false;\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene, partition:PartitionBase)\n\t{\n\t\tsuper._iSetScene(value, partition);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._iSetScene(value, partition);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tpublic removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\n\t\t//update next highest depth\n\t\tif (this._nextHighestDepth == child._depthID + 1)\n\t\t\tthis._nextHighestDepthDirty = true;\n\n\t\tdelete this._depth_childs[child._depthID];\n\n\t\tchild._depthID = -16384;\n\n\t\treturn child;\n\t}\n\n\tpublic getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tif (!this._depth_childs[depth])\n\t\t\treturn -1;\n\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\n\t}\n\n\tprivate _updateNextHighestDepth()\n\t{\n\t\tthis._nextHighestDepthDirty = false;\n\n\t\tthis._nextHighestDepth = 0;\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\n\n\t\tthis._nextHighestDepth += 1;\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(!this._pImplicitVisibility)\n\t\t\treturn;\n\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\n\t\t\treturn;\n\n\t\tif (this._explicitMasks) {\n\t\t\tvar numMasks:number = this._explicitMasks.length;\n\t\t\tvar maskHit:boolean = false;\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\n\t\t\t\t\tmaskHit = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!maskHit)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tvar numChildren:number = this._children.length;\n\t\tfor(var i:number = 0; i < numChildren; i++)\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tpublic _updateMaskMode()\n\t{\n\t\tif (this.maskMode)\n\t\t\tthis.mouseChildren = false;\n\n\t\tsuper._updateMaskMode();\n\t}\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport Loader\t\t\t\t\t\t= require(\"awayjs-core/lib/library/Loader\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport URLLoaderEvent\t\t\t\t= require(\"awayjs-core/lib/events/URLLoaderEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the LoaderContainer object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The LoaderContainer class overrides the following methods that it inherits,\n * because a LoaderContainer object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the LoaderContainer object's root SWF file), you may want to define a\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass LoaderContainer extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loader:Loader;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loader)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoader(this._loader);\n\t\t}\n\t\t\n\t\tthis._disposeLoader();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, Loader will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoader()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loader = lib.getLoader();\n\t\t} else {\n\t\t\tthis._loader = new Loader();\n\t\t}\n\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loader;\n\t}\n\n\tprivate _disposeLoader()\n\t{\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loader.stop();\n\n\t\tthis._loader = null;\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoader.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoader.enableParsers(parserClasses);\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:URLLoaderEvent):boolean\n\t{\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onLoadComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoader();\n\t}\n}\n\nexport = LoaderContainer;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends DisplayObjectContainer\n{\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\n\n\tpublic _iCollectionMark = 0;\n\n\tconstructor(partition:PartitionBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis.partition = partition || new BasicPartition();\n\n\t\tthis._iIsRoot = true;\n\t\tthis._pScene = this;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:PartitionBase)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tif(document) {\n\t\t\tdocument.body.style.margin = \"0px\";\n\n\t\t\tthis._htmlElement = document.createElement(\"div\");\n\t\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\t\tdocument.body.appendChild(this._htmlElement);\n\t\t}\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tget touchPoints():Array<TouchPoint>\n\t{\n\t\treturn this._pTouchPoints;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\n\t{\n\t\tvar localPosition:Vector3D;\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\n\n\t\tvar len:number = this._pTouchPoints.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\n\t\t}\n\n\t\treturn localTouchPoints;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.width = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.height = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.left = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.top = value + \"px\";\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif(this._htmlElement) {\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t}\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate _onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-display/lib/managers/DefaultMaterialManager\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:Matrix;\n\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate onInvalidateTextureDelegate:(event:RenderOwnerEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(RenderOwnerEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(RenderOwnerEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onInvalidateTextureDelegate = (event:RenderOwnerEvent) => this.onInvalidateTexture(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis.material = material;\n\n\t\tthis._updateDimensions();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\n\t/**\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._onInvalidateProperties();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onInvalidateTexture(event:RenderOwnerEvent)\n\t{\n\t\tthis._updateDimensions();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tprivate _updateDimensions()\n\t{\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\n\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\n\n\t\tif (image) {\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\n\t\t\tvar rect:Rectangle = sampler.imageRect || image.rect;\n\t\t\tthis._billboardWidth = rect.width;\n\t\t\tthis._billboardHeight = rect.height;\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\t\t} else {\n\t\t\tthis._billboardWidth = 1;\n\t\t\tthis._billboardHeight = 1;\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\n\t\t}\n\n\t\tthis._pInvalidateBounds();\n\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_GEOMETRY, this));\n\t}\n\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent = null)\n\t{\n\t\tthis.invalidateRenderOwner();\n\n\t\tthis._updateDimensions();\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\n\t\tvar invLen:number;\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\n\t{\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\n\t\t\treturn true;\n\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\n\t\t\tthis._viewProjectionDirty = true;\n\t\t\tthis._frustumPlanesDirty = true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n}\n\nexport = Camera;",
    "import Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light DirectionalLight]\";\n\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn DirectionalLight.assetType;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport SamplerCube\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ErrorBase\t\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light LightProbe]\";\n\n\tpublic diffuseMap:ImageCube;\n\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\n\n\tpublic specularMap:ImageCube;\n\n\tpublic specularSampler:SamplerCube = new SamplerCube();\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.diffuseMap = diffuseMap;\n\t\tthis.specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn LightProbe.assetType;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n}\n\nexport = LightProbe;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tprivate _style:Style;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:Matrix;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateGeometry()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_GEOMETRY, this));//TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidateRenderOwner();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tprivate static _meshes:Array<Mesh> = new Array<Mesh>();\n\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:Matrix;\n\tprivate _style:Style;\n\n\tprivate _center:Vector3D;\n\tpublic _subMeshes:Array<ISubMesh>;\n\tpublic _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tpublic _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tpublic _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\n\t//temp point used in hit testing\n\tprivate _tempPoint:Point = new Point();\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh.invalidateGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i) {\n\t\t\t\tthis._subMeshes[i].clear();\n\t\t\t\tthis._subMeshes[i].dispose();\n\t\t\t}\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tif (this._material)\n\t\t\tfor (i = 0; i < len; i++)\n\t\t\t\tif ((subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._iInvalidateRenderOwners();\n\t}\n\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this.transform.matrix3D);\n\t\tthis.transform.clearMatrix3D();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tMesh._meshes.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\tsuper.disposeValues();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\n\t\tif (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():Mesh\n\t{\n\t\tvar newInstance:Mesh = (Mesh._meshes.length)? Mesh._meshes.pop() : new Mesh(this._geometry, this._material);\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n\t}\n\n\tpublic copyTo(newInstance:Mesh)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\tif (this.isAsset(Mesh))\n\t\t\tnewInstance.geometry = this._geometry;\n\n\t\tnewInstance.material = this._material;\n\t\tnewInstance.castsShadows = this._castsShadows;\n\t\tnewInstance.shareAnimationGeometry = this._shareAnimationGeometry;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n\t\t\tnewInstance._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n        if (this._animator)\n\t\t\tnewInstance.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pBoxBounds = subGeoms[i].getBoxBounds(this._pBoxBounds);\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\n\t\tif (!this._center)\n\t\t\tthis._center = new Vector3D();\n\n\t\tthis._center.x = box.x + box.width/2;\n\t\tthis._center.y = box.y + box.height/2;\n\t\tthis._center.z = box.z + box.depth/2;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar len:number = subGeoms.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pSphereBounds = subGeoms[i].getSphereBounds(this._center, this._pSphereBounds);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.clear();\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tpublic addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar subMesh:ISubMesh = SubMeshPool.getNewSubMesh(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i].invalidateGeometry();\n\t}\n\n\n\tpublic _iInvalidateRenderOwners()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i].invalidateRenderOwner();\n\t}\n\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\n\t{\n\t\tif(this._geometry && this._geometry.subGeometries.length) {\n\t\t\tthis._tempPoint.setTo(x,y);\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\n\t\t\tvar box:Box;\n\n\t\t\t//early out for box test\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\n\t\t\t\treturn false;\n\n\t\t\t//early out for non-shape tests\n\t\t\tif (!shapeFlag)\n\t\t\t\treturn true;\n\n\t\t\t//ok do the geometry thing\n\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\t\tvar subGeometriesCount:number = subGeometries.length;\n\t\t\tfor(var i:number = 0; i < subGeometriesCount; i++)\n\t\t\t\tif (SubGeometryUtils.hitTestCurveGeometry(local.x, local.y, 0, box, <CurveSubGeometry> subGeometries[i]))\n\t\t\t\t\treturn true;\n\t\t}\n\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\n\t}\n\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subMeshes[i].clear();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis._iInvalidateRenderOwners();\n\t}\n}\n\nexport = Mesh;",
    "import AssetEvent                   = require(\"awayjs-core/lib/events/AssetEvent\");\nimport ColorTransform               = require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport DisplayObjectContainer       = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject                = require(\"awayjs-display/lib/base/DisplayObject\");\nimport Mesh                         = require(\"awayjs-display/lib/entities/Mesh\");\nimport Billboard                    = require(\"awayjs-display/lib/entities/Billboard\");\nimport TextField                    = require(\"awayjs-display/lib/entities/TextField\");\nimport MouseEvent                   = require(\"awayjs-display/lib/events/MouseEvent\");\nimport IMovieClipAdapter\t    \t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\nimport Timeline                     = require(\"awayjs-display/lib/base/Timeline\");\nimport FrameScriptManager           = require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\nclass MovieClip extends DisplayObjectContainer\n{\n    private static _skipAdvance:boolean;\n\n    private static _movieClips:Array<MovieClip> = new Array<MovieClip>();\n\n    public static assetType:string = \"[asset MovieClip]\";\n\n    private _timeline:Timeline;\n\n    private _isButton:boolean = false;\n    private _onMouseOver:(event:MouseEvent) => void;\n    private _onMouseOut:(event:MouseEvent) => void;\n    private _onMouseDown:(event:MouseEvent) => void;\n    private _onMouseUp:(event:MouseEvent) => void;\n\n    private _time:number = 0;// the current time inside the animation\n    private _currentFrameIndex:number = -1;// the current frame\n\n    private _isPlaying:boolean = true;// false if paused or stopped\n\n    // not sure if needed\n    private _enterFrame:AssetEvent;\n    private _skipAdvance : boolean;\n    private _isInit:boolean = true;\n\n    private _potentialInstances:Object = {};\n    private _depth_sessionIDs:Object = {};\n    private _sessionID_childs:Object = {};\n\n\t/**\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\n\t * setter typically managed by factory\n\t */\n\tpublic get adapter():IMovieClipAdapter\n\t{\n\t\treturn <IMovieClipAdapter> this._adapter;\n\t}\n\n\tpublic set adapter(value:IMovieClipAdapter)\n\t{\n\t\tthis._adapter = value;\n\t}\n\n    constructor(timeline:Timeline = null)\n    {\n        super();\n\n        this._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\n\n        this.inheritColorTransform = true;\n\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\n\n        this._timeline = timeline || new Timeline();\n    }\n\n    public dispose()\n    {\n        this.disposeValues();\n\n        MovieClip._movieClips.push(this);\n    }\n\n    public disposeValues()\n    {\n        super.disposeValues();\n\n        this._potentialInstances = {};\n        this._depth_sessionIDs = {};\n        this._sessionID_childs = {};\n    }\n\n    public reset_textclones()\n    {\n        if(this.timeline) {\n            for (var key in this._potentialInstances) {\n                if (this._potentialInstances[key] != null) {\n                    if (this._potentialInstances[key].isAsset(TextField)) {\n                        (<TextField>this._potentialInstances[key]).text = (<TextField>this.timeline.getPotentialChildPrototype(key)).text;\n                    }\n                    else if (this._potentialInstances[key].isAsset(MovieClip)) {\n                        (<MovieClip>this._potentialInstances[key]).reset_textclones();\n                    }\n                }\n            }\n        }\n    }\n\n    public get isInit():boolean\n    {\n        return this._isInit;\n    }\n    public set isInit(value:boolean)\n    {\n        this._isInit = value;\n    }\n\n    public get timeline():Timeline\n    {\n        return this._timeline;\n    }\n\n    public set timeline(value:Timeline)\n    {\n        this._timeline = value;\n    }\n\n    /**\n     *\n     */\n    public loop:boolean = true;\n\n    public get numFrames() : number\n    {\n        return this._timeline.numFrames;\n    }\n\n    public jumpToLabel(label:string)\n    {\n        // the timeline.jumpTolabel will set currentFrameIndex\n        this._timeline.jumpToLabel(this, label);\n    }\n\n    /**\n     * the current index of the current active frame\n     */\n    public constructedKeyFrameIndex:number = -1;\n\n    public reset():void\n    {\n        super.reset();\n\n        // time only is relevant for the root mc, as it is the only one that executes the update function\n        this._time = 0;\n\n        if(this.adapter)\n            this.adapter.freeFromScript();\n\n        this.constructedKeyFrameIndex = -1;\n        for (var i:number = this.numChildren - 1; i >= 0; i--)\n            this.removeChildAt(i);\n\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n        this._isPlaying = Boolean(numFrames > 1);\n        if (numFrames) {\n            this._currentFrameIndex = 0;\n            this._timeline.constructNextFrame(this, true, true);\n        } else {\n            this._currentFrameIndex = -1;\n        }\n    }\n\n\n    public resetSessionIDs()\n    {\n        this._depth_sessionIDs = {};\n    }\n\n    /*\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\n     */\n    public get currentFrameIndex():number\n    {\n        return this._currentFrameIndex;\n    }\n\n    public set currentFrameIndex(value:number)\n    {\n        //if currentFrame is set greater than the available number of\n        //frames, the playhead is moved to the last frame in the timeline.\n        //But because the frame specified was not a keyframe, no scripts are\n        //executed, even if they exist on the last frame.\n        var skip_script:boolean = false;\n\n        var numFrames:number = this._timeline.keyframe_indices.length;\n\n        if (!numFrames)\n            return;\n\n        if (value < 0) {\n            value = 0;\n        } else if (value >= numFrames) {\n            value = numFrames - 1;\n            skip_script = true;\n        }\n\n        if (this._currentFrameIndex == value)\n            return;\n\n        this._currentFrameIndex = value;\n\n        //changing current frame will ignore advance command for that\n        //update's advanceFrame function, unless advanceFrame has\n        //already been executed\n        this._skipAdvance = MovieClip._skipAdvance;\n\n        this._timeline.gotoFrame(this, value, skip_script);\n    }\n\n    public addButtonListeners()\n    {\n        this._isButton = true;\n\n        this.stop();\n\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n    }\n\n    public removeButtonListeners()\n    {\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\n\n    }\n\n    public getChildAtSessionID(sessionID:number):DisplayObject\n    {\n        return this._sessionID_childs[sessionID];\n    }\n\n    public getSessionIDDepths():Object\n    {\n        return this._depth_sessionIDs;\n    }\n\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n    {\n        //this should be implemented for all display objects\n        child.inheritColorTransform = true;\n\n        child.reset();// this takes care of transform and visibility\n\n        return super.addChildAtDepth(child, depth, replace);\n    }\n\n    public _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\n    {\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\n\n        this._sessionID_childs[sessionID] = child;\n\n        return this.addChildAtDepth(child, depth);\n    }\n\n    public removeChildAtInternal(index:number):DisplayObject\n    {\n        var child:DisplayObject = this._children[index];\n\n        if(child.adapter)\n            child.adapter.freeFromScript();\n\n        this.adapter.unregisterScriptObject(child);\n\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\n            delete this._depth_sessionIDs[child._depthID];\n\n        delete this._sessionID_childs[child._sessionID];\n\n        child._sessionID = -1;\n\n        return super.removeChildAtInternal(index);\n    }\n\n    public get assetType():string\n    {\n        return MovieClip.assetType;\n    }\n\n    /**\n     * Starts playback of animation from current position\n     */\n    public play()\n    {\n        if (this._timeline.keyframe_indices.length > 1)\n            this._isPlaying = true;\n    }\n\n    /**\n     * should be called right before the call to away3d-render.\n     */\n    public update()\n    {\n        MovieClip._skipAdvance = true;\n\n        this.advanceFrame();\n\n        MovieClip._skipAdvance = false;\n\n        // after we advanced the scenegraph, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we want to execute the onEnter\n        this.dispatchEvent(this._enterFrame);\n\n        // after we executed the onEnter, we might have some script that needs executing\n        FrameScriptManager.execute_queue();\n\n        // now we execute any intervals queued\n        FrameScriptManager.execute_intervals();\n\n        // finally, we execute any scripts that were added from intervals\n        FrameScriptManager.execute_queue();\n\n        //execute any disposes as a result of framescripts\n        FrameScriptManager.execute_dispose();\n    }\n\n    public getPotentialChildInstance(id:number) : DisplayObject\n    {\n        if (!this._potentialInstances[id])\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\n\n        return this._potentialInstances[id];\n    }\n\n\n    /**\n     * Stop playback of animation and hold current position\n     */\n    public stop()\n    {\n        this._isPlaying = false;\n    }\n\n    public clone():MovieClip\n    {\n        var newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\n\n        this.copyTo(newInstance);\n\n        return newInstance;\n    }\n\n    public copyTo(newInstance:MovieClip)\n    {\n        super.copyTo(newInstance);\n\n        newInstance.timeline = this._timeline;\n        newInstance.loop = this.loop;\n    }\n\n    public advanceFrame()\n    {\n        if (this._isPlaying && !this._skipAdvance) {\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\n                if (this.loop) // end of loop - jump to first frame.\n                    this.currentFrameIndex = 0;\n                else //end of timeline, stop playing\n                    this._isPlaying = false;\n            } else { // not end - construct next frame\n                this._currentFrameIndex++;\n                this._timeline.constructNextFrame(this);\n            }\n        }\n\n        var len:number = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i <  len; ++i) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).advanceFrame();\n        }\n\n        this._skipAdvance = false;\n    }\n\n// DEBUG CODE:\n    logHierarchy(depth: number = 0):void\n    {\n        this.printHierarchyName(depth, this);\n\n        var len = this._children.length;\n        var child:DisplayObject;\n        for (var i:number = 0; i < len; i++) {\n            child = this._children[i];\n\n            if (child.isAsset(MovieClip))\n                (<MovieClip> child).logHierarchy(depth + 1);\n            else\n                this.printHierarchyName(depth + 1, child);\n        }\n    }\n\n    printHierarchyName(depth:number, target:DisplayObject)\n    {\n        var str = \"\";\n        for (var i = 0; i < depth; ++i)\n            str += \"--\";\n\n        str += \" \" + target.name + \" = \" + target.id;\n        console.log(str);\n    }\n\n    public clear()\n    {\n        //clear out potential instances\n        for (var key in this._potentialInstances) {\n            var instance:DisplayObject = this._potentialInstances[key];\n\n            //only dispose instances that are not used in script ie. do not have an instance name\n            if (instance.name == \"\") {\n                FrameScriptManager.add_child_to_dispose(instance);\n                delete this._potentialInstances[key];\n            }\n        }\n\n        super.clear();\n    }\n}\nexport = MovieClip;\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic static assetType:string = \"[light PointLight]\";\n\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn PointLight.assetType;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone.transform.matrix3D = this.transform.matrix3D\n\t\tclone.name = name;\n\t\tclone.maskMode = this.maskMode;\n\t\tclone.masks = this.masks? this.masks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _texture:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _uvTransform:Matrix;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _imageRect:boolean = false;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\tprivate _animator:IAnimator;\n\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():Matrix\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:Matrix)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get texture():SingleCubeTexture\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:SingleCubeTexture)\n\t{\n\t\tif (this._texture == value)\n\t\t\treturn;\n\n\t\tif (this._texture)\n\t\t\tthis.removeTexture(this._texture);\n\n\t\tthis._texture = value;\n\n\t\tif (this._texture)\n\t\t\tthis.addTexture(this._texture);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(image:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis._style.image = image;\n\t\tthis.texture =  new SingleCubeTexture();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tpublic invalidateRenderOwner()\n\t{\n\t\tthis.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.INVALIDATE_RENDER_OWNER, this));\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport HierarchicalProperties\t\t= require(\"awayjs-display/lib/base/HierarchicalProperties\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\n\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _textGeometryDirty:boolean;\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean;\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tvalue = value.toString();\n\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\n\t\tthis._textFormat = value;\n\n\t\tthis._textGeometryDirty = true;\n\t}\n\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tif (this._geometry == value)\n\t\t\treturn;\n\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic _textColor:number /*int*/;\n\n\tpublic get textColor()\n\t{\n\t\treturn this._textColor;\n\t}\n\n\tpublic set textColor(value:number)\n\t{\n\t\tthis._textColor = value;\n\t\tif(!this.transform.colorTransform)\n\t\t\tthis.transform.colorTransform = new ColorTransform();\n\n\t\tthis.transform.colorTransform.color = value;\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\n\t}\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.disposeValues();\n\n\t\tTextField._textFields.push(this);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeValues()\n\t{\n\t\t//dispose material before geometry to ensure owners are deleted\n\t\tthis.material = null;\n\n\t\t//textfield has a unique geometry that can be disposed here\n\t\tthis._geometry.dispose();\n\n\t\tsuper.disposeValues();\n\n\t\tthis._textFormat = null;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._textGeometryDirty)\n\t\t\tthis.reConstruct();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\t\tthis._textGeometryDirty = false;\n\n\t\tif(this._textFormat == null)\n\t\t\treturn;\n\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tfor (var i:number = subGeoms.length - 1; i>=0; i--)\n\t\t\tthis._geometry.removeSubGeometry(subGeoms[i]);\n\n\t\tif(this._text == \"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar additional_margin_x:number= this._textFormat.font_table.offset_x;\n\t\tvar additional_margin_y:number= this._textFormat.font_table.offset_y;\n\t\tvar y_offset:number=additional_margin_y;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar whitespace_width=(this._textFormat.font_table.get_whitespace_width() * char_scale);\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\n\t\tvar final_lines_width:Array<number> = [];\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\n\t\t\tfinal_lines_chars.push([]);\n\t\t\tfinal_lines_char_scale.push([]);\n\t\t\tfinal_lines_width.push(0);\n\n\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\n\t\t\tfor (var i = 0; i < words.length; i++) {\n\t\t\t\tvar word_width:number = 0;\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\n\t\t\t\tvar word_chars_scale:Array<number> = [];\n\t\t\t\tvar c_cnt:number = 0;\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\n\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.font_table.get_font_em_size();\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\tif (this_char == null) {\n\t\t\t\t\t\tif (this._textFormat.fallback_font_table) {\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(words[i].charCodeAt(w).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this_char != null) {\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tword_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\t\tword_width += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\n\t\t\t\t}\n\n\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + word_width) <= this.textWidth) {\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// word does not fit\n\t\t\t\t\t// todo respect multiline and autowrapping properties.\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\n\t\t\t\t\tfinal_lines_chars.push([]);\n\t\t\t\t\tfinal_lines_char_scale.push([]);\n\t\t\t\t\tfinal_lines_width.push(0);\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\n\t\t\t\t\t}\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\n\t\t\t\t}\n\n\t\t\t\tif (i < (words.length - 1)) {\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1] + whitespace_width) <= this.textWidth) {\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfinal_lines_chars.push([null]);\n\t\t\t\t\t\tfinal_lines_char_scale.push([char_scale]);\n\t\t\t\t\t\tfinal_lines_width.push(whitespace_width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\n\n\t\t\tvar x_offset:number=additional_margin_x;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-additional_margin_x;\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=whitespace_width;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=(this._textFormat.font_table.get_font_em_size() * char_scale);\n\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis._geometry.addSubGeometry(curve_sub_geom);\n\t\tthis._subMeshes[0].material = this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone():TextField\n    {\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\n\n\t\tthis.copyTo(newInstance);\n\n\t\treturn newInstance;\n    }\n\n\n\tpublic copyTo(newInstance:TextField)\n\t{\n\t\tsuper.copyTo(newInstance);\n\n\t\t// each textfield needs its own geometry.\n\t\tnewInstance.geometry = new Geometry();\n\n\t\tnewInstance.textWidth = this._textWidth;\n\t\tnewInstance.textHeight = this._textHeight;\n\t\tnewInstance.textFormat = this._textFormat;\n\t\t//newInstance.textColor = this._textColor;\n\t\tnewInstance.text = this._text;\n\t}\n}\n\nexport = TextField;",
    "import ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\n\nclass CastError extends ErrorBase\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends EventBase\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CameraEvent\n\t{\n\t\treturn new CameraEvent(this.type, this._camera);\n\t}\n}\n\nexport = CameraEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\n\n\tprivate _object:DisplayObject;\n\n\tpublic get object():DisplayObject\n\t{\n\t\treturn this._object;\n\t}\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis._object = object;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():DisplayObjectEvent\n\t{\n\t\treturn new DisplayObjectEvent(this.type, this._object);\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():GeometryEvent\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass LightEvent extends EventBase\n{\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():LightEvent\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():MouseEvent\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\nclass RenderOwnerEvent extends EventBase\n{\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\n\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\n\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderOwnerEvent\n\t{\n\t\treturn new RenderOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderOwnerEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport IRenderableOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static INVALIDATE_RENDER_OWNER:string = \"invalidateRenderableOwner\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_GEOMETRY:string = \"invalidateGeometry\";\n\n\tprivate _renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderableOwner:IRenderableOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderableOwner = renderableOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderableOwner():IRenderableOwner\n\t{\n\t\treturn this._renderableOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():RenderableOwnerEvent\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderableOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass RendererEvent extends EventBase\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nclass ResizeEvent extends EventBase\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():ResizeEvent\n\t{\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\n\t}\n}\n\nexport = ResizeEvent;",
    "import EventBase\t\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\n\nclass StyleEvent extends EventBase\n{\n\tprivate _style:Style;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\n\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tconstructor(type:string, style:Style)\n\t{\n\t\tsuper(type);\n\n\t\tthis._style = style;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():StyleEvent\n\t{\n\t\treturn new StyleEvent(this.type, this._style);\n\t}\n}\n\nexport = StyleEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends EventBase\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryEvent\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends EventBase\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():TouchEvent\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import EventBase\t\t\t\t= require(\"awayjs-core/lib/events/EventBase\");\n\nimport Transform\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\n\nclass TransformEvent extends EventBase\n{\n\tprivate _transform:Transform;\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\n\n\t/**\n\t *\n\t */\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\n\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\tconstructor(type:string, transform:Transform)\n\t{\n\t\tsuper(type);\n\n\t\tthis._transform = transform;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TransformEvent\n\t{\n\t\treturn new TransformEvent(this.type, this._transform);\n\t}\n}\n\nexport = TransformEvent;",
    "import Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/image/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultSampler2D:Sampler2D;\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tpublic static getDefaultImage2D():BitmapImage2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\n\t}\n\n\tpublic static getDefaultImageCube():BitmapImageCube\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\n\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\n\t}\n\n\tpublic static getDefaultSampler():Sampler2D\n\t{\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\n\n\t\treturn DefaultMaterialManager._defaultSampler2D;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createDefaultImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createDefaultImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++)\n\t\t\tfor (j = 0; j < 8; j++)\n\t\t\t\tif ((j & 1) ^ (i & 1))\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n\n\tprivate static createDefaultSampler2D()\n\t{\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\n\t}\n\n}\n\nexport = DefaultMaterialManager;",
    "import DisplayObject\t\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\n\nclass FrameScriptManager\n{\n\t// FrameScript debugging:\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\n\n\n\tpublic static frameScriptDebug:Object = undefined;\n\n\t//queue of objects for disposal\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\n\n\t// queues pass1 of scripts.\n\tprivate static _queued_mcs:Array<MovieClip> = [];\n\tprivate static _queued_scripts:Array<Function> = [];\n\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\n\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\n\n\tprivate static _intervalID:number=0;\n\tpublic static setInterval(func:any):number\n\t{\n\t\tthis._intervalID++;\n\t\tthis._active_intervals[this._intervalID]=func;\n\t\treturn this._intervalID\n\t}\n\n\tpublic static clearInterval(id:number):void\n\t{\n\t\tdelete this._active_intervals[id];\n\t}\n\n\tpublic static execute_intervals():void\n\t{\n\t\tfor(var key in this._active_intervals){\n\t\t\tthis._active_intervals[key].call();\n\t\t}\n\t}\n\n\tpublic static add_child_to_dispose(child:DisplayObject)\n\t{\n\t\tthis._queued_dispose.push(child);\n\t}\n\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\n\t{\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\t\tthis._queued_mcs.push(mc);\n\t\tthis._queued_scripts.push(script);\n\t}\n\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\n\t{\n\t\tthis._queued_mcs_pass2.push(mc);\n\t\tthis._queued_scripts_pass2.push(script);\n\t}\n\n\tpublic static execute_queue():void\n\t{\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\n\t\t\treturn;\n\n\t\tvar i=this._queued_mcs_pass2.length;\n\t\twhile(i--){\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\n\t\t}\n\t\tthis._queued_mcs_pass2.length = 0;\n\t\tthis._queued_scripts_pass2.length = 0;\n\n\t\tvar mc:MovieClip;\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\n\t\t\t// during the loop we might add more scripts to the queue\n\t\t\tmc=this._queued_mcs[i];\n\t\t\tif(mc.scene!=null) {\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\n\t\t\t//\ttry {\n\t\t\t\tthis._queued_scripts[i].call(caller);\n\t\t\t//\t}\n\t\t\t/*\tcatch (err) {\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\n\t\t\t\t\tconsole.log(err.message);\n\t\t\t\t\tthrow err;\n\t\t\t\t}*/\n\t\t\t}\n\t\t}\n\t\t// all scripts executed. clear all\n\t\tthis._queued_mcs.length = 0;\n\t\tthis._queued_scripts.length = 0;\n\t}\n\n\tpublic static execute_dispose()\n\t{\n\t\tvar len:number = this._queued_dispose.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._queued_dispose[i].dispose();\n\n\t\tthis._queued_dispose.length = 0;\n\t}\n}\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport TouchPoint\t\t\t\t\t= require(\"awayjs-display/lib/base/TouchPoint\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\t if (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\n\t\t\t// if nothing is queued, the function will return directly anyway\n\t\t\tFrameScriptManager.execute_queue();\n\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\t\t\tthis._viewLookup.push(view);\n\t\t}\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tif(view && view.htmlElement) {\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t\t}\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tview._pTouchPoints.length = 0;\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\n\t\t\tif (event.touches) {\n\t\t\t\tvar touch;\n\t\t\t\tvar len:number = event.touches.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\t\ttouch = event.touches[i];\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._iUpdateDirty)\n\t\t\t\tcontinue;\n\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n    private _texture:TextureBase;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(image?:Image2D, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper(imageColor, alpha);\n\n        //set a texture if an image is present\n        if (imageColor instanceof Image2D)\n            this.texture = new Single2DTexture();\n\t}\n\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n\n        this._preserveAlpha = value;\n\n        this.invalidate();\n    }\n\n\n    /**\n     * The texture object to use for the albedo colour.\n     */\n    public get texture():TextureBase\n    {\n        return this._texture;\n    }\n\n    public set texture(value:TextureBase)\n    {\n        if (this._texture == value)\n            return;\n\n        if (this._texture)\n            this.removeTexture(this._texture);\n\n        this._texture = value;\n\n        if (this._texture)\n            this.addTexture(this._texture);\n\n        this.invalidateTexture();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/image/BlendMode\");\nimport ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport Sampler2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport RenderOwnerEvent\t\t\t\t= require(\"awayjs-display/lib/events/RenderOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport Style\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Style\");\nimport StyleEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StyleEvent\");\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\n\tprivate _style:Style = new Style();\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner> = new Array<IRenderableOwner>();\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _imageRect:boolean = false;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor(image?:ImageBase, alpha?:number);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(imageColor:any = null, alpha:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tif (imageColor instanceof ImageBase)\n\t\t\tthis._style.image = <ImageBase> imageColor;\n\t\telse if (imageColor)\n\t\t\tthis._style.color = Number(imageColor);\n\n\t\tthis.alpha = alpha;\n\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get imageRect():boolean\n\t{\n\t\treturn this._imageRect;\n\t}\n\n\tpublic set imageRect(value:boolean)\n\t{\n\t\tif (this._imageRect == value)\n\t\t\treturn;\n\n\t\tthis._imageRect = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\n\t/**\n\t * The style used to render the current TriangleSubMesh. If set to null, its parent Mesh's style will be used instead.\n\t */\n\tpublic get style():Style\n\t{\n\t\treturn this._style;\n\t}\n\n\tpublic set style(value:Style)\n\t{\n\t\tif (this._style == value)\n\t\t\treturn;\n\n\t\tif (this._style)\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis._style = value;\n\n\t\tif (this._style)\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\n\t\tthis._pUseColorTransform = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis.invalidate();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis.invalidatePasses();\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.invalidateRenderOwner();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic getNumTextures():number\n\t{\n\t\treturn this._textures.length;\n\t}\n\n\tpublic getTextureAt(index:number):TextureBase\n\t{\n\t\treturn this._textures[index];\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic invalidatePasses()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_PASSES, this));\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_ANIMATION, this));\n\t}\n\n\tpublic invalidateRenderOwners()\n\t{\n\t\tvar len:number = this._owners.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._owners[i].invalidateRenderOwner();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:AssetEvent)\n\t{\n\t\tthis.invalidate();\n\t}\n\n\tpublic invalidateTexture()\n\t{\n\t\tthis.dispatchEvent(new RenderOwnerEvent(RenderOwnerEvent.INVALIDATE_TEXTURE, this));\n\t}\n\n\tpublic addTextureAt(texture:TextureBase, index:number)\n\t{\n\t\tvar i:number = this._textures.indexOf(texture);\n\n\t\tif (i == index)\n\t\t\treturn;\n\t\telse if (i != -1)\n\t\t\tthis._textures.splice(i, 1);\n\n\t\tthis._textures.splice(index, 0, texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\n\tpublic addTexture(texture:TextureBase)\n\t{\n\t\tif (this._textures.indexOf(texture) != -1)\n\t\t\treturn;\n\n\t\tthis._textures.push(texture);\n\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tpublic removeTexture(texture:TextureBase)\n\t{\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\n\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\n\n\t\tthis.onTextureInvalidate();\n\t}\n\t\n\tprivate onTextureInvalidate(event:AssetEvent = null)\n\t{\n\t\tthis.invalidatePasses();\n\n\t\tthis.invalidateRenderOwners();\n\t}\n\n\tprivate _onInvalidateProperties(event:StyleEvent)\n\t{\n\t\tthis.invalidatePasses();\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(entity:IEntity)\n\t{\n\t\tthis.updateProbeWeights(entity);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(entity:IEntity)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = entity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase extends AssetBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n\n/**\n * @class away.partition.Partition\n */\nclass BasicPartition extends PartitionBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._rootNode = new NodeBase();\n\t}\n}\n\nexport = BasicPartition;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport AbstractionBase\t\t\t\t= require(\"awayjs-core/lib/library/AbstractionBase\");\n\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass DisplayObjectNode extends AbstractionBase implements INode\n{\n\tpublic numEntities:number = 0;\n\n\tpublic isSceneGraphNode:boolean = false;\n\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\n\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\n\t\n\tpublic _displayObject:DisplayObject;\n\tprivate _debugEntity:IEntity;\n\tprivate _boundsDirty:boolean = true;\n\tprivate _bounds:BoundingVolumeBase;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic parent:SceneGraphNode;\n\n\tpublic isContainerNode:boolean = false;\n\n\tpublic boundsType:string;\n\n\tpublic get bounds():BoundingVolumeBase\n\t{\n\t\tif (this._boundsDirty)\n\t\t\tthis._updateBounds();\n\n\t\treturn this._bounds;\n\t}\n\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\n\t{\n\t\tsuper(displayObject, pool);\n\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\n\n\t\tthis._displayObject = displayObject;\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\n\t\tthis.boundsType = this._displayObject.boundsType;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this._displayObject.castsShadows;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\n\t\tthis._displayObject = null;\n\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tthis._bounds = null;\n\t\tthis._debugEntity = null;\n\t}\n\n\tpublic onInvalidate(event:AssetEvent)\n\t{\n\t\tsuper.onInvalidate(event);\n\n\t\tif (this.boundsType != this._displayObject.boundsType) {\n\t\t\tthis.boundsType = this._displayObject.boundsType;\n\t\t\tthis._boundsDirty = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// do nothing here\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\t// do nothing here\n\t}\n\n\tprivate _updateBounds()\n\t{\n\t\tif (this._bounds)\n\t\t\tthis._bounds.dispose();\n\n\t\tif (this.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\n\t\telse if (this.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\n\t\telse if (this.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis._boundsDirty = false;\n\t}\n}\n\nexport = DisplayObjectNode;",
    "import AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends DisplayObjectNode\n{\n\tpublic numEntities:number = 1;\n\n\tprivate _partition:PartitionBase;\n\n\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\n\t{\n\t\tsuper(displayObject, partition);\n\n\t\tthis._partition = partition;\n\t}\n\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._partition = null;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._displayObject._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._displayObject.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(<IEntity> this._displayObject);\n\n\t\t\tif (this._displayObject.debugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this.bounds.boundsPrimitive);\n\t\t}\n\t}\n\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent)\n\t{\n\t\tthis.bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase implements IContainerNode\n{\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic numEntities:number = 0;\n\n\tpublic parent:IContainerNode;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.parent = null;\n\t\tthis._pChildNodes = null;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:INode)\n\t{\n\t\tnode.parent = this;\n\t\tthis.numEntities += node.numEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:INode)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n}\n\nexport = NodeBase;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/partition/IEntityNodeClass\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass PartitionBase implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tpublic _rootNode:IContainerNode;\n\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:DisplayObjectNode;\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\n\t{\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(displayObject:DisplayObject)\n\t{\n\t\tthis._abstractionPool[displayObject.id] = null;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade)\n\t\t\tthis.updateEntities();\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:DisplayObjectNode)\n\t{\n\t\tvar t:DisplayObjectNode;\n\n\t\tif (node.parent) {\n\t\t\tnode.parent.iRemoveNode(node);\n\t\t\tnode.parent = null;\n\t\t}\n\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:DisplayObjectNode = this._updateQueue;\n\t\twhile (node) {\n\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\tnode._displayObject._iInternalUpdate();\n\t\t\tnode = node._iUpdateQueueNext;\n\t\t}\n\n\t\t//reset head\n\t\tnode = this._updateQueue;\n\t\tvar targetNode:IContainerNode;\n\t\tvar t:DisplayObjectNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this.findParentForNode(node);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node.parent)\n\t\t\t\t\tnode.parent.iRemoveNode(node);\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tif (displayObject.isEntity)\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\n\t{\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\n\t}\n}\n\nexport = PartitionBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\n\n/**\n * Maintains scenegraph heirarchy when collecting nodes\n */\nclass SceneGraphNode extends DisplayObjectNode implements IContainerNode\n{\n\tpublic isSceneGraphNode:boolean = true;\n\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _childDepths:Array<number> = new Array<number>();\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\n\tprivate _numChildMasks:number = 0;\n\tprivate _pNumChildNodes:number = 0;\n\n\tpublic _iCollectionMark:number;// = 0;\n\n\tpublic _pEntityNode:EntityNode;\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\n\t\tif (this.numEntities == 0)\n\t\t\treturn;\n\n\t\tif (this._pEntityNode)\n\t\t\tthis._pEntityNode.acceptTraverser(traverser);\n\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numChildMasks; i++)\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\n\n\t\tfor (i = 0; i < this._pNumChildNodes; i++)\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:DisplayObjectNode)\n\t{\n\t\tnode.parent = this;\n\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = <EntityNode> node;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.push(node);\n\t\t\tthis._numChildMasks = this._childMasks.length;\n\t\t} else {\n\t\t\tvar depth:number = node._displayObject._depthID;\n\t\t\tvar len:number = this._childDepths.length;\n\t\t\tvar index:number = len;\n\n\t\t\twhile (index--)\n\t\t\t\tif (this._childDepths[index] < depth)\n\t\t\t\t\tbreak;\n\n\t\t\tindex++;\n\n\t\t\tif (index < len) {\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\n\t\t\t} else {\n\t\t\t\tthis._pChildNodes.push(node);\n\t\t\t\tthis._childDepths.push(depth);\n\t\t\t}\n\t\t\tthis._pNumChildNodes = this._childDepths.length;\n\t\t}\n\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities += numEntities;\n\t\t} while ((node = node.parent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:DisplayObjectNode)\n\t{\n\t\tif (!node.isSceneGraphNode) {\n\t\t\tthis._pEntityNode = null;\n\t\t} else if (node._displayObject.maskMode) {\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\n\t\t\tthis._numChildMasks = this._childMasks.length;\n\t\t} else {\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\n\n\t\t\tthis._pChildNodes.splice(index, 1);\n\t\t\tthis._childDepths.splice(index, 1);\n\n\t\t\tthis._pNumChildNodes = this._childDepths.length;\n\t\t}\n\n\t\tvar numEntities:number = node.numEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode.numEntities -= numEntities;\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\n\t}\n}\nexport = SceneGraphNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\nimport SceneGraphNodePool\t\t\t= require(\"awayjs-display/lib/pool/SceneGraphNodePool\");\nimport IContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/IContainerNode\");\nimport DisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/DisplayObjectNode\");\n\n/**\n * @class away.partition.Partition\n */\nclass SceneGraphPartition extends PartitionBase\n{\n\tpublic _sceneGraphNodePool:SceneGraphNodePool;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool(this);\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tsuper.traverse(traverser);\n\t}\n\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\n\t{\n\t\tif (node._displayObject.partition == this || node._displayObject._iIsRoot) {\n\t\t\tthis._rootNode = <SceneGraphNode> node;\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\n\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iRegisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\n\t{\n\t\tsuper._iUnregisterEntity(displayObject);\n\n\t\tif (displayObject.isContainer)\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\n\t}\n}\n\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applySkybox(this._displayObject);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._displayObject._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:ArrayBufferView = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:ArrayBufferView, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis.displayObject = null;\n\t\tthis.renderableOwner = null;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _x:number;\n\tprivate _y:number;\n\tprivate _view:View;\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._view = view;\n\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//discard entities\n\t\tthis._entities.length = 0;\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\n\t{\n\t\t//horrible hack for 2d masks\n\t\tif (masks != null) {\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\n\t\t\tvar numLayers:number = masks.length;\n\t\t\tvar children:Array<DisplayObject>;\n\t\t\tvar numChildren:number;\n\t\t\tvar layerHit:boolean;\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\n\t\t\t\tchildren = masks[i];\n\t\t\t\tnumChildren = children.length;\n\t\t\t\tlayerHit = false;\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\n\t\t\t\t\t\tlayerHit = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!layerHit)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tvar item:EntityListItem;\n\t\tvar len:number = this._pool.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\titem = this._pool[i];\n\t\t\titem.entity = null;\n\t\t\titem.next = null;\n\t\t}\n\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IAbstractionPool\t\t\t\t= require(\"awayjs-core/lib/library/IAbstractionPool\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneGraphNode\t\t\t\t= require(\"awayjs-display/lib/partition/SceneGraphNode\");\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\n\n/**\n * @class away.pool.ContainerNodePool\n */\nclass ContainerNodePool implements IAbstractionPool\n{\n\tprivate _containerNodePool:Object = new Object();\n\tprivate _partition:PartitionBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(partition:PartitionBase)\n\t{\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\n\t{\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer)\n\t{\n\t\tdelete this._containerNodePool[displayObjectContainer.id];\n\t}\n}\n\nexport = ContainerNodePool;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\tpublic static getNewSubMesh(subGeometry:SubGeometryBase, parentMesh:Mesh, material:MaterialBase = null):ISubMesh\n\t{\n\t\tvar subMeshClass:ISubMeshClass = SubMeshPool.classPool[subGeometry.assetType];\n\n\t\tif (!subMeshClass._available.length)\n\t\t\treturn new subMeshClass(subGeometry, parentMesh, material);\n\n\t\tvar newSubMesh:ISubMesh = subMeshClass._available.pop();\n\n\t\tnewSubMesh.subGeometry = subGeometry;\n\t\tnewSubMesh.parentMesh = parentMesh;\n\t\tnewSubMesh.material = material;\n\n\t\treturn newSubMesh;\n\t}\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass, assetClass:IAssetClass)\n\t{\n\t\tSubMeshPool.classPool[assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh, LineSubGeometry);\n\t\tSubMeshPool.registerClass(TriangleSubMesh, TriangleSubGeometry);\n\t\tSubMeshPool.registerClass(CurveSubMesh, CurveSubGeometry);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get font_styles():Array<FontTable>\n\t{\n\t\treturn this._font_styles;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tpublic _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _offset_x:number;\n\tprivate _offset_y:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t\tthis._offset_x=0;\n\t\tthis._offset_y=0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tget offset_x():number {\n\t\treturn this._offset_x;\n\t}\n\n\tset offset_x(value:number){\n\t\tthis._offset_x=value;\n\t}\n\n\tget offset_y():number {\n\t\treturn this._offset_y;\n\t}\n\n\tset offset_y(value:number){\n\t\tthis._offset_y=value;\n\t}\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic fallback_font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "/**\n\n\n */\nclass MappingMode\n{\n\t/**\n\t *\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t *\n\t */\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\n\n\t/**\n\t *\n\t */\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\n}\n\nexport = MappingMode;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ErrorBase\t\t\t\t= require(\"awayjs-core/lib/errors/ErrorBase\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport MappingMode\t\t\t\t= require(\"awayjs-display/lib/textures/MappingMode\");\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tprivate _mappingMode:string;\n\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\tpublic get mappingMode():string\n\t{\n\t\treturn this._mappingMode;\n\t}\n\n\tpublic set mappingMode(value:string)\n\t{\n\t\tif (this._mappingMode == value)\n\t\t\treturn;\n\n\t\tthis._mappingMode = value;\n\n\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn <Sampler2D> this._samplers[0];\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get image2D():Image2D\n\t{\n\t\treturn <Image2D> this._images[0];\n\t}\n\n\tpublic set image2D(value:Image2D)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value))\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\tconstructor(image2D:Image2D = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.image2D = image2D;\n\n\t\tthis._mappingMode = MappingMode.NORMAL;\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/image/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/image/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn <SamplerCube> this._samplers[0];\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplers[0] == value)\n\t\t\treturn;\n\n\t\tthis.setSamplerAt(value, 0);\n\t}\n\n\t/**\n\t *\n\t * @returns {ImageCube}\n\t */\n\tpublic get imageCube():ImageCube\n\t{\n\t\treturn <ImageCube> this._images[0];\n\t}\n\n\tpublic set imageCube(value:ImageCube)\n\t{\n\t\tif (this._images[0] == value)\n\t\t\treturn;\n\n\t\tthis.setImageAt(value, 0);\n\t}\n\n\t\n\tconstructor(imageCube:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis.setNumImages(1);\n\n\t\tthis.imageCube = imageCube;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import ImageBase\t\t\t\t\t= require(\"awayjs-core/lib/image/ImageBase\");\nimport SamplerBase\t\t\t\t\t= require(\"awayjs-core/lib/image/SamplerBase\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n/**\n *\n */\nclass TextureBase extends AssetBase\n{\n\tpublic _numImages:number = 0;\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic getNumImages():number\n\t{\n\t\treturn this._numImages;\n\t}\n\n\tpublic setNumImages(value:number)\n\t{\n\t\tif (this._numImages == value)\n\t\t\treturn;\n\n\t\tthis._numImages = value;\n\n\t\tthis._images.length = value;\n\t\tthis._samplers.length = value;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getImageAt(index:number):ImageBase\n\t{\n\t\treturn this._images[index];\n\t}\n\n\tpublic setImageAt(image:ImageBase, index:number)\n\t{\n\t\tthis._images[index] = image;\n\n\t\tthis.invalidate();\n\t}\n\n\tpublic getSamplerAt(index:number):SamplerBase\n\t{\n\t\treturn this._samplers[index];\n\t}\n\n\tpublic setSamplerAt(sampler:SamplerBase, index:number)\n\t{\n\t\tthis._samplers[index] = sampler;\n\n\t\tthis.invalidate();\n\t}\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:INode):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/image/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/image/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Sphere\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Extensions\t\t\t\t= require(\"awayjs-core/lib/utils/Extensions\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nclass SubGeometryUtils\n{\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\n\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:AttributesView, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:ArrayBufferView = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n\n\t//TODO - generate this dyanamically based on num tris\n\n\tpublic static hitTestCurveGeometry(x:number, y:number, z:number, boundingBox:Box, curveSubGeometry:CurveSubGeometry):boolean\n\t{\n\t\tvar positionAttributes:Short3Attributes = curveSubGeometry.positions;\n\t\tvar curveAttributes:Short2Attributes = curveSubGeometry.curves;\n\t\tvar count:number = curveSubGeometry.numVertices;\n\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar curveDim:number = curveAttributes.dimensions;\n\n\t\tvar positions:Float32Array = positionAttributes.get(count);\n\t\tvar curves:Float32Array = curveAttributes.get(count);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tvar index:number = curveSubGeometry.lastCollisionIndex;\n\t\tif(index != -1 && index < count)\n\t\t{\n\t\t\tprecheck:\n\t\t\t{\n\t\t\t\tid0 = index + 2;\n\t\t\t\tid1 = index + 1;\n\t\t\t\tid2 = index + 0;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tbreak precheck;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tbreak precheck;;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif (count > 150) {\n\t\t\tvar cells:Array<Array<number>> = curveSubGeometry.cells;\n\t\t\tvar divisions:number = cells.length? curveSubGeometry.divisions : (curveSubGeometry.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\n\t\t\tvar conversionX:number = divisions/boundingBox.width;\n\t\t\tvar conversionY:number = divisions/boundingBox.height;\n\t\t\tvar minx:number = boundingBox.x;\n\t\t\tvar miny:number = boundingBox.y;\n\n\t\t\tif (!cells.length) { //build grid\n\n\t\t\t\t//now we have bounds start creating grid cells and filling\n\t\t\t\tcells.length = divisions * divisions;\n\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\n\t\t\t\t\tid0 = k + 2;\n\t\t\t\t\tid1 = k + 1;\n\t\t\t\t\tid2 = k + 0;\n\n\t\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t\t//subtractions to push into positive space\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\n\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\n\n\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\n\n\t\t\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\n\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\n\t\t\t\treturn false;\n\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\n\n\t\t\tif (nodes == null)\n\t\t\t\treturn false;\n\n\t\t\tvar nodeCount:number = nodes.length;\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tif(id2 == index) continue;\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\t\tif (dot > 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t\t\tif (d > 0 && az == -1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if (d < 0 && az == 1)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//brute force\n\t\tfor(var k:number = 0; k < count; k += 3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tif(id2 == index) continue;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveSubGeometry.lastCollisionIndex = id2;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static getCurveGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\t\tvar posDim2:number = posDim*2;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar minX, minY, maxX, maxY, p;\n\n\t\tmaxX = output.width + (minX = output.x);\n\t\tmaxY = output.height + (minY = output.y);\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tp = positions[i];\n\t\t\tif (p < minX)\n\t\t\t\tminX = p;\n\t\t\telse if (p > maxX)\n\t\t\t\tmaxX = p;\n\n\t\t\tp = positions[i + 1];\n\n\t\t\tif (p < minY)\n\t\t\t\tminY = p;\n\t\t\telse if (p > maxY)\n\t\t\t\tmaxY = p;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static getTriangleGeometryBoxBounds(positionAttributes:Float3Attributes, output:Box, count:number, offset:number = 0):Box\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Box();\n\n\t\tvar pos:number;\n\t\tvar minX:number = output.x;\n\t\tvar minY:number = output.y;\n\t\tvar minZ:number = output.z;\n\t\tvar maxX:number = output.width + minX;\n\t\tvar maxY:number = output.height + minY;\n\t\tvar maxZ:number = output.depth + minZ;\n\n\t\tvar len:number = positions.length;\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tpos = positions[i];\n\t\t\tif (pos < minX)\n\t\t\t\tminX = pos;\n\t\t\telse if (pos > maxX)\n\t\t\t\tmaxX = pos;\n\n\t\t\tpos = positions[i + 1];\n\n\t\t\tif (pos < minY)\n\t\t\t\tminY = pos;\n\t\t\telse if (pos > maxY)\n\t\t\t\tmaxY = pos;\n\n\t\t\tpos = positions[i + 2];\n\n\t\t\tif (pos < minZ)\n\t\t\t\tminZ = pos;\n\t\t\telse if (pos > maxZ)\n\t\t\t\tmaxZ = pos;\n\t\t}\n\n\t\toutput.width = maxX - (output.x = minX);\n\t\toutput.height = maxY - (output.y = minY);\n\t\toutput.depth = maxZ - (output.z = minZ);\n\n\t\treturn output;\n\t}\n\n\tpublic static getTriangleGeometrySphereBounds(positionAttributes:Float3Attributes, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar posDim:number = positionAttributes.dimensions;\n\n\t\tif (output == null)\n\t\t\toutput = new Sphere();\n\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar len = positions.length;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tfor (var i:number = 0; i < len; i += posDim) {\n\t\t\tdistanceX = positions[i] - center.x;\n\t\t\tdistanceY = positions[i + 1] - center.y;\n\t\t\tdistanceZ = positions[i + 2] - center.z;\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t}\n\n\t\toutput.x = center.x;\n\t\toutput.y = center.y;\n\t\toutput.z = center.z;\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\n\n\t\treturn output;\n\t}\n\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
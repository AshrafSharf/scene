{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "../index.ts",
    "lib/View.ts",
    "lib/adapters.ts",
    "lib/animators/lib/animators/data/ParticleData.ts",
    "lib/animators/lib/animators/nodes/AnimationNodeBase.ts",
    "lib/animators.ts",
    "lib/lib/base/AlignmentMode.ts",
    "lib/lib/base/HierarchicalProperties.ts",
    "lib/lib/base/OrientationMode.ts",
    "lib/lib/base/Style.ts",
    "lib/lib/base/Timeline.ts",
    "lib/lib/base/TouchPoint.ts",
    "lib/lib/base/Transform.ts",
    "lib/base.ts",
    "lib/lib/bounds/AxisAlignedBoundingBox.ts",
    "lib/lib/bounds/BoundingSphere.ts",
    "lib/lib/bounds/BoundingVolumeBase.ts",
    "lib/lib/bounds/BoundsType.ts",
    "lib/lib/bounds/NullBounds.ts",
    "lib/bounds.ts",
    "lib/lib/controllers/ControllerBase.ts",
    "lib/lib/controllers/FirstPersonController.ts",
    "lib/lib/controllers/FollowController.ts",
    "lib/lib/controllers/HoverController.ts",
    "lib/lib/controllers/LookAtController.ts",
    "lib/lib/controllers/SpringController.ts",
    "lib/controllers.ts",
    "lib/lib/display/Billboard.ts",
    "lib/lib/display/Camera.ts",
    "lib/lib/display/DirectionalLight.ts",
    "lib/lib/display/DisplayObjectContainer.ts",
    "lib/lib/display/DisplayObject.ts",
    "lib/lib/display/LightBase.ts",
    "lib/lib/display/LightProbe.ts",
    "lib/lib/display/LineSegment.ts",
    "lib/lib/display/LoaderContainer.ts",
    "lib/lib/display/MovieClip.ts",
    "lib/lib/display/PointLight.ts",
    "lib/lib/display/Scene.ts",
    "lib/lib/display/Shape.ts",
    "lib/lib/display/Skybox.ts",
    "lib/lib/display/Sprite.ts",
    "lib/lib/display/TextFieldMultiRender.ts",
    "lib/lib/display/TextField.ts",
    "lib/display.ts",
    "lib/lib/draw/CapsStyle.ts",
    "lib/lib/draw/DrawMode.ts",
    "lib/lib/draw/GradientType.ts",
    "lib/lib/draw/GraphicsFactoryFills.ts",
    "lib/lib/draw/GraphicsFactoryHelper.ts",
    "lib/lib/draw/GraphicsFactoryStrokes.ts",
    "lib/lib/draw/GraphicsFillStyle.ts",
    "lib/lib/draw/GraphicsPathCommand.ts",
    "lib/lib/draw/GraphicsPathWinding.ts",
    "lib/lib/draw/GraphicsPath.ts",
    "lib/lib/draw/GraphicsStrokeStyle.ts",
    "lib/lib/draw/InterpolationMethod.ts",
    "lib/lib/draw/JointStyle.ts",
    "lib/lib/draw/LineScaleMode.ts",
    "lib/lib/draw/PixelSnapping.ts",
    "lib/lib/draw/SpreadMethod.ts",
    "lib/lib/draw/TriangleCulling.ts",
    "lib/draw.ts",
    "lib/lib/errors/CastError.ts",
    "lib/errors.ts",
    "lib/lib/events/CameraEvent.ts",
    "lib/lib/events/DisplayObjectEvent.ts",
    "lib/lib/events/ElementsEvent.ts",
    "lib/lib/events/LightEvent.ts",
    "lib/lib/events/MouseEvent.ts",
    "lib/lib/events/RenderableEvent.ts",
    "lib/lib/events/RendererEvent.ts",
    "lib/lib/events/ResizeEvent.ts",
    "lib/lib/events/StyleEvent.ts",
    "lib/lib/events/SurfaceEvent.ts",
    "lib/lib/events/TouchEvent.ts",
    "lib/lib/events/TransformEvent.ts",
    "lib/events.ts",
    "lib/factories.ts",
    "lib/lib/graphics/ElementsBase.ts",
    "lib/lib/graphics/ElementsType.ts",
    "lib/lib/graphics/Graphics.ts",
    "lib/lib/graphics/Graphic.ts",
    "lib/lib/graphics/HitTestCache.ts",
    "lib/lib/graphics/LineElements.ts",
    "lib/lib/graphics/TriangleElements.ts",
    "lib/graphics.ts",
    "lib/lib/managers/DefaultFontManager.ts",
    "lib/lib/managers/DefaultMaterialManager.ts",
    "lib/lib/managers/FrameScriptManager.ts",
    "lib/lib/managers/MouseManager.ts",
    "lib/lib/managers/TouchManager.ts",
    "lib/managers.ts",
    "lib/lib/materials/BasicMaterial.ts",
    "lib/lib/materials/LightSources.ts",
    "lib/lib/materials/MaterialBase.ts",
    "lib/materials/lib/materials/lightpickers/LightPickerBase.ts",
    "lib/materials/lib/materials/lightpickers/StaticLightPicker.ts",
    "lib/materials/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "lib/materials/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "lib/materials.ts",
    "lib/lib/partition/BasicPartition.ts",
    "lib/lib/partition/CameraNode.ts",
    "lib/lib/partition/DirectionalLightNode.ts",
    "lib/lib/partition/DisplayObjectNode.ts",
    "lib/lib/partition/EntityNode.ts",
    "lib/lib/partition/LightProbeNode.ts",
    "lib/lib/partition/NodeBase.ts",
    "lib/lib/partition/PartitionBase.ts",
    "lib/lib/partition/PointLightNode.ts",
    "lib/lib/partition/SceneGraphNode.ts",
    "lib/lib/partition/SceneGraphPartition.ts",
    "lib/lib/partition/SkyboxNode.ts",
    "lib/partition.ts",
    "lib/lib/pick/JSPickingCollider.ts",
    "lib/lib/pick/PickingCollision.ts",
    "lib/lib/pick/RaycastPicker.ts",
    "lib/pick.ts",
    "lib/lib/prefabs/PrefabBase.ts",
    "lib/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "lib/lib/prefabs/PrimitiveConePrefab.ts",
    "lib/lib/prefabs/PrimitiveCubePrefab.ts",
    "lib/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "lib/lib/prefabs/PrimitivePlanePrefab.ts",
    "lib/lib/prefabs/PrimitivePolygonPrefab.ts",
    "lib/lib/prefabs/PrimitivePrefabBase.ts",
    "lib/lib/prefabs/PrimitiveSpherePrefab.ts",
    "lib/lib/prefabs/PrimitiveTorusPrefab.ts",
    "lib/prefabs.ts",
    "lib/lib/text/AntiAliasType.ts",
    "lib/lib/text/BitmapFontChar.ts",
    "lib/lib/text/BitmapFontTable.ts",
    "lib/lib/text/Font.ts",
    "lib/lib/text/GridFitType.ts",
    "lib/lib/text/TesselatedFontChar.ts",
    "lib/lib/text/TesselatedFontTable.ts",
    "lib/lib/text/TextFieldAutoSize.ts",
    "lib/lib/text/TextFieldType.ts",
    "lib/lib/text/TextFormatAlign.ts",
    "lib/lib/text/TextFormat.ts",
    "lib/lib/text/TextInteractionMode.ts",
    "lib/lib/text/TextLineMetrics.ts",
    "lib/text.ts",
    "lib/lib/textures/MappingMode.ts",
    "lib/lib/textures/Single2DTexture.ts",
    "lib/lib/textures/SingleCubeTexture.ts",
    "lib/lib/textures/TextureBase.ts",
    "lib/textures.ts",
    "lib/lib/utils/Cast.ts",
    "lib/lib/utils/ElementsUtils.ts",
    "lib/utils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "adapters",
    "animators",
    "base",
    "bounds",
    "controllers",
    "display",
    "draw",
    "errors",
    "events",
    "factories",
    "graphics",
    "managers",
    "materials",
    "partition",
    "pick",
    "prefabs",
    "text",
    "textures",
    "utils",
    "View_1",
    "View",
    "PartitionBase",
    "registerAbstraction",
    "CameraNode",
    "Camera",
    "DirectionalLightNode",
    "DirectionalLight",
    "EntityNode",
    "Sprite",
    "Shape",
    "MovieClip",
    "Billboard",
    "LineSegment",
    "TextField",
    "TextFieldMultiRender",
    "LightProbeNode",
    "LightProbe",
    "PointLightNode",
    "PointLight",
    "SkyboxNode",
    "Skybox",
    "./lib/View",
    "./lib/adapters",
    "./lib/animators",
    "./lib/base",
    "./lib/bounds",
    "./lib/controllers",
    "./lib/display",
    "./lib/draw",
    "./lib/errors",
    "./lib/events",
    "./lib/factories",
    "./lib/graphics",
    "./lib/managers",
    "./lib/materials",
    "./lib/partition",
    "./lib/pick",
    "./lib/prefabs",
    "./lib/text",
    "./lib/textures",
    "./lib/utils",
    "awayjs-display/lib/IRenderer",
    "awayjs-display/lib/ITraverser",
    "awayjs-display/lib/View",
    "getTimer_1",
    "TouchPoint_1",
    "Scene_1",
    "RaycastPicker_1",
    "Camera_1",
    "CameraEvent_1",
    "DisplayObjectEvent_1",
    "RendererEvent_1",
    "MouseManager_1",
    "renderer",
    "scene",
    "camera",
    "_this",
    "this",
    "_width",
    "_height",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "RaycastPicker",
    "_pTouchPoints",
    "Array",
    "_onPartitionChangedDelegate",
    "event",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "Scene",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "position",
    "appendChild",
    "_mouseManager",
    "MouseManager",
    "getInstance",
    "registerView",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "_pMouseX",
    "enumerable",
    "configurable",
    "_pMouseY",
    "getLocalMouseX",
    "displayObject",
    "inverseSceneTransform",
    "transformVector",
    "unproject",
    "x",
    "getLocalMouseY",
    "y",
    "getLocalTouchPoints",
    "localPosition",
    "localTouchPoints",
    "len",
    "push",
    "TouchPoint",
    "id",
    "_pRenderer",
    "set",
    "value",
    "dispose",
    "removeEventListener",
    "RendererEvent",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "addEventListener",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "width",
    "height",
    "shareContext",
    "_shareContext",
    "_pCamera",
    "CameraEvent",
    "PROJECTION_CHANGED",
    "_pScene",
    "_iRegisterEntity",
    "DisplayObjectEvent",
    "PARTITION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "left",
    "top",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollision",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "getTimer",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "./base/TouchPoint",
    "./display/Camera",
    "./display/Scene",
    "./events/CameraEvent",
    "./events/DisplayObjectEvent",
    "./events/RendererEvent",
    "./managers/MouseManager",
    "./pick/RaycastPicker",
    "awayjs-core/lib/utils/getTimer",
    "undefined",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/adapters",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/data/ParticleData",
    "ParticleData",
    "default",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "create",
    "AssetBase_1",
    "AnimationNodeBase",
    "_super",
    "_pStateClass",
    "assetType",
    "AssetBase",
    "awayjs-core/lib/library/AssetBase",
    "awayjs-display/lib/animators",
    "ParticleData_1",
    "AnimationNodeBase_1",
    "./animators/data/ParticleData",
    "./animators/nodes/AnimationNodeBase",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/HierarchicalProperties",
    "HierarchicalProperties",
    "MOUSE_ENABLED",
    "VISIBLE",
    "MASK_ID",
    "MASKS",
    "COLOR_TRANSFORM",
    "SCENE_TRANSFORM",
    "ALL",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderable",
    "awayjs-display/lib/base/ISurface",
    "awayjs-display/lib/base/OrientationMode",
    "OrientationMode",
    "DEFAULT",
    "CAMERA_PLANE",
    "CAMERA_POSITION",
    "awayjs-display/lib/base/Style",
    "EventDispatcher_1",
    "StyleEvent_1",
    "Style",
    "_samplers",
    "_images",
    "_color",
    "_sampler",
    "_invalidateProperties",
    "_image",
    "_uvMatrix",
    "getImageAt",
    "texture",
    "index",
    "getSamplerAt",
    "addImageAt",
    "image",
    "addSamplerAt",
    "sampler",
    "removeImageAt",
    "removeSamplerAt",
    "dispatchEvent",
    "StyleEvent",
    "INVALIDATE_PROPERTIES",
    "EventDispatcher",
    "../events/StyleEvent",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-display/lib/base/Timeline",
    "HierarchicalProperties_1",
    "ColorTransform_1",
    "FrameScriptManager_1",
    "Timeline",
    "_functions",
    "_update_indices",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "update_mtx_all",
    "update_colortransform",
    "update_masks",
    "update_name",
    "update_button_name",
    "update_visibility",
    "update_blendmode",
    "update_rendermode",
    "update_mtx_scale_rot",
    "update_mtx_pos",
    "enable_maskmode",
    "remove_masks",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "FrameScriptManager",
    "frameScriptDebug",
    "functionname",
    "split",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "indexOf",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "adapter",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChildInstance",
    "this_clone",
    "clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "skip_script",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "k",
    "numChildren",
    "_children",
    "_depthID",
    "removeChildAt",
    "resetSessionIDs",
    "depth_sessionIDs",
    "getSessionIDDepths",
    "pass1",
    "child",
    "_sessionID",
    "isBlockedByScript",
    "transform",
    "clearMatrix3D",
    "clearColorTransform",
    "masks",
    "maskMode",
    "isVisibilityByScript",
    "visible",
    "key",
    "add_child_stream",
    "_addTimelineChildAt",
    "Number",
    "pass2",
    "update_cnt",
    "start_index",
    "end_index",
    "frame_command_idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "update_childs",
    "queueScript",
    "frameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "getDepthIndexInternal",
    "idx",
    "props_start_idx",
    "props_end_index",
    "getChildAtSessionID",
    "update_child_stream",
    "_blocked",
    "Boolean",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "matrix3D",
    "rawData",
    "properties_stream_f32_mtx_all",
    "invalidateComponents",
    "new_ct",
    "colorTransform",
    "ColorTransform",
    "properties_stream_f32_ct",
    "invalidateColorTransform",
    "mask",
    "numMasks",
    "properties_stream_int",
    "m",
    "properties_stream_strings",
    "registerScriptObject",
    "target",
    "addButtonListeners",
    "properties_stream_f32_mtx_scale_rot",
    "pInvalidateHierarchicalProperties",
    "properties_stream_f32_mtx_pos",
    "invalidatePosition",
    "console",
    "log",
    "../base/HierarchicalProperties",
    "../managers/FrameScriptManager",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-display/lib/base/TouchPoint",
    "awayjs-display/lib/base/Transform",
    "Matrix3D_1",
    "Matrix3DUtils_1",
    "Vector3D_1",
    "TransformEvent_1",
    "Transform",
    "_matrix3D",
    "Matrix3D",
    "_rotation",
    "Vector3D",
    "_skew",
    "_scale",
    "_components",
    "director",
    "Matrix3DUtils",
    "getForward",
    "negate",
    "_colorTransform",
    "val",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_matrix3DDirty",
    "_updateMatrix3D",
    "_pixelBounds",
    "_componentsDirty",
    "_updateComponents",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "z",
    "invalidateMatrix3D",
    "scaleTo",
    "sx",
    "sy",
    "sz",
    "skewTo",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "distance",
    "translateLocal",
    "Z_AXIS",
    "moveBackward",
    "moveLeft",
    "X_AXIS",
    "moveRight",
    "moveUp",
    "Y_AXIS",
    "moveDown",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "pitch",
    "angle",
    "rotate",
    "roll",
    "yaw",
    "axis",
    "prependRotation",
    "translate",
    "Math",
    "sqrt",
    "appendTranslation",
    "prependTranslation",
    "identity",
    "clear",
    "TransformEvent",
    "INVALIDATE_MATRIX3D",
    "INVALIDATE_COLOR_TRANSFORM",
    "recompose",
    "elements",
    "decompose",
    "vec",
    "../events/TransformEvent",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base",
    "AlignmentMode_1",
    "OrientationMode_1",
    "Style_1",
    "Timeline_1",
    "Transform_1",
    "./base/AlignmentMode",
    "./base/HierarchicalProperties",
    "./base/OrientationMode",
    "./base/Style",
    "./base/Timeline",
    "./base/Transform",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification_1",
    "ElementsType_1",
    "BoundingVolumeBase_1",
    "PrimitiveCubePrefab_1",
    "AxisAlignedBoundingBox",
    "entity",
    "_x",
    "_y",
    "_z",
    "_depth",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "PlaneClassification",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "getBox",
    "matrix",
    "sceneTransform",
    "hx",
    "hy",
    "hz",
    "depth",
    "cx",
    "cy",
    "cz",
    "raw",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "_pCreateBoundsPrimitive",
    "PrimitiveCubePrefab",
    "ElementsType",
    "LINE",
    "getNewObject",
    "BoundingVolumeBase",
    "../bounds/BoundingVolumeBase",
    "../graphics/ElementsType",
    "../prefabs/PrimitiveCubePrefab",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab_1",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "getSphere",
    "radius",
    "rx",
    "ry",
    "rz",
    "PrimitiveSpherePrefab",
    "../prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "AbstractMethodError_1",
    "AbstractMethodError",
    "invalidate",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "awayjs-display/lib/bounds",
    "AxisAlignedBoundingBox_1",
    "BoundingSphere_1",
    "BoundsType_1",
    "NullBounds_1",
    "./bounds/AxisAlignedBoundingBox",
    "./bounds/BoundingSphere",
    "./bounds/BoundingVolumeBase",
    "./bounds/BoundsType",
    "./bounds/NullBounds",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "invalidatePartitionBounds",
    "_iController",
    "update",
    "interpolate",
    "updateController",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "MathConsts_1",
    "ControllerBase_1",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "rotationX",
    "rotationY",
    "sin",
    "MathConsts",
    "DEGREES_TO_RADIANS",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "../controllers/ControllerBase",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController_1",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "HoverController",
    "../controllers/HoverController",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController_1",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "lookAt",
    "scenePosition",
    "LookAtController",
    "../controllers/LookAtController",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "SCENETRANSFORM_CHANGED",
    "../events/DisplayObjectEvent",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "copyFrom",
    "incrementBy",
    "awayjs-display/lib/controllers",
    "FirstPersonController_1",
    "FollowController_1",
    "SpringController_1",
    "./controllers/ControllerBase",
    "./controllers/FirstPersonController",
    "./controllers/FollowController",
    "./controllers/HoverController",
    "./controllers/LookAtController",
    "./controllers/SpringController",
    "awayjs-display/lib/display/Billboard",
    "Rectangle_1",
    "DisplayObject_1",
    "RenderableEvent_1",
    "SurfaceEvent_1",
    "DefaultMaterialManager_1",
    "material",
    "pixelSnapping",
    "smoothing",
    "_pIsEntity",
    "onInvalidateTextureDelegate",
    "onInvalidateTexture",
    "_onInvalidatePropertiesDelegate",
    "_onInvalidateProperties",
    "_updateDimensions",
    "_boundsType",
    "_animator",
    "_billboardRect",
    "_billboardHeight",
    "_billboardWidth",
    "_material",
    "iRemoveOwner",
    "SurfaceEvent",
    "INVALIDATE_TEXTURE",
    "iAddOwner",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "_style",
    "_iTestCollision",
    "pickingCollision",
    "pickingCollider",
    "testBillboardCollision",
    "_acceptTraverser",
    "traverser",
    "applyRenderable",
    "getTextureAt",
    "DefaultMaterialManager",
    "getDefaultSampler",
    "imageRect",
    "rect",
    "frameRect",
    "Rectangle",
    "_pInvalidateBounds",
    "invalidateElements",
    "RenderableEvent",
    "INVALIDATE_ELEMENTS",
    "invalidateSurface",
    "INVALIDATE_SURFACE",
    "DisplayObject",
    "../bounds/BoundsType",
    "../display/DisplayObject",
    "../events/RenderableEvent",
    "../events/SurfaceEvent",
    "../managers/DefaultMaterialManager",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/display/Camera",
    "Plane3D_1",
    "ProjectionEvent_1",
    "PerspectiveProjection_1",
    "DisplayObjectContainer_1",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "PerspectiveProjection",
    "ProjectionEvent",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "Plane3D",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "viewProjection",
    "invLen",
    "bitFlag",
    "_hierarchicalPropsDirty",
    "append",
    "nX",
    "nY",
    "_applyRenderer",
    "_iSourcePrefab",
    "_iValidate",
    "DisplayObjectContainer",
    "../display/DisplayObjectContainer",
    "../events/CameraEvent",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/display/DirectionalLight",
    "LightBase_1",
    "DirectionalShadowMapper_1",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "pUpdateSceneTransform",
    "_direction",
    "_tmpLookAt",
    "copyColumnTo",
    "normalize",
    "pCreateShadowMapper",
    "DirectionalShadowMapper",
    "iGetObjectProjectionMatrix",
    "cameraTransform",
    "RAW_DATA_CONTAINER",
    "getRenderSceneTransform",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "copyRawDataFrom",
    "prepend",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "LightBase",
    "../display/LightBase",
    "../materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/display/DisplayObjectContainer",
    "ArgumentError_1",
    "RangeError_1",
    "_mouseChildren",
    "_depth_childs",
    "_nextHighestDepth",
    "_updateMouseEnabled",
    "addChild",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "ArgumentError",
    "_pParent",
    "removeChildAtInternal",
    "getChildIndex",
    "iSetParent",
    "_invalidateChildren",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "arguments",
    "newInstance",
    "copyTo",
    "mouseChildren",
    "contains",
    "disposeValues",
    "removeChild",
    "getChildAtDepth",
    "getChildAt",
    "RangeError",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "point",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "box",
    "setBoundIdentity",
    "_iSetScene",
    "splice",
    "_hitTestPointInternal",
    "shapeFlag",
    "masksFlag",
    "hitTestPoint",
    "_updateMaskMode",
    "_pIsContainer",
    "_pImplicitPartition",
    "_iUnregisterEntity",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/display/DisplayObject",
    "Box_1",
    "Sphere_1",
    "Point_1",
    "PickingCollision_1",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_orientationMatrix",
    "_inheritColorTransform",
    "_maskMode",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "zOffset",
    "_transform",
    "_onInvalidateMatrix3D",
    "_onInvalidateColorTransform",
    "_adapter",
    "alphaMultiplier",
    "scaleZ",
    "_setScaleZ",
    "_eulers",
    "rotationZ",
    "scaleY",
    "_setScaleY",
    "_inverseSceneTransformDirty",
    "invert",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_iAssignedPartition",
    "_pivot",
    "pivot",
    "_pivotScale",
    "_root",
    "rotation",
    "RADIANS_TO_DEGREES",
    "scale",
    "_setScaleX",
    "skew",
    "skewX",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "_shaderPickingDetails",
    "_debugVisible",
    "_explicitMasks",
    "scaleX",
    "type",
    "listener",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "_listenToSceneTransformChanged",
    "boundsType",
    "mouseEnabled",
    "extra",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "transformBox",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "setTo",
    "Point",
    "globalToLocal3D",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "maskHit",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "subtract",
    "crossProduct",
    "localToGlobal3D",
    "movePivot",
    "reset",
    "comps",
    "hasEventListener",
    "_pickingCollision",
    "PickingCollision",
    "propDirty",
    "newPropDirty",
    "isEntity",
    "queueDispatch",
    "_sceneTransformChanged",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iRegisterPartition",
    "_sceneChanged",
    "_iIsRoot",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iInternalUpdate",
    "_iIsVisible",
    "_updateVisible",
    "_iAssignedMaskId",
    "_updateMaskId",
    "_iAssignedMasks",
    "_updateMasks",
    "_pImplicitMasks",
    "_iMasksConfig",
    "_iAssignedColorTransform",
    "_updateColorTransform",
    "_pImplicitColorTransform",
    "_iIsMouseEnabled",
    "collector",
    "Box",
    "Sphere",
    "concat",
    "numLayers",
    "implicitChildren",
    "implicitChildIds",
    "j",
    "INVALIDATE_PARTITION_BOUNDS",
    "../base/AlignmentMode",
    "../base/OrientationMode",
    "../base/Transform",
    "../pick/PickingCollision",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-display/lib/display/IEntity",
    "awayjs-display/lib/display/LightBase",
    "LightEvent_1",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_shadowsEnabled",
    "_shadowMapper",
    "light",
    "LightEvent",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "../events/LightEvent",
    "awayjs-display/lib/display/LightProbe",
    "SamplerCube_1",
    "ErrorBase_1",
    "diffuseMap",
    "specularMap",
    "diffuseSampler",
    "SamplerCube",
    "specularSampler",
    "ErrorBase",
    "awayjs-core/lib/errors/ErrorBase",
    "awayjs-core/lib/image/SamplerCube",
    "awayjs-display/lib/display/LineSegment",
    "startPosition",
    "endPosition",
    "thickness",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/display/LoaderContainer",
    "AssetLibraryBundle_1",
    "Loader_1",
    "AssetEvent_1",
    "URLLoaderEvent_1",
    "LoaderEvent_1",
    "ParserEvent_1",
    "LoaderContainer",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadCompleteDelegate",
    "onLoadComplete",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_content",
    "close",
    "_loader",
    "lib",
    "AssetLibraryBundle",
    "disposeLoader",
    "_disposeLoader",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoader",
    "loadData",
    "data",
    "getLoader",
    "Loader",
    "LoaderEvent",
    "LOAD_COMPLETE",
    "AssetEvent",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "stop",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "URLLoaderEvent",
    "LOAD_ERROR",
    "ParserEvent",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/events/URLLoaderEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/Loader",
    "awayjs-display/lib/display/MovieClip",
    "Sprite_1",
    "TextField_1",
    "MouseEvent_1",
    "timeline",
    "_isButton",
    "_currentFrameIndex",
    "_isPlaying",
    "_isInit",
    "_potentialInstances",
    "_depth_sessionIDs",
    "_sessionID_childs",
    "loop",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "_movieClips",
    "reset_textclones",
    "isAsset",
    "numFrames",
    "freeFromScript",
    "_skipAdvance",
    "MouseEvent",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "execute_dispose",
    "pop",
    "logHierarchy",
    "printHierarchyName",
    "instance",
    "add_child_to_dispose",
    "../base/Timeline",
    "../display/Sprite",
    "../display/TextField",
    "../events/MouseEvent",
    "awayjs-display/lib/display/PointLight",
    "CubeMapShadowMapper_1",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "CubeMapShadowMapper",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "../materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/display/Scene",
    "BasicPartition_1",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "BasicPartition",
    "traversePartitions",
    "traverse",
    "../partition/BasicPartition",
    "awayjs-display/lib/display/Shape",
    "Graphics_1",
    "_tempPoint",
    "_onGraphicsInvalidateDelegate",
    "_onGraphicsInvalidate",
    "_graphics",
    "Graphics",
    "INVALIDATE",
    "animator",
    "removeOwner",
    "addOwner",
    "bakeTransformations",
    "applyTransformation",
    "_shapes",
    "shape",
    "union",
    "getBoxBounds",
    "_center",
    "getSphereBounds",
    "count",
    "acceptTraverser",
    "local",
    "../graphics/Graphics",
    "awayjs-display/lib/display/Skybox",
    "BlendMode_1",
    "SingleCubeTexture_1",
    "_textures",
    "_pAlphaThreshold",
    "_pBlendMode",
    "BlendMode",
    "NORMAL",
    "_curves",
    "_imageRect",
    "_onTextureInvalidateDelegate",
    "onTextureInvalidate",
    "_owners",
    "SingleCubeTexture",
    "invalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_texture",
    "removeTexture",
    "addTexture",
    "getNumTextures",
    "INVALIDATE_PASSES",
    "../base/Style",
    "../textures/SingleCubeTexture",
    "awayjs-core/lib/image/BlendMode",
    "awayjs-display/lib/display/Sprite",
    "_sprites",
    "sprite",
    "awayjs-display/lib/display/TextFieldMultiRender",
    "AttributesView_1",
    "Float2Attributes_1",
    "Byte4Attributes_1",
    "Matrix_1",
    "Sampler2D_1",
    "TextFieldType_1",
    "TriangleElements_1",
    "BitmapFontTable_1",
    "Single2DTexture_1",
    "TesselatedFontTable_1",
    "BasicMaterial_1",
    "_explicitFormats",
    "_explicitFormatsRanges",
    "_line_indices",
    "_text",
    "TextFieldType",
    "STATIC",
    "setFormatForRange",
    "start",
    "end",
    "format",
    "is_added",
    "new_formatslist",
    "new_formatsranges",
    "new_cnt",
    "getFormatAtChar",
    "char_pos",
    "active_format",
    "textFormat",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "_textGraphicsDirty",
    "_textFormat",
    "reConstruct",
    "_textColor",
    "color",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "_textElements",
    "_textFields",
    "_textGraphic",
    "useCanvas2dhack",
    "activeFormat",
    "newFormat",
    "textlines",
    "maxlineWidth",
    "textWidth",
    "leftMargin",
    "rightMargin",
    "indent",
    "tl_char_codes",
    "tl_char_widths",
    "tl_char_formats",
    "tl_width",
    "tl_height",
    "tl_cnt",
    "w",
    "tl",
    "words",
    "char_cnt",
    "char_width",
    "numVertices",
    "word_width",
    "char_widths",
    "char_formats",
    "max_word_height",
    "font_table",
    "initFontSize",
    "size",
    "lineHeight",
    "getLineHeight",
    "getCharWidth",
    "charCodeAt",
    "getCharVertCnt",
    "tl_startx",
    "x_offset",
    "justify_addion",
    "align",
    "textHeight",
    "TesselatedFontTable",
    "tess_fontTable",
    "y_offset",
    "char_scale",
    "vertices",
    "Float32Array",
    "this_char",
    "getChar",
    "_size_multiply",
    "buffer",
    "concatenatedBuffer",
    "attributesView",
    "AttributesView",
    "vertexBuffer",
    "attributesBuffer",
    "TriangleElements",
    "setPositions",
    "Float2Attributes",
    "setCustomAttributes",
    "Byte4Attributes",
    "addGraphic",
    "Sampler2D",
    "uvMatrix",
    "Matrix",
    "uv_values",
    "animateUVs",
    "BitmapFontTable",
    "bitmap_fontTable",
    "vert_cnt",
    "char_data",
    "getCharData",
    "setUVs",
    "basic_mat",
    "BasicMaterial",
    "Single2DTexture",
    "get_page",
    "bothSides",
    "alphaBlending",
    "canvas",
    "getElementById",
    "ctx",
    "getContext",
    "window",
    "innerWidth",
    "innerHeight",
    "fillStyle",
    "fill",
    "getCharDataCanvas",
    "drawImage",
    "getCanvas",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "../graphics/TriangleElements",
    "../materials/BasicMaterial",
    "../text/BitmapFontTable",
    "../text/TesselatedFontTable",
    "../text/TextFieldType",
    "../textures/Single2DTexture",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-display/lib/display/TextField",
    "thisFormat",
    "fallbackFormat",
    "fallback_font_table",
    "get_font_em_size",
    "prev_char",
    "whitespace_width",
    "get_whitespace_width",
    "letterSpacing",
    "final_lines_chars",
    "final_lines_char_scale",
    "final_lines_width",
    "final_lines_justify_bool",
    "final_lines_justify",
    "word_chars",
    "word_chars_scale",
    "c_cnt",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "fw",
    "ascent",
    "descent",
    "leading",
    "awayjs-display/lib/display",
    "Billboard_1",
    "DirectionalLight_1",
    "LightProbe_1",
    "LineSegment_1",
    "LoaderContainer_1",
    "MovieClip_1",
    "PointLight_1",
    "Shape_1",
    "Skybox_1",
    "TextFieldMultiRender_1",
    "./display/Billboard",
    "./display/DirectionalLight",
    "./display/DisplayObject",
    "./display/DisplayObjectContainer",
    "./display/LightBase",
    "./display/LightProbe",
    "./display/LineSegment",
    "./display/LoaderContainer",
    "./display/MovieClip",
    "./display/PointLight",
    "./display/Shape",
    "./display/Skybox",
    "./display/Sprite",
    "./display/TextField",
    "./display/TextFieldMultiRender",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/DrawMode",
    "DrawMode",
    "BOTH",
    "STROKE",
    "FILL",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsFactoryFills",
    "GraphicsPathCommand_1",
    "Float3Attributes_1",
    "GraphicsFactoryHelper_1",
    "GraphicsFactoryFills",
    "draw_pathes",
    "targetGraphic",
    "queued_fill_pathes",
    "cp",
    "one_path",
    "contour_commands",
    "commands",
    "contour_data",
    "data_cnt",
    "draw_direction",
    "contours_vertices",
    "final_vert_list",
    "final_vert_cnt",
    "lastPoint",
    "last_dir_vec",
    "end_point",
    "new_dir",
    "new_dir_1",
    "new_dir_2",
    "dir_delta",
    "last_direction",
    "tmp_dir_point",
    "GraphicsPathCommand",
    "LINE_TO",
    "CURVE_TO",
    "atan2",
    "MOVE_TO",
    "control_x",
    "control_y",
    "end_x",
    "end_y",
    "curve_direction",
    "curve_attr_1",
    "GraphicsFactoryHelper",
    "isClockWiseXY",
    "CUBIC_CURVE",
    "verts",
    "all_verts",
    "vertIndicess",
    "elems",
    "verticesF32",
    "_tess_obj",
    "addContour",
    "tesselate",
    "getVertices",
    "getElements",
    "numVerts",
    "numElems",
    "p1",
    "p2",
    "p3",
    "Float3Attributes",
    "getDefaultMaterial",
    "useColorTransform",
    "curves",
    "thisGraphic",
    "../draw/GraphicsFactoryHelper",
    "../draw/GraphicsPathCommand",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/draw/GraphicsFactoryHelper",
    "CapsStyle_1",
    "point1x",
    "point1y",
    "point2x",
    "point2y",
    "point3x",
    "point3y",
    "num",
    "getSign",
    "bx",
    "by",
    "pointInTri",
    "xx",
    "xy",
    "b1",
    "b2",
    "b3",
    "getControlXForCurveX",
    "getControlYForCurveY",
    "drawPoint",
    "startX",
    "startY",
    "addTriangle",
    "controlX",
    "controlY",
    "endX",
    "endY",
    "tri_type",
    "createCap",
    "start_le",
    "start_ri",
    "dir_vec",
    "capstyle",
    "cap_position",
    "tmp1_x",
    "tmp1_y",
    "tmp2_x",
    "tmp2_y",
    "getLineFormularData",
    "tmp_x",
    "tmp_y",
    "return_point",
    "getQuadricBezierPosition",
    "control",
    "xt",
    "subdivideCurve",
    "startx",
    "starty",
    "endx",
    "endy",
    "startx2",
    "starty2",
    "cx2",
    "cy2",
    "endx2",
    "endy2",
    "array_out",
    "array2_out",
    "angle_1",
    "angle_2",
    "angle_delta",
    "c1x",
    "c1y",
    "c2x",
    "c2y",
    "c1x2",
    "c1y2",
    "c2x2",
    "c2y2",
    "ax2",
    "ay2",
    "../draw/CapsStyle",
    "awayjs-display/lib/draw/GraphicsFactoryStrokes",
    "JointStyle_1",
    "GraphicsFactoryStrokes",
    "queued_stroke_pathes",
    "strokeStyle",
    "start_point",
    "start_left",
    "start_right",
    "ctr_left",
    "ctr_right",
    "ctr_left2",
    "ctr_right2",
    "end_left",
    "end_right",
    "tmp_point",
    "tmp_point2",
    "tmp_point3",
    "closed",
    "stroke",
    "tessVerts",
    "new_cmds",
    "new_pnts",
    "new_cmds_cnt",
    "new_pnts_cnt",
    "prev_normal",
    "le_point",
    "curve_end_point",
    "ri_point",
    "ctr_point",
    "half_thickness",
    "add_segment",
    "half_angle",
    "merged_pnt_ri",
    "merged_pnt_le",
    "contour_le",
    "contour_prev_le",
    "contour_ri",
    "contour_prev_ri",
    "addJoints",
    "jointstyle",
    "JointStyle",
    "MITER",
    "distance_miter",
    "miter_limit",
    "BUILD_JOINT",
    "BUILD_ROUND_JOINT",
    "NO_OP",
    "length1",
    "length2",
    "length_calc",
    "dirNumber",
    "lengthpos",
    "curve_x",
    "curve_y",
    "curve_2x",
    "curve_2y",
    "subdivided",
    "subdivided2",
    "sc",
    "../draw/JointStyle",
    "awayjs-display/lib/draw/GraphicsFillStyle",
    "GraphicsFillStyle",
    "alpha",
    "_alpha",
    "data_type",
    "awayjs-display/lib/draw/GraphicsPathCommand",
    "WIDE_LINE_TO",
    "WIDE_MOVE_TO",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/GraphicsPath",
    "GraphicsPathWinding_1",
    "GraphicsFillStyle_1",
    "GraphicsStrokeStyle_1",
    "GraphicsPath",
    "winding_rule",
    "_data",
    "_commands",
    "_startPoint",
    "_cur_point",
    "_winding_rule",
    "_winding_directions",
    "GraphicsStrokeStyle",
    "curveTo",
    "anchorX",
    "anchorY",
    "lineTo",
    "wideLineTo",
    "wideMoveTo",
    "../draw/GraphicsFillStyle",
    "../draw/GraphicsPathWinding",
    "../draw/GraphicsStrokeStyle",
    "awayjs-display/lib/draw/GraphicsStrokeStyle",
    "_thickness",
    "_jointstyle",
    "_capstyle",
    "_miter_limit",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "BEVEL",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/draw",
    "GradientType_1",
    "GraphicsFactoryFills_1",
    "GraphicsFactoryStrokes_1",
    "GraphicsPath_1",
    "InterpolationMethod_1",
    "LineScaleMode_1",
    "PixelSnapping_1",
    "SpreadMethod_1",
    "TriangleCulling_1",
    "./draw/CapsStyle",
    "./draw/GradientType",
    "./draw/GraphicsFactoryFills",
    "./draw/GraphicsFactoryHelper",
    "./draw/GraphicsFactoryStrokes",
    "./draw/GraphicsFillStyle",
    "./draw/GraphicsPath",
    "./draw/GraphicsPathCommand",
    "./draw/GraphicsPathWinding",
    "./draw/GraphicsStrokeStyle",
    "./draw/InterpolationMethod",
    "./draw/JointStyle",
    "./draw/LineScaleMode",
    "./draw/PixelSnapping",
    "./draw/SpreadMethod",
    "./draw/TriangleCulling",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "awayjs-display/lib/errors",
    "CastError_1",
    "./errors/CastError",
    "awayjs-display/lib/events/CameraEvent",
    "EventBase_1",
    "_camera",
    "EventBase",
    "awayjs-core/lib/events/EventBase",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "object",
    "_object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/ElementsEvent",
    "ElementsEvent",
    "_attributesView",
    "INVALIDATE_INDICES",
    "CLEAR_INDICES",
    "INVALIDATE_VERTICES",
    "CLEAR_VERTICES",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/events/MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "renderable",
    "uv",
    "normal",
    "elementIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableEvent",
    "_renderable",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "NaN",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "awayjs-display/lib/events/StyleEvent",
    "awayjs-display/lib/events/SurfaceEvent",
    "surface",
    "_surface",
    "INVALIDATE_ANIMATION",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/events/TransformEvent",
    "awayjs-display/lib/events",
    "ElementsEvent_1",
    "ResizeEvent_1",
    "TouchEvent_1",
    "./events/ElementsEvent",
    "./events/LightEvent",
    "./events/MouseEvent",
    "./events/RenderableEvent",
    "./events/ResizeEvent",
    "./events/StyleEvent",
    "./events/SurfaceEvent",
    "./events/TouchEvent",
    "./events/TransformEvent",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/factories",
    "awayjs-display/lib/graphics/ElementsBase",
    "Short3Attributes_1",
    "ElementsBase",
    "_customAttributesNames",
    "_customAttributes",
    "_numElements",
    "_numVertices",
    "_verticesDirty",
    "_invalidateVertices",
    "_concatenatedBuffer",
    "_indices",
    "getCustomAtributesNames",
    "getCustomAtributes",
    "indices",
    "setIndices",
    "values",
    "offset",
    "Short3Attributes",
    "clearIndices",
    "invalidateIndices",
    "clearVertices",
    "invalidateVertices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "center",
    "_invalidateIndices",
    "../events/ElementsEvent",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/graphics/ElementsType",
    "TRIANGLE",
    "awayjs-display/lib/graphics/Graphics",
    "Graphic_1",
    "PartialImplementationError_1",
    "_current_position",
    "_queued_fill_pathes",
    "_queued_stroke_pathes",
    "_active_fill_path",
    "_active_stroke_path",
    "_onInvalidateVerticesDelegate",
    "_onInvalidateVertices",
    "graphic",
    "_iInvalidateSurfaces",
    "_iGetExplicitMaterial",
    "Graphic",
    "_available",
    "_iIndex",
    "parent",
    "removeGraphic",
    "getGraphicAt",
    "particles",
    "numParticles",
    "_iGetExplicitStyle",
    "_boxBounds",
    "setEmpty",
    "positions",
    "draw_fills",
    "draw_strokes",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "beginGradientFill",
    "colors",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "PartialImplementationError",
    "drawCircle",
    "radius2",
    "degree",
    "PI",
    "degree2",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "drawTriangles",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "miterLimit",
    "../draw/GraphicsFactoryFills",
    "../draw/GraphicsFactoryStrokes",
    "../draw/GraphicsPath",
    "../graphics/Graphic",
    "awayjs-core/lib/errors/PartialImplementationError",
    "awayjs-display/lib/graphics/Graphic",
    "_elements",
    "awayjs-display/lib/graphics/HitTestCache",
    "HitTestCache",
    "cells",
    "lastCollisionIndex",
    "awayjs-display/lib/graphics/LineElements",
    "Float1Attributes_1",
    "ElementsBase_1",
    "ElementsUtils_1",
    "LineElements",
    "_positions",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "Float1Attributes",
    "floor",
    "Uint8Array",
    "ElementsUtils",
    "generateColors",
    "testLineCollision",
    "../graphics/ElementsBase",
    "../utils/ElementsUtils",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/graphics/TriangleElements",
    "apply",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "hitTestCache",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_uvs",
    "_condensedIndexLookUp",
    "getTriangleGraphicsBoxBounds",
    "getTriangleGraphicsSphereBounds",
    "hitTestTriangleElements",
    "generateNormals",
    "faceNormals",
    "generateTangents",
    "faceTangents",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "uvs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "numElements",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/graphics",
    "LineElements_1",
    "./graphics/ElementsBase",
    "./graphics/ElementsType",
    "./graphics/Graphic",
    "./graphics/Graphics",
    "./graphics/LineElements",
    "./graphics/TriangleElements",
    "awayjs-display/lib/managers/DefaultFontManager",
    "DefaultFontManager",
    "getDefaultFontTable",
    "_default_font_table",
    "createDefaultFontTable",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D_1",
    "BitmapImageCube_1",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "getDefaultImage2D",
    "_defaultBitmapImage2D",
    "createDefaultImage2D",
    "getDefaultImageCube",
    "_defaultBitmapImageCube",
    "createDefaultImageCube",
    "_defaultSampler2D",
    "createDefaultSampler2D",
    "BitmapImageCube",
    "BitmapImage2D",
    "setPixel",
    "../display/Skybox",
    "../graphics/LineElements",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-display/lib/managers/FrameScriptManager",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "_queued_dispose",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "awayjs-display/lib/managers/MouseManager",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collision",
    "altKey",
    "clientX",
    "changedTouches",
    "clientY",
    "preventDefault",
    "updateColliders",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "touches",
    "touch",
    "identifier",
    "../base/TouchPoint",
    "awayjs-display/lib/managers/TouchManager",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollisionFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "collider",
    "touchPointID",
    "../events/TouchEvent",
    "awayjs-display/lib/managers",
    "TouchManager_1",
    "./managers/DefaultMaterialManager",
    "./managers/FrameScriptManager",
    "./managers/TouchManager",
    "awayjs-display/lib/materials/BasicMaterial",
    "Image2D_1",
    "MaterialBase_1",
    "imageColor",
    "_preserveAlpha",
    "Image2D",
    "invalidateTexture",
    "MaterialBase",
    "../materials/MaterialBase",
    "awayjs-core/lib/image/Image2D",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "awayjs-display/lib/materials/MaterialBase",
    "ImageBase_1",
    "_pUseColorTransform",
    "_alphaBlending",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "ImageBase",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "invalidateSurfaces",
    "addTextureAt",
    "awayjs-core/lib/image/ImageBase",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "LightPickerBase_1",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "shadowsEnabled",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "../../display/DirectionalLight",
    "../../display/LightProbe",
    "../../display/PointLight",
    "../../events/LightEvent",
    "../../materials/lightpickers/LightPickerBase",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection_1",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "FreeMatrixProjection",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "cullPlanes",
    "_pCullPlanes",
    "_iRenderCascades",
    "_pOverallDepthCamera",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "appendScale",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "../../display/Camera",
    "../../materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "ImageCube_1",
    "ShadowMapperBase_1",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "ImageCube",
    "maxDistance",
    "_pLight",
    "_iRender",
    "imageCube",
    "ShadowMapperBase",
    "../../materials/shadowmappers/ShadowMapperBase",
    "../../textures/SingleCubeTexture",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "../../textures/Single2DTexture",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_autoUpdateShadows",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "awayjs-display/lib/materials",
    "StaticLightPicker_1",
    "CascadeShadowMapper_1",
    "NearDirectionalShadowMapper_1",
    "LightSources_1",
    "./materials/BasicMaterial",
    "./materials/LightSources",
    "./materials/MaterialBase",
    "./materials/lightpickers/LightPickerBase",
    "./materials/lightpickers/StaticLightPicker",
    "./materials/shadowmappers/CascadeShadowMapper",
    "./materials/shadowmappers/CubeMapShadowMapper",
    "./materials/shadowmappers/DirectionalShadowMapper",
    "./materials/shadowmappers/NearDirectionalShadowMapper",
    "./materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/partition/BasicPartition",
    "NodeBase_1",
    "PartitionBase_1",
    "_rootNode",
    "NodeBase",
    "../partition/NodeBase",
    "../partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode_1",
    "../partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "enterNode",
    "applyDirectionalLight",
    "_displayObject",
    "isCastingShadow",
    "awayjs-display/lib/partition/DisplayObjectNode",
    "AbstractionBase_1",
    "DisplayObjectNode",
    "pool",
    "numEntities",
    "isSceneGraphNode",
    "_boundsDirty",
    "_onInvalidatePartitionBoundsDelegate",
    "_onInvalidatePartitionBounds",
    "debugVisible",
    "_updateBounds",
    "isMask",
    "onClear",
    "onInvalidate",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "isRenderable",
    "AbstractionBase",
    "../bounds/AxisAlignedBoundingBox",
    "../bounds/BoundingSphere",
    "../bounds/NullBounds",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-display/lib/partition/EntityNode",
    "DisplayObjectNode_1",
    "_maskPosition",
    "_partition",
    "globalRayPosition",
    "globalRayDirection",
    "isIntersectingMasks",
    "_iPickingCollision",
    "rayOriginIsInsideBounds",
    "_isRenderable",
    "applyEntity",
    "iMarkForUpdate",
    "children",
    "layerHit",
    "../partition/DisplayObjectNode",
    "awayjs-display/lib/partition/IContainerNode",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/IEntityNodeClass",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "applyLightProbe",
    "awayjs-display/lib/partition/NodeBase",
    "_pChildNodes",
    "_pNumChildNodes",
    "iAddNode",
    "node",
    "iRemoveNode",
    "awayjs-display/lib/partition/PartitionBase",
    "_abstractionPool",
    "_updatesMade",
    "getAbstraction",
    "_abstractionClassPool",
    "clearAbstraction",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "findParentForNode",
    "targetNode",
    "entityNodeClass",
    "assetClass",
    "awayjs-display/lib/partition/PointLightNode",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphNode",
    "SceneGraphNode",
    "_numNodes",
    "_childDepths",
    "_numMasks",
    "_childMasks",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "SceneGraphNode_1",
    "SceneGraphPartition",
    "_sceneGraphNodePool",
    "SceneGraphNodePool",
    "isContainer",
    "displayObjectContainer",
    "../partition/SceneGraphNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/partition",
    "CameraNode_1",
    "DirectionalLightNode_1",
    "LightProbeNode_1",
    "PointLightNode_1",
    "SceneGraphPartition_1",
    "SkyboxNode_1",
    "./partition/BasicPartition",
    "./partition/CameraNode",
    "./partition/DirectionalLightNode",
    "./partition/DisplayObjectNode",
    "./partition/EntityNode",
    "./partition/LightProbeNode",
    "./partition/NodeBase",
    "./partition/PartitionBase",
    "./partition/PointLightNode",
    "./partition/SceneGraphNode",
    "./partition/SceneGraphPartition",
    "./partition/SkyboxNode",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleElements",
    "i0",
    "i1",
    "i2",
    "nx",
    "ny",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "posDim",
    "posStride",
    "stride",
    "uvStride",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "lineElements",
    "awayjs-display/lib/pick/PickingCollision",
    "awayjs-display/lib/pick/RaycastPicker",
    "_entities",
    "onlyMouseEnabled",
    "_rayPosition",
    "_rayDirection",
    "_view",
    "getSceneCollision",
    "getPickingCollision",
    "setIgnoreList",
    "entities",
    "_ignoredEntities",
    "isIgnored",
    "sortOnNearT",
    "entity1",
    "entity2",
    "sort",
    "_bestCollision",
    "_testCollision",
    "_testCollider",
    "MAX_VALUE",
    "updatePosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "applySkybox",
    "awayjs-display/lib/pick",
    "JSPickingCollider_1",
    "./pick/JSPickingCollider",
    "./pick/PickingCollision",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase_1",
    "PrimitiveCapsulePrefab",
    "elementsType",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidatePrimitive",
    "_pInvalidateUVs",
    "_pBuildGraphics",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "numIndices",
    "triangleGraphics",
    "horangle",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "_scaleU",
    "_scaleV",
    "PrimitivePrefabBase",
    "../prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab_1",
    "PrimitiveConePrefab",
    "_pBottomRadius",
    "PrimitiveCylinderPrefab",
    "../prefabs/PrimitiveCylinderPrefab",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGraphics",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "AttributesBuffer_1",
    "PrefabBase_1",
    "_primitiveDirty",
    "_uvDirty",
    "_elementsType",
    "AttributesBuffer",
    "updateGraphics",
    "updateUVs",
    "../prefabs/PrefabBase",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/prefabs",
    "PrimitiveCapsulePrefab_1",
    "PrimitiveConePrefab_1",
    "PrimitivePlanePrefab_1",
    "PrimitivePolygonPrefab_1",
    "PrimitiveTorusPrefab_1",
    "./prefabs/PrefabBase",
    "./prefabs/PrimitiveCapsulePrefab",
    "./prefabs/PrimitiveConePrefab",
    "./prefabs/PrimitiveCubePrefab",
    "./prefabs/PrimitiveCylinderPrefab",
    "./prefabs/PrimitivePlanePrefab",
    "./prefabs/PrimitivePolygonPrefab",
    "./prefabs/PrimitivePrefabBase",
    "./prefabs/PrimitiveSpherePrefab",
    "./prefabs/PrimitiveTorusPrefab",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/BitmapFontChar",
    "BitmapFontChar",
    "xoff",
    "yoff",
    "xadv",
    "page",
    "channel",
    "x_advance",
    "awayjs-display/lib/text/BitmapFontTable",
    "BitmapFontChar_1",
    "_font_chars",
    "_bitmap_pages",
    "_font_chars_dic",
    "_ascent",
    "_descent",
    "_current_size",
    "_init_size",
    "font_size",
    "char_code",
    "add_page",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "setChar",
    "bitmap_font_char",
    "../text/BitmapFontChar",
    "awayjs-display/lib/text/Font",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/IFontTable",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "awayjs-display/lib/text/TesselatedFontTable",
    "TesselatedFontChar_1",
    "tesselated_font_char",
    "../text/TesselatedFontChar",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "awayjs-display/lib/text",
    "AntiAliasType_1",
    "Font_1",
    "GridFitType_1",
    "TextFieldAutoSize_1",
    "TextFormat_1",
    "TextFormatAlign_1",
    "TextInteractionMode_1",
    "TextLineMetrics_1",
    "./text/AntiAliasType",
    "./text/BitmapFontChar",
    "./text/BitmapFontTable",
    "./text/Font",
    "./text/GridFitType",
    "./text/TesselatedFontChar",
    "./text/TesselatedFontTable",
    "./text/TextFieldAutoSize",
    "./text/TextFieldType",
    "./text/TextFormat",
    "./text/TextFormatAlign",
    "./text/TextInteractionMode",
    "./text/TextLineMetrics",
    "awayjs-display/lib/textures/MappingMode",
    "MappingMode",
    "LINEAR_GRADIENT",
    "RADIAL_GRADIENT",
    "awayjs-display/lib/textures/Single2DTexture",
    "ImageUtils_1",
    "MappingMode_1",
    "TextureBase_1",
    "setNumImages",
    "_mappingMode",
    "setSamplerAt",
    "ImageUtils",
    "isImage2DValid",
    "setImageAt",
    "TextureBase",
    "../textures/MappingMode",
    "../textures/TextureBase",
    "awayjs-core/lib/utils/ImageUtils",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "awayjs-display/lib/textures/TextureBase",
    "_numImages",
    "getNumImages",
    "awayjs-display/lib/textures",
    "./textures/MappingMode",
    "./textures/Single2DTexture",
    "./textures/SingleCubeTexture",
    "./textures/TextureBase",
    "awayjs-display/lib/utils/Cast",
    "ByteArray_1",
    "Cast",
    "string",
    "byteArray",
    "ByteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "bitmapTexture",
    "bmd",
    "../errors/CastError",
    "awayjs-core/lib/utils/ByteArray",
    "awayjs-display/lib/utils/ElementsUtils",
    "Float4Attributes_1",
    "HitTestCache_1",
    "indexAttributes",
    "positionAttributes",
    "faceNormalAttributes",
    "Float4Attributes",
    "indexDim",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "normalAttributes",
    "normalStride",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "faceTangentAttributes",
    "useFaceWeights",
    "index3",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "tangentAttributes",
    "tangentStride",
    "weight",
    "f4",
    "colorAttributes",
    "colorStride",
    "scaleA",
    "scaleB",
    "scaleC",
    "output",
    "scaleArray",
    "outputStride",
    "outputDim",
    "positionStride",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "bufferView",
    "splitVerts",
    "curveAttributes",
    "curveStride",
    "id0",
    "id1",
    "id2",
    "precheck",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "uu",
    "vv",
    "divisions",
    "conversionX",
    "conversionY",
    "minx",
    "miny",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "nodes",
    "index_x",
    "index_y",
    "nodeCount",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "tempFloat32x4",
    "../graphics/HitTestCache",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/utils",
    "Cast_1",
    "./utils/Cast",
    "./utils/ElementsUtils"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\r\nvar adapters = require(\"./lib/adapters\");\r\nexports.adapters = adapters;\r\nvar animators = require(\"./lib/animators\");\r\nexports.animators = animators;\r\nvar base = require(\"./lib/base\");\r\nexports.base = base;\r\nvar bounds = require(\"./lib/bounds\");\r\nexports.bounds = bounds;\r\nvar controllers = require(\"./lib/controllers\");\r\nexports.controllers = controllers;\r\nvar display = require(\"./lib/display\");\r\nexports.display = display;\r\nvar draw = require(\"./lib/draw\");\r\nexports.draw = draw;\r\nvar errors = require(\"./lib/errors\");\r\nexports.errors = errors;\r\nvar events = require(\"./lib/events\");\r\nexports.events = events;\r\nvar factories = require(\"./lib/factories\");\r\nexports.factories = factories;\r\nvar graphics = require(\"./lib/graphics\");\r\nexports.graphics = graphics;\r\nvar managers = require(\"./lib/managers\");\r\nexports.managers = managers;\r\nvar materials = require(\"./lib/materials\");\r\nexports.materials = materials;\r\nvar partition = require(\"./lib/partition\");\r\nexports.partition = partition;\r\nvar pick = require(\"./lib/pick\");\r\nexports.pick = pick;\r\nvar prefabs = require(\"./lib/prefabs\");\r\nexports.prefabs = prefabs;\r\nvar text = require(\"./lib/text\");\r\nexports.text = text;\r\nvar textures = require(\"./lib/textures\");\r\nexports.textures = textures;\r\nvar utils = require(\"./lib/utils\");\r\nexports.utils = utils;\r\nvar View_1 = require(\"./lib/View\");\r\nexports.View = View_1.View;\r\npartition.PartitionBase.registerAbstraction(partition.CameraNode, display.Camera);\r\npartition.PartitionBase.registerAbstraction(partition.DirectionalLightNode, display.DirectionalLight);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Sprite);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Shape);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.MovieClip);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Billboard);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.LineSegment);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextField);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextFieldMultiRender);\r\npartition.PartitionBase.registerAbstraction(partition.LightProbeNode, display.LightProbe);\r\npartition.PartitionBase.registerAbstraction(partition.PointLightNode, display.PointLight);\r\npartition.PartitionBase.registerAbstraction(partition.SkyboxNode, display.Skybox);\r\n},{\"./lib/View\":\"awayjs-display/lib/View\",\"./lib/adapters\":\"awayjs-display/lib/adapters\",\"./lib/animators\":\"awayjs-display/lib/animators\",\"./lib/base\":\"awayjs-display/lib/base\",\"./lib/bounds\":\"awayjs-display/lib/bounds\",\"./lib/controllers\":\"awayjs-display/lib/controllers\",\"./lib/display\":\"awayjs-display/lib/display\",\"./lib/draw\":\"awayjs-display/lib/draw\",\"./lib/errors\":\"awayjs-display/lib/errors\",\"./lib/events\":\"awayjs-display/lib/events\",\"./lib/factories\":\"awayjs-display/lib/factories\",\"./lib/graphics\":\"awayjs-display/lib/graphics\",\"./lib/managers\":\"awayjs-display/lib/managers\",\"./lib/materials\":\"awayjs-display/lib/materials\",\"./lib/partition\":\"awayjs-display/lib/partition\",\"./lib/pick\":\"awayjs-display/lib/pick\",\"./lib/prefabs\":\"awayjs-display/lib/prefabs\",\"./lib/text\":\"awayjs-display/lib/text\",\"./lib/textures\":\"awayjs-display/lib/textures\",\"./lib/utils\":\"awayjs-display/lib/utils\"}],\"awayjs-display/lib/IRenderer\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/ITraverser\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/View\":[function(require,module,exports){\n\"use strict\";\r\nvar getTimer_1 = require(\"awayjs-core/lib/utils/getTimer\");\r\nvar TouchPoint_1 = require(\"./base/TouchPoint\");\r\nvar Scene_1 = require(\"./display/Scene\");\r\nvar RaycastPicker_1 = require(\"./pick/RaycastPicker\");\r\nvar Camera_1 = require(\"./display/Camera\");\r\nvar CameraEvent_1 = require(\"./events/CameraEvent\");\r\nvar DisplayObjectEvent_1 = require(\"./events/DisplayObjectEvent\");\r\nvar RendererEvent_1 = require(\"./events/RendererEvent\");\r\nvar MouseManager_1 = require(\"./managers/MouseManager\");\r\nvar View = (function () {\r\n    /*\r\n     ***********************************************************************\r\n     * Disabled / Not yet implemented\r\n     ***********************************************************************\r\n     *\r\n     * private _background:away.textures.Texture2DBase;\r\n     *\r\n     * public _pTouch3DManager:away.managers.Touch3DManager;\r\n     *\r\n     */\r\n    function View(renderer, scene, camera) {\r\n        var _this = this;\r\n        if (scene === void 0) { scene = null; }\r\n        if (camera === void 0) { camera = null; }\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._time = 0;\r\n        this._deltaTime = 0;\r\n        this._backgroundColor = 0x000000;\r\n        this._backgroundAlpha = 1;\r\n        this._viewportDirty = true;\r\n        this._scissorDirty = true;\r\n        this._mousePicker = new RaycastPicker_1.RaycastPicker();\r\n        this._pTouchPoints = new Array();\r\n        this._onPartitionChangedDelegate = function (event) { return _this._onPartitionChanged(event); };\r\n        this._onProjectionChangedDelegate = function (event) { return _this._onProjectionChanged(event); };\r\n        this._onViewportUpdatedDelegate = function (event) { return _this._onViewportUpdated(event); };\r\n        this._onScissorUpdatedDelegate = function (event) { return _this._onScissorUpdated(event); };\r\n        this.scene = scene || new Scene_1.Scene();\r\n        this.camera = camera || new Camera_1.Camera();\r\n        this.renderer = renderer;\r\n        //make sure document border is zero\r\n        if (document) {\r\n            document.body.style.margin = \"0px\";\r\n            this._htmlElement = document.createElement(\"div\");\r\n            this._htmlElement.style.position = \"absolute\";\r\n            document.body.appendChild(this._htmlElement);\r\n        }\r\n        this._mouseManager = MouseManager_1.MouseManager.getInstance();\r\n        this._mouseManager.registerView(this);\r\n        //\t\t\tif (this._shareContext)\r\n        //\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n    }\r\n    Object.defineProperty(View.prototype, \"mouseX\", {\r\n        get: function () {\r\n            return this._pMouseX;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"mouseY\", {\r\n        get: function () {\r\n            return this._pMouseY;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"touchPoints\", {\r\n        get: function () {\r\n            return this._pTouchPoints;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    View.prototype.getLocalMouseX = function (displayObject) {\r\n        return displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n    };\r\n    View.prototype.getLocalMouseY = function (displayObject) {\r\n        return displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n    };\r\n    View.prototype.getLocalTouchPoints = function (displayObject) {\r\n        var localPosition;\r\n        var localTouchPoints = new Array();\r\n        var len = this._pTouchPoints.length;\r\n        for (var i = 0; i < len; i++) {\r\n            localPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\r\n            localTouchPoints.push(new TouchPoint_1.TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\r\n        }\r\n        return localTouchPoints;\r\n    };\r\n    Object.defineProperty(View.prototype, \"htmlElement\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._htmlElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"renderer\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._pRenderer;\r\n        },\r\n        set: function (value) {\r\n            if (this._pRenderer == value)\r\n                return;\r\n            if (this._pRenderer) {\r\n                this._pRenderer.dispose();\r\n                this._pRenderer.removeEventListener(RendererEvent_1.RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n                this._pRenderer.removeEventListener(RendererEvent_1.RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n            }\r\n            this._pRenderer = value;\r\n            this._pRenderer.addEventListener(RendererEvent_1.RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n            this._pRenderer.addEventListener(RendererEvent_1.RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n            //reset back buffer\r\n            this._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff) / 0xff;\r\n            this._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff) / 0xff;\r\n            this._pRenderer._iBackgroundB = (this._backgroundColor & 0xff) / 0xff;\r\n            this._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n            this._pRenderer.width = this._width;\r\n            this._pRenderer.height = this._height;\r\n            this._pRenderer.shareContext = this._shareContext;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"shareContext\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._shareContext;\r\n        },\r\n        set: function (value) {\r\n            if (this._shareContext == value)\r\n                return;\r\n            this._shareContext = value;\r\n            if (this._pRenderer)\r\n                this._pRenderer.shareContext = this._shareContext;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"backgroundColor\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._backgroundColor;\r\n        },\r\n        set: function (value) {\r\n            if (this._backgroundColor == value)\r\n                return;\r\n            this._backgroundColor = value;\r\n            this._pRenderer._iBackgroundR = ((value >> 16) & 0xff) / 0xff;\r\n            this._pRenderer._iBackgroundG = ((value >> 8) & 0xff) / 0xff;\r\n            this._pRenderer._iBackgroundB = (value & 0xff) / 0xff;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"backgroundAlpha\", {\r\n        /**\r\n         *\r\n         * @returns {number}\r\n         */\r\n        get: function () {\r\n            return this._backgroundAlpha;\r\n        },\r\n        /**\r\n         *\r\n         * @param value\r\n         */\r\n        set: function (value) {\r\n            if (value > 1)\r\n                value = 1;\r\n            else if (value < 0)\r\n                value = 0;\r\n            if (this._backgroundAlpha == value)\r\n                return;\r\n            this._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"camera\", {\r\n        /**\r\n         *\r\n         * @returns {Camera3D}\r\n         */\r\n        get: function () {\r\n            return this._pCamera;\r\n        },\r\n        /**\r\n         * Set camera that's used to render the scene for this viewport\r\n         */\r\n        set: function (value) {\r\n            if (this._pCamera == value)\r\n                return;\r\n            if (this._pCamera)\r\n                this._pCamera.removeEventListener(CameraEvent_1.CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n            this._pCamera = value;\r\n            if (this._pScene)\r\n                this._pScene.partition._iRegisterEntity(this._pCamera);\r\n            this._pCamera.addEventListener(CameraEvent_1.CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n            this._scissorDirty = true;\r\n            this._viewportDirty = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"scene\", {\r\n        /**\r\n         *\r\n         * @returns {away.containers.Scene3D}\r\n         */\r\n        get: function () {\r\n            return this._pScene;\r\n        },\r\n        /**\r\n         * Set the scene that's used to render for this viewport\r\n         */\r\n        set: function (value) {\r\n            if (this._pScene == value)\r\n                return;\r\n            if (this._pScene)\r\n                this._pScene.removeEventListener(DisplayObjectEvent_1.DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n            this._pScene = value;\r\n            this._pScene.addEventListener(DisplayObjectEvent_1.DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n            if (this._pCamera)\r\n                this._pScene.partition._iRegisterEntity(this._pCamera);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"deltaTime\", {\r\n        /**\r\n         *\r\n         * @returns {number}\r\n         */\r\n        get: function () {\r\n            return this._deltaTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"width\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._width;\r\n        },\r\n        set: function (value) {\r\n            if (this._width == value)\r\n                return;\r\n            this._width = value;\r\n            this._aspectRatio = this._width / this._height;\r\n            this._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n            this._pRenderer.width = value;\r\n            if (this._htmlElement) {\r\n                this._htmlElement.style.width = value + \"px\";\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"height\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._height;\r\n        },\r\n        set: function (value) {\r\n            if (this._height == value)\r\n                return;\r\n            this._height = value;\r\n            this._aspectRatio = this._width / this._height;\r\n            this._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n            this._pRenderer.height = value;\r\n            if (this._htmlElement) {\r\n                this._htmlElement.style.height = value + \"px\";\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"mousePicker\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._mousePicker;\r\n        },\r\n        set: function (value) {\r\n            if (this._mousePicker == value)\r\n                return;\r\n            if (value == null)\r\n                this._mousePicker = new RaycastPicker_1.RaycastPicker();\r\n            else\r\n                this._mousePicker = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"x\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._pRenderer.x;\r\n        },\r\n        set: function (value) {\r\n            if (this._pRenderer.x == value)\r\n                return;\r\n            this._pRenderer.x == value;\r\n            if (this._htmlElement) {\r\n                this._htmlElement.style.left = value + \"px\";\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"y\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._pRenderer.y;\r\n        },\r\n        set: function (value) {\r\n            if (this._pRenderer.y == value)\r\n                return;\r\n            this._pRenderer.y == value;\r\n            if (this._htmlElement) {\r\n                this._htmlElement.style.top = value + \"px\";\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"visible\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\r\n        },\r\n        set: function (value) {\r\n            if (this._htmlElement) {\r\n                this._htmlElement.style.visibility = value ? \"visible\" : \"hidden\";\r\n            }\r\n            //TODO transfer visible property to associated context (if one exists)\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(View.prototype, \"renderedFacesCount\", {\r\n        /**\r\n         *\r\n         * @returns {number}\r\n         */\r\n        get: function () {\r\n            return 0; //TODO\r\n            //return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Renders the view.\r\n     */\r\n    View.prototype.render = function () {\r\n        this.pUpdateTime();\r\n        //update view and size data\r\n        this._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n        if (this._scissorDirty) {\r\n            this._scissorDirty = false;\r\n            this._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n        }\r\n        if (this._viewportDirty) {\r\n            this._viewportDirty = false;\r\n            this._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n        }\r\n        // update picking\r\n        if (!this._shareContext) {\r\n            if (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n                this._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n            this._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n        }\r\n        //_touch3DManager.updateCollider();\r\n        //render the contents of the scene\r\n        this._pRenderer.render(this._pCamera, this._pScene);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    View.prototype.pUpdateTime = function () {\r\n        var time = getTimer_1.getTimer();\r\n        if (this._time == 0)\r\n            this._time = time;\r\n        this._deltaTime = time - this._time;\r\n        this._time = time;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    View.prototype.dispose = function () {\r\n        this._pRenderer.dispose();\r\n        // TODO: imeplement mouseManager / touch3DManager\r\n        this._mouseManager.unregisterView(this);\r\n        //this._touch3DManager.disableTouchListeners(this);\r\n        //this._touch3DManager.dispose();\r\n        this._mouseManager = null;\r\n        //this._touch3DManager = null;\r\n        this._pRenderer = null;\r\n    };\r\n    /**\r\n     *\r\n     * @param e\r\n     */\r\n    View.prototype._onPartitionChanged = function (event) {\r\n        if (this._pCamera)\r\n            this._pScene.partition._iRegisterEntity(this._pCamera);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    View.prototype._onProjectionChanged = function (event) {\r\n        this._scissorDirty = true;\r\n        this._viewportDirty = true;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    View.prototype._onViewportUpdated = function (event) {\r\n        this._viewportDirty = true;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    View.prototype._onScissorUpdated = function (event) {\r\n        this._scissorDirty = true;\r\n    };\r\n    View.prototype.project = function (point3d) {\r\n        var v = this._pCamera.project(point3d);\r\n        v.x = v.x * this._pRenderer.viewPort.width / 2 + this._width * this._pCamera.projection.originX;\r\n        v.y = v.y * this._pRenderer.viewPort.height / 2 + this._height * this._pCamera.projection.originY;\r\n        return v;\r\n    };\r\n    View.prototype.unproject = function (sX, sY, sZ) {\r\n        return this._pCamera.unproject(2 * (sX - this._width * this._pCamera.projection.originX) / this._pRenderer.viewPort.width, 2 * (sY - this._height * this._pCamera.projection.originY) / this._pRenderer.viewPort.height, sZ);\r\n    };\r\n    View.prototype.getRay = function (sX, sY, sZ) {\r\n        return this._pCamera.getRay((sX * 2 - this._width) / this._width, (sY * 2 - this._height) / this._height, sZ);\r\n    };\r\n    /*TODO: implement Background\r\n     public get background():away.textures.Texture2DBase\r\n     {\r\n     return this._background;\r\n     }\r\n     */\r\n    /*TODO: implement Background\r\n     public set background( value:away.textures.Texture2DBase )\r\n     {\r\n     this._background = value;\r\n     this._renderer.background = _background;\r\n     }\r\n     */\r\n    // TODO: required dependency stageGL\r\n    View.prototype.updateCollider = function () {\r\n        if (!this._shareContext) {\r\n            if (this._htmlElement == this._mouseManager._iActiveDiv)\r\n                this._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n        }\r\n        else {\r\n            var collidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n            if (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\r\n                this._mouseManager._iCollision = collidingObject;\r\n        }\r\n    };\r\n    return View;\r\n}());\r\nexports.View = View;\r\n},{\"./base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"./display/Camera\":\"awayjs-display/lib/display/Camera\",\"./display/Scene\":\"awayjs-display/lib/display/Scene\",\"./events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"./events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"./events/RendererEvent\":\"awayjs-display/lib/events/RendererEvent\",\"./managers/MouseManager\":\"awayjs-display/lib/managers/MouseManager\",\"./pick/RaycastPicker\":\"awayjs-display/lib/pick/RaycastPicker\",\"awayjs-core/lib/utils/getTimer\":undefined}],\"awayjs-display/lib/adapters/IDisplayObjectAdapter\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/adapters/IMovieClipAdapter\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/adapters\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/animators/IAnimationSet\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/animators/IAnimator\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/animators/data/ParticleData\":[function(require,module,exports){\n\"use strict\";\r\nvar ParticleData = (function () {\r\n    function ParticleData() {\r\n    }\r\n    return ParticleData;\r\n}());\r\nexports.ParticleData = ParticleData;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = ParticleData;\r\n},{}],\"awayjs-display/lib/animators/nodes/AnimationNodeBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nvar AnimationNodeBase = (function (_super) {\r\n    __extends(AnimationNodeBase, _super);\r\n    /**\r\n     * Creates a new <code>AnimationNodeBase</code> object.\r\n     */\r\n    function AnimationNodeBase() {\r\n        _super.call(this);\r\n    }\r\n    Object.defineProperty(AnimationNodeBase.prototype, \"stateClass\", {\r\n        get: function () {\r\n            return this._pStateClass;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AnimationNodeBase.prototype.dispose = function () {\r\n    };\r\n    Object.defineProperty(AnimationNodeBase.prototype, \"assetType\", {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        get: function () {\r\n            return AnimationNodeBase.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AnimationNodeBase.assetType = \"[asset AnimationNodeBase]\";\r\n    return AnimationNodeBase;\r\n}(AssetBase_1.AssetBase));\r\nexports.AnimationNodeBase = AnimationNodeBase;\r\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/animators\":[function(require,module,exports){\n\"use strict\";\r\nvar ParticleData_1 = require(\"./animators/data/ParticleData\");\r\nexports.ParticleData = ParticleData_1.ParticleData;\r\nvar AnimationNodeBase_1 = require(\"./animators/nodes/AnimationNodeBase\");\r\nexports.AnimationNodeBase = AnimationNodeBase_1.AnimationNodeBase;\r\n},{\"./animators/data/ParticleData\":\"awayjs-display/lib/animators/data/ParticleData\",\"./animators/nodes/AnimationNodeBase\":\"awayjs-display/lib/animators/nodes/AnimationNodeBase\"}],\"awayjs-display/lib/base/AlignmentMode\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n *\r\n */\r\nvar AlignmentMode = (function () {\r\n    function AlignmentMode() {\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    AlignmentMode.REGISTRATION_POINT = \"registrationPoint\";\r\n    /**\r\n     *\r\n     */\r\n    AlignmentMode.PIVOT_POINT = \"pivot\";\r\n    return AlignmentMode;\r\n}());\r\nexports.AlignmentMode = AlignmentMode;\r\n},{}],\"awayjs-display/lib/base/HierarchicalProperties\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n *\r\n */\r\nvar HierarchicalProperties = (function () {\r\n    function HierarchicalProperties() {\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    HierarchicalProperties.MOUSE_ENABLED = 1;\r\n    /**\r\n     *\r\n     */\r\n    HierarchicalProperties.VISIBLE = 2;\r\n    /**\r\n     *\r\n     */\r\n    HierarchicalProperties.MASK_ID = 4;\r\n    /**\r\n     *\r\n     */\r\n    HierarchicalProperties.MASKS = 8;\r\n    /**\r\n     *\r\n     */\r\n    HierarchicalProperties.COLOR_TRANSFORM = 16;\r\n    /**\r\n     *\r\n     */\r\n    HierarchicalProperties.SCENE_TRANSFORM = 32;\r\n    /**\r\n     *\r\n     */\r\n    HierarchicalProperties.ALL = 63;\r\n    return HierarchicalProperties;\r\n}());\r\nexports.HierarchicalProperties = HierarchicalProperties;\r\n},{}],\"awayjs-display/lib/base/IBitmapDrawable\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/base/IRenderable\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/base/ISurface\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/base/OrientationMode\":[function(require,module,exports){\n\"use strict\";\r\nvar OrientationMode = (function () {\r\n    function OrientationMode() {\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    OrientationMode.DEFAULT = \"default\";\r\n    /**\r\n     *\r\n     */\r\n    OrientationMode.CAMERA_PLANE = \"cameraPlane\";\r\n    /**\r\n     *\r\n     */\r\n    OrientationMode.CAMERA_POSITION = \"cameraPosition\";\r\n    return OrientationMode;\r\n}());\r\nexports.OrientationMode = OrientationMode;\r\n},{}],\"awayjs-display/lib/base/Style\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\r\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\r\n/**\r\n *\r\n */\r\nvar Style = (function (_super) {\r\n    __extends(Style, _super);\r\n    function Style() {\r\n        _super.call(this);\r\n        this._samplers = new Object();\r\n        this._images = new Object();\r\n        this._color = 0xFFFFFF;\r\n    }\r\n    Object.defineProperty(Style.prototype, \"sampler\", {\r\n        get: function () {\r\n            return this._sampler;\r\n        },\r\n        set: function (value) {\r\n            if (this._sampler == value)\r\n                return;\r\n            this._sampler = value;\r\n            this._invalidateProperties();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Style.prototype, \"image\", {\r\n        get: function () {\r\n            return this._image;\r\n        },\r\n        set: function (value) {\r\n            if (this._image == value)\r\n                return;\r\n            this._image = value;\r\n            this._invalidateProperties();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Style.prototype, \"uvMatrix\", {\r\n        get: function () {\r\n            return this._uvMatrix;\r\n        },\r\n        set: function (value) {\r\n            if (this._uvMatrix == value)\r\n                return;\r\n            this._uvMatrix = value;\r\n            this._invalidateProperties();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Style.prototype, \"color\", {\r\n        /**\r\n         * The diffuse reflectivity color of the surface.\r\n         */\r\n        get: function () {\r\n            return this._color;\r\n        },\r\n        set: function (value) {\r\n            if (this._color == value)\r\n                return;\r\n            this._color = value;\r\n            this._invalidateProperties();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Style.prototype.getImageAt = function (texture, index) {\r\n        if (index === void 0) { index = 0; }\r\n        return (this._images[texture.id] ? this._images[texture.id][index] : null) || this._image;\r\n    };\r\n    Style.prototype.getSamplerAt = function (texture, index) {\r\n        if (index === void 0) { index = 0; }\r\n        return (this._samplers[texture.id] ? this._samplers[texture.id][index] : null) || this._sampler;\r\n    };\r\n    Style.prototype.addImageAt = function (image, texture, index) {\r\n        if (index === void 0) { index = 0; }\r\n        if (!this._images[texture.id])\r\n            this._images[texture.id] = new Array();\r\n        this._images[texture.id][index] = image;\r\n    };\r\n    Style.prototype.addSamplerAt = function (sampler, texture, index) {\r\n        if (index === void 0) { index = 0; }\r\n        if (!this._samplers[texture.id])\r\n            this._samplers[texture.id] = new Array();\r\n        this._samplers[texture.id][index] = sampler;\r\n        this._invalidateProperties();\r\n    };\r\n    Style.prototype.removeImageAt = function (texture, index) {\r\n        if (index === void 0) { index = 0; }\r\n        if (!this._images[texture.id])\r\n            return;\r\n        this._images[texture.id][index] = null;\r\n        this._invalidateProperties();\r\n    };\r\n    Style.prototype.removeSamplerAt = function (texture, index) {\r\n        if (index === void 0) { index = 0; }\r\n        if (!this._samplers[texture.id])\r\n            return;\r\n        this._samplers[texture.id][index] = null;\r\n        this._invalidateProperties();\r\n    };\r\n    Style.prototype._invalidateProperties = function () {\r\n        this.dispatchEvent(new StyleEvent_1.StyleEvent(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this));\r\n    };\r\n    return Style;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.Style = Style;\r\n},{\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined}],\"awayjs-display/lib/base/Timeline\":[function(require,module,exports){\n\"use strict\";\r\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\r\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nvar FrameScriptManager_1 = require(\"../managers/FrameScriptManager\");\r\nvar Timeline = (function () {\r\n    function Timeline() {\r\n        this._functions = [];\r\n        this._update_indices = [];\r\n        this.numKeyFrames = 0;\r\n        this.keyframe_indices = [];\r\n        this._potentialPrototypes = [];\r\n        this._labels = {};\r\n        this._framescripts = {};\r\n        this._framescripts_translated = {};\r\n        //cache functions\r\n        this._functions[1] = this.update_mtx_all;\r\n        this._functions[2] = this.update_colortransform;\r\n        this._functions[3] = this.update_masks;\r\n        this._functions[4] = this.update_name;\r\n        this._functions[5] = this.update_button_name;\r\n        this._functions[6] = this.update_visibility;\r\n        this._functions[7] = this.update_blendmode;\r\n        this._functions[8] = this.update_rendermode;\r\n        this._functions[11] = this.update_mtx_scale_rot;\r\n        this._functions[12] = this.update_mtx_pos;\r\n        this._functions[200] = this.enable_maskmode;\r\n        this._functions[201] = this.remove_masks;\r\n    }\r\n    Timeline.prototype.init = function () {\r\n        if ((this.frame_command_indices == null) || (this.frame_recipe == null) || (this.keyframe_durations == null))\r\n            return;\r\n        this.keyframe_firstframes = [];\r\n        this.keyframe_constructframes = [];\r\n        var frame_cnt = 0;\r\n        var ic = 0;\r\n        var ic2 = 0;\r\n        var keyframe_cnt = 0;\r\n        var last_construct_frame = 0;\r\n        for (ic = 0; ic < this.numKeyFrames; ic++) {\r\n            var duration = this.keyframe_durations[(ic)];\r\n            if (this.frame_recipe[ic] & 1)\r\n                last_construct_frame = keyframe_cnt;\r\n            this.keyframe_firstframes[keyframe_cnt] = frame_cnt;\r\n            this.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\r\n            for (ic2 = 0; ic2 < duration; ic2++)\r\n                this.keyframe_indices[frame_cnt++] = ic;\r\n        }\r\n    };\r\n    Timeline.prototype.get_framescript = function (keyframe_index) {\r\n        if (this._framescripts[keyframe_index] == null)\r\n            return \"\";\r\n        if (typeof this._framescripts[keyframe_index] == \"string\")\r\n            return this._framescripts[keyframe_index];\r\n        else {\r\n            throw new Error(\"Framescript is already translated to Function!!!\");\r\n        }\r\n    };\r\n    Timeline.prototype.add_framescript = function (value, keyframe_index) {\r\n        if (FrameScriptManager_1.FrameScriptManager.frameScriptDebug) {\r\n            // if we are in debug mode, we try to extract the function name from the first line of framescript code,\r\n            // and check if this function is available on the object that is set as frameScriptDebug\r\n            // try to get the functions name (it should be the first line as comment)\r\n            var functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\r\n            if (FrameScriptManager_1.FrameScriptManager.frameScriptDebug[functionname]) {\r\n                this._framescripts[keyframe_index] = FrameScriptManager_1.FrameScriptManager.frameScriptDebug[functionname];\r\n                this._framescripts_translated[keyframe_index] = true;\r\n                return;\r\n            }\r\n            else {\r\n                throw new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\" + functionname + \"' !!!\");\r\n            }\r\n        }\r\n        this._framescripts[keyframe_index] = value;\r\n    };\r\n    Timeline.prototype.regexIndexOf = function (str, regex, startpos) {\r\n        var indexOf = str.substring(startpos || 0).search(regex);\r\n        return (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n    };\r\n    Timeline.prototype.add_script_for_postcontruct = function (target_mc, keyframe_idx, scriptPass1) {\r\n        if (scriptPass1 === void 0) { scriptPass1 = false; }\r\n        if (this._framescripts[keyframe_idx] != null) {\r\n            if (this._framescripts_translated[keyframe_idx] == null) {\r\n                this._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n                this._framescripts_translated[keyframe_idx] = true;\r\n            }\r\n            if (scriptPass1)\r\n                FrameScriptManager_1.FrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n            else\r\n                FrameScriptManager_1.FrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n        }\r\n    };\r\n    Object.defineProperty(Timeline.prototype, \"numFrames\", {\r\n        get: function () {\r\n            return this.keyframe_indices.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Timeline.prototype.getPotentialChildPrototype = function (id) {\r\n        return this._potentialPrototypes[id];\r\n    };\r\n    Timeline.prototype.getKeyframeIndexForFrameIndex = function (frame_index) {\r\n        return this.keyframe_indices[frame_index];\r\n    };\r\n    Timeline.prototype.getPotentialChildInstance = function (id) {\r\n        var this_clone = this._potentialPrototypes[id].clone();\r\n        this_clone.name = \"\";\r\n        return this_clone;\r\n    };\r\n    Timeline.prototype.registerPotentialChild = function (prototype) {\r\n        var id = this._potentialPrototypes.length;\r\n        this._potentialPrototypes[id] = prototype;\r\n    };\r\n    Timeline.prototype.jumpToLabel = function (target_mc, label) {\r\n        var key_frame_index = this._labels[label];\r\n        if (key_frame_index >= 0)\r\n            target_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\r\n    };\r\n    Timeline.prototype.gotoFrame = function (target_mc, value, skip_script) {\r\n        if (skip_script === void 0) { skip_script = false; }\r\n        var current_keyframe_idx = target_mc.constructedKeyFrameIndex;\r\n        var target_keyframe_idx = this.keyframe_indices[value];\r\n        if (current_keyframe_idx == target_keyframe_idx)\r\n            return;\r\n        if (current_keyframe_idx + 1 == target_keyframe_idx) {\r\n            this.constructNextFrame(target_mc, !skip_script, true);\r\n            return;\r\n        }\r\n        var break_frame_idx = this.keyframe_constructframes[target_keyframe_idx];\r\n        //we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n        var jump_forward = (target_keyframe_idx > current_keyframe_idx);\r\n        var jump_gap = (break_frame_idx > current_keyframe_idx);\r\n        // in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\r\n        // in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n        var start_construct_idx = (jump_forward && !jump_gap) ? current_keyframe_idx + 1 : break_frame_idx;\r\n        var i;\r\n        var k;\r\n        if (jump_gap)\r\n            for (i = target_mc.numChildren - 1; i >= 0; i--)\r\n                if (target_mc._children[i]._depthID < 0)\r\n                    target_mc.removeChildAt(i);\r\n        //if we jump back, we want to reset all objects (but not the timelines of the mcs)\r\n        if (!jump_forward)\r\n            target_mc.resetSessionIDs();\r\n        // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n        var depth_sessionIDs = target_mc.getSessionIDDepths();\r\n        //pass1: only apply add/remove commands into depth_sessionIDs.\r\n        this.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\r\n        // check what childs are alive on both frames.\r\n        // childs that are not alive anymore get removed and unregistered\r\n        // childs that are alive on both frames have their properties reset if we are jumping back\r\n        var child;\r\n        for (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n            child = target_mc._children[i];\r\n            if (child._depthID < 0) {\r\n                if (depth_sessionIDs[child._depthID] != child._sessionID) {\r\n                    target_mc.removeChildAt(i);\r\n                }\r\n                else if (!jump_forward) {\r\n                    if (child.adapter) {\r\n                        if (!child.adapter.isBlockedByScript()) {\r\n                            child.transform.clearMatrix3D();\r\n                            child.transform.clearColorTransform();\r\n                            //this.name=\"\";\r\n                            child.masks = null;\r\n                            child.maskMode = false;\r\n                        }\r\n                        if (!child.adapter.isVisibilityByScript()) {\r\n                            child.visible = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // now we need to addchild the objects that were added before targetframe first\r\n        // than we can add the script of the targetframe\r\n        // than we can addchild objects added on targetframe\r\n        for (var key in depth_sessionIDs) {\r\n            child = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key] * 2]);\r\n            if (child._sessionID == -1)\r\n                target_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\r\n        }\r\n        if (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value)\r\n            this.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n        //pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n        this.pass2(target_mc);\r\n        target_mc.constructedKeyFrameIndex = target_keyframe_idx;\r\n    };\r\n    Timeline.prototype.pass1 = function (start_construct_idx, target_keyframe_idx, depth_sessionIDs) {\r\n        var i;\r\n        var k;\r\n        this._update_indices.length = 0; // store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n        var update_cnt = 0;\r\n        var start_index;\r\n        var end_index;\r\n        for (k = start_construct_idx; k <= target_keyframe_idx; k++) {\r\n            var frame_command_idx = this.frame_command_indices[k];\r\n            var frame_recipe = this.frame_recipe[k];\r\n            if (frame_recipe & 2) {\r\n                // remove childs\r\n                start_index = this.command_index_stream[frame_command_idx];\r\n                end_index = start_index + this.command_length_stream[frame_command_idx++];\r\n                for (i = start_index; i < end_index; i++)\r\n                    delete depth_sessionIDs[this.remove_child_stream[i] - 16383];\r\n            }\r\n            if (frame_recipe & 4) {\r\n                start_index = this.command_index_stream[frame_command_idx];\r\n                end_index = start_index + this.command_length_stream[frame_command_idx++];\r\n                // apply add commands in reversed order to have script exeucted in correct order.\r\n                // this could be changed in exporter\r\n                for (i = end_index - 1; i >= start_index; i--)\r\n                    depth_sessionIDs[this.add_child_stream[i * 2 + 1] - 16383] = i;\r\n            }\r\n            if (frame_recipe & 8)\r\n                this._update_indices[update_cnt++] = frame_command_idx; // execute update command later\r\n        }\r\n    };\r\n    Timeline.prototype.pass2 = function (target_mc) {\r\n        var k;\r\n        var len = this._update_indices.length;\r\n        for (k = 0; k < len; k++)\r\n            this.update_childs(target_mc, this._update_indices[k]);\r\n    };\r\n    Timeline.prototype.constructNextFrame = function (target_mc, queueScript, scriptPass1) {\r\n        if (queueScript === void 0) { queueScript = true; }\r\n        if (scriptPass1 === void 0) { scriptPass1 = false; }\r\n        var frameIndex = target_mc.currentFrameIndex;\r\n        var new_keyFrameIndex = this.keyframe_indices[frameIndex];\r\n        if (queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\r\n            this.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n        if (target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\r\n            target_mc.constructedKeyFrameIndex = new_keyFrameIndex;\r\n            var frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\r\n            var frame_recipe = this.frame_recipe[new_keyFrameIndex];\r\n            if (frame_recipe & 1) {\r\n                for (var i = target_mc.numChildren - 1; i >= 0; i--)\r\n                    if (target_mc._children[i]._depthID < 0)\r\n                        target_mc.removeChildAt(i);\r\n            }\r\n            else if (frame_recipe & 2) {\r\n                this.remove_childs_continous(target_mc, frame_command_idx++);\r\n            }\r\n            if (frame_recipe & 4)\r\n                this.add_childs_continous(target_mc, frame_command_idx++);\r\n            if (frame_recipe & 8)\r\n                this.update_childs(target_mc, frame_command_idx++);\r\n        }\r\n    };\r\n    Timeline.prototype.remove_childs_continous = function (sourceMovieClip, frame_command_idx) {\r\n        var start_index = this.command_index_stream[frame_command_idx];\r\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\r\n        for (var i = start_index; i < end_index; i++)\r\n            sourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\r\n    };\r\n    // used to add childs when jumping between frames\r\n    Timeline.prototype.add_childs_continous = function (sourceMovieClip, frame_command_idx) {\r\n        // apply add commands in reversed order to have script exeucted in correct order.\r\n        // this could be changed in exporter\r\n        var idx;\r\n        var start_index = this.command_index_stream[frame_command_idx];\r\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\r\n        for (var i = end_index - 1; i >= start_index; i--) {\r\n            idx = i * 2;\r\n            sourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\r\n        }\r\n    };\r\n    Timeline.prototype.update_childs = function (target_mc, frame_command_idx) {\r\n        var p;\r\n        var props_start_idx;\r\n        var props_end_index;\r\n        var start_index = this.command_index_stream[frame_command_idx];\r\n        var end_index = start_index + this.command_length_stream[frame_command_idx];\r\n        var child;\r\n        for (var i = start_index; i < end_index; i++) {\r\n            child = target_mc.getChildAtSessionID(this.update_child_stream[i]);\r\n            if (child) {\r\n                // check if the child is active + not blocked by script\r\n                this._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\r\n                props_start_idx = this.update_child_props_indices_stream[i];\r\n                props_end_index = props_start_idx + this.update_child_props_length_stream[i];\r\n                for (p = props_start_idx; p < props_end_index; p++)\r\n                    this._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\r\n            }\r\n        }\r\n    };\r\n    Timeline.prototype.update_mtx_all = function (child, target_mc, i) {\r\n        if (this._blocked)\r\n            return;\r\n        i *= 6;\r\n        var new_matrix = child.transform.matrix3D;\r\n        new_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\r\n        new_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\r\n        new_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\r\n        new_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\r\n        new_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\r\n        new_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\r\n        child.transform.invalidateComponents();\r\n    };\r\n    Timeline.prototype.update_colortransform = function (child, target_mc, i) {\r\n        if (this._blocked)\r\n            return;\r\n        i *= 8;\r\n        var new_ct = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform_1.ColorTransform());\r\n        new_ct.rawData[0] = this.properties_stream_f32_ct[i++];\r\n        new_ct.rawData[1] = this.properties_stream_f32_ct[i++];\r\n        new_ct.rawData[2] = this.properties_stream_f32_ct[i++];\r\n        new_ct.rawData[3] = this.properties_stream_f32_ct[i++];\r\n        new_ct.rawData[4] = this.properties_stream_f32_ct[i++];\r\n        new_ct.rawData[5] = this.properties_stream_f32_ct[i++];\r\n        new_ct.rawData[6] = this.properties_stream_f32_ct[i++];\r\n        new_ct.rawData[7] = this.properties_stream_f32_ct[i];\r\n        child.transform.invalidateColorTransform();\r\n    };\r\n    Timeline.prototype.update_masks = function (child, target_mc, i) {\r\n        // an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n        // this is not implmeented in the runtime yet\r\n        // for now, a second mask-groupd would overwrite the first one\r\n        var mask;\r\n        var masks = new Array();\r\n        var numMasks = this.properties_stream_int[i++];\r\n        //mask may not exist if a goto command moves the playhead to a point in the timeline after\r\n        //one of the masks in a mask array has already been removed. Therefore a check is needed.\r\n        for (var m = 0; m < numMasks; m++)\r\n            if ((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\r\n                masks.push(mask);\r\n        child.masks = masks;\r\n    };\r\n    Timeline.prototype.update_name = function (child, target_mc, i) {\r\n        child.name = this.properties_stream_strings[i];\r\n        target_mc.adapter.registerScriptObject(child);\r\n    };\r\n    Timeline.prototype.update_button_name = function (target, sourceMovieClip, i) {\r\n        target.name = this.properties_stream_strings[i];\r\n        // todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n        target.addButtonListeners();\r\n        sourceMovieClip.adapter.registerScriptObject(target);\r\n    };\r\n    Timeline.prototype.update_visibility = function (child, target_mc, i) {\r\n        if (!child.adapter || !child.adapter.isVisibilityByScript())\r\n            child.visible = Boolean(i);\r\n    };\r\n    Timeline.prototype.update_mtx_scale_rot = function (child, target_mc, i) {\r\n        if (this._blocked)\r\n            return;\r\n        i *= 4;\r\n        var new_matrix = child.transform.matrix3D;\r\n        new_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\r\n        new_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\r\n        new_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\r\n        new_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\r\n        child.transform.invalidateComponents();\r\n        child.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM);\r\n    };\r\n    Timeline.prototype.update_mtx_pos = function (child, target_mc, i) {\r\n        if (this._blocked)\r\n            return;\r\n        i *= 2;\r\n        var new_matrix = child.transform.matrix3D;\r\n        new_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\r\n        new_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\r\n        child.transform.invalidatePosition();\r\n    };\r\n    Timeline.prototype.enable_maskmode = function (child, target_mc, i) {\r\n        child.maskMode = true;\r\n    };\r\n    Timeline.prototype.remove_masks = function (child, target_mc, i) {\r\n        child.masks = null;\r\n    };\r\n    Timeline.prototype.update_blendmode = function (child, target_mc, i) {\r\n        console.log(\"update blendmode \" + i);\r\n    };\r\n    Timeline.prototype.update_rendermode = function (child, target_mc, i) {\r\n        console.log(\"update rendermode \" + i);\r\n    };\r\n    return Timeline;\r\n}());\r\nexports.Timeline = Timeline;\r\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-core/lib/geom/ColorTransform\":undefined}],\"awayjs-display/lib/base/TouchPoint\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n *\r\n */\r\nvar TouchPoint = (function () {\r\n    function TouchPoint(x, y, id) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.id = id;\r\n    }\r\n    return TouchPoint;\r\n}());\r\nexports.TouchPoint = TouchPoint;\r\n},{}],\"awayjs-display/lib/base/Transform\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\r\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\r\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar TransformEvent_1 = require(\"../events/TransformEvent\");\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nvar Transform = (function (_super) {\r\n    __extends(Transform, _super);\r\n    function Transform() {\r\n        _super.call(this);\r\n        this._matrix3D = new Matrix3D_1.Matrix3D();\r\n        this._rotation = new Vector3D_1.Vector3D();\r\n        this._skew = new Vector3D_1.Vector3D();\r\n        this._scale = new Vector3D_1.Vector3D(1, 1, 1);\r\n        // Cached vector of transformation components used when\r\n        // recomposing the transform matrix in updateTransform()\r\n        this._components = new Array(4);\r\n        this._components[1] = this._rotation;\r\n        this._components[2] = this._skew;\r\n        this._components[3] = this._scale;\r\n    }\r\n    Object.defineProperty(Transform.prototype, \"backVector\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            var director = Matrix3DUtils_1.Matrix3DUtils.getForward(this._matrix3D);\r\n            director.negate();\r\n            return director;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"colorTransform\", {\r\n        /**\r\n         * A ColorTransform object containing values that universally adjust the\r\n         * colors in the display object.\r\n         *\r\n         * @throws TypeError The colorTransform is null when being set\r\n         */\r\n        get: function () {\r\n            return this._colorTransform;\r\n        },\r\n        set: function (val) {\r\n            if (this._colorTransform == val)\r\n                return;\r\n            this._colorTransform = val;\r\n            this.invalidateColorTransform();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"concatenatedColorTransform\", {\r\n        /**\r\n         * A ColorTransform object representing the combined color transformations\r\n         * applied to the display object and all of its parent objects, back to the\r\n         * root level. If different color transformations have been applied at\r\n         * different levels, all of those transformations are concatenated into one\r\n         * ColorTransform object for this property.\r\n         */\r\n        get: function () {\r\n            return this._concatenatedColorTransform; //TODO\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"concatenatedMatrix\", {\r\n        /**\r\n         * A Matrix object representing the combined transformation matrixes of the\r\n         * display object and all of its parent objects, back to the root level. If\r\n         * different transformation matrixes have been applied at different levels,\r\n         * all of those matrixes are concatenated into one matrix for this property.\r\n         * Also, for resizeable SWF content running in the browser, this property\r\n         * factors in the difference between stage coordinates and window coordinates\r\n         * due to window resizing. Thus, the property converts local coordinates to\r\n         * window coordinates, which may not be the same coordinate space as that of\r\n         * the Scene.\r\n         */\r\n        get: function () {\r\n            return this._concatenatedMatrix; //TODO\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"downVector\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            var director = Matrix3DUtils_1.Matrix3DUtils.getUp(this._matrix3D);\r\n            director.negate();\r\n            return director;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"forwardVector\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return Matrix3DUtils_1.Matrix3DUtils.getForward(this._matrix3D);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"leftVector\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            var director = Matrix3DUtils_1.Matrix3DUtils.getRight(this._matrix3D);\r\n            director.negate();\r\n            return director;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"matrix3D\", {\r\n        /**\r\n         * Provides access to the Matrix3D object of a three-dimensional display\r\n         * object. The Matrix3D object represents a transformation matrix that\r\n         * determines the display object's position and orientation. A Matrix3D\r\n         * object can also perform perspective projection.\r\n         *\r\n         * <p>If the <code>matrix</code> property is set to a value(not\r\n         * <code>null</code>), the <code>matrix3D</code> property is\r\n         * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n         * value(not <code>null</code>), the <code>matrix</code> property is\r\n         * <code>null</code>.</p>\r\n         */\r\n        get: function () {\r\n            if (this._matrix3DDirty)\r\n                this._updateMatrix3D();\r\n            return this._matrix3D;\r\n        },\r\n        set: function (val) {\r\n            for (var i = 0; i < 15; i++)\r\n                this._matrix3D.rawData[i] = val.rawData[i];\r\n            this.invalidateComponents();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"pixelBounds\", {\r\n        /**\r\n         * A Rectangle object that defines the bounding rectangle of the display\r\n         * object on the stage.\r\n         */\r\n        get: function () {\r\n            return this._pixelBounds;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"position\", {\r\n        /**\r\n         * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n         */\r\n        get: function () {\r\n            return this._matrix3D.position;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"rightVector\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return Matrix3DUtils_1.Matrix3DUtils.getRight(this.matrix3D);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Transform.prototype, \"rotation\", {\r\n        /**\r\n         * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n         */\r\n        get: function () {\r\n            if (this._componentsDirty)\r\n                this._updateComponents();\r\n            return this._rotation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Rotates the 3d object directly to a euler angle\r\n     *\r\n     * @param    ax        The angle in degrees of the rotation around the x axis.\r\n     * @param    ay        The angle in degrees of the rotation around the y axis.\r\n     * @param    az        The angle in degrees of the rotation around the z axis.\r\n     */\r\n    Transform.prototype.rotateTo = function (ax, ay, az) {\r\n        if (this._componentsDirty)\r\n            this._updateComponents();\r\n        this._rotation.x = ax;\r\n        this._rotation.y = ay;\r\n        this._rotation.z = az;\r\n        this.invalidateMatrix3D();\r\n    };\r\n    Object.defineProperty(Transform.prototype, \"scale\", {\r\n        /**\r\n         * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n         */\r\n        get: function () {\r\n            if (this._componentsDirty)\r\n                this._updateComponents();\r\n            return this._scale;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Transform.prototype.scaleTo = function (sx, sy, sz) {\r\n        if (this._componentsDirty)\r\n            this._updateComponents();\r\n        this._scale.x = sx;\r\n        this._scale.y = sy;\r\n        this._scale.z = sz;\r\n        this.invalidateMatrix3D();\r\n    };\r\n    Object.defineProperty(Transform.prototype, \"skew\", {\r\n        /**\r\n         * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n         */\r\n        get: function () {\r\n            if (this._componentsDirty)\r\n                this._updateComponents();\r\n            return this._skew;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Transform.prototype.skewTo = function (sx, sy, sz) {\r\n        if (this._componentsDirty)\r\n            this._updateComponents();\r\n        this._skew.x = sx;\r\n        this._skew.y = sy;\r\n        this._skew.z = sz;\r\n        this.invalidateMatrix3D();\r\n    };\r\n    Object.defineProperty(Transform.prototype, \"upVector\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return Matrix3DUtils_1.Matrix3DUtils.getUp(this.matrix3D);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Transform.prototype.dispose = function () {\r\n    };\r\n    /**\r\n     * Returns a Matrix3D object, which can transform the space of a specified\r\n     * display object in relation to the current display object's space. You can\r\n     * use the <code>getRelativeMatrix3D()</code> method to move one\r\n     * three-dimensional display object relative to another three-dimensional\r\n     * display object.\r\n     *\r\n     * @param relativeTo The display object relative to which the transformation\r\n     *                   occurs. To get a Matrix3D object relative to the stage,\r\n     *                   set the parameter to the <code>root</code> or\r\n     *                   <code>stage</code> object. To get the world-relative\r\n     *                   matrix of the display object, set the parameter to a\r\n     *                   display object that has a perspective transformation\r\n     *                   applied to it.\r\n     * @return A Matrix3D object that can be used to transform the space from the\r\n     *         <code>relativeTo</code> display object to the current display\r\n     *         object space.\r\n     */\r\n    Transform.prototype.getRelativeMatrix3D = function (relativeTo) {\r\n        return new Matrix3D_1.Matrix3D(); //TODO\r\n    };\r\n    /**\r\n     * Moves the 3d object forwards along it's local z axis\r\n     *\r\n     * @param    distance    The length of the movement\r\n     */\r\n    Transform.prototype.moveForward = function (distance) {\r\n        this.translateLocal(Vector3D_1.Vector3D.Z_AXIS, distance);\r\n    };\r\n    /**\r\n     * Moves the 3d object backwards along it's local z axis\r\n     *\r\n     * @param    distance    The length of the movement\r\n     */\r\n    Transform.prototype.moveBackward = function (distance) {\r\n        this.translateLocal(Vector3D_1.Vector3D.Z_AXIS, -distance);\r\n    };\r\n    /**\r\n     * Moves the 3d object backwards along it's local x axis\r\n     *\r\n     * @param    distance    The length of the movement\r\n     */\r\n    Transform.prototype.moveLeft = function (distance) {\r\n        this.translateLocal(Vector3D_1.Vector3D.X_AXIS, -distance);\r\n    };\r\n    /**\r\n     * Moves the 3d object forwards along it's local x axis\r\n     *\r\n     * @param    distance    The length of the movement\r\n     */\r\n    Transform.prototype.moveRight = function (distance) {\r\n        this.translateLocal(Vector3D_1.Vector3D.X_AXIS, distance);\r\n    };\r\n    /**\r\n     * Moves the 3d object forwards along it's local y axis\r\n     *\r\n     * @param    distance    The length of the movement\r\n     */\r\n    Transform.prototype.moveUp = function (distance) {\r\n        this.translateLocal(Vector3D_1.Vector3D.Y_AXIS, distance);\r\n    };\r\n    /**\r\n     * Moves the 3d object backwards along it's local y axis\r\n     *\r\n     * @param    distance    The length of the movement\r\n     */\r\n    Transform.prototype.moveDown = function (distance) {\r\n        this.translateLocal(Vector3D_1.Vector3D.Y_AXIS, -distance);\r\n    };\r\n    /**\r\n     * Moves the 3d object directly to a point in space\r\n     *\r\n     * @param    dx        The amount of movement along the local x axis.\r\n     * @param    dy        The amount of movement along the local y axis.\r\n     * @param    dz        The amount of movement along the local z axis.\r\n     */\r\n    Transform.prototype.moveTo = function (dx, dy, dz) {\r\n        this._matrix3D.rawData[12] = dx;\r\n        this._matrix3D.rawData[13] = dy;\r\n        this._matrix3D.rawData[14] = dz;\r\n        this.invalidatePosition();\r\n    };\r\n    /**\r\n     * Rotates the 3d object around it's local x-axis\r\n     *\r\n     * @param    angle        The amount of rotation in degrees\r\n     */\r\n    Transform.prototype.pitch = function (angle) {\r\n        this.rotate(Vector3D_1.Vector3D.X_AXIS, angle);\r\n    };\r\n    /**\r\n     * Rotates the 3d object around it's local z-axis\r\n     *\r\n     * @param    angle        The amount of rotation in degrees\r\n     */\r\n    Transform.prototype.roll = function (angle) {\r\n        this.rotate(Vector3D_1.Vector3D.Z_AXIS, angle);\r\n    };\r\n    /**\r\n     * Rotates the 3d object around it's local y-axis\r\n     *\r\n     * @param    angle        The amount of rotation in degrees\r\n     */\r\n    Transform.prototype.yaw = function (angle) {\r\n        this.rotate(Vector3D_1.Vector3D.Y_AXIS, angle);\r\n    };\r\n    /**\r\n     * Rotates the 3d object around an axis by a defined angle\r\n     *\r\n     * @param    axis        The vector defining the axis of rotation\r\n     * @param    angle        The amount of rotation in degrees\r\n     */\r\n    Transform.prototype.rotate = function (axis, angle) {\r\n        this.matrix3D.prependRotation(angle, axis);\r\n        this.invalidateComponents();\r\n    };\r\n    /**\r\n     * Moves the 3d object along a vector by a defined length\r\n     *\r\n     * @param    axis        The vector defining the axis of movement\r\n     * @param    distance    The length of the movement\r\n     */\r\n    Transform.prototype.translate = function (axis, distance) {\r\n        var x = axis.x, y = axis.y, z = axis.z;\r\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\r\n        this.matrix3D.appendTranslation(x * len, y * len, z * len);\r\n        this.invalidatePosition();\r\n    };\r\n    /**\r\n     * Moves the 3d object along a vector by a defined length\r\n     *\r\n     * @param    axis        The vector defining the axis of movement\r\n     * @param    distance    The length of the movement\r\n     */\r\n    Transform.prototype.translateLocal = function (axis, distance) {\r\n        var x = axis.x, y = axis.y, z = axis.z;\r\n        var len = distance / Math.sqrt(x * x + y * y + z * z);\r\n        this.matrix3D.prependTranslation(x * len, y * len, z * len);\r\n        this.invalidatePosition();\r\n    };\r\n    Transform.prototype.clearMatrix3D = function () {\r\n        this._matrix3D.identity();\r\n        this.invalidateComponents();\r\n    };\r\n    Transform.prototype.clearColorTransform = function () {\r\n        if (!this._colorTransform)\r\n            return;\r\n        this._colorTransform.clear();\r\n        this.invalidateColorTransform();\r\n    };\r\n    /**\r\n     * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n     *\r\n     * @private\r\n     */\r\n    Transform.prototype.invalidateMatrix3D = function () {\r\n        this._matrix3DDirty = true;\r\n        this.dispatchEvent(new TransformEvent_1.TransformEvent(TransformEvent_1.TransformEvent.INVALIDATE_MATRIX3D, this));\r\n    };\r\n    Transform.prototype.invalidateComponents = function () {\r\n        this.invalidatePosition();\r\n        this._componentsDirty = true;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    Transform.prototype.invalidatePosition = function () {\r\n        this._matrix3D.invalidatePosition();\r\n        this.dispatchEvent(new TransformEvent_1.TransformEvent(TransformEvent_1.TransformEvent.INVALIDATE_MATRIX3D, this));\r\n    };\r\n    Transform.prototype.invalidateColorTransform = function () {\r\n        this.dispatchEvent(new TransformEvent_1.TransformEvent(TransformEvent_1.TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    Transform.prototype._updateMatrix3D = function () {\r\n        this._matrix3D.recompose(this._components);\r\n        this._matrix3DDirty = false;\r\n    };\r\n    Transform.prototype._updateComponents = function () {\r\n        var elements = this._matrix3D.decompose();\r\n        var vec;\r\n        vec = elements[1];\r\n        this._rotation.x = vec.x;\r\n        this._rotation.y = vec.y;\r\n        this._rotation.z = vec.z;\r\n        vec = elements[2];\r\n        this._skew.x = vec.x;\r\n        this._skew.y = vec.y;\r\n        this._skew.z = vec.z;\r\n        vec = elements[3];\r\n        this._scale.x = vec.x;\r\n        this._scale.y = vec.y;\r\n        this._scale.z = vec.z;\r\n        this._componentsDirty = false;\r\n    };\r\n    return Transform;\r\n}(EventDispatcher_1.EventDispatcher));\r\nexports.Transform = Transform;\r\n},{\"../events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/base\":[function(require,module,exports){\n\"use strict\";\r\nvar AlignmentMode_1 = require(\"./base/AlignmentMode\");\r\nexports.AlignmentMode = AlignmentMode_1.AlignmentMode;\r\nvar HierarchicalProperties_1 = require(\"./base/HierarchicalProperties\");\r\nexports.HierarchicalProperties = HierarchicalProperties_1.HierarchicalProperties;\r\nvar OrientationMode_1 = require(\"./base/OrientationMode\");\r\nexports.OrientationMode = OrientationMode_1.OrientationMode;\r\nvar Style_1 = require(\"./base/Style\");\r\nexports.Style = Style_1.Style;\r\nvar Timeline_1 = require(\"./base/Timeline\");\r\nexports.Timeline = Timeline_1.Timeline;\r\nvar TouchPoint_1 = require(\"./base/TouchPoint\");\r\nexports.TouchPoint = TouchPoint_1.TouchPoint;\r\nvar Transform_1 = require(\"./base/Transform\");\r\nexports.Transform = Transform_1.Transform;\r\n},{\"./base/AlignmentMode\":\"awayjs-display/lib/base/AlignmentMode\",\"./base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"./base/OrientationMode\":\"awayjs-display/lib/base/OrientationMode\",\"./base/Style\":\"awayjs-display/lib/base/Style\",\"./base/Timeline\":\"awayjs-display/lib/base/Timeline\",\"./base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"./base/Transform\":\"awayjs-display/lib/base/Transform\"}],\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\r\nvar BoundingVolumeBase_1 = require(\"../bounds/BoundingVolumeBase\");\r\nvar PrimitiveCubePrefab_1 = require(\"../prefabs/PrimitiveCubePrefab\");\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most sprites.\r\n */\r\nvar AxisAlignedBoundingBox = (function (_super) {\r\n    __extends(AxisAlignedBoundingBox, _super);\r\n    /**\r\n     * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n     */\r\n    function AxisAlignedBoundingBox(entity) {\r\n        _super.call(this, entity);\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._z = 0;\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._depth = 0;\r\n        this._centerX = 0;\r\n        this._centerY = 0;\r\n        this._centerZ = 0;\r\n        this._halfExtentsX = 0;\r\n        this._halfExtentsY = 0;\r\n        this._halfExtentsZ = 0;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AxisAlignedBoundingBox.prototype.nullify = function () {\r\n        this._x = this._y = this._z = 0;\r\n        this._width = this._height = this._depth = 0;\r\n        this._centerX = this._centerY = this._centerZ = 0;\r\n        this._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AxisAlignedBoundingBox.prototype.isInFrustum = function (planes, numPlanes) {\r\n        if (this._pInvalidated)\r\n            this._pUpdate();\r\n        for (var i = 0; i < numPlanes; ++i) {\r\n            var plane = planes[i];\r\n            var a = plane.a;\r\n            var b = plane.b;\r\n            var c = plane.c;\r\n            var flippedExtentX = a < 0 ? -this._halfExtentsX : this._halfExtentsX;\r\n            var flippedExtentY = b < 0 ? -this._halfExtentsY : this._halfExtentsY;\r\n            var flippedExtentZ = c < 0 ? -this._halfExtentsZ : this._halfExtentsZ;\r\n            var projDist = a * (this._centerX + flippedExtentX) + b * (this._centerY + flippedExtentY) + c * (this._centerZ + flippedExtentZ) - plane.d;\r\n            if (projDist < 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    AxisAlignedBoundingBox.prototype.rayIntersection = function (position, direction, targetNormal) {\r\n        if (this._pInvalidated)\r\n            this._pUpdate();\r\n        return this._box.rayIntersection(position, direction, targetNormal);\r\n    };\r\n    AxisAlignedBoundingBox.prototype.classifyToPlane = function (plane) {\r\n        var a = plane.a;\r\n        var b = plane.b;\r\n        var c = plane.c;\r\n        var centerDistance = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;\r\n        if (a < 0)\r\n            a = -a;\r\n        if (b < 0)\r\n            b = -b;\r\n        if (c < 0)\r\n            c = -c;\r\n        var boundOffset = a * this._halfExtentsX + b * this._halfExtentsY + c * this._halfExtentsZ;\r\n        return centerDistance > boundOffset ? PlaneClassification_1.PlaneClassification.FRONT : centerDistance < -boundOffset ? PlaneClassification_1.PlaneClassification.BACK : PlaneClassification_1.PlaneClassification.INTERSECT;\r\n    };\r\n    AxisAlignedBoundingBox.prototype._pUpdate = function () {\r\n        _super.prototype._pUpdate.call(this);\r\n        this._box = this._pEntity.getBox();\r\n        var matrix = this._pEntity.sceneTransform;\r\n        var hx = this._box.width / 2;\r\n        var hy = this._box.height / 2;\r\n        var hz = this._box.depth / 2;\r\n        var cx = this._box.x + hx;\r\n        var cy = this._box.y + hy;\r\n        var cz = this._box.z + hz;\r\n        var raw = matrix.rawData;\r\n        var m11 = raw[0], m12 = raw[4], m13 = raw[8], m14 = raw[12];\r\n        var m21 = raw[1], m22 = raw[5], m23 = raw[9], m24 = raw[13];\r\n        var m31 = raw[2], m32 = raw[6], m33 = raw[10], m34 = raw[14];\r\n        this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;\r\n        this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;\r\n        this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;\r\n        this._halfExtentsX = Math.abs(hx * m11 + hy * m12 + hz * m13);\r\n        this._halfExtentsY = Math.abs(hx * m21 + hy * m22 + hz * m23);\r\n        this._halfExtentsZ = Math.abs(hx * m31 + hy * m32 + hz * m33);\r\n        if (this._prefab) {\r\n            this._prefab.width = this._box.width;\r\n            this._prefab.height = this._box.height;\r\n            this._prefab.depth = this._box.depth;\r\n            this._pBoundsPrimitive.transform.matrix3D = matrix;\r\n        }\r\n        this._width = this._halfExtentsX * 2;\r\n        this._height = this._halfExtentsY * 2;\r\n        this._depth = this._halfExtentsZ * 2;\r\n        this._x = this._centerX - this._halfExtentsX;\r\n        this._y = this._centerY - this._halfExtentsY;\r\n        this._z = this._centerZ - this._halfExtentsZ;\r\n    };\r\n    AxisAlignedBoundingBox.prototype._pCreateBoundsPrimitive = function () {\r\n        this._prefab = new PrimitiveCubePrefab_1.PrimitiveCubePrefab(null, ElementsType_1.ElementsType.LINE);\r\n        return this._prefab.getNewObject();\r\n    };\r\n    return AxisAlignedBoundingBox;\r\n}(BoundingVolumeBase_1.BoundingVolumeBase));\r\nexports.AxisAlignedBoundingBox = AxisAlignedBoundingBox;\r\n},{\"../bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitiveCubePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\",\"awayjs-core/lib/geom/PlaneClassification\":undefined}],\"awayjs-display/lib/bounds/BoundingSphere\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\r\nvar BoundingVolumeBase_1 = require(\"../bounds/BoundingVolumeBase\");\r\nvar PrimitiveSpherePrefab_1 = require(\"../prefabs/PrimitiveSpherePrefab\");\r\nvar BoundingSphere = (function (_super) {\r\n    __extends(BoundingSphere, _super);\r\n    function BoundingSphere(entity) {\r\n        _super.call(this, entity);\r\n        this._radius = 0;\r\n        this._centerX = 0;\r\n        this._centerY = 0;\r\n        this._centerZ = 0;\r\n    }\r\n    BoundingSphere.prototype.nullify = function () {\r\n        this._centerX = this._centerY = this._centerZ = 0;\r\n        this._radius = 0;\r\n    };\r\n    BoundingSphere.prototype.isInFrustum = function (planes, numPlanes) {\r\n        if (this._pInvalidated)\r\n            this._pUpdate();\r\n        for (var i = 0; i < numPlanes; ++i) {\r\n            var plane = planes[i];\r\n            var flippedExtentX = plane.a < 0 ? -this._radius : this._radius;\r\n            var flippedExtentY = plane.b < 0 ? -this._radius : this._radius;\r\n            var flippedExtentZ = plane.c < 0 ? -this._radius : this._radius;\r\n            var projDist = plane.a * (this._centerX + flippedExtentX) + plane.b * (this._centerY + flippedExtentY) + plane.c * (this._centerZ + flippedExtentZ) - plane.d;\r\n            if (projDist < 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    BoundingSphere.prototype.rayIntersection = function (position, direction, targetNormal) {\r\n        if (this._pInvalidated)\r\n            this._pUpdate();\r\n        return this._sphere.rayIntersection(position, direction, targetNormal);\r\n    };\r\n    //@override\r\n    BoundingSphere.prototype.classifyToPlane = function (plane) {\r\n        var a = plane.a;\r\n        var b = plane.b;\r\n        var c = plane.c;\r\n        var dd = a * this._centerX + b * this._centerY + c * this._centerZ - plane.d;\r\n        if (a < 0)\r\n            a = -a;\r\n        if (b < 0)\r\n            b = -b;\r\n        if (c < 0)\r\n            c = -c;\r\n        var rr = (a + b + c) * this._radius;\r\n        return dd > rr ? PlaneClassification_1.PlaneClassification.FRONT : dd < -rr ? PlaneClassification_1.PlaneClassification.BACK : PlaneClassification_1.PlaneClassification.INTERSECT;\r\n    };\r\n    BoundingSphere.prototype._pUpdate = function () {\r\n        _super.prototype._pUpdate.call(this);\r\n        this._sphere = this._pEntity.getSphere();\r\n        var matrix = this._pEntity.sceneTransform;\r\n        var cx = this._sphere.x;\r\n        var cy = this._sphere.y;\r\n        var cz = this._sphere.z;\r\n        var r = this._sphere.radius;\r\n        var raw = matrix.rawData;\r\n        var m11 = raw[0], m12 = raw[4], m13 = raw[8], m14 = raw[12];\r\n        var m21 = raw[1], m22 = raw[5], m23 = raw[9], m24 = raw[13];\r\n        var m31 = raw[2], m32 = raw[6], m33 = raw[10], m34 = raw[14];\r\n        this._centerX = cx * m11 + cy * m12 + cz * m13 + m14;\r\n        this._centerY = cx * m21 + cy * m22 + cz * m23 + m24;\r\n        this._centerZ = cx * m31 + cy * m32 + cz * m33 + m34;\r\n        var rx = m11 + m12 + m13;\r\n        var ry = m21 + m22 + m23;\r\n        var rz = m31 + m32 + m33;\r\n        this._radius = r * Math.sqrt((rx * rx + ry * ry + rz * rz) / 3);\r\n        if (this._prefab) {\r\n            this._prefab.radius = r;\r\n            this._pBoundsPrimitive.x = cx;\r\n            this._pBoundsPrimitive.y = cy;\r\n            this._pBoundsPrimitive.z = cz;\r\n            this._pBoundsPrimitive.transform.matrix3D = matrix;\r\n        }\r\n    };\r\n    BoundingSphere.prototype._pCreateBoundsPrimitive = function () {\r\n        this._prefab = new PrimitiveSpherePrefab_1.PrimitiveSpherePrefab(null, ElementsType_1.ElementsType.LINE);\r\n        return this._prefab.getNewObject();\r\n    };\r\n    return BoundingSphere;\r\n}(BoundingVolumeBase_1.BoundingVolumeBase));\r\nexports.BoundingSphere = BoundingSphere;\r\n},{\"../bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitiveSpherePrefab\":\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\",\"awayjs-core/lib/geom/PlaneClassification\":undefined}],\"awayjs-display/lib/bounds/BoundingVolumeBase\":[function(require,module,exports){\n\"use strict\";\r\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nvar BoundingVolumeBase = (function () {\r\n    function BoundingVolumeBase(entity) {\r\n        this._pInvalidated = true;\r\n        this._pEntity = entity;\r\n    }\r\n    BoundingVolumeBase.prototype.dispose = function () {\r\n        this._pEntity = null;\r\n        this._pBoundsPrimitive = null;\r\n    };\r\n    Object.defineProperty(BoundingVolumeBase.prototype, \"boundsPrimitive\", {\r\n        get: function () {\r\n            if (this._pBoundsPrimitive == null) {\r\n                this._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n                this._pInvalidated = true;\r\n            }\r\n            if (this._pInvalidated)\r\n                this._pUpdate();\r\n            return this._pBoundsPrimitive;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BoundingVolumeBase.prototype.nullify = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    BoundingVolumeBase.prototype.isInFrustum = function (planes, numPlanes) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    BoundingVolumeBase.prototype.clone = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    BoundingVolumeBase.prototype.rayIntersection = function (position, direction, targetNormal) {\r\n        return -1;\r\n    };\r\n    BoundingVolumeBase.prototype.classifyToPlane = function (plane) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    BoundingVolumeBase.prototype._pUpdate = function () {\r\n        this._pInvalidated = false;\r\n    };\r\n    BoundingVolumeBase.prototype.invalidate = function () {\r\n        this._pInvalidated = true;\r\n    };\r\n    BoundingVolumeBase.prototype._pCreateBoundsPrimitive = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    return BoundingVolumeBase;\r\n}());\r\nexports.BoundingVolumeBase = BoundingVolumeBase;\r\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/bounds/BoundsType\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n *\r\n */\r\nvar BoundsType = (function () {\r\n    function BoundsType() {\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    BoundsType.SPHERE = \"sphere\";\r\n    /**\r\n     *\r\n     */\r\n    BoundsType.AXIS_ALIGNED_BOX = \"axisAlignedBox\";\r\n    /**\r\n     *\r\n     */\r\n    BoundsType.NULL = \"null\";\r\n    return BoundsType;\r\n}());\r\nexports.BoundsType = BoundsType;\r\n},{}],\"awayjs-display/lib/bounds/NullBounds\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar PlaneClassification_1 = require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nvar BoundingVolumeBase_1 = require(\"../bounds/BoundingVolumeBase\");\r\nvar NullBounds = (function (_super) {\r\n    __extends(NullBounds, _super);\r\n    function NullBounds(alwaysIn) {\r\n        if (alwaysIn === void 0) { alwaysIn = true; }\r\n        _super.call(this, null);\r\n        this._alwaysIn = alwaysIn;\r\n    }\r\n    //@override\r\n    NullBounds.prototype.clone = function () {\r\n        return new NullBounds(this._alwaysIn);\r\n    };\r\n    //@override\r\n    NullBounds.prototype.isInFrustum = function (planes, numPlanes) {\r\n        return this._alwaysIn;\r\n    };\r\n    NullBounds.prototype.classifyToPlane = function (plane) {\r\n        return PlaneClassification_1.PlaneClassification.INTERSECT;\r\n    };\r\n    return NullBounds;\r\n}(BoundingVolumeBase_1.BoundingVolumeBase));\r\nexports.NullBounds = NullBounds;\r\n},{\"../bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"awayjs-core/lib/geom/PlaneClassification\":undefined}],\"awayjs-display/lib/bounds\":[function(require,module,exports){\n\"use strict\";\r\nvar AxisAlignedBoundingBox_1 = require(\"./bounds/AxisAlignedBoundingBox\");\r\nexports.AxisAlignedBoundingBox = AxisAlignedBoundingBox_1.AxisAlignedBoundingBox;\r\nvar BoundingSphere_1 = require(\"./bounds/BoundingSphere\");\r\nexports.BoundingSphere = BoundingSphere_1.BoundingSphere;\r\nvar BoundingVolumeBase_1 = require(\"./bounds/BoundingVolumeBase\");\r\nexports.BoundingVolumeBase = BoundingVolumeBase_1.BoundingVolumeBase;\r\nvar BoundsType_1 = require(\"./bounds/BoundsType\");\r\nexports.BoundsType = BoundsType_1.BoundsType;\r\nvar NullBounds_1 = require(\"./bounds/NullBounds\");\r\nexports.NullBounds = NullBounds_1.NullBounds;\r\n},{\"./bounds/AxisAlignedBoundingBox\":\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\",\"./bounds/BoundingSphere\":\"awayjs-display/lib/bounds/BoundingSphere\",\"./bounds/BoundingVolumeBase\":\"awayjs-display/lib/bounds/BoundingVolumeBase\",\"./bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"./bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\"}],\"awayjs-display/lib/controllers/ControllerBase\":[function(require,module,exports){\n\"use strict\";\r\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nvar ControllerBase = (function () {\r\n    function ControllerBase(targetObject) {\r\n        if (targetObject === void 0) { targetObject = null; }\r\n        this._pAutoUpdate = true;\r\n        this.targetObject = targetObject;\r\n    }\r\n    ControllerBase.prototype.pNotifyUpdate = function () {\r\n        if (this._pTargetObject)\r\n            this._pTargetObject.invalidatePartitionBounds();\r\n    };\r\n    Object.defineProperty(ControllerBase.prototype, \"targetObject\", {\r\n        get: function () {\r\n            return this._pTargetObject;\r\n        },\r\n        set: function (val) {\r\n            if (this._pTargetObject == val)\r\n                return;\r\n            if (this._pTargetObject && this._pAutoUpdate)\r\n                this._pTargetObject._iController = null;\r\n            this._pTargetObject = val;\r\n            if (this._pTargetObject && this._pAutoUpdate)\r\n                this._pTargetObject._iController = this;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ControllerBase.prototype, \"autoUpdate\", {\r\n        get: function () {\r\n            return this._pAutoUpdate;\r\n        },\r\n        set: function (val) {\r\n            if (this._pAutoUpdate == val)\r\n                return;\r\n            this._pAutoUpdate = val;\r\n            if (this._pTargetObject) {\r\n                if (this._pAutoUpdate)\r\n                    this._pTargetObject._iController = this;\r\n                else\r\n                    this._pTargetObject._iController = null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ControllerBase.prototype.update = function (interpolate) {\r\n        if (interpolate === void 0) { interpolate = true; }\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ControllerBase.prototype.updateController = function () {\r\n        if (this._pControllerDirty && this._pAutoUpdate) {\r\n            this._pControllerDirty = false;\r\n            this.pNotifyUpdate();\r\n        }\r\n    };\r\n    return ControllerBase;\r\n}());\r\nexports.ControllerBase = ControllerBase;\r\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/controllers/FirstPersonController\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\r\nvar ControllerBase_1 = require(\"../controllers/ControllerBase\");\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nvar FirstPersonController = (function (_super) {\r\n    __extends(FirstPersonController, _super);\r\n    /**\r\n     * Creates a new <code>HoverController</code> object.\r\n     */\r\n    function FirstPersonController(targetObject, panAngle, tiltAngle, minTiltAngle, maxTiltAngle, steps, wrapPanAngle) {\r\n        if (targetObject === void 0) { targetObject = null; }\r\n        if (panAngle === void 0) { panAngle = 0; }\r\n        if (tiltAngle === void 0) { tiltAngle = 90; }\r\n        if (minTiltAngle === void 0) { minTiltAngle = -90; }\r\n        if (maxTiltAngle === void 0) { maxTiltAngle = 90; }\r\n        if (steps === void 0) { steps = 8; }\r\n        if (wrapPanAngle === void 0) { wrapPanAngle = false; }\r\n        _super.call(this, targetObject);\r\n        this._iCurrentPanAngle = 0;\r\n        this._iCurrentTiltAngle = 90;\r\n        this._panAngle = 0;\r\n        this._tiltAngle = 90;\r\n        this._minTiltAngle = -90;\r\n        this._maxTiltAngle = 90;\r\n        this._steps = 8;\r\n        this._walkIncrement = 0;\r\n        this._strafeIncrement = 0;\r\n        this._wrapPanAngle = false;\r\n        this.fly = false;\r\n        this.panAngle = panAngle;\r\n        this.tiltAngle = tiltAngle;\r\n        this.minTiltAngle = minTiltAngle;\r\n        this.maxTiltAngle = maxTiltAngle;\r\n        this.steps = steps;\r\n        this.wrapPanAngle = wrapPanAngle;\r\n        //values passed in contrustor are applied immediately\r\n        this._iCurrentPanAngle = this._panAngle;\r\n        this._iCurrentTiltAngle = this._tiltAngle;\r\n    }\r\n    Object.defineProperty(FirstPersonController.prototype, \"steps\", {\r\n        /**\r\n         * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n         *\r\n         * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n         *\r\n         * @see    #tiltAngle\r\n         * @see    #panAngle\r\n         */\r\n        get: function () {\r\n            return this._steps;\r\n        },\r\n        set: function (val) {\r\n            val = (val < 1) ? 1 : val;\r\n            if (this._steps == val)\r\n                return;\r\n            this._steps = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirstPersonController.prototype, \"panAngle\", {\r\n        /**\r\n         * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n         */\r\n        get: function () {\r\n            return this._panAngle;\r\n        },\r\n        set: function (val) {\r\n            if (this._panAngle == val)\r\n                return;\r\n            this._panAngle = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirstPersonController.prototype, \"tiltAngle\", {\r\n        /**\r\n         * Elevation angle of the camera in degrees. Defaults to 90.\r\n         */\r\n        get: function () {\r\n            return this._tiltAngle;\r\n        },\r\n        set: function (val) {\r\n            val = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n            if (this._tiltAngle == val)\r\n                return;\r\n            this._tiltAngle = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirstPersonController.prototype, \"minTiltAngle\", {\r\n        /**\r\n         * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n         *\r\n         * @see    #tiltAngle\r\n         */\r\n        get: function () {\r\n            return this._minTiltAngle;\r\n        },\r\n        set: function (val) {\r\n            if (this._minTiltAngle == val)\r\n                return;\r\n            this._minTiltAngle = val;\r\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirstPersonController.prototype, \"maxTiltAngle\", {\r\n        /**\r\n         * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n         *\r\n         * @see    #tiltAngle\r\n         */\r\n        get: function () {\r\n            return this._maxTiltAngle;\r\n        },\r\n        set: function (val) {\r\n            if (this._maxTiltAngle == val)\r\n                return;\r\n            this._maxTiltAngle = val;\r\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirstPersonController.prototype, \"wrapPanAngle\", {\r\n        /**\r\n         * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n         */\r\n        get: function () {\r\n            return this._wrapPanAngle;\r\n        },\r\n        set: function (val) {\r\n            if (this._wrapPanAngle == val)\r\n                return;\r\n            this._wrapPanAngle = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the current tilt angle and pan angle values.\r\n     *\r\n     * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n     *\r\n     * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n     *\r\n     * @see    #tiltAngle\r\n     * @see    #panAngle\r\n     * @see    #steps\r\n     */\r\n    FirstPersonController.prototype.update = function (interpolate) {\r\n        if (interpolate === void 0) { interpolate = true; }\r\n        if (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n            this._pControllerDirty = true;\r\n            if (this._wrapPanAngle) {\r\n                if (this._panAngle < 0) {\r\n                    this._iCurrentPanAngle += this._panAngle % 360 + 360 - this._panAngle;\r\n                    this._panAngle = this._panAngle % 360 + 360;\r\n                }\r\n                else {\r\n                    this._iCurrentPanAngle += this._panAngle % 360 - this._panAngle;\r\n                    this._panAngle = this._panAngle % 360;\r\n                }\r\n                while (this._panAngle - this._iCurrentPanAngle < -180)\r\n                    this._iCurrentPanAngle -= 360;\r\n                while (this._panAngle - this._iCurrentPanAngle > 180)\r\n                    this._iCurrentPanAngle += 360;\r\n            }\r\n            if (interpolate) {\r\n                this._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle) / (this.steps + 1);\r\n                this._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle) / (this.steps + 1);\r\n            }\r\n            else {\r\n                this._iCurrentTiltAngle = this._tiltAngle;\r\n                this._iCurrentPanAngle = this._panAngle;\r\n            }\r\n            //snap coords if angle differences are close\r\n            if ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n                this._iCurrentTiltAngle = this._tiltAngle;\r\n                this._iCurrentPanAngle = this._panAngle;\r\n            }\r\n        }\r\n        this.targetObject.rotationX = this._iCurrentTiltAngle;\r\n        this.targetObject.rotationY = this._iCurrentPanAngle;\r\n        if (this._walkIncrement) {\r\n            if (this.fly) {\r\n                this.targetObject.transform.moveForward(this._walkIncrement);\r\n            }\r\n            else {\r\n                this.targetObject.x += this._walkIncrement * Math.sin(this._panAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\r\n                this.targetObject.z += this._walkIncrement * Math.cos(this._panAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\r\n            }\r\n            this._walkIncrement = 0;\r\n        }\r\n        if (this._strafeIncrement) {\r\n            this.targetObject.transform.moveRight(this._strafeIncrement);\r\n            this._strafeIncrement = 0;\r\n        }\r\n    };\r\n    FirstPersonController.prototype.incrementWalk = function (val) {\r\n        if (val == 0)\r\n            return;\r\n        this._walkIncrement += val;\r\n        this.pNotifyUpdate();\r\n    };\r\n    FirstPersonController.prototype.incrementStrafe = function (val) {\r\n        if (val == 0)\r\n            return;\r\n        this._strafeIncrement += val;\r\n        this.pNotifyUpdate();\r\n    };\r\n    return FirstPersonController;\r\n}(ControllerBase_1.ControllerBase));\r\nexports.FirstPersonController = FirstPersonController;\r\n},{\"../controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"awayjs-core/lib/geom/MathConsts\":undefined}],\"awayjs-display/lib/controllers/FollowController\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar HoverController_1 = require(\"../controllers/HoverController\");\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nvar FollowController = (function (_super) {\r\n    __extends(FollowController, _super);\r\n    function FollowController(targetObject, lookAtObject, tiltAngle, distance) {\r\n        if (targetObject === void 0) { targetObject = null; }\r\n        if (lookAtObject === void 0) { lookAtObject = null; }\r\n        if (tiltAngle === void 0) { tiltAngle = 45; }\r\n        if (distance === void 0) { distance = 700; }\r\n        _super.call(this, targetObject, lookAtObject, 0, tiltAngle, distance);\r\n    }\r\n    FollowController.prototype.update = function (interpolate) {\r\n        if (interpolate === void 0) { interpolate = true; }\r\n        if (!this.lookAtObject)\r\n            return;\r\n        this.panAngle = this._pLookAtObject.rotationY - 180;\r\n        _super.prototype.update.call(this);\r\n    };\r\n    return FollowController;\r\n}(HoverController_1.HoverController));\r\nexports.FollowController = FollowController;\r\n},{\"../controllers/HoverController\":\"awayjs-display/lib/controllers/HoverController\"}],\"awayjs-display/lib/controllers/HoverController\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar LookAtController_1 = require(\"../controllers/LookAtController\");\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nvar HoverController = (function (_super) {\r\n    __extends(HoverController, _super);\r\n    /**\r\n     * Creates a new <code>HoverController</code> object.\r\n     */\r\n    function HoverController(targetObject, lookAtObject, panAngle, tiltAngle, distance, minTiltAngle, maxTiltAngle, minPanAngle, maxPanAngle, steps, yFactor, wrapPanAngle) {\r\n        if (targetObject === void 0) { targetObject = null; }\r\n        if (lookAtObject === void 0) { lookAtObject = null; }\r\n        if (panAngle === void 0) { panAngle = 0; }\r\n        if (tiltAngle === void 0) { tiltAngle = 90; }\r\n        if (distance === void 0) { distance = 1000; }\r\n        if (minTiltAngle === void 0) { minTiltAngle = -90; }\r\n        if (maxTiltAngle === void 0) { maxTiltAngle = 90; }\r\n        if (minPanAngle === void 0) { minPanAngle = null; }\r\n        if (maxPanAngle === void 0) { maxPanAngle = null; }\r\n        if (steps === void 0) { steps = 8; }\r\n        if (yFactor === void 0) { yFactor = 2; }\r\n        if (wrapPanAngle === void 0) { wrapPanAngle = false; }\r\n        _super.call(this, targetObject, lookAtObject);\r\n        this._iCurrentPanAngle = 0;\r\n        this._iCurrentTiltAngle = 90;\r\n        this._panAngle = 0;\r\n        this._tiltAngle = 90;\r\n        this._distance = 1000;\r\n        this._minPanAngle = -Infinity;\r\n        this._maxPanAngle = Infinity;\r\n        this._minTiltAngle = -90;\r\n        this._maxTiltAngle = 90;\r\n        this._steps = 8;\r\n        this._yFactor = 2;\r\n        this._wrapPanAngle = false;\r\n        this._upAxis = new Vector3D_1.Vector3D();\r\n        this.distance = distance;\r\n        this.panAngle = panAngle;\r\n        this.tiltAngle = tiltAngle;\r\n        this.minPanAngle = (minPanAngle != null) ? minPanAngle : -Infinity;\r\n        this.maxPanAngle = (maxPanAngle != null) ? maxPanAngle : Infinity;\r\n        this.minTiltAngle = minTiltAngle;\r\n        this.maxTiltAngle = maxTiltAngle;\r\n        this.steps = steps;\r\n        this.yFactor = yFactor;\r\n        this.wrapPanAngle = wrapPanAngle;\r\n        //values passed in contrustor are applied immediately\r\n        this._iCurrentPanAngle = this._panAngle;\r\n        this._iCurrentTiltAngle = this._tiltAngle;\r\n    }\r\n    Object.defineProperty(HoverController.prototype, \"steps\", {\r\n        /**\r\n         * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n         *\r\n         * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n         *\r\n         * @see    #tiltAngle\r\n         * @see    #panAngle\r\n         */\r\n        get: function () {\r\n            return this._steps;\r\n        },\r\n        set: function (val) {\r\n            val = (val < 1) ? 1 : val;\r\n            if (this._steps == val)\r\n                return;\r\n            this._steps = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HoverController.prototype, \"panAngle\", {\r\n        /**\r\n         * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n         */\r\n        get: function () {\r\n            return this._panAngle;\r\n        },\r\n        set: function (val) {\r\n            val = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n            if (this._panAngle == val)\r\n                return;\r\n            this._panAngle = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HoverController.prototype, \"tiltAngle\", {\r\n        /**\r\n         * Elevation angle of the camera in degrees. Defaults to 90.\r\n         */\r\n        get: function () {\r\n            return this._tiltAngle;\r\n        },\r\n        set: function (val) {\r\n            val = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n            if (this._tiltAngle == val)\r\n                return;\r\n            this._tiltAngle = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HoverController.prototype, \"distance\", {\r\n        /**\r\n         * Distance between the camera and the specified target. Defaults to 1000.\r\n         */\r\n        get: function () {\r\n            return this._distance;\r\n        },\r\n        set: function (val) {\r\n            if (this._distance == val)\r\n                return;\r\n            this._distance = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HoverController.prototype, \"minPanAngle\", {\r\n        /**\r\n         * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n         *\r\n         * @see    #panAngle\r\n         */\r\n        get: function () {\r\n            return this._minPanAngle;\r\n        },\r\n        set: function (val) {\r\n            if (this._minPanAngle == val)\r\n                return;\r\n            this._minPanAngle = val;\r\n            this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HoverController.prototype, \"maxPanAngle\", {\r\n        /**\r\n         * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n         *\r\n         * @see    #panAngle\r\n         */\r\n        get: function () {\r\n            return this._maxPanAngle;\r\n        },\r\n        set: function (val) {\r\n            if (this._maxPanAngle == val)\r\n                return;\r\n            this._maxPanAngle = val;\r\n            this.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HoverController.prototype, \"minTiltAngle\", {\r\n        /**\r\n         * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n         *\r\n         * @see    #tiltAngle\r\n         */\r\n        get: function () {\r\n            return this._minTiltAngle;\r\n        },\r\n        set: function (val) {\r\n            if (this._minTiltAngle == val)\r\n                return;\r\n            this._minTiltAngle = val;\r\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HoverController.prototype, \"maxTiltAngle\", {\r\n        /**\r\n         * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n         *\r\n         * @see    #tiltAngle\r\n         */\r\n        get: function () {\r\n            return this._maxTiltAngle;\r\n        },\r\n        set: function (val) {\r\n            if (this._maxTiltAngle == val)\r\n                return;\r\n            this._maxTiltAngle = val;\r\n            this.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HoverController.prototype, \"yFactor\", {\r\n        /**\r\n         * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n         *\r\n         * @see    #distance\r\n         */\r\n        get: function () {\r\n            return this._yFactor;\r\n        },\r\n        set: function (val) {\r\n            if (this._yFactor == val)\r\n                return;\r\n            this._yFactor = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HoverController.prototype, \"wrapPanAngle\", {\r\n        /**\r\n         * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n         */\r\n        get: function () {\r\n            return this._wrapPanAngle;\r\n        },\r\n        set: function (val) {\r\n            if (this._wrapPanAngle == val)\r\n                return;\r\n            this._wrapPanAngle = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the current tilt angle and pan angle values.\r\n     *\r\n     * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n     *\r\n     * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n     *\r\n     * @see    #tiltAngle\r\n     * @see    #panAngle\r\n     * @see    #steps\r\n     */\r\n    HoverController.prototype.update = function (interpolate) {\r\n        if (interpolate === void 0) { interpolate = true; }\r\n        if (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n            this._pControllerDirty = true;\r\n            if (this._wrapPanAngle) {\r\n                if (this._panAngle < 0) {\r\n                    this._iCurrentPanAngle += this._panAngle % 360 + 360 - this._panAngle;\r\n                    this._panAngle = this._panAngle % 360 + 360;\r\n                }\r\n                else {\r\n                    this._iCurrentPanAngle += this._panAngle % 360 - this._panAngle;\r\n                    this._panAngle = this._panAngle % 360;\r\n                }\r\n                while (this._panAngle - this._iCurrentPanAngle < -180)\r\n                    this._iCurrentPanAngle -= 360;\r\n                while (this._panAngle - this._iCurrentPanAngle > 180)\r\n                    this._iCurrentPanAngle += 360;\r\n            }\r\n            if (interpolate) {\r\n                this._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle) / (this.steps + 1);\r\n                this._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle) / (this.steps + 1);\r\n            }\r\n            else {\r\n                this._iCurrentPanAngle = this._panAngle;\r\n                this._iCurrentTiltAngle = this._tiltAngle;\r\n            }\r\n            //snap coords if angle differences are close\r\n            if ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n                this._iCurrentTiltAngle = this._tiltAngle;\r\n                this._iCurrentPanAngle = this._panAngle;\r\n            }\r\n        }\r\n        var pos = (this.lookAtObject) ? this.lookAtObject.transform.position : (this.lookAtPosition) ? this.lookAtPosition : this._pOrigin;\r\n        this.targetObject.x = pos.x + this.distance * Math.sin(this._iCurrentPanAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * Math.cos(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\r\n        this.targetObject.y = pos.y + this.distance * Math.sin(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * this.yFactor;\r\n        this.targetObject.z = pos.z + this.distance * Math.cos(this._iCurrentPanAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * Math.cos(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\r\n        this._upAxis.x = -Math.sin(this._iCurrentPanAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * Math.sin(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\r\n        this._upAxis.y = Math.cos(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\r\n        this._upAxis.z = -Math.cos(this._iCurrentPanAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS) * Math.sin(this._iCurrentTiltAngle * MathConsts_1.MathConsts.DEGREES_TO_RADIANS);\r\n        if (this._pTargetObject) {\r\n            if (this._pLookAtPosition)\r\n                this._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n            else if (this._pLookAtObject)\r\n                this._pTargetObject.lookAt(this._pLookAtObject.scene ? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n        }\r\n    };\r\n    return HoverController;\r\n}(LookAtController_1.LookAtController));\r\nexports.HoverController = HoverController;\r\n},{\"../controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/controllers/LookAtController\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar ControllerBase_1 = require(\"../controllers/ControllerBase\");\r\nvar DisplayObjectEvent_1 = require(\"../events/DisplayObjectEvent\");\r\nvar LookAtController = (function (_super) {\r\n    __extends(LookAtController, _super);\r\n    function LookAtController(targetObject, lookAtObject) {\r\n        var _this = this;\r\n        if (targetObject === void 0) { targetObject = null; }\r\n        if (lookAtObject === void 0) { lookAtObject = null; }\r\n        _super.call(this, targetObject);\r\n        this._pOrigin = new Vector3D_1.Vector3D(0.0, 0.0, 0.0);\r\n        this._onLookAtObjectChangedDelegate = function (event) { return _this.onLookAtObjectChanged(event); };\r\n        if (lookAtObject)\r\n            this.lookAtObject = lookAtObject;\r\n        else\r\n            this.lookAtPosition = new Vector3D_1.Vector3D();\r\n    }\r\n    Object.defineProperty(LookAtController.prototype, \"lookAtPosition\", {\r\n        get: function () {\r\n            return this._pLookAtPosition;\r\n        },\r\n        set: function (val) {\r\n            if (this._pLookAtObject) {\r\n                this._pLookAtObject.removeEventListener(DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n                this._pLookAtObject = null;\r\n            }\r\n            this._pLookAtPosition = val;\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LookAtController.prototype, \"lookAtObject\", {\r\n        get: function () {\r\n            return this._pLookAtObject;\r\n        },\r\n        set: function (val) {\r\n            if (this._pLookAtPosition)\r\n                this._pLookAtPosition = null;\r\n            if (this._pLookAtObject == val)\r\n                return;\r\n            if (this._pLookAtObject)\r\n                this._pLookAtObject.removeEventListener(DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n            this._pLookAtObject = val;\r\n            if (this._pLookAtObject)\r\n                this._pLookAtObject.addEventListener(DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n            this.pNotifyUpdate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //@override\r\n    LookAtController.prototype.update = function (interpolate) {\r\n        if (interpolate === void 0) { interpolate = true; }\r\n        if (this._pTargetObject) {\r\n            if (this._pLookAtPosition)\r\n                this._pTargetObject.lookAt(this._pLookAtPosition);\r\n            else if (this._pLookAtObject)\r\n                this._pTargetObject.lookAt(this._pLookAtObject.scene ? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n        }\r\n    };\r\n    LookAtController.prototype.onLookAtObjectChanged = function (event) {\r\n        this.pNotifyUpdate();\r\n    };\r\n    return LookAtController;\r\n}(ControllerBase_1.ControllerBase));\r\nexports.LookAtController = LookAtController;\r\n},{\"../controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"../events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/controllers/SpringController\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar LookAtController_1 = require(\"../controllers/LookAtController\");\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nvar SpringController = (function (_super) {\r\n    __extends(SpringController, _super);\r\n    function SpringController(targetObject, lookAtObject, stiffness, mass, damping) {\r\n        if (targetObject === void 0) { targetObject = null; }\r\n        if (lookAtObject === void 0) { lookAtObject = null; }\r\n        if (stiffness === void 0) { stiffness = 1; }\r\n        if (mass === void 0) { mass = 40; }\r\n        if (damping === void 0) { damping = 4; }\r\n        _super.call(this, targetObject, lookAtObject);\r\n        /**\r\n         * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n         */\r\n        this.positionOffset = new Vector3D_1.Vector3D(0, 500, -1000);\r\n        this.stiffness = stiffness;\r\n        this.damping = damping;\r\n        this.mass = mass;\r\n        this._velocity = new Vector3D_1.Vector3D();\r\n        this._dv = new Vector3D_1.Vector3D();\r\n        this._stretch = new Vector3D_1.Vector3D();\r\n        this._force = new Vector3D_1.Vector3D();\r\n        this._acceleration = new Vector3D_1.Vector3D();\r\n        this._desiredPosition = new Vector3D_1.Vector3D();\r\n    }\r\n    SpringController.prototype.update = function (interpolate) {\r\n        if (interpolate === void 0) { interpolate = true; }\r\n        var offs;\r\n        if (!this._pLookAtObject || !this._pTargetObject)\r\n            return;\r\n        this._pControllerDirty = true;\r\n        offs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n        this._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n        this._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n        this._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n        this._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n        this._stretch.scaleBy(-this.stiffness);\r\n        this._dv.copyFrom(this._velocity);\r\n        this._dv.scaleBy(this.damping);\r\n        this._force.x = this._stretch.x - this._dv.x;\r\n        this._force.y = this._stretch.y - this._dv.y;\r\n        this._force.z = this._stretch.z - this._dv.z;\r\n        this._acceleration.copyFrom(this._force);\r\n        this._acceleration.scaleBy(1 / this.mass);\r\n        this._velocity.incrementBy(this._acceleration);\r\n        var position = this._pTargetObject.transform.position.add(this._velocity);\r\n        this._pTargetObject.transform.moveTo(position.x, position.y, position.z);\r\n        _super.prototype.update.call(this);\r\n    };\r\n    return SpringController;\r\n}(LookAtController_1.LookAtController));\r\nexports.SpringController = SpringController;\r\n},{\"../controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/controllers\":[function(require,module,exports){\n\"use strict\";\r\nvar ControllerBase_1 = require(\"./controllers/ControllerBase\");\r\nexports.ControllerBase = ControllerBase_1.ControllerBase;\r\nvar FirstPersonController_1 = require(\"./controllers/FirstPersonController\");\r\nexports.FirstPersonController = FirstPersonController_1.FirstPersonController;\r\nvar FollowController_1 = require(\"./controllers/FollowController\");\r\nexports.FollowController = FollowController_1.FollowController;\r\nvar HoverController_1 = require(\"./controllers/HoverController\");\r\nexports.HoverController = HoverController_1.HoverController;\r\nvar LookAtController_1 = require(\"./controllers/LookAtController\");\r\nexports.LookAtController = LookAtController_1.LookAtController;\r\nvar SpringController_1 = require(\"./controllers/SpringController\");\r\nexports.SpringController = SpringController_1.SpringController;\r\n},{\"./controllers/ControllerBase\":\"awayjs-display/lib/controllers/ControllerBase\",\"./controllers/FirstPersonController\":\"awayjs-display/lib/controllers/FirstPersonController\",\"./controllers/FollowController\":\"awayjs-display/lib/controllers/FollowController\",\"./controllers/HoverController\":\"awayjs-display/lib/controllers/HoverController\",\"./controllers/LookAtController\":\"awayjs-display/lib/controllers/LookAtController\",\"./controllers/SpringController\":\"awayjs-display/lib/controllers/SpringController\"}],\"awayjs-display/lib/display/Billboard\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\r\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\r\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\r\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\r\nvar SurfaceEvent_1 = require(\"../events/SurfaceEvent\");\r\nvar DefaultMaterialManager_1 = require(\"../managers/DefaultMaterialManager\");\r\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\nvar Billboard = (function (_super) {\r\n    __extends(Billboard, _super);\r\n    function Billboard(material, pixelSnapping, smoothing) {\r\n        var _this = this;\r\n        if (pixelSnapping === void 0) { pixelSnapping = \"auto\"; }\r\n        if (smoothing === void 0) { smoothing = false; }\r\n        _super.call(this);\r\n        this._pIsEntity = true;\r\n        this.onInvalidateTextureDelegate = function (event) { return _this.onInvalidateTexture(event); };\r\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\r\n        this.material = material;\r\n        this._updateDimensions();\r\n        //default bounds type\r\n        this._boundsType = BoundsType_1.BoundsType.AXIS_ALIGNED_BOX;\r\n    }\r\n    Object.defineProperty(Billboard.prototype, \"animator\", {\r\n        /**\r\n         * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\r\n         */\r\n        get: function () {\r\n            return this._animator;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Billboard.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return Billboard.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Billboard.prototype, \"billboardRect\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._billboardRect;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Billboard.prototype, \"billboardHeight\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._billboardHeight;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Billboard.prototype, \"billboardWidth\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._billboardWidth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Billboard.prototype, \"material\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._material;\r\n        },\r\n        set: function (value) {\r\n            if (value == this._material)\r\n                return;\r\n            if (this._material) {\r\n                this._material.iRemoveOwner(this);\r\n                this._material.removeEventListener(SurfaceEvent_1.SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\r\n            }\r\n            this._material = value;\r\n            if (this._material) {\r\n                this._material.iAddOwner(this);\r\n                this._material.addEventListener(SurfaceEvent_1.SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @protected\r\n     */\r\n    Billboard.prototype._pUpdateBoxBounds = function () {\r\n        _super.prototype._pUpdateBoxBounds.call(this);\r\n        this._pBoxBounds.width = this._billboardRect.width;\r\n        this._pBoxBounds.height = this._billboardRect.height;\r\n    };\r\n    Billboard.prototype.clone = function () {\r\n        var clone = new Billboard(this.material);\r\n        return clone;\r\n    };\r\n    Object.defineProperty(Billboard.prototype, \"style\", {\r\n        /**\r\n         * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\r\n         */\r\n        get: function () {\r\n            return this._style;\r\n        },\r\n        set: function (value) {\r\n            if (this._style == value)\r\n                return;\r\n            if (this._style)\r\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this._style = value;\r\n            if (this._style)\r\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this._onInvalidateProperties();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @param shortestCollisionDistance\r\n     * @returns {boolean}\r\n     *\r\n     * @internal\r\n     */\r\n    Billboard.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\r\n        return pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    Billboard.prototype.onInvalidateTexture = function (event) {\r\n        this._updateDimensions();\r\n    };\r\n    Billboard.prototype._acceptTraverser = function (traverser) {\r\n        traverser.applyRenderable(this);\r\n    };\r\n    Billboard.prototype._updateDimensions = function () {\r\n        var texture = this.material.getTextureAt(0);\r\n        var image = texture ? ((this._style ? this._style.getImageAt(texture) : null) || (this.material.style ? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\r\n        if (image) {\r\n            var sampler = ((this._style ? this._style.getSamplerAt(texture) : null) || (this.material.style ? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager_1.DefaultMaterialManager.getDefaultSampler());\r\n            if (sampler.imageRect) {\r\n                this._billboardWidth = sampler.imageRect.width * image.width;\r\n                this._billboardHeight = sampler.imageRect.height * image.height;\r\n            }\r\n            else {\r\n                this._billboardWidth = image.rect.width;\r\n                this._billboardHeight = image.rect.height;\r\n            }\r\n            this._billboardRect = sampler.frameRect || new Rectangle_1.Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n        }\r\n        else {\r\n            this._billboardWidth = 1;\r\n            this._billboardHeight = 1;\r\n            this._billboardRect = new Rectangle_1.Rectangle(0, 0, 1, 1);\r\n        }\r\n        this._pInvalidateBounds();\r\n        this.invalidateElements();\r\n    };\r\n    Billboard.prototype.invalidateElements = function () {\r\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_ELEMENTS, this));\r\n    };\r\n    Billboard.prototype.invalidateSurface = function () {\r\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_SURFACE, this));\r\n    };\r\n    Billboard.prototype._onInvalidateProperties = function (event) {\r\n        if (event === void 0) { event = null; }\r\n        this.invalidateSurface();\r\n        this._updateDimensions();\r\n    };\r\n    Billboard.assetType = \"[asset Billboard]\";\r\n    return Billboard;\r\n}(DisplayObject_1.DisplayObject));\r\nexports.Billboard = Billboard;\r\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"../managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-core/lib/geom/Rectangle\":undefined}],\"awayjs-display/lib/display/Camera\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\r\nvar Plane3D_1 = require(\"awayjs-core/lib/geom/Plane3D\");\r\nvar ProjectionEvent_1 = require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nvar PerspectiveProjection_1 = require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\r\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\r\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\r\nvar CameraEvent_1 = require(\"../events/CameraEvent\");\r\nvar Camera = (function (_super) {\r\n    __extends(Camera, _super);\r\n    function Camera(projection) {\r\n        var _this = this;\r\n        if (projection === void 0) { projection = null; }\r\n        _super.call(this);\r\n        this._viewProjection = new Matrix3D_1.Matrix3D();\r\n        this._viewProjectionDirty = true;\r\n        this._frustumPlanesDirty = true;\r\n        this._pIsEntity = true;\r\n        this._onProjectionMatrixChangedDelegate = function (event) { return _this.onProjectionMatrixChanged(event); };\r\n        this._projection = projection || new PerspectiveProjection_1.PerspectiveProjection();\r\n        this._projection.addEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n        this._frustumPlanes = [];\r\n        for (var i = 0; i < 6; ++i)\r\n            this._frustumPlanes[i] = new Plane3D_1.Plane3D();\r\n        this.z = -1000;\r\n        //default bounds type\r\n        this._boundsType = BoundsType_1.BoundsType.NULL;\r\n    }\r\n    Object.defineProperty(Camera.prototype, \"assetType\", {\r\n        //@override\r\n        get: function () {\r\n            return Camera.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Camera.prototype.onProjectionMatrixChanged = function (event) {\r\n        this._viewProjectionDirty = true;\r\n        this._frustumPlanesDirty = true;\r\n        this.dispatchEvent(event);\r\n    };\r\n    Object.defineProperty(Camera.prototype, \"frustumPlanes\", {\r\n        get: function () {\r\n            if (this._frustumPlanesDirty)\r\n                this.updateFrustum();\r\n            return this._frustumPlanes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Camera.prototype.updateFrustum = function () {\r\n        var a, b, c;\r\n        //var d : Number;\r\n        var c11, c12, c13, c14;\r\n        var c21, c22, c23, c24;\r\n        var c31, c32, c33, c34;\r\n        var c41, c42, c43, c44;\r\n        var p;\r\n        var raw = this.viewProjection.rawData;\r\n        var invLen;\r\n        c11 = raw[0];\r\n        c12 = raw[4];\r\n        c13 = raw[8];\r\n        c14 = raw[12];\r\n        c21 = raw[1];\r\n        c22 = raw[5];\r\n        c23 = raw[9];\r\n        c24 = raw[13];\r\n        c31 = raw[2];\r\n        c32 = raw[6];\r\n        c33 = raw[10];\r\n        c34 = raw[14];\r\n        c41 = raw[3];\r\n        c42 = raw[7];\r\n        c43 = raw[11];\r\n        c44 = raw[15];\r\n        // left plane\r\n        p = this._frustumPlanes[0];\r\n        a = c41 + c11;\r\n        b = c42 + c12;\r\n        c = c43 + c13;\r\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\r\n        p.a = a * invLen;\r\n        p.b = b * invLen;\r\n        p.c = c * invLen;\r\n        p.d = -(c44 + c14) * invLen;\r\n        // right plane\r\n        p = this._frustumPlanes[1];\r\n        a = c41 - c11;\r\n        b = c42 - c12;\r\n        c = c43 - c13;\r\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\r\n        p.a = a * invLen;\r\n        p.b = b * invLen;\r\n        p.c = c * invLen;\r\n        p.d = (c14 - c44) * invLen;\r\n        // bottom\r\n        p = this._frustumPlanes[2];\r\n        a = c41 + c21;\r\n        b = c42 + c22;\r\n        c = c43 + c23;\r\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\r\n        p.a = a * invLen;\r\n        p.b = b * invLen;\r\n        p.c = c * invLen;\r\n        p.d = -(c44 + c24) * invLen;\r\n        // top\r\n        p = this._frustumPlanes[3];\r\n        a = c41 - c21;\r\n        b = c42 - c22;\r\n        c = c43 - c23;\r\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\r\n        p.a = a * invLen;\r\n        p.b = b * invLen;\r\n        p.c = c * invLen;\r\n        p.d = (c24 - c44) * invLen;\r\n        // near\r\n        p = this._frustumPlanes[4];\r\n        a = c31;\r\n        b = c32;\r\n        c = c33;\r\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\r\n        p.a = a * invLen;\r\n        p.b = b * invLen;\r\n        p.c = c * invLen;\r\n        p.d = -c34 * invLen;\r\n        // far\r\n        p = this._frustumPlanes[5];\r\n        a = c41 - c31;\r\n        b = c42 - c32;\r\n        c = c43 - c33;\r\n        invLen = 1 / Math.sqrt(a * a + b * b + c * c);\r\n        p.a = a * invLen;\r\n        p.b = b * invLen;\r\n        p.c = c * invLen;\r\n        p.d = (c34 - c44) * invLen;\r\n        this._frustumPlanesDirty = false;\r\n    };\r\n    Camera.prototype.pInvalidateHierarchicalProperties = function (bitFlag) {\r\n        if (_super.prototype.pInvalidateHierarchicalProperties.call(this, bitFlag))\r\n            return true;\r\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM) {\r\n            this._viewProjectionDirty = true;\r\n            this._frustumPlanesDirty = true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(Camera.prototype, \"projection\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._projection;\r\n        },\r\n        set: function (value) {\r\n            if (this._projection == value)\r\n                return;\r\n            if (!value)\r\n                throw new Error(\"Projection cannot be null!\");\r\n            this._projection.removeEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n            this._projection = value;\r\n            this._projection.addEventListener(ProjectionEvent_1.ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n            this.dispatchEvent(new CameraEvent_1.CameraEvent(CameraEvent_1.CameraEvent.PROJECTION_CHANGED, this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Camera.prototype, \"viewProjection\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            if (this._viewProjectionDirty) {\r\n                this._viewProjection.copyFrom(this.inverseSceneTransform);\r\n                this._viewProjection.append(this._projection.matrix);\r\n                this._viewProjectionDirty = false;\r\n            }\r\n            return this._viewProjection;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n     *\r\n     * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n     * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n     * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n     * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n     */\r\n    Camera.prototype.getRay = function (nX, nY, sZ) {\r\n        return this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n    };\r\n    /**\r\n     * Calculates the normalised position in screen space of the given scene position.\r\n     *\r\n     * @param point3d the position vector of the scene coordinates to be projected.\r\n     * @return The normalised screen position of the given scene coordinates.\r\n     */\r\n    Camera.prototype.project = function (point3d) {\r\n        return this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n    };\r\n    /**\r\n     * Calculates the scene position of the given normalized coordinates in screen space.\r\n     *\r\n     * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n     * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n     * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n     * @return The scene position of the given screen coordinates.\r\n     */\r\n    Camera.prototype.unproject = function (nX, nY, sZ) {\r\n        return this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n    };\r\n    Camera.prototype._applyRenderer = function (renderer) {\r\n        // Since this getter is invoked every iteration of the render loop, and\r\n        // the prefab construct could affect the sub-sprites, the prefab is\r\n        // validated here to give it a chance to rebuild.\r\n        if (this._iSourcePrefab)\r\n            this._iSourcePrefab._iValidate();\r\n        //nothing to do here\r\n    };\r\n    Camera.assetType = \"[asset Camera]\";\r\n    return Camera;\r\n}(DisplayObjectContainer_1.DisplayObjectContainer));\r\nexports.Camera = Camera;\r\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"awayjs-core/lib/events/ProjectionEvent\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Plane3D\":undefined,\"awayjs-core/lib/projections/PerspectiveProjection\":undefined}],\"awayjs-display/lib/display/DirectionalLight\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar LightBase_1 = require(\"../display/LightBase\");\r\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\r\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\r\nvar DirectionalShadowMapper_1 = require(\"../materials/shadowmappers/DirectionalShadowMapper\");\r\nvar DirectionalLight = (function (_super) {\r\n    __extends(DirectionalLight, _super);\r\n    function DirectionalLight(xDir, yDir, zDir) {\r\n        if (xDir === void 0) { xDir = 0; }\r\n        if (yDir === void 0) { yDir = -1; }\r\n        if (zDir === void 0) { zDir = 1; }\r\n        _super.call(this);\r\n        this._pAabbPoints = new Array(24);\r\n        this._pIsEntity = true;\r\n        this.direction = new Vector3D_1.Vector3D(xDir, yDir, zDir);\r\n        this._sceneDirection = new Vector3D_1.Vector3D();\r\n        //default bounds type\r\n        this._boundsType = BoundsType_1.BoundsType.NULL;\r\n    }\r\n    Object.defineProperty(DirectionalLight.prototype, \"assetType\", {\r\n        get: function () {\r\n            return DirectionalLight.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DirectionalLight.prototype, \"sceneDirection\", {\r\n        get: function () {\r\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM)\r\n                this.pUpdateSceneTransform();\r\n            return this._sceneDirection;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DirectionalLight.prototype, \"direction\", {\r\n        get: function () {\r\n            return this._direction;\r\n        },\r\n        set: function (value) {\r\n            this._direction = value;\r\n            if (!this._tmpLookAt)\r\n                this._tmpLookAt = new Vector3D_1.Vector3D();\r\n            this._tmpLookAt.x = this.x + this._direction.x;\r\n            this._tmpLookAt.y = this.y + this._direction.y;\r\n            this._tmpLookAt.z = this.z + this._direction.z;\r\n            this.lookAt(this._tmpLookAt);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //@override\r\n    DirectionalLight.prototype.pUpdateSceneTransform = function () {\r\n        _super.prototype.pUpdateSceneTransform.call(this);\r\n        this.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n        this._sceneDirection.normalize();\r\n    };\r\n    //@override\r\n    DirectionalLight.prototype.pCreateShadowMapper = function () {\r\n        return new DirectionalShadowMapper_1.DirectionalShadowMapper();\r\n    };\r\n    //override\r\n    DirectionalLight.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\r\n        if (target === void 0) { target = null; }\r\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        var m = new Matrix3D_1.Matrix3D();\r\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\r\n        m.append(this.inverseSceneTransform);\r\n        if (!this._projAABBPoints)\r\n            this._projAABBPoints = [];\r\n        m.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n        var xMin = Infinity, xMax = -Infinity;\r\n        var yMin = Infinity, yMax = -Infinity;\r\n        var zMin = Infinity, zMax = -Infinity;\r\n        var d;\r\n        for (var i = 0; i < 24;) {\r\n            d = this._projAABBPoints[i++];\r\n            if (d < xMin)\r\n                xMin = d;\r\n            if (d > xMax)\r\n                xMax = d;\r\n            d = this._projAABBPoints[i++];\r\n            if (d < yMin)\r\n                yMin = d;\r\n            if (d > yMax)\r\n                yMax = d;\r\n            d = this._projAABBPoints[i++];\r\n            if (d < zMin)\r\n                zMin = d;\r\n            if (d > zMax)\r\n                zMax = d;\r\n        }\r\n        var invXRange = 1 / (xMax - xMin);\r\n        var invYRange = 1 / (yMax - yMin);\r\n        var invZRange = 1 / (zMax - zMin);\r\n        raw[0] = 2 * invXRange;\r\n        raw[5] = 2 * invYRange;\r\n        raw[10] = invZRange;\r\n        raw[12] = -(xMax + xMin) * invXRange;\r\n        raw[13] = -(yMax + yMin) * invYRange;\r\n        raw[14] = -zMin * invZRange;\r\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n        raw[15] = 1;\r\n        if (!target)\r\n            target = new Matrix3D_1.Matrix3D();\r\n        target.copyRawDataFrom(raw);\r\n        target.prepend(m);\r\n        return target;\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @protected\r\n     */\r\n    DirectionalLight.prototype._pUpdateBoxBounds = function () {\r\n        _super.prototype._pUpdateBoxBounds.call(this);\r\n        //update points\r\n        var minX = this._pBoxBounds.x;\r\n        var minY = this._pBoxBounds.y - this._pBoxBounds.height;\r\n        var minZ = this._pBoxBounds.z;\r\n        var maxX = this._pBoxBounds.x + this._pBoxBounds.width;\r\n        var maxY = this._pBoxBounds.y;\r\n        var maxZ = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n        this._pAabbPoints[0] = minX;\r\n        this._pAabbPoints[1] = minY;\r\n        this._pAabbPoints[2] = minZ;\r\n        this._pAabbPoints[3] = maxX;\r\n        this._pAabbPoints[4] = minY;\r\n        this._pAabbPoints[5] = minZ;\r\n        this._pAabbPoints[6] = minX;\r\n        this._pAabbPoints[7] = maxY;\r\n        this._pAabbPoints[8] = minZ;\r\n        this._pAabbPoints[9] = maxX;\r\n        this._pAabbPoints[10] = maxY;\r\n        this._pAabbPoints[11] = minZ;\r\n        this._pAabbPoints[12] = minX;\r\n        this._pAabbPoints[13] = minY;\r\n        this._pAabbPoints[14] = maxZ;\r\n        this._pAabbPoints[15] = maxX;\r\n        this._pAabbPoints[16] = minY;\r\n        this._pAabbPoints[17] = maxZ;\r\n        this._pAabbPoints[18] = minX;\r\n        this._pAabbPoints[19] = maxY;\r\n        this._pAabbPoints[20] = maxZ;\r\n        this._pAabbPoints[21] = maxX;\r\n        this._pAabbPoints[22] = maxY;\r\n        this._pAabbPoints[23] = maxZ;\r\n    };\r\n    DirectionalLight.assetType = \"[light DirectionalLight]\";\r\n    return DirectionalLight;\r\n}(LightBase_1.LightBase));\r\nexports.DirectionalLight = DirectionalLight;\r\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"../materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/DisplayObjectContainer\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\r\nvar RangeError_1 = require(\"awayjs-core/lib/errors/RangeError\");\r\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\r\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nvar DisplayObjectContainer = (function (_super) {\r\n    __extends(DisplayObjectContainer, _super);\r\n    /**\r\n     * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n     * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n     * constructors for the following subclasses of DisplayObjectContainer:\r\n     * <ul>\r\n     *   <li><code>new Loader()</code></li>\r\n     *   <li><code>new Sprite()</code></li>\r\n     *   <li><code>new MovieClip()</code></li>\r\n     * </ul>\r\n     */\r\n    function DisplayObjectContainer() {\r\n        _super.call(this);\r\n        this._mouseChildren = true;\r\n        this._depth_childs = {};\r\n        this._nextHighestDepth = 0;\r\n        this._children = new Array();\r\n    }\r\n    Object.defineProperty(DisplayObjectContainer.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return DisplayObjectContainer.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObjectContainer.prototype, \"mouseChildren\", {\r\n        /**\r\n         * Determines whether or not the children of the object are mouse, or user\r\n         * input device, enabled. If an object is enabled, a user can interact with\r\n         * it by using a mouse or user input device. The default is\r\n         * <code>true</code>.\r\n         *\r\n         * <p>This property is useful when you create a button with an instance of\r\n         * the Sprite class(instead of using the SimpleButton class). When you use a\r\n         * Sprite instance to create a button, you can choose to decorate the button\r\n         * by using the <code>addChild()</code> method to add additional Sprite\r\n         * instances. This process can cause unexpected behavior with mouse events\r\n         * because the Sprite instances you add as children can become the target\r\n         * object of a mouse event when you expect the parent instance to be the\r\n         * target object. To ensure that the parent instance serves as the target\r\n         * objects for mouse events, you can set the <code>mouseChildren</code>\r\n         * property of the parent instance to <code>false</code>.</p>\r\n         *\r\n         * <p> No event is dispatched by setting this property. You must use the\r\n         * <code>addEventListener()</code> method to create interactive\r\n         * functionality.</p>\r\n         */\r\n        get: function () {\r\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MOUSE_ENABLED)\r\n                this._updateMouseEnabled();\r\n            return this._mouseChildren;\r\n        },\r\n        set: function (value) {\r\n            if (this._mouseChildren == value)\r\n                return;\r\n            this._mouseChildren = value;\r\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.MOUSE_ENABLED);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObjectContainer.prototype, \"numChildren\", {\r\n        /**\r\n         * Returns the number of children of this object.\r\n         */\r\n        get: function () {\r\n            return this._children.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n     * instance. The child is added to the front(top) of all other children in\r\n     * this DisplayObjectContainer instance.(To add a child to a specific index\r\n     * position, use the <code>addChildAt()</code> method.)\r\n     *\r\n     * <p>If you add a child object that already has a different display object\r\n     * container as a parent, the object is removed from the child list of the\r\n     * other display object container. </p>\r\n     *\r\n     * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n     * problems with a published SWF file, including security problems and\r\n     * conflicts with other loaded SWF files. There is only one Stage within a\r\n     * Flash runtime instance, no matter how many SWF files you load into the\r\n     * runtime. So, generally, objects should not be added to the Stage,\r\n     * directly, at all. The only object the Stage should contain is the root\r\n     * object. Create a DisplayObjectContainer to contain all of the items on the\r\n     * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n     * to the Stage.</p>\r\n     *\r\n     * @param child The DisplayObject instance to add as a child of this\r\n     *              DisplayObjectContainer instance.\r\n     * @return The DisplayObject instance that you pass in the <code>child</code>\r\n     *         parameter.\r\n     * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n     *                       throws if the caller is a child(or grandchild etc.)\r\n     *                       of the child being added.\r\n     * @event added Dispatched when a display object is added to the display\r\n     *              list.\r\n     */\r\n    DisplayObjectContainer.prototype.addChild = function (child) {\r\n        return this.addChildAt(child, this._children.length);\r\n    };\r\n    DisplayObjectContainer.prototype.addChildAtDepth = function (child, depth, replace) {\r\n        if (replace === void 0) { replace = true; }\r\n        if (child == null)\r\n            throw new ArgumentError_1.ArgumentError(\"Parameter child cannot be null.\");\r\n        //if child already has a parent, remove it.\r\n        if (child._pParent)\r\n            child._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n        var index = this.getDepthIndexInternal(depth);\r\n        if (index != -1) {\r\n            if (replace) {\r\n                this.removeChildAt(index);\r\n            }\r\n            else {\r\n                //move depth of existing child up by 1\r\n                this.addChildAtDepth(this._children[index], depth + 1, false);\r\n            }\r\n        }\r\n        if (this._nextHighestDepth < depth + 1)\r\n            this._nextHighestDepth = depth + 1;\r\n        this._depth_childs[depth] = child;\r\n        this._children.push(child);\r\n        child._depthID = depth;\r\n        child.iSetParent(this);\r\n        this._invalidateChildren();\r\n        return child;\r\n    };\r\n    /**\r\n     * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n     * instance. The child is added at the index position specified. An index of\r\n     * 0 represents the back(bottom) of the display list for this\r\n     * DisplayObjectContainer object.\r\n     *\r\n     * <p>For example, the following example shows three display objects, labeled\r\n     * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n     *\r\n     * <p>If you add a child object that already has a different display object\r\n     * container as a parent, the object is removed from the child list of the\r\n     * other display object container. </p>\r\n     *\r\n     * @param child The DisplayObject instance to add as a child of this\r\n     *              DisplayObjectContainer instance.\r\n     * @param index The index position to which the child is added. If you\r\n     *              specify a currently occupied index position, the child object\r\n     *              that exists at that position and all higher positions are\r\n     *              moved up one position in the child list.\r\n     * @return The DisplayObject instance that you pass in the <code>child</code>\r\n     *         parameter.\r\n     * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n     *                       throws if the caller is a child(or grandchild etc.)\r\n     *                       of the child being added.\r\n     * @throws RangeError    Throws if the index position does not exist in the\r\n     *                       child list.\r\n     * @event added Dispatched when a display object is added to the display\r\n     *              list.\r\n     */\r\n    DisplayObjectContainer.prototype.addChildAt = function (child, index) {\r\n        return this.addChildAtDepth(child, (index < this._children.length) ? this._children[index]._depthID : this.getNextHighestDepth(), false);\r\n    };\r\n    DisplayObjectContainer.prototype.addChildren = function () {\r\n        var childarray = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            childarray[_i - 0] = arguments[_i];\r\n        }\r\n        var len = childarray.length;\r\n        for (var i = 0; i < len; i++)\r\n            this.addChild(childarray[i]);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    DisplayObjectContainer.prototype.clone = function () {\r\n        var newInstance = new DisplayObjectContainer();\r\n        this.copyTo(newInstance);\r\n        return newInstance;\r\n    };\r\n    DisplayObjectContainer.prototype.copyTo = function (newInstance) {\r\n        _super.prototype.copyTo.call(this, newInstance);\r\n        newInstance.mouseChildren = this._mouseChildren;\r\n        var len = this._children.length;\r\n        for (var i = 0; i < len; ++i)\r\n            newInstance.addChild(this._children[i].clone());\r\n    };\r\n    /**\r\n     * Determines whether the specified display object is a child of the\r\n     * DisplayObjectContainer instance or the instance itself. The search\r\n     * includes the entire display list including this DisplayObjectContainer\r\n     * instance. Grandchildren, great-grandchildren, and so on each return\r\n     * <code>true</code>.\r\n     *\r\n     * @param child The child object to test.\r\n     * @return <code>true</code> if the <code>child</code> object is a child of\r\n     *         the DisplayObjectContainer or the container itself; otherwise\r\n     *         <code>false</code>.\r\n     */\r\n    DisplayObjectContainer.prototype.contains = function (child) {\r\n        return this._children.indexOf(child) >= 0;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    DisplayObjectContainer.prototype.disposeValues = function () {\r\n        for (var i = this._children.length - 1; i >= 0; i--)\r\n            this.removeChild(this._children[i]);\r\n        _super.prototype.disposeValues.call(this);\r\n    };\r\n    DisplayObjectContainer.prototype.getChildAtDepth = function (depth) {\r\n        return this._depth_childs[depth];\r\n    };\r\n    /**\r\n     * Returns the child display object instance that exists at the specified\r\n     * index.\r\n     *\r\n     * @param index The index position of the child object.\r\n     * @return The child display object at the specified index position.\r\n     * @throws RangeError    Throws if the index does not exist in the child\r\n     *                       list.\r\n     */\r\n    DisplayObjectContainer.prototype.getChildAt = function (index) {\r\n        var child = this._children[index];\r\n        if (child == null)\r\n            throw new RangeError_1.RangeError(\"Index does not exist in the child list of the caller\");\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the child display object that exists with the specified name. If\r\n     * more that one child display object has the specified name, the method\r\n     * returns the first object in the child list.\r\n     *\r\n     * <p>The <code>getChildAt()</code> method is faster than the\r\n     * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n     * accesses a child from a cached array, whereas the\r\n     * <code>getChildByName()</code> method has to traverse a linked list to\r\n     * access a child.</p>\r\n     *\r\n     * @param name The name of the child to return.\r\n     * @return The child display object with the specified name.\r\n     */\r\n    DisplayObjectContainer.prototype.getChildByName = function (name) {\r\n        var len = this._children.length;\r\n        for (var i = 0; i < len; ++i)\r\n            if (this._children[i].name == name)\r\n                return this._children[i];\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the index position of a <code>child</code> DisplayObject instance.\r\n     *\r\n     * @param child The DisplayObject instance to identify.\r\n     * @return The index position of the child display object to identify.\r\n     * @throws ArgumentError Throws if the child parameter is not a child of this\r\n     *                       object.\r\n     */\r\n    DisplayObjectContainer.prototype.getChildIndex = function (child) {\r\n        var childIndex = this._children.indexOf(child);\r\n        if (childIndex == -1)\r\n            throw new ArgumentError_1.ArgumentError(\"Child parameter is not a child of the caller\");\r\n        return childIndex;\r\n    };\r\n    DisplayObjectContainer.prototype.getNextHighestDepth = function () {\r\n        if (this._nextHighestDepthDirty)\r\n            this._updateNextHighestDepth();\r\n        return this._nextHighestDepth;\r\n    };\r\n    /**\r\n     * Returns an array of objects that lie under the specified point and are\r\n     * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n     * instance. Any child objects that are inaccessible for security reasons are\r\n     * omitted from the returned array. To determine whether this security\r\n     * restriction affects the returned array, call the\r\n     * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n     *\r\n     * <p>The <code>point</code> parameter is in the coordinate space of the\r\n     * Stage, which may differ from the coordinate space of the display object\r\n     * container(unless the display object container is the Stage). You can use\r\n     * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n     * methods to convert points between these coordinate spaces.</p>\r\n     *\r\n     * @param point The point under which to look.\r\n     * @return An array of objects that lie under the specified point and are\r\n     *         children(or grandchildren, and so on) of this\r\n     *         DisplayObjectContainer instance.\r\n     */\r\n    DisplayObjectContainer.prototype.getObjectsUnderPoint = function (point) {\r\n        return new Array();\r\n    };\r\n    /**\r\n     * Removes the specified <code>child</code> DisplayObject instance from the\r\n     * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n     * property of the removed child is set to <code>null</code> , and the object\r\n     * is garbage collected if no other references to the child exist. The index\r\n     * positions of any display objects above the child in the\r\n     * DisplayObjectContainer are decreased by 1.\r\n     *\r\n     * <p>The garbage collector reallocates unused memory space. When a variable\r\n     * or object is no longer actively referenced or stored somewhere, the\r\n     * garbage collector sweeps through and wipes out the memory space it used to\r\n     * occupy if no other references to it exist.</p>\r\n     *\r\n     * @param child The DisplayObject instance to remove.\r\n     * @return The DisplayObject instance that you pass in the <code>child</code>\r\n     *         parameter.\r\n     * @throws ArgumentError Throws if the child parameter is not a child of this\r\n     *                       object.\r\n     */\r\n    DisplayObjectContainer.prototype.removeChild = function (child) {\r\n        if (child == null)\r\n            throw new ArgumentError_1.ArgumentError(\"Parameter child cannot be null\");\r\n        this.removeChildAt(this.getChildIndex(child));\r\n        return child;\r\n    };\r\n    DisplayObjectContainer.prototype.removeChildAtDepth = function (depth) {\r\n        return this.removeChildAt(this.getDepthIndexInternal(depth));\r\n    };\r\n    /**\r\n     * Removes a child DisplayObject from the specified <code>index</code>\r\n     * position in the child list of the DisplayObjectContainer. The\r\n     * <code>parent</code> property of the removed child is set to\r\n     * <code>null</code>, and the object is garbage collected if no other\r\n     * references to the child exist. The index positions of any display objects\r\n     * above the child in the DisplayObjectContainer are decreased by 1.\r\n     *\r\n     * <p>The garbage collector reallocates unused memory space. When a variable\r\n     * or object is no longer actively referenced or stored somewhere, the\r\n     * garbage collector sweeps through and wipes out the memory space it used to\r\n     * occupy if no other references to it exist.</p>\r\n     *\r\n     * @param index The child index of the DisplayObject to remove.\r\n     * @return The DisplayObject instance that was removed.\r\n     * @throws RangeError    Throws if the index does not exist in the child\r\n     *                       list.\r\n     * @throws SecurityError This child display object belongs to a sandbox to\r\n     *                       which the calling object does not have access. You\r\n     *                       can avoid this situation by having the child movie\r\n     *                       call the <code>Security.allowDomain()</code> method.\r\n     */\r\n    DisplayObjectContainer.prototype.removeChildAt = function (index) {\r\n        var child = this.removeChildAtInternal(index);\r\n        child.iSetParent(null);\r\n        this._invalidateChildren();\r\n        return child;\r\n    };\r\n    /**\r\n     * Removes all <code>child</code> DisplayObject instances from the child list\r\n     * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n     * of the removed children is set to <code>null</code>, and the objects are\r\n     * garbage collected if no other references to the children exist.\r\n     *\r\n     * The garbage collector reallocates unused memory space. When a variable or\r\n     * object is no longer actively referenced or stored somewhere, the garbage\r\n     * collector sweeps through and wipes out the memory space it used to occupy\r\n     * if no other references to it exist.\r\n     *\r\n     * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n     * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n     * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n     *                       not exist in the child list.\r\n     */\r\n    DisplayObjectContainer.prototype.removeChildren = function (beginIndex, endIndex) {\r\n        if (beginIndex === void 0) { beginIndex = 0; }\r\n        if (endIndex === void 0) { endIndex = 2147483647; }\r\n        if (beginIndex < 0)\r\n            throw new RangeError_1.RangeError(\"beginIndex is out of range of the child list\");\r\n        if (endIndex > this._children.length)\r\n            throw new RangeError_1.RangeError(\"endIndex is out of range of the child list\");\r\n        for (var i = beginIndex; i < endIndex; i++)\r\n            this.removeChild(this._children[i]);\r\n    };\r\n    /**\r\n     * Changes the position of an existing child in the display object container.\r\n     * This affects the layering of child objects. For example, the following\r\n     * example shows three display objects, labeled a, b, and c, at index\r\n     * positions 0, 1, and 2, respectively:\r\n     *\r\n     * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n     * index position that is already occupied, the only positions that change\r\n     * are those in between the display object's former and new position. All\r\n     * others will stay the same. If a child is moved to an index LOWER than its\r\n     * current index, all children in between will INCREASE by 1 for their index\r\n     * reference. If a child is moved to an index HIGHER than its current index,\r\n     * all children in between will DECREASE by 1 for their index reference. For\r\n     * example, if the display object container in the previous example is named\r\n     * <code>container</code>, you can swap the position of the display objects\r\n     * labeled a and b by calling the following code:</p>\r\n     *\r\n     * <p>This code results in the following arrangement of objects:</p>\r\n     *\r\n     * @param child The child DisplayObject instance for which you want to change\r\n     *              the index number.\r\n     * @param index The resulting index number for the <code>child</code> display\r\n     *              object.\r\n     * @throws ArgumentError Throws if the child parameter is not a child of this\r\n     *                       object.\r\n     * @throws RangeError    Throws if the index does not exist in the child\r\n     *                       list.\r\n     */\r\n    DisplayObjectContainer.prototype.setChildIndex = function (child, index) {\r\n        //TODO\r\n    };\r\n    /**\r\n     * Swaps the z-order (front-to-back order) of the two specified child\r\n     * objects. All other child objects in the display object container remain in\r\n     * the same index positions.\r\n     *\r\n     * @param child1 The first child object.\r\n     * @param child2 The second child object.\r\n     * @throws ArgumentError Throws if either child parameter is not a child of\r\n     *                       this object.\r\n     */\r\n    DisplayObjectContainer.prototype.swapChildren = function (child1, child2) {\r\n        this.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2));\r\n    };\r\n    /**\r\n     * Swaps the z-order(front-to-back order) of the child objects at the two\r\n     * specified index positions in the child list. All other child objects in\r\n     * the display object container remain in the same index positions.\r\n     *\r\n     * @param index1 The index position of the first child object.\r\n     * @param index2 The index position of the second child object.\r\n     * @throws RangeError If either index does not exist in the child list.\r\n     */\r\n    DisplayObjectContainer.prototype.swapChildrenAt = function (index1, index2) {\r\n        var depth = this._children[index2]._depthID;\r\n        var child = this._children[index1];\r\n        this.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\r\n        this.addChildAtDepth(child, depth);\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @protected\r\n     */\r\n    DisplayObjectContainer.prototype._pUpdateBoxBounds = function () {\r\n        _super.prototype._pUpdateBoxBounds.call(this);\r\n        var box;\r\n        var numChildren = this._children.length;\r\n        if (numChildren > 0) {\r\n            var min;\r\n            var max;\r\n            var minX, minY, minZ;\r\n            var maxX, maxY, maxZ;\r\n            for (var i = 0; i < numChildren; ++i) {\r\n                box = this._children[i].getBox(this);\r\n                if (i == 0) {\r\n                    maxX = box.width + (minX = box.x);\r\n                    maxY = box.height + (minY = box.y);\r\n                    maxZ = box.depth + (minZ = box.z);\r\n                }\r\n                else {\r\n                    max = box.width + (min = box.x);\r\n                    if (min < minX)\r\n                        minX = min;\r\n                    if (max > maxX)\r\n                        maxX = max;\r\n                    max = box.height + (min = box.y);\r\n                    if (min < minY)\r\n                        minY = min;\r\n                    if (max > maxY)\r\n                        maxY = max;\r\n                    max = box.depth + (min = box.z);\r\n                    if (min < minZ)\r\n                        minZ = min;\r\n                    if (max > maxZ)\r\n                        maxZ = max;\r\n                }\r\n            }\r\n            this._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n            this._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n            this._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n        }\r\n        else {\r\n            this._pBoxBounds.setBoundIdentity();\r\n        }\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    DisplayObjectContainer.prototype.pInvalidateHierarchicalProperties = function (bitFlag) {\r\n        if (_super.prototype.pInvalidateHierarchicalProperties.call(this, bitFlag))\r\n            return true;\r\n        var len = this._children.length;\r\n        for (var i = 0; i < len; ++i)\r\n            this._children[i].pInvalidateHierarchicalProperties(bitFlag);\r\n        return false;\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    DisplayObjectContainer.prototype._iSetScene = function (value, partition) {\r\n        _super.prototype._iSetScene.call(this, value, partition);\r\n        var len = this._children.length;\r\n        for (var i = 0; i < len; ++i)\r\n            this._children[i]._iSetScene(value, partition);\r\n    };\r\n    /**\r\n     * @private\r\n     *\r\n     * @param child\r\n     */\r\n    DisplayObjectContainer.prototype.removeChildAtInternal = function (index) {\r\n        var child = this._children.splice(index, 1)[0];\r\n        //update next highest depth\r\n        if (this._nextHighestDepth == child._depthID + 1)\r\n            this._nextHighestDepthDirty = true;\r\n        delete this._depth_childs[child._depthID];\r\n        child._depthID = -16384;\r\n        return child;\r\n    };\r\n    DisplayObjectContainer.prototype.getDepthIndexInternal = function (depth) {\r\n        if (!this._depth_childs[depth])\r\n            return -1;\r\n        return this._children.indexOf(this._depth_childs[depth]);\r\n    };\r\n    DisplayObjectContainer.prototype._updateNextHighestDepth = function () {\r\n        this._nextHighestDepthDirty = false;\r\n        this._nextHighestDepth = 0;\r\n        var len = this._children.length;\r\n        for (var i = 0; i < len; i++)\r\n            if (this._nextHighestDepth < this._children[i]._depthID)\r\n                this._nextHighestDepth = this._children[i]._depthID;\r\n        this._nextHighestDepth += 1;\r\n    };\r\n    DisplayObjectContainer.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\r\n        var numChildren = this._children.length;\r\n        for (var i = 0; i < numChildren; i++)\r\n            if (this._children[i].hitTestPoint(x, y, shapeFlag, masksFlag))\r\n                return true;\r\n        return false;\r\n    };\r\n    DisplayObjectContainer.prototype._updateMaskMode = function () {\r\n        if (this.maskMode)\r\n            this.mouseChildren = false;\r\n        _super.prototype._updateMaskMode.call(this);\r\n    };\r\n    DisplayObjectContainer.prototype._invalidateChildren = function () {\r\n        if (this._pIsContainer != Boolean(this._children.length)) {\r\n            if (this._pImplicitPartition)\r\n                this._pImplicitPartition._iUnregisterEntity(this);\r\n            this._pIsContainer = Boolean(this._children.length);\r\n            if (this._pImplicitPartition)\r\n                this._pImplicitPartition._iRegisterEntity(this);\r\n        }\r\n        this._pInvalidateBounds();\r\n    };\r\n    DisplayObjectContainer.assetType = \"[asset DisplayObjectContainer]\";\r\n    return DisplayObjectContainer;\r\n}(DisplayObject_1.DisplayObject));\r\nexports.DisplayObjectContainer = DisplayObjectContainer;\r\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"awayjs-core/lib/errors/ArgumentError\":undefined,\"awayjs-core/lib/errors/RangeError\":undefined}],\"awayjs-display/lib/display/DisplayObject\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\r\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nvar Sphere_1 = require(\"awayjs-core/lib/geom/Sphere\");\r\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\r\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\r\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\r\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\r\nvar AlignmentMode_1 = require(\"../base/AlignmentMode\");\r\nvar OrientationMode_1 = require(\"../base/OrientationMode\");\r\nvar Transform_1 = require(\"../base/Transform\");\r\nvar PickingCollision_1 = require(\"../pick/PickingCollision\");\r\nvar DisplayObjectEvent_1 = require(\"../events/DisplayObjectEvent\");\r\nvar TransformEvent_1 = require(\"../events/TransformEvent\");\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n *\r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nvar DisplayObject = (function (_super) {\r\n    __extends(DisplayObject, _super);\r\n    /**\r\n     * Creates a new <code>DisplayObject</code> instance.\r\n     */\r\n    function DisplayObject() {\r\n        var _this = this;\r\n        _super.call(this);\r\n        this._queuedEvents = new Array();\r\n        this._boxBoundsInvalid = true;\r\n        this._sphereBoundsInvalid = true;\r\n        this._pSceneTransform = new Matrix3D_1.Matrix3D();\r\n        this._pIsEntity = false;\r\n        this._pIsContainer = false;\r\n        this._sessionID = -1;\r\n        this._depthID = -16384;\r\n        this._inverseSceneTransform = new Matrix3D_1.Matrix3D();\r\n        this._scenePosition = new Vector3D_1.Vector3D();\r\n        this._explicitVisibility = true;\r\n        this._explicitMaskId = -1;\r\n        this._pImplicitVisibility = true;\r\n        this._pImplicitMaskId = -1;\r\n        this._pImplicitMaskIds = new Array();\r\n        this._explicitMouseEnabled = true;\r\n        this._pImplicitMouseEnabled = true;\r\n        this._orientationMatrix = new Matrix3D_1.Matrix3D();\r\n        this._inheritColorTransform = false;\r\n        this._maskMode = false;\r\n        //temp vector used in global to local\r\n        this._tempVector3D = new Vector3D_1.Vector3D();\r\n        /**\r\n         *\r\n         */\r\n        this.alignmentMode = AlignmentMode_1.AlignmentMode.REGISTRATION_POINT;\r\n        /**\r\n         *\r\n         */\r\n        this.castsShadows = true;\r\n        /**\r\n         *\r\n         */\r\n        this.orientationMode = OrientationMode_1.OrientationMode.DEFAULT;\r\n        /**\r\n         *\r\n         */\r\n        this.zOffset = 0;\r\n        //creation of associated transform object\r\n        this._transform = new Transform_1.Transform();\r\n        //setup transform listeners\r\n        this._transform.addEventListener(TransformEvent_1.TransformEvent.INVALIDATE_MATRIX3D, function (event) { return _this._onInvalidateMatrix3D(event); });\r\n        this._transform.addEventListener(TransformEvent_1.TransformEvent.INVALIDATE_COLOR_TRANSFORM, function (event) { return _this._onInvalidateColorTransform(event); });\r\n        //default bounds type\r\n        this._boundsType = BoundsType_1.BoundsType.AXIS_ALIGNED_BOX;\r\n    }\r\n    Object.defineProperty(DisplayObject.prototype, \"adapter\", {\r\n        /**\r\n         * adapter is used to provide MovieClip to scripts taken from different platforms\r\n         * setter typically managed by factory\r\n         */\r\n        get: function () {\r\n            return this._adapter;\r\n        },\r\n        set: function (value) {\r\n            this._adapter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"inheritColorTransform\", {\r\n        get: function () {\r\n            return this._inheritColorTransform;\r\n        },\r\n        set: function (value) {\r\n            if (this._inheritColorTransform == value)\r\n                return;\r\n            this._inheritColorTransform = value;\r\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"alpha\", {\r\n        /**\r\n         * Indicates the alpha transparency value of the object specified. Valid\r\n         * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n         * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n         * even though they are invisible.\r\n         */\r\n        get: function () {\r\n            return this._transform.colorTransform ? this._transform.colorTransform.alphaMultiplier : 1;\r\n        },\r\n        set: function (value) {\r\n            if (!this._transform.colorTransform)\r\n                this._transform.colorTransform = new ColorTransform_1.ColorTransform();\r\n            this._transform.colorTransform.alphaMultiplier = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"boundsType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._boundsType;\r\n        },\r\n        set: function (value) {\r\n            if (this._boundsType == value)\r\n                return;\r\n            this._boundsType = value;\r\n            this.invalidate();\r\n            this._pInvalidateBounds();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"depth\", {\r\n        /**\r\n         * Indicates the depth of the display object, in pixels. The depth is\r\n         * calculated based on the bounds of the content of the display object. When\r\n         * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n         * is adjusted accordingly, as shown in the following code:\r\n         *\r\n         * <p>Except for TextField and Video objects, a display object with no\r\n         * content (such as an empty sprite) has a depth of 0, even if you try to\r\n         * set <code>depth</code> to a different value.</p>\r\n         */\r\n        get: function () {\r\n            return this.getBox().depth * this.scaleZ;\r\n        },\r\n        set: function (val) {\r\n            if (this._depth == val)\r\n                return;\r\n            this._depth = val;\r\n            this._setScaleZ(val / this.getBox().depth);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"eulers\", {\r\n        /**\r\n         * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n         */\r\n        get: function () {\r\n            if (!this._eulers)\r\n                this._eulers = new Vector3D_1.Vector3D();\r\n            this._eulers.x = this.rotationX;\r\n            this._eulers.y = this.rotationY;\r\n            this._eulers.z = this.rotationZ;\r\n            return this._eulers;\r\n        },\r\n        set: function (value) {\r\n            this.rotationX = value.x;\r\n            this.rotationY = value.y;\r\n            this.rotationZ = value.z;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"height\", {\r\n        /**\r\n         * An indexed array that contains each filter object currently associated\r\n         * with the display object. The flash.filters package contains several\r\n         * classes that define specific filters you can use.\r\n         *\r\n         * <p>Filters can be applied in Flash Professional at design time, or at run\r\n         * time by using ActionScript code. To apply a filter by using ActionScript,\r\n         * you must make a temporary copy of the entire <code>filters</code> array,\r\n         * modify the temporary array, then assign the value of the temporary array\r\n         * back to the <code>filters</code> array. You cannot directly add a new\r\n         * filter object to the <code>filters</code> array.</p>\r\n         *\r\n         * <p>To add a filter by using ActionScript, perform the following steps\r\n         * (assume that the target display object is named\r\n         * <code>myDisplayObject</code>):</p>\r\n         *\r\n         * <ol>\r\n         *   <li>Create a new filter object by using the constructor method of your\r\n         * chosen filter class.</li>\r\n         *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n         * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n         *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n         * array.</li>\r\n         *   <li>Assign the value of the temporary array to the\r\n         * <code>myDisplayObject.filters</code> array.</li>\r\n         * </ol>\r\n         *\r\n         * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n         * a temporary array. Instead, you can directly assign an array literal that\r\n         * contains one or more filter objects that you create. The first example in\r\n         * the Examples section adds a drop shadow filter by using code that handles\r\n         * both defined and undefined <code>filters</code> arrays.</p>\r\n         *\r\n         * <p>To modify an existing filter object, you must use the technique of\r\n         * modifying a copy of the <code>filters</code> array:</p>\r\n         *\r\n         * <ol>\r\n         *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n         * array, such as one named <code>myFilters</code>.</li>\r\n         *   <li>Modify the property by using the temporary array,\r\n         * <code>myFilters</code>. For example, to set the quality property of the\r\n         * first filter in the array, you could use the following code:\r\n         * <code>myFilters[0].quality = 1;</code></li>\r\n         *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n         * array.</li>\r\n         * </ol>\r\n         *\r\n         * <p>At load time, if a display object has an associated filter, it is\r\n         * marked to cache itself as a transparent bitmap. From this point forward,\r\n         * as long as the display object has a valid filter list, the player caches\r\n         * the display object as a bitmap. This source bitmap is used as a source\r\n         * image for the filter effects. Each display object usually has two bitmaps:\r\n         * one with the original unfiltered source display object and another for the\r\n         * final image after filtering. The final image is used when rendering. As\r\n         * long as the display object does not change, the final image does not need\r\n         * updating.</p>\r\n         *\r\n         * <p>The flash.filters package includes classes for filters. For example, to\r\n         * create a DropShadow filter, you would write:</p>\r\n         *\r\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n         *                       and the shader output type is not compatible with\r\n         *                       this operation(the shader must specify a\r\n         *                       <code>pixel4</code> output).\r\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n         *                       and the shader doesn't specify any image input or\r\n         *                       the first input is not an <code>image4</code> input.\r\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n         *                       and the shader specifies an image input that isn't\r\n         *                       provided.\r\n         * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n         *                       ByteArray or Vector.<Number> instance as a shader\r\n         *                       input, and the <code>width</code> and\r\n         *                       <code>height</code> properties aren't specified for\r\n         *                       the ShaderInput object, or the specified values\r\n         *                       don't match the amount of data in the input data.\r\n         *                       See the <code>ShaderInput.input</code> property for\r\n         *                       more information.\r\n         */\r\n        //\t\tpublic filters:Array<Dynamic>;\r\n        /**\r\n         * Indicates the height of the display object, in pixels. The height is\r\n         * calculated based on the bounds of the content of the display object. When\r\n         * you set the <code>height</code> property, the <code>scaleY</code> property\r\n         * is adjusted accordingly, as shown in the following code:\r\n         *\r\n         * <p>Except for TextField and Video objects, a display object with no\r\n         * content (such as an empty sprite) has a height of 0, even if you try to\r\n         * set <code>height</code> to a different value.</p>\r\n         */\r\n        get: function () {\r\n            return this.getBox().height * this.scaleY;\r\n        },\r\n        set: function (val) {\r\n            if (this._height == val)\r\n                return;\r\n            this._height = val;\r\n            this._setScaleY(val / this.getBox().height);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"index\", {\r\n        /**\r\n         * Indicates the instance container index of the DisplayObject. The object can be\r\n         * identified in the child list of its parent display object container by\r\n         * calling the <code>getChildByIndex()</code> method of the display object\r\n         * container.\r\n         *\r\n         * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n         */\r\n        get: function () {\r\n            if (this._pParent)\r\n                return this._pParent.getChildIndex(this);\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"inverseSceneTransform\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            if (this._inverseSceneTransformDirty) {\r\n                this._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n                this._inverseSceneTransform.invert();\r\n                this._inverseSceneTransformDirty = false;\r\n            }\r\n            return this._inverseSceneTransform;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"isEntity\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._pIsEntity;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"isContainer\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._pIsContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"loaderInfo\", {\r\n        /**\r\n         * Returns a LoaderInfo object containing information about loading the file\r\n         * to which this display object belongs. The <code>loaderInfo</code> property\r\n         * is defined only for the root display object of a SWF file or for a loaded\r\n         * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n         * <code>loaderInfo</code> object associated with the SWF file that contains\r\n         * a display object named <code>myDisplayObject</code>, use\r\n         * <code>myDisplayObject.root.loaderInfo</code>.\r\n         *\r\n         * <p>A large SWF file can monitor its download by calling\r\n         * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n         * func)</code>.</p>\r\n         */\r\n        get: function () {\r\n            return this._loaderInfo;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"maskMode\", {\r\n        get: function () {\r\n            return this._maskMode;\r\n        },\r\n        set: function (value) {\r\n            if (this._maskMode == value)\r\n                return;\r\n            this._maskMode = value;\r\n            this._explicitMaskId = value ? this.id : -1;\r\n            this._updateMaskMode();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"mouseEnabled\", {\r\n        /**\r\n         * Specifies whether this object receives mouse, or other user input,\r\n         * messages. The default value is <code>true</code>, which means that by\r\n         * default any InteractiveObject instance that is on the display list\r\n         * receives mouse events or other user input events. If\r\n         * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n         * not receive any mouse events(or other user input events like keyboard\r\n         * events). Any children of this instance on the display list are not\r\n         * affected. To change the <code>mouseEnabled</code> behavior for all\r\n         * children of an object on the display list, use\r\n         * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n         *\r\n         * <p> No event is dispatched by setting this property. You must use the\r\n         * <code>addEventListener()</code> method to create interactive\r\n         * functionality.</p>\r\n         */\r\n        get: function () {\r\n            return this._explicitMouseEnabled;\r\n        },\r\n        set: function (value) {\r\n            if (this._explicitMouseEnabled == value)\r\n                return;\r\n            this._explicitMouseEnabled = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"mouseX\", {\r\n        /**\r\n         * Indicates the x coordinate of the mouse or user input device position, in\r\n         * pixels.\r\n         *\r\n         * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n         * coordinate will reflect the non-rotated object.</p>\r\n         */\r\n        get: function () {\r\n            return this._mouseX;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"mouseY\", {\r\n        /**\r\n         * Indicates the y coordinate of the mouse or user input device position, in\r\n         * pixels.\r\n         *\r\n         * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n         * coordinate will reflect the non-rotated object.</p>\r\n         */\r\n        get: function () {\r\n            return this._mouseY;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"name\", {\r\n        /**\r\n         * Indicates the instance name of the DisplayObject. The object can be\r\n         * identified in the child list of its parent display object container by\r\n         * calling the <code>getChildByName()</code> method of the display object\r\n         * container.\r\n         *\r\n         * @throws IllegalOperationError If you are attempting to set this property\r\n         *                               on an object that was placed on the timeline\r\n         *                               in the Flash authoring tool.\r\n         */\r\n        get: function () {\r\n            return this._pName;\r\n        },\r\n        set: function (value) {\r\n            this._pName = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"parent\", {\r\n        /**\r\n         * Indicates the DisplayObjectContainer object that contains this display\r\n         * object. Use the <code>parent</code> property to specify a relative path to\r\n         * display objects that are above the current display object in the display\r\n         * list hierarchy.\r\n         *\r\n         * <p>You can use <code>parent</code> to move up multiple levels in the\r\n         * display list as in the following:</p>\r\n         *\r\n         * @throws SecurityError The parent display object belongs to a security\r\n         *                       sandbox to which you do not have access. You can\r\n         *                       avoid this situation by having the parent movie call\r\n         *                       the <code>Security.allowDomain()</code> method.\r\n         */\r\n        get: function () {\r\n            return this._pParent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"partition\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._explicitPartition;\r\n        },\r\n        set: function (value) {\r\n            if (this._explicitPartition == value)\r\n                return;\r\n            this._explicitPartition = value;\r\n            this._iSetScene(this._pScene, this._pParent ? this._pParent._iAssignedPartition : null);\r\n            this.dispatchEvent(new DisplayObjectEvent_1.DisplayObjectEvent(DisplayObjectEvent_1.DisplayObjectEvent.PARTITION_CHANGED, this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"pivot\", {\r\n        /**\r\n         * Defines the local point around which the object rotates.\r\n         */\r\n        get: function () {\r\n            return this._pivot;\r\n        },\r\n        set: function (pivot) {\r\n            if (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n                return;\r\n            if (!pivot) {\r\n                this._pivot = null;\r\n                this._pivotScale = null;\r\n            }\r\n            else {\r\n                if (!this._pivot)\r\n                    this._pivot = new Vector3D_1.Vector3D();\r\n                this._pivot.x = pivot.x;\r\n                this._pivot.y = pivot.y;\r\n                this._pivot.z = pivot.z;\r\n            }\r\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"root\", {\r\n        /**\r\n         * For a display object in a loaded SWF file, the <code>root</code> property\r\n         * is the top-most display object in the portion of the display list's tree\r\n         * structure represented by that SWF file. For a Bitmap object representing a\r\n         * loaded image file, the <code>root</code> property is the Bitmap object\r\n         * itself. For the instance of the main class of the first SWF file loaded,\r\n         * the <code>root</code> property is the display object itself. The\r\n         * <code>root</code> property of the Scene object is the Scene object itself.\r\n         * The <code>root</code> property is set to <code>null</code> for any display\r\n         * object that has not been added to the display list, unless it has been\r\n         * added to a display object container that is off the display list but that\r\n         * is a child of the top-most display object in a loaded SWF file.\r\n         *\r\n         * <p>For example, if you create a new Sprite object by calling the\r\n         * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n         * is <code>null</code> until you add it to the display list(or to a display\r\n         * object container that is off the display list but that is a child of the\r\n         * top-most display object in a SWF file).</p>\r\n         *\r\n         * <p>For a loaded SWF file, even though the Loader object used to load the\r\n         * file may not be on the display list, the top-most display object in the\r\n         * SWF file has its <code>root</code> property set to itself. The Loader\r\n         * object does not have its <code>root</code> property set until it is added\r\n         * as a child of a display object for which the <code>root</code> property is\r\n         * set.</p>\r\n         */\r\n        get: function () {\r\n            return this._root;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"rotationX\", {\r\n        /**\r\n         * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n         * from its original orientation relative to the 3D parent container. Values\r\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n         * represent counterclockwise rotation. Values outside this range are added\r\n         * to or subtracted from 360 to obtain a value within the range.\r\n         */\r\n        get: function () {\r\n            return this._transform.rotation.x * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n        },\r\n        set: function (val) {\r\n            if (this.rotationX == val)\r\n                return;\r\n            this._transform.rotation.x = val * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\r\n            this._transform.invalidateMatrix3D();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"rotationY\", {\r\n        /**\r\n         * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n         * from its original orientation relative to the 3D parent container. Values\r\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n         * represent counterclockwise rotation. Values outside this range are added\r\n         * to or subtracted from 360 to obtain a value within the range.\r\n         */\r\n        get: function () {\r\n            return this._transform.rotation.y * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n        },\r\n        set: function (val) {\r\n            if (this.rotationY == val)\r\n                return;\r\n            this._transform.rotation.y = val * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\r\n            this._transform.invalidateMatrix3D();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"rotationZ\", {\r\n        /**\r\n         * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n         * from its original orientation relative to the 3D parent container. Values\r\n         * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n         * represent counterclockwise rotation. Values outside this range are added\r\n         * to or subtracted from 360 to obtain a value within the range.\r\n         */\r\n        get: function () {\r\n            return this._transform.rotation.z * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n        },\r\n        set: function (val) {\r\n            if (this.rotationZ == val)\r\n                return;\r\n            this._transform.rotation.z = val * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\r\n            this._transform.invalidateMatrix3D();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"scaleX\", {\r\n        /**\r\n         * Indicates the horizontal scale(percentage) of the object as applied from\r\n         * the registration point. The default registration point is(0,0). 1.0\r\n         * equals 100% scale.\r\n         *\r\n         * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n         * <code>y</code> property values, which are defined in whole pixels. </p>\r\n         */\r\n        get: function () {\r\n            return this._transform.scale.x;\r\n        },\r\n        set: function (val) {\r\n            //remove absolute width\r\n            this._width = null;\r\n            this._setScaleX(val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"scaleY\", {\r\n        /**\r\n         * Indicates the vertical scale(percentage) of an object as applied from the\r\n         * registration point of the object. The default registration point is(0,0).\r\n         * 1.0 is 100% scale.\r\n         *\r\n         * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n         * <code>y</code> property values, which are defined in whole pixels. </p>\r\n         */\r\n        get: function () {\r\n            return this._transform.scale.y;\r\n        },\r\n        set: function (val) {\r\n            //remove absolute height\r\n            this._height = null;\r\n            this._setScaleY(val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"scaleZ\", {\r\n        /**\r\n         * Indicates the depth scale(percentage) of an object as applied from the\r\n         * registration point of the object. The default registration point is(0,0).\r\n         * 1.0 is 100% scale.\r\n         *\r\n         * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n         * <code>y</code> and <code>z</code> property values, which are defined in\r\n         * whole pixels. </p>\r\n         */\r\n        get: function () {\r\n            return this._transform.scale.z;\r\n        },\r\n        set: function (val) {\r\n            //remove absolute depth\r\n            this._depth = null;\r\n            this._setScaleZ(val);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"skewX\", {\r\n        /**\r\n         * Indicates the horizontal skew(angle) of the object as applied from\r\n         * the registration point. The default registration point is(0,0).\r\n         */\r\n        get: function () {\r\n            return this._transform.skew.x;\r\n        },\r\n        set: function (val) {\r\n            if (this.skewX == val)\r\n                return;\r\n            this._transform.skew.x = val;\r\n            this._transform.invalidateMatrix3D();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"skewY\", {\r\n        /**\r\n         * Indicates the vertical skew(angle) of an object as applied from the\r\n         * registration point of the object. The default registration point is(0,0).\r\n         */\r\n        get: function () {\r\n            return this._transform.skew.y;\r\n        },\r\n        set: function (val) {\r\n            if (this.skewY == val)\r\n                return;\r\n            this._transform.skew.y = val;\r\n            this._transform.invalidateMatrix3D();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"skewZ\", {\r\n        /**\r\n         * Indicates the depth skew(angle) of an object as applied from the\r\n         * registration point of the object. The default registration point is(0,0).\r\n         */\r\n        get: function () {\r\n            return this._transform.skew.z;\r\n        },\r\n        set: function (val) {\r\n            if (this.skewZ == val)\r\n                return;\r\n            this._transform.skew.z = val;\r\n            this._transform.invalidateMatrix3D();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"scene\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._pScene;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"scenePosition\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            if (this._scenePositionDirty) {\r\n                if (this._pivot && this.alignmentMode == AlignmentMode_1.AlignmentMode.PIVOT_POINT) {\r\n                    this._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n                }\r\n                else {\r\n                    this.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n                }\r\n                this._scenePositionDirty = false;\r\n            }\r\n            return this._scenePosition;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"sceneTransform\", {\r\n        get: function () {\r\n            if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM)\r\n                this.pUpdateSceneTransform();\r\n            return this._pSceneTransform;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"shaderPickingDetails\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._shaderPickingDetails;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"debugVisible\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._debugVisible;\r\n        },\r\n        set: function (value) {\r\n            if (value == this._debugVisible)\r\n                return;\r\n            this._debugVisible = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"transform\", {\r\n        /**\r\n         * An object with properties pertaining to a display object's matrix, color\r\n         * transform, and pixel bounds. The specific properties  -  matrix,\r\n         * colorTransform, and three read-only properties\r\n         * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n         * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n         * Transform class.\r\n         *\r\n         * <p>Each of the transform object's properties is itself an object. This\r\n         * concept is important because the only way to set new values for the matrix\r\n         * or colorTransform objects is to create a new object and copy that object\r\n         * into the transform.matrix or transform.colorTransform property.</p>\r\n         *\r\n         * <p>For example, to increase the <code>tx</code> value of a display\r\n         * object's matrix, you must make a copy of the entire matrix object, then\r\n         * copy the new object into the matrix property of the transform object:</p>\r\n         * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n         * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n         * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n         *\r\n         * <p>You cannot directly set the <code>tx</code> property. The following\r\n         * code has no effect on <code>myDisplayObject</code>: </p>\r\n         * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n         * 10; </code></pre>\r\n         *\r\n         * <p>You can also copy an entire transform object and assign it to another\r\n         * display object's transform property. For example, the following code\r\n         * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n         * <code>myNewDisplayObj</code>:</p>\r\n         * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n         *\r\n         * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n         * same values for its matrix, color transform, and pixel bounds as the old\r\n         * display object, <code>myOldDisplayObj</code>.</p>\r\n         *\r\n         * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n         * available, for color transforms.</p>\r\n         */\r\n        get: function () {\r\n            return this._transform;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"visible\", {\r\n        /**\r\n         * Whether or not the display object is visible. Display objects that are not\r\n         * visible are disabled. For example, if <code>visible=false</code> for an\r\n         * InteractiveObject instance, it cannot be clicked.\r\n         */\r\n        get: function () {\r\n            return this._explicitVisibility;\r\n        },\r\n        set: function (value) {\r\n            if (this._explicitVisibility == value)\r\n                return;\r\n            this._explicitVisibility = value;\r\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.VISIBLE);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"masks\", {\r\n        get: function () {\r\n            return this._explicitMasks;\r\n        },\r\n        set: function (value) {\r\n            if (this._explicitMasks == value)\r\n                return;\r\n            this._explicitMasks = value;\r\n            //make sure maskMode is set to true for all masks\r\n            if (value != null && value.length) {\r\n                var len = value.length;\r\n                for (var i = 0; i < len; i++)\r\n                    value[i].maskMode = true;\r\n            }\r\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.MASKS);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"width\", {\r\n        /**\r\n         * Indicates the width of the display object, in pixels. The width is\r\n         * calculated based on the bounds of the content of the display object. When\r\n         * you set the <code>width</code> property, the <code>scaleX</code> property\r\n         * is adjusted accordingly, as shown in the following code:\r\n         *\r\n         * <p>Except for TextField and Video objects, a display object with no\r\n         * content(such as an empty sprite) has a width of 0, even if you try to set\r\n         * <code>width</code> to a different value.</p>\r\n         */\r\n        get: function () {\r\n            return this.getBox().width * this.scaleX;\r\n        },\r\n        set: function (val) {\r\n            if (this._width == val)\r\n                return;\r\n            this._width = val;\r\n            this._setScaleX(val / this.getBox().width);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"x\", {\r\n        /**\r\n         * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n         * to the local coordinates of the parent DisplayObjectContainer. If the\r\n         * object is inside a DisplayObjectContainer that has transformations, it is\r\n         * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n         * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n         * DisplayObjectContainer's children inherit a coordinate system that is\r\n         * rotated 90° counterclockwise. The object's coordinates refer to the\r\n         * registration point position.\r\n         */\r\n        get: function () {\r\n            return this._transform.position.x;\r\n        },\r\n        set: function (val) {\r\n            if (this._transform.position.x == val)\r\n                return;\r\n            this._transform.matrix3D.rawData[12] = val;\r\n            this._transform.invalidatePosition();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"y\", {\r\n        /**\r\n         * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n         * to the local coordinates of the parent DisplayObjectContainer. If the\r\n         * object is inside a DisplayObjectContainer that has transformations, it is\r\n         * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n         * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n         * DisplayObjectContainer's children inherit a coordinate system that is\r\n         * rotated 90° counterclockwise. The object's coordinates refer to the\r\n         * registration point position.\r\n         */\r\n        get: function () {\r\n            return this._transform.position.y;\r\n        },\r\n        set: function (val) {\r\n            if (this._transform.position.y == val)\r\n                return;\r\n            this._transform.matrix3D.rawData[13] = val;\r\n            this._transform.invalidatePosition();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"z\", {\r\n        /**\r\n         * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n         * instance relative to the 3D parent container. The z property is used for\r\n         * 3D coordinates, not screen or pixel coordinates.\r\n         *\r\n         * <p>When you set a <code>z</code> property for a display object to\r\n         * something other than the default value of <code>0</code>, a corresponding\r\n         * Matrix3D object is automatically created. for adjusting a display object's\r\n         * position and orientation in three dimensions. When working with the\r\n         * z-axis, the existing behavior of x and y properties changes from screen or\r\n         * pixel coordinates to positions relative to the 3D parent container.</p>\r\n         *\r\n         * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n         * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n         * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n         *\r\n         * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n         * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n         */\r\n        get: function () {\r\n            return this._transform.position.z;\r\n        },\r\n        set: function (val) {\r\n            if (this._transform.position.z == val)\r\n                return;\r\n            this._transform.matrix3D.rawData[14] = val;\r\n            this._transform.invalidatePosition();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    DisplayObject.prototype.addEventListener = function (type, listener) {\r\n        _super.prototype.addEventListener.call(this, type, listener);\r\n        switch (type) {\r\n            case DisplayObjectEvent_1.DisplayObjectEvent.SCENE_CHANGED:\r\n                this._listenToSceneChanged = true;\r\n                break;\r\n            case DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n                this._listenToSceneTransformChanged = true;\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    DisplayObject.prototype.clone = function () {\r\n        var newInstance = new DisplayObject();\r\n        this.copyTo(newInstance);\r\n        return newInstance;\r\n    };\r\n    DisplayObject.prototype.copyTo = function (newInstance) {\r\n        newInstance.partition = this._explicitPartition;\r\n        newInstance.boundsType = this._boundsType;\r\n        newInstance.pivot = this._pivot;\r\n        newInstance.name = this._pName;\r\n        newInstance.mouseEnabled = this._explicitMouseEnabled;\r\n        newInstance.extra = this.extra;\r\n        newInstance.maskMode = this._maskMode;\r\n        newInstance.castsShadows = this.castsShadows;\r\n        if (this._explicitMasks)\r\n            newInstance.masks = this._explicitMasks;\r\n        if (this._adapter)\r\n            newInstance.adapter = this._adapter.clone(newInstance);\r\n        newInstance._transform.matrix3D = this._transform.matrix3D;\r\n        if (this._transform.colorTransform)\r\n            newInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    DisplayObject.prototype.dispose = function () {\r\n        this.disposeValues();\r\n    };\r\n    DisplayObject.prototype.disposeValues = function () {\r\n        if (this._pParent)\r\n            this._pParent.removeChild(this);\r\n        //if (this._adapter) {\r\n        //\tthis._adapter.dispose();\r\n        //\tthis._adapter = null;\r\n        //}\r\n        //this._pos = null;\r\n        //this._rot = null;\r\n        //this._sca = null;\r\n        //this._ske = null;\r\n        //this._transformComponents = null;\r\n        //this._transform.dispose();\r\n        //this._transform = null;\r\n        //\r\n        //this._matrix3D = null;\r\n        //this._pSceneTransform = null;\r\n        //this._inverseSceneTransform = null;\r\n        this._explicitMasks = null;\r\n    };\r\n    /**\r\n     * Returns a rectangle that defines the area of the display object relative\r\n     * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n     * Consider the following code, which shows how the rectangle returned can\r\n     * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n     * you pass to the method:\r\n     *\r\n     * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n     * <code>globalToLocal()</code> methods to convert the display object's local\r\n     * coordinates to display coordinates, or display coordinates to local\r\n     * coordinates, respectively.</p>\r\n     *\r\n     * <p>The <code>getBounds()</code> method is similar to the\r\n     * <code>getRect()</code> method; however, the Rectangle returned by the\r\n     * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n     * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n     * an example, see the description of the <code>getRect()</code> method.</p>\r\n     *\r\n     * @param targetCoordinateSpace The display object that defines the\r\n     *                              coordinate system to use.\r\n     * @return The rectangle that defines the area of the display object relative\r\n     *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n     *         system.\r\n     */\r\n    DisplayObject.prototype.getBounds = function (targetCoordinateSpace) {\r\n        return this._bounds; //TODO\r\n    };\r\n    /**\r\n     * Returns a rectangle that defines the boundary of the display object, based\r\n     * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n     * parameter, excluding any strokes on shapes. The values that the\r\n     * <code>getRect()</code> method returns are the same or smaller than those\r\n     * returned by the <code>getBounds()</code> method.\r\n     *\r\n     * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n     * <code>globalToLocal()</code> methods to convert the display object's local\r\n     * coordinates to Scene coordinates, or Scene coordinates to local\r\n     * coordinates, respectively.</p>\r\n     *\r\n     * @param targetCoordinateSpace The display object that defines the\r\n     *                              coordinate system to use.\r\n     * @return The rectangle that defines the area of the display object relative\r\n     *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n     *         system.\r\n     */\r\n    DisplayObject.prototype.getRect = function (targetCoordinateSpace) {\r\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\r\n        return this._bounds; //TODO\r\n    };\r\n    DisplayObject.prototype.getBox = function (targetCoordinateSpace) {\r\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\r\n        if (this._iSourcePrefab)\r\n            this._iSourcePrefab._iValidate();\r\n        //TODO targetCoordinateSpace\r\n        if (this._boxBoundsInvalid) {\r\n            this._pUpdateBoxBounds();\r\n            //scale updates if absolute dimensions are detected\r\n            if (this._width != null)\r\n                this._setScaleX(this._width / this._pBoxBounds.width);\r\n            if (this._height != null)\r\n                this._setScaleY(this._height / this._pBoxBounds.height);\r\n            if (this._depth != null)\r\n                this._setScaleZ(this._depth / this._pBoxBounds.depth);\r\n        }\r\n        if (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n            return this._pBoxBounds;\r\n        if (targetCoordinateSpace == this._pParent)\r\n            return this._transform.matrix3D.transformBox(this._pBoxBounds);\r\n        else\r\n            return targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n    };\r\n    DisplayObject.prototype.getSphere = function (targetCoordinateSpace) {\r\n        if (targetCoordinateSpace === void 0) { targetCoordinateSpace = null; }\r\n        if (this._iSourcePrefab)\r\n            this._iSourcePrefab._iValidate();\r\n        if (this._sphereBoundsInvalid)\r\n            this._pUpdateSphereBounds();\r\n        return this._pSphereBounds;\r\n    };\r\n    /**\r\n     * Converts the <code>point</code> object from the Scene(global) coordinates\r\n     * to the display object's(local) coordinates.\r\n     *\r\n     * <p>To use this method, first create an instance of the Point class. The\r\n     * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n     * because they relate to the origin(0,0) of the main display area. Then\r\n     * pass the Point instance as the parameter to the\r\n     * <code>globalToLocal()</code> method. The method returns a new Point object\r\n     * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n     * object instead of the origin of the Scene.</p>\r\n     *\r\n     * @param point An object created with the Point class. The Point object\r\n     *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n     *              properties.\r\n     * @return A Point object with coordinates relative to the display object.\r\n     */\r\n    DisplayObject.prototype.globalToLocal = function (point, target) {\r\n        if (target === void 0) { target = null; }\r\n        this._tempVector3D.setTo(point.x, point.y, 0);\r\n        var pos = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n        if (!target)\r\n            target = new Point_1.Point();\r\n        target.x = pos.x;\r\n        target.y = pos.y;\r\n        return target;\r\n    };\r\n    /**\r\n     * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n     * three-dimensional display object's(local) coordinates.\r\n     *\r\n     * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n     * y and z values that you assign to the Vector3D object represent global\r\n     * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n     * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n     * <code>position</code> parameter.\r\n     * The method returns three-dimensional coordinates as a Vector3D object\r\n     * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n     * are relative to the origin of the three-dimensional display object.</p>\r\n     *\r\n     * @param point A Vector3D object representing global x, y and z coordinates in\r\n     *              the scene.\r\n     * @return A Vector3D object with coordinates relative to the three-dimensional\r\n     *         display object.\r\n     */\r\n    DisplayObject.prototype.globalToLocal3D = function (position) {\r\n        return this.inverseSceneTransform.transformVector(position);\r\n    };\r\n    /**\r\n     * Evaluates the bounding box of the display object to see if it overlaps or\r\n     * intersects with the bounding box of the <code>obj</code> display object.\r\n     *\r\n     * @param obj The display object to test against.\r\n     * @return <code>true</code> if the bounding boxes of the display objects\r\n     *         intersect; <code>false</code> if not.\r\n     */\r\n    DisplayObject.prototype.hitTestObject = function (obj) {\r\n        var objBox = obj.getBox();\r\n        if (!objBox)\r\n            return false;\r\n        var topLeft = new Point_1.Point(objBox.x, objBox.y);\r\n        var bottomLeft = new Point_1.Point(objBox.x, objBox.y - objBox.height);\r\n        var topRight = new Point_1.Point(objBox.x + objBox.width, objBox.y);\r\n        var bottomRight = new Point_1.Point(objBox.x + objBox.width, objBox.y - objBox.height);\r\n        topLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n        bottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n        topRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n        bottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n        var box = this.getBox();\r\n        if (!box)\r\n            return false;\r\n        //first check all points against targer box\r\n        if (topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom)\r\n            return true;\r\n        if (bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom)\r\n            return true;\r\n        if (topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom)\r\n            return true;\r\n        if (bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom)\r\n            return true;\r\n        //now test against obj box\r\n        var n0x = topRight.y - topLeft.y;\r\n        var n0y = -(topRight.x - topLeft.x);\r\n        var n1x = bottomRight.y - topRight.y;\r\n        var n1y = -(bottomRight.x - topRight.x);\r\n        var n2x = bottomLeft.y - bottomRight.y;\r\n        var n2y = -(bottomLeft.x - bottomRight.x);\r\n        var n3x = topLeft.y - bottomLeft.y;\r\n        var n3y = -(topLeft.x - bottomLeft.x);\r\n        var p0x = box.left - topLeft.x;\r\n        var p0y = box.top - topLeft.y;\r\n        var p1x = box.left - topRight.x;\r\n        var p1y = box.top - topRight.y;\r\n        var p2x = box.left - bottomRight.x;\r\n        var p2y = box.top - bottomRight.y;\r\n        var p3x = box.left - bottomLeft.x;\r\n        var p3y = box.top - bottomLeft.y;\r\n        var dot0 = (n0x * p0x) + (n0y * p0y);\r\n        var dot1 = (n1x * p1x) + (n1y * p1y);\r\n        var dot2 = (n2x * p2x) + (n2y * p2y);\r\n        var dot3 = (n3x * p3x) + (n3y * p3y);\r\n        //check if topLeft is contained\r\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\r\n            return true;\r\n        p0x = box.right - topLeft.x;\r\n        p0y = box.top - topLeft.y;\r\n        p1x = box.right - topRight.x;\r\n        p1y = box.top - topRight.y;\r\n        p2x = box.right - bottomRight.x;\r\n        p2y = box.top - bottomRight.y;\r\n        p3x = box.right - bottomLeft.x;\r\n        p3y = box.top - bottomLeft.y;\r\n        dot0 = (n0x * p0x) + (n0y * p0y);\r\n        dot1 = (n1x * p1x) + (n1y * p1y);\r\n        dot2 = (n2x * p2x) + (n2y * p2y);\r\n        dot3 = (n3x * p3x) + (n3y * p3y);\r\n        //check if topRight is contained\r\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\r\n            return true;\r\n        p0x = box.left - topLeft.x;\r\n        p0y = box.bottom - topLeft.y;\r\n        p1x = box.left - topRight.x;\r\n        p1y = box.bottom - topRight.y;\r\n        p2x = box.left - bottomRight.x;\r\n        p2y = box.bottom - bottomRight.y;\r\n        p3x = box.left - bottomLeft.x;\r\n        p3y = box.bottom - bottomLeft.y;\r\n        dot0 = (n0x * p0x) + (n0y * p0y);\r\n        dot1 = (n1x * p1x) + (n1y * p1y);\r\n        dot2 = (n2x * p2x) + (n2y * p2y);\r\n        dot3 = (n3x * p3x) + (n3y * p3y);\r\n        //check if bottomLeft is contained\r\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\r\n            return true;\r\n        p0x = box.right - topLeft.x;\r\n        p0y = box.bottom - topLeft.y;\r\n        p1x = box.right - topRight.x;\r\n        p1y = box.bottom - topRight.y;\r\n        p2x = box.right - bottomRight.x;\r\n        p2y = box.bottom - bottomRight.y;\r\n        p3x = box.right - bottomLeft.x;\r\n        p3y = box.bottom - bottomLeft.y;\r\n        dot0 = (n0x * p0x) + (n0y * p0y);\r\n        dot1 = (n1x * p1x) + (n1y * p1y);\r\n        dot2 = (n2x * p2x) + (n2y * p2y);\r\n        dot3 = (n3x * p3x) + (n3y * p3y);\r\n        //check if bottomRight is contained\r\n        if (dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0)\r\n            return true;\r\n        return false; //TODO\r\n    };\r\n    /**\r\n     * Evaluates the display object to see if it overlaps or intersects with the\r\n     * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n     * <code>x</code> and <code>y</code> parameters specify a point in the\r\n     * coordinate space of the Scene, not the display object container that\r\n     * contains the display object(unless that display object container is the\r\n     * Scene).\r\n     *\r\n     * @param x         The <i>x</i> coordinate to test against this object.\r\n     * @param y         The <i>y</i> coordinate to test against this object.\r\n     * @param shapeFlag Whether to check against the actual pixels of the object\r\n     *                 (<code>true</code>) or the bounding box\r\n     *                 (<code>false</code>).\r\n     * @param maskFlag Whether to check against the object when it is used as mask\r\n     *                 (<code>false</code>).\r\n     * @return <code>true</code> if the display object overlaps or intersects\r\n     *         with the specified point; <code>false</code> otherwise.\r\n     */\r\n    DisplayObject.prototype.hitTestPoint = function (x, y, shapeFlag, masksFlag) {\r\n        if (shapeFlag === void 0) { shapeFlag = false; }\r\n        if (masksFlag === void 0) { masksFlag = false; }\r\n        if (!this._pImplicitVisibility)\r\n            return;\r\n        if (this._pImplicitMaskId != -1 && !masksFlag)\r\n            return;\r\n        if (this._explicitMasks) {\r\n            var numMasks = this._explicitMasks.length;\r\n            var maskHit = false;\r\n            for (var i = 0; i < numMasks; i++) {\r\n                if (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\r\n                    maskHit = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!maskHit)\r\n                return false;\r\n        }\r\n        return this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\r\n    };\r\n    /**\r\n     * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n     *\r\n     * @param    target        The vector defining the point to be looked at\r\n     * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n     */\r\n    DisplayObject.prototype.lookAt = function (target, upAxis) {\r\n        if (upAxis === void 0) { upAxis = null; }\r\n        var yAxis;\r\n        var zAxis;\r\n        var xAxis;\r\n        var raw;\r\n        if (upAxis == null)\r\n            upAxis = Vector3D_1.Vector3D.Y_AXIS;\r\n        else\r\n            upAxis.normalize();\r\n        zAxis = target.subtract(this._transform.position);\r\n        zAxis.normalize();\r\n        xAxis = upAxis.crossProduct(zAxis);\r\n        xAxis.normalize();\r\n        if (xAxis.length < 0.05) {\r\n            xAxis.x = upAxis.y;\r\n            xAxis.y = upAxis.x;\r\n            xAxis.z = 0;\r\n            xAxis.normalize();\r\n        }\r\n        yAxis = zAxis.crossProduct(xAxis);\r\n        raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        raw[0] = xAxis.x;\r\n        raw[1] = xAxis.y;\r\n        raw[2] = xAxis.z;\r\n        raw[3] = 0;\r\n        raw[4] = yAxis.x;\r\n        raw[5] = yAxis.y;\r\n        raw[6] = yAxis.z;\r\n        raw[7] = 0;\r\n        raw[8] = zAxis.x;\r\n        raw[9] = zAxis.y;\r\n        raw[10] = zAxis.z;\r\n        raw[11] = 0;\r\n        var m = new Matrix3D_1.Matrix3D();\r\n        m.copyRawDataFrom(raw);\r\n        var vec = m.decompose()[1];\r\n        this.rotationX = vec.x * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n        this.rotationY = vec.y * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n        this.rotationZ = vec.z * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n    };\r\n    /**\r\n     * Converts the <code>point</code> object from the display object's(local)\r\n     * coordinates to the Scene(global) coordinates.\r\n     *\r\n     * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n     * coordinates from values that are relative to the origin(0,0) of a\r\n     * specific display object(local coordinates) to values that are relative to\r\n     * the origin of the Scene(global coordinates).</p>\r\n     *\r\n     * <p>To use this method, first create an instance of the Point class. The\r\n     * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n     * because they relate to the origin of the display object.</p>\r\n     *\r\n     * <p>You then pass the Point instance that you created as the parameter to\r\n     * the <code>localToGlobal()</code> method. The method returns a new Point\r\n     * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n     * Scene instead of the origin of the display object.</p>\r\n     *\r\n     * @param point The name or identifier of a point created with the Point\r\n     *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n     *              properties.\r\n     * @return A Point object with coordinates relative to the Scene.\r\n     */\r\n    DisplayObject.prototype.localToGlobal = function (point, target) {\r\n        if (target === void 0) { target = null; }\r\n        this._tempVector3D.setTo(point.x, point.y, 0);\r\n        var pos = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n        if (!target)\r\n            target = new Point_1.Point();\r\n        target.x = pos.x;\r\n        target.y = pos.y;\r\n        return target;\r\n    };\r\n    /**\r\n     * Converts a three-dimensional point of the three-dimensional display\r\n     * object's(local) coordinates to a three-dimensional point in the Scene\r\n     * (global) coordinates.\r\n     *\r\n     * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n     * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n     * a specific display object(local coordinates) to values that are relative to\r\n     * the origin of the Scene(global coordinates).</p>\r\n     *\r\n     * <p>To use this method, first create an instance of the Point class. The\r\n     * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n     * because they relate to the origin of the display object.</p>\r\n     *\r\n     * <p>You then pass the Vector3D instance that you created as the parameter to\r\n     * the <code>localToGlobal3D()</code> method. The method returns a new\r\n     * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n     * the origin of the Scene instead of the origin of the display object.</p>\r\n     *\r\n     * @param position A Vector3D object containing either a three-dimensional\r\n     *                position or the coordinates of the three-dimensional\r\n     *                display object.\r\n     * @return A Vector3D object representing a three-dimensional position in\r\n     *         the Scene.\r\n     */\r\n    DisplayObject.prototype.localToGlobal3D = function (position) {\r\n        return this.sceneTransform.transformVector(position);\r\n    };\r\n    /**\r\n     * Moves the local point around which the object rotates.\r\n     *\r\n     * @param    dx        The amount of movement along the local x axis.\r\n     * @param    dy        The amount of movement along the local y axis.\r\n     * @param    dz        The amount of movement along the local z axis.\r\n     */\r\n    DisplayObject.prototype.movePivot = function (dx, dy, dz) {\r\n        if (dx == 0 && dy == 0 && dz == 0)\r\n            return;\r\n        this._pivot.x += dx;\r\n        this._pivot.y += dy;\r\n        this._pivot.z += dz;\r\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM);\r\n    };\r\n    DisplayObject.prototype.reset = function () {\r\n        this.visible = true;\r\n        if (this._transform.matrix3D)\r\n            this._transform.clearMatrix3D();\r\n        if (this._transform.colorTransform)\r\n            this._transform.clearColorTransform();\r\n        //this.name=\"\";\r\n        this.masks = null;\r\n        this.maskMode = false;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    DisplayObject.prototype.getRenderSceneTransform = function (cameraTransform) {\r\n        if (this.orientationMode == OrientationMode_1.OrientationMode.CAMERA_PLANE) {\r\n            var comps = cameraTransform.decompose();\r\n            var scale = comps[3];\r\n            comps[0].copyFrom(this.scenePosition);\r\n            scale.x = this.scaleX;\r\n            scale.y = this.scaleY;\r\n            scale.z = this.scaleZ;\r\n            this._orientationMatrix.recompose(comps);\r\n            //add in case of pivot\r\n            if (this._pivot && this.alignmentMode == AlignmentMode_1.AlignmentMode.PIVOT_POINT)\r\n                this._orientationMatrix.prependTranslation(-this._pivot.x / this.scaleX, -this._pivot.y / this.scaleY, -this._pivot.z / this.scaleZ);\r\n            return this._orientationMatrix;\r\n        }\r\n        return this.sceneTransform;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    DisplayObject.prototype.removeEventListener = function (type, listener) {\r\n        _super.prototype.removeEventListener.call(this, type, listener);\r\n        if (this.hasEventListener(type))\r\n            return;\r\n        switch (type) {\r\n            case DisplayObjectEvent_1.DisplayObjectEvent.SCENE_CHANGED:\r\n                this._listenToSceneChanged = false;\r\n                break;\r\n            case DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n                this._listenToSceneTransformChanged = true;\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(DisplayObject.prototype, \"_iAssignedPartition\", {\r\n        /**\r\n         * @internal\r\n         */\r\n        get: function () {\r\n            return this._pImplicitPartition;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObject.prototype, \"_iPickingCollision\", {\r\n        /**\r\n         * @internal\r\n         */\r\n        get: function () {\r\n            if (!this._pickingCollision)\r\n                this._pickingCollision = new PickingCollision_1.PickingCollision(this);\r\n            return this._pickingCollision;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @internal\r\n     */\r\n    DisplayObject.prototype.iSetParent = function (value) {\r\n        this._pParent = value;\r\n        if (value)\r\n            this._iSetScene(value._pScene, value._iAssignedPartition);\r\n        else\r\n            this._iSetScene(null, null);\r\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.ALL);\r\n    };\r\n    DisplayObject.prototype.pInvalidateHierarchicalProperties = function (propDirty) {\r\n        var newPropDirty = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\r\n        if (!newPropDirty)\r\n            return true;\r\n        this._hierarchicalPropsDirty |= propDirty;\r\n        if (newPropDirty & HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM) {\r\n            this._inverseSceneTransformDirty = true;\r\n            this._scenePositionDirty = true;\r\n            if (this.isEntity)\r\n                this.invalidatePartitionBounds();\r\n            if (this._pParent)\r\n                this._pParent._pInvalidateBounds();\r\n            if (this._listenToSceneTransformChanged)\r\n                this.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent_1.DisplayObjectEvent(DisplayObjectEvent_1.DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    DisplayObject.prototype._iSetScene = function (scene, partition) {\r\n        var sceneChanged = this._pScene != scene;\r\n        if (this._pScene && this._pImplicitPartition) {\r\n            //unregister partition from current scene\r\n            this._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n            //unregister entity from current partition\r\n            this._pImplicitPartition._iUnregisterEntity(this);\r\n            //gc abstraction objects\r\n            this.clear();\r\n        }\r\n        // assign parent implicit partition if no explicit one is given\r\n        this._pImplicitPartition = this._explicitPartition || partition;\r\n        //assign scene\r\n        if (sceneChanged)\r\n            this._pScene = scene;\r\n        if (this._pScene && this._pImplicitPartition) {\r\n            //register partition with scene\r\n            this._pScene._iRegisterPartition(this._pImplicitPartition);\r\n            //register entity with new partition\r\n            this._pImplicitPartition._iRegisterEntity(this);\r\n        }\r\n        if (sceneChanged && this._listenToSceneChanged)\r\n            this.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent_1.DisplayObjectEvent(DisplayObjectEvent_1.DisplayObjectEvent.SCENE_CHANGED, this)));\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    DisplayObject.prototype.pUpdateSceneTransform = function () {\r\n        if (this._iController)\r\n            this._iController.updateController();\r\n        this._pSceneTransform.copyFrom(this._transform.matrix3D);\r\n        if (this._pivot) {\r\n            if (!this._pivotScale)\r\n                this._pivotScale = new Vector3D_1.Vector3D();\r\n            this._pivotScale.x = this._pivot.x / this._transform.scale.x;\r\n            this._pivotScale.y = this._pivot.y / this._transform.scale.y;\r\n            this._pivotScale.z = this._pivot.z / this._transform.scale.z;\r\n            this._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n            if (this.alignmentMode != AlignmentMode_1.AlignmentMode.PIVOT_POINT)\r\n                this._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n        }\r\n        if (this._pParent && !this._pParent._iIsRoot)\r\n            this._pSceneTransform.append(this._pParent.sceneTransform);\r\n        this._matrix3DDirty = false;\r\n        this._positionDirty = false;\r\n        this._rotationDirty = false;\r\n        this._skewDirty = false;\r\n        this._scaleDirty = false;\r\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    DisplayObject.prototype._iInternalUpdate = function () {\r\n        if (this._iController)\r\n            this._iController.update();\r\n        // Dispatch all queued events.\r\n        var len = this._queuedEvents.length;\r\n        for (var i = 0; i < len; ++i)\r\n            this.dispatchEvent(this._queuedEvents[i]);\r\n        this._queuedEvents.length = 0;\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    DisplayObject.prototype._iIsVisible = function () {\r\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.VISIBLE)\r\n            this._updateVisible();\r\n        return this._pImplicitVisibility;\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    DisplayObject.prototype._iAssignedMaskId = function () {\r\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MASK_ID)\r\n            this._updateMaskId();\r\n        return this._pImplicitMaskId;\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    DisplayObject.prototype._iAssignedMasks = function () {\r\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MASKS)\r\n            this._updateMasks();\r\n        return this._pImplicitMasks;\r\n    };\r\n    DisplayObject.prototype._iMasksConfig = function () {\r\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MASKS)\r\n            this._updateMasks();\r\n        return this._pImplicitMaskIds;\r\n    };\r\n    DisplayObject.prototype._iAssignedColorTransform = function () {\r\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM)\r\n            this._updateColorTransform();\r\n        return this._pImplicitColorTransform;\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    DisplayObject.prototype._iIsMouseEnabled = function () {\r\n        if (this._hierarchicalPropsDirty & HierarchicalProperties_1.HierarchicalProperties.MOUSE_ENABLED)\r\n            this._updateMouseEnabled();\r\n        return this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n    };\r\n    DisplayObject.prototype._acceptTraverser = function (collector) {\r\n        //nothing to do here\r\n    };\r\n    /**\r\n     * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n     *\r\n     * @private\r\n     */\r\n    DisplayObject.prototype._onInvalidateMatrix3D = function (event) {\r\n        if (this._matrix3DDirty)\r\n            return;\r\n        this._matrix3DDirty = true;\r\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.SCENE_TRANSFORM);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    DisplayObject.prototype._onInvalidateColorTransform = function (event) {\r\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM);\r\n    };\r\n    DisplayObject.prototype._pInvalidateBounds = function () {\r\n        this._boxBoundsInvalid = true;\r\n        this._sphereBoundsInvalid = true;\r\n        if (this.isEntity)\r\n            this.invalidatePartitionBounds();\r\n        if (this._pParent)\r\n            this._pParent._pInvalidateBounds();\r\n    };\r\n    DisplayObject.prototype._pUpdateBoxBounds = function () {\r\n        this._boxBoundsInvalid = false;\r\n        if (this._pBoxBounds == null)\r\n            this._pBoxBounds = new Box_1.Box();\r\n    };\r\n    DisplayObject.prototype._pUpdateSphereBounds = function () {\r\n        this._sphereBoundsInvalid = false;\r\n        if (this._pSphereBounds == null)\r\n            this._pSphereBounds = new Sphere_1.Sphere();\r\n    };\r\n    DisplayObject.prototype.queueDispatch = function (event) {\r\n        // Store event to be dispatched later.\r\n        this._queuedEvents.push(event);\r\n    };\r\n    DisplayObject.prototype._setScaleX = function (val) {\r\n        if (this.scaleX == val)\r\n            return;\r\n        this._transform.scale.x = val;\r\n        this._transform.invalidateMatrix3D();\r\n    };\r\n    DisplayObject.prototype._setScaleY = function (val) {\r\n        if (this.scaleY == val)\r\n            return;\r\n        this._transform.scale.y = val;\r\n        this._transform.invalidateMatrix3D();\r\n    };\r\n    DisplayObject.prototype._setScaleZ = function (val) {\r\n        if (this.scaleZ == val)\r\n            return;\r\n        this._transform.scale.z = val;\r\n        this._transform.invalidateMatrix3D();\r\n    };\r\n    DisplayObject.prototype._updateMouseEnabled = function () {\r\n        this._pImplicitMouseEnabled = (this._pParent) ? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\r\n        // If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n        if (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\r\n            this.pickingCollider = this._pParent.pickingCollider;\r\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.MOUSE_ENABLED;\r\n    };\r\n    DisplayObject.prototype._updateVisible = function () {\r\n        this._pImplicitVisibility = (this._pParent) ? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\r\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.VISIBLE;\r\n    };\r\n    DisplayObject.prototype._updateMaskId = function () {\r\n        this._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1) ? this._pParent._iAssignedMaskId() : this._explicitMaskId;\r\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.MASK_ID;\r\n    };\r\n    DisplayObject.prototype._updateMasks = function () {\r\n        this._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks()) ? (this._explicitMasks != null) ? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null) ? [this._explicitMasks] : null;\r\n        this._pImplicitMaskIds.length = 0;\r\n        if (this._pImplicitMasks && this._pImplicitMasks.length) {\r\n            var numLayers = this._pImplicitMasks.length;\r\n            var numChildren;\r\n            var implicitChildren;\r\n            var implicitChildIds;\r\n            for (var i = 0; i < numLayers; i++) {\r\n                implicitChildren = this._pImplicitMasks[i];\r\n                numChildren = implicitChildren.length;\r\n                implicitChildIds = new Array();\r\n                for (var j = 0; j < numChildren; j++)\r\n                    implicitChildIds.push(implicitChildren[j].id);\r\n                this._pImplicitMaskIds.push(implicitChildIds);\r\n            }\r\n        }\r\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.MASKS;\r\n    };\r\n    DisplayObject.prototype._updateColorTransform = function () {\r\n        if (!this._pImplicitColorTransform)\r\n            this._pImplicitColorTransform = new ColorTransform_1.ColorTransform();\r\n        if (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\r\n            this._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\r\n            if (this._transform.colorTransform)\r\n                this._pImplicitColorTransform.prepend(this._transform.colorTransform);\r\n        }\r\n        else {\r\n            if (this._transform.colorTransform)\r\n                this._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\r\n            else\r\n                this._pImplicitColorTransform.clear();\r\n        }\r\n        this._hierarchicalPropsDirty ^= HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM;\r\n    };\r\n    DisplayObject.prototype._updateMaskMode = function () {\r\n        if (this.maskMode)\r\n            this.mouseEnabled = false;\r\n        this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.MASK_ID);\r\n    };\r\n    DisplayObject.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        var i;\r\n        this._pImplicitColorTransform = null;\r\n        this._pImplicitMasks = null;\r\n    };\r\n    DisplayObject.prototype.invalidatePartitionBounds = function () {\r\n        this.dispatchEvent(new DisplayObjectEvent_1.DisplayObjectEvent(DisplayObjectEvent_1.DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\r\n    };\r\n    DisplayObject.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\r\n        return false;\r\n    };\r\n    return DisplayObject;\r\n}(AssetBase_1.AssetBase));\r\nexports.DisplayObject = DisplayObject;\r\n},{\"../base/AlignmentMode\":\"awayjs-display/lib/base/AlignmentMode\",\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../base/OrientationMode\":\"awayjs-display/lib/base/OrientationMode\",\"../base/Transform\":\"awayjs-display/lib/base/Transform\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"../events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\",\"../pick/PickingCollision\":\"awayjs-display/lib/pick/PickingCollision\",\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Sphere\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/display/IEntity\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/display/LightBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\r\nvar LightEvent_1 = require(\"../events/LightEvent\");\r\nvar LightBase = (function (_super) {\r\n    __extends(LightBase, _super);\r\n    function LightBase() {\r\n        _super.call(this);\r\n        this._color = 0xffffff;\r\n        this._colorR = 1;\r\n        this._colorG = 1;\r\n        this._colorB = 1;\r\n        this._ambientColor = 0xffffff;\r\n        this._ambient = 0;\r\n        this._iAmbientR = 0;\r\n        this._iAmbientG = 0;\r\n        this._iAmbientB = 0;\r\n        this._specular = 1;\r\n        this._iSpecularR = 1;\r\n        this._iSpecularG = 1;\r\n        this._iSpecularB = 1;\r\n        this._diffuse = 1;\r\n        this._iDiffuseR = 1;\r\n        this._iDiffuseG = 1;\r\n        this._iDiffuseB = 1;\r\n        this._shadowsEnabled = false;\r\n    }\r\n    Object.defineProperty(LightBase.prototype, \"shadowsEnabled\", {\r\n        get: function () {\r\n            return this._shadowsEnabled;\r\n        },\r\n        set: function (value) {\r\n            if (this._shadowsEnabled == value)\r\n                return;\r\n            this._shadowsEnabled = value;\r\n            if (value) {\r\n                if (this._shadowMapper == null)\r\n                    this._shadowMapper = this.pCreateShadowMapper();\r\n                this._shadowMapper.light = this;\r\n            }\r\n            else {\r\n                this._shadowMapper.dispose();\r\n                this._shadowMapper = null;\r\n            }\r\n            //*/\r\n            this.dispatchEvent(new LightEvent_1.LightEvent(LightEvent_1.LightEvent.CASTS_SHADOW_CHANGE));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LightBase.prototype.pCreateShadowMapper = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    Object.defineProperty(LightBase.prototype, \"specular\", {\r\n        get: function () {\r\n            return this._specular;\r\n        },\r\n        set: function (value) {\r\n            if (value < 0)\r\n                value = 0;\r\n            this._specular = value;\r\n            this.updateSpecular();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightBase.prototype, \"diffuse\", {\r\n        get: function () {\r\n            return this._diffuse;\r\n        },\r\n        set: function (value) {\r\n            if (value < 0)\r\n                value = 0;\r\n            this._diffuse = value;\r\n            this.updateDiffuse();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightBase.prototype, \"color\", {\r\n        get: function () {\r\n            return this._color;\r\n        },\r\n        set: function (value) {\r\n            this._color = value;\r\n            this._colorR = ((this._color >> 16) & 0xff) / 0xff;\r\n            this._colorG = ((this._color >> 8) & 0xff) / 0xff;\r\n            this._colorB = (this._color & 0xff) / 0xff;\r\n            this.updateDiffuse();\r\n            this.updateSpecular();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightBase.prototype, \"ambient\", {\r\n        get: function () {\r\n            return this._ambient;\r\n        },\r\n        set: function (value) {\r\n            if (value < 0)\r\n                value = 0;\r\n            else if (value > 1)\r\n                value = 1;\r\n            this._ambient = value;\r\n            this.updateAmbient();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightBase.prototype, \"ambientColor\", {\r\n        get: function () {\r\n            return this._ambientColor;\r\n        },\r\n        set: function (value) {\r\n            this._ambientColor = value;\r\n            this.updateAmbient();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LightBase.prototype.updateAmbient = function () {\r\n        this._iAmbientR = ((this._ambientColor >> 16) & 0xff) / 0xff * this._ambient;\r\n        this._iAmbientG = ((this._ambientColor >> 8) & 0xff) / 0xff * this._ambient;\r\n        this._iAmbientB = (this._ambientColor & 0xff) / 0xff * this._ambient;\r\n    };\r\n    LightBase.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\r\n        if (target === void 0) { target = null; }\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    LightBase.prototype.updateSpecular = function () {\r\n        this._iSpecularR = this._colorR * this._specular;\r\n        this._iSpecularG = this._colorG * this._specular;\r\n        this._iSpecularB = this._colorB * this._specular;\r\n    };\r\n    LightBase.prototype.updateDiffuse = function () {\r\n        this._iDiffuseR = this._colorR * this._diffuse;\r\n        this._iDiffuseG = this._colorG * this._diffuse;\r\n        this._iDiffuseB = this._colorB * this._diffuse;\r\n    };\r\n    Object.defineProperty(LightBase.prototype, \"shadowMapper\", {\r\n        get: function () {\r\n            return this._shadowMapper;\r\n        },\r\n        set: function (value) {\r\n            this._shadowMapper = value;\r\n            this._shadowMapper.light = this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LightBase;\r\n}(DisplayObjectContainer_1.DisplayObjectContainer));\r\nexports.LightBase = LightBase;\r\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/display/LightProbe\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar SamplerCube_1 = require(\"awayjs-core/lib/image/SamplerCube\");\r\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\r\nvar LightBase_1 = require(\"../display/LightBase\");\r\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\r\nvar LightProbe = (function (_super) {\r\n    __extends(LightProbe, _super);\r\n    function LightProbe(diffuseMap, specularMap) {\r\n        if (specularMap === void 0) { specularMap = null; }\r\n        _super.call(this);\r\n        this.diffuseSampler = new SamplerCube_1.SamplerCube();\r\n        this.specularSampler = new SamplerCube_1.SamplerCube();\r\n        this._pIsEntity = true;\r\n        this.diffuseMap = diffuseMap;\r\n        this.specularMap = specularMap;\r\n        //default bounds type\r\n        this._boundsType = BoundsType_1.BoundsType.NULL;\r\n    }\r\n    Object.defineProperty(LightProbe.prototype, \"assetType\", {\r\n        get: function () {\r\n            return LightProbe.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //@override\r\n    LightProbe.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\r\n        if (target === void 0) { target = null; }\r\n        throw new ErrorBase_1.ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\r\n    };\r\n    LightProbe.assetType = \"[light LightProbe]\";\r\n    return LightProbe;\r\n}(LightBase_1.LightBase));\r\nexports.LightProbe = LightProbe;\r\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"awayjs-core/lib/errors/ErrorBase\":undefined,\"awayjs-core/lib/image/SamplerCube\":undefined}],\"awayjs-display/lib/display/LineSegment\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\r\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\r\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\r\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nvar LineSegment = (function (_super) {\r\n    __extends(LineSegment, _super);\r\n    /**\r\n     * Create a line segment\r\n     *\r\n     * @param startPosition Start position of the line segment\r\n     * @param endPosition Ending position of the line segment\r\n     * @param thickness Thickness of the line\r\n     */\r\n    function LineSegment(material, startPosition, endPosition, thickness) {\r\n        var _this = this;\r\n        if (thickness === void 0) { thickness = 1; }\r\n        _super.call(this);\r\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\r\n        this._pIsEntity = true;\r\n        this.material = material;\r\n        this._startPosition = startPosition;\r\n        this._endPosition = endPosition;\r\n        this._halfThickness = thickness * 0.5;\r\n        //default bounds type\r\n        this._boundsType = BoundsType_1.BoundsType.AXIS_ALIGNED_BOX;\r\n    }\r\n    Object.defineProperty(LineSegment.prototype, \"animator\", {\r\n        /**\r\n         * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n         */\r\n        get: function () {\r\n            return this._animator;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSegment.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return LineSegment.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSegment.prototype, \"startPostion\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._startPosition;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSegment.prototype, \"startPosition\", {\r\n        set: function (value) {\r\n            if (this._startPosition == value)\r\n                return;\r\n            this._startPosition = value;\r\n            this.invalidateElements();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSegment.prototype, \"endPosition\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._endPosition;\r\n        },\r\n        set: function (value) {\r\n            if (this._endPosition == value)\r\n                return;\r\n            this._endPosition = value;\r\n            this.invalidateElements();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSegment.prototype, \"material\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._material;\r\n        },\r\n        set: function (value) {\r\n            if (this.material)\r\n                this.material.iRemoveOwner(this);\r\n            this._material = value;\r\n            if (this.material)\r\n                this.material.iAddOwner(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSegment.prototype, \"thickness\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._halfThickness * 2;\r\n        },\r\n        set: function (value) {\r\n            if (this._halfThickness == value)\r\n                return;\r\n            this._halfThickness = value * 0.5;\r\n            this.invalidateElements();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineSegment.prototype, \"style\", {\r\n        /**\r\n         * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\r\n         */\r\n        get: function () {\r\n            return this._style;\r\n        },\r\n        set: function (value) {\r\n            if (this._style == value)\r\n                return;\r\n            if (this._style)\r\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this._style = value;\r\n            if (this._style)\r\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this.invalidateSurface();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @protected\r\n     */\r\n    LineSegment.prototype._pUpdateBoxBounds = function () {\r\n        _super.prototype._pUpdateBoxBounds.call(this);\r\n        this._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n        this._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n        this._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n        this._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n        this._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n        this._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n    };\r\n    LineSegment.prototype._pUpdateSphereBounds = function () {\r\n        _super.prototype._pUpdateSphereBounds.call(this);\r\n        this._pUpdateBoxBounds();\r\n        var halfWidth = (this._endPosition.x - this._startPosition.x) / 2;\r\n        var halfHeight = (this._endPosition.y - this._startPosition.y) / 2;\r\n        var halfDepth = (this._endPosition.z - this._startPosition.z) / 2;\r\n        this._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n        this._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n        this._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n        this._pSphereBounds.radius = Math.sqrt(halfWidth * halfWidth + halfHeight * halfHeight + halfDepth * halfDepth);\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    LineSegment.prototype.invalidateElements = function () {\r\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_ELEMENTS, this)); //TODO improve performance by only using one geometry for all line segments\r\n    };\r\n    LineSegment.prototype.invalidateSurface = function () {\r\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_SURFACE, this));\r\n    };\r\n    LineSegment.prototype._onInvalidateProperties = function (event) {\r\n        this.invalidateSurface();\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @param shortestCollisionDistance\r\n     * @param findClosest\r\n     * @returns {boolean}\r\n     *\r\n     * @internal\r\n     */\r\n    LineSegment.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\r\n        return false; //TODO: detect line collisions\r\n    };\r\n    LineSegment.prototype._acceptTraverser = function (traverser) {\r\n        traverser.applyRenderable(this);\r\n    };\r\n    LineSegment.assetType = \"[asset LineSegment]\";\r\n    return LineSegment;\r\n}(DisplayObject_1.DisplayObject));\r\nexports.LineSegment = LineSegment;\r\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\"}],\"awayjs-display/lib/display/LoaderContainer\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetLibraryBundle_1 = require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nvar Loader_1 = require(\"awayjs-core/lib/library/Loader\");\r\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\r\nvar URLLoaderEvent_1 = require(\"awayjs-core/lib/events/URLLoaderEvent\");\r\nvar LoaderEvent_1 = require(\"awayjs-core/lib/events/LoaderEvent\");\r\nvar ParserEvent_1 = require(\"awayjs-core/lib/events/ParserEvent\");\r\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\r\n/**\r\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the LoaderContainer object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The LoaderContainer class overrides the following methods that it inherits,\r\n * because a LoaderContainer object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the LoaderContainer object's root SWF file), you may want to define a\r\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\r\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nvar LoaderContainer = (function (_super) {\r\n    __extends(LoaderContainer, _super);\r\n    /**\r\n     * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n     * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n     * as a child of the Loader instance. You can then add the Loader object to\r\n     * the display list(for instance, by using the <code>addChild()</code>\r\n     * method of a DisplayObjectContainer instance). The asset appears on the\r\n     * Stage as it loads.\r\n     *\r\n     * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n     * to a display object container on the display list. In this mode, the\r\n     * Loader instance might be used to load a SWF file that contains additional\r\n     * modules of an application. </p>\r\n     *\r\n     * <p>To detect when the SWF file is finished loading, you can use the events\r\n     * of the LoaderInfo object associated with the\r\n     * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n     * point, the code in the module SWF file can be executed to initialize and\r\n     * start the module. In the offlist mode, a Loader instance might also be\r\n     * used to load a SWF file that contains components or media assets. Again,\r\n     * you can use the LoaderInfo object event notifications to detect when the\r\n     * components are finished loading. At that point, the application can start\r\n     * using the components and media assets in the library of the SWF file by\r\n     * instantiating the ActionScript 3.0 classes that represent those components\r\n     * and assets.</p>\r\n     *\r\n     * <p>To determine the status of a Loader object, monitor the following\r\n     * events that the LoaderInfo object associated with the\r\n     * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n     *\r\n     * <ul>\r\n     *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n     *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n     * dispatched if the file cannot be loaded or if an error occured during the\r\n     * load process. </li>\r\n     *   <li>The <code>progress</code> event fires continuously while the file is\r\n     * being loaded.</li>\r\n     *   <li>The <code>complete</code> event is dispatched when a file completes\r\n     * downloading, but before the loaded movie clip's methods and properties are\r\n     * available. </li>\r\n     *   <li>The <code>init</code> event is dispatched after the properties and\r\n     * methods of the loaded SWF file are accessible, so you can begin\r\n     * manipulating the loaded SWF file. This event is dispatched before the\r\n     * <code>complete</code> handler. In streaming SWF files, the\r\n     * <code>init</code> event can occur significantly earlier than the\r\n     * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n     * handler.</li>\r\n     * </ul>\r\n     */\r\n    function LoaderContainer(useAssetLibrary, assetLibraryId) {\r\n        var _this = this;\r\n        if (useAssetLibrary === void 0) { useAssetLibrary = true; }\r\n        if (assetLibraryId === void 0) { assetLibraryId = null; }\r\n        _super.call(this);\r\n        this._useAssetLib = useAssetLibrary;\r\n        this._assetLibId = assetLibraryId;\r\n        this._onAssetCompleteDelegate = function (event) { return _this.onAssetComplete(event); };\r\n        this._onTextureSizeErrorDelegate = function (event) { return _this.onTextureSizeError(event); };\r\n        this._onLoadCompleteDelegate = function (event) { return _this.onLoadComplete(event); };\r\n        this._onLoadErrorDelegate = function (event) { return _this.onLoadError(event); };\r\n        this._onParseErrorDelegate = function (event) { return _this.onParseError(event); };\r\n    }\r\n    Object.defineProperty(LoaderContainer.prototype, \"content\", {\r\n        /**\r\n         * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n         * GIF) file that was loaded by using the <code>load()</code> or\r\n         * <code>loadBytes()</code> methods.\r\n         *\r\n         * @throws SecurityError The loaded SWF file or image file belongs to a\r\n         *                       security sandbox to which you do not have access.\r\n         *                       For a loaded SWF file, you can avoid this situation\r\n         *                       by having the file call the\r\n         *                       <code>Security.allowDomain()</code> method or by\r\n         *                       having the loading file specify a\r\n         *                       <code>loaderContext</code> parameter with its\r\n         *                       <code>securityDomain</code> property set to\r\n         *                       <code>SecurityDomain.currentDomain</code> when you\r\n         *                       call the <code>load()</code> or\r\n         *                       <code>loadBytes()</code> method.\r\n         */\r\n        get: function () {\r\n            return this._content;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Cancels a <code>load()</code> method operation that is currently in\r\n     * progress for the Loader instance.\r\n     *\r\n     */\r\n    LoaderContainer.prototype.close = function () {\r\n        if (!this._loader)\r\n            return;\r\n        if (this._useAssetLib) {\r\n            var lib;\r\n            lib = AssetLibraryBundle_1.AssetLibraryBundle.getInstance(this._assetLibId);\r\n            lib.disposeLoader(this._loader);\r\n        }\r\n        this._disposeLoader();\r\n    };\r\n    /**\r\n     * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n     * object that is a child of this Loader object. If you load an animated GIF\r\n     * file, only the first frame is displayed. As the Loader object can contain\r\n     * only a single child, issuing a subsequent <code>load()</code> request\r\n     * terminates the previous request, if still pending, and commences a new\r\n     * load.\r\n     *\r\n     * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n     * loaded image is 8,191 pixels in width or height, and the total number of\r\n     * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n     * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n     * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n     * and 2,880 pixels in width.</p>\r\n     *\r\n     * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n     * rotation, and scale properties of the parent display objects of the Loader\r\n     * object. </p>\r\n     *\r\n     * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n     * with this method, or to cancel a load operation that is in progress.</p>\r\n     *\r\n     * <p>You can prevent a SWF file from using this method by setting the\r\n     * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n     * <code>embed</code> tags in the HTML page that contains the SWF\r\n     * content.</p>\r\n     *\r\n     * <p>When you use this method, consider the Flash Player security model,\r\n     * which is described in the Loader class description. </p>\r\n     *\r\n     * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n     * example \"multipart/form-data\") that contains an upload(indicated by a\r\n     * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n     * body), the POST operation is subject to the security rules applied to\r\n     * uploads:</p>\r\n     *\r\n     * <ul>\r\n     *   <li>The POST operation must be performed in response to a user-initiated\r\n     * action, such as a mouse click or key press.</li>\r\n     *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n     * same server as the SWF file that is sending the POST request), the target\r\n     * server must provide a URL policy file that permits cross-domain\r\n     * access.</li>\r\n     * </ul>\r\n     *\r\n     * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n     * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n     * the POST operation is subject to the security rules applied to\r\n     * uploads.</p>\r\n     *\r\n     * <p>For more information related to security, see the Flash Player\r\n     * Developer Center Topic: <a\r\n     * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n     * scope=\"external\">Security</a>.</p>\r\n     *\r\n     * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n     *                file to be loaded. A relative path must be relative to the\r\n     *                main SWF file. Absolute URLs must include the protocol\r\n     *                reference, such as http:// or file:///. Filenames cannot\r\n     *                include disk drive specifications.\r\n     * @param context A LoaderContext object, which has properties that define\r\n     *                the following:\r\n     *                <ul>\r\n     *                  <li>Whether or not to check for the existence of a policy\r\n     *                file upon loading the object</li>\r\n     *                  <li>The ApplicationDomain for the loaded object</li>\r\n     *                  <li>The SecurityDomain for the loaded object</li>\r\n     *                  <li>The ImageDecodingPolicy for the loaded image\r\n     *                object</li>\r\n     *                </ul>\r\n     *\r\n     *                <p>If the <code>context</code> parameter is not specified\r\n     *                or refers to a null object, the loaded content remains in\r\n     *                its own security domain.</p>\r\n     *\r\n     *                <p>For complete details, see the description of the\r\n     *                properties in the <a\r\n     *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n     *                class.</p>\r\n     * @param ns      An optional namespace string under which the file is to be\r\n     *                loaded, allowing the differentiation of two resources with\r\n     *                identical assets.\r\n     * @param parser  An optional parser object for translating the loaded data\r\n     *                into a usable resource. If not provided, Loader will\r\n     *                attempt to auto-detect the file type.\r\n     * @throws IOError               The <code>digest</code> property of the\r\n     *                               <code>request</code> object is not\r\n     *                               <code>null</code>. You should only set the\r\n     *                               <code>digest</code> property of a URLRequest\r\n     *                               object when calling the\r\n     *                               <code>URLLoader.load()</code> method when\r\n     *                               loading a SWZ file(an Adobe platform\r\n     *                               component).\r\n     * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n     *                               property of the <code>context</code>\r\n     *                               parameter is a <code>Loader</code>.\r\n     * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n     *                               parameter is set to non-null and has some\r\n     *                               values which are not Strings.\r\n     * @throws SecurityError         The value of\r\n     *                               <code>LoaderContext.securityDomain</code>\r\n     *                               must be either <code>null</code> or\r\n     *                               <code>SecurityDomain.currentDomain</code>.\r\n     *                               This reflects the fact that you can only\r\n     *                               place the loaded media in its natural\r\n     *                               security sandbox or your own(the latter\r\n     *                               requires a policy file).\r\n     * @throws SecurityError         Local SWF files may not set\r\n     *                               LoaderContext.securityDomain to anything\r\n     *                               other than <code>null</code>. It is not\r\n     *                               permitted to import non-local media into a\r\n     *                               local sandbox, or to place other local media\r\n     *                               in anything other than its natural sandbox.\r\n     * @throws SecurityError         You cannot connect to commonly reserved\r\n     *                               ports. For a complete list of blocked ports,\r\n     *                               see \"Restricting Networking APIs\" in the\r\n     *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n     * @throws SecurityError         If the <code>applicationDomain</code> or\r\n     *                               <code>securityDomain</code> properties of\r\n     *                               the <code>context</code> parameter are from\r\n     *                               a disallowed domain.\r\n     * @throws SecurityError         If a local SWF file is attempting to use the\r\n     *                               <code>securityDomain</code> property of the\r\n     *                               <code>context</code> parameter.\r\n     * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object if the\r\n     *                      <code>LoaderContext.requestedContentParent</code>\r\n     *                      property has been specified and it is not possible to\r\n     *                      add the loaded content as a child to the specified\r\n     *                      DisplayObjectContainer. This could happen if the\r\n     *                      loaded content is a\r\n     *                      <code>flash.display.AVM1Movie</code> or if the\r\n     *                      <code>addChild()</code> call to the\r\n     *                      requestedContentParent throws an error.\r\n     * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when the file has completed loading. The\r\n     *                      <code>complete</code> event is always dispatched\r\n     *                      after the <code>init</code> event.\r\n     * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when a network request is made over HTTP and\r\n     *                      Flash Player can detect the HTTP status code.\r\n     * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when the properties and methods of the loaded\r\n     *                      SWF file are accessible. The <code>init</code> event\r\n     *                      always precedes the <code>complete</code> event.\r\n     * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when an input or output error occurs that\r\n     *                      causes a load operation to fail.\r\n     * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when the loading operation starts.\r\n     * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object as data is received while load operation\r\n     *                      progresses.\r\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object if a SWF file in the local-with-filesystem\r\n     *                      sandbox attempts to load content in the\r\n     *                      local-with-networking sandbox, or vice versa.\r\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object if the\r\n     *                      <code>LoaderContext.requestedContentParent</code>\r\n     *                      property has been specified and the security sandbox\r\n     *                      of the\r\n     *                      <code>LoaderContext.requestedContentParent</code>\r\n     *                      does not have access to the loaded SWF.\r\n     * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when a loaded object is removed.\r\n     */\r\n    LoaderContainer.prototype.load = function (request, context, ns, parser) {\r\n        if (context === void 0) { context = null; }\r\n        if (ns === void 0) { ns = null; }\r\n        if (parser === void 0) { parser = null; }\r\n        this._getLoader().load(request, context, ns, parser);\r\n    };\r\n    /**\r\n     * Loads from binary data stored in a ByteArray object.\r\n     *\r\n     * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n     * the \"init\" event before accessing the properties of a loaded object.</p>\r\n     *\r\n     * <p>When you use this method, consider the Flash Player security model,\r\n     * which is described in the Loader class description. </p>\r\n     *\r\n     * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n     *                any of the file formats supported by the Loader class: SWF,\r\n     *                GIF, JPEG, or PNG.\r\n     * @param context A LoaderContext object. Only the\r\n     *                <code>applicationDomain</code> property of the\r\n     *                LoaderContext object applies; the\r\n     *                <code>checkPolicyFile</code> and\r\n     *                <code>securityDomain</code> properties of the LoaderContext\r\n     *                object do not apply.\r\n     *\r\n     *                <p>If the <code>context</code> parameter is not specified\r\n     *                or refers to a null object, the content is loaded into the\r\n     *                current security domain -  a process referred to as \"import\r\n     *                loading\" in Flash Player security documentation.\r\n     *                Specifically, if the loading SWF file trusts the remote SWF\r\n     *                by incorporating the remote SWF into its code, then the\r\n     *                loading SWF can import it directly into its own security\r\n     *                domain.</p>\r\n     *\r\n     *                <p>For more information related to security, see the Flash\r\n     *                Player Developer Center Topic: <a\r\n     *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n     *                scope=\"external\">Security</a>.</p>\r\n     * @throws ArgumentError         If the <code>length</code> property of the\r\n     *                               ByteArray object is not greater than 0.\r\n     * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n     *                               <code>securityDomain</code> property of the\r\n     *                               <code>context</code> parameter are non-null.\r\n     * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n     *                               property of the <code>context</code>\r\n     *                               parameter is a <code>Loader</code>.\r\n     * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n     *                               parameter is set to non-null and has some\r\n     *                               values which are not Strings.\r\n     * @throws SecurityError         If the provided\r\n     *                               <code>applicationDomain</code> property of\r\n     *                               the <code>context</code> property is from a\r\n     *                               disallowed domain.\r\n     * @throws SecurityError         You cannot connect to commonly reserved\r\n     *                               ports. For a complete list of blocked ports,\r\n     *                               see \"Restricting Networking APIs\" in the\r\n     *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n     * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object if the\r\n     *                      <code>LoaderContext.requestedContentParent</code>\r\n     *                      property has been specified and it is not possible to\r\n     *                      add the loaded content as a child to the specified\r\n     *                      DisplayObjectContainer. This could happen if the\r\n     *                      loaded content is a\r\n     *                      <code>flash.display.AVM1Movie</code> or if the\r\n     *                      <code>addChild()</code> call to the\r\n     *                      requestedContentParent throws an error.\r\n     * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when the operation is complete. The\r\n     *                      <code>complete</code> event is always dispatched\r\n     *                      after the <code>init</code> event.\r\n     * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when the properties and methods of the loaded\r\n     *                      data are accessible. The <code>init</code> event\r\n     *                      always precedes the <code>complete</code> event.\r\n     * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when the runtime cannot parse the data in the\r\n     *                      byte array.\r\n     * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when the operation starts.\r\n     * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object as data is transfered in memory.\r\n     * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object if the\r\n     *                      <code>LoaderContext.requestedContentParent</code>\r\n     *                      property has been specified and the security sandbox\r\n     *                      of the\r\n     *                      <code>LoaderContext.requestedContentParent</code>\r\n     *                      does not have access to the loaded SWF.\r\n     * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n     *                      object when a loaded object is removed.\r\n     */\r\n    LoaderContainer.prototype.loadData = function (data, context, ns, parser) {\r\n        if (context === void 0) { context = null; }\r\n        if (ns === void 0) { ns = null; }\r\n        if (parser === void 0) { parser = null; }\r\n        this._getLoader().loadData(data, '', context, ns, parser);\r\n    };\r\n    LoaderContainer.prototype._getLoader = function () {\r\n        if (this._useAssetLib) {\r\n            var lib = AssetLibraryBundle_1.AssetLibraryBundle.getInstance(this._assetLibId);\r\n            this._loader = lib.getLoader();\r\n        }\r\n        else {\r\n            this._loader = new Loader_1.Loader();\r\n        }\r\n        this._loader.addEventListener(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\r\n        this._loader.addEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n        this._loader.addEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n        // Error are handled separately (see documentation for addErrorHandler)\r\n        this._loader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n        this._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n        return this._loader;\r\n    };\r\n    LoaderContainer.prototype._disposeLoader = function () {\r\n        this._loader.removeEventListener(LoaderEvent_1.LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\r\n        this._loader.removeEventListener(AssetEvent_1.AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n        this._loader.removeEventListener(AssetEvent_1.AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n        if (!this._useAssetLib)\r\n            this._loader.stop();\r\n        this._loader = null;\r\n    };\r\n    /**\r\n     * Removes a child of this Loader object that was loaded by using the\r\n     * <code>load()</code> method. The <code>property</code> of the associated\r\n     * LoaderInfo object is reset to <code>null</code>. The child is not\r\n     * necessarily destroyed because other objects might have references to it;\r\n     * however, it is no longer a child of the Loader object.\r\n     *\r\n     * <p>As a best practice, before you unload a child SWF file, you should\r\n     * explicitly close any streams in the child SWF file's objects, such as\r\n     * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n     * audio in the child SWF file might continue to play, even though the child\r\n     * SWF file was unloaded. To close streams in the child SWF file, add an\r\n     * event listener to the child that listens for the <code>unload</code>\r\n     * event. When the parent calls <code>Loader.unload()</code>, the\r\n     * <code>unload</code> event is dispatched to the child. The following code\r\n     * shows how you might do this:</p>\r\n     * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n     * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n     * myLocalConnection.close(); }\r\n     * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n     * closeAllStreams);</pre>\r\n     *\r\n     */\r\n    LoaderContainer.prototype.unload = function () {\r\n        //TODO\r\n    };\r\n    /**\r\n     * Enables a specific parser.\r\n     * When no specific parser is set for a loading/parsing opperation,\r\n     * loader3d can autoselect the correct parser to use.\r\n     * A parser must have been enabled, to be considered when autoselecting the parser.\r\n     *\r\n     * @param parserClass The parser class to enable.\r\n     * @see away.parsers.Parsers\r\n     */\r\n    LoaderContainer.enableParser = function (parserClass) {\r\n        Loader_1.Loader.enableParser(parserClass);\r\n    };\r\n    /**\r\n     * Enables a list of parsers.\r\n     * When no specific parser is set for a loading/parsing opperation,\r\n     * loader3d can autoselect the correct parser to use.\r\n     * A parser must have been enabled, to be considered when autoselecting the parser.\r\n     *\r\n     * @param parserClasses A Vector of parser classes to enable.\r\n     * @see away.parsers.Parsers\r\n     */\r\n    LoaderContainer.enableParsers = function (parserClasses) {\r\n        Loader_1.Loader.enableParsers(parserClasses);\r\n    };\r\n    LoaderContainer.prototype.onAssetComplete = function (event) {\r\n        this.dispatchEvent(event);\r\n    };\r\n    /**\r\n     * Called when an error occurs during loading\r\n     */\r\n    LoaderContainer.prototype.onLoadError = function (event) {\r\n        if (this.hasEventListener(URLLoaderEvent_1.URLLoaderEvent.LOAD_ERROR)) {\r\n            this.dispatchEvent(event);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Called when a an error occurs during parsing\r\n     */\r\n    LoaderContainer.prototype.onParseError = function (event) {\r\n        if (this.hasEventListener(ParserEvent_1.ParserEvent.PARSE_ERROR)) {\r\n            this.dispatchEvent(event);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    LoaderContainer.prototype.onTextureSizeError = function (event) {\r\n        this.dispatchEvent(event);\r\n    };\r\n    /**\r\n     * Called when the resource and all of its dependencies was retrieved.\r\n     */\r\n    LoaderContainer.prototype.onLoadComplete = function (event) {\r\n        this._content = event.content;\r\n        if (this._content)\r\n            this.addChild(this._content);\r\n        this.dispatchEvent(event);\r\n        this._disposeLoader();\r\n    };\r\n    return LoaderContainer;\r\n}(DisplayObjectContainer_1.DisplayObjectContainer));\r\nexports.LoaderContainer = LoaderContainer;\r\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/events/LoaderEvent\":undefined,\"awayjs-core/lib/events/ParserEvent\":undefined,\"awayjs-core/lib/events/URLLoaderEvent\":undefined,\"awayjs-core/lib/library/AssetLibraryBundle\":undefined,\"awayjs-core/lib/library/Loader\":undefined}],\"awayjs-display/lib/display/MovieClip\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\r\nvar Sprite_1 = require(\"../display/Sprite\");\r\nvar TextField_1 = require(\"../display/TextField\");\r\nvar MouseEvent_1 = require(\"../events/MouseEvent\");\r\nvar Timeline_1 = require(\"../base/Timeline\");\r\nvar FrameScriptManager_1 = require(\"../managers/FrameScriptManager\");\r\nvar MovieClip = (function (_super) {\r\n    __extends(MovieClip, _super);\r\n    function MovieClip(timeline) {\r\n        var _this = this;\r\n        if (timeline === void 0) { timeline = null; }\r\n        _super.call(this);\r\n        this._isButton = false;\r\n        this._time = 0; // the current time inside the animation\r\n        this._currentFrameIndex = -1; // the current frame\r\n        this._isPlaying = true; // false if paused or stopped\r\n        this._isInit = true;\r\n        this._potentialInstances = [];\r\n        this._depth_sessionIDs = {};\r\n        this._sessionID_childs = {};\r\n        /**\r\n         *\r\n         */\r\n        this.loop = true;\r\n        /**\r\n         * the current index of the current active frame\r\n         */\r\n        this.constructedKeyFrameIndex = -1;\r\n        this._enterFrame = new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.ENTER_FRAME, this);\r\n        this.inheritColorTransform = true;\r\n        this._onMouseOver = function (event) { return _this.currentFrameIndex = 1; };\r\n        this._onMouseOut = function (event) { return _this.currentFrameIndex = 0; };\r\n        this._onMouseDown = function (event) { return _this.currentFrameIndex = 2; };\r\n        this._onMouseUp = function (event) { return _this.currentFrameIndex = _this.currentFrameIndex == 0 ? 0 : 1; };\r\n        this._timeline = timeline || new Timeline_1.Timeline();\r\n    }\r\n    Object.defineProperty(MovieClip.prototype, \"adapter\", {\r\n        /**\r\n         * adapter is used to provide MovieClip to scripts taken from different platforms\r\n         * setter typically managed by factory\r\n         */\r\n        get: function () {\r\n            return this._adapter;\r\n        },\r\n        set: function (value) {\r\n            this._adapter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MovieClip.prototype.dispose = function () {\r\n        this.disposeValues();\r\n        MovieClip._movieClips.push(this);\r\n    };\r\n    MovieClip.prototype.disposeValues = function () {\r\n        _super.prototype.disposeValues.call(this);\r\n        this._potentialInstances = [];\r\n        this._depth_sessionIDs = {};\r\n        this._sessionID_childs = {};\r\n    };\r\n    MovieClip.prototype.reset_textclones = function () {\r\n        if (this.timeline) {\r\n            var len = this._potentialInstances.length;\r\n            for (var i = 0; i < len; i++) {\r\n                if (this._potentialInstances[i] != null) {\r\n                    if (this._potentialInstances[i].isAsset(TextField_1.TextField))\r\n                        this._potentialInstances[i].text = this.timeline.getPotentialChildPrototype(i).text;\r\n                    else if (this._potentialInstances[i].isAsset(MovieClip))\r\n                        this._potentialInstances[i].reset_textclones();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(MovieClip.prototype, \"isInit\", {\r\n        get: function () {\r\n            return this._isInit;\r\n        },\r\n        set: function (value) {\r\n            this._isInit = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MovieClip.prototype, \"timeline\", {\r\n        get: function () {\r\n            return this._timeline;\r\n        },\r\n        set: function (value) {\r\n            this._timeline = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MovieClip.prototype, \"numFrames\", {\r\n        get: function () {\r\n            return this._timeline.numFrames;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MovieClip.prototype.jumpToLabel = function (label) {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    };\r\n    MovieClip.prototype.reset = function () {\r\n        _super.prototype.reset.call(this);\r\n        // time only is relevant for the root mc, as it is the only one that executes the update function\r\n        this._time = 0;\r\n        if (this.adapter)\r\n            this.adapter.freeFromScript();\r\n        this.constructedKeyFrameIndex = -1;\r\n        for (var i = this.numChildren - 1; i >= 0; i--)\r\n            this.removeChildAt(i);\r\n        this._skipAdvance = MovieClip._skipAdvance;\r\n        var numFrames = this._timeline.keyframe_indices.length;\r\n        this._isPlaying = Boolean(numFrames > 1);\r\n        if (numFrames) {\r\n            this._currentFrameIndex = 0;\r\n            this._timeline.constructNextFrame(this, true, true);\r\n        }\r\n        else {\r\n            this._currentFrameIndex = -1;\r\n        }\r\n    };\r\n    MovieClip.prototype.resetSessionIDs = function () {\r\n        this._depth_sessionIDs = {};\r\n    };\r\n    Object.defineProperty(MovieClip.prototype, \"currentFrameIndex\", {\r\n        /*\r\n        * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n         */\r\n        get: function () {\r\n            return this._currentFrameIndex;\r\n        },\r\n        set: function (value) {\r\n            //if currentFrame is set greater than the available number of\r\n            //frames, the playhead is moved to the last frame in the timeline.\r\n            //But because the frame specified was not a keyframe, no scripts are\r\n            //executed, even if they exist on the last frame.\r\n            var skip_script = false;\r\n            var numFrames = this._timeline.keyframe_indices.length;\r\n            if (!numFrames)\r\n                return;\r\n            if (value < 0) {\r\n                value = 0;\r\n            }\r\n            else if (value >= numFrames) {\r\n                value = numFrames - 1;\r\n                skip_script = true;\r\n            }\r\n            if (this._currentFrameIndex == value)\r\n                return;\r\n            this._currentFrameIndex = value;\r\n            //changing current frame will ignore advance command for that\r\n            //update's advanceFrame function, unless advanceFrame has\r\n            //already been executed\r\n            this._skipAdvance = MovieClip._skipAdvance;\r\n            this._timeline.gotoFrame(this, value, skip_script);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MovieClip.prototype.addButtonListeners = function () {\r\n        this._isButton = true;\r\n        this.stop();\r\n        this.addEventListener(MouseEvent_1.MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent_1.MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent_1.MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent_1.MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    };\r\n    MovieClip.prototype.removeButtonListeners = function () {\r\n        this.removeEventListener(MouseEvent_1.MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent_1.MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent_1.MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent_1.MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    };\r\n    MovieClip.prototype.getChildAtSessionID = function (sessionID) {\r\n        return this._sessionID_childs[sessionID];\r\n    };\r\n    MovieClip.prototype.getSessionIDDepths = function () {\r\n        return this._depth_sessionIDs;\r\n    };\r\n    MovieClip.prototype.addChildAtDepth = function (child, depth, replace) {\r\n        if (replace === void 0) { replace = true; }\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n        child.reset(); // this takes care of transform and visibility\r\n        return _super.prototype.addChildAtDepth.call(this, child, depth, replace);\r\n    };\r\n    MovieClip.prototype._addTimelineChildAt = function (child, depth, sessionID) {\r\n        this._depth_sessionIDs[depth] = child._sessionID = sessionID;\r\n        this._sessionID_childs[sessionID] = child;\r\n        return this.addChildAtDepth(child, depth);\r\n    };\r\n    MovieClip.prototype.removeChildAtInternal = function (index) {\r\n        var child = this._children[index];\r\n        if (child.adapter)\r\n            child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        //check to make sure _depth_sessionIDs wasn't modified with a new child\r\n        if (this._depth_sessionIDs[child._depthID] == child._sessionID)\r\n            delete this._depth_sessionIDs[child._depthID];\r\n        delete this._sessionID_childs[child._sessionID];\r\n        child._sessionID = -1;\r\n        return _super.prototype.removeChildAtInternal.call(this, index);\r\n    };\r\n    Object.defineProperty(MovieClip.prototype, \"assetType\", {\r\n        get: function () {\r\n            return MovieClip.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    MovieClip.prototype.play = function () {\r\n        if (this._timeline.keyframe_indices.length > 1)\r\n            this._isPlaying = true;\r\n    };\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    MovieClip.prototype.update = function () {\r\n        MovieClip._skipAdvance = true;\r\n        this.advanceFrame();\r\n        MovieClip._skipAdvance = false;\r\n        // after we advanced the scenegraph, we might have some script that needs executing\r\n        FrameScriptManager_1.FrameScriptManager.execute_queue();\r\n        // now we want to execute the onEnter\r\n        this.dispatchEvent(this._enterFrame);\r\n        // after we executed the onEnter, we might have some script that needs executing\r\n        FrameScriptManager_1.FrameScriptManager.execute_queue();\r\n        // now we execute any intervals queued\r\n        FrameScriptManager_1.FrameScriptManager.execute_intervals();\r\n        // finally, we execute any scripts that were added from intervals\r\n        FrameScriptManager_1.FrameScriptManager.execute_queue();\r\n        //execute any disposes as a result of framescripts\r\n        FrameScriptManager_1.FrameScriptManager.execute_dispose();\r\n    };\r\n    MovieClip.prototype.getPotentialChildInstance = function (id) {\r\n        if (!this._potentialInstances[id])\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n        return this._potentialInstances[id];\r\n    };\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    MovieClip.prototype.stop = function () {\r\n        this._isPlaying = false;\r\n    };\r\n    MovieClip.prototype.clone = function () {\r\n        var newInstance = (MovieClip._movieClips.length) ? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\r\n        this.copyTo(newInstance);\r\n        return newInstance;\r\n    };\r\n    MovieClip.prototype.copyTo = function (newInstance) {\r\n        _super.prototype.copyTo.call(this, newInstance);\r\n        newInstance.timeline = this._timeline;\r\n        newInstance.loop = this.loop;\r\n    };\r\n    MovieClip.prototype.advanceFrame = function () {\r\n        if (this._isPlaying && !this._skipAdvance) {\r\n            if (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\r\n                if (this.loop)\r\n                    this.currentFrameIndex = 0;\r\n                else\r\n                    this._isPlaying = false;\r\n            }\r\n            else {\r\n                this._currentFrameIndex++;\r\n                this._timeline.constructNextFrame(this);\r\n            }\r\n        }\r\n        var len = this._children.length;\r\n        var child;\r\n        for (var i = 0; i < len; ++i) {\r\n            child = this._children[i];\r\n            if (child.isAsset(MovieClip))\r\n                child.advanceFrame();\r\n        }\r\n        this._skipAdvance = false;\r\n    };\r\n    // DEBUG CODE:\r\n    MovieClip.prototype.logHierarchy = function (depth) {\r\n        if (depth === void 0) { depth = 0; }\r\n        this.printHierarchyName(depth, this);\r\n        var len = this._children.length;\r\n        var child;\r\n        for (var i = 0; i < len; i++) {\r\n            child = this._children[i];\r\n            if (child.isAsset(MovieClip))\r\n                child.logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    };\r\n    MovieClip.prototype.printHierarchyName = function (depth, target) {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n        str += \" \" + target.name + \" = \" + target.id;\r\n        console.log(str);\r\n    };\r\n    MovieClip.prototype.clear = function () {\r\n        //clear out potential instances\r\n        var len = this._potentialInstances.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var instance = this._potentialInstances[i];\r\n            //only dispose instances that are not used in script ie. do not have an instance name\r\n            if (instance && instance.name == \"\") {\r\n                FrameScriptManager_1.FrameScriptManager.add_child_to_dispose(instance);\r\n                delete this._potentialInstances[i];\r\n            }\r\n        }\r\n        _super.prototype.clear.call(this);\r\n    };\r\n    MovieClip._movieClips = new Array();\r\n    MovieClip.assetType = \"[asset MovieClip]\";\r\n    return MovieClip;\r\n}(Sprite_1.Sprite));\r\nexports.MovieClip = MovieClip;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = MovieClip;\r\n},{\"../base/Timeline\":\"awayjs-display/lib/base/Timeline\",\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../display/TextField\":\"awayjs-display/lib/display/TextField\",\"../events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"../managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-core/lib/events/AssetEvent\":undefined}],\"awayjs-display/lib/display/PointLight\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\r\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar LightBase_1 = require(\"../display/LightBase\");\r\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\r\nvar CubeMapShadowMapper_1 = require(\"../materials/shadowmappers/CubeMapShadowMapper\");\r\nvar PointLight = (function (_super) {\r\n    __extends(PointLight, _super);\r\n    function PointLight() {\r\n        _super.call(this);\r\n        this._pRadius = 90000;\r\n        this._pFallOff = 100000;\r\n        this._pIsEntity = true;\r\n        this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\r\n        //default bounds type\r\n        this._boundsType = BoundsType_1.BoundsType.SPHERE;\r\n    }\r\n    Object.defineProperty(PointLight.prototype, \"assetType\", {\r\n        get: function () {\r\n            return PointLight.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PointLight.prototype.pCreateShadowMapper = function () {\r\n        return new CubeMapShadowMapper_1.CubeMapShadowMapper();\r\n    };\r\n    Object.defineProperty(PointLight.prototype, \"radius\", {\r\n        get: function () {\r\n            return this._pRadius;\r\n        },\r\n        set: function (value) {\r\n            this._pRadius = value;\r\n            if (this._pRadius < 0) {\r\n                this._pRadius = 0;\r\n            }\r\n            else if (this._pRadius > this._pFallOff) {\r\n                this._pFallOff = this._pRadius;\r\n                this._pInvalidateBounds();\r\n            }\r\n            this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PointLight.prototype.iFallOffFactor = function () {\r\n        return this._pFallOffFactor;\r\n    };\r\n    Object.defineProperty(PointLight.prototype, \"fallOff\", {\r\n        get: function () {\r\n            return this._pFallOff;\r\n        },\r\n        set: function (value) {\r\n            this._pFallOff = value;\r\n            if (this._pFallOff < 0)\r\n                this._pFallOff = 0;\r\n            if (this._pFallOff < this._pRadius)\r\n                this._pRadius = this._pFallOff;\r\n            this._pFallOffFactor = 1 / (this._pFallOff * this._pFallOff - this._pRadius * this._pRadius);\r\n            this._pInvalidateBounds();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PointLight.prototype._pUpdateSphereBounds = function () {\r\n        _super.prototype._pUpdateSphereBounds.call(this);\r\n        this._pSphereBounds.radius = this._pFallOff;\r\n    };\r\n    PointLight.prototype.iGetObjectProjectionMatrix = function (entity, cameraTransform, target) {\r\n        if (target === void 0) { target = null; }\r\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        var m = new Matrix3D_1.Matrix3D();\r\n        // todo: do not use lookAt on Light\r\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\r\n        m.append(this._pParent.inverseSceneTransform);\r\n        this.lookAt(m.position);\r\n        m.copyFrom(entity.getRenderSceneTransform(cameraTransform));\r\n        m.append(this.inverseSceneTransform);\r\n        var box = entity.getBox();\r\n        var v1 = m.deltaTransformVector(new Vector3D_1.Vector3D(box.left, box.bottom, box.front));\r\n        var v2 = m.deltaTransformVector(new Vector3D_1.Vector3D(box.right, box.top, box.back));\r\n        var d1 = v1.x * v1.x + v1.y * v1.y + v1.z * v1.z;\r\n        var d2 = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;\r\n        var d = Math.sqrt(d1 > d2 ? d1 : d2);\r\n        var zMin;\r\n        var zMax;\r\n        var z = m.rawData[14];\r\n        zMin = z - d;\r\n        zMax = z + d;\r\n        raw[5] = raw[0] = zMin / d;\r\n        raw[10] = zMax / (zMax - zMin);\r\n        raw[11] = 1;\r\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n        raw[14] = -zMin * raw[10];\r\n        if (!target)\r\n            target = new Matrix3D_1.Matrix3D();\r\n        target.copyRawDataFrom(raw);\r\n        target.prepend(m);\r\n        return target;\r\n    };\r\n    PointLight.assetType = \"[light PointLight]\";\r\n    return PointLight;\r\n}(LightBase_1.LightBase));\r\nexports.PointLight = PointLight;\r\n},{\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"../materials/shadowmappers/CubeMapShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/Scene\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\r\nvar BasicPartition_1 = require(\"../partition/BasicPartition\");\r\nvar Scene = (function (_super) {\r\n    __extends(Scene, _super);\r\n    function Scene(partition) {\r\n        if (partition === void 0) { partition = null; }\r\n        _super.call(this);\r\n        this._expandedPartitions = new Array();\r\n        this._partitions = new Array();\r\n        this._iCollectionMark = 0;\r\n        this.partition = partition || new BasicPartition_1.BasicPartition();\r\n        this._iIsRoot = true;\r\n        this._pScene = this;\r\n    }\r\n    Scene.prototype.traversePartitions = function (traverser) {\r\n        var i = 0;\r\n        var len = this._partitions.length;\r\n        while (i < len)\r\n            this._partitions[i++].traverse(traverser);\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    Scene.prototype._iRegisterPartition = function (partition) {\r\n        this._expandedPartitions.push(partition);\r\n        //ensure duplicates are not found in partitions array\r\n        if (this._partitions.indexOf(partition) == -1)\r\n            this._partitions.push(partition);\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    Scene.prototype._iUnregisterPartition = function (partition) {\r\n        this._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n        //if no more partition references found, remove from partitions array\r\n        if (this._expandedPartitions.indexOf(partition) == -1)\r\n            this._partitions.splice(this._partitions.indexOf(partition), 1);\r\n    };\r\n    return Scene;\r\n}(DisplayObjectContainer_1.DisplayObjectContainer));\r\nexports.Scene = Scene;\r\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../partition/BasicPartition\":\"awayjs-display/lib/partition/BasicPartition\"}],\"awayjs-display/lib/display/Shape\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\r\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\r\nvar Graphics_1 = require(\"../graphics/Graphics\");\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Shape class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Shape object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Shape objects that contain the same graphics.\r\n * However, a Shape object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nvar Shape = (function (_super) {\r\n    __extends(Shape, _super);\r\n    /**\r\n     * Create a new Shape object.\r\n     *\r\n     * @param material    [optional]        The material with which to render the Shape.\r\n     */\r\n    function Shape(material) {\r\n        var _this = this;\r\n        if (material === void 0) { material = null; }\r\n        _super.call(this);\r\n        //temp point used in hit testing\r\n        this._tempPoint = new Point_1.Point();\r\n        this._onGraphicsInvalidateDelegate = function (event) { return _this._onGraphicsInvalidate(event); };\r\n        this._graphics = new Graphics_1.Graphics(); //unique graphics object for each Sprite\r\n        this._graphics.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\r\n        this.material = material;\r\n    }\r\n    Object.defineProperty(Shape.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return Shape.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Shape.prototype, \"graphics\", {\r\n        /**\r\n         * Specifies the Graphics object belonging to this Shape object, where\r\n         * drawing commands can occur.\r\n         */\r\n        get: function () {\r\n            if (this._iSourcePrefab)\r\n                this._iSourcePrefab._iValidate();\r\n            return this._graphics;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Shape.prototype, \"animator\", {\r\n        /**\r\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\r\n         */\r\n        get: function () {\r\n            return this._graphics.animator;\r\n        },\r\n        set: function (value) {\r\n            if (this._graphics.animator)\r\n                this._graphics.animator.removeOwner(this);\r\n            this._graphics.animator = value;\r\n            if (this._graphics.animator)\r\n                this._graphics.animator.addOwner(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Shape.prototype, \"material\", {\r\n        /**\r\n         * The material with which to render the Shape.\r\n         */\r\n        get: function () {\r\n            return this._graphics.material;\r\n        },\r\n        set: function (value) {\r\n            this._graphics.material = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Shape.prototype, \"style\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._graphics.style;\r\n        },\r\n        set: function (value) {\r\n            this._graphics.style = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    Shape.prototype.bakeTransformations = function () {\r\n        this._graphics.applyTransformation(this.transform.matrix3D);\r\n        this.transform.clearMatrix3D();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Shape.prototype.dispose = function () {\r\n        this.disposeValues();\r\n        Shape._shapes.push(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Shape.prototype.disposeValues = function () {\r\n        _super.prototype.disposeValues.call(this);\r\n        this._graphics.dispose();\r\n    };\r\n    /**\r\n     * Clones this Shape instance along with all it's children, while re-using the same\r\n     * material, graphics and animation set. The returned result will be a copy of this shape,\r\n     * containing copies of all of it's children.\r\n     *\r\n     * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n     * graphics, and material. Properties that are cloned or created anew for the copy\r\n     * include subShapees, children of the shape, and the animator.\r\n     *\r\n     * If you want to copy just the shape, reusing it's graphics and material while not\r\n     * cloning it's children, the simplest way is to create a new shape manually:\r\n     *\r\n     * <code>\r\n     * var clone : Shape = new Shape(original.graphics, original.material);\r\n     * </code>\r\n     */\r\n    Shape.prototype.clone = function () {\r\n        var newInstance = (Shape._shapes.length) ? Shape._shapes.pop() : new Shape();\r\n        this.copyTo(newInstance);\r\n        return newInstance;\r\n    };\r\n    Shape.prototype.copyTo = function (shape) {\r\n        _super.prototype.copyTo.call(this, shape);\r\n        this._graphics.copyTo(shape.graphics);\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @protected\r\n     */\r\n    Shape.prototype._pUpdateBoxBounds = function () {\r\n        _super.prototype._pUpdateBoxBounds.call(this);\r\n        this._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\r\n    };\r\n    Shape.prototype._pUpdateSphereBounds = function () {\r\n        _super.prototype._pUpdateSphereBounds.call(this);\r\n        var box = this.getBox();\r\n        if (!this._center)\r\n            this._center = new Vector3D_1.Vector3D();\r\n        this._center.x = box.x + box.width / 2;\r\n        this._center.y = box.y + box.height / 2;\r\n        this._center.z = box.z + box.depth / 2;\r\n        this._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @private\r\n     */\r\n    Shape.prototype._onGraphicsInvalidate = function (event) {\r\n        if (this._pIsEntity != Boolean(this._graphics.count)) {\r\n            if (this._pImplicitPartition)\r\n                this._pImplicitPartition._iUnregisterEntity(this);\r\n            this._pIsEntity = Boolean(this._graphics.count);\r\n            if (this._pImplicitPartition)\r\n                this._pImplicitPartition._iRegisterEntity(this);\r\n        }\r\n        this._pInvalidateBounds();\r\n    };\r\n    /**\r\n     *\r\n     * @param renderer\r\n     *\r\n     * @internal\r\n     */\r\n    Shape.prototype._acceptTraverser = function (traverser) {\r\n        this.graphics.acceptTraverser(traverser);\r\n    };\r\n    Shape.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\r\n        if (this._graphics.count) {\r\n            this._tempPoint.setTo(x, y);\r\n            var local = this.globalToLocal(this._tempPoint, this._tempPoint);\r\n            var box;\r\n            //early out for box test\r\n            if (!(box = this.getBox()).contains(local.x, local.y, 0))\r\n                return false;\r\n            //early out for non-shape tests\r\n            if (!shapeFlag)\r\n                return true;\r\n            //ok do the graphics thing\r\n            if (this._graphics._hitTestPointInternal(local.x, local.y))\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    Shape.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        this._graphics.clear();\r\n    };\r\n    Shape._shapes = new Array();\r\n    Shape.assetType = \"[asset Shape]\";\r\n    return Shape;\r\n}(DisplayObject_1.DisplayObject));\r\nexports.Shape = Shape;\r\n},{\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/Skybox\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\r\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\r\nvar DisplayObject_1 = require(\"../display/DisplayObject\");\r\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\r\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\r\nvar SurfaceEvent_1 = require(\"../events/SurfaceEvent\");\r\nvar SingleCubeTexture_1 = require(\"../textures/SingleCubeTexture\");\r\nvar Style_1 = require(\"../base/Style\");\r\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nvar Skybox = (function (_super) {\r\n    __extends(Skybox, _super);\r\n    /**\r\n     * Create a new Skybox object.\r\n     *\r\n     * @param material\tThe material with which to render the Skybox.\r\n     */\r\n    function Skybox(image) {\r\n        var _this = this;\r\n        if (image === void 0) { image = null; }\r\n        _super.call(this);\r\n        this._textures = new Array();\r\n        this._pAlphaThreshold = 0;\r\n        this._pBlendMode = BlendMode_1.BlendMode.NORMAL;\r\n        this._curves = false;\r\n        this._imageRect = false;\r\n        this._style = new Style_1.Style();\r\n        this._onTextureInvalidateDelegate = function (event) { return _this.onTextureInvalidate(event); };\r\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\r\n        this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n        this._pIsEntity = true;\r\n        this._owners = new Array(this);\r\n        this._style.image = image;\r\n        this.texture = new SingleCubeTexture_1.SingleCubeTexture();\r\n        //default bounds type\r\n        this._boundsType = BoundsType_1.BoundsType.NULL;\r\n    }\r\n    Object.defineProperty(Skybox.prototype, \"alphaThreshold\", {\r\n        /**\r\n         * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n         * invisible or entirely opaque, often used with textures for foliage, etc.\r\n         * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n         */\r\n        get: function () {\r\n            return this._pAlphaThreshold;\r\n        },\r\n        set: function (value) {\r\n            if (value < 0)\r\n                value = 0;\r\n            else if (value > 1)\r\n                value = 1;\r\n            if (this._pAlphaThreshold == value)\r\n                return;\r\n            this._pAlphaThreshold = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Skybox.prototype, \"curves\", {\r\n        /**\r\n         * Indicates whether skybox should use curves. Defaults to false.\r\n         */\r\n        get: function () {\r\n            return this._curves;\r\n        },\r\n        set: function (value) {\r\n            if (this._curves == value)\r\n                return;\r\n            this._curves = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Skybox.prototype, \"imageRect\", {\r\n        /**\r\n         * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\r\n         */\r\n        get: function () {\r\n            return this._imageRect;\r\n        },\r\n        set: function (value) {\r\n            if (this._imageRect == value)\r\n                return;\r\n            this._imageRect = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Skybox.prototype, \"lightPicker\", {\r\n        /**\r\n         * The light picker used by the material to provide lights to the material if it supports lighting.\r\n         *\r\n         * @see LightPickerBase\r\n         * @see StaticLightPicker\r\n         */\r\n        get: function () {\r\n            return this._pLightPicker;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Skybox.prototype, \"animationSet\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._animationSet;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Skybox.prototype, \"blendMode\", {\r\n        /**\r\n         * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n         * <ul>\r\n         * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n         * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n         * <li>BlendMode.MULTIPLY</li>\r\n         * <li>BlendMode.ADD</li>\r\n         * <li>BlendMode.ALPHA</li>\r\n         * </ul>\r\n         */\r\n        get: function () {\r\n            return this._pBlendMode;\r\n        },\r\n        set: function (value) {\r\n            if (this._pBlendMode == value)\r\n                return;\r\n            this._pBlendMode = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Skybox.prototype, \"iOwners\", {\r\n        /**\r\n         * A list of the IRenderables that use this material\r\n         *\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this._owners;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Skybox.prototype, \"animator\", {\r\n        get: function () {\r\n            return this._animator;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Skybox.prototype, \"texture\", {\r\n        /**\r\n        * The cube texture to use as the skybox.\r\n        */\r\n        get: function () {\r\n            return this._texture;\r\n        },\r\n        set: function (value) {\r\n            if (this._texture == value)\r\n                return;\r\n            if (this._texture)\r\n                this.removeTexture(this._texture);\r\n            this._texture = value;\r\n            if (this._texture)\r\n                this.addTexture(this._texture);\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Skybox.prototype.getNumTextures = function () {\r\n        return this._textures.length;\r\n    };\r\n    Skybox.prototype.getTextureAt = function (index) {\r\n        return this._textures[index];\r\n    };\r\n    Object.defineProperty(Skybox.prototype, \"style\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._style;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Skybox.prototype, \"assetType\", {\r\n        get: function () {\r\n            return Skybox.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n     *\r\n     * @private\r\n     */\r\n    Skybox.prototype.invalidatePasses = function () {\r\n        this.dispatchEvent(new SurfaceEvent_1.SurfaceEvent(SurfaceEvent_1.SurfaceEvent.INVALIDATE_PASSES, this));\r\n    };\r\n    Skybox.prototype.invalidateElements = function () {\r\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_ELEMENTS, this));\r\n    };\r\n    Skybox.prototype.invalidateSurface = function () {\r\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_SURFACE, this));\r\n    };\r\n    Skybox.prototype.addTexture = function (texture) {\r\n        this._textures.push(texture);\r\n        texture.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n        this.onTextureInvalidate();\r\n    };\r\n    Skybox.prototype.removeTexture = function (texture) {\r\n        this._textures.splice(this._textures.indexOf(texture), 1);\r\n        texture.removeEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n        this.onTextureInvalidate();\r\n    };\r\n    Skybox.prototype.onTextureInvalidate = function (event) {\r\n        if (event === void 0) { event = null; }\r\n        this.invalidate();\r\n    };\r\n    Skybox.prototype._onInvalidateProperties = function (event) {\r\n        this.invalidatePasses();\r\n    };\r\n    Skybox.prototype._acceptTraverser = function (traverser) {\r\n        traverser.applyRenderable(this);\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @param shortestCollisionDistance\r\n     * @returns {boolean}\r\n     *\r\n     * @internal\r\n     */\r\n    Skybox.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\r\n        return false;\r\n    };\r\n    Skybox.assetType = \"[asset Skybox]\";\r\n    return Skybox;\r\n}(DisplayObject_1.DisplayObject));\r\nexports.Skybox = Skybox;\r\n},{\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"../textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined}],\"awayjs-display/lib/display/Sprite\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\r\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar Graphics_1 = require(\"../graphics/Graphics\");\r\nvar DisplayObjectContainer_1 = require(\"../display/DisplayObjectContainer\");\r\n/**\r\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\r\n * of the graphics to be assigned different materials.\r\n */\r\nvar Sprite = (function (_super) {\r\n    __extends(Sprite, _super);\r\n    /**\r\n     * Create a new Sprite object.\r\n     *\r\n     * @param material    [optional]        The material with which to render the Sprite.\r\n     */\r\n    function Sprite(material) {\r\n        var _this = this;\r\n        if (material === void 0) { material = null; }\r\n        _super.call(this);\r\n        //temp point used in hit testing\r\n        this._tempPoint = new Point_1.Point();\r\n        this._onGraphicsInvalidateDelegate = function (event) { return _this._onGraphicsInvalidate(event); };\r\n        this._graphics = new Graphics_1.Graphics(); //unique graphics object for each Sprite\r\n        this._graphics.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\r\n        this.material = material;\r\n    }\r\n    Object.defineProperty(Sprite.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return Sprite.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"graphics\", {\r\n        /**\r\n         * Specifies the Graphics object belonging to this Sprite object, where\r\n         * drawing commands can occur.\r\n         */\r\n        get: function () {\r\n            if (this._iSourcePrefab)\r\n                this._iSourcePrefab._iValidate();\r\n            return this._graphics;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"animator\", {\r\n        /**\r\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\r\n         */\r\n        get: function () {\r\n            return this._graphics.animator;\r\n        },\r\n        set: function (value) {\r\n            if (this._graphics.animator)\r\n                this._graphics.animator.removeOwner(this);\r\n            this._graphics.animator = value;\r\n            if (this._graphics.animator)\r\n                this._graphics.animator.addOwner(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"material\", {\r\n        /**\r\n         * The material with which to render the Sprite.\r\n         */\r\n        get: function () {\r\n            return this._graphics.material;\r\n        },\r\n        set: function (value) {\r\n            this._graphics.material = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"style\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._graphics.style;\r\n        },\r\n        set: function (value) {\r\n            this._graphics.style = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    Sprite.prototype.bakeTransformations = function () {\r\n        this._graphics.applyTransformation(this.transform.matrix3D);\r\n        this.transform.clearMatrix3D();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Sprite.prototype.dispose = function () {\r\n        this.disposeValues();\r\n        Sprite._sprites.push(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Sprite.prototype.disposeValues = function () {\r\n        _super.prototype.disposeValues.call(this);\r\n        this._graphics.dispose();\r\n    };\r\n    /**\r\n     * Clones this Sprite instance along with all it's children, while re-using the same\r\n     * material, graphics and animation set. The returned result will be a copy of this sprite,\r\n     * containing copies of all of it's children.\r\n     *\r\n     * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n     * graphics, and material. Properties that are cloned or created anew for the copy\r\n     * include subSpritees, children of the sprite, and the animator.\r\n     *\r\n     * If you want to copy just the sprite, reusing it's graphics and material while not\r\n     * cloning it's children, the simplest way is to create a new sprite manually:\r\n     *\r\n     * <code>\r\n     * var clone : Sprite = new Sprite(original.graphics, original.material);\r\n     * </code>\r\n     */\r\n    Sprite.prototype.clone = function () {\r\n        var newInstance = (Sprite._sprites.length) ? Sprite._sprites.pop() : new Sprite();\r\n        this.copyTo(newInstance);\r\n        return newInstance;\r\n    };\r\n    Sprite.prototype.copyTo = function (sprite) {\r\n        _super.prototype.copyTo.call(this, sprite);\r\n        this._graphics.copyTo(sprite.graphics);\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @protected\r\n     */\r\n    Sprite.prototype._pUpdateBoxBounds = function () {\r\n        _super.prototype._pUpdateBoxBounds.call(this);\r\n        this._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\r\n    };\r\n    Sprite.prototype._pUpdateSphereBounds = function () {\r\n        _super.prototype._pUpdateSphereBounds.call(this);\r\n        var box = this.getBox();\r\n        if (!this._center)\r\n            this._center = new Vector3D_1.Vector3D();\r\n        this._center.x = box.x + box.width / 2;\r\n        this._center.y = box.y + box.height / 2;\r\n        this._center.z = box.z + box.depth / 2;\r\n        this._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @private\r\n     */\r\n    Sprite.prototype._onGraphicsInvalidate = function (event) {\r\n        if (this._pIsEntity != Boolean(this._graphics.count)) {\r\n            if (this._pImplicitPartition)\r\n                this._pImplicitPartition._iUnregisterEntity(this);\r\n            this._pIsEntity = Boolean(this._graphics.count);\r\n            if (this._pImplicitPartition)\r\n                this._pImplicitPartition._iRegisterEntity(this);\r\n        }\r\n        this._pInvalidateBounds();\r\n    };\r\n    /**\r\n     *\r\n     * @param renderer\r\n     *\r\n     * @internal\r\n     */\r\n    Sprite.prototype._acceptTraverser = function (traverser) {\r\n        this.graphics.acceptTraverser(traverser);\r\n    };\r\n    Sprite.prototype._hitTestPointInternal = function (x, y, shapeFlag, masksFlag) {\r\n        if (this._graphics.count) {\r\n            this._tempPoint.setTo(x, y);\r\n            var local = this.globalToLocal(this._tempPoint, this._tempPoint);\r\n            var box;\r\n            //early out for box test\r\n            if (!(box = this.getBox()).contains(local.x, local.y, 0))\r\n                return false;\r\n            //early out for non-shape tests\r\n            if (!shapeFlag)\r\n                return true;\r\n            //ok do the graphics thing\r\n            if (this._graphics._hitTestPointInternal(local.x, local.y))\r\n                return true;\r\n        }\r\n        return _super.prototype._hitTestPointInternal.call(this, x, y, shapeFlag, masksFlag);\r\n    };\r\n    Sprite.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        this._graphics.clear();\r\n    };\r\n    Sprite._sprites = new Array();\r\n    Sprite.assetType = \"[asset Sprite]\";\r\n    return Sprite;\r\n}(DisplayObjectContainer_1.DisplayObjectContainer));\r\nexports.Sprite = Sprite;\r\n},{\"../display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"../graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/display/TextFieldMultiRender\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\r\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nvar Matrix_1 = require(\"awayjs-core/lib/geom/Matrix\");\r\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\r\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\r\nvar Style_1 = require(\"../base/Style\");\r\nvar TextFieldType_1 = require(\"../text/TextFieldType\");\r\nvar Sprite_1 = require(\"../display/Sprite\");\r\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\r\nvar BitmapFontTable_1 = require(\"../text/BitmapFontTable\");\r\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\r\nvar TesselatedFontTable_1 = require(\"../text/TesselatedFontTable\");\r\nvar BasicMaterial_1 = require(\"../materials/BasicMaterial\");\r\n/**\r\n * The TextFieldMultiRender class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextFieldMultiRender class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextFieldMultiRender\r\n * class to manipulate it with ActionScript. TextFieldMultiRender instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextFieldMultiRender()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextFieldMultiRender class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextFieldMultiRender objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextFieldMultiRender.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n *\r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextFieldMultiRender object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nvar TextFieldMultiRender = (function (_super) {\r\n    __extends(TextFieldMultiRender, _super);\r\n    /**\r\n     * Creates a new TextFieldMultiRender instance. After you create the TextFieldMultiRender instance,\r\n     * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n     * the parent DisplayObjectContainer object to add the TextFieldMultiRender instance to\r\n     * the display list.\r\n     *\r\n     * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n     */\r\n    function TextFieldMultiRender() {\r\n        _super.call(this);\r\n        this._explicitFormats = new Array();\r\n        this._explicitFormatsRanges = new Array();\r\n        this._line_indices = new Array();\r\n        this._text = \"\";\r\n        this.type = TextFieldType_1.TextFieldType.STATIC;\r\n    }\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return TextFieldMultiRender.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextFieldMultiRender.prototype.setFormatForRange = function (start, end, format) {\r\n        var i = 0;\r\n        var len = this._explicitFormats.length;\r\n        var is_added = false;\r\n        var new_formatslist = new Array();\r\n        var new_formatsranges = new Array();\r\n        var new_cnt = 0;\r\n        for (i = 0; i < len; i++) {\r\n            if (!is_added) {\r\n                if (this._explicitFormatsRanges[(i * 2)] > start) {\r\n                    is_added = true;\r\n                    new_formatslist[new_cnt] = format;\r\n                    new_formatsranges[new_cnt * 2] = start;\r\n                    new_formatsranges[(new_cnt * 2) + 1] = end;\r\n                    new_cnt++;\r\n                }\r\n            }\r\n            new_formatslist[new_cnt] = this._explicitFormats[i];\r\n            new_formatsranges[new_cnt * 2] = this._explicitFormatsRanges[(i * 2)];\r\n            new_formatsranges[(new_cnt * 2) + 1] = this._explicitFormatsRanges[(i * 2) + 1];\r\n            new_cnt++;\r\n        }\r\n        this._explicitFormats = new_formatslist;\r\n        this._explicitFormatsRanges = new_formatsranges;\r\n    };\r\n    TextFieldMultiRender.prototype.getFormatAtChar = function (char_pos) {\r\n        var i = 0;\r\n        var len = this._explicitFormats.length;\r\n        var active_format = this.textFormat;\r\n        for (i = 0; i < len; i++) {\r\n            if ((this._explicitFormatsRanges[(i * 2)] <= char_pos) && (this._explicitFormatsRanges[(i * 2) + 1] >= char_pos)) {\r\n                active_format = this._explicitFormats[i];\r\n            }\r\n        }\r\n        return active_format;\r\n    };\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"bottomScrollV\", {\r\n        /**\r\n         * An integer(1-based index) that indicates the bottommost line that is\r\n         * currently visible in the specified text field. Think of the text field as\r\n         * a window onto a block of text. The <code>scrollV</code> property is the\r\n         * 1-based index of the topmost visible line in the window.\r\n         *\r\n         * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n         * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n         */\r\n        get: function () {\r\n            return this._bottomScrollV;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"caretIndex\", {\r\n        /**\r\n         * The index of the insertion point(caret) position. If no insertion point\r\n         * is displayed, the value is the position the insertion point would be if\r\n         * you restored focus to the field(typically where the insertion point last\r\n         * was, or 0 if the field has not had focus).\r\n         *\r\n         * <p>Selection span indexes are zero-based(for example, the first position\r\n         * is 0, the second position is 1, and so on).</p>\r\n         */\r\n        get: function () {\r\n            return this._caretIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"length\", {\r\n        /**\r\n         * The number of characters in a text field. A character such as tab\r\n         * (<code>\\t</code>) counts as one character.\r\n         */\r\n        get: function () {\r\n            return this._length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The maximum value of <code>scrollH</code>.\r\n     */\r\n    TextFieldMultiRender.prototype.maxScrollH = function () {\r\n        return this._maxScrollH;\r\n    };\r\n    /**\r\n     * The maximum value of <code>scrollV</code>.\r\n     */\r\n    TextFieldMultiRender.prototype.maxScrollV = function () {\r\n        return this._maxScrollV;\r\n    };\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"numLines\", {\r\n        /**\r\n         * Defines the number of text lines in a multiline text field. If\r\n         * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n         * lines increases when text wraps.\r\n         */\r\n        get: function () {\r\n            return this._numLines;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"selectionBeginIndex\", {\r\n        /**\r\n         * The zero-based character index value of the first character in the current\r\n         * selection. For example, the first character is 0, the second character is\r\n         * 1, and so on. If no text is selected, this property is the value of\r\n         * <code>caretIndex</code>.\r\n         */\r\n        get: function () {\r\n            return this._selectionBeginIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"selectionEndIndex\", {\r\n        /**\r\n         * The zero-based character index value of the last character in the current\r\n         * selection. For example, the first character is 0, the second character is\r\n         * 1, and so on. If no text is selected, this property is the value of\r\n         * <code>caretIndex</code>.\r\n         */\r\n        get: function () {\r\n            return this._selectionEndIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"text\", {\r\n        /**\r\n         * A string that is the current text in the text field. Lines are separated\r\n         * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n         * property contains unformatted text in the text field, without HTML tags.\r\n         *\r\n         * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n         * property.</p>\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (value) {\r\n            value = value.toString();\r\n            if (this._text == value)\r\n                return;\r\n            this._text = value;\r\n            this._textGraphicsDirty = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"textFormat\", {\r\n        get: function () {\r\n            return this._textFormat;\r\n        },\r\n        set: function (value) {\r\n            if (this._textFormat == value)\r\n                return;\r\n            this._textFormat = value;\r\n            this._textGraphicsDirty = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"graphics\", {\r\n        /**\r\n         * The graphics used by the sprite that provides it with its shape.\r\n         */\r\n        get: function () {\r\n            if (this._textGraphicsDirty)\r\n                this.reConstruct();\r\n            return this._graphics;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"textColor\", {\r\n        get: function () {\r\n            return this._textColor;\r\n        },\r\n        set: function (value) {\r\n            this._textColor = value;\r\n            if (!this.transform.colorTransform)\r\n                this.transform.colorTransform = new ColorTransform_1.ColorTransform();\r\n            this.transform.colorTransform.color = value;\r\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"textInteractionMode\", {\r\n        /**\r\n         * The interaction mode property, Default value is\r\n         * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n         * that the text can be scrolled but not selected. One can switch to the\r\n         * selectable mode through the in-built context menu on the text field. On\r\n         * Desktop, the normal mode implies that the text is in scrollable as well as\r\n         * selection mode.\r\n         */\r\n        get: function () {\r\n            return this._textInteractionMode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"textWidth\", {\r\n        /**\r\n         * The width of the text in pixels.\r\n         */\r\n        get: function () {\r\n            return this._textWidth;\r\n        },\r\n        set: function (value) {\r\n            this._textWidth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"textHeight\", {\r\n        /**\r\n         * The width of the text in pixels.\r\n         */\r\n        get: function () {\r\n            return this._textHeight;\r\n        },\r\n        set: function (value) {\r\n            this._textHeight = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldMultiRender.prototype, \"isEntity\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return true; //TODO do this better\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextFieldMultiRender.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        if (this._textElements)\r\n            this._textElements.clear();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TextFieldMultiRender.prototype.dispose = function () {\r\n        this.disposeValues();\r\n        TextFieldMultiRender._textFields.push(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TextFieldMultiRender.prototype.disposeValues = function () {\r\n        _super.prototype.disposeValues.call(this);\r\n        this._textFormat = null;\r\n        this._textGraphic = null;\r\n        if (this._textElements) {\r\n            this._textElements.dispose();\r\n            this._textElements = null;\r\n        }\r\n    };\r\n    /**\r\n     * Reconstructs the Graphics for this Text-field.\r\n     */\r\n    TextFieldMultiRender.prototype.reConstruct = function (useCanvas2dhack) {\r\n        if (useCanvas2dhack === void 0) { useCanvas2dhack = false; }\r\n        this._textGraphicsDirty = false;\r\n        if (this._textFormat == null)\r\n            return;\r\n        if (this._textGraphic) {\r\n            this._textGraphic.dispose();\r\n            this._textGraphic = null;\r\n            this._textElements.clear();\r\n            this._textElements.dispose();\r\n            this._textElements = null;\r\n        }\r\n        if (this._text == \"\")\r\n            return;\r\n        var activeFormat = null;\r\n        var newFormat = null;\r\n        // split text into lines\r\n        // todo: split at all sorts of linebreaks (incl escaped linebreaks like we do right now)\r\n        var textlines = this.text.toString().split(\"\\\\n\");\r\n        var maxlineWidth = this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\r\n        var tl_char_codes = [];\r\n        var tl_char_widths = [];\r\n        var tl_char_formats = [];\r\n        var tl_width = [];\r\n        var tl_height = [];\r\n        var tl_cnt = 0;\r\n        var w = 0;\r\n        var c = 0;\r\n        var tl = 0;\r\n        var words;\r\n        var char_cnt = 0;\r\n        var char_width = 0;\r\n        var numVertices = 0;\r\n        this._line_indices = [];\r\n        // sort all chars into final lines\r\n        for (tl = 0; tl < textlines.length; tl++) {\r\n            console.log(\"textline nr: \" + tl + \" : \" + textlines[tl]);\r\n            this._line_indices[tl_cnt] = char_cnt;\r\n            tl_char_codes[tl_cnt] = [];\r\n            tl_char_widths[tl_cnt] = [];\r\n            tl_char_formats[tl_cnt] = [];\r\n            tl_width[tl_cnt] = 0;\r\n            tl_height[tl_cnt] = 0;\r\n            tl_cnt++;\r\n            words = textlines[tl].split(\" \");\r\n            for (w = 0; w < words.length; w++) {\r\n                var word_width = 0;\r\n                var char_widths = [];\r\n                var char_formats = [];\r\n                var max_word_height = 0;\r\n                for (c = 0; c < words[w].length; c++) {\r\n                    newFormat = this.getFormatAtChar(char_cnt);\r\n                    if (newFormat != activeFormat) {\r\n                        activeFormat = newFormat;\r\n                        activeFormat.font_table.initFontSize(activeFormat.size);\r\n                    }\r\n                    char_formats[c] = activeFormat;\r\n                    var lineHeight = activeFormat.font_table.getLineHeight();\r\n                    if (lineHeight > max_word_height)\r\n                        max_word_height = lineHeight;\r\n                    char_width = activeFormat.font_table.getCharWidth(words[w].charCodeAt(c).toString());\r\n                    numVertices += activeFormat.font_table.getCharVertCnt(words[w].charCodeAt(c).toString());\r\n                    char_widths[c] = char_width;\r\n                    word_width += char_width;\r\n                    char_cnt++;\r\n                }\r\n                // word fits into line, just add it to the last line\r\n                if ((tl_width[tl_cnt - 1] + word_width) <= maxlineWidth) {\r\n                    if (tl_width[tl_cnt - 1] != 0) {\r\n                        // there is already a word in this line. we want to add a space\r\n                        tl_char_codes[tl_cnt - 1].push(32);\r\n                        //todo: get correct format\r\n                        tl_char_widths[tl_cnt - 1].push(activeFormat.font_table.getCharWidth(\"32\"));\r\n                        tl_char_formats[tl_cnt - 1].push(activeFormat);\r\n                        tl_width[tl_cnt - 1] += activeFormat.font_table.getCharWidth(\"32\");\r\n                    }\r\n                    for (c = 0; c < words[w].length; c++) {\r\n                        tl_char_codes[tl_cnt - 1].push(words[w].charCodeAt(c));\r\n                        tl_char_widths[tl_cnt - 1].push(char_widths[c]);\r\n                        tl_char_formats[tl_cnt - 1].push(char_formats[c]);\r\n                        tl_width[tl_cnt - 1] += word_width;\r\n                    }\r\n                    if (tl_height[tl_cnt - 1] < max_word_height)\r\n                        tl_height[tl_cnt - 1] = max_word_height;\r\n                }\r\n                else if (tl_width[tl_cnt - 1] == 0) {\r\n                    for (c = 0; c < words[w].length; c++) {\r\n                        tl_char_codes[tl_cnt - 1].push(words[w].charCodeAt(c));\r\n                        tl_char_widths[tl_cnt - 1].push(char_widths[c]);\r\n                        tl_char_formats[tl_cnt - 1].push(char_formats[c]);\r\n                        tl_width[tl_cnt - 1] += word_width;\r\n                    }\r\n                    if (tl_height[tl_cnt - 1] < max_word_height)\r\n                        tl_height[tl_cnt - 1] = max_word_height;\r\n                }\r\n                else {\r\n                    tl_char_codes[tl_cnt] = [];\r\n                    tl_char_widths[tl_cnt] = [];\r\n                    tl_char_formats[tl_cnt] = [];\r\n                    tl_width[tl_cnt] = 0;\r\n                    tl_height[tl_cnt] = 0;\r\n                    tl_cnt++;\r\n                    for (c = 0; c < words[w].length; c++) {\r\n                        tl_char_codes[tl_cnt - 1].push(words[w].charCodeAt(c));\r\n                        tl_char_widths[tl_cnt - 1].push(char_widths[c]);\r\n                        tl_char_formats[tl_cnt - 1].push(char_formats[c]);\r\n                        tl_width[tl_cnt - 1] += word_width;\r\n                    }\r\n                    if (tl_height[tl_cnt - 1] < max_word_height)\r\n                        tl_height[tl_cnt - 1] = max_word_height;\r\n                }\r\n            }\r\n        }\r\n        var tl_startx = [];\r\n        // calculate the final positions of the chars\r\n        for (tl = 0; tl < tl_width.length; tl++) {\r\n            var x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent;\r\n            var justify_addion = 0;\r\n            if (this._textFormat.align == \"center\") {\r\n                x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent + (maxlineWidth - tl_width[tl]) / 2;\r\n            }\r\n            else if (this._textFormat.align == \"justify\") {\r\n            }\r\n            else if (this._textFormat.align == \"right\") {\r\n                x_offset = (this._textWidth - tl_width[tl]) - (2 + this._textFormat.rightMargin);\r\n            }\r\n            tl_startx[tl] = [];\r\n            this.textHeight = 0;\r\n            for (var c = 0; c < tl_char_codes[tl].length; c++) {\r\n                this.textHeight += tl_height[tl];\r\n                tl_startx[tl][c] = x_offset;\r\n                x_offset += tl_char_widths[tl][c];\r\n                // if this is a whitespace, we add the justify additional spacer\r\n                if (tl_char_codes[tl][c] == 32) {\r\n                    x_offset += justify_addion;\r\n                }\r\n            }\r\n        }\r\n        //todo: i tried to use the isAsset() function instead of comparing the strings myself, but this didnt seem to work. need to find out why\r\n        if (this._textFormat.font_table.assetType == TesselatedFontTable_1.TesselatedFontTable.assetType) {\r\n            var tess_fontTable = this._textFormat.font_table;\r\n            var elements;\r\n            var j = 0;\r\n            var k = 0;\r\n            var y_offset = 0;\r\n            var char_scale = 0;\r\n            var vertices = new Float32Array(numVertices * 3);\r\n            for (tl = 0; tl < tl_width.length; tl++) {\r\n                console.log(\"textline nr: \" + tl + \" : \" + tl_char_codes[tl]);\r\n                //console.log(\"tl_width = \"+tl_width[tl]);\r\n                y_offset += tl_height[tl];\r\n                for (var c = 0; c < tl_char_codes[tl].length; c++) {\r\n                    var this_char = tess_fontTable.getChar(tl_char_codes[tl][c].toString());\r\n                    char_scale = tess_fontTable._size_multiply;\r\n                    if (this_char != null) {\r\n                        elements = this_char.elements;\r\n                        if (elements != null) {\r\n                            var buffer = new Float32Array(elements.concatenatedBuffer.buffer);\r\n                            for (var v = 0; v < elements.numVertices; v++) {\r\n                                vertices[j++] = buffer[v * 3] * char_scale + tl_startx[tl][c];\r\n                                vertices[j++] = buffer[v * 3 + 1] * char_scale + y_offset - tl_height[tl];\r\n                                vertices[j++] = buffer[v * 3 + 2];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            var attributesView = new AttributesView_1.AttributesView(Float32Array, 3);\r\n            attributesView.set(vertices);\r\n            var vertexBuffer = attributesView.attributesBuffer;\r\n            attributesView.dispose();\r\n            this._textElements = new TriangleElements_1.TriangleElements(vertexBuffer);\r\n            this._textElements.setPositions(new Float2Attributes_1.Float2Attributes(vertexBuffer));\r\n            this._textElements.setCustomAttributes(\"curves\", new Byte4Attributes_1.Byte4Attributes(vertexBuffer, false));\r\n            this._textGraphic = this._graphics.addGraphic(this._textElements);\r\n            this.material = this._textFormat.material;\r\n            var sampler = new Sampler2D_1.Sampler2D();\r\n            this.style = new Style_1.Style();\r\n            this.style.addSamplerAt(sampler, this.material.getTextureAt(0));\r\n            this.style.uvMatrix = new Matrix_1.Matrix(0, 0, 0, 0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\r\n            this.material.animateUVs = true;\r\n        }\r\n        else if (this._textFormat.font_table.assetType == BitmapFontTable_1.BitmapFontTable.assetType) {\r\n            console.log(\"contruct bitmap text = \" + this._text);\r\n            var bitmap_fontTable = this._textFormat.font_table;\r\n            if (!useCanvas2dhack) {\r\n                var vertices = new Float32Array(numVertices * 7);\r\n                var vert_cnt = 0;\r\n                var y_offset = 0; //2+(tess_fontTable.ascent-tess_fontTable.get_font_em_size())*char_scale;\r\n                for (tl = 0; tl < tl_width.length; tl++) {\r\n                    console.log(\"textline nr: \" + tl + \" : \" + tl_char_codes[tl]);\r\n                    //console.log(\"tl_width = \"+tl_width[tl]);\r\n                    y_offset += tl_height[tl];\r\n                    for (var c = 0; c < tl_char_codes[tl].length; c++) {\r\n                        //console.log(\"tl_char_codes[tl] = \"+tl_char_codes[tl][c]);\r\n                        //console.log(\"tl_startx[tl] = \"+tl_startx[tl][c]);\r\n                        //console.log(\"y_offset = \"+y_offset);\r\n                        //console.log(\"vert_cnt = \"+vert_cnt);\r\n                        var char_data = bitmap_fontTable.getCharData(tl_char_codes[tl][c].toString());\r\n                        console.log(\"char_data = \" + char_data);\r\n                        vertices[vert_cnt++] = tl_startx[tl][c] + char_data[4];\r\n                        vertices[vert_cnt++] = y_offset - tl_height[tl] + char_data[5];\r\n                        vertices[vert_cnt++] = char_data[0];\r\n                        vertices[vert_cnt++] = char_data[1];\r\n                        vertices[vert_cnt++] = tl_startx[tl][c] + tl_char_widths[tl][c] + char_data[4];\r\n                        vertices[vert_cnt++] = y_offset - tl_height[tl] + char_data[5];\r\n                        vertices[vert_cnt++] = char_data[0] + char_data[2];\r\n                        vertices[vert_cnt++] = char_data[1];\r\n                        vertices[vert_cnt++] = tl_startx[tl][c] + tl_char_widths[tl][c] + char_data[4];\r\n                        vertices[vert_cnt++] = y_offset;\r\n                        vertices[vert_cnt++] = char_data[0] + char_data[2];\r\n                        vertices[vert_cnt++] = char_data[1] + char_data[3];\r\n                        vertices[vert_cnt++] = tl_startx[tl][c] + tl_char_widths[tl][c] + char_data[4];\r\n                        vertices[vert_cnt++] = y_offset;\r\n                        vertices[vert_cnt++] = char_data[0] + char_data[2];\r\n                        vertices[vert_cnt++] = char_data[1] + char_data[3];\r\n                        vertices[vert_cnt++] = tl_startx[tl][c] + char_data[4];\r\n                        vertices[vert_cnt++] = y_offset;\r\n                        vertices[vert_cnt++] = char_data[0];\r\n                        vertices[vert_cnt++] = char_data[1] + char_data[3];\r\n                        vertices[vert_cnt++] = tl_startx[tl][c] + char_data[4];\r\n                        vertices[vert_cnt++] = y_offset - tl_height[tl] + char_data[5];\r\n                        vertices[vert_cnt++] = char_data[0];\r\n                        vertices[vert_cnt++] = char_data[1];\r\n                    }\r\n                }\r\n                var attributesView = new AttributesView_1.AttributesView(Float32Array, 4);\r\n                attributesView.set(vertices);\r\n                var vertexBuffer = attributesView.attributesBuffer;\r\n                attributesView.dispose();\r\n                this._textElements = new TriangleElements_1.TriangleElements(vertexBuffer);\r\n                this._textElements.setPositions(new Float2Attributes_1.Float2Attributes(vertexBuffer));\r\n                //this._textElements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\r\n                //this._textElements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\r\n                this._textElements.setUVs(new Float2Attributes_1.Float2Attributes(vertexBuffer));\r\n                this._textGraphic = this._graphics.addGraphic(this._textElements);\r\n                var basic_mat = new BasicMaterial_1.BasicMaterial();\r\n                basic_mat.texture = new Single2DTexture_1.Single2DTexture(bitmap_fontTable.get_page());\r\n                basic_mat.bothSides = true;\r\n                //basic_mat.preserveAlpha = true;\r\n                basic_mat.alphaBlending = true;\r\n                this.material = basic_mat;\r\n            }\r\n            else {\r\n                var canvas = document.getElementById(\"myCanvas\");\r\n                if (canvas == null) {\r\n                    canvas = document.createElement(\"canvas\");\r\n                    canvas.id = \"myCanvas\";\r\n                    document.body.appendChild(canvas);\r\n                }\r\n                var ctx = canvas.getContext(\"2d\");\r\n                ctx.canvas.width = window.innerWidth;\r\n                ctx.canvas.height = window.innerHeight;\r\n                //var transform_mx:Matrix3D=this.transform.matrix3D;\r\n                //ctx.setTransform(transform_mx.a,transform_mx.b,transform_mx.c,transform_mx.d,transform_mx.tx,transform_mx.ty);\r\n                ctx.rect(0, 0, this.textWidth, this.textHeight);\r\n                ctx.fillStyle = \"black\";\r\n                ctx.fill();\r\n                //ctx.drawImage(bitmap_fontTable.get_page().getCanvas(), 50, 50, 200, 200, 0, 0, 100, 100);\r\n                var y_offset = 0; //2+(tess_fontTable.ascent-tess_fontTable.get_font_em_size())*char_scale;\r\n                for (tl = 0; tl < tl_width.length; tl++) {\r\n                    console.log(\"textline nr: \" + tl + \" : \" + tl_char_codes[tl]);\r\n                    //console.log(\"tl_width = \"+tl_width[tl]);\r\n                    y_offset += tl_height[tl];\r\n                    for (var c = 0; c < tl_char_codes[tl].length; c++) {\r\n                        var char_data = bitmap_fontTable.getCharDataCanvas(tl_char_codes[tl][c].toString());\r\n                        ctx.drawImage(bitmap_fontTable.get_page().getCanvas(), char_data[0], char_data[1], char_data[2], char_data[3], tl_startx[tl][c] + char_data[4], y_offset - tl_height[tl] + char_data[5], tl_char_widths[tl][c], tl_height[tl] - char_data[5]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Appends the string specified by the <code>newText</code> parameter to the\r\n     * end of the text of the text field. This method is more efficient than an\r\n     * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n     * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n     * text field that contains a significant amount of content.\r\n     *\r\n     * @param newText The string to append to the existing text.\r\n     */\r\n    TextFieldMultiRender.prototype.appendText = function (newText) {\r\n        this._text += newText;\r\n    };\r\n    /**\r\n     * *tells the Textfield that a paragraph is defined completly.\r\n     * e.g. the textfield will start a new line for future added text.\r\n     */\r\n    TextFieldMultiRender.prototype.closeParagraph = function () {\r\n        //TODO\r\n    };\r\n    /**\r\n     * Returns a rectangle that is the bounding box of the character.\r\n     *\r\n     * @param charIndex The zero-based index value for the character(for\r\n     *                  example, the first position is 0, the second position is\r\n     *                  1, and so on).\r\n     * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n     *         maximum values defining the bounding box of the character.\r\n     */\r\n    TextFieldMultiRender.prototype.getCharBoundaries = function (charIndex) {\r\n        return this._charBoundaries;\r\n    };\r\n    /**\r\n     * Returns the zero-based index value of the character at the point specified\r\n     * by the <code>x</code> and <code>y</code> parameters.\r\n     *\r\n     * @param x The <i>x</i> coordinate of the character.\r\n     * @param y The <i>y</i> coordinate of the character.\r\n     * @return The zero-based index value of the character(for example, the\r\n     *         first position is 0, the second position is 1, and so on). Returns\r\n     *         -1 if the point is not over any character.\r\n     */\r\n    TextFieldMultiRender.prototype.getCharIndexAtPoint = function (x, y) {\r\n        return this._charIndexAtPoint;\r\n    };\r\n    /**\r\n     * Given a character index, returns the index of the first character in the\r\n     * same paragraph.\r\n     *\r\n     * @param charIndex The zero-based index value of the character(for example,\r\n     *                  the first character is 0, the second character is 1, and\r\n     *                  so on).\r\n     * @return The zero-based index value of the first character in the same\r\n     *         paragraph.\r\n     * @throws RangeError The character index specified is out of range.\r\n     */\r\n    TextFieldMultiRender.prototype.getFirstCharInParagraph = function (charIndex /*int*/) {\r\n        return this._firstCharInParagraph;\r\n    };\r\n    /**\r\n     * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n     * image or SWF file that has been added to an HTML-formatted text field by\r\n     * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n     * following format:\r\n     *\r\n     * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n     * 'instanceName' ></code></pre></p>\r\n     *\r\n     * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n     *           of the <code><img></code> tag).\r\n     * @return The display object corresponding to the image or SWF file with the\r\n     *         matching <code>id</code> attribute in the <code><img></code> tag\r\n     *         of the text field. For media loaded from an external source, this\r\n     *         object is a Loader object, and, once loaded, the media object is a\r\n     *         child of that Loader object. For media embedded in the SWF file,\r\n     *         it is the loaded object. If no <code><img></code> tag with the\r\n     *         matching <code>id</code> exists, the method returns\r\n     *         <code>null</code>.\r\n     */\r\n    TextFieldMultiRender.prototype.getImageReference = function (id) {\r\n        return this._imageReference;\r\n    };\r\n    /**\r\n     * Returns the zero-based index value of the line at the point specified by\r\n     * the <code>x</code> and <code>y</code> parameters.\r\n     *\r\n     * @param x The <i>x</i> coordinate of the line.\r\n     * @param y The <i>y</i> coordinate of the line.\r\n     * @return The zero-based index value of the line(for example, the first\r\n     *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n     *         point is not over any line.\r\n     */\r\n    TextFieldMultiRender.prototype.getLineIndexAtPoint = function (x, y) {\r\n        return this._lineIndexAtPoint;\r\n    };\r\n    /**\r\n     * Returns the zero-based index value of the line containing the character\r\n     * specified by the <code>charIndex</code> parameter.\r\n     *\r\n     * @param charIndex The zero-based index value of the character(for example,\r\n     *                  the first character is 0, the second character is 1, and\r\n     *                  so on).\r\n     * @return The zero-based index value of the line.\r\n     * @throws RangeError The character index specified is out of range.\r\n     */\r\n    TextFieldMultiRender.prototype.getLineIndexOfChar = function (charIndex /*int*/) {\r\n        return this._lineIndexOfChar;\r\n    };\r\n    /**\r\n     * Returns the number of characters in a specific text line.\r\n     *\r\n     * @param lineIndex The line number for which you want the length.\r\n     * @return The number of characters in the line.\r\n     * @throws RangeError The line number specified is out of range.\r\n     */\r\n    TextFieldMultiRender.prototype.getLineLength = function (lineIndex /*int*/) {\r\n        return this._lineLength;\r\n    };\r\n    /**\r\n     * Returns metrics information about a given text line.\r\n     *\r\n     * @param lineIndex The line number for which you want metrics information.\r\n     * @return A TextLineMetrics object.\r\n     * @throws RangeError The line number specified is out of range.\r\n     */\r\n    TextFieldMultiRender.prototype.getLineMetrics = function (lineIndex /*int*/) {\r\n        return this._lineMetrics;\r\n    };\r\n    /**\r\n     * Returns the character index of the first character in the line that the\r\n     * <code>lineIndex</code> parameter specifies.\r\n     *\r\n     * @param lineIndex The zero-based index value of the line(for example, the\r\n     *                  first line is 0, the second line is 1, and so on).\r\n     * @return The zero-based index value of the first character in the line.\r\n     * @throws RangeError The line number specified is out of range.\r\n     */\r\n    TextFieldMultiRender.prototype.getLineOffset = function (lineIndex /*int*/) {\r\n        return this._lineOffset;\r\n    };\r\n    /**\r\n     * Returns the text of the line specified by the <code>lineIndex</code>\r\n     * parameter.\r\n     *\r\n     * @param lineIndex The zero-based index value of the line(for example, the\r\n     *                  first line is 0, the second line is 1, and so on).\r\n     * @return The text string contained in the specified line.\r\n     * @throws RangeError The line number specified is out of range.\r\n     */\r\n    TextFieldMultiRender.prototype.getLineText = function (lineIndex /*int*/) {\r\n        return this._lineText;\r\n    };\r\n    /**\r\n     * Given a character index, returns the length of the paragraph containing\r\n     * the given character. The length is relative to the first character in the\r\n     * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n     * the character index passed in.\r\n     *\r\n     * @param charIndex The zero-based index value of the character(for example,\r\n     *                  the first character is 0, the second character is 1, and\r\n     *                  so on).\r\n     * @return Returns the number of characters in the paragraph.\r\n     * @throws RangeError The character index specified is out of range.\r\n     */\r\n    TextFieldMultiRender.prototype.getParagraphLength = function (charIndex /*int*/) {\r\n        return this._paragraphLength;\r\n    };\r\n    /**\r\n     * Returns a TextFormat object that contains formatting information for the\r\n     * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n     * parameters specify. Only properties that are common to the entire text\r\n     * specified are set in the resulting TextFormat object. Any property that is\r\n     * <i>mixed</i>, meaning that it has different values at different points in\r\n     * the text, has a value of <code>null</code>.\r\n     *\r\n     * <p>If you do not specify values for these parameters, this method is\r\n     * applied to all the text in the text field. </p>\r\n     *\r\n     * <p>The following table describes three possible usages:</p>\r\n     *\r\n     * @return The TextFormat object that represents the formatting properties\r\n     *         for the specified text.\r\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n     *                    specified is out of range.\r\n     */\r\n    TextFieldMultiRender.prototype.getTextFormat = function (beginIndex, endIndex) {\r\n        if (beginIndex === void 0) { beginIndex = -1; }\r\n        if (endIndex === void 0) { endIndex = -1; }\r\n        return this._textFormat;\r\n    };\r\n    /**\r\n     * Replaces the current selection with the contents of the <code>value</code>\r\n     * parameter. The text is inserted at the position of the current selection,\r\n     * using the current default character format and default paragraph format.\r\n     * The text is not treated as HTML.\r\n     *\r\n     * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n     * delete text without disrupting the character and paragraph formatting of\r\n     * the rest of the text.</p>\r\n     *\r\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n     * the text field.</p>\r\n     *\r\n     * @param value The string to replace the currently selected text.\r\n     * @throws Error This method cannot be used on a text field with a style\r\n     *               sheet.\r\n     */\r\n    TextFieldMultiRender.prototype.replaceSelectedText = function (value) {\r\n    };\r\n    /**\r\n     * Replaces the range of characters that the <code>beginIndex</code> and\r\n     * <code>endIndex</code> parameters specify with the contents of the\r\n     * <code>newText</code> parameter. As designed, the text from\r\n     * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n     *\r\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n     * the text field.</p>\r\n     *\r\n     * @param beginIndex The zero-based index value for the start position of the\r\n     *                   replacement range.\r\n     * @param endIndex   The zero-based index position of the first character\r\n     *                   after the desired text span.\r\n     * @param newText    The text to use to replace the specified range of\r\n     *                   characters.\r\n     * @throws Error This method cannot be used on a text field with a style\r\n     *               sheet.\r\n     */\r\n    TextFieldMultiRender.prototype.replaceText = function (beginIndex /*int*/, endIndex /*int*/, newText) {\r\n    };\r\n    /**\r\n     * Sets as selected the text designated by the index values of the first and\r\n     * last characters, which are specified with the <code>beginIndex</code> and\r\n     * <code>endIndex</code> parameters. If the two parameter values are the\r\n     * same, this method sets the insertion point, as if you set the\r\n     * <code>caretIndex</code> property.\r\n     *\r\n     * @param beginIndex The zero-based index value of the first character in the\r\n     *                   selection(for example, the first character is 0, the\r\n     *                   second character is 1, and so on).\r\n     * @param endIndex   The zero-based index value of the last character in the\r\n     *                   selection.\r\n     */\r\n    TextFieldMultiRender.prototype.setSelection = function (beginIndex /*int*/, endIndex /*int*/) {\r\n    };\r\n    /**\r\n     * Applies the text formatting that the <code>format</code> parameter\r\n     * specifies to the specified text in a text field. The value of\r\n     * <code>format</code> must be a TextFormat object that specifies the desired\r\n     * text formatting changes. Only the non-null properties of\r\n     * <code>format</code> are applied to the text field. Any property of\r\n     * <code>format</code> that is set to <code>null</code> is not applied. By\r\n     * default, all of the properties of a newly created TextFormat object are\r\n     * set to <code>null</code>.\r\n     *\r\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n     * the text field.</p>\r\n     *\r\n     * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n     * applied to a range of characters or to the entire body of text in a text\r\n     * field. To apply the properties of format to all text in the text field, do\r\n     * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n     * To apply the properties of the format to a range of text, specify values\r\n     * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n     * You can use the <code>length</code> property to determine the index\r\n     * values.</p>\r\n     *\r\n     * <p>The two types of formatting information in a TextFormat object are\r\n     * character level formatting and paragraph level formatting. Each character\r\n     * in a text field can have its own character formatting settings, such as\r\n     * font name, font size, bold, and italic.</p>\r\n     *\r\n     * <p>For paragraphs, the first character of the paragraph is examined for\r\n     * the paragraph formatting settings for the entire paragraph. Examples of\r\n     * paragraph formatting settings are left margin, right margin, and\r\n     * indentation.</p>\r\n     *\r\n     * <p>Any text inserted manually by the user, or replaced by the\r\n     * <code>replaceSelectedText()</code> method, receives the default text field\r\n     * formatting for new text, and not the formatting specified for the text\r\n     * insertion point. To set the default formatting for new text, use\r\n     * <code>defaultTextFormat</code>.</p>\r\n     *\r\n     * @param format A TextFormat object that contains character and paragraph\r\n     *               formatting information.\r\n     * @throws Error      This method cannot be used on a text field with a style\r\n     *                    sheet.\r\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n     *                    specified is out of range.\r\n     */\r\n    TextFieldMultiRender.prototype.setTextFormat = function (format, beginIndex, endIndex) {\r\n        if (beginIndex === void 0) { beginIndex = -1; }\r\n        if (endIndex === void 0) { endIndex = -1; }\r\n    };\r\n    /**\r\n     * Returns true if an embedded font is available with the specified\r\n     * <code>fontName</code> and <code>fontStyle</code> where\r\n     * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n     * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n     * SWF file. Normal embedded fonts are only used with TextFieldMultiRender objects. CFF\r\n     * embedded fonts are only used with the flash.text.engine classes. The two\r\n     * types are distinguished by the <code>fontType</code> property of the\r\n     * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n     * function.\r\n     *\r\n     * <p>TextFieldMultiRender cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n     * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n     * available at run time with the specified name and style is of type\r\n     * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n     * embedded font were available with the specified name and style.</p>\r\n     *\r\n     * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n     * available with the same name and style, the <code>EMBEDDED</code> font is\r\n     * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n     *\r\n     * @param fontName  The name of the embedded font to check.\r\n     * @param fontStyle Specifies the font style to check. Use\r\n     *                  <code>flash.text.FontStyle</code>\r\n     * @return <code>true</code> if a compatible embedded font is available,\r\n     *         otherwise <code>false</code>.\r\n     * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n     *                       of <code>flash.text.FontStyle</code>.\r\n     */\r\n    TextFieldMultiRender.isFontCompatible = function (fontName, fontStyle) {\r\n        return false;\r\n    };\r\n    TextFieldMultiRender.prototype.clone = function () {\r\n        var newInstance = (TextFieldMultiRender._textFields.length) ? TextFieldMultiRender._textFields.pop() : new TextFieldMultiRender();\r\n        this.copyTo(newInstance);\r\n        return newInstance;\r\n    };\r\n    TextFieldMultiRender.prototype.copyTo = function (newInstance) {\r\n        _super.prototype.copyTo.call(this, newInstance);\r\n        newInstance.textWidth = this._textWidth;\r\n        newInstance.textHeight = this._textHeight;\r\n        newInstance.textFormat = this._textFormat;\r\n        //newInstance.textColor = this._textColor;\r\n        newInstance.text = this._text;\r\n    };\r\n    TextFieldMultiRender._textFields = new Array();\r\n    TextFieldMultiRender.assetType = \"[asset TextFieldMultiRender]\";\r\n    return TextFieldMultiRender;\r\n}(Sprite_1.Sprite));\r\nexports.TextFieldMultiRender = TextFieldMultiRender;\r\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../materials/BasicMaterial\":\"awayjs-display/lib/materials/BasicMaterial\",\"../text/BitmapFontTable\":\"awayjs-display/lib/text/BitmapFontTable\",\"../text/TesselatedFontTable\":\"awayjs-display/lib/text/TesselatedFontTable\",\"../text/TextFieldType\":\"awayjs-display/lib/text/TextFieldType\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/geom/Matrix\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined}],\"awayjs-display/lib/display/TextField\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\r\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nvar Matrix_1 = require(\"awayjs-core/lib/geom/Matrix\");\r\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\r\nvar HierarchicalProperties_1 = require(\"../base/HierarchicalProperties\");\r\nvar Style_1 = require(\"../base/Style\");\r\nvar TextFieldType_1 = require(\"../text/TextFieldType\");\r\nvar Sprite_1 = require(\"../display/Sprite\");\r\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n *\r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nvar TextField = (function (_super) {\r\n    __extends(TextField, _super);\r\n    /**\r\n     * Creates a new TextField instance. After you create the TextField instance,\r\n     * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n     * the parent DisplayObjectContainer object to add the TextField instance to\r\n     * the display list.\r\n     *\r\n     * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n     */\r\n    function TextField() {\r\n        _super.call(this);\r\n        this._text = \"\";\r\n        this.type = TextFieldType_1.TextFieldType.STATIC;\r\n    }\r\n    Object.defineProperty(TextField.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return TextField.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"bottomScrollV\", {\r\n        /**\r\n         * An integer(1-based index) that indicates the bottommost line that is\r\n         * currently visible in the specified text field. Think of the text field as\r\n         * a window onto a block of text. The <code>scrollV</code> property is the\r\n         * 1-based index of the topmost visible line in the window.\r\n         *\r\n         * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n         * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n         */\r\n        get: function () {\r\n            return this._bottomScrollV;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"caretIndex\", {\r\n        /**\r\n         * The index of the insertion point(caret) position. If no insertion point\r\n         * is displayed, the value is the position the insertion point would be if\r\n         * you restored focus to the field(typically where the insertion point last\r\n         * was, or 0 if the field has not had focus).\r\n         *\r\n         * <p>Selection span indexes are zero-based(for example, the first position\r\n         * is 0, the second position is 1, and so on).</p>\r\n         */\r\n        get: function () {\r\n            return this._caretIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"length\", {\r\n        /**\r\n         * The number of characters in a text field. A character such as tab\r\n         * (<code>\\t</code>) counts as one character.\r\n         */\r\n        get: function () {\r\n            return this._length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The maximum value of <code>scrollH</code>.\r\n     */\r\n    TextField.prototype.maxScrollH = function () {\r\n        return this._maxScrollH;\r\n    };\r\n    /**\r\n     * The maximum value of <code>scrollV</code>.\r\n     */\r\n    TextField.prototype.maxScrollV = function () {\r\n        return this._maxScrollV;\r\n    };\r\n    Object.defineProperty(TextField.prototype, \"numLines\", {\r\n        /**\r\n         * Defines the number of text lines in a multiline text field. If\r\n         * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n         * lines increases when text wraps.\r\n         */\r\n        get: function () {\r\n            return this._numLines;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"selectionBeginIndex\", {\r\n        /**\r\n         * The zero-based character index value of the first character in the current\r\n         * selection. For example, the first character is 0, the second character is\r\n         * 1, and so on. If no text is selected, this property is the value of\r\n         * <code>caretIndex</code>.\r\n         */\r\n        get: function () {\r\n            return this._selectionBeginIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"selectionEndIndex\", {\r\n        /**\r\n         * The zero-based character index value of the last character in the current\r\n         * selection. For example, the first character is 0, the second character is\r\n         * 1, and so on. If no text is selected, this property is the value of\r\n         * <code>caretIndex</code>.\r\n         */\r\n        get: function () {\r\n            return this._selectionEndIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"text\", {\r\n        /**\r\n         * A string that is the current text in the text field. Lines are separated\r\n         * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n         * property contains unformatted text in the text field, without HTML tags.\r\n         *\r\n         * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n         * property.</p>\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (value) {\r\n            value = value.toString();\r\n            if (this._text == value)\r\n                return;\r\n            this._text = value;\r\n            this._textGraphicsDirty = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"textFormat\", {\r\n        get: function () {\r\n            return this._textFormat;\r\n        },\r\n        set: function (value) {\r\n            if (this._textFormat == value)\r\n                return;\r\n            this._textFormat = value;\r\n            this._textGraphicsDirty = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"graphics\", {\r\n        /**\r\n         * The graphics used by the sprite that provides it with its shape.\r\n         */\r\n        get: function () {\r\n            if (this._textGraphicsDirty)\r\n                this.reConstruct();\r\n            return this._graphics;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"textColor\", {\r\n        get: function () {\r\n            return this._textColor;\r\n        },\r\n        set: function (value) {\r\n            this._textColor = value;\r\n            if (!this.transform.colorTransform)\r\n                this.transform.colorTransform = new ColorTransform_1.ColorTransform();\r\n            this.transform.colorTransform.color = value;\r\n            this.pInvalidateHierarchicalProperties(HierarchicalProperties_1.HierarchicalProperties.COLOR_TRANSFORM);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"textInteractionMode\", {\r\n        /**\r\n         * The interaction mode property, Default value is\r\n         * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n         * that the text can be scrolled but not selected. One can switch to the\r\n         * selectable mode through the in-built context menu on the text field. On\r\n         * Desktop, the normal mode implies that the text is in scrollable as well as\r\n         * selection mode.\r\n         */\r\n        get: function () {\r\n            return this._textInteractionMode;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"textWidth\", {\r\n        /**\r\n         * The width of the text in pixels.\r\n         */\r\n        get: function () {\r\n            return this._textWidth;\r\n        },\r\n        set: function (value) {\r\n            this._textWidth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"textHeight\", {\r\n        /**\r\n         * The width of the text in pixels.\r\n         */\r\n        get: function () {\r\n            return this._textHeight;\r\n        },\r\n        set: function (value) {\r\n            this._textHeight = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextField.prototype, \"isEntity\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return true; //TODO do this better\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextField.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        if (this._textElements)\r\n            this._textElements.clear();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TextField.prototype.dispose = function () {\r\n        this.disposeValues();\r\n        TextField._textFields.push(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TextField.prototype.disposeValues = function () {\r\n        _super.prototype.disposeValues.call(this);\r\n        this._textFormat = null;\r\n        this._textGraphic = null;\r\n        if (this._textElements) {\r\n            this._textElements.dispose();\r\n            this._textElements = null;\r\n        }\r\n    };\r\n    /**\r\n     * Reconstructs the Graphics for this Text-field.\r\n     */\r\n    TextField.prototype.reConstruct = function () {\r\n        this._textGraphicsDirty = false;\r\n        if (this._textFormat == null)\r\n            return;\r\n        if (this._textGraphic) {\r\n            this._textGraphic.dispose();\r\n            this._textGraphic = null;\r\n            this._textElements.clear();\r\n            this._textElements.dispose();\r\n            this._textElements = null;\r\n        }\r\n        if (this._text == \"\")\r\n            return;\r\n        var numVertices = 0;\r\n        var elements;\r\n        var thisFormat = this._textFormat.font_table;\r\n        var fallbackFormat = null;\r\n        if (this._textFormat.fallback_font_table)\r\n            fallbackFormat = this._textFormat.fallback_font_table;\r\n        var char_scale = this._textFormat.size / thisFormat.get_font_em_size();\r\n        var y_offset = 0;\r\n        var prev_char = null;\r\n        var j = 0;\r\n        var k = 0;\r\n        var whitespace_width = (thisFormat.get_whitespace_width() * char_scale) + this._textFormat.letterSpacing;\r\n        var textlines = this.text.toString().split(\"\\\\n\");\r\n        var final_lines_chars = [];\r\n        var final_lines_char_scale = [];\r\n        var final_lines_width = [];\r\n        var final_lines_justify_bool = [];\r\n        var final_lines_justify = [];\r\n        var maxlineWidth = this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\r\n        for (var tl = 0; tl < textlines.length; tl++) {\r\n            final_lines_chars.push([]);\r\n            final_lines_char_scale.push([]);\r\n            final_lines_width.push(0);\r\n            final_lines_justify.push(0);\r\n            final_lines_justify_bool.push(false);\r\n            var words = textlines[tl].split(\" \");\r\n            for (var i = 0; i < words.length; i++) {\r\n                var word_width = 0;\r\n                var word_chars = [];\r\n                var word_chars_scale = [];\r\n                var c_cnt = 0;\r\n                for (var w = 0; w < words[i].length; w++) {\r\n                    char_scale = this._textFormat.size / thisFormat.get_font_em_size();\r\n                    var this_char = thisFormat.getChar(words[i].charCodeAt(w).toString());\r\n                    if (this_char == null) {\r\n                        if (fallbackFormat) {\r\n                            char_scale = this._textFormat.size / fallbackFormat.get_font_em_size();\r\n                            this_char = fallbackFormat.getChar(words[i].charCodeAt(w).toString());\r\n                        }\r\n                    }\r\n                    if (this_char != null) {\r\n                        elements = this_char.elements;\r\n                        if (elements != null) {\r\n                            numVertices += elements.numVertices;\r\n                            // find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n                            var kerning_value = 0;\r\n                            if (prev_char != null) {\r\n                                for (var k = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n                                    if (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\r\n                                        kerning_value = prev_char.kerningValues[k];\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            word_width += ((2 + this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n                        }\r\n                        else {\r\n                            // if no char-elements was found, we insert a \"space\"\r\n                            word_width += whitespace_width;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // if no char-elements was found, we insert a \"space\"\r\n                        //x_offset += thisFormat.get_font_em_size() * char_scale;\r\n                        word_width += whitespace_width;\r\n                    }\r\n                    word_chars_scale[c_cnt] = char_scale;\r\n                    word_chars[c_cnt++] = this_char;\r\n                }\r\n                if (((final_lines_width[final_lines_width.length - 1] + word_width) <= maxlineWidth) || (final_lines_chars[final_lines_chars.length - 1].length == 0)) {\r\n                    // if line can hold this word without breaking the bounds, we can just add all chars\r\n                    for (var fw = 0; fw < word_chars_scale.length; fw++) {\r\n                        final_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\r\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\r\n                    }\r\n                    final_lines_width[final_lines_width.length - 1] += word_width;\r\n                }\r\n                else {\r\n                    // word does not fit\r\n                    // todo respect autowrapping properties.\r\n                    // right now we just pretend everything has autowrapping and multiline\r\n                    if (final_lines_chars[final_lines_chars.length - 1][final_lines_chars[final_lines_chars.length - 1].length - 1] == null) {\r\n                        final_lines_chars[final_lines_chars.length - 1].pop();\r\n                        final_lines_char_scale[final_lines_char_scale.length - 1].pop();\r\n                        final_lines_width[final_lines_width.length - 1] -= whitespace_width;\r\n                        final_lines_justify[final_lines_justify.length - 1] -= 1;\r\n                    }\r\n                    final_lines_justify_bool[final_lines_justify_bool.length - 1] = true;\r\n                    final_lines_chars.push([]);\r\n                    final_lines_char_scale.push([]);\r\n                    final_lines_width.push(0);\r\n                    final_lines_justify.push(0);\r\n                    final_lines_justify_bool.push(false);\r\n                    for (var fw = 0; fw < word_chars_scale.length; fw++) {\r\n                        final_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\r\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\r\n                    }\r\n                    final_lines_width[final_lines_width.length - 1] = word_width;\r\n                }\r\n                if (i < (words.length - 1)) {\r\n                    if ((final_lines_width[final_lines_width.length - 1]) <= maxlineWidth) {\r\n                        final_lines_chars[final_lines_chars.length - 1].push(null);\r\n                        final_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\r\n                        final_lines_width[final_lines_width.length - 1] += whitespace_width;\r\n                        final_lines_justify[final_lines_justify.length - 1] += 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        y_offset = 2 + (thisFormat.ascent - thisFormat.get_font_em_size()) * char_scale;\r\n        var vertices = new Float32Array(numVertices * 3);\r\n        for (var i = 0; i < final_lines_chars.length; i++) {\r\n            var x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent;\r\n            var justify_addion = 0;\r\n            if (this._textFormat.align == \"center\") {\r\n                x_offset = 2 + this._textFormat.leftMargin + this._textFormat.indent + (maxlineWidth - final_lines_width[i]) / 2;\r\n            }\r\n            else if (this._textFormat.align == \"justify\") {\r\n                if (final_lines_justify_bool[i]) {\r\n                    justify_addion = ((maxlineWidth) - final_lines_width[i]) / final_lines_justify[i];\r\n                }\r\n            }\r\n            else if (this._textFormat.align == \"right\") {\r\n                x_offset = (this._textWidth - final_lines_width[i]) - (2 + this._textFormat.rightMargin);\r\n            }\r\n            //console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n            //console.log(\"this._width=\"+this._width);\r\n            for (var t = 0; t < final_lines_chars[i].length; t++) {\r\n                var this_char = final_lines_chars[i][t];\r\n                char_scale = final_lines_char_scale[i][t];\r\n                if (this_char != null) {\r\n                    elements = this_char.elements;\r\n                    if (elements != null) {\r\n                        var buffer = new Float32Array(elements.concatenatedBuffer.buffer);\r\n                        for (var v = 0; v < elements.numVertices; v++) {\r\n                            vertices[j++] = buffer[v * 3] * char_scale + x_offset;\r\n                            vertices[j++] = buffer[v * 3 + 1] * char_scale + y_offset;\r\n                            vertices[j++] = buffer[v * 3 + 2];\r\n                        }\r\n                        // find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n                        var kerning_value = 0;\r\n                        if (prev_char != null) {\r\n                            for (var k = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n                                if (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n                                    kerning_value = prev_char.kerningValues[k];\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        x_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n                    }\r\n                    else {\r\n                        // if no char-elements was found, we insert a \"space\"\r\n                        x_offset += whitespace_width + justify_addion;\r\n                    }\r\n                }\r\n                else {\r\n                    x_offset += whitespace_width + justify_addion;\r\n                }\r\n            }\r\n            // hack for multiline textfield in icycle.\r\n            y_offset += (thisFormat.ascent + thisFormat.descent) * char_scale;\r\n            //y_offset+=(thisFormat.get_font_em_size()-thisFormat.descent)*char_scale;\r\n            y_offset += this._textFormat.leading;\r\n        }\r\n        var attributesView = new AttributesView_1.AttributesView(Float32Array, 3);\r\n        attributesView.set(vertices);\r\n        var vertexBuffer = attributesView.attributesBuffer;\r\n        attributesView.dispose();\r\n        this._textElements = new TriangleElements_1.TriangleElements(vertexBuffer);\r\n        this._textElements.setPositions(new Float2Attributes_1.Float2Attributes(vertexBuffer));\r\n        this._textElements.setCustomAttributes(\"curves\", new Byte4Attributes_1.Byte4Attributes(vertexBuffer, false));\r\n        this._textGraphic = this._graphics.addGraphic(this._textElements);\r\n        this.material = this._textFormat.material;\r\n        var sampler = new Sampler2D_1.Sampler2D();\r\n        this.style = new Style_1.Style();\r\n        this.style.addSamplerAt(sampler, this.material.getTextureAt(0));\r\n        this.style.uvMatrix = new Matrix_1.Matrix(0, 0, 0, 0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\r\n        this.material.animateUVs = true;\r\n    };\r\n    /**\r\n     * Appends the string specified by the <code>newText</code> parameter to the\r\n     * end of the text of the text field. This method is more efficient than an\r\n     * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n     * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n     * text field that contains a significant amount of content.\r\n     *\r\n     * @param newText The string to append to the existing text.\r\n     */\r\n    TextField.prototype.appendText = function (newText) {\r\n        this._text += newText;\r\n    };\r\n    /**\r\n     * *tells the Textfield that a paragraph is defined completly.\r\n     * e.g. the textfield will start a new line for future added text.\r\n     */\r\n    TextField.prototype.closeParagraph = function () {\r\n        //TODO\r\n    };\r\n    /**\r\n     * Returns a rectangle that is the bounding box of the character.\r\n     *\r\n     * @param charIndex The zero-based index value for the character(for\r\n     *                  example, the first position is 0, the second position is\r\n     *                  1, and so on).\r\n     * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n     *         maximum values defining the bounding box of the character.\r\n     */\r\n    TextField.prototype.getCharBoundaries = function (charIndex) {\r\n        return this._charBoundaries;\r\n    };\r\n    /**\r\n     * Returns the zero-based index value of the character at the point specified\r\n     * by the <code>x</code> and <code>y</code> parameters.\r\n     *\r\n     * @param x The <i>x</i> coordinate of the character.\r\n     * @param y The <i>y</i> coordinate of the character.\r\n     * @return The zero-based index value of the character(for example, the\r\n     *         first position is 0, the second position is 1, and so on). Returns\r\n     *         -1 if the point is not over any character.\r\n     */\r\n    TextField.prototype.getCharIndexAtPoint = function (x, y) {\r\n        return this._charIndexAtPoint;\r\n    };\r\n    /**\r\n     * Given a character index, returns the index of the first character in the\r\n     * same paragraph.\r\n     *\r\n     * @param charIndex The zero-based index value of the character(for example,\r\n     *                  the first character is 0, the second character is 1, and\r\n     *                  so on).\r\n     * @return The zero-based index value of the first character in the same\r\n     *         paragraph.\r\n     * @throws RangeError The character index specified is out of range.\r\n     */\r\n    TextField.prototype.getFirstCharInParagraph = function (charIndex /*int*/) {\r\n        return this._firstCharInParagraph;\r\n    };\r\n    /**\r\n     * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n     * image or SWF file that has been added to an HTML-formatted text field by\r\n     * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n     * following format:\r\n     *\r\n     * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n     * 'instanceName' ></code></pre></p>\r\n     *\r\n     * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n     *           of the <code><img></code> tag).\r\n     * @return The display object corresponding to the image or SWF file with the\r\n     *         matching <code>id</code> attribute in the <code><img></code> tag\r\n     *         of the text field. For media loaded from an external source, this\r\n     *         object is a Loader object, and, once loaded, the media object is a\r\n     *         child of that Loader object. For media embedded in the SWF file,\r\n     *         it is the loaded object. If no <code><img></code> tag with the\r\n     *         matching <code>id</code> exists, the method returns\r\n     *         <code>null</code>.\r\n     */\r\n    TextField.prototype.getImageReference = function (id) {\r\n        return this._imageReference;\r\n    };\r\n    /**\r\n     * Returns the zero-based index value of the line at the point specified by\r\n     * the <code>x</code> and <code>y</code> parameters.\r\n     *\r\n     * @param x The <i>x</i> coordinate of the line.\r\n     * @param y The <i>y</i> coordinate of the line.\r\n     * @return The zero-based index value of the line(for example, the first\r\n     *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n     *         point is not over any line.\r\n     */\r\n    TextField.prototype.getLineIndexAtPoint = function (x, y) {\r\n        return this._lineIndexAtPoint;\r\n    };\r\n    /**\r\n     * Returns the zero-based index value of the line containing the character\r\n     * specified by the <code>charIndex</code> parameter.\r\n     *\r\n     * @param charIndex The zero-based index value of the character(for example,\r\n     *                  the first character is 0, the second character is 1, and\r\n     *                  so on).\r\n     * @return The zero-based index value of the line.\r\n     * @throws RangeError The character index specified is out of range.\r\n     */\r\n    TextField.prototype.getLineIndexOfChar = function (charIndex /*int*/) {\r\n        return this._lineIndexOfChar;\r\n    };\r\n    /**\r\n     * Returns the number of characters in a specific text line.\r\n     *\r\n     * @param lineIndex The line number for which you want the length.\r\n     * @return The number of characters in the line.\r\n     * @throws RangeError The line number specified is out of range.\r\n     */\r\n    TextField.prototype.getLineLength = function (lineIndex /*int*/) {\r\n        return this._lineLength;\r\n    };\r\n    /**\r\n     * Returns metrics information about a given text line.\r\n     *\r\n     * @param lineIndex The line number for which you want metrics information.\r\n     * @return A TextLineMetrics object.\r\n     * @throws RangeError The line number specified is out of range.\r\n     */\r\n    TextField.prototype.getLineMetrics = function (lineIndex /*int*/) {\r\n        return this._lineMetrics;\r\n    };\r\n    /**\r\n     * Returns the character index of the first character in the line that the\r\n     * <code>lineIndex</code> parameter specifies.\r\n     *\r\n     * @param lineIndex The zero-based index value of the line(for example, the\r\n     *                  first line is 0, the second line is 1, and so on).\r\n     * @return The zero-based index value of the first character in the line.\r\n     * @throws RangeError The line number specified is out of range.\r\n     */\r\n    TextField.prototype.getLineOffset = function (lineIndex /*int*/) {\r\n        return this._lineOffset;\r\n    };\r\n    /**\r\n     * Returns the text of the line specified by the <code>lineIndex</code>\r\n     * parameter.\r\n     *\r\n     * @param lineIndex The zero-based index value of the line(for example, the\r\n     *                  first line is 0, the second line is 1, and so on).\r\n     * @return The text string contained in the specified line.\r\n     * @throws RangeError The line number specified is out of range.\r\n     */\r\n    TextField.prototype.getLineText = function (lineIndex /*int*/) {\r\n        return this._lineText;\r\n    };\r\n    /**\r\n     * Given a character index, returns the length of the paragraph containing\r\n     * the given character. The length is relative to the first character in the\r\n     * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n     * the character index passed in.\r\n     *\r\n     * @param charIndex The zero-based index value of the character(for example,\r\n     *                  the first character is 0, the second character is 1, and\r\n     *                  so on).\r\n     * @return Returns the number of characters in the paragraph.\r\n     * @throws RangeError The character index specified is out of range.\r\n     */\r\n    TextField.prototype.getParagraphLength = function (charIndex /*int*/) {\r\n        return this._paragraphLength;\r\n    };\r\n    /**\r\n     * Returns a TextFormat object that contains formatting information for the\r\n     * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n     * parameters specify. Only properties that are common to the entire text\r\n     * specified are set in the resulting TextFormat object. Any property that is\r\n     * <i>mixed</i>, meaning that it has different values at different points in\r\n     * the text, has a value of <code>null</code>.\r\n     *\r\n     * <p>If you do not specify values for these parameters, this method is\r\n     * applied to all the text in the text field. </p>\r\n     *\r\n     * <p>The following table describes three possible usages:</p>\r\n     *\r\n     * @return The TextFormat object that represents the formatting properties\r\n     *         for the specified text.\r\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n     *                    specified is out of range.\r\n     */\r\n    TextField.prototype.getTextFormat = function (beginIndex, endIndex) {\r\n        if (beginIndex === void 0) { beginIndex = -1; }\r\n        if (endIndex === void 0) { endIndex = -1; }\r\n        return this._textFormat;\r\n    };\r\n    /**\r\n     * Replaces the current selection with the contents of the <code>value</code>\r\n     * parameter. The text is inserted at the position of the current selection,\r\n     * using the current default character format and default paragraph format.\r\n     * The text is not treated as HTML.\r\n     *\r\n     * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n     * delete text without disrupting the character and paragraph formatting of\r\n     * the rest of the text.</p>\r\n     *\r\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n     * the text field.</p>\r\n     *\r\n     * @param value The string to replace the currently selected text.\r\n     * @throws Error This method cannot be used on a text field with a style\r\n     *               sheet.\r\n     */\r\n    TextField.prototype.replaceSelectedText = function (value) {\r\n    };\r\n    /**\r\n     * Replaces the range of characters that the <code>beginIndex</code> and\r\n     * <code>endIndex</code> parameters specify with the contents of the\r\n     * <code>newText</code> parameter. As designed, the text from\r\n     * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n     *\r\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n     * the text field.</p>\r\n     *\r\n     * @param beginIndex The zero-based index value for the start position of the\r\n     *                   replacement range.\r\n     * @param endIndex   The zero-based index position of the first character\r\n     *                   after the desired text span.\r\n     * @param newText    The text to use to replace the specified range of\r\n     *                   characters.\r\n     * @throws Error This method cannot be used on a text field with a style\r\n     *               sheet.\r\n     */\r\n    TextField.prototype.replaceText = function (beginIndex /*int*/, endIndex /*int*/, newText) {\r\n    };\r\n    /**\r\n     * Sets as selected the text designated by the index values of the first and\r\n     * last characters, which are specified with the <code>beginIndex</code> and\r\n     * <code>endIndex</code> parameters. If the two parameter values are the\r\n     * same, this method sets the insertion point, as if you set the\r\n     * <code>caretIndex</code> property.\r\n     *\r\n     * @param beginIndex The zero-based index value of the first character in the\r\n     *                   selection(for example, the first character is 0, the\r\n     *                   second character is 1, and so on).\r\n     * @param endIndex   The zero-based index value of the last character in the\r\n     *                   selection.\r\n     */\r\n    TextField.prototype.setSelection = function (beginIndex /*int*/, endIndex /*int*/) {\r\n    };\r\n    /**\r\n     * Applies the text formatting that the <code>format</code> parameter\r\n     * specifies to the specified text in a text field. The value of\r\n     * <code>format</code> must be a TextFormat object that specifies the desired\r\n     * text formatting changes. Only the non-null properties of\r\n     * <code>format</code> are applied to the text field. Any property of\r\n     * <code>format</code> that is set to <code>null</code> is not applied. By\r\n     * default, all of the properties of a newly created TextFormat object are\r\n     * set to <code>null</code>.\r\n     *\r\n     * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n     * the text field.</p>\r\n     *\r\n     * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n     * applied to a range of characters or to the entire body of text in a text\r\n     * field. To apply the properties of format to all text in the text field, do\r\n     * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n     * To apply the properties of the format to a range of text, specify values\r\n     * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n     * You can use the <code>length</code> property to determine the index\r\n     * values.</p>\r\n     *\r\n     * <p>The two types of formatting information in a TextFormat object are\r\n     * character level formatting and paragraph level formatting. Each character\r\n     * in a text field can have its own character formatting settings, such as\r\n     * font name, font size, bold, and italic.</p>\r\n     *\r\n     * <p>For paragraphs, the first character of the paragraph is examined for\r\n     * the paragraph formatting settings for the entire paragraph. Examples of\r\n     * paragraph formatting settings are left margin, right margin, and\r\n     * indentation.</p>\r\n     *\r\n     * <p>Any text inserted manually by the user, or replaced by the\r\n     * <code>replaceSelectedText()</code> method, receives the default text field\r\n     * formatting for new text, and not the formatting specified for the text\r\n     * insertion point. To set the default formatting for new text, use\r\n     * <code>defaultTextFormat</code>.</p>\r\n     *\r\n     * @param format A TextFormat object that contains character and paragraph\r\n     *               formatting information.\r\n     * @throws Error      This method cannot be used on a text field with a style\r\n     *                    sheet.\r\n     * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n     *                    specified is out of range.\r\n     */\r\n    TextField.prototype.setTextFormat = function (format, beginIndex, endIndex) {\r\n        if (beginIndex === void 0) { beginIndex = -1; }\r\n        if (endIndex === void 0) { endIndex = -1; }\r\n    };\r\n    /**\r\n     * Returns true if an embedded font is available with the specified\r\n     * <code>fontName</code> and <code>fontStyle</code> where\r\n     * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n     * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n     * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n     * embedded fonts are only used with the flash.text.engine classes. The two\r\n     * types are distinguished by the <code>fontType</code> property of the\r\n     * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n     * function.\r\n     *\r\n     * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n     * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n     * available at run time with the specified name and style is of type\r\n     * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n     * embedded font were available with the specified name and style.</p>\r\n     *\r\n     * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n     * available with the same name and style, the <code>EMBEDDED</code> font is\r\n     * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n     *\r\n     * @param fontName  The name of the embedded font to check.\r\n     * @param fontStyle Specifies the font style to check. Use\r\n     *                  <code>flash.text.FontStyle</code>\r\n     * @return <code>true</code> if a compatible embedded font is available,\r\n     *         otherwise <code>false</code>.\r\n     * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n     *                       of <code>flash.text.FontStyle</code>.\r\n     */\r\n    TextField.isFontCompatible = function (fontName, fontStyle) {\r\n        return false;\r\n    };\r\n    TextField.prototype.clone = function () {\r\n        var newInstance = (TextField._textFields.length) ? TextField._textFields.pop() : new TextField();\r\n        this.copyTo(newInstance);\r\n        return newInstance;\r\n    };\r\n    TextField.prototype.copyTo = function (newInstance) {\r\n        _super.prototype.copyTo.call(this, newInstance);\r\n        newInstance.textWidth = this._textWidth;\r\n        newInstance.textHeight = this._textHeight;\r\n        newInstance.textFormat = this._textFormat;\r\n        //newInstance.textColor = this._textColor;\r\n        newInstance.text = this._text;\r\n    };\r\n    TextField._textFields = new Array();\r\n    TextField.assetType = \"[asset TextField]\";\r\n    return TextField;\r\n}(Sprite_1.Sprite));\r\nexports.TextField = TextField;\r\n},{\"../base/HierarchicalProperties\":\"awayjs-display/lib/base/HierarchicalProperties\",\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../text/TextFieldType\":\"awayjs-display/lib/text/TextFieldType\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/geom/Matrix\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined}],\"awayjs-display/lib/display\":[function(require,module,exports){\n\"use strict\";\r\nvar Billboard_1 = require(\"./display/Billboard\");\r\nexports.Billboard = Billboard_1.Billboard;\r\nvar Camera_1 = require(\"./display/Camera\");\r\nexports.Camera = Camera_1.Camera;\r\nvar DirectionalLight_1 = require(\"./display/DirectionalLight\");\r\nexports.DirectionalLight = DirectionalLight_1.DirectionalLight;\r\nvar DisplayObject_1 = require(\"./display/DisplayObject\");\r\nexports.DisplayObject = DisplayObject_1.DisplayObject;\r\nvar DisplayObjectContainer_1 = require(\"./display/DisplayObjectContainer\");\r\nexports.DisplayObjectContainer = DisplayObjectContainer_1.DisplayObjectContainer;\r\nvar LightBase_1 = require(\"./display/LightBase\");\r\nexports.LightBase = LightBase_1.LightBase;\r\nvar LightProbe_1 = require(\"./display/LightProbe\");\r\nexports.LightProbe = LightProbe_1.LightProbe;\r\nvar LineSegment_1 = require(\"./display/LineSegment\");\r\nexports.LineSegment = LineSegment_1.LineSegment;\r\nvar LoaderContainer_1 = require(\"./display/LoaderContainer\");\r\nexports.LoaderContainer = LoaderContainer_1.LoaderContainer;\r\nvar MovieClip_1 = require(\"./display/MovieClip\");\r\nexports.MovieClip = MovieClip_1.MovieClip;\r\nvar PointLight_1 = require(\"./display/PointLight\");\r\nexports.PointLight = PointLight_1.PointLight;\r\nvar Scene_1 = require(\"./display/Scene\");\r\nexports.Scene = Scene_1.Scene;\r\nvar Shape_1 = require(\"./display/Shape\");\r\nexports.Shape = Shape_1.Shape;\r\nvar Skybox_1 = require(\"./display/Skybox\");\r\nexports.Skybox = Skybox_1.Skybox;\r\nvar Sprite_1 = require(\"./display/Sprite\");\r\nexports.Sprite = Sprite_1.Sprite;\r\nvar TextField_1 = require(\"./display/TextField\");\r\nexports.TextField = TextField_1.TextField;\r\nvar TextFieldMultiRender_1 = require(\"./display/TextFieldMultiRender\");\r\nexports.TextFieldMultiRender = TextFieldMultiRender_1.TextFieldMultiRender;\r\n},{\"./display/Billboard\":\"awayjs-display/lib/display/Billboard\",\"./display/Camera\":\"awayjs-display/lib/display/Camera\",\"./display/DirectionalLight\":\"awayjs-display/lib/display/DirectionalLight\",\"./display/DisplayObject\":\"awayjs-display/lib/display/DisplayObject\",\"./display/DisplayObjectContainer\":\"awayjs-display/lib/display/DisplayObjectContainer\",\"./display/LightBase\":\"awayjs-display/lib/display/LightBase\",\"./display/LightProbe\":\"awayjs-display/lib/display/LightProbe\",\"./display/LineSegment\":\"awayjs-display/lib/display/LineSegment\",\"./display/LoaderContainer\":\"awayjs-display/lib/display/LoaderContainer\",\"./display/MovieClip\":\"awayjs-display/lib/display/MovieClip\",\"./display/PointLight\":\"awayjs-display/lib/display/PointLight\",\"./display/Scene\":\"awayjs-display/lib/display/Scene\",\"./display/Shape\":\"awayjs-display/lib/display/Shape\",\"./display/Skybox\":\"awayjs-display/lib/display/Skybox\",\"./display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"./display/TextField\":\"awayjs-display/lib/display/TextField\",\"./display/TextFieldMultiRender\":\"awayjs-display/lib/display/TextFieldMultiRender\"}],\"awayjs-display/lib/draw/CapsStyle\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nvar CapsStyle = (function () {\r\n    function CapsStyle() {\r\n    }\r\n    /**\r\n     * Used to specify round caps in the <code>caps</code> parameter of the\r\n     * <code>flash.display.Graphics.lineStyle()</code> method.\r\n     */\r\n    CapsStyle.ROUND = 1;\r\n    /**\r\n     * Used to specify no caps in the <code>caps</code> parameter of the\r\n     * <code>flash.display.Graphics.lineStyle()</code> method.\r\n     */\r\n    CapsStyle.NONE = 0;\r\n    /**\r\n     * Used to specify square caps in the <code>caps</code> parameter of the\r\n     * <code>flash.display.Graphics.lineStyle()</code> method.\r\n     */\r\n    CapsStyle.SQUARE = 2;\r\n    return CapsStyle;\r\n}());\r\nexports.CapsStyle = CapsStyle;\r\n},{}],\"awayjs-display/lib/draw/DrawMode\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * DrawMode is an enumeration of constant values that specify the\r\n * DrawMode to use when drawing.\r\n */\r\nvar DrawMode = (function () {\r\n    function DrawMode() {\r\n    }\r\n    /**\r\n     * Used to specify to draw both strokes and fills\r\n     */\r\n    DrawMode.BOTH = 1;\r\n    /**\r\n     * Used to specify to draw strokes only\r\n     */\r\n    DrawMode.STROKE = 0;\r\n    /**\r\n     * Used to specify to draw fills only\r\n     */\r\n    DrawMode.FILL = 2;\r\n    return DrawMode;\r\n}());\r\nexports.DrawMode = DrawMode;\r\n},{}],\"awayjs-display/lib/draw/GradientType\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nvar GradientType = (function () {\r\n    function GradientType() {\r\n    }\r\n    /**\r\n     * Value used to specify a linear gradient fill.\r\n     */\r\n    GradientType.LINEAR = \"linear\";\r\n    /**\r\n     * Value used to specify a radial gradient fill.\r\n     */\r\n    GradientType.RADIAL = \"radial\";\r\n    return GradientType;\r\n}());\r\nexports.GradientType = GradientType;\r\n},{}],\"awayjs-display/lib/draw/GraphicsFactoryFills\":[function(require,module,exports){\n\"use strict\";\r\nvar GraphicsPathCommand_1 = require(\"../draw/GraphicsPathCommand\");\r\nvar DefaultMaterialManager_1 = require(\"../managers/DefaultMaterialManager\");\r\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\r\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\r\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\r\nvar GraphicsFactoryHelper_1 = require(\"../draw/GraphicsFactoryHelper\");\r\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nvar GraphicsFactoryFills = (function () {\r\n    function GraphicsFactoryFills() {\r\n    }\r\n    GraphicsFactoryFills.draw_pathes = function (targetGraphic) {\r\n        var len = targetGraphic.queued_fill_pathes.length;\r\n        var cp = 0;\r\n        for (cp = 0; cp < len; cp++) {\r\n            var one_path = targetGraphic.queued_fill_pathes[cp];\r\n            //one_path.finalizeContour();\r\n            var contour_commands = one_path.commands;\r\n            var contour_data = one_path.data;\r\n            var commands;\r\n            var data;\r\n            var i = 0;\r\n            var k = 0;\r\n            var vert_cnt = 0;\r\n            var data_cnt = 0;\r\n            var draw_direction = 0;\r\n            var contours_vertices = [[]];\r\n            var final_vert_list = [];\r\n            var final_vert_cnt = 0;\r\n            var lastPoint = new Point_1.Point();\r\n            var last_dir_vec = new Point_1.Point();\r\n            var end_point = new Point_1.Point();\r\n            for (k = 0; k < contour_commands.length; k++) {\r\n                contours_vertices.push([]);\r\n                vert_cnt = 0;\r\n                data_cnt = 0;\r\n                commands = contour_commands[k];\r\n                data = contour_data[k];\r\n                draw_direction = 0;\r\n                var new_dir = 0;\r\n                var new_dir_1 = 0;\r\n                var new_dir_2 = 0;\r\n                var dir_delta = 0;\r\n                var last_direction = 0;\r\n                var tmp_dir_point = new Point_1.Point();\r\n                if ((data[0] != data[data.length - 2]) || (data[1] != data[data.length - 1])) {\r\n                    data[data.length] == data[0];\r\n                    data[data.length] == data[1];\r\n                }\r\n                lastPoint.x = data[0];\r\n                lastPoint.y = data[1];\r\n                if (commands[1] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\r\n                    last_dir_vec.x = data[2] - lastPoint.x;\r\n                    last_dir_vec.y = data[3] - lastPoint.y;\r\n                }\r\n                else if (commands[1] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\r\n                    last_dir_vec.x = data[4] - lastPoint.x;\r\n                    last_dir_vec.y = data[5] - lastPoint.y;\r\n                }\r\n                data_cnt = 2;\r\n                last_dir_vec.normalize();\r\n                last_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n                for (i = 1; i < commands.length; i++) {\r\n                    end_point = new Point_1.Point(data[data_cnt++], data[data_cnt++]);\r\n                    if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO) {\r\n                        console.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\r\n                    }\r\n                    else if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\r\n                        end_point = new Point_1.Point(data[data_cnt++], data[data_cnt++]);\r\n                    }\r\n                    //get the directional vector and the direction for this segment\r\n                    tmp_dir_point.x = end_point.x - lastPoint.x;\r\n                    tmp_dir_point.y = end_point.y - lastPoint.y;\r\n                    tmp_dir_point.normalize();\r\n                    new_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n                    // get the difference in angle to the last segment\r\n                    dir_delta = new_dir - last_direction;\r\n                    if (dir_delta > 180) {\r\n                        dir_delta -= 360;\r\n                    }\r\n                    if (dir_delta < -180) {\r\n                        dir_delta += 360;\r\n                    }\r\n                    draw_direction += dir_delta;\r\n                    last_direction = new_dir;\r\n                    lastPoint.x = end_point.x;\r\n                    lastPoint.y = end_point.y;\r\n                }\r\n                lastPoint.x = data[0];\r\n                lastPoint.y = data[1];\r\n                data_cnt = 2;\r\n                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\r\n                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\r\n                //console.log(\"Draw directions complete: \"+draw_direction);\r\n                for (i = 1; i < commands.length; i++) {\r\n                    switch (commands[i]) {\r\n                        case GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO:\r\n                            console.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\r\n                            break;\r\n                        case GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO:\r\n                            lastPoint.x = data[data_cnt++];\r\n                            lastPoint.y = data[data_cnt++];\r\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\r\n                            contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\r\n                            break;\r\n                        case GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO:\r\n                            var control_x = data[data_cnt++];\r\n                            var control_y = data[data_cnt++];\r\n                            var end_x = data[data_cnt++];\r\n                            var end_y = data[data_cnt++];\r\n                            tmp_dir_point.x = control_x - lastPoint.x;\r\n                            tmp_dir_point.y = control_y - lastPoint.y;\r\n                            tmp_dir_point.normalize();\r\n                            new_dir_1 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n                            tmp_dir_point.x = end_x - lastPoint.x;\r\n                            tmp_dir_point.y = end_y - lastPoint.y;\r\n                            tmp_dir_point.normalize();\r\n                            new_dir_2 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n                            // get the difference in angle to the last segment\r\n                            var curve_direction = new_dir_2 - new_dir_1;\r\n                            if (curve_direction > 180) {\r\n                                curve_direction -= 360;\r\n                            }\r\n                            if (curve_direction < -180) {\r\n                                curve_direction += 360;\r\n                            }\r\n                            if ((curve_direction == 0) && (curve_direction == 180) && (curve_direction == -180)) {\r\n                                lastPoint.x = end_x;\r\n                                lastPoint.y = end_y;\r\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\r\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\r\n                                break;\r\n                            }\r\n                            var curve_attr_1 = -1;\r\n                            if (draw_direction < 0) {\r\n                                if (curve_direction > 0) {\r\n                                    //convex\r\n                                    //console.log(\"convex\");\r\n                                    curve_attr_1 = 1;\r\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\r\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\r\n                                }\r\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\r\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\r\n                            }\r\n                            else {\r\n                                if (curve_direction < 0) {\r\n                                    //convex\r\n                                    //console.log(\"convex\");\r\n                                    curve_attr_1 = 1;\r\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\r\n                                    contours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\r\n                                }\r\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\r\n                                contours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\r\n                            }\r\n                            if (GraphicsFactoryHelper_1.GraphicsFactoryHelper.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)) {\r\n                                final_vert_list[final_vert_cnt++] = end_x;\r\n                                final_vert_list[final_vert_cnt++] = end_y;\r\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = control_x;\r\n                                final_vert_list[final_vert_cnt++] = control_y;\r\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\r\n                                final_vert_list[final_vert_cnt++] = 0.5;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = lastPoint.x;\r\n                                final_vert_list[final_vert_cnt++] = lastPoint.y;\r\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                            }\r\n                            else {\r\n                                final_vert_list[final_vert_cnt++] = lastPoint.x;\r\n                                final_vert_list[final_vert_cnt++] = lastPoint.y;\r\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = control_x;\r\n                                final_vert_list[final_vert_cnt++] = control_y;\r\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\r\n                                final_vert_list[final_vert_cnt++] = 0.5;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = end_x;\r\n                                final_vert_list[final_vert_cnt++] = end_y;\r\n                                final_vert_list[final_vert_cnt++] = curve_attr_1;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                                final_vert_list[final_vert_cnt++] = 1.0;\r\n                                final_vert_list[final_vert_cnt++] = 0.0;\r\n                            }\r\n                            lastPoint.x = end_x;\r\n                            lastPoint.y = end_y;\r\n                            break;\r\n                        case GraphicsPathCommand_1.GraphicsPathCommand.CUBIC_CURVE:\r\n                            //todo\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            var verts = [];\r\n            var all_verts = [];\r\n            var vertIndicess = [];\r\n            var elems = [];\r\n            for (k = 0; k < contours_vertices.length; k++) {\r\n                var vertices = contours_vertices[k];\r\n                //for (i = 0; i < vertices.length / 2; ++i)\r\n                //console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\r\n                var verticesF32 = new Float32Array(vertices);\r\n                //var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\r\n                //console.log(\"in vertices\", vertices);\r\n                //var tess = new TESS();\r\n                if (GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj == null) {\r\n                    console.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\r\n                    return;\r\n                }\r\n                GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\r\n            }\r\n            GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj.tesselate(0 /*TESS.WINDING_ODD*/, 0 /*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\r\n            //console.log(\"out vertices\", Graphics._tess_obj.getVertices());\r\n            verts = GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj.getVertices();\r\n            elems = GraphicsFactoryHelper_1.GraphicsFactoryHelper._tess_obj.getElements();\r\n            //console.log(\"out elements\", Graphics._tess_obj.getElements());\r\n            var numVerts = verts.length / 2;\r\n            var numElems = elems.length / 3;\r\n            for (i = 0; i < numVerts; ++i)\r\n                all_verts.push(new Point_1.Point(verts[i * 2], verts[i * 2 + 1]));\r\n            for (i = 0; i < numElems; ++i) {\r\n                var p1 = elems[i * 3];\r\n                var p2 = elems[i * 3 + 1];\r\n                var p3 = elems[i * 3 + 2];\r\n                final_vert_list[final_vert_cnt++] = all_verts[p3].x;\r\n                final_vert_list[final_vert_cnt++] = all_verts[p3].y;\r\n                final_vert_list[final_vert_cnt++] = 1;\r\n                final_vert_list[final_vert_cnt++] = 2.0;\r\n                final_vert_list[final_vert_cnt++] = 0.0;\r\n                final_vert_list[final_vert_cnt++] = 1.0;\r\n                final_vert_list[final_vert_cnt++] = 0.0;\r\n                final_vert_list[final_vert_cnt++] = all_verts[p2].x;\r\n                final_vert_list[final_vert_cnt++] = all_verts[p2].y;\r\n                final_vert_list[final_vert_cnt++] = 1;\r\n                final_vert_list[final_vert_cnt++] = 2.0;\r\n                final_vert_list[final_vert_cnt++] = 0.0;\r\n                final_vert_list[final_vert_cnt++] = 1.0;\r\n                final_vert_list[final_vert_cnt++] = 0.0;\r\n                final_vert_list[final_vert_cnt++] = all_verts[p1].x;\r\n                final_vert_list[final_vert_cnt++] = all_verts[p1].y;\r\n                final_vert_list[final_vert_cnt++] = 1;\r\n                final_vert_list[final_vert_cnt++] = 2.0;\r\n                final_vert_list[final_vert_cnt++] = 0.0;\r\n                final_vert_list[final_vert_cnt++] = 1.0;\r\n                final_vert_list[final_vert_cnt++] = 0.0;\r\n            }\r\n            //for (i = 0; i < final_vert_list.length/7; ++i)\r\n            //\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\r\n            var attributesView = new AttributesView_1.AttributesView(Float32Array, 7);\r\n            attributesView.set(final_vert_list);\r\n            var attributesBuffer = attributesView.attributesBuffer;\r\n            attributesView.dispose();\r\n            var elements = new TriangleElements_1.TriangleElements(attributesBuffer);\r\n            elements.setPositions(new Float2Attributes_1.Float2Attributes(attributesBuffer));\r\n            elements.setCustomAttributes(\"curves\", new Float3Attributes_1.Float3Attributes(attributesBuffer));\r\n            elements.setUVs(new Float2Attributes_1.Float2Attributes(attributesBuffer));\r\n            var material = DefaultMaterialManager_1.DefaultMaterialManager.getDefaultMaterial();\r\n            material.bothSides = true;\r\n            material.useColorTransform = true;\r\n            material.curves = true;\r\n            var thisGraphic = targetGraphic.addGraphic(elements, material);\r\n        }\r\n        targetGraphic.queued_fill_pathes.length = 0;\r\n    };\r\n    return GraphicsFactoryFills;\r\n}());\r\nexports.GraphicsFactoryFills = GraphicsFactoryFills;\r\n},{\"../draw/GraphicsFactoryHelper\":\"awayjs-display/lib/draw/GraphicsFactoryHelper\",\"../draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsFactoryHelper\":[function(require,module,exports){\n\"use strict\";\r\nvar CapsStyle_1 = require(\"../draw/CapsStyle\");\r\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\r\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nvar GraphicsFactoryHelper = (function () {\r\n    function GraphicsFactoryHelper() {\r\n    }\r\n    GraphicsFactoryHelper.isClockWiseXY = function (point1x, point1y, point2x, point2y, point3x, point3y) {\r\n        var num = (point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x);\r\n        if (num < 0)\r\n            return false;\r\n        return true;\r\n    };\r\n    GraphicsFactoryHelper.getSign = function (ax, ay, cx, cy, bx, by) {\r\n        return (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\r\n    };\r\n    GraphicsFactoryHelper.pointInTri = function (ax, ay, bx, by, cx, cy, xx, xy) {\r\n        var b1 = GraphicsFactoryHelper.getSign(ax, ay, xx, xy, bx, by) > 0;\r\n        var b2 = GraphicsFactoryHelper.getSign(bx, by, xx, xy, cx, cy) > 0;\r\n        var b3 = GraphicsFactoryHelper.getSign(cx, cy, xx, xy, ax, ay) > 0;\r\n        return ((b1 == b2) && (b2 == b3));\r\n    };\r\n    GraphicsFactoryHelper.getControlXForCurveX = function (a, c, b) {\r\n        return c;\r\n    };\r\n    GraphicsFactoryHelper.getControlYForCurveY = function (a, c, b) {\r\n        return c;\r\n    };\r\n    GraphicsFactoryHelper.drawPoint = function (startX, startY, vertices) {\r\n        GraphicsFactoryHelper.addTriangle(startX - 2, startY - 2, startX + 2, startY - 2, startX + 2, startY + 2, 0, vertices);\r\n        GraphicsFactoryHelper.addTriangle(startX - 2, startY - 2, startX - 2, startY + 2, startX + 2, startY + 2, 0, vertices);\r\n    };\r\n    GraphicsFactoryHelper.addTriangle = function (startX, startY, controlX, controlY, endX, endY, tri_type, vertices) {\r\n        var final_vert_cnt = vertices.length;\r\n        if (tri_type == 0) {\r\n            vertices[final_vert_cnt++] = startX;\r\n            vertices[final_vert_cnt++] = startY;\r\n            vertices[final_vert_cnt++] = 1;\r\n            vertices[final_vert_cnt++] = 2.0;\r\n            vertices[final_vert_cnt++] = 0.0;\r\n            vertices[final_vert_cnt++] = controlX;\r\n            vertices[final_vert_cnt++] = controlY;\r\n            vertices[final_vert_cnt++] = 1;\r\n            vertices[final_vert_cnt++] = 2.0;\r\n            vertices[final_vert_cnt++] = 0.0;\r\n            vertices[final_vert_cnt++] = endX;\r\n            vertices[final_vert_cnt++] = endY;\r\n            vertices[final_vert_cnt++] = 1;\r\n            vertices[final_vert_cnt++] = 2.0;\r\n            vertices[final_vert_cnt++] = 0.0;\r\n        }\r\n        else {\r\n            vertices[final_vert_cnt++] = startX;\r\n            vertices[final_vert_cnt++] = startY;\r\n            vertices[final_vert_cnt++] = tri_type;\r\n            vertices[final_vert_cnt++] = 1.0;\r\n            vertices[final_vert_cnt++] = 1.0;\r\n            vertices[final_vert_cnt++] = controlX;\r\n            vertices[final_vert_cnt++] = controlY;\r\n            vertices[final_vert_cnt++] = tri_type;\r\n            vertices[final_vert_cnt++] = 0.5;\r\n            vertices[final_vert_cnt++] = 0.0;\r\n            vertices[final_vert_cnt++] = endX;\r\n            vertices[final_vert_cnt++] = endY;\r\n            vertices[final_vert_cnt++] = tri_type;\r\n            vertices[final_vert_cnt++] = 0.0;\r\n            vertices[final_vert_cnt++] = 0.0;\r\n        }\r\n    };\r\n    GraphicsFactoryHelper.createCap = function (startX, startY, start_le, start_ri, dir_vec, capstyle, cap_position, thickness, vertices) {\r\n        if (capstyle == CapsStyle_1.CapsStyle.ROUND) {\r\n            //console.log(\"add round cap\");\r\n            var tmp1_x = startX + (cap_position * (dir_vec.x * thickness));\r\n            var tmp1_y = startY + (cap_position * (dir_vec.y * thickness));\r\n            tmp1_x = tmp1_x * 2 - start_le.x / 2 - start_ri.x / 2;\r\n            tmp1_y = tmp1_y * 2 - start_le.y / 2 - start_ri.y / 2;\r\n            GraphicsFactoryHelper.addTriangle(start_le.x, start_le.y, tmp1_x, tmp1_y, start_ri.x, start_ri.y, -1, vertices);\r\n        }\r\n        else if (capstyle == CapsStyle_1.CapsStyle.SQUARE) {\r\n            //console.log(\"add square cap\");\r\n            var tmp1_x = start_le.x + (cap_position * (dir_vec.x * thickness));\r\n            var tmp1_y = start_le.y + (cap_position * (dir_vec.y * thickness));\r\n            var tmp2_x = start_ri.x + (cap_position * (dir_vec.x * thickness));\r\n            var tmp2_y = start_ri.y + (cap_position * (dir_vec.y * thickness));\r\n            GraphicsFactoryHelper.addTriangle(tmp2_x, tmp2_y, tmp1_x, tmp1_y, start_le.x, start_le.y, 0, vertices);\r\n            GraphicsFactoryHelper.addTriangle(tmp2_x, tmp2_y, start_le.x, start_le.y, start_ri.x, start_ri.y, 0, vertices);\r\n        }\r\n    };\r\n    GraphicsFactoryHelper.getLineFormularData = function (a, b) {\r\n        var tmp_x = b.x - a.x;\r\n        var tmp_y = b.y - a.y;\r\n        var return_point = new Point_1.Point();\r\n        if ((tmp_x != 0) && (tmp_y != 0))\r\n            return_point.x = tmp_y / tmp_x;\r\n        return_point.y = -(return_point.x * a.x - a.y);\r\n        return return_point;\r\n    };\r\n    GraphicsFactoryHelper.getQuadricBezierPosition = function (t, start, control, end) {\r\n        var xt = 1 - t;\r\n        return xt * xt * start + 2 * xt * t * control + t * t * end;\r\n    };\r\n    GraphicsFactoryHelper.subdivideCurve = function (startx, starty, cx, cy, endx, endy, startx2, starty2, cx2, cy2, endx2, endy2, array_out, array2_out) {\r\n        var angle_1 = Math.atan2(cy - starty, cx - startx) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n        var angle_2 = Math.atan2(endy - cy, endx - cx) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n        var angle_delta = angle_2 - angle_1;\r\n        //console.log(\"angle_delta \"+angle_delta);\r\n        if (angle_delta > 180) {\r\n            angle_delta -= 360;\r\n        }\r\n        if (angle_delta < -180) {\r\n            angle_delta += 360;\r\n        }\r\n        if (Math.abs(angle_delta) >= 150) {\r\n            array_out.push(startx, starty, cx, cy, endx, endy);\r\n            array2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\r\n            return;\r\n        }\r\n        var b1 = false;\r\n        var b2 = false;\r\n        if (angle_delta < 0) {\r\n            // curve is curved to right side. right side is convex\r\n            b1 = GraphicsFactoryHelper.getSign(startx, starty, cx2, cy2, endx, endy) > 0;\r\n            b2 = GraphicsFactoryHelper.getSign(startx, starty, cx, cy, endx, endy) > 0;\r\n            b1 = (((starty - endy) * (cx - startx) + (endx - startx) * (cy - starty)) * ((starty - endy) * (cx2 - startx) + (endx - startx) * (cy2 - starty))) < 0;\r\n        }\r\n        else {\r\n            // curve is curved to left side. left side is convex\r\n            b1 = GraphicsFactoryHelper.getSign(startx2, starty2, cx2, cy2, endx2, endy2) > 0;\r\n            b2 = GraphicsFactoryHelper.getSign(startx2, starty2, cx, cy, endx2, endy2) > 0;\r\n            b1 = (((starty2 - endy) * (cx - startx2) + (endx2 - startx2) * (cy - starty2)) * ((starty2 - endy2) * (cx2 - startx2) + (endx2 - startx2) * (cy2 - starty2))) < 0;\r\n        }\r\n        if (b1) {\r\n            array_out.push(startx, starty, cx, cy, endx, endy);\r\n            array2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\r\n            return;\r\n        }\r\n        // triangles overlap. we must subdivide:\r\n        var c1x = startx + (cx - startx) * 0.5; // new controlpoint 1.1\r\n        var c1y = starty + (cy - starty) * 0.5;\r\n        var c2x = cx + (endx - cx) * 0.5; // new controlpoint 1.2\r\n        var c2y = cy + (endy - cy) * 0.5;\r\n        var ax = c1x + (c2x - c1x) * 0.5; // new middlepoint 1\r\n        var ay = c1y + (c2y - c1y) * 0.5;\r\n        var c1x2 = startx2 + (cx2 - startx2) * 0.5; // new controlpoint 2.1\r\n        var c1y2 = starty2 + (cy2 - starty2) * 0.5;\r\n        var c2x2 = cx2 + (endx2 - cx2) * 0.5; // new controlpoint 2.2\r\n        var c2y2 = cy2 + (endy2 - cy2) * 0.5;\r\n        var ax2 = c1x2 + (c2x2 - c1x2) * 0.5; // new middlepoint 2\r\n        var ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\r\n        GraphicsFactoryHelper.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\r\n        GraphicsFactoryHelper.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\r\n    };\r\n    return GraphicsFactoryHelper;\r\n}());\r\nexports.GraphicsFactoryHelper = GraphicsFactoryHelper;\r\n},{\"../draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsFactoryStrokes\":[function(require,module,exports){\n\"use strict\";\r\nvar MathConsts_1 = require(\"awayjs-core/lib/geom/MathConsts\");\r\nvar JointStyle_1 = require(\"../draw/JointStyle\");\r\nvar GraphicsPathCommand_1 = require(\"../draw/GraphicsPathCommand\");\r\nvar DefaultMaterialManager_1 = require(\"../managers/DefaultMaterialManager\");\r\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\r\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\r\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nvar GraphicsFactoryHelper_1 = require(\"../draw/GraphicsFactoryHelper\");\r\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nvar GraphicsFactoryStrokes = (function () {\r\n    function GraphicsFactoryStrokes() {\r\n    }\r\n    GraphicsFactoryStrokes.draw_pathes = function (targetGraphic) {\r\n        var len = targetGraphic.queued_stroke_pathes.length;\r\n        var contour_commands;\r\n        var contour_data;\r\n        var strokeStyle;\r\n        var one_path;\r\n        var commands;\r\n        var data;\r\n        var i = 0;\r\n        var k = 0;\r\n        var vert_cnt = 0;\r\n        var data_cnt = 0;\r\n        var final_vert_list = [];\r\n        var final_vert_cnt = 0;\r\n        var lastPoint = new Point_1.Point();\r\n        var start_point = new Point_1.Point();\r\n        var end_point = new Point_1.Point();\r\n        var start_left = new Point_1.Point();\r\n        var start_right = new Point_1.Point();\r\n        var ctr_left = new Point_1.Point();\r\n        var ctr_right = new Point_1.Point();\r\n        var ctr_left2 = new Point_1.Point();\r\n        var ctr_right2 = new Point_1.Point();\r\n        var end_left = new Point_1.Point();\r\n        var end_right = new Point_1.Point();\r\n        var tmp_point = new Point_1.Point();\r\n        var tmp_point2 = new Point_1.Point();\r\n        var tmp_point3 = new Point_1.Point();\r\n        var closed = false;\r\n        var last_dir_vec = new Point_1.Point();\r\n        var cp = 0;\r\n        for (cp = 0; cp < len; cp++) {\r\n            one_path = targetGraphic.queued_stroke_pathes[cp];\r\n            contour_commands = one_path.commands;\r\n            contour_data = one_path.data;\r\n            strokeStyle = one_path.stroke();\r\n            var tessVerts = [];\r\n            for (k = 0; k < contour_commands.length; k++) {\r\n                commands = contour_commands[k];\r\n                data = contour_data[k];\r\n                vert_cnt = 0;\r\n                data_cnt = 0;\r\n                var new_dir = 0;\r\n                var dir_delta = 0;\r\n                var last_direction = 0;\r\n                var tmp_dir_point = new Point_1.Point();\r\n                closed = true;\r\n                if ((data[0] != data[data.length - 2]) || (data[1] != data[data.length - 1]))\r\n                    closed = false;\r\n                else {\r\n                    last_dir_vec.x = data[data.length - 2] - data[data.length - 4];\r\n                    last_dir_vec.y = data[data.length - 1] - data[data.length - 3];\r\n                    last_dir_vec.normalize();\r\n                    last_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n                }\r\n                data_cnt = 0;\r\n                lastPoint.x = data[data_cnt++];\r\n                lastPoint.y = data[data_cnt++];\r\n                var new_cmds = [];\r\n                var new_pnts = [];\r\n                var new_cmds_cnt = 0;\r\n                var new_pnts_cnt = 0;\r\n                var prev_normal = new Point_1.Point();\r\n                var le_point = new Point_1.Point();\r\n                var curve_end_point = new Point_1.Point();\r\n                var ri_point = new Point_1.Point();\r\n                var ctr_point = new Point_1.Point();\r\n                prev_normal.x = -1 * last_dir_vec.y;\r\n                prev_normal.y = last_dir_vec.x;\r\n                for (i = 1; i < commands.length; i++) {\r\n                    if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO) {\r\n                        console.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\r\n                        continue;\r\n                    }\r\n                    //console.log(\"\");\r\n                    //console.log(\"segment \"+i+\"lastPoint x = \"+lastPoint.x+\" y = \"+lastPoint.y)\r\n                    end_point = new Point_1.Point(data[data_cnt++], data[data_cnt++]);\r\n                    //console.log(\"segment \"+i+\"end_point x = \"+end_point.x+\" y = \"+end_point.y)\r\n                    if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\r\n                        curve_end_point = new Point_1.Point(data[data_cnt++], data[data_cnt++]);\r\n                    }\r\n                    //get the directional vector and the direction for this segment\r\n                    tmp_dir_point.x = end_point.x - lastPoint.x;\r\n                    tmp_dir_point.y = end_point.y - lastPoint.y;\r\n                    tmp_dir_point.normalize();\r\n                    new_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n                    // get the difference in angle to the last segment\r\n                    dir_delta = new_dir - last_direction;\r\n                    if (dir_delta > 180) {\r\n                        dir_delta -= 360;\r\n                    }\r\n                    if (dir_delta < -180) {\r\n                        dir_delta += 360;\r\n                    }\r\n                    last_direction = new_dir;\r\n                    //console.log(\"segment \"+i+\" direction: \"+dir_delta);\r\n                    // rotate direction around 90 degree\r\n                    tmp_point.x = -1 * tmp_dir_point.y;\r\n                    tmp_point.y = tmp_dir_point.x;\r\n                    ri_point = new Point_1.Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\r\n                    le_point = new Point_1.Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\r\n                    var add_segment = false;\r\n                    // check if this is the first segment, and the path is not closed\r\n                    // in this case, we can just set the points to the contour points\r\n                    if ((i == 1) && (!closed)) {\r\n                        //console.log(\"segment \"+i+\"Path is not closed, we can just add the first segment\")\r\n                        add_segment = true;\r\n                    }\r\n                    else {\r\n                        // we need to figure out if we need to add a joint or not\r\n                        if ((dir_delta == 0) || (dir_delta == 180)) {\r\n                            // check if this and the prev segment was a line. if yes, than they can be merged\r\n                            if ((i != 1) && (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) && (new_cmds[new_cmds.length - 1] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO)) {\r\n                                //console.log(\"straight line can be merged in prev straight line\");\r\n                                add_segment = false;\r\n                            }\r\n                            else {\r\n                                add_segment = true;\r\n                            }\r\n                        }\r\n                        if (dir_delta == 180) {\r\n                            console.log(\"path goes straight back (180�). DO we need to handle this edge case different ? !\");\r\n                        }\r\n                        else if (dir_delta != 0) {\r\n                            add_segment = true;\r\n                            var half_angle = (180 - (dir_delta));\r\n                            if (dir_delta < 0) {\r\n                                half_angle = (-180 - (dir_delta));\r\n                            }\r\n                            half_angle = half_angle * -0.5 * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\r\n                            var distance = strokeStyle.half_thickness / Math.sin(half_angle);\r\n                            tmp_point2.x = tmp_dir_point.x * Math.cos(half_angle) + tmp_dir_point.y * Math.sin(half_angle);\r\n                            tmp_point2.y = tmp_dir_point.y * Math.cos(half_angle) - tmp_dir_point.x * Math.sin(half_angle);\r\n                            tmp_point2.normalize();\r\n                            var merged_pnt_ri = new Point_1.Point(lastPoint.x - (tmp_point2.x * distance), lastPoint.y - (tmp_point2.y * distance));\r\n                            var merged_pnt_le = new Point_1.Point(lastPoint.x + (tmp_point2.x * distance), lastPoint.y + (tmp_point2.y * distance));\r\n                            if (dir_delta > 0) {\r\n                                ri_point = merged_pnt_ri;\r\n                                var contour_le = new Point_1.Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\r\n                                var contour_prev_le = new Point_1.Point(lastPoint.x - (prev_normal.x * strokeStyle.half_thickness), lastPoint.y - (prev_normal.y * strokeStyle.half_thickness));\r\n                                le_point = contour_le;\r\n                            }\r\n                            else {\r\n                                le_point = merged_pnt_le;\r\n                                var contour_ri = new Point_1.Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\r\n                                var contour_prev_ri = new Point_1.Point(lastPoint.x + (prev_normal.x * strokeStyle.half_thickness), lastPoint.y + (prev_normal.y * strokeStyle.half_thickness));\r\n                                ri_point = contour_ri;\r\n                            }\r\n                            var addJoints = true;\r\n                            if (strokeStyle.jointstyle == JointStyle_1.JointStyle.MITER) {\r\n                                var distance_miter = (Math.sqrt((distance * distance) - (strokeStyle.half_thickness * strokeStyle.half_thickness)) / strokeStyle.half_thickness);\r\n                                if (distance_miter <= strokeStyle.miter_limit) {\r\n                                    addJoints = false;\r\n                                    ri_point = merged_pnt_ri;\r\n                                    le_point = merged_pnt_le;\r\n                                }\r\n                                else {\r\n                                    if (dir_delta > 0) {\r\n                                        contour_le.x = contour_le.x - (tmp_dir_point.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\r\n                                        contour_le.y = contour_le.y - (tmp_dir_point.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\r\n                                        tmp_point3.x = prev_normal.y * -1;\r\n                                        tmp_point3.y = prev_normal.x;\r\n                                        contour_prev_le.x = contour_prev_le.x - (tmp_point3.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\r\n                                        contour_prev_le.y = contour_prev_le.y - (tmp_point3.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\r\n                                    }\r\n                                    else {\r\n                                        contour_ri.x = contour_ri.x - (tmp_dir_point.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\r\n                                        contour_ri.y = contour_ri.y - (tmp_dir_point.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\r\n                                        tmp_point3.x = prev_normal.y * -1;\r\n                                        tmp_point3.y = prev_normal.x;\r\n                                        contour_prev_ri.x = contour_prev_ri.x - (tmp_point3.x * (strokeStyle.miter_limit * strokeStyle.half_thickness));\r\n                                        contour_prev_ri.y = contour_prev_ri.y - (tmp_point3.y * (strokeStyle.miter_limit * strokeStyle.half_thickness));\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (addJoints) {\r\n                                new_cmds[new_cmds_cnt++] = (strokeStyle.jointstyle != JointStyle_1.JointStyle.ROUND) ? GraphicsPathCommand_1.GraphicsPathCommand.BUILD_JOINT : GraphicsPathCommand_1.GraphicsPathCommand.BUILD_ROUND_JOINT;\r\n                                if (dir_delta > 0) {\r\n                                    new_pnts[new_pnts_cnt++] = merged_pnt_ri;\r\n                                    new_pnts[new_pnts_cnt++] = contour_prev_le;\r\n                                    new_pnts[new_pnts_cnt++] = contour_le;\r\n                                }\r\n                                else {\r\n                                    new_pnts[new_pnts_cnt++] = contour_prev_ri;\r\n                                    new_pnts[new_pnts_cnt++] = merged_pnt_le;\r\n                                    new_pnts[new_pnts_cnt++] = contour_ri;\r\n                                }\r\n                                if (strokeStyle.jointstyle == JointStyle_1.JointStyle.ROUND) {\r\n                                    new_pnts[new_pnts_cnt++] = new Point_1.Point(lastPoint.x - (tmp_point2.x * Math.abs(distance)), lastPoint.y - (tmp_point2.y * Math.abs(distance)));\r\n                                    if (dir_delta > 0) {\r\n                                        new_pnts[new_pnts_cnt++] = contour_prev_le;\r\n                                        new_pnts[new_pnts_cnt++] = contour_le;\r\n                                    }\r\n                                    else {\r\n                                        new_pnts[new_pnts_cnt++] = contour_prev_ri;\r\n                                        new_pnts[new_pnts_cnt++] = contour_ri;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    prev_normal.x = tmp_point.x;\r\n                    prev_normal.y = tmp_point.y;\r\n                    if (add_segment) {\r\n                        if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\r\n                            new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO;\r\n                            new_pnts[new_pnts_cnt++] = ri_point;\r\n                            new_pnts[new_pnts_cnt++] = le_point;\r\n                        }\r\n                        else if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\r\n                            tmp_dir_point.x = curve_end_point.x - end_point.x;\r\n                            tmp_dir_point.y = curve_end_point.y - end_point.y;\r\n                            tmp_dir_point.normalize();\r\n                            new_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n                            dir_delta = new_dir - last_direction;\r\n                            last_direction = new_dir;\r\n                            tmp_point.x = -1 * tmp_dir_point.y;\r\n                            tmp_point.y = tmp_dir_point.x;\r\n                            if ((dir_delta != 0) && (dir_delta != 180)) {\r\n                                new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO;\r\n                                new_pnts[new_pnts_cnt++] = ri_point;\r\n                                new_pnts[new_pnts_cnt++] = le_point;\r\n                                new_pnts[new_pnts_cnt++] = new Point_1.Point(lastPoint.x, lastPoint.y);\r\n                                new_pnts[new_pnts_cnt++] = new Point_1.Point(end_point.x, end_point.y);\r\n                                new_pnts[new_pnts_cnt++] = curve_end_point;\r\n                            }\r\n                            else {\r\n                                new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO;\r\n                                new_pnts[new_pnts_cnt++] = ri_point;\r\n                                new_pnts[new_pnts_cnt++] = le_point;\r\n                            }\r\n                            prev_normal.x = tmp_point.x;\r\n                            prev_normal.y = tmp_point.y;\r\n                            lastPoint = curve_end_point;\r\n                        }\r\n                    }\r\n                    if (commands[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\r\n                        lastPoint = end_point;\r\n                    }\r\n                    if (i == commands.length - 1) {\r\n                        if (!closed) {\r\n                            new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.NO_OP;\r\n                            new_pnts[new_pnts_cnt++] = new Point_1.Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\r\n                            new_pnts[new_pnts_cnt++] = new Point_1.Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\r\n                        }\r\n                        else {\r\n                            new_cmds[new_cmds_cnt++] = GraphicsPathCommand_1.GraphicsPathCommand.NO_OP;\r\n                            new_pnts[new_pnts_cnt++] = new_pnts[0];\r\n                            new_pnts[new_pnts_cnt++] = new_pnts[1];\r\n                        }\r\n                    }\r\n                }\r\n                // first we draw all the curves:\r\n                new_cmds_cnt = 0;\r\n                new_pnts_cnt = 0;\r\n                for (i = 0; i < new_cmds.length; i++) {\r\n                    if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\r\n                        new_pnts_cnt += 2;\r\n                    }\r\n                    else if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\r\n                        start_right = new_pnts[new_pnts_cnt++];\r\n                        start_left = new_pnts[new_pnts_cnt++];\r\n                        start_point = new_pnts[new_pnts_cnt++];\r\n                        ctr_point = new_pnts[new_pnts_cnt++];\r\n                        end_point = new_pnts[new_pnts_cnt++];\r\n                        end_right = new_pnts[new_pnts_cnt];\r\n                        end_left = new_pnts[new_pnts_cnt + 1];\r\n                        // get the directional vector for the first part of the curve\r\n                        tmp_dir_point.x = ctr_point.x - start_point.x;\r\n                        tmp_dir_point.y = ctr_point.y - start_point.y;\r\n                        tmp_point3.x = ctr_point.x - start_point.x;\r\n                        tmp_point3.y = ctr_point.y - start_point.y;\r\n                        var length1 = tmp_point3.length;\r\n                        tmp_dir_point.normalize();\r\n                        // get the directional vector for the second part of the curve\r\n                        tmp_point2.x = end_point.x - ctr_point.x;\r\n                        tmp_point2.y = end_point.y - ctr_point.y;\r\n                        var length2 = tmp_point2.length;\r\n                        tmp_point2.normalize();\r\n                        var length_calc = 0.5 - ((length2 - length1) / length1) * 0.5;\r\n                        if (length1 > length2) {\r\n                            length_calc = 0.5 + ((length1 - length2) / length2) * 0.5;\r\n                        }\r\n                        // get angle to positive x-axis for both dir-vectors, than get the difference between those\r\n                        var angle_1 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n                        var angle_2 = Math.atan2(tmp_point2.y, tmp_point2.x) * MathConsts_1.MathConsts.RADIANS_TO_DEGREES;\r\n                        dir_delta = angle_2 - angle_1;\r\n                        if (dir_delta > 180) {\r\n                            dir_delta -= 360;\r\n                        }\r\n                        if (dir_delta < -180) {\r\n                            dir_delta += 360;\r\n                        }\r\n                        if (dir_delta == 0) {\r\n                            console.log(\"This is not a curve, we can just draw it like a straight line\");\r\n                        }\r\n                        //console.log(\"segment : '\"+i+\"' direction:\"+dir_delta);\r\n                        var dirNumber = 1;\r\n                        if (dir_delta < 0) {\r\n                            dirNumber = -1;\r\n                        }\r\n                        var half_angle = dir_delta * 0.5 * MathConsts_1.MathConsts.DEGREES_TO_RADIANS;\r\n                        var lengthpos = Math.abs(length1 * Math.sin(half_angle));\r\n                        var distance = strokeStyle.half_thickness / Math.sin(half_angle);\r\n                        tmp_point3.x = tmp_point2.x * Math.cos(half_angle) + tmp_point2.y * Math.sin(half_angle);\r\n                        tmp_point3.y = tmp_point2.y * Math.cos(half_angle) - tmp_point2.x * Math.sin(half_angle);\r\n                        tmp_point3.normalize();\r\n                        var merged_pnt_ri = new Point_1.Point(ctr_point.x - (tmp_point3.x * distance), ctr_point.y - (tmp_point3.y * distance));\r\n                        var merged_pnt_le = new Point_1.Point(ctr_point.x + (tmp_point3.x * distance), ctr_point.y + (tmp_point3.y * distance));\r\n                        var curve_x = GraphicsFactoryHelper_1.GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.x, ctr_point.x, end_point.x);\r\n                        var curve_y = GraphicsFactoryHelper_1.GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.y, ctr_point.y, end_point.y);\r\n                        var curve_2x = GraphicsFactoryHelper_1.GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.x, ctr_point.x, end_point.x);\r\n                        var curve_2y = GraphicsFactoryHelper_1.GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.y, ctr_point.y, end_point.y);\r\n                        tmp_point3.x = -1 * (curve_y - curve_2y);\r\n                        tmp_point3.y = curve_x - curve_2x;\r\n                        tmp_point3.normalize();\r\n                        //GraphicsFactoryHelper.drawPoint(curve_x,curve_y, final_vert_list);\r\n                        // move the point on the curve to use correct thickness\r\n                        ctr_right.x = curve_x + (dirNumber * tmp_point3.x * strokeStyle.half_thickness);\r\n                        ctr_right.y = curve_y + (dirNumber * tmp_point3.y * strokeStyle.half_thickness);\r\n                        ctr_left.x = curve_x - (dirNumber * tmp_point3.x * strokeStyle.half_thickness);\r\n                        ctr_left.y = curve_y - (dirNumber * tmp_point3.y * strokeStyle.half_thickness);\r\n                        //GraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\r\n                        //GraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\r\n                        // calculate the actual controlpoints\r\n                        ctr_right.x = ctr_right.x * 2 - start_right.x / 2 - end_right.x / 2;\r\n                        ctr_right.y = ctr_right.y * 2 - start_right.y / 2 - end_right.y / 2;\r\n                        ctr_left.x = ctr_left.x * 2 - start_left.x / 2 - end_left.x / 2;\r\n                        ctr_left.y = ctr_left.y * 2 - start_left.y / 2 - end_left.y / 2;\r\n                        //ctr_right=merged_pnt_ri;\r\n                        //ctr_left=merged_pnt_le;\r\n                        /*\r\n                        // controlpoints version2:\r\n                        tmp_dir_point.x = start_left.x-start_right.x;\r\n                        tmp_dir_point.y = start_left.y-start_right.y;\r\n                        tmp_point2.x = end_left.x-end_right.x;\r\n                        tmp_point2.y = end_left.y-end_right.y;\r\n\r\n                        ctr_right.x = ctr_point.x-(tmp_dir_point.x/2);\r\n                        ctr_right.y = ctr_point.y-(tmp_dir_point.y/2);\r\n                        var new_end_ri:Point = new Point(end_point.x+(tmp_dir_point.x/2), end_point.y+(tmp_dir_point.y/2));\r\n\r\n                        ctr_left.x = ctr_point.x+(tmp_dir_point.x/2);\r\n                        ctr_left.y = ctr_point.y+(tmp_dir_point.y/2);\r\n                        var new_end_le:Point = new Point(end_point.x-(tmp_dir_point.x/2), end_point.y-(tmp_dir_point.y/2));\r\n                        */\r\n                        /*\r\n                                                GraphicsFactoryHelper.drawPoint(start_right.x, start_right.y , final_vert_list);\r\n                                                GraphicsFactoryHelper.drawPoint(start_left.x, start_left.y , final_vert_list);\r\n                                                GraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\r\n                                                GraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\r\n                                                GraphicsFactoryHelper.drawPoint(end_right.x, end_right.y , final_vert_list);\r\n                                                GraphicsFactoryHelper.drawPoint(end_left.x, end_left.y , final_vert_list);\r\n                        */\r\n                        var subdivided = [];\r\n                        var subdivided2 = [];\r\n                        GraphicsFactoryHelper_1.GraphicsFactoryHelper.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\r\n                        if (dir_delta > 0) {\r\n                            for (var sc = 0; sc < subdivided.length / 6; sc++) {\r\n                                // right curved\r\n                                // concave curves:\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 1, final_vert_list);\r\n                                // fills\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 0, final_vert_list);\r\n                                // convex curves:\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], -1, final_vert_list);\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (var sc = 0; sc < subdivided.length / 6; sc++) {\r\n                                // left curved\r\n                                // convex curves:\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], -1, final_vert_list);\r\n                                // fills\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 0, final_vert_list);\r\n                                // concave curves:\r\n                                GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 1, final_vert_list);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (new_cmds[i] >= GraphicsPathCommand_1.GraphicsPathCommand.BUILD_JOINT) {\r\n                        new_pnts_cnt += 3;\r\n                        //GraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\r\n                        if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.BUILD_ROUND_JOINT) {\r\n                            end_left = new_pnts[new_pnts_cnt++]; // concave curves:\r\n                            start_right = new_pnts[new_pnts_cnt++];\r\n                            start_left = new_pnts[new_pnts_cnt++];\r\n                            //console.log(\"add round tri\");\r\n                            GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(start_right.x, start_right.y, end_left.x, end_left.y, start_left.x, start_left.y, -1, final_vert_list);\r\n                        }\r\n                    }\r\n                }\r\n                // now we draw all the normal triangles.\r\n                // we do it in 2 steps, to prevent curves cut anything out of underlying normal tris\r\n                new_cmds_cnt = 0;\r\n                new_pnts_cnt = 0;\r\n                for (i = 0; i < new_cmds.length; i++) {\r\n                    if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO) {\r\n                        start_right = new_pnts[new_pnts_cnt++];\r\n                        start_left = new_pnts[new_pnts_cnt++];\r\n                        end_right = new_pnts[new_pnts_cnt];\r\n                        end_left = new_pnts[new_pnts_cnt + 1];\r\n                        GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(start_right.x, start_right.y, start_left.x, start_left.y, end_right.x, end_right.y, 0, final_vert_list);\r\n                        GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(start_left.x, start_left.y, end_left.x, end_left.y, end_right.x, end_right.y, 0, final_vert_list);\r\n                    }\r\n                    else if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO) {\r\n                        new_pnts_cnt += 5;\r\n                    }\r\n                    else if (new_cmds[i] >= GraphicsPathCommand_1.GraphicsPathCommand.BUILD_JOINT) {\r\n                        end_right = new_pnts[new_pnts_cnt++];\r\n                        start_right = new_pnts[new_pnts_cnt++];\r\n                        start_left = new_pnts[new_pnts_cnt++];\r\n                        GraphicsFactoryHelper_1.GraphicsFactoryHelper.addTriangle(start_right.x, start_right.y, start_left.x, start_left.y, end_right.x, end_right.y, 0, final_vert_list);\r\n                        if (new_cmds[i] == GraphicsPathCommand_1.GraphicsPathCommand.BUILD_ROUND_JOINT) {\r\n                            new_pnts_cnt += 3;\r\n                        }\r\n                    }\r\n                }\r\n                if (!closed) {\r\n                    last_dir_vec.x = data[2] - data[0];\r\n                    last_dir_vec.y = data[3] - data[1];\r\n                    last_dir_vec.normalize();\r\n                    GraphicsFactoryHelper_1.GraphicsFactoryHelper.createCap(data[0], data[1], new_pnts[0], new_pnts[1], last_dir_vec, strokeStyle.capstyle, -1, strokeStyle.half_thickness, final_vert_list);\r\n                    last_dir_vec.x = data[data.length - 2] - data[data.length - 4];\r\n                    last_dir_vec.y = data[data.length - 1] - data[data.length - 3];\r\n                    last_dir_vec.normalize();\r\n                    GraphicsFactoryHelper_1.GraphicsFactoryHelper.createCap(data[data.length - 2], data[data.length - 1], new_pnts[new_pnts.length - 2], new_pnts[new_pnts.length - 1], last_dir_vec, strokeStyle.capstyle, 1, strokeStyle.half_thickness, final_vert_list);\r\n                }\r\n            }\r\n            //console.log(\"final_vert_cnt \"+(final_vert_cnt/5));\r\n            // todo: handle material / submesh settings, and check if a material / submesh already exists for this settings\r\n            var attributesView = new AttributesView_1.AttributesView(Float32Array, 5);\r\n            attributesView.set(final_vert_list);\r\n            var attributesBuffer = attributesView.attributesBuffer;\r\n            attributesView.dispose();\r\n            var elements = new TriangleElements_1.TriangleElements(attributesBuffer);\r\n            elements.setPositions(new Float2Attributes_1.Float2Attributes(attributesBuffer));\r\n            elements.setCustomAttributes(\"curves\", new Float3Attributes_1.Float3Attributes(attributesBuffer));\r\n            //elements.setUVs(new Float2Attributes(attributesBuffer));\r\n            //curve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n            var material = DefaultMaterialManager_1.DefaultMaterialManager.getDefaultMaterial();\r\n            material.bothSides = true;\r\n            material.useColorTransform = true;\r\n            material.curves = true;\r\n            targetGraphic.addGraphic(elements, material);\r\n        }\r\n        targetGraphic.queued_stroke_pathes.length = 0;\r\n    };\r\n    return GraphicsFactoryStrokes;\r\n}());\r\nexports.GraphicsFactoryStrokes = GraphicsFactoryStrokes;\r\n},{\"../draw/GraphicsFactoryHelper\":\"awayjs-display/lib/draw/GraphicsFactoryHelper\",\"../draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"../draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/geom/MathConsts\":undefined,\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsFillStyle\":[function(require,module,exports){\n\"use strict\";\r\nvar GraphicsFillStyle = (function () {\r\n    function GraphicsFillStyle(color, alpha) {\r\n        if (color === void 0) { color = 0xffffff; }\r\n        if (alpha === void 0) { alpha = 1; }\r\n        this._color = color;\r\n        this._alpha = alpha;\r\n    }\r\n    Object.defineProperty(GraphicsFillStyle.prototype, \"data_type\", {\r\n        get: function () {\r\n            return GraphicsFillStyle.data_type;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphicsFillStyle.data_type = \"[graphicsdata FillStyle]\";\r\n    return GraphicsFillStyle;\r\n}());\r\nexports.GraphicsFillStyle = GraphicsFillStyle;\r\n},{}],\"awayjs-display/lib/draw/GraphicsPathCommand\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * Defines the values to use for specifying path-drawing commands.\r\n * The values in this class are used by the Graphics.drawPath() method,\r\n *or stored in the commands vector of a GraphicsPath object.\r\n */\r\nvar GraphicsPathCommand = (function () {\r\n    function GraphicsPathCommand() {\r\n    }\r\n    /**\r\n     * Represents the default \"do nothing\" command.\r\n     */\r\n    GraphicsPathCommand.NO_OP = 0;\r\n    /**\r\n     * Specifies a drawing command that moves the current drawing position\r\n     * to the x- and y-coordinates specified in the data vector.\r\n     */\r\n    GraphicsPathCommand.MOVE_TO = 1;\r\n    /**\r\n     * Specifies a drawing command that draws a line from the current drawing position\r\n     * to the x- and y-coordinates specified in the data vector.\r\n     */\r\n    GraphicsPathCommand.LINE_TO = 2;\r\n    /**\r\n     *  Specifies a drawing command that draws a curve from the current drawing position\r\n     *  to the x- and y-coordinates specified in the data vector, using a control point.\r\n     */\r\n    GraphicsPathCommand.CURVE_TO = 3;\r\n    /**\r\n     *  Specifies a drawing command that draws a curve from the current drawing position\r\n     *  to the x- and y-coordinates specified in the data vector, using a control point.\r\n     */\r\n    GraphicsPathCommand.BUILD_JOINT = 13;\r\n    GraphicsPathCommand.BUILD_ROUND_JOINT = 14;\r\n    /**\r\n     * Specifies a \"line to\" drawing command,\r\n     * but uses two sets of coordinates (four values) instead of one set.\r\n     */\r\n    GraphicsPathCommand.WIDE_LINE_TO = 4;\r\n    /**\r\n     *   Specifies a \"move to\" drawing command,\r\n     *   but uses two sets of coordinates (four values) instead of one set.\r\n     */\r\n    GraphicsPathCommand.WIDE_MOVE_TO = 5;\r\n    /**\r\n     * Specifies a drawing command that draws a curve from the current drawing position\r\n     * to the x- and y-coordinates specified in the data vector, using 2 control points.\r\n     */\r\n    GraphicsPathCommand.CUBIC_CURVE = 6;\r\n    return GraphicsPathCommand;\r\n}());\r\nexports.GraphicsPathCommand = GraphicsPathCommand;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = GraphicsPathCommand;\r\n},{}],\"awayjs-display/lib/draw/GraphicsPathWinding\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nvar GraphicsPathWinding = (function () {\r\n    function GraphicsPathWinding() {\r\n    }\r\n    GraphicsPathWinding.EVEN_ODD = \"evenOdd\";\r\n    GraphicsPathWinding.NON_ZERO = \"nonZero\";\r\n    return GraphicsPathWinding;\r\n}());\r\nexports.GraphicsPathWinding = GraphicsPathWinding;\r\n},{}],\"awayjs-display/lib/draw/GraphicsPath\":[function(require,module,exports){\n\"use strict\";\r\nvar GraphicsPathWinding_1 = require(\"../draw/GraphicsPathWinding\");\r\nvar GraphicsPathCommand_1 = require(\"../draw/GraphicsPathCommand\");\r\nvar GraphicsFillStyle_1 = require(\"../draw/GraphicsFillStyle\");\r\nvar GraphicsStrokeStyle_1 = require(\"../draw/GraphicsStrokeStyle\");\r\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\r\n/**\r\n\r\n * Defines the values to use for specifying path-drawing commands.\r\n * The values in this class are used by the Graphics.drawPath() method,\r\n *or stored in the commands vector of a GraphicsPath object.\r\n */\r\nvar GraphicsPath = (function () {\r\n    function GraphicsPath(commands, data, winding_rule) {\r\n        if (commands === void 0) { commands = null; }\r\n        if (data === void 0) { data = null; }\r\n        if (winding_rule === void 0) { winding_rule = GraphicsPathWinding_1.GraphicsPathWinding.EVEN_ODD; }\r\n        this._data = [];\r\n        this._commands = [];\r\n        this._style = null;\r\n        if (commands != null && data != null) {\r\n            this._data[0] = data;\r\n            this._commands[0] = commands;\r\n        }\r\n        else {\r\n            this._data[0] = [];\r\n            this._commands[0] = [];\r\n        }\r\n        this._startPoint = new Point_1.Point();\r\n        this._cur_point = new Point_1.Point();\r\n        this._winding_rule = winding_rule;\r\n        this._winding_directions = [];\r\n    }\r\n    Object.defineProperty(GraphicsPath.prototype, \"data_type\", {\r\n        get: function () {\r\n            return GraphicsPath.data_type;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphicsPath.prototype, \"style\", {\r\n        get: function () {\r\n            return this._style;\r\n        },\r\n        set: function (value) {\r\n            this._style = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphicsPath.prototype.fill = function () {\r\n        if (this._style == null)\r\n            return null;\r\n        if (this._style.data_type == GraphicsFillStyle_1.GraphicsFillStyle.data_type)\r\n            return this._style;\r\n        return null;\r\n    };\r\n    GraphicsPath.prototype.stroke = function () {\r\n        if (this._style == null)\r\n            return null;\r\n        if (this._style.data_type == GraphicsStrokeStyle_1.GraphicsStrokeStyle.data_type)\r\n            return this._style;\r\n        return null;\r\n    };\r\n    Object.defineProperty(GraphicsPath.prototype, \"commands\", {\r\n        get: function () {\r\n            return this._commands;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphicsPath.prototype, \"data\", {\r\n        get: function () {\r\n            return this._data;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphicsPath.prototype.curveTo = function (controlX, controlY, anchorX, anchorY) {\r\n        if (this._commands[this._commands.length - 1].length == 0) {\r\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\r\n            this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO);\r\n            this._data[this._data.length - 1].push(this._cur_point.x);\r\n            this._data[this._data.length - 1].push(this._cur_point.y);\r\n        }\r\n        this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.GraphicsPathCommand.CURVE_TO);\r\n        /*\r\n         if(this.isFill){\r\n         this._tmp_point.x=anchorX-this._cur_point.x;\r\n         this._tmp_point.y=anchorY-this._cur_point.y;\r\n         this._tmp_point.normalize();\r\n\r\n         var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\r\n         testpoint.normalize();\r\n         var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\r\n         if(degree_anchor>180)degree_anchor-=360;\r\n         //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\r\n         this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\r\n         this._tmp_point.x=controlX-this._cur_point.x;\r\n         this._tmp_point.y=controlY-this._cur_point.y;\r\n         this._tmp_point.normalize();\r\n         //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\r\n         var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\r\n         if(degree_control>180)degree_control-=360;\r\n         //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\r\n         console.log(\"degree_control \"+degree_control);\r\n         console.log(\"degree_anchor \"+degree_anchor);\r\n         console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\r\n         this._direction.x=testpoint.x;\r\n         this._direction.y=testpoint.y;\r\n         if((degree_control)<0)\r\n         this._data[this._data.length-1].push(1);\r\n         else\r\n         this._data[this._data.length-1].push(2);\r\n\r\n         }\r\n         else{\r\n         this._data[this._data.length-1].push(1);\r\n         }\r\n         */\r\n        this._data[this._data.length - 1].push(controlX);\r\n        this._data[this._data.length - 1].push(controlY);\r\n        this._data[this._data.length - 1].push(anchorX);\r\n        this._data[this._data.length - 1].push(anchorY);\r\n        this._cur_point.x = anchorX;\r\n        this._cur_point.y = anchorY;\r\n    };\r\n    GraphicsPath.prototype.lineTo = function (x, y) {\r\n        if (this._commands[this._commands.length - 1].length == 0) {\r\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\r\n            this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO);\r\n            this._data[this._data.length - 1].push(this._cur_point.x);\r\n            this._data[this._data.length - 1].push(this._cur_point.y);\r\n        }\r\n        this._commands[this._commands.length - 1].push(GraphicsPathCommand_1.GraphicsPathCommand.LINE_TO);\r\n        this._data[this._data.length - 1].push(x);\r\n        this._data[this._data.length - 1].push(y);\r\n        this._cur_point.x = x;\r\n        this._cur_point.y = y;\r\n    };\r\n    GraphicsPath.prototype.moveTo = function (x, y) {\r\n        // whenever a moveTo command apears, we start a new contour\r\n        if (this._commands[this._commands.length - 1].length > 0) {\r\n            this._commands.push([GraphicsPathCommand_1.GraphicsPathCommand.MOVE_TO]);\r\n            this._data.push([x, y]);\r\n        }\r\n        this._startPoint.x = x;\r\n        this._startPoint.y = y;\r\n        this._cur_point.x = x;\r\n        this._cur_point.y = y;\r\n    };\r\n    GraphicsPath.prototype.wideLineTo = function (x, y) {\r\n        // not used\r\n        /*\r\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\r\n         this._data.push(0);\r\n         this._data.push(0);\r\n         this._data.push(x);\r\n         this._data.push(y);\r\n         */\r\n    };\r\n    GraphicsPath.prototype.wideMoveTo = function (x, y) {\r\n        // not used\r\n        /*\r\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\r\n         this._data.push(0);\r\n         this._data.push(0);\r\n         this._data.push(x);\r\n         this._data.push(y);\r\n         */\r\n    };\r\n    GraphicsPath.data_type = \"[graphicsdata path]\";\r\n    return GraphicsPath;\r\n}());\r\nexports.GraphicsPath = GraphicsPath;\r\n},{\"../draw/GraphicsFillStyle\":\"awayjs-display/lib/draw/GraphicsFillStyle\",\"../draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"../draw/GraphicsPathWinding\":\"awayjs-display/lib/draw/GraphicsPathWinding\",\"../draw/GraphicsStrokeStyle\":\"awayjs-display/lib/draw/GraphicsStrokeStyle\",\"awayjs-core/lib/geom/Point\":undefined}],\"awayjs-display/lib/draw/GraphicsStrokeStyle\":[function(require,module,exports){\n\"use strict\";\r\nvar JointStyle_1 = require(\"../draw/JointStyle\");\r\nvar CapsStyle_1 = require(\"../draw/CapsStyle\");\r\nvar GraphicsStrokeStyle = (function () {\r\n    function GraphicsStrokeStyle(color, alpha, thickness, jointstyle, capstyle, miter_limit) {\r\n        if (color === void 0) { color = 0xffffff; }\r\n        if (alpha === void 0) { alpha = 1; }\r\n        if (thickness === void 0) { thickness = 10; }\r\n        if (jointstyle === void 0) { jointstyle = JointStyle_1.JointStyle.ROUND; }\r\n        if (capstyle === void 0) { capstyle = CapsStyle_1.CapsStyle.SQUARE; }\r\n        if (miter_limit === void 0) { miter_limit = 10; }\r\n        this._color = color;\r\n        this._alpha = alpha;\r\n        this._thickness = thickness;\r\n        this._jointstyle = jointstyle;\r\n        this._capstyle = capstyle;\r\n        this._miter_limit = miter_limit;\r\n    }\r\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"data_type\", {\r\n        get: function () {\r\n            return GraphicsStrokeStyle.data_type;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"color\", {\r\n        get: function () {\r\n            return this._color;\r\n        },\r\n        set: function (value) {\r\n            this._color = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"alpha\", {\r\n        get: function () {\r\n            return this._alpha;\r\n        },\r\n        set: function (value) {\r\n            this._alpha = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"half_thickness\", {\r\n        get: function () {\r\n            return this._thickness / 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"thickness\", {\r\n        get: function () {\r\n            return this._thickness;\r\n        },\r\n        set: function (value) {\r\n            this._thickness = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"jointstyle\", {\r\n        get: function () {\r\n            return this._jointstyle;\r\n        },\r\n        set: function (value) {\r\n            this._jointstyle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"miter_limit\", {\r\n        get: function () {\r\n            return this._miter_limit;\r\n        },\r\n        set: function (value) {\r\n            this._miter_limit = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphicsStrokeStyle.prototype, \"capstyle\", {\r\n        get: function () {\r\n            return this._capstyle;\r\n        },\r\n        set: function (value) {\r\n            this._capstyle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphicsStrokeStyle.data_type = \"[graphicsdata StrokeStyle]\";\r\n    return GraphicsStrokeStyle;\r\n}());\r\nexports.GraphicsStrokeStyle = GraphicsStrokeStyle;\r\n},{\"../draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"../draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\"}],\"awayjs-display/lib/draw/IGraphicsData\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/draw/InterpolationMethod\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nvar InterpolationMethod = (function () {\r\n    function InterpolationMethod() {\r\n    }\r\n    /**\r\n     * Specifies that the RGB interpolation method should be used. This means\r\n     * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n     * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n     * conversion between red, green, and blue component values and the actual\r\n     * intensity of the visible component color.\r\n     *\r\n     * <p>For example, consider a simple linear gradient between two colors(with\r\n     * the <code>spreadMethod</code> parameter set to\r\n     * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n     * affect the appearance as follows: </p>\r\n     */\r\n    InterpolationMethod.LINEAR_RGB = \"linearRGB\";\r\n    /**\r\n     * Specifies that the RGB interpolation method should be used. This means\r\n     * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n     * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n     * conversion between red, green, and blue component values and the actual\r\n     * intensity of the visible component color.\r\n     *\r\n     * <p>For example, consider a simple linear gradient between two colors(with\r\n     * the <code>spreadMethod</code> parameter set to\r\n     * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n     * affect the appearance as follows: </p>\r\n     */\r\n    InterpolationMethod.RGB = \"rgb\";\r\n    return InterpolationMethod;\r\n}());\r\nexports.InterpolationMethod = InterpolationMethod;\r\n},{}],\"awayjs-display/lib/draw/JointStyle\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nvar JointStyle = (function () {\r\n    function JointStyle() {\r\n    }\r\n    /**\r\n     * Specifies beveled joints in the <code>joints</code> parameter of the\r\n     * <code>flash.display.Graphics.lineStyle()</code> method.\r\n     */\r\n    JointStyle.BEVEL = 2;\r\n    /**\r\n     * Specifies mitered joints in the <code>joints</code> parameter of the\r\n     * <code>flash.display.Graphics.lineStyle()</code> method.\r\n     */\r\n    JointStyle.MITER = 0;\r\n    /**\r\n     * Specifies round joints in the <code>joints</code> parameter of the\r\n     * <code>flash.display.Graphics.lineStyle()</code> method.\r\n     */\r\n    JointStyle.ROUND = 1;\r\n    return JointStyle;\r\n}());\r\nexports.JointStyle = JointStyle;\r\n},{}],\"awayjs-display/lib/draw/LineScaleMode\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nvar LineScaleMode = (function () {\r\n    function LineScaleMode() {\r\n    }\r\n    /**\r\n     * With this setting used as the <code>scaleMode</code> parameter of the\r\n     * <code>lineStyle()</code> method, the thickness of the line scales\r\n     * <i>only</i> vertically. For example, consider the following circles, drawn\r\n     * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n     * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n     * scaled only vertically, and the circle on the right is scaled both\r\n     * vertically and horizontally.\r\n     */\r\n    LineScaleMode.HORIZONTAL = \"horizontal\";\r\n    /**\r\n     * With this setting used as the <code>scaleMode</code> parameter of the\r\n     * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n     */\r\n    LineScaleMode.NONE = \"none\";\r\n    /**\r\n     * With this setting used as the <code>scaleMode</code> parameter of the\r\n     * <code>lineStyle()</code> method, the thickness of the line always scales\r\n     * when the object is scaled(the default).\r\n     */\r\n    LineScaleMode.NORMAL = \"normal\";\r\n    /**\r\n     * With this setting used as the <code>scaleMode</code> parameter of the\r\n     * <code>lineStyle()</code> method, the thickness of the line scales\r\n     * <i>only</i> horizontally. For example, consider the following circles,\r\n     * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n     * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n     * left is scaled only horizontally, and the circle on the right is scaled\r\n     * both vertically and horizontally.\r\n     */\r\n    LineScaleMode.VERTICAL = \"vertical\";\r\n    return LineScaleMode;\r\n}());\r\nexports.LineScaleMode = LineScaleMode;\r\n},{}],\"awayjs-display/lib/draw/PixelSnapping\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nvar PixelSnapping = (function () {\r\n    function PixelSnapping() {\r\n    }\r\n    /**\r\n     * A constant value used in the <code>pixelSnapping</code> property of a\r\n     * Bitmap object to specify that the bitmap image is always snapped to the\r\n     * nearest pixel, independent of any transformation.\r\n     */\r\n    PixelSnapping.ALWAYS = \"always\";\r\n    /**\r\n     * A constant value used in the <code>pixelSnapping</code> property of a\r\n     * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n     * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n     * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n     * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n     * setting allows the image to be drawn as fast as possible by using the\r\n     * vector renderer.\r\n     */\r\n    PixelSnapping.AUTO = \"auto\";\r\n    /**\r\n     * A constant value used in the <code>pixelSnapping</code> property of a\r\n     * Bitmap object to specify that no pixel snapping occurs.\r\n     */\r\n    PixelSnapping.NEVER = \"never\";\r\n    return PixelSnapping;\r\n}());\r\nexports.PixelSnapping = PixelSnapping;\r\n},{}],\"awayjs-display/lib/draw/SpreadMethod\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nvar SpreadMethod = (function () {\r\n    function SpreadMethod() {\r\n    }\r\n    /**\r\n     * Specifies that the gradient use the <i>pad</i> spread method.\r\n     */\r\n    SpreadMethod.PAD = \"pad\";\r\n    /**\r\n     * Specifies that the gradient use the <i>reflect</i> spread method.\r\n     */\r\n    SpreadMethod.REFLECT = \"reflect\";\r\n    /**\r\n     * Specifies that the gradient use the <i>repeat</i> spread method.\r\n     */\r\n    SpreadMethod.REPEAT = \"repeat\";\r\n    return SpreadMethod;\r\n}());\r\nexports.SpreadMethod = SpreadMethod;\r\n},{}],\"awayjs-display/lib/draw/TriangleCulling\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nvar TriangleCulling = (function () {\r\n    function TriangleCulling() {\r\n    }\r\n    /**\r\n     * Specifies culling of all triangles facing toward the current view point.\r\n     */\r\n    TriangleCulling.NEGATIVE = \"negative\";\r\n    /**\r\n     * Specifies no culling. All triangles in the path are rendered.\r\n     */\r\n    TriangleCulling.NONE = \"none\";\r\n    /**\r\n     * Specifies culling of all triangles facing away from the current view\r\n     * point. This is also known as backface culling.\r\n     */\r\n    TriangleCulling.POSITIVE = \"positive\";\r\n    return TriangleCulling;\r\n}());\r\nexports.TriangleCulling = TriangleCulling;\r\n},{}],\"awayjs-display/lib/draw\":[function(require,module,exports){\n\"use strict\";\r\nvar CapsStyle_1 = require(\"./draw/CapsStyle\");\r\nexports.CapsStyle = CapsStyle_1.CapsStyle;\r\nvar GradientType_1 = require(\"./draw/GradientType\");\r\nexports.GradientType = GradientType_1.GradientType;\r\nvar GraphicsFactoryFills_1 = require(\"./draw/GraphicsFactoryFills\");\r\nexports.GraphicsFactoryFills = GraphicsFactoryFills_1.GraphicsFactoryFills;\r\nvar GraphicsFactoryHelper_1 = require(\"./draw/GraphicsFactoryHelper\");\r\nexports.GraphicsFactoryHelper = GraphicsFactoryHelper_1.GraphicsFactoryHelper;\r\nvar GraphicsFactoryStrokes_1 = require(\"./draw/GraphicsFactoryStrokes\");\r\nexports.GraphicsFactoryStrokes = GraphicsFactoryStrokes_1.GraphicsFactoryStrokes;\r\nvar GraphicsFillStyle_1 = require(\"./draw/GraphicsFillStyle\");\r\nexports.GraphicsFillStyle = GraphicsFillStyle_1.GraphicsFillStyle;\r\nvar GraphicsStrokeStyle_1 = require(\"./draw/GraphicsStrokeStyle\");\r\nexports.GraphicsStrokeStyle = GraphicsStrokeStyle_1.GraphicsStrokeStyle;\r\nvar GraphicsPath_1 = require(\"./draw/GraphicsPath\");\r\nexports.GraphicsPath = GraphicsPath_1.GraphicsPath;\r\nvar GraphicsPathCommand_1 = require(\"./draw/GraphicsPathCommand\");\r\nexports.GraphicsPathCommand = GraphicsPathCommand_1.GraphicsPathCommand;\r\nvar GraphicsPathWinding_1 = require(\"./draw/GraphicsPathWinding\");\r\nexports.GraphicsPathWinding = GraphicsPathWinding_1.GraphicsPathWinding;\r\nvar InterpolationMethod_1 = require(\"./draw/InterpolationMethod\");\r\nexports.InterpolationMethod = InterpolationMethod_1.InterpolationMethod;\r\nvar JointStyle_1 = require(\"./draw/JointStyle\");\r\nexports.JointStyle = JointStyle_1.JointStyle;\r\nvar LineScaleMode_1 = require(\"./draw/LineScaleMode\");\r\nexports.LineScaleMode = LineScaleMode_1.LineScaleMode;\r\nvar PixelSnapping_1 = require(\"./draw/PixelSnapping\");\r\nexports.PixelSnapping = PixelSnapping_1.PixelSnapping;\r\nvar SpreadMethod_1 = require(\"./draw/SpreadMethod\");\r\nexports.SpreadMethod = SpreadMethod_1.SpreadMethod;\r\nvar TriangleCulling_1 = require(\"./draw/TriangleCulling\");\r\nexports.TriangleCulling = TriangleCulling_1.TriangleCulling;\r\n},{\"./draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"./draw/GradientType\":\"awayjs-display/lib/draw/GradientType\",\"./draw/GraphicsFactoryFills\":\"awayjs-display/lib/draw/GraphicsFactoryFills\",\"./draw/GraphicsFactoryHelper\":\"awayjs-display/lib/draw/GraphicsFactoryHelper\",\"./draw/GraphicsFactoryStrokes\":\"awayjs-display/lib/draw/GraphicsFactoryStrokes\",\"./draw/GraphicsFillStyle\":\"awayjs-display/lib/draw/GraphicsFillStyle\",\"./draw/GraphicsPath\":\"awayjs-display/lib/draw/GraphicsPath\",\"./draw/GraphicsPathCommand\":\"awayjs-display/lib/draw/GraphicsPathCommand\",\"./draw/GraphicsPathWinding\":\"awayjs-display/lib/draw/GraphicsPathWinding\",\"./draw/GraphicsStrokeStyle\":\"awayjs-display/lib/draw/GraphicsStrokeStyle\",\"./draw/InterpolationMethod\":\"awayjs-display/lib/draw/InterpolationMethod\",\"./draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"./draw/LineScaleMode\":\"awayjs-display/lib/draw/LineScaleMode\",\"./draw/PixelSnapping\":\"awayjs-display/lib/draw/PixelSnapping\",\"./draw/SpreadMethod\":\"awayjs-display/lib/draw/SpreadMethod\",\"./draw/TriangleCulling\":\"awayjs-display/lib/draw/TriangleCulling\"}],\"awayjs-display/lib/errors/CastError\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\r\nvar CastError = (function (_super) {\r\n    __extends(CastError, _super);\r\n    function CastError(message) {\r\n        _super.call(this, message);\r\n    }\r\n    return CastError;\r\n}(ErrorBase_1.ErrorBase));\r\nexports.CastError = CastError;\r\n},{\"awayjs-core/lib/errors/ErrorBase\":undefined}],\"awayjs-display/lib/errors\":[function(require,module,exports){\n\"use strict\";\r\nvar CastError_1 = require(\"./errors/CastError\");\r\nexports.CastError = CastError_1.CastError;\r\n},{\"./errors/CastError\":\"awayjs-display/lib/errors/CastError\"}],\"awayjs-display/lib/events/CameraEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nvar CameraEvent = (function (_super) {\r\n    __extends(CameraEvent, _super);\r\n    function CameraEvent(type, camera) {\r\n        _super.call(this, type);\r\n        this._camera = camera;\r\n    }\r\n    Object.defineProperty(CameraEvent.prototype, \"camera\", {\r\n        get: function () {\r\n            return this._camera;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clones the event.\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    CameraEvent.prototype.clone = function () {\r\n        return new CameraEvent(this.type, this._camera);\r\n    };\r\n    CameraEvent.PROJECTION_CHANGED = \"projectionChanged\";\r\n    return CameraEvent;\r\n}(EventBase_1.EventBase));\r\nexports.CameraEvent = CameraEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/DisplayObjectEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\nvar DisplayObjectEvent = (function (_super) {\r\n    __extends(DisplayObjectEvent, _super);\r\n    function DisplayObjectEvent(type, object) {\r\n        _super.call(this, type);\r\n        this._object = object;\r\n    }\r\n    Object.defineProperty(DisplayObjectEvent.prototype, \"object\", {\r\n        get: function () {\r\n            return this._object;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clones the event.\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    DisplayObjectEvent.prototype.clone = function () {\r\n        return new DisplayObjectEvent(this.type, this._object);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    DisplayObjectEvent.VISIBLITY_UPDATED = \"visiblityUpdated\";\r\n    /**\r\n     *\r\n     */\r\n    DisplayObjectEvent.SCENETRANSFORM_CHANGED = \"scenetransformChanged\";\r\n    /**\r\n     *\r\n     */\r\n    DisplayObjectEvent.SCENE_CHANGED = \"sceneChanged\";\r\n    /**\r\n     *\r\n     */\r\n    DisplayObjectEvent.PARTITION_CHANGED = \"partitionChanged\";\r\n    /**\r\n     *\r\n     */\r\n    DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS = \"invalidatePartitionBounds\";\r\n    return DisplayObjectEvent;\r\n}(EventBase_1.EventBase));\r\nexports.DisplayObjectEvent = DisplayObjectEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/ElementsEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.ElementsEvent\r\n * @see away.core.base.Graphics\r\n */\r\nvar ElementsEvent = (function (_super) {\r\n    __extends(ElementsEvent, _super);\r\n    /**\r\n     * Create a new GraphicsEvent\r\n     * @param type The event type.\r\n     * @param attributesView An optional data type of the vertex data being updated.\r\n     */\r\n    function ElementsEvent(type, attributesView) {\r\n        _super.call(this, type);\r\n        this._attributesView = attributesView;\r\n    }\r\n    Object.defineProperty(ElementsEvent.prototype, \"attributesView\", {\r\n        /**\r\n         * The attributes view of the vertex data.\r\n         */\r\n        get: function () {\r\n            return this._attributesView;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clones the event.\r\n     *\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    ElementsEvent.prototype.clone = function () {\r\n        return new ElementsEvent(this.type, this._attributesView);\r\n    };\r\n    /**\r\n     * Dispatched when a Elements's index data has been updated.\r\n     */\r\n    ElementsEvent.INVALIDATE_INDICES = \"invalidateIndices\";\r\n    /**\r\n     * Dispatched when a Elements's index data has been disposed.\r\n     */\r\n    ElementsEvent.CLEAR_INDICES = \"clearIndices\";\r\n    /**\r\n     * Dispatched when a Elements's vertex data has been updated.\r\n     */\r\n    ElementsEvent.INVALIDATE_VERTICES = \"invalidateVertices\";\r\n    /**\r\n     * Dispatched when a Elements's vertex data has been disposed.\r\n     */\r\n    ElementsEvent.CLEAR_VERTICES = \"clearVertices\";\r\n    return ElementsEvent;\r\n}(EventBase_1.EventBase));\r\nexports.ElementsEvent = ElementsEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/LightEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\nvar LightEvent = (function (_super) {\r\n    __extends(LightEvent, _super);\r\n    function LightEvent(type) {\r\n        _super.call(this, type);\r\n    }\r\n    //@override\r\n    LightEvent.prototype.clone = function () {\r\n        return new LightEvent(this.type);\r\n    };\r\n    LightEvent.CASTS_SHADOW_CHANGE = \"castsShadowChange\";\r\n    return LightEvent;\r\n}(EventBase_1.EventBase));\r\nexports.LightEvent = LightEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/MouseEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nvar MouseEvent = (function (_super) {\r\n    __extends(MouseEvent, _super);\r\n    /**\r\n     * Create a new MouseEvent object.\r\n     * @param type The type of the MouseEvent.\r\n     */\r\n    function MouseEvent(type) {\r\n        _super.call(this, type);\r\n        // Private.\r\n        this._iAllowedToPropagate = true;\r\n    }\r\n    Object.defineProperty(MouseEvent.prototype, \"bubbles\", {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        get: function () {\r\n            var doesBubble = this._iAllowedToPropagate;\r\n            this._iAllowedToPropagate = true;\r\n            // Don't bubble if propagation has been stopped.\r\n            return doesBubble;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MouseEvent.prototype.stopPropagation = function () {\r\n        this._iAllowedToPropagate = false;\r\n        if (this._iParentEvent)\r\n            this._iParentEvent.stopPropagation();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    MouseEvent.prototype.stopImmediatePropagation = function () {\r\n        this._iAllowedToPropagate = false;\r\n        if (this._iParentEvent)\r\n            this._iParentEvent.stopImmediatePropagation();\r\n    };\r\n    /**\r\n     * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n     */\r\n    MouseEvent.prototype.clone = function () {\r\n        var result = new MouseEvent(this.type);\r\n        /* TODO: Debug / test - look into isDefaultPrevented\r\n         if (isDefaultPrevented())\r\n         result.preventDefault();\r\n         */\r\n        result.screenX = this.screenX;\r\n        result.screenY = this.screenY;\r\n        result.view = this.view;\r\n        result.entity = this.entity;\r\n        result.renderable = this.renderable;\r\n        result.material = this.material;\r\n        result.uv = this.uv;\r\n        result.position = this.position;\r\n        result.normal = this.normal;\r\n        result.elementIndex = this.elementIndex;\r\n        result.delta = this.delta;\r\n        result.ctrlKey = this.ctrlKey;\r\n        result.shiftKey = this.shiftKey;\r\n        result._iParentEvent = this;\r\n        result._iAllowedToPropagate = this._iAllowedToPropagate;\r\n        return result;\r\n    };\r\n    Object.defineProperty(MouseEvent.prototype, \"scenePosition\", {\r\n        /**\r\n         * The position in scene space where the event took place\r\n         */\r\n        get: function () {\r\n            return this.entity.sceneTransform.transformVector(this.position);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MouseEvent.prototype, \"sceneNormal\", {\r\n        /**\r\n         * The normal in scene space where the event took place\r\n         */\r\n        get: function () {\r\n            var sceneNormal = this.entity.sceneTransform.deltaTransformVector(this.normal);\r\n            sceneNormal.normalize();\r\n            return sceneNormal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Defines the value of the type property of a mouseOver3d event object.\r\n     */\r\n    MouseEvent.MOUSE_OVER = \"mouseOver3d\";\r\n    /**\r\n     * Defines the value of the type property of a mouseOut3d event object.\r\n     */\r\n    MouseEvent.MOUSE_OUT = \"mouseOut3d\";\r\n    /**\r\n     * Defines the value of the type property of a mouseUp3d event object.\r\n     */\r\n    MouseEvent.MOUSE_UP = \"mouseUp3d\";\r\n    /**\r\n     * Defines the value of the type property of a mouseDown3d event object.\r\n     */\r\n    MouseEvent.MOUSE_DOWN = \"mouseDown3d\";\r\n    /**\r\n     * Defines the value of the type property of a mouseMove3d event object.\r\n     */\r\n    MouseEvent.MOUSE_MOVE = \"mouseMove3d\";\r\n    /**\r\n     * Defines the value of the type property of a rollOver3d event object.\r\n     */\r\n    //\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n    /**\r\n     * Defines the value of the type property of a rollOut3d event object.\r\n     */\r\n    //\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n    /**\r\n     * Defines the value of the type property of a click3d event object.\r\n     */\r\n    MouseEvent.CLICK = \"click3d\";\r\n    /**\r\n     * Defines the value of the type property of a doubleClick3d event object.\r\n     */\r\n    MouseEvent.DOUBLE_CLICK = \"doubleClick3d\";\r\n    /**\r\n     * Defines the value of the type property of a mouseWheel3d event object.\r\n     */\r\n    MouseEvent.MOUSE_WHEEL = \"mouseWheel3d\";\r\n    return MouseEvent;\r\n}(EventBase_1.EventBase));\r\nexports.MouseEvent = MouseEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/RenderableEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableEvent\r\n * @see away.core.base.Graphics\r\n */\r\nvar RenderableEvent = (function (_super) {\r\n    __extends(RenderableEvent, _super);\r\n    /**\r\n     * Create a new GraphicsEvent\r\n     * @param type The event type.\r\n     * @param dataType An optional data type of the vertex data being updated.\r\n     */\r\n    function RenderableEvent(type, renderable) {\r\n        _super.call(this, type);\r\n        this._renderable = renderable;\r\n    }\r\n    Object.defineProperty(RenderableEvent.prototype, \"renderable\", {\r\n        /**\r\n         * The renderobject owner of the renderable owner.\r\n         */\r\n        get: function () {\r\n            return this._renderable;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clones the event.\r\n     *\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    RenderableEvent.prototype.clone = function () {\r\n        return new RenderableEvent(this.type, this._renderable);\r\n    };\r\n    /**\r\n     * Dispatched when a Renderable owners's render object owner has been updated.\r\n     */\r\n    RenderableEvent.INVALIDATE_SURFACE = \"invalidateRenderable\";\r\n    /**\r\n     *\r\n     */\r\n    RenderableEvent.INVALIDATE_ELEMENTS = \"invalidateElements\";\r\n    return RenderableEvent;\r\n}(EventBase_1.EventBase));\r\nexports.RenderableEvent = RenderableEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/RendererEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\nvar RendererEvent = (function (_super) {\r\n    __extends(RendererEvent, _super);\r\n    function RendererEvent(type) {\r\n        _super.call(this, type);\r\n    }\r\n    RendererEvent.VIEWPORT_UPDATED = \"viewportUpdated\";\r\n    RendererEvent.SCISSOR_UPDATED = \"scissorUpdated\";\r\n    return RendererEvent;\r\n}(EventBase_1.EventBase));\r\nexports.RendererEvent = RendererEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/ResizeEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\nvar ResizeEvent = (function (_super) {\r\n    __extends(ResizeEvent, _super);\r\n    function ResizeEvent(type, oldHeight, oldWidth) {\r\n        if (oldHeight === void 0) { oldHeight = NaN; }\r\n        if (oldWidth === void 0) { oldWidth = NaN; }\r\n        _super.call(this, type);\r\n        this._oldHeight = oldHeight;\r\n        this._oldWidth = oldWidth;\r\n    }\r\n    Object.defineProperty(ResizeEvent.prototype, \"oldHeight\", {\r\n        get: function () {\r\n            return this._oldHeight;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ResizeEvent.prototype, \"oldWidth\", {\r\n        get: function () {\r\n            return this._oldWidth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clones the event.\r\n     *\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    ResizeEvent.prototype.clone = function () {\r\n        return new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\r\n    };\r\n    ResizeEvent.RESIZE = \"resize\";\r\n    return ResizeEvent;\r\n}(EventBase_1.EventBase));\r\nexports.ResizeEvent = ResizeEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/StyleEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\nvar StyleEvent = (function (_super) {\r\n    __extends(StyleEvent, _super);\r\n    function StyleEvent(type, style) {\r\n        _super.call(this, type);\r\n        this._style = style;\r\n    }\r\n    Object.defineProperty(StyleEvent.prototype, \"style\", {\r\n        get: function () {\r\n            return this._style;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clones the event.\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    StyleEvent.prototype.clone = function () {\r\n        return new StyleEvent(this.type, this._style);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    StyleEvent.INVALIDATE_PROPERTIES = \"invalidateProperties\";\r\n    return StyleEvent;\r\n}(EventBase_1.EventBase));\r\nexports.StyleEvent = StyleEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/SurfaceEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\nvar SurfaceEvent = (function (_super) {\r\n    __extends(SurfaceEvent, _super);\r\n    /**\r\n     * Create a new GraphicsEvent\r\n     * @param type The event type.\r\n     * @param dataType An optional data type of the vertex data being updated.\r\n     */\r\n    function SurfaceEvent(type, surface) {\r\n        _super.call(this, type);\r\n        this._surface = surface;\r\n    }\r\n    Object.defineProperty(SurfaceEvent.prototype, \"surface\", {\r\n        /**\r\n         * The surface of the renderable.\r\n         */\r\n        get: function () {\r\n            return this._surface;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clones the event.\r\n     *\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    SurfaceEvent.prototype.clone = function () {\r\n        return new SurfaceEvent(this.type, this._surface);\r\n    };\r\n    SurfaceEvent.INVALIDATE_TEXTURE = \"invalidateTexture\";\r\n    SurfaceEvent.INVALIDATE_ANIMATION = \"invalidateAnimation\";\r\n    SurfaceEvent.INVALIDATE_PASSES = \"invalidatePasses\";\r\n    return SurfaceEvent;\r\n}(EventBase_1.EventBase));\r\nexports.SurfaceEvent = SurfaceEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/TouchEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\nvar TouchEvent = (function (_super) {\r\n    __extends(TouchEvent, _super);\r\n    /**\r\n     * Create a new TouchEvent object.\r\n     * @param type The type of the TouchEvent.\r\n     */\r\n    function TouchEvent(type) {\r\n        _super.call(this, type);\r\n        // Private.\r\n        this._iAllowedToPropagate = true;\r\n    }\r\n    Object.defineProperty(TouchEvent.prototype, \"bubbles\", {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        get: function () {\r\n            var doesBubble = this._iAllowedToPropagate;\r\n            this._iAllowedToPropagate = true;\r\n            // Don't bubble if propagation has been stopped.\r\n            return doesBubble;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TouchEvent.prototype.stopPropagation = function () {\r\n        this._iAllowedToPropagate = false;\r\n        if (this._iParentEvent)\r\n            this._iParentEvent.stopPropagation();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    TouchEvent.prototype.stopImmediatePropagation = function () {\r\n        this._iAllowedToPropagate = false;\r\n        if (this._iParentEvent)\r\n            this._iParentEvent.stopImmediatePropagation();\r\n    };\r\n    /**\r\n     * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n     */\r\n    TouchEvent.prototype.clone = function () {\r\n        var result = new TouchEvent(this.type);\r\n        /* TODO: Debug / test - look into isDefaultPrevented\r\n         if (isDefaultPrevented())\r\n         result.preventDefault();\r\n         */\r\n        result.screenX = this.screenX;\r\n        result.screenY = this.screenY;\r\n        result.view = this.view;\r\n        result.entity = this.entity;\r\n        result.renderable = this.renderable;\r\n        result.material = this.material;\r\n        result.uv = this.uv;\r\n        result.position = this.position;\r\n        result.normal = this.normal;\r\n        result.elementIndex = this.elementIndex;\r\n        result.ctrlKey = this.ctrlKey;\r\n        result.shiftKey = this.shiftKey;\r\n        result._iParentEvent = this;\r\n        return result;\r\n    };\r\n    Object.defineProperty(TouchEvent.prototype, \"scenePosition\", {\r\n        /**\r\n         * The position in scene space where the event took place\r\n         */\r\n        get: function () {\r\n            return this.entity.sceneTransform.transformVector(this.position);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TouchEvent.prototype, \"sceneNormal\", {\r\n        /**\r\n         * The normal in scene space where the event took place\r\n         */\r\n        get: function () {\r\n            var sceneNormal = this.entity.sceneTransform.deltaTransformVector(this.normal);\r\n            sceneNormal.normalize();\r\n            return sceneNormal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    TouchEvent.TOUCH_END = \"touchEnd3d\";\r\n    /**\r\n     *\r\n     */\r\n    TouchEvent.TOUCH_BEGIN = \"touchBegin3d\";\r\n    /**\r\n     *\r\n     */\r\n    TouchEvent.TOUCH_MOVE = \"touchMove3d\";\r\n    /**\r\n     *\r\n     */\r\n    TouchEvent.TOUCH_OUT = \"touchOut3d\";\r\n    /**\r\n     *\r\n     */\r\n    TouchEvent.TOUCH_OVER = \"touchOver3d\";\r\n    return TouchEvent;\r\n}(EventBase_1.EventBase));\r\nexports.TouchEvent = TouchEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events/TransformEvent\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\r\nvar TransformEvent = (function (_super) {\r\n    __extends(TransformEvent, _super);\r\n    function TransformEvent(type, transform) {\r\n        _super.call(this, type);\r\n        this._transform = transform;\r\n    }\r\n    Object.defineProperty(TransformEvent.prototype, \"transform\", {\r\n        get: function () {\r\n            return this._transform;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clones the event.\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    TransformEvent.prototype.clone = function () {\r\n        return new TransformEvent(this.type, this._transform);\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    TransformEvent.INVALIDATE_MATRIX3D = \"invalidateMatrix3D\";\r\n    /**\r\n     *\r\n     */\r\n    TransformEvent.INVALIDATE_COLOR_TRANSFORM = \"invalidateColorTransform\";\r\n    return TransformEvent;\r\n}(EventBase_1.EventBase));\r\nexports.TransformEvent = TransformEvent;\r\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-display/lib/events\":[function(require,module,exports){\n\"use strict\";\r\nvar CameraEvent_1 = require(\"./events/CameraEvent\");\r\nexports.CameraEvent = CameraEvent_1.CameraEvent;\r\nvar DisplayObjectEvent_1 = require(\"./events/DisplayObjectEvent\");\r\nexports.DisplayObjectEvent = DisplayObjectEvent_1.DisplayObjectEvent;\r\nvar ElementsEvent_1 = require(\"./events/ElementsEvent\");\r\nexports.ElementsEvent = ElementsEvent_1.ElementsEvent;\r\nvar LightEvent_1 = require(\"./events/LightEvent\");\r\nexports.LightEvent = LightEvent_1.LightEvent;\r\nvar MouseEvent_1 = require(\"./events/MouseEvent\");\r\nexports.MouseEvent = MouseEvent_1.MouseEvent;\r\nvar RenderableEvent_1 = require(\"./events/RenderableEvent\");\r\nexports.RenderableEvent = RenderableEvent_1.RenderableEvent;\r\nvar RendererEvent_1 = require(\"./events/RendererEvent\");\r\nexports.RendererEvent = RendererEvent_1.RendererEvent;\r\nvar ResizeEvent_1 = require(\"./events/ResizeEvent\");\r\nexports.ResizeEvent = ResizeEvent_1.ResizeEvent;\r\nvar StyleEvent_1 = require(\"./events/StyleEvent\");\r\nexports.StyleEvent = StyleEvent_1.StyleEvent;\r\nvar SurfaceEvent_1 = require(\"./events/SurfaceEvent\");\r\nexports.SurfaceEvent = SurfaceEvent_1.SurfaceEvent;\r\nvar TouchEvent_1 = require(\"./events/TouchEvent\");\r\nexports.TouchEvent = TouchEvent_1.TouchEvent;\r\nvar TransformEvent_1 = require(\"./events/TransformEvent\");\r\nexports.TransformEvent = TransformEvent_1.TransformEvent;\r\n},{\"./events/CameraEvent\":\"awayjs-display/lib/events/CameraEvent\",\"./events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"./events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"./events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"./events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"./events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"./events/RendererEvent\":\"awayjs-display/lib/events/RendererEvent\",\"./events/ResizeEvent\":\"awayjs-display/lib/events/ResizeEvent\",\"./events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"./events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"./events/TouchEvent\":\"awayjs-display/lib/events/TouchEvent\",\"./events/TransformEvent\":\"awayjs-display/lib/events/TransformEvent\"}],\"awayjs-display/lib/factories/ITimelineSceneGraphFactory\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/factories\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/graphics/ElementsBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\r\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nvar Short3Attributes_1 = require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar ElementsEvent_1 = require(\"../events/ElementsEvent\");\r\n/**\r\n * @class away.base.TriangleElements\r\n */\r\nvar ElementsBase = (function (_super) {\r\n    __extends(ElementsBase, _super);\r\n    /**\r\n     *\r\n     */\r\n    function ElementsBase(concatenatedBuffer) {\r\n        if (concatenatedBuffer === void 0) { concatenatedBuffer = null; }\r\n        _super.call(this);\r\n        this._customAttributesNames = new Array();\r\n        this._customAttributes = new Object();\r\n        this._numElements = 0;\r\n        this._numVertices = 0;\r\n        this._verticesDirty = new Object();\r\n        this._invalidateVertices = new Object();\r\n        this._concatenatedBuffer = concatenatedBuffer;\r\n    }\r\n    Object.defineProperty(ElementsBase.prototype, \"concatenatedBuffer\", {\r\n        get: function () {\r\n            return this._concatenatedBuffer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ElementsBase.prototype, \"indices\", {\r\n        /**\r\n         * The raw index data that define the faces.\r\n         */\r\n        get: function () {\r\n            return this._indices;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    ElementsBase.prototype.getCustomAtributesNames = function () {\r\n        return this._customAttributesNames;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    ElementsBase.prototype.getCustomAtributes = function (name) {\r\n        return this._customAttributes[name];\r\n    };\r\n    Object.defineProperty(ElementsBase.prototype, \"numElements\", {\r\n        /**\r\n         * The total amount of triangles in the TriangleElements.\r\n         */\r\n        get: function () {\r\n            return this._numElements;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ElementsBase.prototype, \"numVertices\", {\r\n        get: function () {\r\n            return this._numVertices;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ElementsBase.prototype.copyTo = function (elements) {\r\n        if (this.indices)\r\n            elements.setIndices(this.indices.clone());\r\n        for (var name in this._customAttributes)\r\n            elements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    ElementsBase.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        if (this._indices) {\r\n            this._indices.dispose();\r\n            this._indices = null;\r\n        }\r\n        for (var name in this._customAttributes) {\r\n            this._customAttributes[name].dispose();\r\n            delete this._customAttributes;\r\n        }\r\n    };\r\n    ElementsBase.prototype.setIndices = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (values instanceof Short3Attributes_1.Short3Attributes) {\r\n            if (this._indices)\r\n                this.clearIndices();\r\n            this._indices = values;\r\n        }\r\n        else if (values) {\r\n            if (!this._indices)\r\n                this._indices = new Short3Attributes_1.Short3Attributes();\r\n            this._indices.set(values, offset);\r\n        }\r\n        else if (this._indices) {\r\n            this._indices.dispose();\r\n            this._indices = null;\r\n            this.clearIndices();\r\n        }\r\n        if (this._indices) {\r\n            this._numElements = this._indices.count;\r\n            this.invalidateIndices();\r\n        }\r\n        else {\r\n            this._numElements = 0;\r\n        }\r\n    };\r\n    ElementsBase.prototype.setCustomAttributes = function (name, values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (values == this._customAttributes[name])\r\n            return;\r\n        if (values instanceof AttributesView_1.AttributesView) {\r\n            this.clearVertices(this._customAttributes[name]);\r\n            this._customAttributes[name] = values;\r\n        }\r\n        else if (values) {\r\n            if (!this._customAttributes[name])\r\n                this._customAttributes[name] = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\r\n            this._customAttributes[name].set(values, offset);\r\n        }\r\n        else if (this._customAttributes[name]) {\r\n            this.clearVertices(this._customAttributes[name]);\r\n            this._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\r\n            delete this._customAttributes[name];\r\n            return;\r\n        }\r\n        this.invalidateVertices(this._customAttributes[name]);\r\n        this._verticesDirty[this._customAttributes[name].id] = false;\r\n        if (this._customAttributesNames.indexOf(name) == -1)\r\n            this._customAttributesNames.push(name);\r\n    };\r\n    /**\r\n     * Clones the current object\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    ElementsBase.prototype.clone = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ElementsBase.prototype.applyTransformation = function (transform, count, offset) {\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    /**\r\n     * Scales the geometry.\r\n     * @param scale The amount by which to scale.\r\n     */\r\n    ElementsBase.prototype.scale = function (scale, count, offset) {\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ElementsBase.prototype.scaleUV = function (scaleU, scaleV, count, offset) {\r\n        if (scaleU === void 0) { scaleU = 1; }\r\n        if (scaleV === void 0) { scaleV = 1; }\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ElementsBase.prototype.getBoxBounds = function (target, count, offset) {\r\n        if (target === void 0) { target = null; }\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ElementsBase.prototype.getSphereBounds = function (center, target, count, offset) {\r\n        if (target === void 0) { target = null; }\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ElementsBase.prototype.hitTestPoint = function (x, y, z, box, count, offset) {\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ElementsBase.prototype.invalidateIndices = function () {\r\n        if (!this._invalidateIndices)\r\n            this._invalidateIndices = new ElementsEvent_1.ElementsEvent(ElementsEvent_1.ElementsEvent.INVALIDATE_INDICES, this._indices);\r\n        this.dispatchEvent(this._invalidateIndices);\r\n    };\r\n    ElementsBase.prototype.clearIndices = function () {\r\n        this.dispatchEvent(new ElementsEvent_1.ElementsEvent(ElementsEvent_1.ElementsEvent.CLEAR_INDICES, this._indices));\r\n    };\r\n    ElementsBase.prototype.invalidateVertices = function (attributesView) {\r\n        if (!attributesView || this._verticesDirty[attributesView.id])\r\n            return;\r\n        this._verticesDirty[attributesView.id] = true;\r\n        if (!this._invalidateVertices[attributesView.id])\r\n            this._invalidateVertices[attributesView.id] = new ElementsEvent_1.ElementsEvent(ElementsEvent_1.ElementsEvent.INVALIDATE_VERTICES, attributesView);\r\n        this.dispatchEvent(this._invalidateVertices[attributesView.id]);\r\n    };\r\n    ElementsBase.prototype.clearVertices = function (attributesView) {\r\n        if (!attributesView)\r\n            return;\r\n        attributesView.dispose();\r\n        this.dispatchEvent(new ElementsEvent_1.ElementsEvent(ElementsEvent_1.ElementsEvent.CLEAR_VERTICES, attributesView));\r\n        this._verticesDirty[attributesView.id] = null;\r\n        this._invalidateVertices[attributesView.id] = null;\r\n    };\r\n    ElementsBase.prototype._iTestCollision = function (pickingCollider, material, pickingCollision, count, offset) {\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    return ElementsBase;\r\n}(AssetBase_1.AssetBase));\r\nexports.ElementsBase = ElementsBase;\r\n},{\"../events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/attributes/Short3Attributes\":undefined,\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/graphics/ElementsType\":[function(require,module,exports){\n\"use strict\";\r\nvar ElementsType = (function () {\r\n    function ElementsType() {\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    ElementsType.TRIANGLE = \"triangle\";\r\n    /**\r\n     *\r\n     */\r\n    ElementsType.LINE = \"line\";\r\n    return ElementsType;\r\n}());\r\nexports.ElementsType = ElementsType;\r\n},{}],\"awayjs-display/lib/graphics/Graphics\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\r\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar Graphic_1 = require(\"../graphics/Graphic\");\r\nvar ElementsEvent_1 = require(\"../events/ElementsEvent\");\r\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\r\nvar GraphicsPath_1 = require(\"../draw/GraphicsPath\");\r\nvar GraphicsFactoryFills_1 = require(\"../draw/GraphicsFactoryFills\");\r\nvar GraphicsFactoryStrokes_1 = require(\"../draw/GraphicsFactoryStrokes\");\r\nvar PartialImplementationError_1 = require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nvar JointStyle_1 = require(\"../draw/JointStyle\");\r\nvar CapsStyle_1 = require(\"../draw/CapsStyle\");\r\nvar GraphicsStrokeStyle_1 = require(\"../draw/GraphicsStrokeStyle\");\r\nvar GraphicsFillStyle_1 = require(\"../draw/GraphicsFillStyle\");\r\n/**\r\n *\r\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleGraphic objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGraphics\r\n * @see away.entities.Sprite\r\n *\r\n * @class Graphics\r\n */\r\nvar Graphics = (function (_super) {\r\n    __extends(Graphics, _super);\r\n    /**\r\n     * Creates a new Graphics object.\r\n     */\r\n    function Graphics() {\r\n        var _this = this;\r\n        _super.call(this);\r\n        this._boxBoundsInvalid = true;\r\n        this._sphereBoundsInvalid = true;\r\n        this._graphics = new Array();\r\n        this._current_position = new Point_1.Point();\r\n        this._current_position = new Point_1.Point();\r\n        this._queued_fill_pathes = [];\r\n        this._queued_stroke_pathes = [];\r\n        this._active_fill_path = null;\r\n        this._active_stroke_path = null;\r\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\r\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\r\n    }\r\n    Object.defineProperty(Graphics.prototype, \"assetType\", {\r\n        get: function () {\r\n            return Graphics.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphics.prototype, \"count\", {\r\n        get: function () {\r\n            return this._graphics.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphics.prototype, \"animator\", {\r\n        /**\r\n         * Defines the animator of the graphics object.  Default value is <code>null</code>.\r\n         */\r\n        get: function () {\r\n            return this._animator;\r\n        },\r\n        set: function (value) {\r\n            this._animator = value;\r\n            var len = this._graphics.length;\r\n            var graphic;\r\n            for (var i = 0; i < len; ++i) {\r\n                graphic = this._graphics[i];\r\n                // cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n                if (graphic.material) {\r\n                    graphic.material.iRemoveOwner(graphic);\r\n                    graphic.material.iAddOwner(graphic);\r\n                }\r\n                //invalidate any existing graphic objects in case they need to pull new elements\r\n                graphic.invalidateElements();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphics.prototype, \"style\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._style;\r\n        },\r\n        set: function (value) {\r\n            if (this._style == value)\r\n                return;\r\n            if (this._style)\r\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this._style = value;\r\n            if (this._style)\r\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this._iInvalidateSurfaces();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphics.prototype, \"queued_stroke_pathes\", {\r\n        get: function () {\r\n            return this._queued_stroke_pathes;\r\n        },\r\n        set: function (value) {\r\n            this._queued_stroke_pathes = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphics.prototype, \"queued_fill_pathes\", {\r\n        get: function () {\r\n            return this._queued_fill_pathes;\r\n        },\r\n        set: function (value) {\r\n            this._queued_fill_pathes = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphics.prototype, \"material\", {\r\n        /**\r\n         * The material with which to render the Graphics.\r\n         */\r\n        get: function () {\r\n            return this._material;\r\n        },\r\n        set: function (value) {\r\n            if (value == this._material)\r\n                return;\r\n            var i;\r\n            var len = this._graphics.length;\r\n            var graphic;\r\n            if (this._material)\r\n                for (i = 0; i < len; i++)\r\n                    if (!(graphic = this._graphics[i])._iGetExplicitMaterial())\r\n                        this._material.iRemoveOwner(graphic);\r\n            this._material = value;\r\n            if (this._material)\r\n                for (i = 0; i < len; i++)\r\n                    if (!(graphic = this._graphics[i])._iGetExplicitMaterial())\r\n                        this._material.iAddOwner(graphic);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a GraphicBase wrapping a Elements.\r\n     *\r\n     * @param elements\r\n     */\r\n    Graphics.prototype.addGraphic = function (elements, material, style, count, offset) {\r\n        if (material === void 0) { material = null; }\r\n        if (style === void 0) { style = null; }\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        var graphic;\r\n        if (Graphic_1.Graphic._available.length) {\r\n            graphic = Graphic_1.Graphic._available.pop();\r\n            graphic._iIndex = this._graphics.length;\r\n            graphic.parent = this;\r\n            graphic.elements = elements;\r\n            graphic.material = material;\r\n            graphic.style = style;\r\n            graphic.count = count;\r\n            graphic.offset = offset;\r\n        }\r\n        else {\r\n            graphic = new Graphic_1.Graphic(this._graphics.length, this, elements, material, style, count, offset);\r\n        }\r\n        this._graphics.push(graphic);\r\n        graphic.addEventListener(ElementsEvent_1.ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\r\n        this.invalidate();\r\n        return graphic;\r\n    };\r\n    Graphics.prototype.removeGraphic = function (graphic) {\r\n        this._graphics.splice(this._graphics.indexOf(graphic), 1);\r\n        graphic.removeEventListener(ElementsEvent_1.ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\r\n        graphic.elements = null;\r\n        graphic.material = null;\r\n        graphic.style = null;\r\n        graphic.clear();\r\n        this.invalidate();\r\n    };\r\n    Graphics.prototype.getGraphicAt = function (index) {\r\n        return this._graphics[index];\r\n    };\r\n    Graphics.prototype.applyTransformation = function (transform) {\r\n        var len = this._graphics.length;\r\n        for (var i = 0; i < len; ++i)\r\n            this._graphics[i].applyTransformation(transform);\r\n    };\r\n    Graphics.prototype.copyTo = function (graphics) {\r\n        graphics.material = this._material;\r\n        graphics.style = this.style;\r\n        graphics.particles = this.particles;\r\n        graphics.numParticles = this.numParticles;\r\n        var graphic;\r\n        var len = this._graphics.length;\r\n        for (var i = 0; i < len; ++i) {\r\n            graphic = this._graphics[i];\r\n            graphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle(), graphic.count, graphic.offset);\r\n        }\r\n        if (this._animator)\r\n            graphics.animator = this._animator.clone();\r\n    };\r\n    Graphics.prototype.clone = function () {\r\n        var newInstance = new Graphics();\r\n        this.copyTo(newInstance);\r\n        return newInstance;\r\n    };\r\n    /**\r\n     * Scales the geometry.\r\n     * @param scale The amount by which to scale.\r\n     */\r\n    Graphics.prototype.scale = function (scale) {\r\n        var len = this._graphics.length;\r\n        for (var i = 0; i < len; ++i)\r\n            this._graphics[i].scale(scale);\r\n    };\r\n    Graphics.prototype.clear = function () {\r\n        for (var i = this._graphics.length - 1; i >= 0; i--) {\r\n            this._graphics[i].clear();\r\n        }\r\n    };\r\n    /**\r\n     * Clears all resources used by the Graphics object, including SubGeometries.\r\n     */\r\n    Graphics.prototype.dispose = function () {\r\n        this.material = null;\r\n        for (var i = this._graphics.length - 1; i >= 0; i--)\r\n            this._graphics[i].dispose();\r\n        if (this._animator)\r\n            this._animator.dispose();\r\n    };\r\n    /**\r\n     * Scales the uv coordinates (tiling)\r\n     * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n     * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n     */\r\n    Graphics.prototype.scaleUV = function (scaleU, scaleV) {\r\n        if (scaleU === void 0) { scaleU = 1; }\r\n        if (scaleV === void 0) { scaleV = 1; }\r\n        var len = this._graphics.length;\r\n        for (var i = 0; i < len; ++i)\r\n            this._graphics[i].scaleUV(scaleU, scaleV);\r\n    };\r\n    Graphics.prototype.getBoxBounds = function () {\r\n        if (this._boxBoundsInvalid) {\r\n            this._boxBoundsInvalid = false;\r\n            if (!this._boxBounds)\r\n                this._boxBounds = new Box_1.Box();\r\n            if (this._graphics.length) {\r\n                this._boxBounds.setBoundIdentity();\r\n                var len = this._graphics.length;\r\n                for (var i = 0; i < len; i++)\r\n                    this._boxBounds = this._boxBounds.union(this._graphics[i].getBoxBounds(), this._boxBounds);\r\n            }\r\n            else {\r\n                this._boxBounds.setEmpty();\r\n            }\r\n        }\r\n        return this._boxBounds;\r\n    };\r\n    Graphics.prototype.getSphereBounds = function (center, target) {\r\n        if (target === void 0) { target = null; }\r\n        var len = this._graphics.length;\r\n        for (var i = 0; i < len; i++)\r\n            target = this._graphics[i].getSphereBounds(center, target);\r\n        return target;\r\n    };\r\n    Graphics.prototype.invalidate = function () {\r\n        _super.prototype.invalidate.call(this);\r\n        this._boxBoundsInvalid = true;\r\n        this._sphereBoundsInvalid = true;\r\n    };\r\n    Graphics.prototype._iInvalidateSurfaces = function () {\r\n        var len = this._graphics.length;\r\n        for (var i = 0; i < len; ++i)\r\n            this._graphics[i].invalidateSurface();\r\n    };\r\n    Graphics.prototype.invalidateElements = function () {\r\n        var len = this._graphics.length;\r\n        for (var i = 0; i < len; ++i)\r\n            this._graphics[i].invalidateElements();\r\n    };\r\n    Graphics.prototype._hitTestPointInternal = function (x, y) {\r\n        //TODO: handle lines as well\r\n        var len = this._graphics.length;\r\n        for (var i = 0; i < len; i++)\r\n            if (this._graphics[i].hitTestPoint(x, y, 0))\r\n                return true;\r\n        return false;\r\n    };\r\n    Graphics.prototype.acceptTraverser = function (traverser) {\r\n        var len = this._graphics.length;\r\n        for (var i = 0; i < len; i++)\r\n            traverser.applyRenderable(this._graphics[i]);\r\n    };\r\n    Graphics.prototype._onInvalidateProperties = function (event) {\r\n        this._iInvalidateSurfaces();\r\n    };\r\n    Graphics.prototype._onInvalidateVertices = function (event) {\r\n        if (event.attributesView != event.target.positions)\r\n            return;\r\n        this.invalidate();\r\n    };\r\n    Graphics.prototype.draw_fills = function () {\r\n        GraphicsFactoryFills_1.GraphicsFactoryFills.draw_pathes(this);\r\n    };\r\n    Graphics.prototype.draw_strokes = function () {\r\n        GraphicsFactoryStrokes_1.GraphicsFactoryStrokes.draw_pathes(this);\r\n    };\r\n    /**\r\n     * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n     * tiled to fill the area. The fill remains in effect until you call the\r\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n     * method. Calling the <code>clear()</code> method clears the fill.\r\n     *\r\n     * <p>The application renders the fill whenever three or more points are\r\n     * drawn, or when the <code>endFill()</code> method is called. </p>\r\n     *\r\n     * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n     *               to be displayed.\r\n     * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n     *               can use to define transformations on the bitmap. For\r\n     *               example, you can use the following matrix to rotate a bitmap\r\n     *               by 45 degrees(pi/4 radians):\r\n     * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n     *               pattern. If <code>false</code>, the bitmap image does not\r\n     *               repeat, and the edges of the bitmap are used for any fill\r\n     *               area that extends beyond the bitmap.\r\n     *\r\n     *               <p>For example, consider the following bitmap(a 20 x\r\n     *               20-pixel checkerboard pattern):</p>\r\n     *\r\n     *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n     *               in the following example), the bitmap fill repeats the\r\n     *               bitmap:</p>\r\n     *\r\n     *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n     *               the bitmap fill uses the edge pixels for the fill area\r\n     *               outside the bitmap:</p>\r\n     * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n     *               by using a nearest-neighbor algorithm and look pixelated. If\r\n     *               <code>true</code>, upscaled bitmap images are rendered by\r\n     *               using a bilinear algorithm. Rendering by using the nearest\r\n     *               neighbor algorithm is faster.\r\n     */\r\n    Graphics.prototype.beginBitmapFill = function (bitmap, matrix, repeat, smooth) {\r\n        if (matrix === void 0) { matrix = null; }\r\n        if (repeat === void 0) { repeat = true; }\r\n        if (smooth === void 0) { smooth = false; }\r\n        this.draw_fills();\r\n        // start a new fill path\r\n        this._active_fill_path = new GraphicsPath_1.GraphicsPath();\r\n        // todo: create bitmap fill style\r\n        this._active_fill_path.style = new GraphicsFillStyle_1.GraphicsFillStyle(0xffffff, 1);\r\n        if (this._current_position.x != 0 || this._current_position.y != 0)\r\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\r\n        this._queued_fill_pathes.push(this._active_fill_path);\r\n    };\r\n    /**\r\n     * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n     * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n     * when drawing. The fill remains in effect until you call the\r\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n     * method. Calling the <code>clear()</code> method clears the fill.\r\n     *\r\n     * <p>The application renders the fill whenever three or more points are\r\n     * drawn, or when the <code>endFill()</code> method is called.</p>\r\n     *\r\n     * @param color The color of the fill(0xRRGGBB).\r\n     * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n     */\r\n    Graphics.prototype.beginFill = function (color /*int*/, alpha) {\r\n        if (alpha === void 0) { alpha = 1; }\r\n        this.draw_fills();\r\n        // start a new fill path\r\n        this._active_fill_path = new GraphicsPath_1.GraphicsPath();\r\n        this._active_fill_path.style = new GraphicsFillStyle_1.GraphicsFillStyle(color, alpha);\r\n        if (this._current_position.x != 0 || this._current_position.y != 0)\r\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\r\n        this._queued_fill_pathes.push(this._active_fill_path);\r\n    };\r\n    /**\r\n     * Specifies a gradient fill used by subsequent calls to other Graphics\r\n     * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n     * the object. The fill remains in effect until you call the\r\n     * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n     * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n     * method. Calling the <code>clear()</code> method clears the fill.\r\n     *\r\n     * <p>The application renders the fill whenever three or more points are\r\n     * drawn, or when the <code>endFill()</code> method is called. </p>\r\n     *\r\n     * @param type                A value from the GradientType class that\r\n     *                            specifies which gradient type to use:\r\n     *                            <code>GradientType.LINEAR</code> or\r\n     *                            <code>GradientType.RADIAL</code>.\r\n     * @param colors              An array of RGB hexadecimal color values used\r\n     *                            in the gradient; for example, red is 0xFF0000,\r\n     *                            blue is 0x0000FF, and so on. You can specify\r\n     *                            up to 15 colors. For each color, specify a\r\n     *                            corresponding value in the alphas and ratios\r\n     *                            parameters.\r\n     * @param alphas              An array of alpha values for the corresponding\r\n     *                            colors in the colors array; valid values are 0\r\n     *                            to 1. If the value is less than 0, the default\r\n     *                            is 0. If the value is greater than 1, the\r\n     *                            default is 1.\r\n     * @param ratios              An array of color distribution ratios; valid\r\n     *                            values are 0-255. This value defines the\r\n     *                            percentage of the width where the color is\r\n     *                            sampled at 100%. The value 0 represents the\r\n     *                            left position in the gradient box, and 255\r\n     *                            represents the right position in the gradient\r\n     *                            box.\r\n     * @param matrix              A transformation matrix as defined by the\r\n     *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n     *                            class includes a\r\n     *                            <code>createGradientBox()</code> method, which\r\n     *                            lets you conveniently set up the matrix for use\r\n     *                            with the <code>beginGradientFill()</code>\r\n     *                            method.\r\n     * @param spreadMethod        A value from the SpreadMethod class that\r\n     *                            specifies which spread method to use, either:\r\n     *                            <code>SpreadMethod.PAD</code>,\r\n     *                            <code>SpreadMethod.REFLECT</code>, or\r\n     *                            <code>SpreadMethod.REPEAT</code>.\r\n     *\r\n     *                            <p>For example, consider a simple linear\r\n     *                            gradient between two colors:</p>\r\n     *\r\n     *                            <p>This example uses\r\n     *                            <code>SpreadMethod.PAD</code> for the spread\r\n     *                            method, and the gradient fill looks like the\r\n     *                            following:</p>\r\n     *\r\n     *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n     *                            for the spread method, the gradient fill looks\r\n     *                            like the following:</p>\r\n     *\r\n     *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n     *                            for the spread method, the gradient fill looks\r\n     *                            like the following:</p>\r\n     * @param interpolationMethod A value from the InterpolationMethod class that\r\n     *                            specifies which value to use:\r\n     *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n     *                            <code>InterpolationMethod.RGB</code>\r\n     *\r\n     *                            <p>For example, consider a simple linear\r\n     *                            gradient between two colors(with the\r\n     *                            <code>spreadMethod</code> parameter set to\r\n     *                            <code>SpreadMethod.REFLECT</code>). The\r\n     *                            different interpolation methods affect the\r\n     *                            appearance as follows: </p>\r\n     * @param focalPointRatio     A number that controls the location of the\r\n     *                            focal point of the gradient. 0 means that the\r\n     *                            focal point is in the center. 1 means that the\r\n     *                            focal point is at one border of the gradient\r\n     *                            circle. -1 means that the focal point is at the\r\n     *                            other border of the gradient circle. A value\r\n     *                            less than -1 or greater than 1 is rounded to -1\r\n     *                            or 1. For example, the following example shows\r\n     *                            a <code>focalPointRatio</code> set to 0.75:\r\n     * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n     */\r\n    Graphics.prototype.beginGradientFill = function (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio) {\r\n        if (matrix === void 0) { matrix = null; }\r\n        if (spreadMethod === void 0) { spreadMethod = \"pad\"; }\r\n        if (interpolationMethod === void 0) { interpolationMethod = \"rgb\"; }\r\n        if (focalPointRatio === void 0) { focalPointRatio = 0; }\r\n        this.draw_fills();\r\n        // start a new fill path\r\n        this._active_fill_path = new GraphicsPath_1.GraphicsPath();\r\n        // todo: create gradient fill style\r\n        this._active_fill_path.style = new GraphicsFillStyle_1.GraphicsFillStyle(colors[0], alphas[0]);\r\n        if (this._current_position.x != 0 || this._current_position.y != 0)\r\n            this._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\r\n        this._queued_fill_pathes.push(this._active_fill_path);\r\n    };\r\n    /**\r\n     * Copies all of drawing commands from the source Graphics object into the\r\n     * calling Graphics object.\r\n     *\r\n     * @param sourceGraphics The Graphics object from which to copy the drawing\r\n     *                       commands.\r\n     */\r\n    Graphics.prototype.copyFrom = function (sourceGraphics) {\r\n        sourceGraphics.copyTo(this);\r\n    };\r\n    /**\r\n     * Draws a cubic Bezier curve from the current drawing position to the\r\n     * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n     * and two control points. The curve interpolates the two anchor points and\r\n     * curves toward the two control points.\r\n     *\r\n     * The four points you use to draw a cubic Bezier curve with the\r\n     * <code>cubicCurveTo()</code> method are as follows:\r\n     *\r\n     * <ul>\r\n     *   <li>The current drawing position is the first anchor point. </li>\r\n     *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n     *   </li>\r\n     *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n     *   specify the first control point.</li>\r\n     *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n     *   specify the second control point.</li>\r\n     * </ul>\r\n     *\r\n     * If you call the <code>cubicCurveTo()</code> method before calling the\r\n     * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n     *\r\n     * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n     * the current drawing position to (<code>anchorX</code>,\r\n     * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n     * the current drawing position remains unchanged.\r\n     *\r\n     * If your movie clip contains content created with the Flash drawing tools,\r\n     * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n     * underneath that content.\r\n     *\r\n     * @param controlX1 Specifies the horizontal position of the first control\r\n     *                  point relative to the registration point of the parent\r\n     *                  display object.\r\n     * @param controlY1 Specifies the vertical position of the first control\r\n     *                  point relative to the registration point of the parent\r\n     *                  display object.\r\n     * @param controlX2 Specifies the horizontal position of the second control\r\n     *                  point relative to the registration point of the parent\r\n     *                  display object.\r\n     * @param controlY2 Specifies the vertical position of the second control\r\n     *                  point relative to the registration point of the parent\r\n     *                  display object.\r\n     * @param anchorX   Specifies the horizontal position of the anchor point\r\n     *                  relative to the registration point of the parent display\r\n     *                  object.\r\n     * @param anchorY   Specifies the vertical position of the anchor point\r\n     *                  relative to the registration point of the parent display\r\n     *                  object.\r\n     */\r\n    Graphics.prototype.cubicCurveTo = function (controlX1, controlY1, controlX2, controlY2, anchorX, anchorY) {\r\n        throw new PartialImplementationError_1.PartialImplementationError(\"cubicCurveTo\");\r\n        /*\r\n         t = 0.5; // given example value\r\n         x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\r\n         y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\r\n\r\n         this.queued_command_types.push(Graphics.CMD_BEZIER);\r\n         this.queued_command_data.push(controlX1);\r\n         this.queued_command_data.push(controlY1);\r\n         this.queued_command_data.push(controlX2);\r\n         this.queued_command_data.push(controlY2);\r\n         this.queued_command_data.push(anchorX);\r\n         this.queued_command_data.push(anchorY);\r\n\r\n         // todo: somehow convert cubic bezier curve into 2 quadric curves...\r\n\r\n         this.draw_direction+=0;\r\n         */\r\n    };\r\n    /**\r\n     * Draws a curve using the current line style from the current drawing\r\n     * position to(anchorX, anchorY) and using the control point that\r\n     * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n     * drawing position is then set to(<code>anchorX</code>,\r\n     * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n     * content created with the Flash drawing tools, calls to the\r\n     * <code>curveTo()</code> method are drawn underneath this content. If you\r\n     * call the <code>curveTo()</code> method before any calls to the\r\n     * <code>moveTo()</code> method, the default of the current drawing position\r\n     * is(0, 0). If any of the parameters are missing, this method fails and the\r\n     * current drawing position is not changed.\r\n     *\r\n     * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n     * consist of two anchor points and one control point. The curve interpolates\r\n     * the two anchor points and curves toward the control point. </p>\r\n     *\r\n     * @param controlX A number that specifies the horizontal position of the\r\n     *                 control point relative to the registration point of the\r\n     *                 parent display object.\r\n     * @param controlY A number that specifies the vertical position of the\r\n     *                 control point relative to the registration point of the\r\n     *                 parent display object.\r\n     * @param anchorX  A number that specifies the horizontal position of the\r\n     *                 next anchor point relative to the registration point of\r\n     *                 the parent display object.\r\n     * @param anchorY  A number that specifies the vertical position of the next\r\n     *                 anchor point relative to the registration point of the\r\n     *                 parent display object.\r\n     */\r\n    Graphics.prototype.curveTo = function (controlX, controlY, anchorX, anchorY) {\r\n        if (this._active_fill_path != null) {\r\n            this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\r\n        }\r\n        if (this._active_stroke_path != null) {\r\n            this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\r\n        }\r\n        this._current_position.x = anchorX;\r\n        this._current_position.y = anchorY;\r\n    };\r\n    /**\r\n     * Draws a circle. Set the line style, fill, or both before you call the\r\n     * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n     * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n     * method.\r\n     *\r\n     * @param x      The <i>x</i> location of the center of the circle relative\r\n     *               to the registration point of the parent display object(in\r\n     *               pixels).\r\n     * @param y      The <i>y</i> location of the center of the circle relative\r\n     *               to the registration point of the parent display object(in\r\n     *               pixels).\r\n     * @param radius The radius of the circle(in pixels).\r\n     */\r\n    Graphics.prototype.drawCircle = function (x, y, radius) {\r\n        // todo: directly create triangles instead of draw commands ?\r\n        var radius2 = radius * 1.065;\r\n        if (this._active_fill_path != null) {\r\n            this._active_fill_path.moveTo(x - radius, y);\r\n            for (var i = 8; i >= 0; i--) {\r\n                var degree = (i) * (360 / 8) * Math.PI / 180;\r\n                var degree2 = degree + ((360 / 16) * Math.PI / 180);\r\n                this._active_fill_path.curveTo(x - (Math.cos(degree2) * radius2), y + (Math.sin(degree2) * radius2), x - (Math.cos(degree) * radius), y + (Math.sin(degree) * radius));\r\n            }\r\n        }\r\n        if (this._active_stroke_path != null) {\r\n            this._active_stroke_path.moveTo(x, y + radius);\r\n            var radius2 = radius * 0.93;\r\n            this._active_stroke_path.curveTo(x - (radius2), y + (radius2), x - radius, y);\r\n            this._active_stroke_path.curveTo(x - (radius2), y - (radius2), x, y - radius);\r\n            this._active_stroke_path.curveTo(x + (radius2), y - (radius2), x + radius, y);\r\n            this._active_stroke_path.curveTo(x + (radius2), y + (radius2), x, y + radius);\r\n        }\r\n    };\r\n    /**\r\n     * Draws an ellipse. Set the line style, fill, or both before you call the\r\n     * <code>drawEllipse()</code> method, by calling the\r\n     * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n     * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n     * <code>beginBitmapFill()</code> method.\r\n     *\r\n     * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n     *               the ellipse relative to the registration point of the parent\r\n     *               display object(in pixels).\r\n     * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n     *               the ellipse relative to the registration point of the parent\r\n     *               display object(in pixels).\r\n     * @param width  The width of the ellipse(in pixels).\r\n     * @param height The height of the ellipse(in pixels).\r\n     */\r\n    Graphics.prototype.drawEllipse = function (x, y, width, height) {\r\n        width /= 2;\r\n        height /= 2;\r\n        if (this._active_fill_path != null) {\r\n            this._active_fill_path.moveTo(x, y + height);\r\n            this._active_fill_path.curveTo(x - (width), y + (height), x - width, y);\r\n            this._active_fill_path.curveTo(x - (width), y - (height), x, y - height);\r\n            this._active_fill_path.curveTo(x + (width), y - (height), x + width, y);\r\n            this._active_fill_path.curveTo(x + (width), y + (height), x, y + height);\r\n        }\r\n        if (this._active_stroke_path != null) {\r\n            this._active_stroke_path.moveTo(x, y + height);\r\n            this._active_stroke_path.curveTo(x - (width), y + (height), x - width, y);\r\n            this._active_stroke_path.curveTo(x - (width), y - (height), x, y - height);\r\n            this._active_stroke_path.curveTo(x + (width), y - (height), x + width, y);\r\n            this._active_stroke_path.curveTo(x + (width), y + (height), x, y + height);\r\n        }\r\n    };\r\n    /**\r\n     * Submits a series of IGraphicsData instances for drawing. This method\r\n     * accepts a Vector containing objects including paths, fills, and strokes\r\n     * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n     * instances can refer to a part of a shape, or a complex fully defined set\r\n     * of data for rendering a complete shape.\r\n     *\r\n     * <p> Graphics paths can contain other graphics paths. If the\r\n     * <code>graphicsData</code> Vector includes a path, that path and all its\r\n     * sub-paths are rendered during this operation. </p>\r\n     *\r\n     */\r\n    Graphics.prototype.drawGraphicsData = function (graphicsData) {\r\n        //this.draw_fills();\r\n        /*\r\n         for (var i:number=0; i<graphicsData.length; i++){\r\n         //todo\r\n         if(graphicsData[i].dataType==\"beginFill\"){\r\n\r\n         }\r\n         else if(graphicsData[i].dataType==\"endFill\"){\r\n\r\n         }\r\n         else if(graphicsData[i].dataType==\"endFill\"){\r\n\r\n         }\r\n         else if(graphicsData[i].dataType==\"Path\"){\r\n\r\n         }\r\n\r\n         }\r\n         */\r\n    };\r\n    /**\r\n     * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n     * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n     * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n     * single call. The <code>drawPath()</code> method parameters combine drawing\r\n     * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n     * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n     * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n     * coordinate location. The drawing direction is a value from the\r\n     * GraphicsPathWinding class.\r\n     *\r\n     * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n     * with a series of individual <code>lineTo()</code> and\r\n     * <code>curveTo()</code> methods. </p>\r\n     *\r\n     * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n     * so rotation and scaling of shapes is more accurate and gives better\r\n     * results. However, curves submitted using the <code>drawPath()</code>\r\n     * method can have small sub-pixel alignment errors when used in conjunction\r\n     * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n     *\r\n     * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n     * for filling and drawing lines. They are: </p>\r\n     *\r\n     * <ul>\r\n     *   <li>When a fill is applied to rendering a path:\r\n     * <ul>\r\n     *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n     * stroke rendering will still occur, consistent with the rules for strokes\r\n     * below.)</li>\r\n     *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n     * begin point) is implicitly closed.</li>\r\n     * </ul>\r\n     * </li>\r\n     *   <li>When a stroke is applied to rendering a path:\r\n     * <ul>\r\n     *   <li>The sub-paths can be composed of any number of points.</li>\r\n     *   <li>The sub-path is never implicitly closed.</li>\r\n     * </ul>\r\n     * </li>\r\n     * </ul>\r\n     *\r\n     * @param winding Specifies the winding rule using a value defined in the\r\n     *                GraphicsPathWinding class.\r\n     */\r\n    Graphics.prototype.drawPath = function (commands, data, winding) {\r\n        //todo\r\n        /*\r\n         if(this._active_fill_path!=null){\r\n         this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\r\n         }\r\n         if(this._active_stroke_path!=null){\r\n         this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\r\n         }\r\n         this._current_position.x=anchorX;\r\n         this._current_position.y=anchorY;\r\n         */\r\n    };\r\n    /**\r\n     * Draws a rectangle. Set the line style, fill, or both before you call the\r\n     * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n     * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n     * method.\r\n     *\r\n     * @param x      A number indicating the horizontal position relative to the\r\n     *               registration point of the parent display object(in pixels).\r\n     * @param y      A number indicating the vertical position relative to the\r\n     *               registration point of the parent display object(in pixels).\r\n     * @param width  The width of the rectangle(in pixels).\r\n     * @param height The height of the rectangle(in pixels).\r\n     * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n     *                       parameters are not a number\r\n     *                      (<code>Number.NaN</code>).\r\n     */\r\n    Graphics.prototype.drawRect = function (x, y, width, height) {\r\n        //todo: directly create triangles instead of drawing commands ?\r\n        if (this._active_fill_path != null) {\r\n            this._active_fill_path.moveTo(x, y);\r\n            this._active_fill_path.lineTo(x + width, y);\r\n            this._active_fill_path.lineTo(x + width, y + height);\r\n            this._active_fill_path.lineTo(x, y + height);\r\n            this._active_fill_path.lineTo(x, y);\r\n        }\r\n        if (this._active_stroke_path != null) {\r\n            this._active_stroke_path.moveTo(x, y);\r\n            this._active_stroke_path.lineTo(x + width, y);\r\n            this._active_stroke_path.lineTo(x + width, y + height);\r\n            this._active_stroke_path.lineTo(x, y + height);\r\n            this._active_stroke_path.lineTo(x, y);\r\n        }\r\n    };\r\n    /**\r\n     * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n     * call the <code>drawRoundRect()</code> method, by calling the\r\n     * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n     * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n     * <code>beginBitmapFill()</code> method.\r\n     *\r\n     * @param x             A number indicating the horizontal position relative\r\n     *                      to the registration point of the parent display\r\n     *                      object(in pixels).\r\n     * @param y             A number indicating the vertical position relative to\r\n     *                      the registration point of the parent display object\r\n     *                     (in pixels).\r\n     * @param width         The width of the round rectangle(in pixels).\r\n     * @param height        The height of the round rectangle(in pixels).\r\n     * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n     *                      corners(in pixels).\r\n     * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n     *                      corners(in pixels). Optional; if no value is\r\n     *                      specified, the default value matches that provided\r\n     *                      for the <code>ellipseWidth</code> parameter.\r\n     * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n     *                       <code>ellipseWidth</code> or\r\n     *                       <code>ellipseHeight</code> parameters are not a\r\n     *                       number(<code>Number.NaN</code>).\r\n     */\r\n    Graphics.prototype.drawRoundRect = function (x, y, width, height, ellipseWidth, ellipseHeight) {\r\n        if (ellipseHeight === void 0) { ellipseHeight = NaN; }\r\n        //todo: directly create triangles instead of drawing commands ?\r\n        if (!ellipseHeight) {\r\n            ellipseHeight = ellipseWidth;\r\n        }\r\n        if (this._active_fill_path != null) {\r\n            this._active_fill_path.moveTo(x + ellipseWidth, y);\r\n            this._active_fill_path.lineTo(x + width - ellipseWidth, y);\r\n            this._active_fill_path.curveTo(x + width, y, x + width, y + ellipseHeight);\r\n            this._active_fill_path.lineTo(x + width, y + height - ellipseHeight);\r\n            this._active_fill_path.curveTo(x + width, y + height, x + width - ellipseWidth, y + height);\r\n            this._active_fill_path.lineTo(x + ellipseWidth, y + height);\r\n            this._active_fill_path.curveTo(x, y + height, x, y + height - ellipseHeight);\r\n            this._active_fill_path.lineTo(x, y + ellipseHeight);\r\n            this._active_fill_path.curveTo(x, y, x + ellipseWidth, y);\r\n        }\r\n        if (this._active_stroke_path != null) {\r\n            this._active_stroke_path.moveTo(x + ellipseWidth, y);\r\n            this._active_stroke_path.lineTo(x + width - ellipseWidth, y);\r\n            this._active_stroke_path.curveTo(x + width, y, x + width, y + ellipseHeight);\r\n            this._active_stroke_path.lineTo(x + width, y + height - ellipseHeight);\r\n            this._active_stroke_path.curveTo(x + width, y + height, x + width - ellipseWidth, y + height);\r\n            this._active_stroke_path.lineTo(x + ellipseWidth, y + height);\r\n            this._active_stroke_path.curveTo(x, y + height, x, y + height - ellipseHeight);\r\n            this._active_stroke_path.lineTo(x, y + ellipseHeight);\r\n            this._active_stroke_path.curveTo(x, y, x + ellipseWidth, y);\r\n        }\r\n    };\r\n    //public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n    /**\r\n     * Renders a set of triangles, typically to distort bitmaps and give them a\r\n     * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n     * either the current fill, or a bitmap fill, to the triangle faces using a\r\n     * set of(u,v) coordinates.\r\n     *\r\n     * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n     * that transform matrix is ignored. </p>\r\n     *\r\n     * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n     * bitmap fill is used. </p>\r\n     *\r\n     * @param culling Specifies whether to render triangles that face in a\r\n     *                specified direction. This parameter prevents the rendering\r\n     *                of triangles that cannot be seen in the current view. This\r\n     *                parameter can be set to any value defined by the\r\n     *                TriangleCulling class.\r\n     */\r\n    Graphics.prototype.drawTriangles = function (vertices, indices, uvtData, culling) {\r\n        if (indices === void 0) { indices = null; }\r\n        if (uvtData === void 0) { uvtData = null; }\r\n        if (culling === void 0) { culling = null; }\r\n        if (this._active_fill_path != null) {\r\n        }\r\n        if (this._active_stroke_path != null) {\r\n        }\r\n    };\r\n    /**\r\n     * Applies a fill to the lines and curves that were added since the last call\r\n     * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n     * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n     * specified in the previous call to the <code>beginFill()</code>,\r\n     * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n     * method. If the current drawing position does not equal the previous\r\n     * position specified in a <code>moveTo()</code> method and a fill is\r\n     * defined, the path is closed with a line and then filled.\r\n     *\r\n     */\r\n    Graphics.prototype.endFill = function () {\r\n        this.draw_strokes();\r\n        this.draw_fills();\r\n        this._active_fill_path = null;\r\n        this._active_stroke_path = null;\r\n    };\r\n    /**\r\n     * Specifies a bitmap to use for the line stroke when drawing lines.\r\n     *\r\n     * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n     * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n     * method. The line style remains in effect until you call the\r\n     * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n     * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n     * </p>\r\n     *\r\n     * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n     * drawing a path to specify different styles for different line segments\r\n     * within a path. </p>\r\n     *\r\n     * <p>Call the <code>lineStyle()</code> method before you call the\r\n     * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n     * value of the line style is <code>undefined</code>.</p>\r\n     *\r\n     * <p>Calls to the <code>clear()</code> method set the line style back to\r\n     * <code>undefined</code>. </p>\r\n     *\r\n     * @param bitmap The bitmap to use for the line stroke.\r\n     * @param matrix An optional transformation matrix as defined by the\r\n     *               flash.geom.Matrix class. The matrix can be used to scale or\r\n     *               otherwise manipulate the bitmap before applying it to the\r\n     *               line style.\r\n     * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n     * @param smooth Whether smoothing should be applied to the bitmap.\r\n     */\r\n    Graphics.prototype.lineBitmapStyle = function (bitmap, matrix, repeat, smooth) {\r\n        if (matrix === void 0) { matrix = null; }\r\n        if (repeat === void 0) { repeat = true; }\r\n        if (smooth === void 0) { smooth = false; }\r\n        // start a new stroke path\r\n        this._active_stroke_path = new GraphicsPath_1.GraphicsPath();\r\n        if (this._current_position.x != 0 || this._current_position.y != 0)\r\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\r\n        this._queued_stroke_pathes.push(this._active_stroke_path);\r\n    };\r\n    /**\r\n     * Specifies a gradient to use for the stroke when drawing lines.\r\n     *\r\n     * <p>The gradient line style is used for subsequent calls to Graphics\r\n     * methods such as the <code>lineTo()</code> methods or the\r\n     * <code>drawCircle()</code> method. The line style remains in effect until\r\n     * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n     * methods, or the <code>lineGradientStyle()</code> method again with\r\n     * different parameters. </p>\r\n     *\r\n     * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n     * of drawing a path to specify different styles for different line segments\r\n     * within a path. </p>\r\n     *\r\n     * <p>Call the <code>lineStyle()</code> method before you call the\r\n     * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n     * value of the line style is <code>undefined</code>.</p>\r\n     *\r\n     * <p>Calls to the <code>clear()</code> method set the line style back to\r\n     * <code>undefined</code>. </p>\r\n     *\r\n     * @param type                A value from the GradientType class that\r\n     *                            specifies which gradient type to use, either\r\n     *                            GradientType.LINEAR or GradientType.RADIAL.\r\n     * @param colors              An array of RGB hexadecimal color values used\r\n     *                            in the gradient; for example, red is 0xFF0000,\r\n     *                            blue is 0x0000FF, and so on. You can specify\r\n     *                            up to 15 colors. For each color, specify a\r\n     *                            corresponding value in the alphas and ratios\r\n     *                            parameters.\r\n     * @param alphas              An array of alpha values for the corresponding\r\n     *                            colors in the colors array; valid values are 0\r\n     *                            to 1. If the value is less than 0, the default\r\n     *                            is 0. If the value is greater than 1, the\r\n     *                            default is 1.\r\n     * @param ratios              An array of color distribution ratios; valid\r\n     *                            values are 0-255. This value defines the\r\n     *                            percentage of the width where the color is\r\n     *                            sampled at 100%. The value 0 represents the\r\n     *                            left position in the gradient box, and 255\r\n     *                            represents the right position in the gradient\r\n     *                            box.\r\n     * @param matrix              A transformation matrix as defined by the\r\n     *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n     *                            class includes a\r\n     *                            <code>createGradientBox()</code> method, which\r\n     *                            lets you conveniently set up the matrix for use\r\n     *                            with the <code>lineGradientStyle()</code>\r\n     *                            method.\r\n     * @param spreadMethod        A value from the SpreadMethod class that\r\n     *                            specifies which spread method to use:\r\n     * @param interpolationMethod A value from the InterpolationMethod class that\r\n     *                            specifies which value to use. For example,\r\n     *                            consider a simple linear gradient between two\r\n     *                            colors(with the <code>spreadMethod</code>\r\n     *                            parameter set to\r\n     *                            <code>SpreadMethod.REFLECT</code>). The\r\n     *                            different interpolation methods affect the\r\n     *                            appearance as follows:\r\n     * @param focalPointRatio     A number that controls the location of the\r\n     *                            focal point of the gradient. The value 0 means\r\n     *                            the focal point is in the center. The value 1\r\n     *                            means the focal point is at one border of the\r\n     *                            gradient circle. The value -1 means that the\r\n     *                            focal point is at the other border of the\r\n     *                            gradient circle. Values less than -1 or greater\r\n     *                            than 1 are rounded to -1 or 1. The following\r\n     *                            image shows a gradient with a\r\n     *                            <code>focalPointRatio</code> of -0.75:\r\n     */\r\n    Graphics.prototype.lineGradientStyle = function (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio) {\r\n        if (matrix === void 0) { matrix = null; }\r\n        if (spreadMethod === void 0) { spreadMethod = null; }\r\n        if (interpolationMethod === void 0) { interpolationMethod = null; }\r\n        if (focalPointRatio === void 0) { focalPointRatio = 0; }\r\n        // start a new stroke path\r\n        this._active_stroke_path = new GraphicsPath_1.GraphicsPath();\r\n        if (this._current_position.x != 0 || this._current_position.y != 0)\r\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\r\n        this._queued_stroke_pathes.push(this._active_stroke_path);\r\n    };\r\n    /**\r\n     * Specifies a shader to use for the line stroke when drawing lines.\r\n     *\r\n     * <p>The shader line style is used for subsequent calls to Graphics methods\r\n     * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n     * method. The line style remains in effect until you call the\r\n     * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n     * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n     * </p>\r\n     *\r\n     * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n     * drawing a path to specify different styles for different line segments\r\n     * within a path. </p>\r\n     *\r\n     * <p>Call the <code>lineStyle()</code> method before you call the\r\n     * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n     * value of the line style is <code>undefined</code>.</p>\r\n     *\r\n     * <p>Calls to the <code>clear()</code> method set the line style back to\r\n     * <code>undefined</code>. </p>\r\n     *\r\n     * @param shader The shader to use for the line stroke.\r\n     * @param matrix An optional transformation matrix as defined by the\r\n     *               flash.geom.Matrix class. The matrix can be used to scale or\r\n     *               otherwise manipulate the bitmap before applying it to the\r\n     *               line style.\r\n     */\r\n    //\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n    //\t\t{\r\n    //\r\n    //\t\t}\r\n    /**\r\n     * Specifies a line style used for subsequent calls to Graphics methods such\r\n     * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n     * method. The line style remains in effect until you call the\r\n     * <code>lineGradientStyle()</code> method, the\r\n     * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n     * method with different parameters.\r\n     *\r\n     * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n     * drawing a path to specify different styles for different line segments\r\n     * within the path.</p>\r\n     *\r\n     * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n     * style back to <code>undefined</code>.</p>\r\n     *\r\n     * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n     * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n     *\r\n     * @param thickness    An integer that indicates the thickness of the line in\r\n     *                     points; valid values are 0-255. If a number is not\r\n     *                     specified, or if the parameter is undefined, a line is\r\n     *                     not drawn. If a value of less than 0 is passed, the\r\n     *                     default is 0. The value 0 indicates hairline\r\n     *                     thickness; the maximum thickness is 255. If a value\r\n     *                     greater than 255 is passed, the default is 255.\r\n     * @param color        A hexadecimal color value of the line; for example,\r\n     *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n     *                     value is not indicated, the default is 0x000000\r\n     *                    (black). Optional.\r\n     * @param alpha        A number that indicates the alpha value of the color\r\n     *                     of the line; valid values are 0 to 1. If a value is\r\n     *                     not indicated, the default is 1(solid). If the value\r\n     *                     is less than 0, the default is 0. If the value is\r\n     *                     greater than 1, the default is 1.\r\n     * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n     *                     specifies whether to hint strokes to full pixels. This\r\n     *                     affects both the position of anchors of a curve and\r\n     *                     the line stroke size itself. With\r\n     *                     <code>pixelHinting</code> set to <code>true</code>,\r\n     *                     line widths are adjusted to full pixel widths. With\r\n     *                     <code>pixelHinting</code> set to <code>false</code>,\r\n     *                     disjoints can appear for curves and straight lines.\r\n     *                     For example, the following illustrations show how\r\n     *                     Flash Player or Adobe AIR renders two rounded\r\n     *                     rectangles that are identical, except that the\r\n     *                     <code>pixelHinting</code> parameter used in the\r\n     *                     <code>lineStyle()</code> method is set differently\r\n     *                    (the images are scaled by 200%, to emphasize the\r\n     *                     difference):\r\n     *\r\n     *                     <p>If a value is not supplied, the line does not use\r\n     *                     pixel hinting.</p>\r\n     * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n     *                     LineScaleMode class that specifies which scale mode to\r\n     *                     use:\r\n     *                     <ul>\r\n     *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n     *                     scale the line thickness when the object is scaled\r\n     *                    (the default). </li>\r\n     *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n     *                     the line thickness. </li>\r\n     *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n     *                     scale the line thickness if the object is scaled\r\n     *                     vertically <i>only</i>. For example, consider the\r\n     *                     following circles, drawn with a one-pixel line, and\r\n     *                     each with the <code>scaleMode</code> parameter set to\r\n     *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n     *                     left is scaled vertically only, and the circle on the\r\n     *                     right is scaled both vertically and horizontally:\r\n     *                     </li>\r\n     *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n     *                     scale the line thickness if the object is scaled\r\n     *                     horizontally <i>only</i>. For example, consider the\r\n     *                     following circles, drawn with a one-pixel line, and\r\n     *                     each with the <code>scaleMode</code> parameter set to\r\n     *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n     *                     the left is scaled horizontally only, and the circle\r\n     *                     on the right is scaled both vertically and\r\n     *                     horizontally:   </li>\r\n     *                     </ul>\r\n     * @param caps        (Not supported in Flash Lite 4) A value from the\r\n     *                     CapsStyle class that specifies the type of caps at the\r\n     *                     end of lines. Valid values are:\r\n     *                     <code>CapsStyle.NONE</code>,\r\n     *                     <code>CapsStyle.ROUND</code>, and\r\n     *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n     *                     indicated, Flash uses round caps.\r\n     *\r\n     *                     <p>For example, the following illustrations show the\r\n     *                     different <code>capsStyle</code> settings. For each\r\n     *                     setting, the illustration shows a blue line with a\r\n     *                     thickness of 30(for which the <code>capsStyle</code>\r\n     *                     applies), and a superimposed black line with a\r\n     *                     thickness of 1(for which no <code>capsStyle</code>\r\n     *                     applies): </p>\r\n     * @param joints      (Not supported in Flash Lite 4) A value from the\r\n     *                     JointStyle class that specifies the type of joint\r\n     *                     appearance used at angles. Valid values are:\r\n     *                     <code>JointStyle.BEVEL</code>,\r\n     *                     <code>JointStyle.MITER</code>, and\r\n     *                     <code>JointStyle.ROUND</code>. If a value is not\r\n     *                     indicated, Flash uses round joints.\r\n     *\r\n     *                     <p>For example, the following illustrations show the\r\n     *                     different <code>joints</code> settings. For each\r\n     *                     setting, the illustration shows an angled blue line\r\n     *                     with a thickness of 30(for which the\r\n     *                     <code>jointStyle</code> applies), and a superimposed\r\n     *                     angled black line with a thickness of 1(for which no\r\n     *                     <code>jointStyle</code> applies): </p>\r\n     *\r\n     *                     <p><b>Note:</b> For <code>joints</code> set to\r\n     *                     <code>JointStyle.MITER</code>, you can use the\r\n     *                     <code>miterLimit</code> parameter to limit the length\r\n     *                     of the miter.</p>\r\n     * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n     *                     indicates the limit at which a miter is cut off. Valid\r\n     *                     values range from 1 to 255(and values outside that\r\n     *                     range are rounded to 1 or 255). This value is only\r\n     *                     used if the <code>jointStyle</code> is set to\r\n     *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n     *                     value represents the length that a miter can extend\r\n     *                     beyond the point at which the lines meet to form a\r\n     *                     joint. The value expresses a factor of the line\r\n     *                     <code>thickness</code>. For example, with a\r\n     *                     <code>miterLimit</code> factor of 2.5 and a\r\n     *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n     *                     off at 25 pixels.\r\n     *\r\n     *                     <p>For example, consider the following angled lines,\r\n     *                     each drawn with a <code>thickness</code> of 20, but\r\n     *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n     *                     Superimposed are black reference lines showing the\r\n     *                     meeting points of the joints:</p>\r\n     *\r\n     *                     <p>Notice that a given <code>miterLimit</code> value\r\n     *                     has a specific maximum angle for which the miter is\r\n     *                     cut off. The following table lists some examples:</p>\r\n     */\r\n    Graphics.prototype.lineStyle = function (thickness, color, alpha, pixelHinting, scaleMode, capstyle, jointstyle, miterLimit) {\r\n        if (thickness === void 0) { thickness = 0; }\r\n        if (color === void 0) { color = 0; }\r\n        if (alpha === void 0) { alpha = 1; }\r\n        if (pixelHinting === void 0) { pixelHinting = false; }\r\n        if (scaleMode === void 0) { scaleMode = null; }\r\n        if (capstyle === void 0) { capstyle = CapsStyle_1.CapsStyle.NONE; }\r\n        if (jointstyle === void 0) { jointstyle = JointStyle_1.JointStyle.MITER; }\r\n        if (miterLimit === void 0) { miterLimit = 100; }\r\n        // start a new stroke path\r\n        this._active_stroke_path = new GraphicsPath_1.GraphicsPath();\r\n        this._active_stroke_path.style = new GraphicsStrokeStyle_1.GraphicsStrokeStyle(color, alpha, thickness, jointstyle, capstyle, miterLimit);\r\n        if (this._current_position.x != 0 || this._current_position.y != 0)\r\n            this._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\r\n        this._queued_stroke_pathes.push(this._active_stroke_path);\r\n    };\r\n    /**\r\n     * Draws a line using the current line style from the current drawing\r\n     * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n     * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n     * which you are drawing contains content that was created with the Flash\r\n     * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n     * underneath the content. If you call <code>lineTo()</code> before any calls\r\n     * to the <code>moveTo()</code> method, the default position for the current\r\n     * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n     * method fails and the current drawing position is not changed.\r\n     *\r\n     * @param x A number that indicates the horizontal position relative to the\r\n     *          registration point of the parent display object(in pixels).\r\n     * @param y A number that indicates the vertical position relative to the\r\n     *          registration point of the parent display object(in pixels).\r\n     */\r\n    Graphics.prototype.lineTo = function (x, y) {\r\n        if (this._active_fill_path != null) {\r\n            this._active_fill_path.lineTo(x, y);\r\n        }\r\n        if (this._active_stroke_path != null) {\r\n            this._active_stroke_path.lineTo(x, y);\r\n        }\r\n        this._current_position.x = x;\r\n        this._current_position.y = y;\r\n    };\r\n    /**\r\n     * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n     * any of the parameters are missing, this method fails and the current\r\n     * drawing position is not changed.\r\n     *\r\n     * @param x A number that indicates the horizontal position relative to the\r\n     *          registration point of the parent display object(in pixels).\r\n     * @param y A number that indicates the vertical position relative to the\r\n     *          registration point of the parent display object(in pixels).\r\n     */\r\n    Graphics.prototype.moveTo = function (x, y) {\r\n        if (this._active_fill_path != null) {\r\n            this._active_fill_path.moveTo(x, y);\r\n        }\r\n        if (this._active_stroke_path != null) {\r\n            this._active_stroke_path.moveTo(x, y);\r\n        }\r\n        this._current_position.x = x;\r\n        this._current_position.y = y;\r\n    };\r\n    Graphics.assetType = \"[asset Graphics]\";\r\n    return Graphics;\r\n}(AssetBase_1.AssetBase));\r\nexports.Graphics = Graphics;\r\n},{\"../draw/CapsStyle\":\"awayjs-display/lib/draw/CapsStyle\",\"../draw/GraphicsFactoryFills\":\"awayjs-display/lib/draw/GraphicsFactoryFills\",\"../draw/GraphicsFactoryStrokes\":\"awayjs-display/lib/draw/GraphicsFactoryStrokes\",\"../draw/GraphicsFillStyle\":\"awayjs-display/lib/draw/GraphicsFillStyle\",\"../draw/GraphicsPath\":\"awayjs-display/lib/draw/GraphicsPath\",\"../draw/GraphicsStrokeStyle\":\"awayjs-display/lib/draw/GraphicsStrokeStyle\",\"../draw/JointStyle\":\"awayjs-display/lib/draw/JointStyle\",\"../events/ElementsEvent\":\"awayjs-display/lib/events/ElementsEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"awayjs-core/lib/errors/PartialImplementationError\":undefined,\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/graphics/Graphic\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar RenderableEvent_1 = require(\"../events/RenderableEvent\");\r\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\r\n/**\r\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\r\n *\r\n *\r\n * @see away.base.ElementsBase\r\n * @see away.entities.Sprite\r\n *\r\n * @class away.base.Graphic\r\n */\r\nvar Graphic = (function (_super) {\r\n    __extends(Graphic, _super);\r\n    /**\r\n     * Creates a new Graphic object\r\n     */\r\n    function Graphic(index, parent, elements, material, style, count, offset) {\r\n        var _this = this;\r\n        if (material === void 0) { material = null; }\r\n        if (style === void 0) { style = null; }\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        _super.call(this);\r\n        this._iIndex = 0;\r\n        this._boxBoundsInvalid = true;\r\n        this._sphereBoundsInvalid = true;\r\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\r\n        this._onInvalidateVerticesDelegate = function (event) { return _this._onInvalidateVertices(event); };\r\n        this._iIndex = index;\r\n        this.parent = parent;\r\n        this.elements = elements;\r\n        this.material = material;\r\n        this.style = style;\r\n        this.count = count;\r\n        this.offset = offset;\r\n    }\r\n    Object.defineProperty(Graphic.prototype, \"elements\", {\r\n        /**\r\n         * The Elements object which provides the geometry data for this Graphic.\r\n         */\r\n        get: function () {\r\n            return this._elements;\r\n        },\r\n        set: function (value) {\r\n            if (this._elements == value)\r\n                return;\r\n            this._elements = value;\r\n            this.invalidateElements();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphic.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return Graphic.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphic.prototype, \"animator\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.parent.animator;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphic.prototype, \"material\", {\r\n        //TODO test shader picking\r\n        //\t\tpublic get shaderPickingDetails():boolean\r\n        //\t\t{\r\n        //\r\n        //\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n        //\t\t}\r\n        /**\r\n         * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\r\n         */\r\n        get: function () {\r\n            return this._material || this.parent.material;\r\n        },\r\n        set: function (value) {\r\n            if (this.material)\r\n                this.material.iRemoveOwner(this);\r\n            this._material = value;\r\n            if (this.material)\r\n                this.material.iAddOwner(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Graphic.prototype, \"style\", {\r\n        /**\r\n         * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\r\n         */\r\n        get: function () {\r\n            return this._style || this.parent.style;\r\n        },\r\n        set: function (value) {\r\n            if (this._style == value)\r\n                return;\r\n            if (this._style)\r\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this._style = value;\r\n            if (this._style)\r\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this.invalidateSurface();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    Graphic.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this.parent.removeGraphic(this);\r\n        this.parent = null;\r\n        Graphic._available.push(this);\r\n    };\r\n    Graphic.prototype.invalidate = function () {\r\n        _super.prototype.invalidate.call(this);\r\n        this._boxBoundsInvalid = true;\r\n        this._sphereBoundsInvalid = true;\r\n    };\r\n    Graphic.prototype.invalidateElements = function () {\r\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_ELEMENTS, this));\r\n        this._boxBoundsInvalid = true;\r\n        this._sphereBoundsInvalid = true;\r\n    };\r\n    Graphic.prototype.invalidateSurface = function () {\r\n        this.dispatchEvent(new RenderableEvent_1.RenderableEvent(RenderableEvent_1.RenderableEvent.INVALIDATE_SURFACE, this));\r\n    };\r\n    Graphic.prototype._iGetExplicitMaterial = function () {\r\n        return this._material;\r\n    };\r\n    Graphic.prototype._iGetExplicitStyle = function () {\r\n        return this._style;\r\n    };\r\n    Graphic.prototype._onInvalidateProperties = function (event) {\r\n        this.invalidateSurface();\r\n    };\r\n    Graphic.prototype._onInvalidateVertices = function (event) {\r\n        if (event.attributesView != event.target.positions)\r\n            return;\r\n        this.invalidate();\r\n        this.dispatchEvent(event);\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @param shortestCollisionDistance\r\n     * @param findClosest\r\n     * @returns {boolean}\r\n     *\r\n     * @internal\r\n     */\r\n    Graphic.prototype._iTestCollision = function (pickingCollision, pickingCollider) {\r\n        return this._elements._iTestCollision(pickingCollider, this.material, pickingCollision, this.count, this.offset);\r\n    };\r\n    Graphic.prototype.applyTransformation = function (transform) {\r\n        this._elements.applyTransformation(transform, this.count, this.offset);\r\n    };\r\n    Graphic.prototype.hitTestPoint = function (x, y, z) {\r\n        var box;\r\n        //early out for box test\r\n        if (!(box = this.getBoxBounds()).contains(x, y, z))\r\n            return false;\r\n        return this._elements.hitTestPoint(x, y, z, box, this.count, this.offset);\r\n    };\r\n    Graphic.prototype.scale = function (scale) {\r\n        this._elements.scale(scale, this.count, this.offset);\r\n    };\r\n    Graphic.prototype.scaleUV = function (scaleU, scaleV) {\r\n        if (scaleU === void 0) { scaleU = 1; }\r\n        if (scaleV === void 0) { scaleV = 1; }\r\n        this._elements.scaleUV(scaleU, scaleV, this.count, this.offset);\r\n    };\r\n    Graphic.prototype.getBoxBounds = function () {\r\n        if (this._boxBoundsInvalid) {\r\n            this._boxBoundsInvalid = false;\r\n            this._boxBounds = this._elements.getBoxBounds(this._boxBounds || (this._boxBounds = new Box_1.Box()), this.count, this.offset);\r\n        }\r\n        return this._boxBounds;\r\n    };\r\n    Graphic.prototype.getSphereBounds = function (center, target) {\r\n        if (target === void 0) { target = null; }\r\n        return this._elements.getSphereBounds(center, target, this.count, this.offset);\r\n    };\r\n    Graphic._available = new Array();\r\n    Graphic.assetType = \"[asset Graphic]\";\r\n    return Graphic;\r\n}(AssetBase_1.AssetBase));\r\nexports.Graphic = Graphic;\r\n},{\"../events/RenderableEvent\":\"awayjs-display/lib/events/RenderableEvent\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/graphics/HitTestCache\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * @class away.base.HitTestCache\r\n */\r\nvar HitTestCache = (function () {\r\n    function HitTestCache() {\r\n        /**\r\n         *\r\n         */\r\n        this.cells = new Array();\r\n        /**\r\n         *\r\n         */\r\n        this.lastCollisionIndex = -1;\r\n    }\r\n    return HitTestCache;\r\n}());\r\nexports.HitTestCache = HitTestCache;\r\n},{}],\"awayjs-display/lib/graphics/LineElements\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\r\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nvar Float1Attributes_1 = require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nvar ElementsBase_1 = require(\"../graphics/ElementsBase\");\r\nvar ElementsUtils_1 = require(\"../utils/ElementsUtils\");\r\n/**\r\n * @class LineElements\r\n */\r\nvar LineElements = (function (_super) {\r\n    __extends(LineElements, _super);\r\n    /**\r\n     *\r\n     */\r\n    function LineElements(concatenatedBuffer) {\r\n        if (concatenatedBuffer === void 0) { concatenatedBuffer = null; }\r\n        _super.call(this, concatenatedBuffer);\r\n        this._positions = new AttributesView_1.AttributesView(Float32Array, 6, concatenatedBuffer);\r\n    }\r\n    Object.defineProperty(LineElements.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return LineElements.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineElements.prototype, \"positions\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._positions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineElements.prototype, \"thickness\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._thickness;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LineElements.prototype, \"colors\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            if (!this._colors)\r\n                this.setColors(this._colors);\r\n            return this._colors;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LineElements.prototype.getBoxBounds = function (target) {\r\n        if (target === void 0) { target = null; }\r\n        //TODO bounding calculations for lines\r\n        return target;\r\n    };\r\n    LineElements.prototype.getSphereBounds = function (center, target) {\r\n        if (target === void 0) { target = null; }\r\n        //TODO bounding calculations for lines\r\n        return target;\r\n    };\r\n    LineElements.prototype.setPositions = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (values instanceof AttributesView_1.AttributesView) {\r\n            this.clearVertices(this._positions);\r\n            this._positions = values;\r\n        }\r\n        else if (values) {\r\n            var i = 0;\r\n            var j = 0;\r\n            var index = 0;\r\n            var positions = new Float32Array(values.length * 4);\r\n            var indices = new Uint16Array(values.length);\r\n            while (i < values.length) {\r\n                if (index / 6 & 1) {\r\n                    positions[index] = values[i + 3];\r\n                    positions[index + 1] = values[i + 4];\r\n                    positions[index + 2] = values[i + 5];\r\n                    positions[index + 3] = values[i];\r\n                    positions[index + 4] = values[i + 1];\r\n                    positions[index + 5] = values[i + 2];\r\n                }\r\n                else {\r\n                    positions[index] = values[i];\r\n                    positions[index + 1] = values[i + 1];\r\n                    positions[index + 2] = values[i + 2];\r\n                    positions[index + 3] = values[i + 3];\r\n                    positions[index + 4] = values[i + 4];\r\n                    positions[index + 5] = values[i + 5];\r\n                }\r\n                index += 6;\r\n                if (++j == 4) {\r\n                    var o = index / 6 - 4;\r\n                    indices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n                    j = 0;\r\n                    i += 6;\r\n                }\r\n            }\r\n            this._positions.set(positions, offset * 4);\r\n            this.setIndices(indices, offset);\r\n        }\r\n        else {\r\n            this.clearVertices(this._positions);\r\n            this._positions = new AttributesView_1.AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n        }\r\n        this._numVertices = this._positions.count;\r\n        this.invalidateVertices(this._positions);\r\n        this._verticesDirty[this._positions.id] = false;\r\n    };\r\n    LineElements.prototype.setThickness = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (values instanceof Float1Attributes_1.Float1Attributes) {\r\n            this._thickness = values;\r\n        }\r\n        else if (values) {\r\n            if (!this._thickness)\r\n                this._thickness = new Float1Attributes_1.Float1Attributes(this._concatenatedBuffer);\r\n            var i = 0;\r\n            var j = 0;\r\n            var index = 0;\r\n            var thickness = new Float32Array(values.length * 4);\r\n            while (i < values.length) {\r\n                thickness[index] = (Math.floor(0.5 * index + 0.5) & 1) ? -values[i] : values[i];\r\n                if (++j == 4) {\r\n                    j = 0;\r\n                    i++;\r\n                }\r\n                index++;\r\n            }\r\n            this._thickness.set(thickness, offset * 4);\r\n        }\r\n        else if (this._thickness) {\r\n            this._thickness.dispose();\r\n            this._thickness = null;\r\n        }\r\n        this.invalidateVertices(this._thickness);\r\n        this._verticesDirty[this._thickness.id] = false;\r\n    };\r\n    LineElements.prototype.setColors = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (values) {\r\n            if (values == this._colors)\r\n                return;\r\n            if (values instanceof Byte4Attributes_1.Byte4Attributes) {\r\n                this.clearVertices(this._colors);\r\n                this._colors = values;\r\n            }\r\n            else {\r\n                if (!this._colors)\r\n                    this._colors = new Byte4Attributes_1.Byte4Attributes(this._concatenatedBuffer);\r\n                var i = 0;\r\n                var j = 0;\r\n                var index = 0;\r\n                var colors = new Uint8Array(values.length * 4);\r\n                while (i < values.length) {\r\n                    if (index / 4 & 1) {\r\n                        colors[index] = values[i + 4];\r\n                        colors[index + 1] = values[i + 5];\r\n                        colors[index + 2] = values[i + 6];\r\n                        colors[index + 3] = values[i + 7];\r\n                    }\r\n                    else {\r\n                        colors[index] = values[i];\r\n                        colors[index + 1] = values[i + 1];\r\n                        colors[index + 2] = values[i + 2];\r\n                        colors[index + 3] = values[i + 3];\r\n                    }\r\n                    if (++j == 4) {\r\n                        j = 0;\r\n                        i += 8;\r\n                    }\r\n                    index += 4;\r\n                }\r\n                this._colors.set(colors, offset * 4);\r\n            }\r\n        }\r\n        else {\r\n            //auto-derive colors\r\n            this._colors = ElementsUtils_1.ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n        }\r\n        this.invalidateVertices(this._colors);\r\n        this._verticesDirty[this._colors.id] = false;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    LineElements.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this._positions.dispose();\r\n        this._positions = null;\r\n        this._thickness.dispose();\r\n        this._thickness = null;\r\n        this._colors.dispose();\r\n        this._colors = null;\r\n    };\r\n    /**\r\n     * Clones the current object\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    LineElements.prototype.clone = function () {\r\n        var clone = new LineElements(this._concatenatedBuffer ? this._concatenatedBuffer.clone() : null);\r\n        clone.setIndices(this.indices.clone());\r\n        clone.setPositions(this._positions.clone());\r\n        clone.setThickness(this._thickness.clone());\r\n        clone.setColors(this._colors.clone());\r\n        return clone;\r\n    };\r\n    LineElements.prototype._iTestCollision = function (pickingCollider, material, pickingCollision, count, offset) {\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        return pickingCollider.testLineCollision(this, material, pickingCollision, count || this._numVertices, offset);\r\n    };\r\n    LineElements.assetType = \"[asset LineElements]\";\r\n    return LineElements;\r\n}(ElementsBase_1.ElementsBase));\r\nexports.LineElements = LineElements;\r\n},{\"../graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"../utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float1Attributes\":undefined}],\"awayjs-display/lib/graphics/TriangleElements\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesView_1 = require(\"awayjs-core/lib/attributes/AttributesView\");\r\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nvar Float2Attributes_1 = require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nvar ElementsBase_1 = require(\"../graphics/ElementsBase\");\r\nvar ElementsUtils_1 = require(\"../utils/ElementsUtils\");\r\n/**\r\n * @class away.base.TriangleElements\r\n */\r\nvar TriangleElements = (function (_super) {\r\n    __extends(TriangleElements, _super);\r\n    function TriangleElements() {\r\n        _super.apply(this, arguments);\r\n        this._faceNormalsDirty = true;\r\n        this._faceTangentsDirty = true;\r\n        this._autoDeriveNormals = true;\r\n        this._autoDeriveTangents = true;\r\n        //used for hittesting geometry\r\n        this.hitTestCache = new Object();\r\n    }\r\n    Object.defineProperty(TriangleElements.prototype, \"assetType\", {\r\n        get: function () {\r\n            return TriangleElements.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"useCondensedIndices\", {\r\n        /**\r\n         * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n         * by condensing the number of joint index values required per sprite. Only applicable to\r\n         * skeleton animations that utilise more than one sprite object. Defaults to false.\r\n         */\r\n        get: function () {\r\n            return this._useCondensedIndices;\r\n        },\r\n        set: function (value) {\r\n            if (this._useCondensedIndices == value)\r\n                return;\r\n            this._useCondensedIndices = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"jointsPerVertex\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._jointsPerVertex;\r\n        },\r\n        set: function (value) {\r\n            if (this._jointsPerVertex == value)\r\n                return;\r\n            this._jointsPerVertex = value;\r\n            if (this._jointIndices)\r\n                this._jointIndices.dimensions = this._jointsPerVertex;\r\n            if (this._jointWeights)\r\n                this._jointWeights.dimensions = this._jointsPerVertex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"autoDeriveNormals\", {\r\n        /**\r\n         * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n         * explicitly.\r\n         */\r\n        get: function () {\r\n            return this._autoDeriveNormals;\r\n        },\r\n        set: function (value) {\r\n            if (this._autoDeriveNormals == value)\r\n                return;\r\n            this._autoDeriveNormals = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"autoDeriveTangents\", {\r\n        /**\r\n         * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n         * explicitly.\r\n         */\r\n        get: function () {\r\n            return this._autoDeriveTangents;\r\n        },\r\n        set: function (value) {\r\n            if (this._autoDeriveTangents == value)\r\n                return;\r\n            this._autoDeriveTangents = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"positions\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            if (!this._positions)\r\n                this.setPositions(new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer));\r\n            return this._positions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"normals\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            if (!this._normals || this._verticesDirty[this._normals.id])\r\n                this.setNormals(this._normals);\r\n            return this._normals;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"tangents\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            if (!this._tangents || this._verticesDirty[this._tangents.id])\r\n                this.setTangents(this._tangents);\r\n            return this._tangents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"faceNormals\", {\r\n        /**\r\n         * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n         */\r\n        get: function () {\r\n            if (this._faceNormalsDirty)\r\n                this.updateFaceNormals();\r\n            return this._faceNormals;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"faceTangents\", {\r\n        /**\r\n         * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n         */\r\n        get: function () {\r\n            if (this._faceTangentsDirty)\r\n                this.updateFaceTangents();\r\n            return this._faceTangents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"uvs\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._uvs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"jointIndices\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._jointIndices;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"jointWeights\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._jointWeights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleElements.prototype, \"condensedIndexLookUp\", {\r\n        get: function () {\r\n            return this._condensedIndexLookUp;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TriangleElements.prototype.getBoxBounds = function (target, count, offset) {\r\n        if (target === void 0) { target = null; }\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        return ElementsUtils_1.ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, count || this._numVertices, offset);\r\n    };\r\n    TriangleElements.prototype.getSphereBounds = function (center, target, count, offset) {\r\n        if (target === void 0) { target = null; }\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        return ElementsUtils_1.ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, count || this._numVertices, offset);\r\n    };\r\n    TriangleElements.prototype.hitTestPoint = function (x, y, z, box, count, offset) {\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        return ElementsUtils_1.ElementsUtils.hitTestTriangleElements(x, y, 0, box, this, count || this._numVertices, offset);\r\n    };\r\n    TriangleElements.prototype.setPositions = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (values == this._positions)\r\n            return;\r\n        if (values instanceof AttributesView_1.AttributesView) {\r\n            this.clearVertices(this._positions);\r\n            this._positions = values;\r\n        }\r\n        else if (values) {\r\n            if (!this._positions)\r\n                this._positions = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer);\r\n            this._positions.set(values, offset);\r\n        }\r\n        else {\r\n            this.clearVertices(this._positions);\r\n            this._positions = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer); //positions cannot be null\r\n        }\r\n        this._numVertices = this._positions.count;\r\n        if (this._autoDeriveNormals)\r\n            this.invalidateVertices(this._normals);\r\n        if (this._autoDeriveTangents)\r\n            this.invalidateVertices(this._tangents);\r\n        this.invalidateVertices(this._positions);\r\n        this._verticesDirty[this._positions.id] = false;\r\n    };\r\n    TriangleElements.prototype.setNormals = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (!this._autoDeriveNormals) {\r\n            if (values == this._normals)\r\n                return;\r\n            if (values instanceof Float3Attributes_1.Float3Attributes) {\r\n                this.clearVertices(this._normals);\r\n                this._normals = values;\r\n            }\r\n            else if (values) {\r\n                if (!this._normals)\r\n                    this._normals = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer);\r\n                this._normals.set(values, offset);\r\n            }\r\n            else if (this._normals) {\r\n                this.clearVertices(this._normals);\r\n                this._normals = null;\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            this._normals = ElementsUtils_1.ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\r\n        }\r\n        this.invalidateVertices(this._normals);\r\n        this._verticesDirty[this._normals.id] = false;\r\n    };\r\n    TriangleElements.prototype.setTangents = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (!this._autoDeriveTangents) {\r\n            if (values == this._tangents)\r\n                return;\r\n            if (values instanceof Float3Attributes_1.Float3Attributes) {\r\n                this.clearVertices(this._tangents);\r\n                this._tangents = values;\r\n            }\r\n            else if (values) {\r\n                if (!this._tangents)\r\n                    this._tangents = new Float3Attributes_1.Float3Attributes(this._concatenatedBuffer);\r\n                this._tangents.set(values, offset);\r\n            }\r\n            else if (this._tangents) {\r\n                this.clearVertices(this._tangents);\r\n                this._tangents = null;\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            this._tangents = ElementsUtils_1.ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\r\n        }\r\n        this.invalidateVertices(this._tangents);\r\n        this._verticesDirty[this._tangents.id] = false;\r\n    };\r\n    TriangleElements.prototype.setUVs = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (values == this._uvs)\r\n            return;\r\n        if (values instanceof AttributesView_1.AttributesView) {\r\n            this.clearVertices(this._uvs);\r\n            this._uvs = values;\r\n        }\r\n        else if (values) {\r\n            if (!this._uvs)\r\n                this._uvs = new Float2Attributes_1.Float2Attributes(this._concatenatedBuffer);\r\n            this._uvs.set(values, offset);\r\n        }\r\n        else if (this._uvs) {\r\n            this.clearVertices(this._uvs);\r\n            this._uvs = null;\r\n            return;\r\n        }\r\n        this.invalidateVertices(this._uvs);\r\n        this._verticesDirty[this._uvs.id] = false;\r\n    };\r\n    TriangleElements.prototype.setJointIndices = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (values == this._jointIndices)\r\n            return;\r\n        if (values instanceof AttributesView_1.AttributesView) {\r\n            this.clearVertices(this._jointIndices);\r\n            this._jointIndices = values;\r\n        }\r\n        else if (values) {\r\n            if (!this._jointIndices)\r\n                this._jointIndices = new AttributesView_1.AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n            if (this._useCondensedIndices) {\r\n                var i = 0;\r\n                var oldIndex;\r\n                var newIndex = 0;\r\n                var dic = new Object();\r\n                this._condensedIndexLookUp = new Array();\r\n                while (i < values.length) {\r\n                    oldIndex = values[i];\r\n                    // if we encounter a new index, assign it a new condensed index\r\n                    if (dic[oldIndex] == undefined) {\r\n                        dic[oldIndex] = newIndex;\r\n                        this._condensedIndexLookUp[newIndex++] = oldIndex;\r\n                    }\r\n                    //reset value to dictionary lookup\r\n                    values[i++] = dic[oldIndex];\r\n                }\r\n            }\r\n            this._jointIndices.set(values, offset);\r\n        }\r\n        else if (this._jointIndices) {\r\n            this.clearVertices(this._jointIndices);\r\n            this._jointIndices = null;\r\n            return;\r\n        }\r\n        this.invalidateVertices(this._jointIndices);\r\n        this._verticesDirty[this._jointIndices.id] = false;\r\n    };\r\n    TriangleElements.prototype.setJointWeights = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (values == this._jointWeights)\r\n            return;\r\n        if (values instanceof AttributesView_1.AttributesView) {\r\n            this.clearVertices(this._jointWeights);\r\n            this._jointWeights = values;\r\n        }\r\n        else if (values) {\r\n            if (!this._jointWeights)\r\n                this._jointWeights = new AttributesView_1.AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n            this._jointWeights.set(values, offset);\r\n        }\r\n        else if (this._jointWeights) {\r\n            this.clearVertices(this._jointWeights);\r\n            this._jointWeights = null;\r\n            return;\r\n        }\r\n        this.invalidateVertices(this._jointWeights);\r\n        this._verticesDirty[this._jointWeights.id] = false;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    TriangleElements.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        if (this._positions) {\r\n            this._positions.dispose();\r\n            this._positions = null;\r\n        }\r\n        if (this._normals) {\r\n            this._normals.dispose();\r\n            this._normals = null;\r\n        }\r\n        if (this._tangents) {\r\n            this._tangents.dispose();\r\n            this._tangents = null;\r\n        }\r\n        if (this._uvs) {\r\n            this._uvs.dispose();\r\n            this._uvs = null;\r\n        }\r\n        if (this._jointIndices) {\r\n            this._jointIndices.dispose();\r\n            this._jointIndices = null;\r\n        }\r\n        if (this._jointWeights) {\r\n            this._jointWeights.dispose();\r\n            this._jointWeights = null;\r\n        }\r\n        if (this._faceNormals) {\r\n            this._faceNormals.dispose();\r\n            this._faceNormals = null;\r\n        }\r\n        if (this._faceTangents) {\r\n            this._faceTangents.dispose();\r\n            this._faceTangents = null;\r\n        }\r\n    };\r\n    TriangleElements.prototype.setIndices = function (values, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        _super.prototype.setIndices.call(this, values, offset);\r\n        this._faceNormalsDirty = true;\r\n        this._faceTangentsDirty = true;\r\n        if (this._autoDeriveNormals)\r\n            this.invalidateVertices(this._normals);\r\n        if (this._autoDeriveTangents)\r\n            this.invalidateVertices(this._tangents);\r\n    };\r\n    TriangleElements.prototype.copyTo = function (elements) {\r\n        _super.prototype.copyTo.call(this, elements);\r\n        //temp disable auto derives\r\n        var autoDeriveNormals = this._autoDeriveNormals;\r\n        var autoDeriveTangents = this._autoDeriveTangents;\r\n        elements.autoDeriveNormals = this._autoDeriveNormals = false;\r\n        elements.autoDeriveTangents = this._autoDeriveTangents = false;\r\n        elements.setPositions(this.positions.clone());\r\n        if (this.normals)\r\n            elements.setNormals(this.normals.clone());\r\n        if (this.tangents)\r\n            elements.setTangents(this.tangents.clone());\r\n        if (this.uvs)\r\n            elements.setUVs(this.uvs.clone());\r\n        elements.jointsPerVertex = this._jointsPerVertex;\r\n        if (this.jointIndices)\r\n            elements.setJointIndices(this.jointIndices.clone());\r\n        if (this.jointWeights)\r\n            elements.setJointWeights(this.jointWeights.clone());\r\n        //return auto derives to cloned values\r\n        elements.autoDeriveNormals = this._autoDeriveNormals = autoDeriveNormals;\r\n        elements.autoDeriveTangents = this._autoDeriveTangents = autoDeriveTangents;\r\n    };\r\n    /**\r\n     * Clones the current object\r\n     * @return An exact duplicate of the current object.\r\n     */\r\n    TriangleElements.prototype.clone = function () {\r\n        var clone = new TriangleElements(this._concatenatedBuffer ? this._concatenatedBuffer.clone() : null);\r\n        this.copyTo(clone);\r\n        return clone;\r\n    };\r\n    TriangleElements.prototype.scaleUV = function (scaleU, scaleV, count, offset) {\r\n        if (scaleU === void 0) { scaleU = 1; }\r\n        if (scaleV === void 0) { scaleV = 1; }\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        if (this.uvs)\r\n            ElementsUtils_1.ElementsUtils.scale(scaleU, scaleV, 0, this.uvs, count || this._numVertices, offset);\r\n    };\r\n    /**\r\n     * Scales the geometry.\r\n     * @param scale The amount by which to scale.\r\n     */\r\n    TriangleElements.prototype.scale = function (scale, count, offset) {\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        ElementsUtils_1.ElementsUtils.scale(scale, scale, scale, this.positions, count || this._numVertices, offset);\r\n    };\r\n    TriangleElements.prototype.applyTransformation = function (transform, count, offset) {\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        ElementsUtils_1.ElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, count || this._numVertices, offset);\r\n    };\r\n    /**\r\n     * Updates the tangents for each face.\r\n     */\r\n    TriangleElements.prototype.updateFaceTangents = function () {\r\n        this._faceTangents = ElementsUtils_1.ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\r\n        this._faceTangentsDirty = false;\r\n    };\r\n    /**\r\n     * Updates the normals for each face.\r\n     */\r\n    TriangleElements.prototype.updateFaceNormals = function () {\r\n        this._faceNormals = ElementsUtils_1.ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\r\n        this._faceNormalsDirty = false;\r\n    };\r\n    TriangleElements.prototype._iTestCollision = function (pickingCollider, material, pickingCollision, count, offset) {\r\n        if (count === void 0) { count = 0; }\r\n        if (offset === void 0) { offset = 0; }\r\n        return pickingCollider.testTriangleCollision(this, material, pickingCollision, count || this._numVertices, offset);\r\n    };\r\n    TriangleElements.assetType = \"[asset TriangleElements]\";\r\n    return TriangleElements;\r\n}(ElementsBase_1.ElementsBase));\r\nexports.TriangleElements = TriangleElements;\r\n},{\"../graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"../utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\",\"awayjs-core/lib/attributes/AttributesView\":undefined,\"awayjs-core/lib/attributes/Float2Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined}],\"awayjs-display/lib/graphics\":[function(require,module,exports){\n\"use strict\";\r\nvar ElementsBase_1 = require(\"./graphics/ElementsBase\");\r\nexports.ElementsBase = ElementsBase_1.ElementsBase;\r\nvar ElementsType_1 = require(\"./graphics/ElementsType\");\r\nexports.ElementsType = ElementsType_1.ElementsType;\r\nvar Graphic_1 = require(\"./graphics/Graphic\");\r\nexports.Graphic = Graphic_1.Graphic;\r\nvar Graphics_1 = require(\"./graphics/Graphics\");\r\nexports.Graphics = Graphics_1.Graphics;\r\nvar LineElements_1 = require(\"./graphics/LineElements\");\r\nexports.LineElements = LineElements_1.LineElements;\r\nvar TriangleElements_1 = require(\"./graphics/TriangleElements\");\r\nexports.TriangleElements = TriangleElements_1.TriangleElements;\r\n},{\"./graphics/ElementsBase\":\"awayjs-display/lib/graphics/ElementsBase\",\"./graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"./graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"./graphics/Graphics\":\"awayjs-display/lib/graphics/Graphics\",\"./graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"./graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\"}],\"awayjs-display/lib/managers/DefaultFontManager\":[function(require,module,exports){\n\"use strict\";\r\nvar DefaultFontManager = (function () {\r\n    function DefaultFontManager() {\r\n    }\r\n    DefaultFontManager.getDefaultFontTable = function () {\r\n        if (DefaultFontManager._default_font_table == null) {\r\n            DefaultFontManager.createDefaultFontTable();\r\n        }\r\n        return DefaultFontManager._default_font_table;\r\n    };\r\n    DefaultFontManager.createDefaultFontTable = function () {\r\n        /*\r\n        var allchars=[];\r\n        //allchars[cnt1++] = ['33',[0,0,226,67,0,192,11,68,127,127,0,0,0,128,177,67,0,80,137,68,127,127,0,0,0,0,212,67,0,192,204,68,127,127,0,0,0,0,212,67,0,192,204,68,127,127,0,0,0,128,177,67,0,80,137,68,127,127,0,0,0,0,129,67,0,192,204,68,127,127,0,0,0,0,129,67,0,192,204,68,127,127,0,0,0,128,177,67,0,80,137,68,127,127,0,0,0,0,100,67,0,192,11,68,127,127,0,0,0,0,100,67,0,192,11,68,127,127,0,0,0,128,177,67,0,80,137,68,127,127,0,0,0,0,226,67,0,192,11,68,127,127,0,0,0,0,221,67,0,0,0,69,127,127,0,0,0,0,170,67,0,208,242,68,127,127,0,0,0,0,110,67,0,0,0,69,127,127,0,0,0,0,110,67,0,0,0,69,127,127,0,0,0,0,170,67,0,208,242,68,127,127,0,0,0,0,110,67,0,160,229,68,127,127,0,0,0,0,110,67,0,160,229,68,127,127,0,0,0,0,170,67,0,208,242,68,127,127,0,0,0,0,221,67,0,160,229,68,127,127,0,0,0,0,221,67,0,160,229,68,127,127,0,0,0,0,170,67,0,208,242,68,127,127,0,0,0,0,221,67,0,0,0,69,127,127]]\r\n        var i:number=0;\r\n        for(i=0; i<cnt1;i++){\r\n            var vertexBuffer:AttributesBuffer = new AttributesBuffer(20, allchars[i][1].length / 20);\r\n            vertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> allchars[i][1]);\r\n\r\n            var curve_elements:TriangleElements = new TriangleElements(vertexBuffer);\r\n\r\n            curve_elements.setPositions(new Float2Attributes(vertexBuffer));\r\n            curve_elements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\r\n\r\n            //add UVs if they exist in the data\r\n            if (attr_count == 28)\r\n                curve_elements.setUVs(new Float2Attributes(vertexBuffer));\r\n\r\n            new_font_style.setChar(font_style_char.toString(), curve_elements, char_width);\r\n            DefaultFontManager._default_font_table = new TesselatedFontTable();\r\n        }\r\n        */\r\n        //DefaultFontManager._default_font_table.\r\n    };\r\n    return DefaultFontManager;\r\n}());\r\nexports.DefaultFontManager = DefaultFontManager;\r\n},{}],\"awayjs-display/lib/managers/DefaultMaterialManager\":[function(require,module,exports){\n\"use strict\";\r\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\r\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\r\nvar BitmapImageCube_1 = require(\"awayjs-core/lib/image/BitmapImageCube\");\r\nvar LineElements_1 = require(\"../graphics/LineElements\");\r\nvar Skybox_1 = require(\"../display/Skybox\");\r\nvar BasicMaterial_1 = require(\"../materials/BasicMaterial\");\r\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\r\nvar SingleCubeTexture_1 = require(\"../textures/SingleCubeTexture\");\r\nvar Graphic_1 = require(\"../graphics/Graphic\");\r\nvar DefaultMaterialManager = (function () {\r\n    function DefaultMaterialManager() {\r\n    }\r\n    DefaultMaterialManager.getDefaultMaterial = function (renderable) {\r\n        if (renderable === void 0) { renderable = null; }\r\n        if (renderable != null && renderable.isAsset(Graphic_1.Graphic) && renderable.elements.isAsset(LineElements_1.LineElements)) {\r\n            if (!DefaultMaterialManager._defaultColorMaterial)\r\n                DefaultMaterialManager.createDefaultColorMaterial();\r\n            return DefaultMaterialManager._defaultColorMaterial;\r\n        }\r\n        if (renderable != null && renderable.isAsset(Skybox_1.Skybox)) {\r\n            if (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n                DefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n            return DefaultMaterialManager._defaultCubeTextureMaterial;\r\n        }\r\n        if (!DefaultMaterialManager._defaultTextureMaterial)\r\n            DefaultMaterialManager.createDefaultTextureMaterial();\r\n        return DefaultMaterialManager._defaultTextureMaterial;\r\n    };\r\n    DefaultMaterialManager.getDefaultTexture = function (renderable) {\r\n        if (renderable === void 0) { renderable = null; }\r\n        if (renderable != null && renderable.isAsset(Skybox_1.Skybox)) {\r\n            if (!DefaultMaterialManager._defaultCubeTexture)\r\n                DefaultMaterialManager.createDefaultCubeTexture();\r\n            return DefaultMaterialManager._defaultCubeTexture;\r\n        }\r\n        if (!DefaultMaterialManager._defaultTexture)\r\n            DefaultMaterialManager.createDefaultTexture();\r\n        return DefaultMaterialManager._defaultTexture;\r\n    };\r\n    DefaultMaterialManager.getDefaultImage2D = function () {\r\n        if (!DefaultMaterialManager._defaultBitmapImage2D)\r\n            DefaultMaterialManager.createDefaultImage2D();\r\n        return DefaultMaterialManager._defaultBitmapImage2D;\r\n    };\r\n    DefaultMaterialManager.getDefaultImageCube = function () {\r\n        if (!DefaultMaterialManager._defaultBitmapImageCube)\r\n            DefaultMaterialManager.createDefaultImageCube();\r\n        return DefaultMaterialManager._defaultBitmapImageCube;\r\n    };\r\n    DefaultMaterialManager.getDefaultSampler = function () {\r\n        if (!DefaultMaterialManager._defaultSampler2D)\r\n            DefaultMaterialManager.createDefaultSampler2D();\r\n        return DefaultMaterialManager._defaultSampler2D;\r\n    };\r\n    DefaultMaterialManager.createDefaultTexture = function () {\r\n        DefaultMaterialManager._defaultTexture = new Single2DTexture_1.Single2DTexture();\r\n        DefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n    };\r\n    DefaultMaterialManager.createDefaultCubeTexture = function () {\r\n        DefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture_1.SingleCubeTexture();\r\n        DefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n    };\r\n    DefaultMaterialManager.createDefaultImageCube = function () {\r\n        if (!DefaultMaterialManager._defaultBitmapImage2D)\r\n            DefaultMaterialManager.createDefaultImage2D();\r\n        var b = new BitmapImageCube_1.BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n        for (var i = 0; i < 6; i++)\r\n            b.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n        DefaultMaterialManager._defaultBitmapImageCube = b;\r\n    };\r\n    DefaultMaterialManager.createDefaultImage2D = function () {\r\n        var b = new BitmapImage2D_1.BitmapImage2D(8, 8, false, 0x000000);\r\n        //create chekerboard\r\n        var i, j;\r\n        for (i = 0; i < 8; i++)\r\n            for (j = 0; j < 8; j++)\r\n                if ((j & 1) ^ (i & 1))\r\n                    b.setPixel(i, j, 0XFFFFFF);\r\n        DefaultMaterialManager._defaultBitmapImage2D = b;\r\n    };\r\n    DefaultMaterialManager.createDefaultTextureMaterial = function () {\r\n        if (!DefaultMaterialManager._defaultTexture)\r\n            DefaultMaterialManager.createDefaultTexture();\r\n        DefaultMaterialManager._defaultTextureMaterial = new BasicMaterial_1.BasicMaterial();\r\n        DefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\r\n        DefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n    };\r\n    DefaultMaterialManager.createDefaultCubeTextureMaterial = function () {\r\n        if (!DefaultMaterialManager._defaultCubeTexture)\r\n            DefaultMaterialManager.createDefaultCubeTexture();\r\n        DefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial_1.BasicMaterial();\r\n        DefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\r\n        DefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n    };\r\n    DefaultMaterialManager.createDefaultColorMaterial = function () {\r\n        DefaultMaterialManager._defaultColorMaterial = new BasicMaterial_1.BasicMaterial(0xFFFFFF);\r\n        DefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n    };\r\n    DefaultMaterialManager.createDefaultSampler2D = function () {\r\n        DefaultMaterialManager._defaultSampler2D = new Sampler2D_1.Sampler2D();\r\n    };\r\n    return DefaultMaterialManager;\r\n}());\r\nexports.DefaultMaterialManager = DefaultMaterialManager;\r\n},{\"../display/Skybox\":\"awayjs-display/lib/display/Skybox\",\"../graphics/Graphic\":\"awayjs-display/lib/graphics/Graphic\",\"../graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"../materials/BasicMaterial\":\"awayjs-display/lib/materials/BasicMaterial\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"../textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-core/lib/image/BitmapImageCube\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined}],\"awayjs-display/lib/managers/FrameScriptManager\":[function(require,module,exports){\n\"use strict\";\r\nvar FrameScriptManager = (function () {\r\n    function FrameScriptManager() {\r\n    }\r\n    FrameScriptManager.setInterval = function (func) {\r\n        this._intervalID++;\r\n        this._active_intervals[this._intervalID] = func;\r\n        return this._intervalID;\r\n    };\r\n    FrameScriptManager.clearInterval = function (id) {\r\n        delete this._active_intervals[id];\r\n    };\r\n    FrameScriptManager.execute_intervals = function () {\r\n        for (var key in this._active_intervals) {\r\n            this._active_intervals[key].call();\r\n        }\r\n    };\r\n    FrameScriptManager.add_child_to_dispose = function (child) {\r\n        this._queued_dispose.push(child);\r\n    };\r\n    FrameScriptManager.add_script_to_queue = function (mc, script) {\r\n        // whenever we queue scripts of new objects, we first inject the lists of pass2\r\n        var i = this._queued_mcs_pass2.length;\r\n        while (i--) {\r\n            this._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n            this._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n        }\r\n        this._queued_mcs_pass2.length = 0;\r\n        this._queued_scripts_pass2.length = 0;\r\n        this._queued_mcs.push(mc);\r\n        this._queued_scripts.push(script);\r\n    };\r\n    FrameScriptManager.add_script_to_queue_pass2 = function (mc, script) {\r\n        this._queued_mcs_pass2.push(mc);\r\n        this._queued_scripts_pass2.push(script);\r\n    };\r\n    FrameScriptManager.execute_queue = function () {\r\n        if (this._queued_mcs.length == 0 && this._queued_mcs_pass2.length == 0)\r\n            return;\r\n        var i = this._queued_mcs_pass2.length;\r\n        while (i--) {\r\n            this._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n            this._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n        }\r\n        this._queued_mcs_pass2.length = 0;\r\n        this._queued_scripts_pass2.length = 0;\r\n        var mc;\r\n        for (i = 0; i < this._queued_mcs.length; i++) {\r\n            // during the loop we might add more scripts to the queue\r\n            mc = this._queued_mcs[i];\r\n            if (mc.scene != null) {\r\n                var caller = mc.adapter ? mc.adapter : mc;\r\n                //\ttry {\r\n                this._queued_scripts[i].call(caller);\r\n            }\r\n        }\r\n        // all scripts executed. clear all\r\n        this._queued_mcs.length = 0;\r\n        this._queued_scripts.length = 0;\r\n    };\r\n    FrameScriptManager.execute_dispose = function () {\r\n        var len = this._queued_dispose.length;\r\n        for (var i = 0; i < len; i++)\r\n            this._queued_dispose[i].dispose();\r\n        this._queued_dispose.length = 0;\r\n    };\r\n    // FrameScript debugging:\r\n    // the first line of a FrameScript should be a comment that represents the functions unique name\r\n    // the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\r\n    // this object can be set as \"frameScriptDebug\" in order to enable debug mode\r\n    FrameScriptManager.frameScriptDebug = undefined;\r\n    //queue of objects for disposal\r\n    FrameScriptManager._queued_dispose = new Array();\r\n    // queues pass1 of scripts.\r\n    FrameScriptManager._queued_mcs = [];\r\n    FrameScriptManager._queued_scripts = [];\r\n    // queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\r\n    FrameScriptManager._queued_mcs_pass2 = [];\r\n    FrameScriptManager._queued_scripts_pass2 = [];\r\n    FrameScriptManager._active_intervals = new Object(); // maps id to function\r\n    FrameScriptManager._intervalID = 0;\r\n    return FrameScriptManager;\r\n}());\r\nexports.FrameScriptManager = FrameScriptManager;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = FrameScriptManager;\r\n},{}],\"awayjs-display/lib/managers/MouseManager\":[function(require,module,exports){\n\"use strict\";\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar TouchPoint_1 = require(\"../base/TouchPoint\");\r\nvar MouseEvent_1 = require(\"../events/MouseEvent\");\r\nvar FrameScriptManager_1 = require(\"../managers/FrameScriptManager\");\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nvar MouseManager = (function () {\r\n    /**\r\n     * Creates a new <code>MouseManager</code> object.\r\n     */\r\n    function MouseManager() {\r\n        var _this = this;\r\n        this._viewLookup = new Array();\r\n        this._nullVector = new Vector3D_1.Vector3D();\r\n        this._queuedEvents = new Array();\r\n        this._mouseUp = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_UP);\r\n        this._mouseClick = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.CLICK);\r\n        this._mouseOut = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_OUT);\r\n        this._mouseDown = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_DOWN);\r\n        this._mouseMove = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_MOVE);\r\n        this._mouseOver = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_OVER);\r\n        this._mouseWheel = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.MOUSE_WHEEL);\r\n        this._mouseDoubleClick = new MouseEvent_1.MouseEvent(MouseEvent_1.MouseEvent.DOUBLE_CLICK);\r\n        this.onClickDelegate = function (event) { return _this.onClick(event); };\r\n        this.onDoubleClickDelegate = function (event) { return _this.onDoubleClick(event); };\r\n        this.onMouseDownDelegate = function (event) { return _this.onMouseDown(event); };\r\n        this.onMouseMoveDelegate = function (event) { return _this.onMouseMove(event); };\r\n        this.onMouseUpDelegate = function (event) { return _this.onMouseUp(event); };\r\n        this.onMouseWheelDelegate = function (event) { return _this.onMouseWheel(event); };\r\n        this.onMouseOverDelegate = function (event) { return _this.onMouseOver(event); };\r\n        this.onMouseOutDelegate = function (event) { return _this.onMouseOut(event); };\r\n    }\r\n    MouseManager.getInstance = function () {\r\n        if (this._instance)\r\n            return this._instance;\r\n        return (this._instance = new MouseManager());\r\n    };\r\n    MouseManager.prototype.fireMouseEvents = function (forceMouseMove) {\r\n        // If colliding object has changed, queue over/out events.\r\n        if (this._iCollision != this._previousCollidingObject) {\r\n            if (this._previousCollidingObject)\r\n                this.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n            if (this._iCollision)\r\n                this.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n        }\r\n        // Fire mouse move events here if forceMouseMove is on.\r\n        if (forceMouseMove && this._iCollision)\r\n            this.queueDispatch(this._mouseMove, this._mouseMoveEvent);\r\n        var event;\r\n        var dispatcher;\r\n        // Dispatch all queued events.\r\n        var len = this._queuedEvents.length;\r\n        for (var i = 0; i < len; ++i) {\r\n            event = this._queuedEvents[i];\r\n            dispatcher = event.entity;\r\n            // bubble event up the heirarchy until the top level parent is reached\r\n            while (dispatcher) {\r\n                if (dispatcher._iIsMouseEnabled())\r\n                    dispatcher.dispatchEvent(event);\r\n                dispatcher = dispatcher.parent;\r\n            }\r\n            // not totally sure, but i think just calling it is easier and cheaper than any options for that\r\n            // if nothing is queued, the function will return directly anyway\r\n            FrameScriptManager_1.FrameScriptManager.execute_queue();\r\n        }\r\n        this._queuedEvents.length = 0;\r\n        this._previousCollidingObject = this._iCollision;\r\n        this._iUpdateDirty = false;\r\n    };\r\n    //\t\tpublic addViewLayer(view:View)\r\n    //\t\t{\r\n    //\t\t\tvar stg:Stage = view.stage;\r\n    //\r\n    //\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n    //\t\t\tif (!view.stageGL.mouse3DManager)\r\n    //\t\t\t\tview.stageGL.mouse3DManager = this;\r\n    //\r\n    //\t\t\tif (!hasKey(view))\r\n    //\t\t\t\t_view3Ds[view] = 0;\r\n    //\r\n    //\t\t\t_childDepth = 0;\r\n    //\t\t\ttraverseDisplayObjects(stg);\r\n    //\t\t\t_viewCount = _childDepth;\r\n    //\t\t}\r\n    MouseManager.prototype.registerView = function (view) {\r\n        if (view && view.htmlElement) {\r\n            view.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n            view.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n            view.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n            view.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n            view.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n            view.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n            view.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n            view.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n            view.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n            view.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n            view.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n            this._viewLookup.push(view);\r\n        }\r\n    };\r\n    MouseManager.prototype.unregisterView = function (view) {\r\n        if (view && view.htmlElement) {\r\n            view.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n            view.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n            view.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n            view.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n            view.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n            view.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n            view.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n            view.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n            view.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n            view.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n            view.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n            this._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n        }\r\n    };\r\n    // ---------------------------------------------------------------------\r\n    // Private.\r\n    // ---------------------------------------------------------------------\r\n    MouseManager.prototype.queueDispatch = function (event, sourceEvent, collision) {\r\n        if (collision === void 0) { collision = null; }\r\n        // 2D properties.\r\n        if (sourceEvent) {\r\n            event.ctrlKey = sourceEvent.ctrlKey;\r\n            event.altKey = sourceEvent.altKey;\r\n            event.shiftKey = sourceEvent.shiftKey;\r\n            event.screenX = (sourceEvent.clientX != null) ? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\r\n            event.screenY = (sourceEvent.clientY != null) ? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\r\n        }\r\n        if (collision == null)\r\n            collision = this._iCollision;\r\n        // 3D properties.\r\n        if (collision) {\r\n            // Object.\r\n            event.entity = collision.entity;\r\n            event.renderable = collision.renderable;\r\n            // UV.\r\n            event.uv = collision.uv;\r\n            // Position.\r\n            event.position = collision.position ? collision.position.clone() : null;\r\n            // Normal.\r\n            event.normal = collision.normal ? collision.normal.clone() : null;\r\n            // Face index.\r\n            event.elementIndex = collision.elementIndex;\r\n        }\r\n        else {\r\n            // Set all to null.\r\n            event.uv = null;\r\n            event.entity = null;\r\n            event.position = this._nullVector;\r\n            event.normal = this._nullVector;\r\n            event.elementIndex = 0;\r\n        }\r\n        // Store event to be dispatched later.\r\n        this._queuedEvents.push(event);\r\n    };\r\n    // ---------------------------------------------------------------------\r\n    // Listeners.\r\n    // ---------------------------------------------------------------------\r\n    MouseManager.prototype.onMouseMove = function (event) {\r\n        event.preventDefault();\r\n        this.updateColliders(event);\r\n        if (this._iCollision)\r\n            this.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n    };\r\n    MouseManager.prototype.onMouseOut = function (event) {\r\n        this._iActiveDiv = null;\r\n        this.updateColliders(event);\r\n        if (this._iCollision)\r\n            this.queueDispatch(this._mouseOut, event);\r\n    };\r\n    MouseManager.prototype.onMouseOver = function (event) {\r\n        this._iActiveDiv = event.target;\r\n        this.updateColliders(event);\r\n        if (this._iCollision)\r\n            this.queueDispatch(this._mouseOver, event);\r\n    };\r\n    MouseManager.prototype.onClick = function (event) {\r\n        this.updateColliders(event);\r\n        if (this._iCollision)\r\n            this.queueDispatch(this._mouseClick, event);\r\n    };\r\n    MouseManager.prototype.onDoubleClick = function (event) {\r\n        this.updateColliders(event);\r\n        if (this._iCollision)\r\n            this.queueDispatch(this._mouseDoubleClick, event);\r\n    };\r\n    MouseManager.prototype.onMouseDown = function (event) {\r\n        event.preventDefault();\r\n        this._iActiveDiv = event.target;\r\n        this.updateColliders(event);\r\n        if (this._iCollision)\r\n            this.queueDispatch(this._mouseDown, event);\r\n    };\r\n    MouseManager.prototype.onMouseUp = function (event) {\r\n        event.preventDefault();\r\n        this.updateColliders(event);\r\n        if (this._iCollision)\r\n            this.queueDispatch(this._mouseUp, event);\r\n    };\r\n    MouseManager.prototype.onMouseWheel = function (event) {\r\n        this.updateColliders(event);\r\n        if (this._iCollision)\r\n            this.queueDispatch(this._mouseWheel, event);\r\n    };\r\n    MouseManager.prototype.updateColliders = function (event) {\r\n        var view;\r\n        var bounds;\r\n        var mouseX = (event.clientX != null) ? event.clientX : event.changedTouches[0].clientX;\r\n        var mouseY = (event.clientY != null) ? event.clientY : event.changedTouches[0].clientY;\r\n        var len = this._viewLookup.length;\r\n        for (var i = 0; i < len; i++) {\r\n            view = this._viewLookup[i];\r\n            view._pTouchPoints.length = 0;\r\n            bounds = view.htmlElement.getBoundingClientRect();\r\n            if (event.touches) {\r\n                var touch;\r\n                var len = event.touches.length;\r\n                for (var i = 0; i < len; i++) {\r\n                    touch = event.touches[i];\r\n                    view._pTouchPoints.push(new TouchPoint_1.TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\r\n                }\r\n            }\r\n            if (this._iUpdateDirty)\r\n                continue;\r\n            if (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n                view._pMouseX = null;\r\n                view._pMouseY = null;\r\n            }\r\n            else {\r\n                view._pMouseX = mouseX + bounds.left;\r\n                view._pMouseY = mouseY + bounds.top;\r\n                view.updateCollider();\r\n                if (view.layeredView && this._iCollision)\r\n                    break;\r\n            }\r\n        }\r\n        this._iUpdateDirty = true;\r\n    };\r\n    return MouseManager;\r\n}());\r\nexports.MouseManager = MouseManager;\r\n},{\"../base/TouchPoint\":\"awayjs-display/lib/base/TouchPoint\",\"../events/MouseEvent\":\"awayjs-display/lib/events/MouseEvent\",\"../managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/managers/TouchManager\":[function(require,module,exports){\n\"use strict\";\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar TouchEvent_1 = require(\"../events/TouchEvent\");\r\nvar TouchManager = (function () {\r\n    function TouchManager() {\r\n        var _this = this;\r\n        this._updateDirty = true;\r\n        this._nullVector = new Vector3D_1.Vector3D();\r\n        this._queuedEvents = new Array();\r\n        this._touchOut = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_OUT);\r\n        this._touchBegin = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_BEGIN);\r\n        this._touchMove = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_MOVE);\r\n        this._touchEnd = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_END);\r\n        this._touchOver = new TouchEvent_1.TouchEvent(TouchEvent_1.TouchEvent.TOUCH_OVER);\r\n        this._touchPoints = new Array();\r\n        this._touchPointFromId = new Object();\r\n        TouchManager._iCollisionFromTouchId = new Object();\r\n        TouchManager._previousCollidingObjectFromTouchId = new Object();\r\n        this.onTouchBeginDelegate = function (event) { return _this.onTouchBegin(event); };\r\n        this.onTouchMoveDelegate = function (event) { return _this.onTouchMove(event); };\r\n        this.onTouchEndDelegate = function (event) { return _this.onTouchEnd(event); };\r\n    }\r\n    TouchManager.getInstance = function () {\r\n        if (this._instance)\r\n            return this._instance;\r\n        return (this._instance = new TouchManager());\r\n    };\r\n    // ---------------------------------------------------------------------\r\n    // Interface.\r\n    // ---------------------------------------------------------------------\r\n    TouchManager.prototype.updateCollider = function (forceTouchMove) {\r\n        //if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n        //\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n        //\t\tthis._touchPoint = this._touchPoints[ i ];\r\n        //\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n        //\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\r\n        //\t}\r\n        //}\r\n    };\r\n    TouchManager.prototype.fireTouchEvents = function (forceTouchMove) {\r\n        var i;\r\n        for (i = 0; i < this._numTouchPoints; ++i) {\r\n            this._touchPoint = this._touchPoints[i];\r\n            // If colliding object has changed, queue over/out events.\r\n            this._iCollision = TouchManager._iCollisionFromTouchId[this._touchPoint.id];\r\n            this._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[this._touchPoint.id];\r\n            if (this._iCollision != this._previousCollidingObject) {\r\n                if (this._previousCollidingObject)\r\n                    this.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n                if (this._iCollision)\r\n                    this.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\r\n            }\r\n            // Fire Touch move events here if forceTouchMove is on.\r\n            if (forceTouchMove && this._iCollision)\r\n                this.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\r\n        }\r\n        var event;\r\n        var dispatcher;\r\n        // Dispatch all queued events.\r\n        var len = this._queuedEvents.length;\r\n        for (i = 0; i < len; ++i) {\r\n            // Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n            event = this._queuedEvents[i];\r\n            dispatcher = event.entity;\r\n            while (dispatcher && !dispatcher._iIsMouseEnabled())\r\n                dispatcher = dispatcher.parent;\r\n            if (dispatcher)\r\n                dispatcher.dispatchEvent(event);\r\n        }\r\n        this._queuedEvents.length = 0;\r\n        this._updateDirty = false;\r\n        for (i = 0; i < this._numTouchPoints; ++i) {\r\n            this._touchPoint = this._touchPoints[i];\r\n            TouchManager._previousCollidingObjectFromTouchId[this._touchPoint.id] = TouchManager._iCollisionFromTouchId[this._touchPoint.id];\r\n        }\r\n    };\r\n    TouchManager.prototype.registerView = function (view) {\r\n        view.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n        view.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n        view.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n    };\r\n    TouchManager.prototype.unregisterView = function (view) {\r\n        view.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n        view.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n        view.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n    };\r\n    // ---------------------------------------------------------------------\r\n    // Private.\r\n    // ---------------------------------------------------------------------\r\n    TouchManager.prototype.queueDispatch = function (event, sourceEvent, collider, touch) {\r\n        // 2D properties.\r\n        event.ctrlKey = sourceEvent.ctrlKey;\r\n        event.altKey = sourceEvent.altKey;\r\n        event.shiftKey = sourceEvent.shiftKey;\r\n        event.screenX = touch.x;\r\n        event.screenY = touch.y;\r\n        event.touchPointID = touch.id;\r\n        // 3D properties.\r\n        if (collider) {\r\n            // Object.\r\n            event.entity = collider.entity;\r\n            event.renderable = collider.renderable;\r\n            // UV.\r\n            event.uv = collider.uv;\r\n            // Position.\r\n            event.position = collider.position ? collider.position.clone() : null;\r\n            // Normal.\r\n            event.normal = collider.normal ? collider.normal.clone() : null;\r\n            // ElementsIndex.\r\n            event.elementIndex = collider.elementIndex;\r\n        }\r\n        else {\r\n            // Set all to null.\r\n            event.uv = null;\r\n            event.entity = null;\r\n            event.position = this._nullVector;\r\n            event.normal = this._nullVector;\r\n            event.elementIndex = 0;\r\n        }\r\n        // Store event to be dispatched later.\r\n        this._queuedEvents.push(event);\r\n    };\r\n    // ---------------------------------------------------------------------\r\n    // Event handlers.\r\n    // ---------------------------------------------------------------------\r\n    TouchManager.prototype.onTouchBegin = function (event) {\r\n        var touch = new TouchPoint();\r\n        //touch.id = event.touchPointID;\r\n        //touch.x = event.stageX;\r\n        //touch.y = event.stageY;\r\n        this._numTouchPoints++;\r\n        this._touchPoints.push(touch);\r\n        this._touchPointFromId[touch.id] = touch;\r\n        //this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n        this._iCollision = TouchManager._iCollisionFromTouchId[touch.id];\r\n        if (this._iCollision)\r\n            this.queueDispatch(this._touchBegin, event, this._iCollision, touch);\r\n        this._updateDirty = true;\r\n    };\r\n    TouchManager.prototype.onTouchMove = function (event) {\r\n        //var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n        //\r\n        //if (!touch) return;\r\n        //\r\n        ////touch.x = event.stageX;\r\n        ////touch.y = event.stageY;\r\n        //\r\n        //this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\r\n        //\r\n        //if (this._iCollision)\r\n        //\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\r\n        //\r\n        //this._updateDirty = true;\r\n    };\r\n    TouchManager.prototype.onTouchEnd = function (event) {\r\n        //var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n        //\r\n        //if (!touch) return;\r\n        //\r\n        //this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\r\n        //if (this._iCollision)\r\n        //\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\r\n        //\r\n        //this._touchPointFromId[ touch.id ] = null;\r\n        //this._numTouchPoints--;\r\n        //this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n        //\r\n        //this._updateDirty = true;\r\n    };\r\n    return TouchManager;\r\n}());\r\nexports.TouchManager = TouchManager;\r\nvar TouchPoint = (function () {\r\n    function TouchPoint() {\r\n    }\r\n    return TouchPoint;\r\n}());\r\n},{\"../events/TouchEvent\":\"awayjs-display/lib/events/TouchEvent\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/managers\":[function(require,module,exports){\n\"use strict\";\r\nvar DefaultMaterialManager_1 = require(\"./managers/DefaultMaterialManager\");\r\nexports.DefaultMaterialManager = DefaultMaterialManager_1.DefaultMaterialManager;\r\nvar FrameScriptManager_1 = require(\"./managers/FrameScriptManager\");\r\nexports.FrameScriptManager = FrameScriptManager_1.FrameScriptManager;\r\nvar MouseManager_1 = require(\"./managers/MouseManager\");\r\nexports.MouseManager = MouseManager_1.MouseManager;\r\nvar TouchManager_1 = require(\"./managers/TouchManager\");\r\nexports.TouchManager = TouchManager_1.TouchManager;\r\n},{\"./managers/DefaultMaterialManager\":\"awayjs-display/lib/managers/DefaultMaterialManager\",\"./managers/FrameScriptManager\":\"awayjs-display/lib/managers/FrameScriptManager\",\"./managers/MouseManager\":\"awayjs-display/lib/managers/MouseManager\",\"./managers/TouchManager\":\"awayjs-display/lib/managers/TouchManager\"}],\"awayjs-display/lib/materials/BasicMaterial\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\r\nvar MaterialBase_1 = require(\"../materials/MaterialBase\");\r\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nvar BasicMaterial = (function (_super) {\r\n    __extends(BasicMaterial, _super);\r\n    function BasicMaterial(imageColor, alpha) {\r\n        if (imageColor === void 0) { imageColor = null; }\r\n        if (alpha === void 0) { alpha = 1; }\r\n        _super.call(this, imageColor, alpha);\r\n        this._preserveAlpha = false;\r\n        //set a texture if an image is present\r\n        if (imageColor instanceof Image2D_1.Image2D)\r\n            this.texture = new Single2DTexture_1.Single2DTexture();\r\n    }\r\n    Object.defineProperty(BasicMaterial.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return BasicMaterial.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BasicMaterial.prototype, \"preserveAlpha\", {\r\n        /**\r\n         * Indicates whether alpha should be preserved - defaults to false\r\n         */\r\n        get: function () {\r\n            return this._preserveAlpha;\r\n        },\r\n        set: function (value) {\r\n            if (this._preserveAlpha == value)\r\n                return;\r\n            this._preserveAlpha = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BasicMaterial.prototype, \"texture\", {\r\n        /**\r\n         * The texture object to use for the albedo colour.\r\n         */\r\n        get: function () {\r\n            return this._texture;\r\n        },\r\n        set: function (value) {\r\n            if (this._texture == value)\r\n                return;\r\n            if (this._texture)\r\n                this.removeTexture(this._texture);\r\n            this._texture = value;\r\n            if (this._texture)\r\n                this.addTexture(this._texture);\r\n            this.invalidateTexture();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BasicMaterial.assetType = \"[materials BasicMaterial]\";\r\n    return BasicMaterial;\r\n}(MaterialBase_1.MaterialBase));\r\nexports.BasicMaterial = BasicMaterial;\r\n},{\"../materials/MaterialBase\":\"awayjs-display/lib/materials/MaterialBase\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/image/Image2D\":undefined}],\"awayjs-display/lib/materials/LightSources\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nvar LightSources = (function () {\r\n    function LightSources() {\r\n    }\r\n    /**\r\n     * Defines normal lights are to be used as the source for the lighting\r\n     * component.\r\n     */\r\n    LightSources.LIGHTS = 0x01;\r\n    /**\r\n     * Defines that global lighting probes are to be used as the source for the\r\n     * lighting component.\r\n     */\r\n    LightSources.PROBES = 0x02;\r\n    /**\r\n     * Defines that both normal and global lighting probes  are to be used as the\r\n     * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n     */\r\n    LightSources.ALL = 0x03;\r\n    return LightSources;\r\n}());\r\nexports.LightSources = LightSources;\r\n},{}],\"awayjs-display/lib/materials/MaterialBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar BlendMode_1 = require(\"awayjs-core/lib/image/BlendMode\");\r\nvar ImageBase_1 = require(\"awayjs-core/lib/image/ImageBase\");\r\nvar ColorTransform_1 = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar SurfaceEvent_1 = require(\"../events/SurfaceEvent\");\r\nvar Style_1 = require(\"../base/Style\");\r\nvar StyleEvent_1 = require(\"../events/StyleEvent\");\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nvar MaterialBase = (function (_super) {\r\n    __extends(MaterialBase, _super);\r\n    function MaterialBase(imageColor, alpha) {\r\n        var _this = this;\r\n        if (imageColor === void 0) { imageColor = null; }\r\n        if (alpha === void 0) { alpha = 1; }\r\n        _super.call(this);\r\n        this._textures = new Array();\r\n        this._pUseColorTransform = false;\r\n        this._alphaBlending = false;\r\n        this._alpha = 1;\r\n        this._pAlphaThreshold = 0;\r\n        this._pAnimateUVs = false;\r\n        this._enableLightFallOff = true;\r\n        this._specularLightSources = 0x01;\r\n        this._diffuseLightSources = 0x03;\r\n        this._style = new Style_1.Style();\r\n        this._iBaseScreenPassIndex = 0;\r\n        this._bothSides = false; // update\r\n        /**\r\n         * A list of material owners, renderables or custom Entities.\r\n         */\r\n        this._owners = new Array();\r\n        this._pBlendMode = BlendMode_1.BlendMode.NORMAL;\r\n        this._imageRect = false;\r\n        this._curves = false;\r\n        this._onInvalidatePropertiesDelegate = function (event) { return _this._onInvalidateProperties(event); };\r\n        this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n        if (imageColor instanceof ImageBase_1.ImageBase)\r\n            this._style.image = imageColor;\r\n        else if (imageColor)\r\n            this._style.color = Number(imageColor);\r\n        this.alpha = alpha;\r\n        this._onLightChangeDelegate = function (event) { return _this.onLightsChange(event); };\r\n        this._onTextureInvalidateDelegate = function (event) { return _this.onTextureInvalidate(event); };\r\n        this.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n    }\r\n    Object.defineProperty(MaterialBase.prototype, \"alpha\", {\r\n        /**\r\n         * The alpha of the surface.\r\n         */\r\n        get: function () {\r\n            return this._alpha;\r\n        },\r\n        set: function (value) {\r\n            if (value > 1)\r\n                value = 1;\r\n            else if (value < 0)\r\n                value = 0;\r\n            if (this._alpha == value)\r\n                return;\r\n            this._alpha = value;\r\n            if (this._colorTransform == null)\r\n                this._colorTransform = new ColorTransform_1.ColorTransform();\r\n            this._colorTransform.alphaMultiplier = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"colorTransform\", {\r\n        /**\r\n         * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n         */\r\n        get: function () {\r\n            return this._colorTransform;\r\n        },\r\n        set: function (value) {\r\n            this._colorTransform = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"alphaBlending\", {\r\n        /**\r\n         * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n         * example when using textures of foliage, consider using alphaThreshold instead.\r\n         */\r\n        get: function () {\r\n            return this._alphaBlending;\r\n        },\r\n        set: function (value) {\r\n            if (this._alphaBlending == value)\r\n                return;\r\n            this._alphaBlending = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"animationSet\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._animationSet;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"lightPicker\", {\r\n        /**\r\n         * The light picker used by the material to provide lights to the material if it supports lighting.\r\n         *\r\n         * @see LightPickerBase\r\n         * @see StaticLightPicker\r\n         */\r\n        get: function () {\r\n            return this._pLightPicker;\r\n        },\r\n        set: function (value) {\r\n            if (this._pLightPicker == value)\r\n                return;\r\n            if (this._pLightPicker)\r\n                this._pLightPicker.removeEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onLightChangeDelegate);\r\n            this._pLightPicker = value;\r\n            if (this._pLightPicker)\r\n                this._pLightPicker.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onLightChangeDelegate);\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"curves\", {\r\n        /**\r\n         * Indicates whether material should use curves. Defaults to false.\r\n         */\r\n        get: function () {\r\n            return this._curves;\r\n        },\r\n        set: function (value) {\r\n            if (this._curves == value)\r\n                return;\r\n            this._curves = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"imageRect\", {\r\n        /**\r\n         * Indicates whether or not any used textures should use an atlas. Defaults to false.\r\n         */\r\n        get: function () {\r\n            return this._imageRect;\r\n        },\r\n        set: function (value) {\r\n            if (this._imageRect == value)\r\n                return;\r\n            this._imageRect = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"style\", {\r\n        /**\r\n         * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\r\n         */\r\n        get: function () {\r\n            return this._style;\r\n        },\r\n        set: function (value) {\r\n            if (this._style == value)\r\n                return;\r\n            if (this._style)\r\n                this._style.removeEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this._style = value;\r\n            if (this._style)\r\n                this._style.addEventListener(StyleEvent_1.StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"animateUVs\", {\r\n        /**\r\n         * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n         */\r\n        get: function () {\r\n            return this._pAnimateUVs;\r\n        },\r\n        set: function (value) {\r\n            if (this._pAnimateUVs == value)\r\n                return;\r\n            this._pAnimateUVs = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"useColorTransform\", {\r\n        /**\r\n         * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n         */\r\n        get: function () {\r\n            return this._pUseColorTransform;\r\n        },\r\n        set: function (value) {\r\n            if (this._pUseColorTransform == value)\r\n                return;\r\n            this._pUseColorTransform = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"enableLightFallOff\", {\r\n        /**\r\n         * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n         * compatibility for constrained mode.\r\n         */\r\n        get: function () {\r\n            return this._enableLightFallOff;\r\n        },\r\n        set: function (value) {\r\n            if (this._enableLightFallOff == value)\r\n                return;\r\n            this._enableLightFallOff = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"diffuseLightSources\", {\r\n        /**\r\n         * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n         * and/or light probes for diffuse reflections.\r\n         *\r\n         * @see away3d.materials.LightSources\r\n         */\r\n        get: function () {\r\n            return this._diffuseLightSources;\r\n        },\r\n        set: function (value) {\r\n            if (this._diffuseLightSources == value)\r\n                return;\r\n            this._diffuseLightSources = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"specularLightSources\", {\r\n        /**\r\n         * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n         * and/or light probes for specular reflections.\r\n         *\r\n         * @see away3d.materials.LightSources\r\n         */\r\n        get: function () {\r\n            return this._specularLightSources;\r\n        },\r\n        set: function (value) {\r\n            if (this._specularLightSources == value)\r\n                return;\r\n            this._specularLightSources = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"bothSides\", {\r\n        /**\r\n         * Defines whether or not the material should cull triangles facing away from the camera.\r\n         */\r\n        get: function () {\r\n            return this._bothSides;\r\n        },\r\n        set: function (value) {\r\n            if (this._bothSides = value)\r\n                return;\r\n            this._bothSides = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"blendMode\", {\r\n        /**\r\n         * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n         * <ul>\r\n         * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n         * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n         * <li>BlendMode.MULTIPLY</li>\r\n         * <li>BlendMode.ADD</li>\r\n         * <li>BlendMode.ALPHA</li>\r\n         * </ul>\r\n         */\r\n        get: function () {\r\n            return this._pBlendMode;\r\n        },\r\n        set: function (value) {\r\n            if (this._pBlendMode == value)\r\n                return;\r\n            this._pBlendMode = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"alphaPremultiplied\", {\r\n        /**\r\n         * Indicates whether visible textures (or other pixels) used by this material have\r\n         * already been premultiplied. Toggle this if you are seeing black halos around your\r\n         * blended alpha edges.\r\n         */\r\n        get: function () {\r\n            return this._alphaPremultiplied;\r\n        },\r\n        set: function (value) {\r\n            if (this._alphaPremultiplied == value)\r\n                return;\r\n            this._alphaPremultiplied = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MaterialBase.prototype, \"alphaThreshold\", {\r\n        /**\r\n         * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n         * invisible or entirely opaque, often used with textures for foliage, etc.\r\n         * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n         */\r\n        get: function () {\r\n            return this._pAlphaThreshold;\r\n        },\r\n        set: function (value) {\r\n            if (value < 0)\r\n                value = 0;\r\n            else if (value > 1)\r\n                value = 1;\r\n            if (this._pAlphaThreshold == value)\r\n                return;\r\n            this._pAlphaThreshold = value;\r\n            this.invalidatePasses();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //\r\n    // MATERIAL MANAGEMENT\r\n    //\r\n    /**\r\n     * Mark an IRenderable as owner of this material.\r\n     * Assures we're not using the same material across renderables with different animations, since the\r\n     * Programs depend on animation. This method needs to be called when a material is assigned.\r\n     *\r\n     * @param owner The IRenderable that had this material assigned\r\n     *\r\n     * @internal\r\n     */\r\n    MaterialBase.prototype.iAddOwner = function (owner) {\r\n        this._owners.push(owner);\r\n        var animationSet;\r\n        var animator = owner.animator;\r\n        if (animator)\r\n            animationSet = animator.animationSet;\r\n        if (owner.animator) {\r\n            if (this._animationSet && animationSet != this._animationSet) {\r\n                throw new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n            }\r\n            else {\r\n                if (this._animationSet != animationSet) {\r\n                    this._animationSet = animationSet;\r\n                    this.invalidateAnimation();\r\n                }\r\n            }\r\n        }\r\n        owner.invalidateSurface();\r\n    };\r\n    /**\r\n     * Removes an IRenderable as owner.\r\n     * @param owner\r\n     *\r\n     * @internal\r\n     */\r\n    MaterialBase.prototype.iRemoveOwner = function (owner) {\r\n        this._owners.splice(this._owners.indexOf(owner), 1);\r\n        if (this._owners.length == 0) {\r\n            this._animationSet = null;\r\n            this.invalidateAnimation();\r\n        }\r\n        owner.invalidateSurface();\r\n    };\r\n    Object.defineProperty(MaterialBase.prototype, \"iOwners\", {\r\n        /**\r\n         * A list of the IRenderables that use this material\r\n         *\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this._owners;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MaterialBase.prototype.getNumTextures = function () {\r\n        return this._textures.length;\r\n    };\r\n    MaterialBase.prototype.getTextureAt = function (index) {\r\n        return this._textures[index];\r\n    };\r\n    /**\r\n     * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n     *\r\n     * @private\r\n     */\r\n    MaterialBase.prototype.invalidatePasses = function () {\r\n        this.dispatchEvent(new SurfaceEvent_1.SurfaceEvent(SurfaceEvent_1.SurfaceEvent.INVALIDATE_PASSES, this));\r\n    };\r\n    MaterialBase.prototype.invalidateAnimation = function () {\r\n        this.dispatchEvent(new SurfaceEvent_1.SurfaceEvent(SurfaceEvent_1.SurfaceEvent.INVALIDATE_ANIMATION, this));\r\n    };\r\n    MaterialBase.prototype.invalidateSurfaces = function () {\r\n        var len = this._owners.length;\r\n        for (var i = 0; i < len; i++)\r\n            this._owners[i].invalidateSurface();\r\n    };\r\n    /**\r\n     * Called when the light picker's configuration changed.\r\n     */\r\n    MaterialBase.prototype.onLightsChange = function (event) {\r\n        this.invalidate();\r\n    };\r\n    MaterialBase.prototype.invalidateTexture = function () {\r\n        this.dispatchEvent(new SurfaceEvent_1.SurfaceEvent(SurfaceEvent_1.SurfaceEvent.INVALIDATE_TEXTURE, this));\r\n    };\r\n    MaterialBase.prototype.addTextureAt = function (texture, index) {\r\n        var i = this._textures.indexOf(texture);\r\n        if (i == index)\r\n            return;\r\n        else if (i != -1)\r\n            this._textures.splice(i, 1);\r\n        this._textures.splice(index, 0, texture);\r\n        texture.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n        this.onTextureInvalidate();\r\n    };\r\n    MaterialBase.prototype.addTexture = function (texture) {\r\n        if (this._textures.indexOf(texture) != -1)\r\n            return;\r\n        this._textures.push(texture);\r\n        texture.addEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n        this.onTextureInvalidate();\r\n    };\r\n    MaterialBase.prototype.removeTexture = function (texture) {\r\n        this._textures.splice(this._textures.indexOf(texture), 1);\r\n        texture.removeEventListener(AssetEvent_1.AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n        this.onTextureInvalidate();\r\n    };\r\n    MaterialBase.prototype.onTextureInvalidate = function (event) {\r\n        if (event === void 0) { event = null; }\r\n        this.invalidatePasses();\r\n        //invalidate renderables for number of images getter (in case it has changed)\r\n        this.invalidateSurfaces();\r\n    };\r\n    MaterialBase.prototype._onInvalidateProperties = function (event) {\r\n        this.invalidatePasses();\r\n    };\r\n    return MaterialBase;\r\n}(AssetBase_1.AssetBase));\r\nexports.MaterialBase = MaterialBase;\r\n},{\"../base/Style\":\"awayjs-display/lib/base/Style\",\"../events/StyleEvent\":\"awayjs-display/lib/events/StyleEvent\",\"../events/SurfaceEvent\":\"awayjs-display/lib/events/SurfaceEvent\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/ColorTransform\":undefined,\"awayjs-core/lib/image/BlendMode\":undefined,\"awayjs-core/lib/image/ImageBase\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials/lightpickers/LightPickerBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nvar LightPickerBase = (function (_super) {\r\n    __extends(LightPickerBase, _super);\r\n    /**\r\n     * Creates a new LightPickerBase object.\r\n     */\r\n    function LightPickerBase() {\r\n        _super.call(this);\r\n        this._pNumPointLights = 0;\r\n        this._pNumDirectionalLights = 0;\r\n        this._pNumCastingPointLights = 0;\r\n        this._pNumCastingDirectionalLights = 0;\r\n        this._pNumLightProbes = 0;\r\n    }\r\n    /**\r\n     * Disposes resources used by the light picker.\r\n     */\r\n    LightPickerBase.prototype.dispose = function () {\r\n    };\r\n    Object.defineProperty(LightPickerBase.prototype, \"assetType\", {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        get: function () {\r\n            return LightPickerBase.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"numDirectionalLights\", {\r\n        /**\r\n         * The maximum amount of directional lights that will be provided.\r\n         */\r\n        get: function () {\r\n            return this._pNumDirectionalLights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"numPointLights\", {\r\n        /**\r\n         * The maximum amount of point lights that will be provided.\r\n         */\r\n        get: function () {\r\n            return this._pNumPointLights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"numCastingDirectionalLights\", {\r\n        /**\r\n         * The maximum amount of directional lights that cast shadows.\r\n         */\r\n        get: function () {\r\n            return this._pNumCastingDirectionalLights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"numCastingPointLights\", {\r\n        /**\r\n         * The amount of point lights that cast shadows.\r\n         */\r\n        get: function () {\r\n            return this._pNumCastingPointLights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"numLightProbes\", {\r\n        /**\r\n         * The maximum amount of light probes that will be provided.\r\n         */\r\n        get: function () {\r\n            return this._pNumLightProbes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"pointLights\", {\r\n        /**\r\n         * The collected point lights to be used for shading.\r\n         */\r\n        get: function () {\r\n            return this._pPointLights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"directionalLights\", {\r\n        /**\r\n         * The collected directional lights to be used for shading.\r\n         */\r\n        get: function () {\r\n            return this._pDirectionalLights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"castingPointLights\", {\r\n        /**\r\n         * The collected point lights that cast shadows to be used for shading.\r\n         */\r\n        get: function () {\r\n            return this._pCastingPointLights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"castingDirectionalLights\", {\r\n        /**\r\n         * The collected directional lights that cast shadows to be used for shading.\r\n         */\r\n        get: function () {\r\n            return this._pCastingDirectionalLights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"lightProbes\", {\r\n        /**\r\n         * The collected light probes to be used for shading.\r\n         */\r\n        get: function () {\r\n            return this._pLightProbes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"lightProbeWeights\", {\r\n        /**\r\n         * The weights for each light probe, defining their influence on the object.\r\n         */\r\n        get: function () {\r\n            return this._pLightProbeWeights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LightPickerBase.prototype, \"allPickedLights\", {\r\n        /**\r\n         * A collection of all the collected lights.\r\n         */\r\n        get: function () {\r\n            return this._pAllPickedLights;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n     */\r\n    LightPickerBase.prototype.collectLights = function (entity) {\r\n        this.updateProbeWeights(entity);\r\n    };\r\n    /**\r\n     * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n     * @param renderable The renderble for which to calculate the light probes' influence.\r\n     */\r\n    LightPickerBase.prototype.updateProbeWeights = function (entity) {\r\n        // todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\r\n        var objectPos = entity.scenePosition;\r\n        var lightPos;\r\n        var rx = objectPos.x, ry = objectPos.y, rz = objectPos.z;\r\n        var dx, dy, dz;\r\n        var w, total = 0;\r\n        var i;\r\n        // calculates weights for probes\r\n        for (i = 0; i < this._pNumLightProbes; ++i) {\r\n            lightPos = this._pLightProbes[i].scenePosition;\r\n            dx = rx - lightPos.x;\r\n            dy = ry - lightPos.y;\r\n            dz = rz - lightPos.z;\r\n            // weight is inversely proportional to square of distance\r\n            w = dx * dx + dy * dy + dz * dz;\r\n            // just... huge if at the same spot\r\n            w = w > .00001 ? 1 / w : 50000000;\r\n            this._pLightProbeWeights[i] = w;\r\n            total += w;\r\n        }\r\n        // normalize\r\n        total = 1 / total;\r\n        for (i = 0; i < this._pNumLightProbes; ++i)\r\n            this._pLightProbeWeights[i] *= total;\r\n    };\r\n    LightPickerBase.assetType = \"[asset LightPicker]\";\r\n    return LightPickerBase;\r\n}(AssetBase_1.AssetBase));\r\nexports.LightPickerBase = LightPickerBase;\r\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\r\nvar DirectionalLight_1 = require(\"../../display/DirectionalLight\");\r\nvar LightProbe_1 = require(\"../../display/LightProbe\");\r\nvar PointLight_1 = require(\"../../display/PointLight\");\r\nvar LightEvent_1 = require(\"../../events/LightEvent\");\r\nvar LightPickerBase_1 = require(\"../../materials/lightpickers/LightPickerBase\");\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nvar StaticLightPicker = (function (_super) {\r\n    __extends(StaticLightPicker, _super);\r\n    /**\r\n     * Creates a new StaticLightPicker object.\r\n     * @param lights The lights to be used for shading.\r\n     */\r\n    function StaticLightPicker(lights) {\r\n        var _this = this;\r\n        _super.call(this);\r\n        this._onCastShadowChangeDelegate = function (event) { return _this.onCastShadowChange(event); };\r\n        this.lights = lights;\r\n    }\r\n    Object.defineProperty(StaticLightPicker.prototype, \"lights\", {\r\n        /**\r\n         * The lights used for shading.\r\n         */\r\n        get: function () {\r\n            return this._lights;\r\n        },\r\n        set: function (value) {\r\n            var numPointLights = 0;\r\n            var numDirectionalLights = 0;\r\n            var numCastingPointLights = 0;\r\n            var numCastingDirectionalLights = 0;\r\n            var numLightProbes = 0;\r\n            var light;\r\n            if (this._lights)\r\n                this.clearListeners();\r\n            this._lights = value;\r\n            this._pAllPickedLights = value;\r\n            this._pPointLights = new Array();\r\n            this._pCastingPointLights = new Array();\r\n            this._pDirectionalLights = new Array();\r\n            this._pCastingDirectionalLights = new Array();\r\n            this._pLightProbes = new Array();\r\n            var len = value.length;\r\n            for (var i = 0; i < len; ++i) {\r\n                light = value[i];\r\n                light.addEventListener(LightEvent_1.LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n                if (light instanceof PointLight_1.PointLight) {\r\n                    if (light.shadowsEnabled)\r\n                        this._pCastingPointLights[numCastingPointLights++] = light;\r\n                    else\r\n                        this._pPointLights[numPointLights++] = light;\r\n                }\r\n                else if (light instanceof DirectionalLight_1.DirectionalLight) {\r\n                    if (light.shadowsEnabled)\r\n                        this._pCastingDirectionalLights[numCastingDirectionalLights++] = light;\r\n                    else\r\n                        this._pDirectionalLights[numDirectionalLights++] = light;\r\n                }\r\n                else if (light instanceof LightProbe_1.LightProbe) {\r\n                    this._pLightProbes[numLightProbes++] = light;\r\n                }\r\n            }\r\n            if (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n                return;\r\n            this._pNumDirectionalLights = numDirectionalLights;\r\n            this._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n            this._pNumPointLights = numPointLights;\r\n            this._pNumCastingPointLights = numCastingPointLights;\r\n            this._pNumLightProbes = numLightProbes;\r\n            // MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n            this._pLightProbeWeights = new Array(Math.ceil(numLightProbes / 4) * 4);\r\n            // notify material lights have changed\r\n            this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.INVALIDATE, this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Remove configuration change listeners on the lights.\r\n     */\r\n    StaticLightPicker.prototype.clearListeners = function () {\r\n        var len = this._lights.length;\r\n        for (var i = 0; i < len; ++i)\r\n            this._lights[i].removeEventListener(LightEvent_1.LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n    };\r\n    /**\r\n     * Notifies the material of a configuration change.\r\n     */\r\n    StaticLightPicker.prototype.onCastShadowChange = function (event) {\r\n        // TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n        // But keep seperated in multipass\r\n        var light = event.target;\r\n        if (light instanceof PointLight_1.PointLight)\r\n            this.updatePointCasting(light);\r\n        else if (light instanceof DirectionalLight_1.DirectionalLight)\r\n            this.updateDirectionalCasting(light);\r\n        this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.INVALIDATE, this));\r\n    };\r\n    /**\r\n     * Called when a directional light's shadow casting configuration changes.\r\n     */\r\n    StaticLightPicker.prototype.updateDirectionalCasting = function (light) {\r\n        var dl = light;\r\n        if (light.shadowsEnabled) {\r\n            --this._pNumDirectionalLights;\r\n            ++this._pNumCastingDirectionalLights;\r\n            this._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n            this._pCastingDirectionalLights.push(light);\r\n        }\r\n        else {\r\n            ++this._pNumDirectionalLights;\r\n            --this._pNumCastingDirectionalLights;\r\n            this._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n            this._pDirectionalLights.push(light);\r\n        }\r\n    };\r\n    /**\r\n     * Called when a point light's shadow casting configuration changes.\r\n     */\r\n    StaticLightPicker.prototype.updatePointCasting = function (light) {\r\n        var pl = light;\r\n        if (light.shadowsEnabled) {\r\n            --this._pNumPointLights;\r\n            ++this._pNumCastingPointLights;\r\n            this._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n            this._pCastingPointLights.push(light);\r\n        }\r\n        else {\r\n            ++this._pNumPointLights;\r\n            --this._pNumCastingPointLights;\r\n            this._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n            this._pPointLights.push(light);\r\n        }\r\n    };\r\n    return StaticLightPicker;\r\n}(LightPickerBase_1.LightPickerBase));\r\nexports.StaticLightPicker = StaticLightPicker;\r\n},{\"../../display/DirectionalLight\":\"awayjs-display/lib/display/DirectionalLight\",\"../../display/LightProbe\":\"awayjs-display/lib/display/LightProbe\",\"../../display/PointLight\":\"awayjs-display/lib/display/PointLight\",\"../../events/LightEvent\":\"awayjs-display/lib/events/LightEvent\",\"../../materials/lightpickers/LightPickerBase\":\"awayjs-display/lib/materials/lightpickers/LightPickerBase\",\"awayjs-core/lib/events/AssetEvent\":undefined}],\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\r\nvar AssetEvent_1 = require(\"awayjs-core/lib/events/AssetEvent\");\r\nvar FreeMatrixProjection_1 = require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nvar Camera_1 = require(\"../../display/Camera\");\r\nvar DirectionalShadowMapper_1 = require(\"../../materials/shadowmappers/DirectionalShadowMapper\");\r\nvar CascadeShadowMapper = (function (_super) {\r\n    __extends(CascadeShadowMapper, _super);\r\n    function CascadeShadowMapper(numCascades) {\r\n        if (numCascades === void 0) { numCascades = 3; }\r\n        _super.call(this);\r\n        this._pScissorRectsInvalid = true;\r\n        if (numCascades < 1 || numCascades > 4)\r\n            throw new Error(\"numCascades must be an integer between 1 and 4\");\r\n        this._numCascades = numCascades;\r\n        this.init();\r\n    }\r\n    CascadeShadowMapper.prototype.getSplitRatio = function (index /*uint*/) {\r\n        return this._splitRatios[index];\r\n    };\r\n    CascadeShadowMapper.prototype.setSplitRatio = function (index /*uint*/, value) {\r\n        if (value < 0)\r\n            value = 0;\r\n        else if (value > 1)\r\n            value = 1;\r\n        if (index >= this._numCascades)\r\n            throw new Error(\"index must be smaller than the number of cascades!\");\r\n        this._splitRatios[index] = value;\r\n    };\r\n    CascadeShadowMapper.prototype.getDepthProjections = function (partition /*uint*/) {\r\n        return this._depthCameras[partition].viewProjection;\r\n    };\r\n    CascadeShadowMapper.prototype.init = function () {\r\n        this._splitRatios = new Array(this._numCascades);\r\n        this._nearPlaneDistances = new Array(this._numCascades);\r\n        var s = 1;\r\n        for (var i = this._numCascades - 1; i >= 0; --i) {\r\n            this._splitRatios[i] = s;\r\n            s *= .4;\r\n        }\r\n        this._texOffsetsX = Array(-1, 1, -1, 1);\r\n        this._texOffsetsY = Array(1, 1, -1, -1);\r\n        this._pScissorRects = new Array(4);\r\n        this._depthLenses = new Array();\r\n        this._depthCameras = new Array();\r\n        for (i = 0; i < this._numCascades; ++i) {\r\n            this._depthLenses[i] = new FreeMatrixProjection_1.FreeMatrixProjection();\r\n            this._depthCameras[i] = new Camera_1.Camera(this._depthLenses[i]);\r\n        }\r\n    };\r\n    CascadeShadowMapper.prototype._pSetDepthMapSize = function (value /*uint*/) {\r\n        _super.prototype._pSetDepthMapSize.call(this, value);\r\n        this.invalidateScissorRects();\r\n    };\r\n    CascadeShadowMapper.prototype.invalidateScissorRects = function () {\r\n        this._pScissorRectsInvalid = true;\r\n    };\r\n    Object.defineProperty(CascadeShadowMapper.prototype, \"numCascades\", {\r\n        get: function () {\r\n            return this._numCascades;\r\n        },\r\n        set: function (value /*int*/) {\r\n            if (value == this._numCascades)\r\n                return;\r\n            if (value < 1 || value > 4)\r\n                throw new Error(\"numCascades must be an integer between 1 and 4\");\r\n            this._numCascades = value;\r\n            this.invalidateScissorRects();\r\n            this.init();\r\n            this.dispatchEvent(new AssetEvent_1.AssetEvent(AssetEvent_1.AssetEvent.INVALIDATE, this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CascadeShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\r\n        if (this._pScissorRectsInvalid)\r\n            this.updateScissorRects();\r\n        renderer.cullPlanes = this._pCullPlanes;\r\n        renderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n    };\r\n    CascadeShadowMapper.prototype.updateScissorRects = function () {\r\n        var half = this._pDepthMapSize * .5;\r\n        this._pScissorRects[0] = new Rectangle_1.Rectangle(0, 0, half, half);\r\n        this._pScissorRects[1] = new Rectangle_1.Rectangle(half, 0, half, half);\r\n        this._pScissorRects[2] = new Rectangle_1.Rectangle(0, half, half, half);\r\n        this._pScissorRects[3] = new Rectangle_1.Rectangle(half, half, half, half);\r\n        this._pScissorRectsInvalid = false;\r\n    };\r\n    CascadeShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\r\n        var matrix;\r\n        var projection = camera.projection;\r\n        var projectionNear = projection.near;\r\n        var projectionRange = projection.far - projectionNear;\r\n        this.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\r\n        this._pMatrix.appendScale(.96, .96, 1);\r\n        this._pOverallDepthProjection.matrix = this._pMatrix;\r\n        this.pUpdateCullPlanes(camera);\r\n        for (var i = 0; i < this._numCascades; ++i) {\r\n            matrix = this._depthLenses[i].matrix;\r\n            this._nearPlaneDistances[i] = projectionNear + this._splitRatios[i] * projectionRange;\r\n            this._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n            this.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n            this._depthLenses[i].matrix = matrix;\r\n        }\r\n    };\r\n    CascadeShadowMapper.prototype.updateProjectionPartition = function (matrix, splitRatio, texOffsetX, texOffsetY) {\r\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        var xN, yN, zN;\r\n        var xF, yF, zF;\r\n        var minX = Number.POSITIVE_INFINITY, minY = Number.POSITIVE_INFINITY, minZ;\r\n        var maxX = Number.NEGATIVE_INFINITY, maxY = Number.NEGATIVE_INFINITY, maxZ = Number.NEGATIVE_INFINITY;\r\n        var i = 0;\r\n        while (i < 12) {\r\n            xN = this._pLocalFrustum[i];\r\n            yN = this._pLocalFrustum[i + 1];\r\n            zN = this._pLocalFrustum[i + 2];\r\n            xF = xN + (this._pLocalFrustum[i + 12] - xN) * splitRatio;\r\n            yF = yN + (this._pLocalFrustum[i + 13] - yN) * splitRatio;\r\n            zF = zN + (this._pLocalFrustum[i + 14] - zN) * splitRatio;\r\n            if (xN < minX)\r\n                minX = xN;\r\n            if (xN > maxX)\r\n                maxX = xN;\r\n            if (yN < minY)\r\n                minY = yN;\r\n            if (yN > maxY)\r\n                maxY = yN;\r\n            if (zN > maxZ)\r\n                maxZ = zN;\r\n            if (xF < minX)\r\n                minX = xF;\r\n            if (xF > maxX)\r\n                maxX = xF;\r\n            if (yF < minY)\r\n                minY = yF;\r\n            if (yF > maxY)\r\n                maxY = yF;\r\n            if (zF > maxZ)\r\n                maxZ = zF;\r\n            i += 3;\r\n        }\r\n        minZ = 1;\r\n        var w = (maxX - minX);\r\n        var h = (maxY - minY);\r\n        var d = 1 / (maxZ - minZ);\r\n        if (minX < 0)\r\n            minX -= this._pSnap; // because int() rounds up for < 0\r\n        if (minY < 0)\r\n            minY -= this._pSnap;\r\n        minX = Math.floor(minX / this._pSnap) * this._pSnap;\r\n        minY = Math.floor(minY / this._pSnap) * this._pSnap;\r\n        var snap2 = 2 * this._pSnap;\r\n        w = Math.floor(w / snap2 + 1) * snap2;\r\n        h = Math.floor(h / snap2 + 1) * snap2;\r\n        maxX = minX + w;\r\n        maxY = minY + h;\r\n        w = 1 / w;\r\n        h = 1 / h;\r\n        raw[0] = 2 * w;\r\n        raw[5] = 2 * h;\r\n        raw[10] = d;\r\n        raw[12] = -(maxX + minX) * w;\r\n        raw[13] = -(maxY + minY) * h;\r\n        raw[14] = -minZ * d;\r\n        raw[15] = 1;\r\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n        matrix.copyRawDataFrom(raw);\r\n        matrix.appendScale(.96, .96, 1);\r\n        matrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n        matrix.appendScale(.5, .5, 1);\r\n    };\r\n    Object.defineProperty(CascadeShadowMapper.prototype, \"_iNearPlaneDistances\", {\r\n        get: function () {\r\n            return this._nearPlaneDistances;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CascadeShadowMapper;\r\n}(DirectionalShadowMapper_1.DirectionalShadowMapper));\r\nexports.CascadeShadowMapper = CascadeShadowMapper;\r\n},{\"../../display/Camera\":\"awayjs-display/lib/display/Camera\",\"../../materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"awayjs-core/lib/events/AssetEvent\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/projections/FreeMatrixProjection\":undefined}],\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ImageCube_1 = require(\"awayjs-core/lib/image/ImageCube\");\r\nvar Camera_1 = require(\"../../display/Camera\");\r\nvar ShadowMapperBase_1 = require(\"../../materials/shadowmappers/ShadowMapperBase\");\r\nvar SingleCubeTexture_1 = require(\"../../textures/SingleCubeTexture\");\r\nvar CubeMapShadowMapper = (function (_super) {\r\n    __extends(CubeMapShadowMapper, _super);\r\n    function CubeMapShadowMapper() {\r\n        _super.call(this);\r\n        this._pDepthMapSize = 512;\r\n        this._needsRender = new Array();\r\n        this.initCameras();\r\n    }\r\n    CubeMapShadowMapper.prototype.initCameras = function () {\r\n        this._depthCameras = new Array();\r\n        this._projections = new Array();\r\n        // posX, negX, posY, negY, posZ, negZ\r\n        this.addCamera(0, 90, 0);\r\n        this.addCamera(0, -90, 0);\r\n        this.addCamera(-90, 0, 0);\r\n        this.addCamera(90, 0, 0);\r\n        this.addCamera(0, 0, 0);\r\n        this.addCamera(0, 180, 0);\r\n    };\r\n    CubeMapShadowMapper.prototype.addCamera = function (rotationX, rotationY, rotationZ) {\r\n        var cam = new Camera_1.Camera();\r\n        cam.rotationX = rotationX;\r\n        cam.rotationY = rotationY;\r\n        cam.rotationZ = rotationZ;\r\n        cam.projection.near = .01;\r\n        var projection = cam.projection;\r\n        projection.fieldOfView = 90;\r\n        this._projections.push(projection);\r\n        cam.projection._iAspectRatio = 1;\r\n        this._depthCameras.push(cam);\r\n    };\r\n    //@override\r\n    CubeMapShadowMapper.prototype.pCreateDepthTexture = function () {\r\n        return new SingleCubeTexture_1.SingleCubeTexture(new ImageCube_1.ImageCube(this._pDepthMapSize));\r\n    };\r\n    //@override\r\n    CubeMapShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\r\n        var light = (this._pLight);\r\n        var maxDistance = light._pFallOff;\r\n        var pos = this._pLight.scenePosition;\r\n        // todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n        for (var i = 0; i < 6; ++i) {\r\n            this._projections[i].far = maxDistance;\r\n            this._depthCameras[i].transform.moveTo(pos.x, pos.y, pos.z);\r\n            this._needsRender[i] = true;\r\n        }\r\n    };\r\n    //@override\r\n    CubeMapShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\r\n        for (var i = 0; i < 6; ++i)\r\n            if (this._needsRender[i])\r\n                renderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i);\r\n    };\r\n    return CubeMapShadowMapper;\r\n}(ShadowMapperBase_1.ShadowMapperBase));\r\nexports.CubeMapShadowMapper = CubeMapShadowMapper;\r\n},{\"../../display/Camera\":\"awayjs-display/lib/display/Camera\",\"../../materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\",\"../../textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"awayjs-core/lib/image/ImageCube\":undefined}],\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\r\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\r\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nvar FreeMatrixProjection_1 = require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nvar Camera_1 = require(\"../../display/Camera\");\r\nvar ShadowMapperBase_1 = require(\"../../materials/shadowmappers/ShadowMapperBase\");\r\nvar Single2DTexture_1 = require(\"../../textures/Single2DTexture\");\r\nvar DirectionalShadowMapper = (function (_super) {\r\n    __extends(DirectionalShadowMapper, _super);\r\n    function DirectionalShadowMapper() {\r\n        _super.call(this);\r\n        this._pLightOffset = 10000;\r\n        this._pSnap = 64;\r\n        this._pCullPlanes = [];\r\n        this._pOverallDepthProjection = new FreeMatrixProjection_1.FreeMatrixProjection();\r\n        this._pOverallDepthCamera = new Camera_1.Camera(this._pOverallDepthProjection);\r\n        this._pLocalFrustum = [];\r\n        this._pMatrix = new Matrix3D_1.Matrix3D();\r\n    }\r\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"snap\", {\r\n        get: function () {\r\n            return this._pSnap;\r\n        },\r\n        set: function (value) {\r\n            this._pSnap = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"lightOffset\", {\r\n        get: function () {\r\n            return this._pLightOffset;\r\n        },\r\n        set: function (value) {\r\n            this._pLightOffset = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"iDepthProjection\", {\r\n        //@arcane\r\n        get: function () {\r\n            return this._pOverallDepthCamera.viewProjection;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DirectionalShadowMapper.prototype, \"depth\", {\r\n        //@arcane\r\n        get: function () {\r\n            return this._pMaxZ - this._pMinZ;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DirectionalShadowMapper.prototype.iSetDepthMap = function (depthMap) {\r\n        if (this._depthMap == depthMap)\r\n            return;\r\n        _super.prototype.iSetDepthMap.call(this, depthMap);\r\n        if (this._depthMap) {\r\n            this._explicitDepthMap = true;\r\n            this._pDepthMapSize = depthMap.image2D.rect.width;\r\n        }\r\n        else {\r\n            this._explicitDepthMap = false;\r\n        }\r\n    };\r\n    DirectionalShadowMapper.prototype.pCreateDepthTexture = function () {\r\n        return new Single2DTexture_1.Single2DTexture(new Image2D_1.Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n    };\r\n    //@override\r\n    DirectionalShadowMapper.prototype.pDrawDepthMap = function (scene, target, renderer) {\r\n        renderer.cullPlanes = this._pCullPlanes;\r\n        renderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\r\n    };\r\n    //@protected\r\n    DirectionalShadowMapper.prototype.pUpdateCullPlanes = function (camera) {\r\n        var lightFrustumPlanes = this._pOverallDepthCamera.frustumPlanes;\r\n        var viewFrustumPlanes = camera.frustumPlanes;\r\n        this._pCullPlanes.length = 4;\r\n        this._pCullPlanes[0] = lightFrustumPlanes[0];\r\n        this._pCullPlanes[1] = lightFrustumPlanes[1];\r\n        this._pCullPlanes[2] = lightFrustumPlanes[2];\r\n        this._pCullPlanes[3] = lightFrustumPlanes[3];\r\n        var light = this._pLight;\r\n        var dir = light.sceneDirection;\r\n        var dirX = dir.x;\r\n        var dirY = dir.y;\r\n        var dirZ = dir.z;\r\n        var j = 4;\r\n        for (var i = 0; i < 6; ++i) {\r\n            var plane = viewFrustumPlanes[i];\r\n            if (plane.a * dirX + plane.b * dirY + plane.c * dirZ < 0)\r\n                this._pCullPlanes[j++] = plane;\r\n        }\r\n    };\r\n    //@override\r\n    DirectionalShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\r\n        this.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\r\n        this._pOverallDepthProjection.matrix = this._pMatrix;\r\n        this.pUpdateCullPlanes(camera);\r\n    };\r\n    DirectionalShadowMapper.prototype.pUpdateProjectionFromFrustumCorners = function (camera, corners, matrix) {\r\n        var raw = Matrix3DUtils_1.Matrix3DUtils.RAW_DATA_CONTAINER;\r\n        var dir;\r\n        var x, y, z;\r\n        var minX, minY;\r\n        var maxX, maxY;\r\n        var i;\r\n        var light = this._pLight;\r\n        dir = light.sceneDirection;\r\n        this._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n        x = Math.floor((camera.x - dir.x * this._pLightOffset) / this._pSnap) * this._pSnap;\r\n        y = Math.floor((camera.y - dir.y * this._pLightOffset) / this._pSnap) * this._pSnap;\r\n        z = Math.floor((camera.z - dir.z * this._pLightOffset) / this._pSnap) * this._pSnap;\r\n        this._pOverallDepthCamera.x = x;\r\n        this._pOverallDepthCamera.y = y;\r\n        this._pOverallDepthCamera.z = z;\r\n        this._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n        this._pMatrix.prepend(camera.sceneTransform);\r\n        this._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n        minX = maxX = this._pLocalFrustum[0];\r\n        minY = maxY = this._pLocalFrustum[1];\r\n        this._pMaxZ = this._pLocalFrustum[2];\r\n        i = 3;\r\n        while (i < 24) {\r\n            x = this._pLocalFrustum[i];\r\n            y = this._pLocalFrustum[i + 1];\r\n            z = this._pLocalFrustum[i + 2];\r\n            if (x < minX)\r\n                minX = x;\r\n            if (x > maxX)\r\n                maxX = x;\r\n            if (y < minY)\r\n                minY = y;\r\n            if (y > maxY)\r\n                maxY = y;\r\n            if (z > this._pMaxZ)\r\n                this._pMaxZ = z;\r\n            i += 3;\r\n        }\r\n        this._pMinZ = 1;\r\n        var w = maxX - minX;\r\n        var h = maxY - minY;\r\n        var d = 1 / (this._pMaxZ - this._pMinZ);\r\n        if (minX < 0)\r\n            minX -= this._pSnap; // because int() rounds up for < 0\r\n        if (minY < 0)\r\n            minY -= this._pSnap;\r\n        minX = Math.floor(minX / this._pSnap) * this._pSnap;\r\n        minY = Math.floor(minY / this._pSnap) * this._pSnap;\r\n        var snap2 = 2 * this._pSnap;\r\n        w = Math.floor(w / snap2 + 2) * snap2;\r\n        h = Math.floor(h / snap2 + 2) * snap2;\r\n        maxX = minX + w;\r\n        maxY = minY + h;\r\n        w = 1 / w;\r\n        h = 1 / h;\r\n        raw[0] = 2 * w;\r\n        raw[5] = 2 * h;\r\n        raw[10] = d;\r\n        raw[12] = -(maxX + minX) * w;\r\n        raw[13] = -(maxY + minY) * h;\r\n        raw[14] = -this._pMinZ * d;\r\n        raw[15] = 1;\r\n        raw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n        matrix.copyRawDataFrom(raw);\r\n    };\r\n    return DirectionalShadowMapper;\r\n}(ShadowMapperBase_1.ShadowMapperBase));\r\nexports.DirectionalShadowMapper = DirectionalShadowMapper;\r\n},{\"../../display/Camera\":\"awayjs-display/lib/display/Camera\",\"../../materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\",\"../../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-core/lib/projections/FreeMatrixProjection\":undefined}],\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar DirectionalShadowMapper_1 = require(\"../../materials/shadowmappers/DirectionalShadowMapper\");\r\nvar NearDirectionalShadowMapper = (function (_super) {\r\n    __extends(NearDirectionalShadowMapper, _super);\r\n    function NearDirectionalShadowMapper(coverageRatio) {\r\n        if (coverageRatio === void 0) { coverageRatio = .5; }\r\n        _super.call(this);\r\n        this.coverageRatio = coverageRatio;\r\n    }\r\n    Object.defineProperty(NearDirectionalShadowMapper.prototype, \"coverageRatio\", {\r\n        /**\r\n         * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n         */\r\n        get: function () {\r\n            return this._coverageRatio;\r\n        },\r\n        set: function (value) {\r\n            if (value > 1)\r\n                value = 1;\r\n            else if (value < 0)\r\n                value = 0;\r\n            this._coverageRatio = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    NearDirectionalShadowMapper.prototype.pUpdateDepthProjection = function (camera) {\r\n        var corners = camera.projection.frustumCorners;\r\n        for (var i = 0; i < 12; ++i) {\r\n            var v = corners[i];\r\n            this._pLocalFrustum[i] = v;\r\n            this._pLocalFrustum[i + 12] = v + (corners[i + 12] - v) * this._coverageRatio;\r\n        }\r\n        this.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\r\n        this._pOverallDepthProjection.matrix = this._pMatrix;\r\n    };\r\n    return NearDirectionalShadowMapper;\r\n}(DirectionalShadowMapper_1.DirectionalShadowMapper));\r\nexports.NearDirectionalShadowMapper = NearDirectionalShadowMapper;\r\n},{\"../../materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\"}],\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar ShadowMapperBase = (function (_super) {\r\n    __extends(ShadowMapperBase, _super);\r\n    function ShadowMapperBase() {\r\n        _super.apply(this, arguments);\r\n        this._pDepthMapSize = 2048;\r\n        this._autoUpdateShadows = true;\r\n    }\r\n    Object.defineProperty(ShadowMapperBase.prototype, \"autoUpdateShadows\", {\r\n        get: function () {\r\n            return this._autoUpdateShadows;\r\n        },\r\n        set: function (value) {\r\n            this._autoUpdateShadows = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ShadowMapperBase.prototype.updateShadows = function () {\r\n        this._iShadowsInvalid = true;\r\n    };\r\n    ShadowMapperBase.prototype.iSetDepthMap = function (depthMap) {\r\n        if (this._depthMap && !this._explicitDepthMap)\r\n            this._depthMap.dispose();\r\n        this._depthMap = depthMap;\r\n    };\r\n    Object.defineProperty(ShadowMapperBase.prototype, \"light\", {\r\n        get: function () {\r\n            return this._pLight;\r\n        },\r\n        set: function (value) {\r\n            this._pLight = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ShadowMapperBase.prototype, \"depthMap\", {\r\n        get: function () {\r\n            if (!this._depthMap)\r\n                this._depthMap = this.pCreateDepthTexture();\r\n            return this._depthMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ShadowMapperBase.prototype, \"depthMapSize\", {\r\n        get: function () {\r\n            return this._pDepthMapSize;\r\n        },\r\n        set: function (value) {\r\n            if (value == this._pDepthMapSize)\r\n                return;\r\n            this._pSetDepthMapSize(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ShadowMapperBase.prototype.dispose = function () {\r\n        if (this._depthMap && !this._explicitDepthMap)\r\n            this._depthMap.dispose();\r\n        this._depthMap = null;\r\n    };\r\n    ShadowMapperBase.prototype.pCreateDepthTexture = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ShadowMapperBase.prototype.iRenderDepthMap = function (camera, scene, renderer) {\r\n        this._iShadowsInvalid = false;\r\n        this.pUpdateDepthProjection(camera);\r\n        if (!this._depthMap)\r\n            this._depthMap = this.pCreateDepthTexture();\r\n        this.pDrawDepthMap(scene, this._depthMap, renderer);\r\n    };\r\n    ShadowMapperBase.prototype.pUpdateDepthProjection = function (camera) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ShadowMapperBase.prototype.pDrawDepthMap = function (scene, target, renderer) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    ShadowMapperBase.prototype._pSetDepthMapSize = function (value) {\r\n        this._pDepthMapSize = value;\r\n        if (this._explicitDepthMap) {\r\n            throw Error(\"Cannot set depth map size for the current renderer.\");\r\n        }\r\n        else if (this._depthMap) {\r\n            this._depthMap.dispose();\r\n            this._depthMap = null;\r\n        }\r\n    };\r\n    return ShadowMapperBase;\r\n}(AssetBase_1.AssetBase));\r\nexports.ShadowMapperBase = ShadowMapperBase;\r\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/materials\":[function(require,module,exports){\n\"use strict\";\r\nvar LightPickerBase_1 = require(\"./materials/lightpickers/LightPickerBase\");\r\nexports.LightPickerBase = LightPickerBase_1.LightPickerBase;\r\nvar StaticLightPicker_1 = require(\"./materials/lightpickers/StaticLightPicker\");\r\nexports.StaticLightPicker = StaticLightPicker_1.StaticLightPicker;\r\nvar CascadeShadowMapper_1 = require(\"./materials/shadowmappers/CascadeShadowMapper\");\r\nexports.CascadeShadowMapper = CascadeShadowMapper_1.CascadeShadowMapper;\r\nvar CubeMapShadowMapper_1 = require(\"./materials/shadowmappers/CubeMapShadowMapper\");\r\nexports.CubeMapShadowMapper = CubeMapShadowMapper_1.CubeMapShadowMapper;\r\nvar DirectionalShadowMapper_1 = require(\"./materials/shadowmappers/DirectionalShadowMapper\");\r\nexports.DirectionalShadowMapper = DirectionalShadowMapper_1.DirectionalShadowMapper;\r\nvar NearDirectionalShadowMapper_1 = require(\"./materials/shadowmappers/NearDirectionalShadowMapper\");\r\nexports.NearDirectionalShadowMapper = NearDirectionalShadowMapper_1.NearDirectionalShadowMapper;\r\nvar ShadowMapperBase_1 = require(\"./materials/shadowmappers/ShadowMapperBase\");\r\nexports.ShadowMapperBase = ShadowMapperBase_1.ShadowMapperBase;\r\nvar BasicMaterial_1 = require(\"./materials/BasicMaterial\");\r\nexports.BasicMaterial = BasicMaterial_1.BasicMaterial;\r\nvar LightSources_1 = require(\"./materials/LightSources\");\r\nexports.LightSources = LightSources_1.LightSources;\r\nvar MaterialBase_1 = require(\"./materials/MaterialBase\");\r\nexports.MaterialBase = MaterialBase_1.MaterialBase;\r\n},{\"./materials/BasicMaterial\":\"awayjs-display/lib/materials/BasicMaterial\",\"./materials/LightSources\":\"awayjs-display/lib/materials/LightSources\",\"./materials/MaterialBase\":\"awayjs-display/lib/materials/MaterialBase\",\"./materials/lightpickers/LightPickerBase\":\"awayjs-display/lib/materials/lightpickers/LightPickerBase\",\"./materials/lightpickers/StaticLightPicker\":\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\",\"./materials/shadowmappers/CascadeShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper\",\"./materials/shadowmappers/CubeMapShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\",\"./materials/shadowmappers/DirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\",\"./materials/shadowmappers/NearDirectionalShadowMapper\":\"awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper\",\"./materials/shadowmappers/ShadowMapperBase\":\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\"}],\"awayjs-display/lib/partition/BasicPartition\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar NodeBase_1 = require(\"../partition/NodeBase\");\r\nvar PartitionBase_1 = require(\"../partition/PartitionBase\");\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nvar BasicPartition = (function (_super) {\r\n    __extends(BasicPartition, _super);\r\n    function BasicPartition() {\r\n        _super.call(this);\r\n        this._rootNode = new NodeBase_1.NodeBase();\r\n    }\r\n    return BasicPartition;\r\n}(PartitionBase_1.PartitionBase));\r\nexports.BasicPartition = BasicPartition;\r\n},{\"../partition/NodeBase\":\"awayjs-display/lib/partition/NodeBase\",\"../partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\"}],\"awayjs-display/lib/partition/CameraNode\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EntityNode_1 = require(\"../partition/EntityNode\");\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nvar CameraNode = (function (_super) {\r\n    __extends(CameraNode, _super);\r\n    function CameraNode() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CameraNode.prototype.acceptTraverser = function (traverser) {\r\n        // todo: dead end for now, if it has a debug sprite, then sure accept that\r\n    };\r\n    return CameraNode;\r\n}(EntityNode_1.EntityNode));\r\nexports.CameraNode = CameraNode;\r\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/DirectionalLightNode\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EntityNode_1 = require(\"../partition/EntityNode\");\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nvar DirectionalLightNode = (function (_super) {\r\n    __extends(DirectionalLightNode, _super);\r\n    function DirectionalLightNode() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DirectionalLightNode.prototype.acceptTraverser = function (traverser) {\r\n        if (traverser.enterNode(this))\r\n            traverser.applyDirectionalLight(this._displayObject);\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    DirectionalLightNode.prototype.isCastingShadow = function () {\r\n        return false;\r\n    };\r\n    return DirectionalLightNode;\r\n}(EntityNode_1.EntityNode));\r\nexports.DirectionalLightNode = DirectionalLightNode;\r\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/DisplayObjectNode\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\r\nvar AxisAlignedBoundingBox_1 = require(\"../bounds/AxisAlignedBoundingBox\");\r\nvar BoundingSphere_1 = require(\"../bounds/BoundingSphere\");\r\nvar BoundsType_1 = require(\"../bounds/BoundsType\");\r\nvar NullBounds_1 = require(\"../bounds/NullBounds\");\r\nvar DisplayObjectEvent_1 = require(\"../events/DisplayObjectEvent\");\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nvar DisplayObjectNode = (function (_super) {\r\n    __extends(DisplayObjectNode, _super);\r\n    function DisplayObjectNode(displayObject, pool) {\r\n        var _this = this;\r\n        _super.call(this, displayObject, pool);\r\n        this.numEntities = 0;\r\n        this.isSceneGraphNode = false;\r\n        this._boundsDirty = true;\r\n        this._onInvalidatePartitionBoundsDelegate = function (event) { return _this._onInvalidatePartitionBounds(event); };\r\n        this._displayObject = displayObject;\r\n        this._displayObject.addEventListener(DisplayObjectEvent_1.DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\r\n        this._boundsType = this._displayObject.boundsType;\r\n    }\r\n    Object.defineProperty(DisplayObjectNode.prototype, \"debugVisible\", {\r\n        get: function () {\r\n            return this._displayObject.debugVisible;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DisplayObjectNode.prototype, \"bounds\", {\r\n        /**\r\n         * @internal\r\n         */\r\n        get: function () {\r\n            if (this._boundsDirty)\r\n                this._updateBounds();\r\n            return this._bounds;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    DisplayObjectNode.prototype.isCastingShadow = function () {\r\n        return this._displayObject.castsShadows;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    DisplayObjectNode.prototype.isMask = function () {\r\n        return this._displayObject.maskMode;\r\n    };\r\n    DisplayObjectNode.prototype.onClear = function (event) {\r\n        _super.prototype.onClear.call(this, event);\r\n        this._displayObject.removeEventListener(DisplayObjectEvent_1.DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\r\n        this._displayObject = null;\r\n        if (this._bounds)\r\n            this._bounds.dispose();\r\n        this._bounds = null;\r\n    };\r\n    DisplayObjectNode.prototype.onInvalidate = function (event) {\r\n        _super.prototype.onInvalidate.call(this, event);\r\n        if (this._boundsType != this._displayObject.boundsType) {\r\n            this._boundsType = this._displayObject.boundsType;\r\n            this._boundsDirty = true;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param planes\r\n     * @param numPlanes\r\n     * @returns {boolean}\r\n     */\r\n    DisplayObjectNode.prototype.isInFrustum = function (planes, numPlanes) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DisplayObjectNode.prototype.isIntersectingRay = function (rayPosition, rayDirection) {\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    DisplayObjectNode.prototype.isRenderable = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DisplayObjectNode.prototype.acceptTraverser = function (traverser) {\r\n        // do nothing here\r\n    };\r\n    DisplayObjectNode.prototype._onInvalidatePartitionBounds = function (event) {\r\n        // do nothing here\r\n    };\r\n    DisplayObjectNode.prototype._updateBounds = function () {\r\n        if (this._bounds)\r\n            this._bounds.dispose();\r\n        if (this._boundsType == BoundsType_1.BoundsType.AXIS_ALIGNED_BOX)\r\n            this._bounds = new AxisAlignedBoundingBox_1.AxisAlignedBoundingBox(this._displayObject);\r\n        else if (this._boundsType == BoundsType_1.BoundsType.SPHERE)\r\n            this._bounds = new BoundingSphere_1.BoundingSphere(this._displayObject);\r\n        else if (this._boundsType == BoundsType_1.BoundsType.NULL)\r\n            this._bounds = new NullBounds_1.NullBounds();\r\n        this._boundsDirty = false;\r\n    };\r\n    return DisplayObjectNode;\r\n}(AbstractionBase_1.AbstractionBase));\r\nexports.DisplayObjectNode = DisplayObjectNode;\r\n},{\"../bounds/AxisAlignedBoundingBox\":\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\",\"../bounds/BoundingSphere\":\"awayjs-display/lib/bounds/BoundingSphere\",\"../bounds/BoundsType\":\"awayjs-display/lib/bounds/BoundsType\",\"../bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\",\"../events/DisplayObjectEvent\":\"awayjs-display/lib/events/DisplayObjectEvent\",\"awayjs-core/lib/library/AbstractionBase\":undefined}],\"awayjs-display/lib/partition/EntityNode\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar DisplayObjectNode_1 = require(\"../partition/DisplayObjectNode\");\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nvar EntityNode = (function (_super) {\r\n    __extends(EntityNode, _super);\r\n    function EntityNode(displayObject, partition) {\r\n        _super.call(this, displayObject, partition);\r\n        this.numEntities = 1;\r\n        this._maskPosition = new Vector3D_1.Vector3D();\r\n        this._partition = partition;\r\n    }\r\n    EntityNode.prototype.onClear = function (event) {\r\n        _super.prototype.onClear.call(this, event);\r\n        this._partition = null;\r\n    };\r\n    /**\r\n     *\r\n     * @param planes\r\n     * @param numPlanes\r\n     * @returns {boolean}\r\n     */\r\n    EntityNode.prototype.isInFrustum = function (planes, numPlanes) {\r\n        if (!this._displayObject._iIsVisible())\r\n            return false;\r\n        return true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n        //return this._bounds.isInFrustum(planes, numPlanes);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    EntityNode.prototype.isIntersectingRay = function (globalRayPosition, globalRayDirection) {\r\n        if (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\r\n            return false;\r\n        var pickingCollision = this._displayObject._iPickingCollision;\r\n        pickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\r\n        pickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\r\n        if (!pickingCollision.normal)\r\n            pickingCollision.normal = new Vector3D_1.Vector3D();\r\n        var rayEntryDistance = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\r\n        if (rayEntryDistance < 0)\r\n            return false;\r\n        pickingCollision.rayEntryDistance = rayEntryDistance;\r\n        pickingCollision.globalRayPosition = globalRayPosition;\r\n        pickingCollision.globalRayDirection = globalRayDirection;\r\n        pickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    EntityNode.prototype.isRenderable = function () {\r\n        return this._displayObject._iAssignedColorTransform()._isRenderable();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    EntityNode.prototype.acceptTraverser = function (traverser) {\r\n        if (traverser.enterNode(this))\r\n            traverser.applyEntity(this._displayObject);\r\n    };\r\n    EntityNode.prototype._onInvalidatePartitionBounds = function (event) {\r\n        this.bounds.invalidate();\r\n        this._partition.iMarkForUpdate(this);\r\n    };\r\n    EntityNode.prototype.isIntersectingMasks = function (globalRayPosition, globalRayDirection, masks) {\r\n        //horrible hack for 2d masks\r\n        if (masks != null) {\r\n            this._maskPosition.x = globalRayPosition.x + globalRayDirection.x * 1000;\r\n            this._maskPosition.y = globalRayPosition.y + globalRayDirection.y * 1000;\r\n            var numLayers = masks.length;\r\n            var children;\r\n            var numChildren;\r\n            var layerHit;\r\n            for (var i = 0; i < numLayers; i++) {\r\n                children = masks[i];\r\n                numChildren = children.length;\r\n                layerHit = false;\r\n                for (var j = 0; j < numChildren; j++) {\r\n                    if (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\r\n                        layerHit = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!layerHit)\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return EntityNode;\r\n}(DisplayObjectNode_1.DisplayObjectNode));\r\nexports.EntityNode = EntityNode;\r\n},{\"../partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\",\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/partition/IContainerNode\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/partition/IDisplayObjectNode\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/partition/IEntityNodeClass\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/partition/INode\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/partition/LightProbeNode\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EntityNode_1 = require(\"../partition/EntityNode\");\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nvar LightProbeNode = (function (_super) {\r\n    __extends(LightProbeNode, _super);\r\n    function LightProbeNode() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LightProbeNode.prototype.acceptTraverser = function (traverser) {\r\n        if (traverser.enterNode(this))\r\n            traverser.applyLightProbe(this._displayObject);\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    LightProbeNode.prototype.isCastingShadow = function () {\r\n        return false;\r\n    };\r\n    return LightProbeNode;\r\n}(EntityNode_1.EntityNode));\r\nexports.LightProbeNode = LightProbeNode;\r\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/NodeBase\":[function(require,module,exports){\n\"use strict\";\r\nvar NullBounds_1 = require(\"../bounds/NullBounds\");\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nvar NodeBase = (function () {\r\n    /**\r\n     *\r\n     */\r\n    function NodeBase() {\r\n        this._bounds = new NullBounds_1.NullBounds();\r\n        this._pChildNodes = new Array();\r\n        this._pNumChildNodes = 0;\r\n        this.numEntities = 0;\r\n    }\r\n    Object.defineProperty(NodeBase.prototype, \"debugVisible\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NodeBase.prototype, \"bounds\", {\r\n        /**\r\n         * @internal\r\n         */\r\n        get: function () {\r\n            return this._bounds; //TODO\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param planes\r\n     * @param numPlanes\r\n     * @returns {boolean}\r\n     * @internal\r\n     */\r\n    NodeBase.prototype.isInFrustum = function (planes, numPlanes) {\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param rayPosition\r\n     * @param rayDirection\r\n     * @returns {boolean}\r\n     */\r\n    NodeBase.prototype.isIntersectingRay = function (rayPosition, rayDirection) {\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    NodeBase.prototype.isRenderable = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    NodeBase.prototype.isCastingShadow = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    NodeBase.prototype.isMask = function () {\r\n        return false;\r\n    };\r\n    NodeBase.prototype.dispose = function () {\r\n        this.parent = null;\r\n        this._pChildNodes = null;\r\n    };\r\n    /**\r\n     *\r\n     * @param traverser\r\n     */\r\n    NodeBase.prototype.acceptTraverser = function (traverser) {\r\n        if (this.numEntities == 0)\r\n            return;\r\n        if (traverser.enterNode(this)) {\r\n            for (var i = 0; i < this._pNumChildNodes; i++)\r\n                this._pChildNodes[i].acceptTraverser(traverser);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    NodeBase.prototype.iAddNode = function (node) {\r\n        node.parent = this;\r\n        this.numEntities += node.numEntities;\r\n        this._pChildNodes[this._pNumChildNodes++] = node;\r\n        var numEntities = node.numEntities;\r\n        node = this;\r\n        do {\r\n            node.numEntities += numEntities;\r\n        } while ((node = node.parent) != null);\r\n    };\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    NodeBase.prototype.iRemoveNode = function (node) {\r\n        var index = this._pChildNodes.indexOf(node);\r\n        this._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n        this._pChildNodes.pop();\r\n        var numEntities = node.numEntities;\r\n        node = this;\r\n        do {\r\n            node.numEntities -= numEntities;\r\n        } while ((node = node.parent) != null);\r\n    };\r\n    return NodeBase;\r\n}());\r\nexports.NodeBase = NodeBase;\r\n},{\"../bounds/NullBounds\":\"awayjs-display/lib/bounds/NullBounds\"}],\"awayjs-display/lib/partition/PartitionBase\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nvar PartitionBase = (function () {\r\n    function PartitionBase() {\r\n        this._abstractionPool = new Object();\r\n        this._updatesMade = false;\r\n    }\r\n    PartitionBase.prototype.getAbstraction = function (displayObject) {\r\n        return (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new PartitionBase._abstractionClassPool[displayObject.assetType](displayObject, this)));\r\n    };\r\n    /**\r\n     *\r\n     * @param image\r\n     */\r\n    PartitionBase.prototype.clearAbstraction = function (displayObject) {\r\n        this._abstractionPool[displayObject.id] = null;\r\n    };\r\n    PartitionBase.prototype.traverse = function (traverser) {\r\n        if (this._updatesMade)\r\n            this.updateEntities();\r\n        if (this._rootNode) {\r\n            this._rootNode.acceptTraverser(traverser);\r\n        }\r\n    };\r\n    PartitionBase.prototype.iMarkForUpdate = function (node) {\r\n        var t = this._updateQueue;\r\n        while (t) {\r\n            if (node == t)\r\n                return;\r\n            t = t._iUpdateQueueNext;\r\n        }\r\n        node._iUpdateQueueNext = this._updateQueue;\r\n        this._updateQueue = node;\r\n        this._updatesMade = true;\r\n    };\r\n    PartitionBase.prototype.iRemoveEntity = function (node) {\r\n        var t;\r\n        if (node.parent) {\r\n            node.parent.iRemoveNode(node);\r\n            node.parent = null;\r\n        }\r\n        if (node == this._updateQueue) {\r\n            this._updateQueue = node._iUpdateQueueNext;\r\n        }\r\n        else {\r\n            t = this._updateQueue;\r\n            while (t && t._iUpdateQueueNext != node)\r\n                t = t._iUpdateQueueNext;\r\n            if (t)\r\n                t._iUpdateQueueNext = node._iUpdateQueueNext;\r\n        }\r\n        node._iUpdateQueueNext = null;\r\n        if (!this._updateQueue)\r\n            this._updatesMade = false;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @returns {away.partition.NodeBase}\r\n     */\r\n    PartitionBase.prototype.findParentForNode = function (node) {\r\n        return this._rootNode;\r\n    };\r\n    PartitionBase.prototype.updateEntities = function () {\r\n        var node = this._updateQueue;\r\n        while (node) {\r\n            //required for controllers with autoUpdate set to true and queued events\r\n            node._displayObject._iInternalUpdate();\r\n            node = node._iUpdateQueueNext;\r\n        }\r\n        //reset head\r\n        node = this._updateQueue;\r\n        var targetNode;\r\n        var t;\r\n        this._updateQueue = null;\r\n        this._updatesMade = false;\r\n        do {\r\n            targetNode = this.findParentForNode(node);\r\n            if (node.parent != targetNode) {\r\n                if (node.parent)\r\n                    node.parent.iRemoveNode(node);\r\n                targetNode.iAddNode(node);\r\n            }\r\n            t = node._iUpdateQueueNext;\r\n            node._iUpdateQueueNext = null;\r\n        } while ((node = t) != null);\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    PartitionBase.prototype._iRegisterEntity = function (displayObject) {\r\n        if (displayObject.isEntity)\r\n            this.iMarkForUpdate(this.getAbstraction(displayObject));\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    PartitionBase.prototype._iUnregisterEntity = function (displayObject) {\r\n        if (displayObject.isEntity)\r\n            this.iRemoveEntity(this.getAbstraction(displayObject));\r\n    };\r\n    /**\r\n     *\r\n     * @param imageObjectClass\r\n     */\r\n    PartitionBase.registerAbstraction = function (entityNodeClass, assetClass) {\r\n        PartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\r\n    };\r\n    PartitionBase._abstractionClassPool = new Object();\r\n    return PartitionBase;\r\n}());\r\nexports.PartitionBase = PartitionBase;\r\n},{}],\"awayjs-display/lib/partition/PointLightNode\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EntityNode_1 = require(\"../partition/EntityNode\");\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nvar PointLightNode = (function (_super) {\r\n    __extends(PointLightNode, _super);\r\n    function PointLightNode() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PointLightNode.prototype.acceptTraverser = function (traverser) {\r\n        if (traverser.enterNode(this))\r\n            traverser.applyPointLight(this._displayObject);\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    PointLightNode.prototype.isCastingShadow = function () {\r\n        return false;\r\n    };\r\n    return PointLightNode;\r\n}(EntityNode_1.EntityNode));\r\nexports.PointLightNode = PointLightNode;\r\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition/SceneGraphNode\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar DisplayObjectNode_1 = require(\"../partition/DisplayObjectNode\");\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nvar SceneGraphNode = (function (_super) {\r\n    __extends(SceneGraphNode, _super);\r\n    function SceneGraphNode() {\r\n        _super.apply(this, arguments);\r\n        this.isSceneGraphNode = true;\r\n        this._numNodes = 0;\r\n        this._pChildNodes = new Array();\r\n        this._childDepths = new Array();\r\n        this._numMasks = 0;\r\n        this._childMasks = new Array();\r\n    }\r\n    /**\r\n     *\r\n     * @param traverser\r\n     */\r\n    SceneGraphNode.prototype.acceptTraverser = function (traverser) {\r\n        //containers nodes are for ordering only, no need to check enterNode or debugVisible\r\n        if (this.numEntities == 0)\r\n            return;\r\n        var i;\r\n        for (i = 0; i < this._numNodes; i++)\r\n            this._pChildNodes[i].acceptTraverser(traverser);\r\n        for (i = 0; i < this._numMasks; i++)\r\n            this._childMasks[i].acceptTraverser(traverser);\r\n    };\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    SceneGraphNode.prototype.iAddNode = function (node) {\r\n        node.parent = this;\r\n        if (node._displayObject.maskMode) {\r\n            this._childMasks.push(node);\r\n            this._numMasks++;\r\n        }\r\n        else {\r\n            var depth = node._displayObject._depthID;\r\n            var len = this._childDepths.length;\r\n            var index = len;\r\n            while (index--)\r\n                if (this._childDepths[index] < depth)\r\n                    break;\r\n            index++;\r\n            if (index < len) {\r\n                this._pChildNodes.splice(index, 0, node);\r\n                this._childDepths.splice(index, 0, depth);\r\n            }\r\n            else {\r\n                this._pChildNodes.push(node);\r\n                this._childDepths.push(depth);\r\n            }\r\n            this._numNodes++;\r\n        }\r\n        var numEntities = node.isSceneGraphNode ? node.numEntities : 1;\r\n        node = this;\r\n        do {\r\n            node.numEntities += numEntities;\r\n        } while ((node = node.parent) != null);\r\n    };\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    SceneGraphNode.prototype.iRemoveNode = function (node) {\r\n        if (node._displayObject.maskMode) {\r\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\r\n            this._numMasks--;\r\n        }\r\n        else {\r\n            var index = this._pChildNodes.indexOf(node);\r\n            this._pChildNodes.splice(index, 1);\r\n            this._childDepths.splice(index, 1);\r\n            this._numNodes--;\r\n        }\r\n        var numEntities = node.numEntities;\r\n        node = this;\r\n        do {\r\n            node.numEntities -= numEntities;\r\n        } while ((node = node.parent) != null);\r\n    };\r\n    return SceneGraphNode;\r\n}(DisplayObjectNode_1.DisplayObjectNode));\r\nexports.SceneGraphNode = SceneGraphNode;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = SceneGraphNode;\r\n},{\"../partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\"}],\"awayjs-display/lib/partition/SceneGraphPartition\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar SceneGraphNode_1 = require(\"../partition/SceneGraphNode\");\r\nvar PartitionBase_1 = require(\"../partition/PartitionBase\");\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nvar SceneGraphPartition = (function (_super) {\r\n    __extends(SceneGraphPartition, _super);\r\n    function SceneGraphPartition() {\r\n        _super.call(this);\r\n        this._sceneGraphNodePool = new SceneGraphNodePool();\r\n    }\r\n    SceneGraphPartition.prototype.traverse = function (traverser) {\r\n        _super.prototype.traverse.call(this, traverser);\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @returns {away.partition.NodeBase}\r\n     */\r\n    SceneGraphPartition.prototype.findParentForNode = function (node) {\r\n        if (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\r\n            this._rootNode = node;\r\n            return null;\r\n        }\r\n        if (!node.isSceneGraphNode && node._displayObject.isContainer)\r\n            return this._sceneGraphNodePool.getAbstraction(node._displayObject);\r\n        return this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    SceneGraphPartition.prototype._iRegisterEntity = function (displayObject) {\r\n        _super.prototype._iRegisterEntity.call(this, displayObject);\r\n        if (displayObject.isContainer)\r\n            this.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(displayObject));\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    SceneGraphPartition.prototype._iUnregisterEntity = function (displayObject) {\r\n        _super.prototype._iUnregisterEntity.call(this, displayObject);\r\n        if (displayObject.isContainer)\r\n            this.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(displayObject));\r\n    };\r\n    return SceneGraphPartition;\r\n}(PartitionBase_1.PartitionBase));\r\nexports.SceneGraphPartition = SceneGraphPartition;\r\n/**\r\n * @class away.pool.SceneGraphNodePool\r\n */\r\nvar SceneGraphNodePool = (function () {\r\n    function SceneGraphNodePool() {\r\n        this._abstractionPool = new Object();\r\n    }\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @param entity\r\n     * @returns EntityNode\r\n     */\r\n    SceneGraphNodePool.prototype.getAbstraction = function (displayObjectContainer) {\r\n        return (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode_1.SceneGraphNode(displayObjectContainer, this)));\r\n    };\r\n    /**\r\n     * //TODO\r\n     *\r\n     * @param entity\r\n     */\r\n    SceneGraphNodePool.prototype.clearAbstraction = function (displayObjectContainer) {\r\n        delete this._abstractionPool[displayObjectContainer.id];\r\n    };\r\n    return SceneGraphNodePool;\r\n}());\r\nexports.SceneGraphNodePool = SceneGraphNodePool;\r\n},{\"../partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\",\"../partition/SceneGraphNode\":\"awayjs-display/lib/partition/SceneGraphNode\"}],\"awayjs-display/lib/partition/SkyboxNode\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar EntityNode_1 = require(\"../partition/EntityNode\");\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nvar SkyboxNode = (function (_super) {\r\n    __extends(SkyboxNode, _super);\r\n    function SkyboxNode() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    /**\r\n     *\r\n     * @param planes\r\n     * @param numPlanes\r\n     * @returns {boolean}\r\n     */\r\n    SkyboxNode.prototype.isInFrustum = function (planes, numPlanes) {\r\n        if (!this._displayObject._iIsVisible)\r\n            return false;\r\n        //a skybox is always in view unless its visibility is set to false\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    SkyboxNode.prototype.isCastingShadow = function () {\r\n        return false; //skybox never casts shadows\r\n    };\r\n    return SkyboxNode;\r\n}(EntityNode_1.EntityNode));\r\nexports.SkyboxNode = SkyboxNode;\r\n},{\"../partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\"}],\"awayjs-display/lib/partition\":[function(require,module,exports){\n\"use strict\";\r\nvar BasicPartition_1 = require(\"./partition/BasicPartition\");\r\nexports.BasicPartition = BasicPartition_1.BasicPartition;\r\nvar CameraNode_1 = require(\"./partition/CameraNode\");\r\nexports.CameraNode = CameraNode_1.CameraNode;\r\nvar DirectionalLightNode_1 = require(\"./partition/DirectionalLightNode\");\r\nexports.DirectionalLightNode = DirectionalLightNode_1.DirectionalLightNode;\r\nvar DisplayObjectNode_1 = require(\"./partition/DisplayObjectNode\");\r\nexports.DisplayObjectNode = DisplayObjectNode_1.DisplayObjectNode;\r\nvar EntityNode_1 = require(\"./partition/EntityNode\");\r\nexports.EntityNode = EntityNode_1.EntityNode;\r\nvar LightProbeNode_1 = require(\"./partition/LightProbeNode\");\r\nexports.LightProbeNode = LightProbeNode_1.LightProbeNode;\r\nvar NodeBase_1 = require(\"./partition/NodeBase\");\r\nexports.NodeBase = NodeBase_1.NodeBase;\r\nvar PartitionBase_1 = require(\"./partition/PartitionBase\");\r\nexports.PartitionBase = PartitionBase_1.PartitionBase;\r\nvar PointLightNode_1 = require(\"./partition/PointLightNode\");\r\nexports.PointLightNode = PointLightNode_1.PointLightNode;\r\nvar SceneGraphNode_1 = require(\"./partition/SceneGraphNode\");\r\nexports.SceneGraphNode = SceneGraphNode_1.SceneGraphNode;\r\nvar SceneGraphPartition_1 = require(\"./partition/SceneGraphPartition\");\r\nexports.SceneGraphPartition = SceneGraphPartition_1.SceneGraphPartition;\r\nvar SkyboxNode_1 = require(\"./partition/SkyboxNode\");\r\nexports.SkyboxNode = SkyboxNode_1.SkyboxNode;\r\n},{\"./partition/BasicPartition\":\"awayjs-display/lib/partition/BasicPartition\",\"./partition/CameraNode\":\"awayjs-display/lib/partition/CameraNode\",\"./partition/DirectionalLightNode\":\"awayjs-display/lib/partition/DirectionalLightNode\",\"./partition/DisplayObjectNode\":\"awayjs-display/lib/partition/DisplayObjectNode\",\"./partition/EntityNode\":\"awayjs-display/lib/partition/EntityNode\",\"./partition/LightProbeNode\":\"awayjs-display/lib/partition/LightProbeNode\",\"./partition/NodeBase\":\"awayjs-display/lib/partition/NodeBase\",\"./partition/PartitionBase\":\"awayjs-display/lib/partition/PartitionBase\",\"./partition/PointLightNode\":\"awayjs-display/lib/partition/PointLightNode\",\"./partition/SceneGraphNode\":\"awayjs-display/lib/partition/SceneGraphNode\",\"./partition/SceneGraphPartition\":\"awayjs-display/lib/partition/SceneGraphPartition\",\"./partition/SkyboxNode\":\"awayjs-display/lib/partition/SkyboxNode\"}],\"awayjs-display/lib/pick/IPicker\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/pick/IPickingCollider\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/pick/JSPickingCollider\":[function(require,module,exports){\n\"use strict\";\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nvar JSPickingCollider = (function () {\r\n    /**\r\n     * Creates a new <code>JSPickingCollider</code> object.\r\n     *\r\n     * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n     */\r\n    function JSPickingCollider(findClosestCollision) {\r\n        if (findClosestCollision === void 0) { findClosestCollision = false; }\r\n        this._findClosestCollision = findClosestCollision;\r\n    }\r\n    /**\r\n     * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n     *\r\n     * @param billboard The billboard instance to be tested.\r\n     * @param pickingCollision The collision object used to store the collision results\r\n     * @param findClosest\r\n     */\r\n    JSPickingCollider.prototype.testBillboardCollision = function (billboard, material, pickingCollision) {\r\n        pickingCollision.renderable = null;\r\n        //if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\r\n        //\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\r\n        //\r\n        //\tpickingCollision.renderable = billboard;\r\n        //\r\n        //\treturn true;\r\n        //}\r\n        return false;\r\n    };\r\n    /**\r\n     * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\r\n     *\r\n     * @param triangleElements\r\n     * @param material\r\n     * @param pickingCollision\r\n     * @returns {boolean}\r\n     */\r\n    JSPickingCollider.prototype.testTriangleCollision = function (triangleElements, material, pickingCollision, count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var rayPosition = pickingCollision.rayPosition;\r\n        var rayDirection = pickingCollision.rayDirection;\r\n        var t;\r\n        var i0, i1, i2;\r\n        var rx, ry, rz;\r\n        var nx, ny, nz;\r\n        var cx, cy, cz;\r\n        var coeff, u, v, w;\r\n        var p0x, p0y, p0z;\r\n        var p1x, p1y, p1z;\r\n        var p2x, p2y, p2z;\r\n        var s0x, s0y, s0z;\r\n        var s1x, s1y, s1z;\r\n        var nl, nDotV, D, disToPlane;\r\n        var Q1Q2, Q1Q1, Q2Q2, RQ1, RQ2;\r\n        var collisionTriangleIndex = -1;\r\n        var bothSides = material.bothSides;\r\n        var positions = triangleElements.positions.get(count, offset);\r\n        var posDim = triangleElements.positions.dimensions;\r\n        var posStride = triangleElements.positions.stride;\r\n        var indices;\r\n        if (triangleElements.indices) {\r\n            indices = triangleElements.indices.get(triangleElements.numElements);\r\n            count = indices.length;\r\n        }\r\n        for (var index = 0; index < count; index += 3) {\r\n            // evaluate triangle indices\r\n            if (indices) {\r\n                i0 = indices[index] * posStride;\r\n                i1 = indices[index + 1] * posStride;\r\n                i2 = indices[index + 2] * posStride;\r\n            }\r\n            else {\r\n                i0 = index * posStride;\r\n                i1 = (index + 1) * posStride;\r\n                i2 = (index + 2) * posStride;\r\n            }\r\n            // evaluate triangle positions\r\n            p0x = positions[i0];\r\n            p1x = positions[i1];\r\n            p2x = positions[i2];\r\n            s0x = p1x - p0x; // s0 = p1 - p0\r\n            s1x = p2x - p0x; // s1 = p2 - p0\r\n            p0y = positions[i0 + 1];\r\n            p1y = positions[i1 + 1];\r\n            p2y = positions[i2 + 1];\r\n            s0y = p1y - p0y;\r\n            s1y = p2y - p0y;\r\n            if (posDim == 3) {\r\n                p0z = positions[i0 + 2];\r\n                p1z = positions[i1 + 2];\r\n                p2z = positions[i2 + 2];\r\n                s0z = p1z - p0z;\r\n                s1z = p2z - p0z;\r\n                // evaluate sides and triangle normal\r\n                nx = s0y * s1z - s0z * s1y; // n = s0 x s1\r\n                ny = s0z * s1x - s0x * s1z;\r\n                nz = s0x * s1y - s0y * s1x;\r\n                nl = 1 / Math.sqrt(nx * nx + ny * ny + nz * nz); // normalize n\r\n                nx *= nl;\r\n                ny *= nl;\r\n                nz *= nl;\r\n            }\r\n            else {\r\n                nx = 0;\r\n                ny = 0;\r\n                nz = 1;\r\n            }\r\n            // -- plane intersection test --\r\n            nDotV = nx * rayDirection.x + ny * +rayDirection.y + nz * rayDirection.z; // rayDirection . normal\r\n            if ((!bothSides && nDotV < 0.0) || (bothSides && nDotV != 0.0)) {\r\n                // find collision t\r\n                D = -(nx * p0x + ny * p0y + nz * p0z);\r\n                disToPlane = -(nx * rayPosition.x + ny * rayPosition.y + nz * rayPosition.z + D);\r\n                t = disToPlane / nDotV;\r\n                // find collision point\r\n                cx = rayPosition.x + t * rayDirection.x;\r\n                cy = rayPosition.y + t * rayDirection.y;\r\n                cz = rayPosition.z + t * rayDirection.z;\r\n                // collision point inside triangle? ( using barycentric coordinates )\r\n                Q1Q2 = s0x * s1x + s0y * s1y + s0z * s1z;\r\n                Q1Q1 = s0x * s0x + s0y * s0y + s0z * s0z;\r\n                Q2Q2 = s1x * s1x + s1y * s1y + s1z * s1z;\r\n                rx = cx - p0x;\r\n                ry = cy - p0y;\r\n                rz = cz - p0z;\r\n                RQ1 = rx * s0x + ry * s0y + rz * s0z;\r\n                RQ2 = rx * s1x + ry * s1y + rz * s1z;\r\n                coeff = 1 / (Q1Q1 * Q2Q2 - Q1Q2 * Q1Q2);\r\n                v = coeff * (Q2Q2 * RQ1 - Q1Q2 * RQ2);\r\n                w = coeff * (-Q1Q2 * RQ1 + Q1Q1 * RQ2);\r\n                if (v < 0)\r\n                    continue;\r\n                if (w < 0)\r\n                    continue;\r\n                u = 1 - v - w;\r\n                if (!(u < 0) && t > 0 && t < pickingCollision.rayEntryDistance) {\r\n                    collisionTriangleIndex = index / 3;\r\n                    pickingCollision.rayEntryDistance = t;\r\n                    pickingCollision.position = new Vector3D_1.Vector3D(cx, cy, cz);\r\n                    pickingCollision.normal = new Vector3D_1.Vector3D(nx, ny, nz);\r\n                    if (triangleElements.uvs) {\r\n                        var uvs = triangleElements.uvs.get(triangleElements.numVertices);\r\n                        var uvStride = triangleElements.uvs.stride;\r\n                        var uIndex = indices[index] * uvStride;\r\n                        var uv0 = new Vector3D_1.Vector3D(uvs[uIndex], uvs[uIndex + 1]);\r\n                        uIndex = indices[index + 1] * uvStride;\r\n                        var uv1 = new Vector3D_1.Vector3D(uvs[uIndex], uvs[uIndex + 1]);\r\n                        uIndex = indices[index + 2] * uvStride;\r\n                        var uv2 = new Vector3D_1.Vector3D(uvs[uIndex], uvs[uIndex + 1]);\r\n                        pickingCollision.uv = new Point_1.Point(u * uv0.x + v * uv1.x + w * uv2.x, u * uv0.y + v * uv1.y + w * uv2.y);\r\n                    }\r\n                    pickingCollision.elementIndex = collisionTriangleIndex;\r\n                    // if not looking for best hit, first found will do...\r\n                    if (!this._findClosestCollision)\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n        if (collisionTriangleIndex >= 0)\r\n            return true;\r\n        return false;\r\n    };\r\n    //\r\n    ///**\r\n    // * Tests a <code>CurveElements</code> object for a collision with the picking ray.\r\n    // *\r\n    // * @param triangleElements\r\n    // * @param material\r\n    // * @param pickingCollision\r\n    // * @returns {boolean}\r\n    // */\r\n    //public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\r\n    //{\r\n    //\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\r\n    //\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\r\n    //\r\n    //\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n    //\t//this will only work while all points lie on the x/y plane\r\n    //\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n    //\r\n    //\tvar result:Vector3D = new Vector3D();\r\n    //\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n    //\tresult.x = rayPosition.x - ( plane.x*distance);\r\n    //\tresult.y = rayPosition.y - ( plane.y*distance);\r\n    //\tresult.z = rayPosition.z - ( plane.z*distance);\r\n    //\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n    //\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n    //\trayDirection.scaleBy(t);\r\n    //\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n    //\r\n    //\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\r\n    //\tvar collisionCurveIndex:number = -1;\r\n    //\tvar bothSides:boolean = material.bothSides;\r\n    //\r\n    //\r\n    //\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\r\n    //\tvar posDim:number = curveElements.positions.dimensions;\r\n    //\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\r\n    //\tvar curveDim:number = curveElements.curves.dimensions;\r\n    //\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\r\n    //\tvar uvDim:number = curveElements.uvs.dimensions;\r\n    //\tvar numIndices:number = indices.length;\r\n    //\r\n    //\r\n    //\tfor(var index:number = 0; index < numIndices; index+=3)\r\n    //\t{\r\n    //\t\tvar id0:number = indices[index];\r\n    //\t\tvar id1:number = indices[index + 1] * posDim;\r\n    //\t\tvar id2:number = indices[index + 2] * posDim;\r\n    //\r\n    //\t\tvar ax:number = positions[id0 * posDim];\r\n    //\t\tvar ay:number = positions[id0 * posDim + 1];\r\n    //\t\tvar bx:number = positions[id1];\r\n    //\t\tvar by:number = positions[id1 + 1];\r\n    //\t\tvar cx:number = positions[id2];\r\n    //\t\tvar cy:number = positions[id2 + 1];\r\n    //\r\n    //\t\tvar curvex:number = curves[id0 * curveDim];\r\n    //\t\tvar az:number = positions[id0 * posDim + 2];\r\n    //\r\n    //\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n    //\r\n    //\t\t//from a to p\r\n    //\t\tvar dx:number = ax - p.x;\r\n    //\t\tvar dy:number = ay - p.y;\r\n    //\r\n    //\t\t//edge normal (a-b)\r\n    //\t\tvar nx:number = by - ay;\r\n    //\t\tvar ny:number = -(bx - ax);\r\n    //\r\n    //\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n    //\r\n    //\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n    //\t\t//console.log(\"dot a\",dot);\r\n    //\t\tif (dot > 0)\r\n    //\t\t\tcontinue;\r\n    //\r\n    //\t\tdx = bx - p.x;\r\n    //\t\tdy = by - p.y;\r\n    //\t\tnx = cy - by;\r\n    //\t\tny = -(cx - bx);\r\n    //\r\n    //\t\tdot = (dx * nx) + (dy * ny);\r\n    //\t\t//console.log(\"dot b\",dot);\r\n    //\t\tif (dot > 0)\r\n    //\t\t\tcontinue;\r\n    //\r\n    //\t\tdx = cx - p.x;\r\n    //\t\tdy = cy - p.y;\r\n    //\t\tnx = ay - cy;\r\n    //\t\tny = -(ax - cx);\r\n    //\r\n    //\t\tdot = (dx * nx) + (dy * ny);\r\n    //\t\t//console.log(\"dot c\",dot);\r\n    //\t\tif (dot > 0)\r\n    //\t\t\tcontinue;\r\n    //\r\n    //\t\t//check if not solid\r\n    //\t\tif (curvex != 2) {\r\n    //\r\n    //\t\t\tvar v0x:number = bx - ax;\r\n    //\t\t\tvar v0y:number = by - ay;\r\n    //\t\t\tvar v1x:number = cx - ax;\r\n    //\t\t\tvar v1y:number = cy - ay;\r\n    //\t\t\tvar v2x:number = p.x - ax;\r\n    //\t\t\tvar v2y:number = p.y - ay;\r\n    //\r\n    //\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n    //\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n    //\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n    //\t\t\tvar u:number = 1 - v - w;\r\n    //\r\n    //\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n    //\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n    //\r\n    //\t\t\tvar d:number = uu * uu - vv;\r\n    //\r\n    //\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n    //\t\t\t\tcontinue;\r\n    //\t\t}\r\n    //\t\t//TODO optimize away this pointless check as the distance is always the same\r\n    //\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n    //\t\tif (distance < shortestCollisionDistance) {\r\n    //\t\t\tshortestCollisionDistance = distance;\r\n    //\t\t\tcollisionCurveIndex = index/3;\r\n    //\t\t\tpickingCollision.rayEntryDistance = distance;\r\n    //\t\t\tpickingCollision.localPosition = p;\r\n    //\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\r\n    //\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n    //\t\t\tpickingCollision.index = index;\r\n    //\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\r\n    //\r\n    //\t\t\t// if not looking for best hit, first found will do...\r\n    //\t\t\tif (!this._findClosestCollision)\r\n    //\t\t\t\treturn true;\r\n    //\t\t}\r\n    //\t}\r\n    //\r\n    //\tif (collisionCurveIndex >= 0)\r\n    //\t\treturn true;\r\n    //\r\n    //\treturn false;\r\n    //}\r\n    /**\r\n     * Tests a <code>LineElements</code> object for a collision with the picking ray.\r\n     *\r\n     * @param triangleElements\r\n     * @param material\r\n     * @param pickingCollision\r\n     * @returns {boolean}\r\n     */\r\n    JSPickingCollider.prototype.testLineCollision = function (lineElements, material, pickingCollision, count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return false;\r\n    };\r\n    return JSPickingCollider;\r\n}());\r\nexports.JSPickingCollider = JSPickingCollider;\r\n},{\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/pick/PickingCollision\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollision\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollision\r\n */\r\nvar PickingCollision = (function () {\r\n    /**\r\n     * Creates a new <code>PickingCollision</code> object.\r\n     *\r\n     * @param entity The entity to which this collision object belongs.\r\n     */\r\n    function PickingCollision(entity) {\r\n        this.entity = entity;\r\n    }\r\n    return PickingCollision;\r\n}());\r\nexports.PickingCollision = PickingCollision;\r\n},{}],\"awayjs-display/lib/pick/RaycastPicker\":[function(require,module,exports){\n\"use strict\";\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nvar RaycastPicker = (function () {\r\n    /**\r\n     * Creates a new <code>RaycastPicker</code> object.\r\n     *\r\n     * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n     * or simply returns the first collision encountered. Defaults to false.\r\n     */\r\n    function RaycastPicker(findClosestCollision) {\r\n        if (findClosestCollision === void 0) { findClosestCollision = false; }\r\n        this._entities = new Array();\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        this.onlyMouseEnabled = true;\r\n        this._findClosestCollision = findClosestCollision;\r\n    }\r\n    /**\r\n     * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n     *\r\n     * @param node The Partition3DNode object to frustum-test.\r\n     */\r\n    RaycastPicker.prototype.enterNode = function (node) {\r\n        return node.isIntersectingRay(this._rayPosition, this._rayDirection) && !node.isMask();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RaycastPicker.prototype.getViewCollision = function (x, y, view) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._view = view;\r\n        //update ray\r\n        var rayPosition = view.unproject(x, y, 0);\r\n        var rayDirection = view.unproject(x, y, 1).subtract(rayPosition);\r\n        return this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RaycastPicker.prototype.getSceneCollision = function (rayPosition, rayDirection, scene) {\r\n        this._rayPosition = rayPosition;\r\n        this._rayDirection = rayDirection;\r\n        // collect entities to test\r\n        scene.traversePartitions(this);\r\n        //early out if no collisions detected\r\n        if (!this._entities.length)\r\n            return null;\r\n        var collision = this.getPickingCollision();\r\n        //discard entities\r\n        this._entities.length = 0;\r\n        return collision;\r\n    };\r\n    //\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\r\n    //\t\t{\r\n    //\t\t\tthis._numRenderables = 0;\r\n    //\r\n    //\t\t\tvar renderable:IEntity;\r\n    //\t\t\tvar l:number = entities.length;\r\n    //\r\n    //\t\t\tfor (var c:number = 0; c < l; c++) {\r\n    //\t\t\t\trenderable = entities[c];\r\n    //\r\n    //\t\t\t\tif (renderable.isIntersectingRay(position, direction))\r\n    //\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\r\n    //\t\t\t}\r\n    //\r\n    //\t\t\treturn this.getPickingCollision(this._raycastCollector);\r\n    //\t\t}\r\n    RaycastPicker.prototype.setIgnoreList = function (entities) {\r\n        this._ignoredEntities = entities;\r\n    };\r\n    RaycastPicker.prototype.isIgnored = function (entity) {\r\n        if (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n            return true;\r\n        if (this._ignoredEntities) {\r\n            var len = this._ignoredEntities.length;\r\n            for (var i = 0; i < len; i++)\r\n                if (this._ignoredEntities[i] == entity)\r\n                    return true;\r\n        }\r\n        return false;\r\n    };\r\n    RaycastPicker.prototype.sortOnNearT = function (entity1, entity2) {\r\n        return entity2._iPickingCollision.rayEntryDistance - entity1._iPickingCollision.rayEntryDistance;\r\n    };\r\n    RaycastPicker.prototype.getPickingCollision = function () {\r\n        // Sort entities from closest to furthest to reduce tests.\r\n        this._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n        // ---------------------------------------------------------------------\r\n        // Evaluate triangle collisions when needed.\r\n        // Replaces collision data provided by bounds collider with more precise data.\r\n        // ---------------------------------------------------------------------\r\n        this._bestCollision = null;\r\n        var entity;\r\n        var len = this._entities.length;\r\n        for (var i = len - 1; i >= 0; i--) {\r\n            entity = this._entities[i];\r\n            this._testCollision = entity._iPickingCollision;\r\n            if (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\r\n                this._testCollider = entity.pickingCollider;\r\n                if (this._testCollider) {\r\n                    this._testCollision.rayEntryDistance = Number.MAX_VALUE;\r\n                    entity._acceptTraverser(this);\r\n                    // If a collision exists, update the collision data and stop all checks.\r\n                    if (this._bestCollision && !this._findClosestCollision)\r\n                        break;\r\n                }\r\n                else if (!this._testCollision.rayOriginIsInsideBounds) {\r\n                    // A bounds collision with no picking collider stops all checks.\r\n                    // Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n                    // to enable the detection of a corresponsding triangle collision.\r\n                    // Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n                    // if it has been established that there is NO triangle collider to test\r\n                    this._bestCollision = this._testCollision;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (this._bestCollision)\r\n            this.updatePosition(this._bestCollision);\r\n        return this._bestCollision;\r\n    };\r\n    RaycastPicker.prototype.updatePosition = function (pickingCollision) {\r\n        var collisionPos = pickingCollision.position || (pickingCollision.position = new Vector3D_1.Vector3D());\r\n        var rayDir = pickingCollision.rayDirection;\r\n        var rayPos = pickingCollision.rayPosition;\r\n        var t = pickingCollision.rayEntryDistance;\r\n        collisionPos.x = rayPos.x + t * rayDir.x;\r\n        collisionPos.y = rayPos.y + t * rayDir.y;\r\n        collisionPos.z = rayPos.z + t * rayDir.z;\r\n    };\r\n    RaycastPicker.prototype.dispose = function () {\r\n        //TODO\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    RaycastPicker.prototype.applyEntity = function (entity) {\r\n        if (!this.isIgnored(entity))\r\n            this._entities.push(entity);\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    RaycastPicker.prototype.applyRenderable = function (renderable) {\r\n        if (renderable._iTestCollision(this._testCollision, this._testCollider))\r\n            this._bestCollision = this._testCollision;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    RaycastPicker.prototype.applyDirectionalLight = function (entity) {\r\n        //don't do anything here\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    RaycastPicker.prototype.applyLightProbe = function (entity) {\r\n        //don't do anything here\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    RaycastPicker.prototype.applyPointLight = function (entity) {\r\n        //don't do anything here\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    RaycastPicker.prototype.applySkybox = function (entity) {\r\n        //don't do anything here\r\n    };\r\n    return RaycastPicker;\r\n}());\r\nexports.RaycastPicker = RaycastPicker;\r\n},{\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/pick\":[function(require,module,exports){\n\"use strict\";\r\nvar JSPickingCollider_1 = require(\"./pick/JSPickingCollider\");\r\nexports.JSPickingCollider = JSPickingCollider_1.JSPickingCollider;\r\nvar PickingCollision_1 = require(\"./pick/PickingCollision\");\r\nexports.PickingCollision = PickingCollision_1.PickingCollision;\r\nvar RaycastPicker_1 = require(\"./pick/RaycastPicker\");\r\nexports.RaycastPicker = RaycastPicker_1.RaycastPicker;\r\n},{\"./pick/JSPickingCollider\":\"awayjs-display/lib/pick/JSPickingCollider\",\"./pick/PickingCollision\":\"awayjs-display/lib/pick/PickingCollision\",\"./pick/RaycastPicker\":\"awayjs-display/lib/pick/RaycastPicker\"}],\"awayjs-display/lib/prefabs/PrefabBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nvar PrefabBase = (function (_super) {\r\n    __extends(PrefabBase, _super);\r\n    //\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n    /**\r\n     * Creates a new PrefabBase object.\r\n     */\r\n    function PrefabBase() {\r\n        _super.call(this);\r\n        this._pObjects = new Array();\r\n    }\r\n    /**\r\n     * Returns a display object generated from this prefab\r\n     */\r\n    PrefabBase.prototype.getNewObject = function () {\r\n        var object = this._pCreateObject();\r\n        this._pObjects.push(object);\r\n        return object;\r\n    };\r\n    //\t\tpublic getNewBatchObject():BatchObject\r\n    //\t\t{\r\n    //\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n    //\r\n    //\t\t\tthis._pBatchObjects.push(object);\r\n    //\r\n    //\t\t\treturn object;\r\n    //\t\t}\r\n    PrefabBase.prototype._pCreateObject = function () {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    PrefabBase.prototype._iValidate = function () {\r\n        // To be overridden when necessary\r\n    };\r\n    return PrefabBase;\r\n}(AssetBase_1.AssetBase));\r\nexports.PrefabBase = PrefabBase;\r\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\r\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\r\n/**\r\n * A Capsule primitive sprite.\r\n */\r\nvar PrimitiveCapsulePrefab = (function (_super) {\r\n    __extends(PrimitiveCapsulePrefab, _super);\r\n    /**\r\n     * Creates a new Capsule object.\r\n     * @param radius The radius of the capsule.\r\n     * @param height The height of the capsule.\r\n     * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n     * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n     * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n     */\r\n    function PrimitiveCapsulePrefab(material, elementsType, radius, height, segmentsW, segmentsH, yUp) {\r\n        if (material === void 0) { material = null; }\r\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\r\n        if (radius === void 0) { radius = 50; }\r\n        if (height === void 0) { height = 100; }\r\n        if (segmentsW === void 0) { segmentsW = 16; }\r\n        if (segmentsH === void 0) { segmentsH = 15; }\r\n        if (yUp === void 0) { yUp = true; }\r\n        _super.call(this, material, elementsType);\r\n        this._numVertices = 0;\r\n        this._radius = radius;\r\n        this._height = height;\r\n        this._segmentsW = segmentsW;\r\n        this._segmentsH = (segmentsH % 2 == 0) ? segmentsH + 1 : segmentsH;\r\n        this._yUp = yUp;\r\n    }\r\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"radius\", {\r\n        /**\r\n         * The radius of the capsule.\r\n         */\r\n        get: function () {\r\n            return this._radius;\r\n        },\r\n        set: function (value) {\r\n            this._radius = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"height\", {\r\n        /**\r\n         * The height of the capsule.\r\n         */\r\n        get: function () {\r\n            return this._height;\r\n        },\r\n        set: function (value) {\r\n            this._height = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"segmentsW\", {\r\n        /**\r\n         * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n         */\r\n        get: function () {\r\n            return this._segmentsW;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsW = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"segmentsH\", {\r\n        /**\r\n         * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n         */\r\n        get: function () {\r\n            return this._segmentsH;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsH = (value % 2 == 0) ? value + 1 : value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCapsulePrefab.prototype, \"yUp\", {\r\n        /**\r\n         * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n         */\r\n        get: function () {\r\n            return this._yUp;\r\n        },\r\n        set: function (value) {\r\n            this._yUp = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveCapsulePrefab.prototype._pBuildGraphics = function (target, elementsType) {\r\n        var indices;\r\n        var positions;\r\n        var normals;\r\n        var tangents;\r\n        var stride;\r\n        var i;\r\n        var j;\r\n        var triIndex = 0;\r\n        var index = 0;\r\n        var startIndex;\r\n        var comp1, comp2, t1, t2;\r\n        var numIndices = 0;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleGraphics = target;\r\n            // evaluate target number of vertices, triangles and indices\r\n            this._numVertices = (this._segmentsH + 1) * (this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n            numIndices = (this._segmentsH - 1) * this._segmentsW * 6; // each level has segmentH quads, each of 2 triangles\r\n            // need to initialize raw arrays or can be reused?\r\n            if (this._numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateIndices();\r\n                triangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n            }\r\n            else {\r\n                triangleGraphics.setIndices(new Uint16Array(numIndices));\r\n                triangleGraphics.setPositions(new Float32Array(this._numVertices * 3));\r\n                triangleGraphics.setNormals(new Float32Array(this._numVertices * 3));\r\n                triangleGraphics.setTangents(new Float32Array(this._numVertices * 3));\r\n                this._pInvalidateUVs();\r\n            }\r\n            indices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n            positions = triangleGraphics.positions.get(this._numVertices);\r\n            normals = triangleGraphics.normals.get(this._numVertices);\r\n            tangents = triangleGraphics.tangents.get(this._numVertices);\r\n            stride = triangleGraphics.concatenatedBuffer.stride / 4;\r\n            for (j = 0; j <= this._segmentsH; ++j) {\r\n                var horangle = Math.PI * j / this._segmentsH;\r\n                var z = -this._radius * Math.cos(horangle);\r\n                var ringradius = this._radius * Math.sin(horangle);\r\n                startIndex = index;\r\n                for (i = 0; i <= this._segmentsW; ++i) {\r\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\r\n                    var x = ringradius * Math.cos(verangle);\r\n                    var offset = j > this._segmentsH / 2 ? this._height / 2 : -this._height / 2;\r\n                    var y = ringradius * Math.sin(verangle);\r\n                    var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\r\n                    var tanLen = Math.sqrt(y * y + x * x);\r\n                    if (this._yUp) {\r\n                        t1 = 0;\r\n                        t2 = tanLen > .007 ? x / tanLen : 0;\r\n                        comp1 = -z;\r\n                        comp2 = y;\r\n                    }\r\n                    else {\r\n                        t1 = tanLen > .007 ? x / tanLen : 0;\r\n                        t2 = 0;\r\n                        comp1 = y;\r\n                        comp2 = z;\r\n                    }\r\n                    if (i == this._segmentsW) {\r\n                        positions[index] = positions[startIndex];\r\n                        positions[index + 1] = positions[startIndex + 1];\r\n                        positions[index + 2] = positions[startIndex + 2];\r\n                        normals[index] = (normals[startIndex] + (x * normLen)) * .5;\r\n                        normals[index + 1] = (normals[startIndex + 1] + (comp1 * normLen)) * .5;\r\n                        normals[index + 2] = (normals[startIndex + 2] + (comp2 * normLen)) * .5;\r\n                        tangents[index] = (tangents[startIndex] + (tanLen > .007 ? -y / tanLen : 1)) * .5;\r\n                        tangents[index + 1] = (tangents[startIndex + 1] + t1) * .5;\r\n                        tangents[index + 2] = (tangents[startIndex + 2] + t2) * .5;\r\n                    }\r\n                    else {\r\n                        // vertex\r\n                        positions[index] = x;\r\n                        positions[index + 1] = (this._yUp) ? comp1 - offset : comp1;\r\n                        positions[index + 2] = (this._yUp) ? comp2 : comp2 + offset;\r\n                        // normal\r\n                        normals[index] = x * normLen;\r\n                        normals[index + 1] = comp1 * normLen;\r\n                        normals[index + 2] = comp2 * normLen;\r\n                        // tangent\r\n                        tangents[index] = tanLen > .007 ? -y / tanLen : 1;\r\n                        tangents[index + 1] = t1;\r\n                        tangents[index + 2] = t2;\r\n                    }\r\n                    if (i > 0 && j > 0) {\r\n                        var a = (this._segmentsW + 1) * j + i;\r\n                        var b = (this._segmentsW + 1) * j + i - 1;\r\n                        var c = (this._segmentsW + 1) * (j - 1) + i - 1;\r\n                        var d = (this._segmentsW + 1) * (j - 1) + i;\r\n                        if (j == this._segmentsH) {\r\n                            positions[index] = positions[startIndex];\r\n                            positions[index + 1] = positions[startIndex + 1];\r\n                            positions[index + 2] = positions[startIndex + 2];\r\n                            indices[triIndex++] = a;\r\n                            indices[triIndex++] = c;\r\n                            indices[triIndex++] = d;\r\n                        }\r\n                        else if (j == 1) {\r\n                            indices[triIndex++] = a;\r\n                            indices[triIndex++] = b;\r\n                            indices[triIndex++] = c;\r\n                        }\r\n                        else {\r\n                            indices[triIndex++] = a;\r\n                            indices[triIndex++] = b;\r\n                            indices[triIndex++] = c;\r\n                            indices[triIndex++] = a;\r\n                            indices[triIndex++] = c;\r\n                            indices[triIndex++] = d;\r\n                        }\r\n                    }\r\n                    index += stride;\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveCapsulePrefab.prototype._pBuildUVs = function (target, elementsType) {\r\n        var i, j;\r\n        var uvs;\r\n        var stride;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleGraphics = target;\r\n            // need to initialize raw array or can be reused?\r\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n            }\r\n            else {\r\n                triangleGraphics.setUVs(new Float32Array(this._numVertices * 2));\r\n            }\r\n            uvs = triangleGraphics.uvs.get(this._numVertices);\r\n            stride = triangleGraphics.uvs.stride;\r\n            // current uv component index\r\n            var index = 0;\r\n            // surface\r\n            for (j = 0; j <= this._segmentsH; ++j) {\r\n                for (i = 0; i <= this._segmentsW; ++i) {\r\n                    // revolution vertex\r\n                    uvs[index] = (i / this._segmentsW) * this._scaleU;\r\n                    uvs[index + 1] = (j / this._segmentsH) * this._scaleV;\r\n                    index += stride;\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n        }\r\n    };\r\n    return PrimitiveCapsulePrefab;\r\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\r\nexports.PrimitiveCapsulePrefab = PrimitiveCapsulePrefab;\r\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveConePrefab\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar PrimitiveCylinderPrefab_1 = require(\"../prefabs/PrimitiveCylinderPrefab\");\r\n/**\r\n * A UV Cone primitive sprite.\r\n */\r\nvar PrimitiveConePrefab = (function (_super) {\r\n    __extends(PrimitiveConePrefab, _super);\r\n    /**\r\n     * Creates a new Cone object.\r\n     * @param radius The radius of the bottom end of the cone\r\n     * @param height The height of the cone\r\n     * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n     * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n     * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n     */\r\n    function PrimitiveConePrefab(material, elementsType, radius, height, segmentsW, segmentsH, closed, yUp) {\r\n        if (material === void 0) { material = null; }\r\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\r\n        if (radius === void 0) { radius = 50; }\r\n        if (height === void 0) { height = 100; }\r\n        if (segmentsW === void 0) { segmentsW = 16; }\r\n        if (segmentsH === void 0) { segmentsH = 1; }\r\n        if (closed === void 0) { closed = true; }\r\n        if (yUp === void 0) { yUp = true; }\r\n        _super.call(this, material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n    }\r\n    Object.defineProperty(PrimitiveConePrefab.prototype, \"radius\", {\r\n        /**\r\n         * The radius of the bottom end of the cone.\r\n         */\r\n        get: function () {\r\n            return this._pBottomRadius;\r\n        },\r\n        set: function (value) {\r\n            this._pBottomRadius = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PrimitiveConePrefab;\r\n}(PrimitiveCylinderPrefab_1.PrimitiveCylinderPrefab));\r\nexports.PrimitiveConePrefab = PrimitiveConePrefab;\r\n},{\"../prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\"}],\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\r\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nvar PrimitiveCubePrefab = (function (_super) {\r\n    __extends(PrimitiveCubePrefab, _super);\r\n    /**\r\n     * Creates a new Cube object.\r\n     * @param width The size of the cube along its X-axis.\r\n     * @param height The size of the cube along its Y-axis.\r\n     * @param depth The size of the cube along its Z-axis.\r\n     * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n     * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n     * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n     * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n     */\r\n    function PrimitiveCubePrefab(material, elementsType, width, height, depth, segmentsW, segmentsH, segmentsD, tile6) {\r\n        if (material === void 0) { material = null; }\r\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\r\n        if (width === void 0) { width = 100; }\r\n        if (height === void 0) { height = 100; }\r\n        if (depth === void 0) { depth = 100; }\r\n        if (segmentsW === void 0) { segmentsW = 1; }\r\n        if (segmentsH === void 0) { segmentsH = 1; }\r\n        if (segmentsD === void 0) { segmentsD = 1; }\r\n        if (tile6 === void 0) { tile6 = true; }\r\n        _super.call(this, material, elementsType);\r\n        this._width = width;\r\n        this._height = height;\r\n        this._depth = depth;\r\n        this._segmentsW = segmentsW;\r\n        this._segmentsH = segmentsH;\r\n        this._segmentsD = segmentsD;\r\n        this._tile6 = tile6;\r\n    }\r\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"width\", {\r\n        /**\r\n         * The size of the cube along its X-axis.\r\n         */\r\n        get: function () {\r\n            return this._width;\r\n        },\r\n        set: function (value) {\r\n            this._width = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"height\", {\r\n        /**\r\n         * The size of the cube along its Y-axis.\r\n         */\r\n        get: function () {\r\n            return this._height;\r\n        },\r\n        set: function (value) {\r\n            this._height = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"depth\", {\r\n        /**\r\n         * The size of the cube along its Z-axis.\r\n         */\r\n        get: function () {\r\n            return this._depth;\r\n        },\r\n        set: function (value) {\r\n            this._depth = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"tile6\", {\r\n        /**\r\n         * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n         * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n         * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n         * cube in the following order: bottom, top, back, left, front, right. This creates\r\n         * several shared edges (between the top, front, left and right faces) which simplifies\r\n         * texture painting.\r\n         */\r\n        get: function () {\r\n            return this._tile6;\r\n        },\r\n        set: function (value) {\r\n            this._tile6 = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsW\", {\r\n        /**\r\n         * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n         */\r\n        get: function () {\r\n            return this._segmentsW;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsW = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsH\", {\r\n        /**\r\n         * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n         */\r\n        get: function () {\r\n            return this._segmentsH;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsH = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCubePrefab.prototype, \"segmentsD\", {\r\n        /**\r\n         * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n         */\r\n        get: function () {\r\n            return this._segmentsD;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsD = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveCubePrefab.prototype._pBuildGraphics = function (target, elementsType) {\r\n        var indices;\r\n        var positions;\r\n        var normals;\r\n        var tangents;\r\n        var stride;\r\n        var tl, tr, bl, br;\r\n        var i, j, inc = 0;\r\n        var vidx, fidx; // indices\r\n        var hw, hh, hd; // halves\r\n        var dw, dh, dd; // deltas\r\n        var outer_pos;\r\n        // half cube dimensions\r\n        hw = this._width / 2;\r\n        hh = this._height / 2;\r\n        hd = this._depth / 2;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleGraphics = target;\r\n            var numVertices = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2;\r\n            var numIndices = ((this._segmentsW * this._segmentsH + this._segmentsW * this._segmentsD + this._segmentsH * this._segmentsD) * 12);\r\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\r\n                triangleGraphics.invalidateIndices();\r\n                triangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n            }\r\n            else {\r\n                triangleGraphics.setIndices(new Uint16Array(numIndices));\r\n                triangleGraphics.setPositions(new Float32Array(numVertices * 3));\r\n                triangleGraphics.setNormals(new Float32Array(numVertices * 3));\r\n                triangleGraphics.setTangents(new Float32Array(numVertices * 3));\r\n                this._pInvalidateUVs();\r\n            }\r\n            indices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n            positions = triangleGraphics.positions.get(numVertices);\r\n            normals = triangleGraphics.normals.get(numVertices);\r\n            tangents = triangleGraphics.tangents.get(numVertices);\r\n            stride = triangleGraphics.concatenatedBuffer.stride / 4;\r\n            vidx = 0;\r\n            fidx = 0;\r\n            // Segment dimensions\r\n            dw = this._width / this._segmentsW;\r\n            dh = this._height / this._segmentsH;\r\n            dd = this._depth / this._segmentsD;\r\n            for (i = 0; i <= this._segmentsW; i++) {\r\n                outer_pos = -hw + i * dw;\r\n                for (j = 0; j <= this._segmentsH; j++) {\r\n                    // front\r\n                    positions[vidx] = outer_pos;\r\n                    positions[vidx + 1] = -hh + j * dh;\r\n                    positions[vidx + 2] = -hd;\r\n                    normals[vidx] = 0;\r\n                    normals[vidx + 1] = 0;\r\n                    normals[vidx + 2] = -1;\r\n                    tangents[vidx] = 1;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = 0;\r\n                    vidx += stride;\r\n                    // back\r\n                    positions[vidx] = outer_pos;\r\n                    positions[vidx + 1] = -hh + j * dh;\r\n                    positions[vidx + 2] = hd;\r\n                    normals[vidx] = 0;\r\n                    normals[vidx + 1] = 0;\r\n                    normals[vidx + 2] = 1;\r\n                    tangents[vidx] = -1;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = 0;\r\n                    vidx += stride;\r\n                    if (i && j) {\r\n                        tl = 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1));\r\n                        tr = 2 * (i * (this._segmentsH + 1) + (j - 1));\r\n                        bl = tl + 2;\r\n                        br = tr + 2;\r\n                        indices[fidx++] = tl;\r\n                        indices[fidx++] = bl;\r\n                        indices[fidx++] = br;\r\n                        indices[fidx++] = tl;\r\n                        indices[fidx++] = br;\r\n                        indices[fidx++] = tr;\r\n                        indices[fidx++] = tr + 1;\r\n                        indices[fidx++] = br + 1;\r\n                        indices[fidx++] = bl + 1;\r\n                        indices[fidx++] = tr + 1;\r\n                        indices[fidx++] = bl + 1;\r\n                        indices[fidx++] = tl + 1;\r\n                    }\r\n                }\r\n            }\r\n            inc += 2 * (this._segmentsW + 1) * (this._segmentsH + 1);\r\n            for (i = 0; i <= this._segmentsW; i++) {\r\n                outer_pos = -hw + i * dw;\r\n                for (j = 0; j <= this._segmentsD; j++) {\r\n                    // top\r\n                    positions[vidx] = outer_pos;\r\n                    positions[vidx + 1] = hh;\r\n                    positions[vidx + 2] = -hd + j * dd;\r\n                    normals[vidx] = 0;\r\n                    normals[vidx + 1] = 1;\r\n                    normals[vidx + 2] = 0;\r\n                    tangents[vidx] = 1;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = 0;\r\n                    vidx += stride;\r\n                    // bottom\r\n                    positions[vidx] = outer_pos;\r\n                    positions[vidx + 1] = -hh;\r\n                    positions[vidx + 2] = -hd + j * dd;\r\n                    normals[vidx] = 0;\r\n                    normals[vidx + 1] = -1;\r\n                    normals[vidx + 2] = 0;\r\n                    tangents[vidx] = 1;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = 0;\r\n                    vidx += stride;\r\n                    if (i && j) {\r\n                        tl = inc + 2 * ((i - 1) * (this._segmentsD + 1) + (j - 1));\r\n                        tr = inc + 2 * (i * (this._segmentsD + 1) + (j - 1));\r\n                        bl = tl + 2;\r\n                        br = tr + 2;\r\n                        indices[fidx++] = tl;\r\n                        indices[fidx++] = bl;\r\n                        indices[fidx++] = br;\r\n                        indices[fidx++] = tl;\r\n                        indices[fidx++] = br;\r\n                        indices[fidx++] = tr;\r\n                        indices[fidx++] = tr + 1;\r\n                        indices[fidx++] = br + 1;\r\n                        indices[fidx++] = bl + 1;\r\n                        indices[fidx++] = tr + 1;\r\n                        indices[fidx++] = bl + 1;\r\n                        indices[fidx++] = tl + 1;\r\n                    }\r\n                }\r\n            }\r\n            inc += 2 * (this._segmentsW + 1) * (this._segmentsD + 1);\r\n            for (i = 0; i <= this._segmentsD; i++) {\r\n                outer_pos = hd - i * dd;\r\n                for (j = 0; j <= this._segmentsH; j++) {\r\n                    // left\r\n                    positions[vidx] = -hw;\r\n                    positions[vidx + 1] = -hh + j * dh;\r\n                    positions[vidx + 2] = outer_pos;\r\n                    normals[vidx] = -1;\r\n                    normals[vidx + 1] = 0;\r\n                    normals[vidx + 2] = 0;\r\n                    tangents[vidx] = 0;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = -1;\r\n                    vidx += stride;\r\n                    // right\r\n                    positions[vidx] = hw;\r\n                    positions[vidx + 1] = -hh + j * dh;\r\n                    positions[vidx + 2] = outer_pos;\r\n                    normals[vidx] = 1;\r\n                    normals[vidx + 1] = 0;\r\n                    normals[vidx + 2] = 0;\r\n                    tangents[vidx] = 0;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = 1;\r\n                    vidx += stride;\r\n                    if (i && j) {\r\n                        tl = inc + 2 * ((i - 1) * (this._segmentsH + 1) + (j - 1));\r\n                        tr = inc + 2 * (i * (this._segmentsH + 1) + (j - 1));\r\n                        bl = tl + 2;\r\n                        br = tr + 2;\r\n                        indices[fidx++] = tl;\r\n                        indices[fidx++] = bl;\r\n                        indices[fidx++] = br;\r\n                        indices[fidx++] = tl;\r\n                        indices[fidx++] = br;\r\n                        indices[fidx++] = tr;\r\n                        indices[fidx++] = tr + 1;\r\n                        indices[fidx++] = br + 1;\r\n                        indices[fidx++] = bl + 1;\r\n                        indices[fidx++] = tr + 1;\r\n                        indices[fidx++] = bl + 1;\r\n                        indices[fidx++] = tl + 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n            var lineGraphics = target;\r\n            var numSegments = this._segmentsH * 4 + this._segmentsW * 4 + this._segmentsD * 4;\r\n            var thickness;\r\n            positions = new Float32Array(numSegments * 6);\r\n            thickness = new Float32Array(numSegments);\r\n            vidx = 0;\r\n            fidx = 0;\r\n            //front/back face\r\n            for (i = 0; i < this._segmentsH; ++i) {\r\n                positions[vidx++] = -hw;\r\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\r\n                positions[vidx++] = -hd;\r\n                positions[vidx++] = hw;\r\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\r\n                positions[vidx++] = -hd;\r\n                thickness[fidx++] = 1;\r\n                positions[vidx++] = -hw;\r\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\r\n                positions[vidx++] = hd;\r\n                positions[vidx++] = hw;\r\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\r\n                positions[vidx++] = hd;\r\n                thickness[fidx++] = 1;\r\n            }\r\n            for (i = 0; i < this._segmentsW; ++i) {\r\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\r\n                positions[vidx++] = -hh;\r\n                positions[vidx++] = -hd;\r\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\r\n                positions[vidx++] = hh;\r\n                positions[vidx++] = -hd;\r\n                thickness[fidx++] = 1;\r\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\r\n                positions[vidx++] = -hh;\r\n                positions[vidx++] = hd;\r\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\r\n                positions[vidx++] = hh;\r\n                positions[vidx++] = hd;\r\n                thickness[fidx++] = 1;\r\n            }\r\n            //left/right face\r\n            for (i = 0; i < this._segmentsH; ++i) {\r\n                positions[vidx++] = -hw;\r\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\r\n                positions[vidx++] = -hd;\r\n                positions[vidx++] = -hw;\r\n                positions[vidx++] = i * this._height / this._segmentsH - hh;\r\n                positions[vidx++] = hd;\r\n                thickness[fidx++] = 1;\r\n                positions[vidx++] = hw;\r\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\r\n                positions[vidx++] = -hd;\r\n                positions[vidx++] = hw;\r\n                positions[vidx++] = hh - i * this._height / this._segmentsH;\r\n                positions[vidx++] = hd;\r\n                thickness[fidx++] = 1;\r\n            }\r\n            for (i = 0; i < this._segmentsD; ++i) {\r\n                positions[vidx++] = hw;\r\n                positions[vidx++] = -hh;\r\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\r\n                positions[vidx++] = hw;\r\n                positions[vidx++] = hh;\r\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\r\n                thickness[fidx++] = 1;\r\n                positions[vidx++] = -hw;\r\n                positions[vidx++] = -hh;\r\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\r\n                positions[vidx++] = -hw;\r\n                positions[vidx++] = hh;\r\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\r\n                thickness[fidx++] = 1;\r\n            }\r\n            //top/bottom face\r\n            for (i = 0; i < this._segmentsD; ++i) {\r\n                positions[vidx++] = -hw;\r\n                positions[vidx++] = -hh;\r\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\r\n                positions[vidx++] = hw;\r\n                positions[vidx++] = -hh;\r\n                positions[vidx++] = hd - i * this._depth / this._segmentsD;\r\n                thickness[fidx++] = 1;\r\n                positions[vidx++] = -hw;\r\n                positions[vidx++] = hh;\r\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\r\n                positions[vidx++] = hw;\r\n                positions[vidx++] = hh;\r\n                positions[vidx++] = i * this._depth / this._segmentsD - hd;\r\n                thickness[fidx++] = 1;\r\n            }\r\n            for (i = 0; i < this._segmentsW; ++i) {\r\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\r\n                positions[vidx++] = -hh;\r\n                positions[vidx++] = -hd;\r\n                positions[vidx++] = hw - i * this._width / this._segmentsW;\r\n                positions[vidx++] = -hh;\r\n                positions[vidx++] = hd;\r\n                thickness[fidx++] = 1;\r\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\r\n                positions[vidx++] = hh;\r\n                positions[vidx++] = -hd;\r\n                positions[vidx++] = i * this._width / this._segmentsW - hw;\r\n                positions[vidx++] = hh;\r\n                positions[vidx++] = hd;\r\n                thickness[fidx++] = 1;\r\n            }\r\n            // build real data from raw data\r\n            lineGraphics.setPositions(positions);\r\n            lineGraphics.setThickness(thickness);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveCubePrefab.prototype._pBuildUVs = function (target, elementsType) {\r\n        var i, j, index;\r\n        var uvs;\r\n        var stride;\r\n        var u_tile_dim, v_tile_dim;\r\n        var u_tile_step, v_tile_step;\r\n        var tl0u, tl0v;\r\n        var tl1u, tl1v;\r\n        var du, dv;\r\n        var numVertices;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            numVertices = ((this._segmentsW + 1) * (this._segmentsH + 1) + (this._segmentsW + 1) * (this._segmentsD + 1) + (this._segmentsH + 1) * (this._segmentsD + 1)) * 2;\r\n            var triangleGraphics = target;\r\n            if (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n            }\r\n            else {\r\n                triangleGraphics.setUVs(new Float32Array(numVertices * 2));\r\n            }\r\n            uvs = triangleGraphics.uvs.get(numVertices);\r\n            stride = triangleGraphics.uvs.stride;\r\n            if (this._tile6) {\r\n                u_tile_dim = u_tile_step = 1 / 3;\r\n                v_tile_dim = v_tile_step = 1 / 2;\r\n            }\r\n            else {\r\n                u_tile_dim = v_tile_dim = 1;\r\n                u_tile_step = v_tile_step = 0;\r\n            }\r\n            // Create planes two and two, the same way that they were\r\n            // constructed in the buildGraphics() function. First calculate\r\n            // the top-left UV coordinate for both planes, and then loop\r\n            // over the points, calculating the UVs from these numbers.\r\n            // When tile6 is true, the layout is as follows:\r\n            //       .-----.-----.-----. (1,1)\r\n            //       | Bot |  T  | Bak |\r\n            //       |-----+-----+-----|\r\n            //       |  L  |  F  |  R  |\r\n            // (0,0)'-----'-----'-----'\r\n            index = 0;\r\n            // FRONT / BACK\r\n            tl0u = 1 * u_tile_step;\r\n            tl0v = 1 * v_tile_step;\r\n            tl1u = 2 * u_tile_step;\r\n            tl1v = 0 * v_tile_step;\r\n            du = u_tile_dim / this._segmentsW;\r\n            dv = v_tile_dim / this._segmentsH;\r\n            for (i = 0; i <= this._segmentsW; i++) {\r\n                for (j = 0; j <= this._segmentsH; j++) {\r\n                    uvs[index] = (tl0u + i * du) * this._scaleU;\r\n                    uvs[index + 1] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\r\n                    index += stride;\r\n                    uvs[index] = (tl1u + (u_tile_dim - i * du)) * this._scaleU;\r\n                    uvs[index + 1] = (tl1v + (v_tile_dim - j * dv)) * this._scaleV;\r\n                    index += stride;\r\n                }\r\n            }\r\n            // TOP / BOTTOM\r\n            tl0u = 1 * u_tile_step;\r\n            tl0v = 0 * v_tile_step;\r\n            tl1u = 0 * u_tile_step;\r\n            tl1v = 0 * v_tile_step;\r\n            du = u_tile_dim / this._segmentsW;\r\n            dv = v_tile_dim / this._segmentsD;\r\n            for (i = 0; i <= this._segmentsW; i++) {\r\n                for (j = 0; j <= this._segmentsD; j++) {\r\n                    uvs[index] = (tl0u + i * du) * this._scaleU;\r\n                    uvs[index + 1] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\r\n                    index += stride;\r\n                    uvs[index] = (tl1u + i * du) * this._scaleU;\r\n                    uvs[index + 1] = (tl1v + j * dv) * this._scaleV;\r\n                    index += stride;\r\n                }\r\n            }\r\n            // LEFT / RIGHT\r\n            tl0u = 0 * u_tile_step;\r\n            tl0v = 1 * v_tile_step;\r\n            tl1u = 2 * u_tile_step;\r\n            tl1v = 1 * v_tile_step;\r\n            du = u_tile_dim / this._segmentsD;\r\n            dv = v_tile_dim / this._segmentsH;\r\n            for (i = 0; i <= this._segmentsD; i++) {\r\n                for (j = 0; j <= this._segmentsH; j++) {\r\n                    uvs[index] = (tl0u + i * du) * this._scaleU;\r\n                    uvs[index + 1] = (tl0v + (v_tile_dim - j * dv)) * this._scaleV;\r\n                    index += stride;\r\n                    uvs[index] = (tl1u + (u_tile_dim - i * du)) * this._scaleU;\r\n                    uvs[index + 1] = (tl1v + (v_tile_dim - j * dv)) * this._scaleV;\r\n                    index += stride;\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n        }\r\n    };\r\n    return PrimitiveCubePrefab;\r\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\r\nexports.PrimitiveCubePrefab = PrimitiveCubePrefab;\r\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\r\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\r\n/**\r\n * A Cylinder primitive sprite.\r\n */\r\nvar PrimitiveCylinderPrefab = (function (_super) {\r\n    __extends(PrimitiveCylinderPrefab, _super);\r\n    /**\r\n     * Creates a new Cylinder object.\r\n     * @param topRadius The radius of the top end of the cylinder.\r\n     * @param bottomRadius The radius of the bottom end of the cylinder\r\n     * @param height The radius of the bottom end of the cylinder\r\n     * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n     * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n     * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n     * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n     * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n     */\r\n    function PrimitiveCylinderPrefab(material, elementsType, topRadius, bottomRadius, height, segmentsW, segmentsH, topClosed, bottomClosed, surfaceClosed, yUp) {\r\n        if (material === void 0) { material = null; }\r\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\r\n        if (topRadius === void 0) { topRadius = 50; }\r\n        if (bottomRadius === void 0) { bottomRadius = 50; }\r\n        if (height === void 0) { height = 100; }\r\n        if (segmentsW === void 0) { segmentsW = 16; }\r\n        if (segmentsH === void 0) { segmentsH = 1; }\r\n        if (topClosed === void 0) { topClosed = true; }\r\n        if (bottomClosed === void 0) { bottomClosed = true; }\r\n        if (surfaceClosed === void 0) { surfaceClosed = true; }\r\n        if (yUp === void 0) { yUp = true; }\r\n        _super.call(this, material, elementsType);\r\n        this._numVertices = 0;\r\n        this._topRadius = topRadius;\r\n        this._pBottomRadius = bottomRadius;\r\n        this._height = height;\r\n        this._pSegmentsW = segmentsW;\r\n        this._pSegmentsH = segmentsH;\r\n        this._topClosed = topClosed;\r\n        this._bottomClosed = bottomClosed;\r\n        this._surfaceClosed = surfaceClosed;\r\n        this._yUp = yUp;\r\n    }\r\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"topRadius\", {\r\n        /**\r\n         * The radius of the top end of the cylinder.\r\n         */\r\n        get: function () {\r\n            return this._topRadius;\r\n        },\r\n        set: function (value) {\r\n            this._topRadius = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"bottomRadius\", {\r\n        /**\r\n         * The radius of the bottom end of the cylinder.\r\n         */\r\n        get: function () {\r\n            return this._pBottomRadius;\r\n        },\r\n        set: function (value) {\r\n            this._pBottomRadius = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"height\", {\r\n        /**\r\n         * The radius of the top end of the cylinder.\r\n         */\r\n        get: function () {\r\n            return this._height;\r\n        },\r\n        set: function (value) {\r\n            this._height = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"segmentsW\", {\r\n        /**\r\n         * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n         */\r\n        get: function () {\r\n            return this._pSegmentsW;\r\n        },\r\n        set: function (value) {\r\n            this.setSegmentsW(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PrimitiveCylinderPrefab.prototype.setSegmentsW = function (value) {\r\n        this._pSegmentsW = value;\r\n        this._pInvalidatePrimitive();\r\n        this._pInvalidateUVs();\r\n    };\r\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"segmentsH\", {\r\n        /**\r\n         * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n         */\r\n        get: function () {\r\n            return this._pSegmentsH;\r\n        },\r\n        set: function (value) {\r\n            this.setSegmentsH(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PrimitiveCylinderPrefab.prototype.setSegmentsH = function (value) {\r\n        this._pSegmentsH = value;\r\n        this._pInvalidatePrimitive();\r\n        this._pInvalidateUVs();\r\n    };\r\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"topClosed\", {\r\n        /**\r\n         * Defines whether the top end of the cylinder is closed (true) or open.\r\n         */\r\n        get: function () {\r\n            return this._topClosed;\r\n        },\r\n        set: function (value) {\r\n            this._topClosed = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"bottomClosed\", {\r\n        /**\r\n         * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n         */\r\n        get: function () {\r\n            return this._bottomClosed;\r\n        },\r\n        set: function (value) {\r\n            this._bottomClosed = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveCylinderPrefab.prototype, \"yUp\", {\r\n        /**\r\n         * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n         */\r\n        get: function () {\r\n            return this._yUp;\r\n        },\r\n        set: function (value) {\r\n            this._yUp = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveCylinderPrefab.prototype._pBuildGraphics = function (target, elementsType) {\r\n        var indices;\r\n        var positions;\r\n        var normals;\r\n        var tangents;\r\n        var stride;\r\n        var i;\r\n        var j;\r\n        var x;\r\n        var y;\r\n        var z;\r\n        var vidx;\r\n        var fidx;\r\n        var radius;\r\n        var revolutionAngle;\r\n        var dr;\r\n        var latNormElev;\r\n        var latNormBase;\r\n        var numIndices = 0;\r\n        var comp1;\r\n        var comp2;\r\n        var startIndex = 0;\r\n        var nextVertexIndex = 0;\r\n        var centerVertexIndex = 0;\r\n        var t1;\r\n        var t2;\r\n        // reset utility variables\r\n        this._numVertices = 0;\r\n        // evaluate revolution steps\r\n        var revolutionAngleDelta = 2 * Math.PI / this._pSegmentsW;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleGraphics = target;\r\n            // evaluate target number of vertices, triangles and indices\r\n            if (this._surfaceClosed) {\r\n                this._numVertices += (this._pSegmentsH + 1) * (this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n                numIndices += this._pSegmentsH * this._pSegmentsW * 6; // each level has segmentW quads, each of 2 triangles\r\n            }\r\n            if (this._topClosed) {\r\n                this._numVertices += 2 * (this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n                numIndices += this._pSegmentsW * 3; // one triangle for each segment\r\n            }\r\n            if (this._bottomClosed) {\r\n                this._numVertices += 2 * (this._pSegmentsW + 1);\r\n                numIndices += this._pSegmentsW * 3;\r\n            }\r\n            // need to initialize raw arrays or can be reused?\r\n            if (this._numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateIndices();\r\n                triangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n            }\r\n            else {\r\n                triangleGraphics.setIndices(new Uint16Array(numIndices));\r\n                triangleGraphics.setPositions(new Float32Array(this._numVertices * 3));\r\n                triangleGraphics.setNormals(new Float32Array(this._numVertices * 3));\r\n                triangleGraphics.setTangents(new Float32Array(this._numVertices * 3));\r\n                this._pInvalidateUVs();\r\n            }\r\n            indices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n            positions = triangleGraphics.positions.get(this._numVertices);\r\n            normals = triangleGraphics.normals.get(this._numVertices);\r\n            tangents = triangleGraphics.tangents.get(this._numVertices);\r\n            stride = triangleGraphics.concatenatedBuffer.stride / 4;\r\n            vidx = 0;\r\n            fidx = 0;\r\n            // top\r\n            if (this._topClosed && this._topRadius > 0) {\r\n                z = -0.5 * this._height;\r\n                // central vertex\r\n                if (this._yUp) {\r\n                    t1 = 1;\r\n                    t2 = 0;\r\n                    comp1 = -z;\r\n                    comp2 = 0;\r\n                }\r\n                else {\r\n                    t1 = 0;\r\n                    t2 = -1;\r\n                    comp1 = 0;\r\n                    comp2 = z;\r\n                }\r\n                positions[vidx] = 0;\r\n                positions[vidx + 1] = comp1;\r\n                positions[vidx + 2] = comp2;\r\n                normals[vidx] = 0;\r\n                normals[vidx + 1] = t1;\r\n                normals[vidx + 2] = t2;\r\n                tangents[vidx] = 1;\r\n                tangents[vidx + 1] = 0;\r\n                tangents[vidx + 2] = 0;\r\n                vidx += stride;\r\n                nextVertexIndex++;\r\n                for (i = 0; i <= this._pSegmentsW; ++i) {\r\n                    // revolution vertex\r\n                    revolutionAngle = i * revolutionAngleDelta;\r\n                    x = this._topRadius * Math.cos(revolutionAngle);\r\n                    y = this._topRadius * Math.sin(revolutionAngle);\r\n                    if (this._yUp) {\r\n                        comp1 = -z;\r\n                        comp2 = y;\r\n                    }\r\n                    else {\r\n                        comp1 = y;\r\n                        comp2 = z;\r\n                    }\r\n                    if (i == this._pSegmentsW) {\r\n                        positions[vidx] = positions[startIndex + stride];\r\n                        positions[vidx + 1] = positions[startIndex + stride + 1];\r\n                        positions[vidx + 2] = positions[startIndex + stride + 2];\r\n                    }\r\n                    else {\r\n                        positions[vidx] = x;\r\n                        positions[vidx + 1] = comp1;\r\n                        positions[vidx + 2] = comp2;\r\n                    }\r\n                    normals[vidx] = 0;\r\n                    normals[vidx + 1] = t1;\r\n                    normals[vidx + 2] = t2;\r\n                    tangents[vidx] = 1;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = 0;\r\n                    vidx += stride;\r\n                    if (i > 0) {\r\n                        // add triangle\r\n                        indices[fidx++] = nextVertexIndex - 1;\r\n                        indices[fidx++] = centerVertexIndex;\r\n                        indices[fidx++] = nextVertexIndex;\r\n                    }\r\n                    nextVertexIndex++;\r\n                }\r\n            }\r\n            // bottom\r\n            if (this._bottomClosed && this._pBottomRadius > 0) {\r\n                z = 0.5 * this._height;\r\n                startIndex = nextVertexIndex * stride;\r\n                centerVertexIndex = nextVertexIndex;\r\n                // central vertex\r\n                if (this._yUp) {\r\n                    t1 = -1;\r\n                    t2 = 0;\r\n                    comp1 = -z;\r\n                    comp2 = 0;\r\n                }\r\n                else {\r\n                    t1 = 0;\r\n                    t2 = 1;\r\n                    comp1 = 0;\r\n                    comp2 = z;\r\n                }\r\n                if (i > 0) {\r\n                    positions[vidx] = 0;\r\n                    positions[vidx + 1] = comp1;\r\n                    positions[vidx + 2] = comp2;\r\n                    normals[vidx] = 0;\r\n                    normals[vidx + 1] = t1;\r\n                    normals[vidx + 2] = t2;\r\n                    tangents[vidx] = 1;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = 0;\r\n                    vidx += stride;\r\n                }\r\n                nextVertexIndex++;\r\n                for (i = 0; i <= this._pSegmentsW; ++i) {\r\n                    // revolution vertex\r\n                    revolutionAngle = i * revolutionAngleDelta;\r\n                    x = this._pBottomRadius * Math.cos(revolutionAngle);\r\n                    y = this._pBottomRadius * Math.sin(revolutionAngle);\r\n                    if (this._yUp) {\r\n                        comp1 = -z;\r\n                        comp2 = y;\r\n                    }\r\n                    else {\r\n                        comp1 = y;\r\n                        comp2 = z;\r\n                    }\r\n                    if (i == this._pSegmentsW) {\r\n                        positions[vidx] = positions[startIndex + stride];\r\n                        positions[vidx + 1] = positions[startIndex + stride + 1];\r\n                        positions[vidx + 2] = positions[startIndex + stride + 2];\r\n                    }\r\n                    else {\r\n                        positions[vidx] = x;\r\n                        positions[vidx + 1] = comp1;\r\n                        positions[vidx + 2] = comp2;\r\n                    }\r\n                    normals[vidx] = 0;\r\n                    normals[vidx + 1] = t1;\r\n                    normals[vidx + 2] = t2;\r\n                    tangents[vidx] = 1;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = 0;\r\n                    vidx += stride;\r\n                    if (i > 0) {\r\n                        // add triangle\r\n                        indices[fidx++] = nextVertexIndex - 1;\r\n                        indices[fidx++] = nextVertexIndex;\r\n                        indices[fidx++] = centerVertexIndex;\r\n                    }\r\n                    nextVertexIndex++;\r\n                }\r\n            }\r\n            // The normals on the lateral surface all have the same incline, i.e.\r\n            // the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n            // Same principle goes for the \"base\" of these vectors, which will be\r\n            // calculated such that a vector [base,elev] will be a unit vector.\r\n            dr = (this._pBottomRadius - this._topRadius);\r\n            latNormElev = dr / this._height;\r\n            latNormBase = (latNormElev == 0) ? 1 : this._height / dr;\r\n            // lateral surface\r\n            if (this._surfaceClosed) {\r\n                var a;\r\n                var b;\r\n                var c;\r\n                var d;\r\n                var na0, na1, naComp1, naComp2;\r\n                for (j = 0; j <= this._pSegmentsH; ++j) {\r\n                    radius = this._topRadius - ((j / this._pSegmentsH) * (this._topRadius - this._pBottomRadius));\r\n                    z = -(this._height / 2) + (j / this._pSegmentsH * this._height);\r\n                    startIndex = nextVertexIndex * stride;\r\n                    for (i = 0; i <= this._pSegmentsW; ++i) {\r\n                        // revolution vertex\r\n                        revolutionAngle = i * revolutionAngleDelta;\r\n                        x = radius * Math.cos(revolutionAngle);\r\n                        y = radius * Math.sin(revolutionAngle);\r\n                        na0 = latNormBase * Math.cos(revolutionAngle);\r\n                        na1 = latNormBase * Math.sin(revolutionAngle);\r\n                        if (this._yUp) {\r\n                            t1 = 0;\r\n                            t2 = -na0;\r\n                            comp1 = -z;\r\n                            comp2 = y;\r\n                            naComp1 = latNormElev;\r\n                            naComp2 = na1;\r\n                        }\r\n                        else {\r\n                            t1 = -na0;\r\n                            t2 = 0;\r\n                            comp1 = y;\r\n                            comp2 = z;\r\n                            naComp1 = na1;\r\n                            naComp2 = latNormElev;\r\n                        }\r\n                        if (i == this._pSegmentsW) {\r\n                            positions[vidx] = positions[startIndex];\r\n                            positions[vidx + 1] = positions[startIndex + 1];\r\n                            positions[vidx + 2] = positions[startIndex + 2];\r\n                            normals[vidx] = na0;\r\n                            normals[vidx + 1] = latNormElev;\r\n                            normals[vidx + 2] = na1;\r\n                            tangents[vidx] = na1;\r\n                            tangents[vidx + 1] = t1;\r\n                            tangents[vidx + 2] = t2;\r\n                        }\r\n                        else {\r\n                            positions[vidx] = x;\r\n                            positions[vidx + 1] = comp1;\r\n                            positions[vidx + 2] = comp2;\r\n                            normals[vidx] = na0;\r\n                            normals[vidx + 1] = naComp1;\r\n                            normals[vidx + 2] = naComp2;\r\n                            tangents[vidx] = -na1;\r\n                            tangents[vidx + 1] = t1;\r\n                            tangents[vidx + 2] = t2;\r\n                        }\r\n                        vidx += stride;\r\n                        // close triangle\r\n                        if (i > 0 && j > 0) {\r\n                            a = nextVertexIndex; // current\r\n                            b = nextVertexIndex - 1; // previous\r\n                            c = b - this._pSegmentsW - 1; // previous of last level\r\n                            d = a - this._pSegmentsW - 1; // current of last level\r\n                            indices[fidx++] = a;\r\n                            indices[fidx++] = b;\r\n                            indices[fidx++] = c;\r\n                            indices[fidx++] = a;\r\n                            indices[fidx++] = c;\r\n                            indices[fidx++] = d;\r\n                        }\r\n                        nextVertexIndex++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n            var lineGraphics = target;\r\n            var numSegments = this._pSegmentsH * this._pSegmentsW * 2 + this._pSegmentsW;\r\n            positions = new Float32Array(numSegments * 6);\r\n            var thickness = new Float32Array(numSegments);\r\n            vidx = 0;\r\n            fidx = 0;\r\n            var _radius = 50;\r\n            for (j = 0; j <= this._pSegmentsH; ++j) {\r\n                radius = this._topRadius - ((j / this._pSegmentsH) * (this._topRadius - this._pBottomRadius));\r\n                z = -(this._height / 2) + (j / this._pSegmentsH * this._height);\r\n                for (i = 0; i <= this._pSegmentsW; ++i) {\r\n                    // revolution vertex\r\n                    revolutionAngle = i * revolutionAngleDelta;\r\n                    x = radius * Math.cos(revolutionAngle);\r\n                    y = radius * Math.sin(revolutionAngle);\r\n                    if (this._yUp) {\r\n                        comp1 = -z;\r\n                        comp2 = y;\r\n                    }\r\n                    else {\r\n                        comp1 = y;\r\n                        comp2 = z;\r\n                    }\r\n                    if (i > 0) {\r\n                        //horizonal lines\r\n                        positions[vidx++] = x;\r\n                        positions[vidx++] = comp1;\r\n                        positions[vidx++] = comp2;\r\n                        thickness[fidx++] = 1;\r\n                        //vertical lines\r\n                        if (j > 0) {\r\n                            var addx = (j == 1) ? 3 - (6 * (this._pSegmentsW - i) + 12 * i) : 3 - this._pSegmentsW * 12;\r\n                            positions[vidx] = positions[vidx++ + addx];\r\n                            positions[vidx] = positions[vidx++ + addx];\r\n                            positions[vidx] = positions[vidx++ + addx];\r\n                            positions[vidx++] = x;\r\n                            positions[vidx++] = comp1;\r\n                            positions[vidx++] = comp2;\r\n                            thickness[fidx++] = 1;\r\n                        }\r\n                    }\r\n                    //horizonal lines\r\n                    if (i < this._pSegmentsW) {\r\n                        positions[vidx++] = x;\r\n                        positions[vidx++] = comp1;\r\n                        positions[vidx++] = comp2;\r\n                    }\r\n                }\r\n            }\r\n            // build real data from raw data\r\n            lineGraphics.setPositions(positions);\r\n            lineGraphics.setThickness(thickness);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveCylinderPrefab.prototype._pBuildUVs = function (target, elementsType) {\r\n        var i;\r\n        var j;\r\n        var x;\r\n        var y;\r\n        var revolutionAngle;\r\n        var uvs;\r\n        var stride;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleGraphics = target;\r\n            // need to initialize raw array or can be reused?\r\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n            }\r\n            else {\r\n                triangleGraphics.setUVs(new Float32Array(this._numVertices * 2));\r\n            }\r\n            uvs = triangleGraphics.uvs.get(this._numVertices);\r\n            stride = triangleGraphics.uvs.stride;\r\n            // evaluate revolution steps\r\n            var revolutionAngleDelta = 2 * Math.PI / this._pSegmentsW;\r\n            // current uv component index\r\n            var index = 0;\r\n            // top\r\n            if (this._topClosed) {\r\n                uvs[index] = 0.5 * this._scaleU; // central vertex\r\n                uvs[index + 1] = 0.5 * this._scaleV;\r\n                index += stride;\r\n                for (i = 0; i <= this._pSegmentsW; ++i) {\r\n                    revolutionAngle = i * revolutionAngleDelta;\r\n                    x = 0.5 + 0.5 * -Math.cos(revolutionAngle);\r\n                    y = 0.5 + 0.5 * Math.sin(revolutionAngle);\r\n                    uvs[index] = x * this._scaleU; // revolution vertex\r\n                    uvs[index + 1] = y * this._scaleV;\r\n                    index += stride;\r\n                }\r\n            }\r\n            // bottom\r\n            if (this._bottomClosed) {\r\n                uvs[index] = 0.5 * this._scaleU; // central vertex\r\n                uvs[index + 1] = 0.5 * this._scaleV;\r\n                index += stride;\r\n                for (i = 0; i <= this._pSegmentsW; ++i) {\r\n                    revolutionAngle = i * revolutionAngleDelta;\r\n                    x = 0.5 + 0.5 * Math.cos(revolutionAngle);\r\n                    y = 0.5 + 0.5 * Math.sin(revolutionAngle);\r\n                    uvs[index] = x * this._scaleU; // revolution vertex\r\n                    uvs[index + 1] = y * this._scaleV;\r\n                    index += stride;\r\n                }\r\n            }\r\n            // lateral surface\r\n            if (this._surfaceClosed) {\r\n                for (j = 0; j <= this._pSegmentsH; ++j) {\r\n                    for (i = 0; i <= this._pSegmentsW; ++i) {\r\n                        // revolution vertex\r\n                        uvs[index] = (i / this._pSegmentsW) * this._scaleU;\r\n                        uvs[index + 1] = (j / this._pSegmentsH) * this._scaleV;\r\n                        index += stride;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n        }\r\n    };\r\n    return PrimitiveCylinderPrefab;\r\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\r\nexports.PrimitiveCylinderPrefab = PrimitiveCylinderPrefab;\r\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\r\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\r\n/**\r\n * A Plane primitive sprite.\r\n */\r\nvar PrimitivePlanePrefab = (function (_super) {\r\n    __extends(PrimitivePlanePrefab, _super);\r\n    /**\r\n     * Creates a new Plane object.\r\n     * @param width The width of the plane.\r\n     * @param height The height of the plane.\r\n     * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n     * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n     * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n     * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n     */\r\n    function PrimitivePlanePrefab(material, elementsType, width, height, segmentsW, segmentsH, yUp, doubleSided) {\r\n        if (material === void 0) { material = null; }\r\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\r\n        if (width === void 0) { width = 100; }\r\n        if (height === void 0) { height = 100; }\r\n        if (segmentsW === void 0) { segmentsW = 1; }\r\n        if (segmentsH === void 0) { segmentsH = 1; }\r\n        if (yUp === void 0) { yUp = true; }\r\n        if (doubleSided === void 0) { doubleSided = false; }\r\n        _super.call(this, material, elementsType);\r\n        this._segmentsW = segmentsW;\r\n        this._segmentsH = segmentsH;\r\n        this._yUp = yUp;\r\n        this._width = width;\r\n        this._height = height;\r\n        this._doubleSided = doubleSided;\r\n    }\r\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"segmentsW\", {\r\n        /**\r\n         * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n         */\r\n        get: function () {\r\n            return this._segmentsW;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsW = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"segmentsH\", {\r\n        /**\r\n         * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n         * false, respectively. Defaults to 1.\r\n         */\r\n        get: function () {\r\n            return this._segmentsH;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsH = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"yUp\", {\r\n        /**\r\n         *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n         */\r\n        get: function () {\r\n            return this._yUp;\r\n        },\r\n        set: function (value) {\r\n            this._yUp = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"doubleSided\", {\r\n        /**\r\n         * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n         */\r\n        get: function () {\r\n            return this._doubleSided;\r\n        },\r\n        set: function (value) {\r\n            this._doubleSided = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"width\", {\r\n        /**\r\n         * The width of the plane.\r\n         */\r\n        get: function () {\r\n            return this._width;\r\n        },\r\n        set: function (value) {\r\n            this._width = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePlanePrefab.prototype, \"height\", {\r\n        /**\r\n         * The height of the plane.\r\n         */\r\n        get: function () {\r\n            return this._height;\r\n        },\r\n        set: function (value) {\r\n            this._height = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitivePlanePrefab.prototype._pBuildGraphics = function (target, elementsType) {\r\n        var indices;\r\n        var x, y;\r\n        var numIndices;\r\n        var stride;\r\n        var base;\r\n        var tw = this._segmentsW + 1;\r\n        var vidx, fidx; // indices\r\n        var xi;\r\n        var yi;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleGraphics = target;\r\n            var numVertices = (this._segmentsH + 1) * tw;\r\n            var positions;\r\n            var normals;\r\n            var tangents;\r\n            if (this._doubleSided)\r\n                numVertices *= 2;\r\n            numIndices = this._segmentsH * this._segmentsW * 6;\r\n            if (this._doubleSided)\r\n                numIndices *= 2;\r\n            if (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\r\n                triangleGraphics.invalidateIndices();\r\n            }\r\n            else {\r\n                triangleGraphics.setIndices(new Uint16Array(numIndices));\r\n                this._pInvalidateUVs();\r\n            }\r\n            indices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n            if (numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n            }\r\n            else {\r\n                triangleGraphics.setPositions(new Float32Array(numVertices * 3));\r\n                triangleGraphics.setNormals(new Float32Array(numVertices * 3));\r\n                triangleGraphics.setTangents(new Float32Array(numVertices * 3));\r\n                this._pInvalidateUVs();\r\n            }\r\n            positions = triangleGraphics.positions.get(numVertices);\r\n            normals = triangleGraphics.normals.get(numVertices);\r\n            tangents = triangleGraphics.tangents.get(numVertices);\r\n            stride = triangleGraphics.concatenatedBuffer.stride / 4;\r\n            fidx = 0;\r\n            vidx = 0;\r\n            for (yi = 0; yi <= this._segmentsH; ++yi) {\r\n                for (xi = 0; xi <= this._segmentsW; ++xi) {\r\n                    x = (xi / this._segmentsW - .5) * this._width;\r\n                    y = (yi / this._segmentsH - .5) * this._height;\r\n                    positions[vidx] = x;\r\n                    if (this._yUp) {\r\n                        positions[vidx + 1] = 0;\r\n                        positions[vidx + 2] = y;\r\n                    }\r\n                    else {\r\n                        positions[vidx + 1] = y;\r\n                        positions[vidx + 2] = 0;\r\n                    }\r\n                    normals[vidx] = 0;\r\n                    if (this._yUp) {\r\n                        normals[vidx + 1] = 1;\r\n                        normals[vidx + 2] = 0;\r\n                    }\r\n                    else {\r\n                        normals[vidx + 1] = 0;\r\n                        normals[vidx + 2] = -1;\r\n                    }\r\n                    tangents[vidx] = 1;\r\n                    tangents[vidx + 1] = 0;\r\n                    tangents[vidx + 2] = 0;\r\n                    vidx += stride;\r\n                    // add vertex with same position, but with inverted normal & tangent\r\n                    if (this._doubleSided) {\r\n                        for (var i = vidx; i < vidx + 3; ++i) {\r\n                            positions[i] = positions[i - 3];\r\n                            normals[i] = -normals[i - 3];\r\n                            tangents[i] = -tangents[i - 3];\r\n                        }\r\n                        vidx += stride;\r\n                    }\r\n                    if (xi != this._segmentsW && yi != this._segmentsH) {\r\n                        base = xi + yi * tw;\r\n                        var mult = this._doubleSided ? 2 : 1;\r\n                        indices[fidx++] = base * mult;\r\n                        indices[fidx++] = (base + tw) * mult;\r\n                        indices[fidx++] = (base + tw + 1) * mult;\r\n                        indices[fidx++] = base * mult;\r\n                        indices[fidx++] = (base + tw + 1) * mult;\r\n                        indices[fidx++] = (base + 1) * mult;\r\n                        if (this._doubleSided) {\r\n                            indices[fidx++] = (base + tw + 1) * mult + 1;\r\n                            indices[fidx++] = (base + tw) * mult + 1;\r\n                            indices[fidx++] = base * mult + 1;\r\n                            indices[fidx++] = (base + 1) * mult + 1;\r\n                            indices[fidx++] = (base + tw + 1) * mult + 1;\r\n                            indices[fidx++] = base * mult + 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n            var lineGraphics = target;\r\n            var numSegments = (this._segmentsH + 1) + tw;\r\n            var positions;\r\n            var thickness;\r\n            var hw = this._width / 2;\r\n            var hh = this._height / 2;\r\n            positions = new Float32Array(numSegments * 6);\r\n            thickness = new Float32Array(numSegments);\r\n            fidx = 0;\r\n            vidx = 0;\r\n            for (yi = 0; yi <= this._segmentsH; ++yi) {\r\n                positions[vidx++] = -hw;\r\n                positions[vidx++] = 0;\r\n                positions[vidx++] = yi * this._height - hh;\r\n                positions[vidx++] = hw;\r\n                positions[vidx++] = 0;\r\n                positions[vidx++] = yi * this._height - hh;\r\n                thickness[fidx++] = 1;\r\n            }\r\n            for (xi = 0; xi <= this._segmentsW; ++xi) {\r\n                positions[vidx++] = xi * this._width - hw;\r\n                positions[vidx++] = 0;\r\n                positions[vidx++] = -hh;\r\n                positions[vidx++] = xi * this._width - hw;\r\n                positions[vidx++] = 0;\r\n                positions[vidx++] = hh;\r\n                thickness[fidx++] = 1;\r\n            }\r\n            // build real data from raw data\r\n            lineGraphics.setPositions(positions);\r\n            lineGraphics.setThickness(thickness);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitivePlanePrefab.prototype._pBuildUVs = function (target, elementsType) {\r\n        var uvs;\r\n        var stride;\r\n        var numVertices;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\r\n            if (this._doubleSided)\r\n                numVertices *= 2;\r\n            var triangleGraphics = target;\r\n            if (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n            }\r\n            else {\r\n                triangleGraphics.setUVs(new Float32Array(numVertices * 2));\r\n            }\r\n            uvs = triangleGraphics.uvs.get(numVertices);\r\n            stride = triangleGraphics.uvs.stride;\r\n            var index = 0;\r\n            for (var yi = 0; yi <= this._segmentsH; ++yi) {\r\n                for (var xi = 0; xi <= this._segmentsW; ++xi) {\r\n                    uvs[index] = (xi / this._segmentsW) * this._scaleU;\r\n                    uvs[index + 1] = (1 - yi / this._segmentsH) * this._scaleV;\r\n                    index += stride;\r\n                    if (this._doubleSided) {\r\n                        uvs[index] = (xi / this._segmentsW) * this._scaleU;\r\n                        uvs[index + 1] = (1 - yi / this._segmentsH) * this._scaleV;\r\n                        index += stride;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n        }\r\n    };\r\n    return PrimitivePlanePrefab;\r\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\r\nexports.PrimitivePlanePrefab = PrimitivePlanePrefab;\r\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar PrimitiveCylinderPrefab_1 = require(\"../prefabs/PrimitiveCylinderPrefab\");\r\n/**\r\n * A UV RegularPolygon primitive sprite.\r\n */\r\nvar PrimitivePolygonPrefab = (function (_super) {\r\n    __extends(PrimitivePolygonPrefab, _super);\r\n    /**\r\n     * Creates a new RegularPolygon disc object.\r\n     * @param radius The radius of the regular polygon\r\n     * @param sides Defines the number of sides of the regular polygon.\r\n     * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n     */\r\n    function PrimitivePolygonPrefab(material, elementsType, radius, sides, yUp) {\r\n        if (material === void 0) { material = null; }\r\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\r\n        if (radius === void 0) { radius = 100; }\r\n        if (sides === void 0) { sides = 16; }\r\n        if (yUp === void 0) { yUp = true; }\r\n        _super.call(this, material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\r\n    }\r\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"radius\", {\r\n        /**\r\n         * The radius of the regular polygon.\r\n         */\r\n        get: function () {\r\n            return this._pBottomRadius;\r\n        },\r\n        set: function (value) {\r\n            this._pBottomRadius = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"sides\", {\r\n        /**\r\n         * The number of sides of the regular polygon.\r\n         */\r\n        get: function () {\r\n            return this._pSegmentsW;\r\n        },\r\n        set: function (value) {\r\n            this.setSegmentsW(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePolygonPrefab.prototype, \"subdivisions\", {\r\n        /**\r\n         * The number of subdivisions from the edge to the center of the regular polygon.\r\n         */\r\n        get: function () {\r\n            return this._pSegmentsH;\r\n        },\r\n        set: function (value) {\r\n            this.setSegmentsH(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PrimitivePolygonPrefab;\r\n}(PrimitiveCylinderPrefab_1.PrimitiveCylinderPrefab));\r\nexports.PrimitivePolygonPrefab = PrimitivePolygonPrefab;\r\n},{\"../prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\"}],\"awayjs-display/lib/prefabs/PrimitivePrefabBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\r\nvar TriangleElements_1 = require(\"../graphics/TriangleElements\");\r\nvar LineElements_1 = require(\"../graphics/LineElements\");\r\nvar Sprite_1 = require(\"../display/Sprite\");\r\nvar PrefabBase_1 = require(\"../prefabs/PrefabBase\");\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nvar PrimitivePrefabBase = (function (_super) {\r\n    __extends(PrimitivePrefabBase, _super);\r\n    /**\r\n     * Creates a new PrimitivePrefabBase object.\r\n     *\r\n     * @param material The material with which to render the object\r\n     */\r\n    function PrimitivePrefabBase(material, elementsType) {\r\n        if (material === void 0) { material = null; }\r\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\r\n        _super.call(this);\r\n        this._primitiveDirty = true;\r\n        this._uvDirty = true;\r\n        this._scaleU = 1;\r\n        this._scaleV = 1;\r\n        this._material = material;\r\n        this._elementsType = elementsType;\r\n        if (this._elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleElements = new TriangleElements_1.TriangleElements(new AttributesBuffer_1.AttributesBuffer());\r\n            triangleElements.autoDeriveNormals = false;\r\n            triangleElements.autoDeriveTangents = false;\r\n            this._elements = triangleElements;\r\n        }\r\n        else if (this._elementsType == ElementsType_1.ElementsType.LINE) {\r\n            this._elements = new LineElements_1.LineElements(new AttributesBuffer_1.AttributesBuffer());\r\n        }\r\n    }\r\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return PrimitivePrefabBase.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"elementsType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._elementsType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"material\", {\r\n        /**\r\n         * The material with which to render the primitive.\r\n         */\r\n        get: function () {\r\n            return this._material;\r\n        },\r\n        set: function (value) {\r\n            if (value == this._material)\r\n                return;\r\n            this._material = value;\r\n            var len = this._pObjects.length;\r\n            for (var i = 0; i < len; i++)\r\n                this._pObjects[i].material = this._material;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"scaleU\", {\r\n        get: function () {\r\n            return this._scaleU;\r\n        },\r\n        set: function (value) {\r\n            if (this._scaleU = value)\r\n                return;\r\n            this._scaleU = value;\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitivePrefabBase.prototype, \"scaleV\", {\r\n        get: function () {\r\n            return this._scaleV;\r\n        },\r\n        set: function (value) {\r\n            if (this._scaleV = value)\r\n                return;\r\n            this._scaleV = value;\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n     * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\r\n     */\r\n    PrimitivePrefabBase.prototype._pBuildGraphics = function (target, elementsType) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    /**\r\n     * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n     * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n     */\r\n    PrimitivePrefabBase.prototype._pBuildUVs = function (target, elementsType) {\r\n        throw new AbstractMethodError_1.AbstractMethodError();\r\n    };\r\n    /**\r\n     * Invalidates the primitive, causing it to be updated when requested.\r\n     */\r\n    PrimitivePrefabBase.prototype._pInvalidatePrimitive = function () {\r\n        this._primitiveDirty = true;\r\n    };\r\n    /**\r\n     * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n     */\r\n    PrimitivePrefabBase.prototype._pInvalidateUVs = function () {\r\n        this._uvDirty = true;\r\n    };\r\n    /**\r\n     * Updates the geometry when invalid.\r\n     */\r\n    PrimitivePrefabBase.prototype.updateGraphics = function () {\r\n        this._pBuildGraphics(this._elements, this._elementsType);\r\n        this._primitiveDirty = false;\r\n    };\r\n    /**\r\n     * Updates the uv coordinates when invalid.\r\n     */\r\n    PrimitivePrefabBase.prototype.updateUVs = function () {\r\n        this._pBuildUVs(this._elements, this._elementsType);\r\n        this._uvDirty = false;\r\n    };\r\n    PrimitivePrefabBase.prototype._iValidate = function () {\r\n        if (this._primitiveDirty)\r\n            this.updateGraphics();\r\n        if (this._uvDirty)\r\n            this.updateUVs();\r\n    };\r\n    PrimitivePrefabBase.prototype._pCreateObject = function () {\r\n        var sprite = new Sprite_1.Sprite(this._material);\r\n        sprite.graphics.addGraphic(this._elements);\r\n        sprite._iSourcePrefab = this;\r\n        return sprite;\r\n    };\r\n    PrimitivePrefabBase.assetType = \"[asset PrimitivePrefab]\";\r\n    return PrimitivePrefabBase;\r\n}(PrefabBase_1.PrefabBase));\r\nexports.PrimitivePrefabBase = PrimitivePrefabBase;\r\n},{\"../display/Sprite\":\"awayjs-display/lib/display/Sprite\",\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../graphics/LineElements\":\"awayjs-display/lib/graphics/LineElements\",\"../graphics/TriangleElements\":\"awayjs-display/lib/graphics/TriangleElements\",\"../prefabs/PrefabBase\":\"awayjs-display/lib/prefabs/PrefabBase\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\r\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\r\n/**\r\n * A UV Sphere primitive sprite.\r\n */\r\nvar PrimitiveSpherePrefab = (function (_super) {\r\n    __extends(PrimitiveSpherePrefab, _super);\r\n    /**\r\n     * Creates a new Sphere object.\r\n     *\r\n     * @param radius The radius of the sphere.\r\n     * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n     * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n     * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n     */\r\n    function PrimitiveSpherePrefab(material, elementsType, radius, segmentsW, segmentsH, yUp) {\r\n        if (material === void 0) { material = null; }\r\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\r\n        if (radius === void 0) { radius = 50; }\r\n        if (segmentsW === void 0) { segmentsW = 16; }\r\n        if (segmentsH === void 0) { segmentsH = 12; }\r\n        if (yUp === void 0) { yUp = true; }\r\n        _super.call(this, material, elementsType);\r\n        this._radius = radius;\r\n        this._segmentsW = segmentsW;\r\n        this._segmentsH = segmentsH;\r\n        this._yUp = yUp;\r\n    }\r\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"radius\", {\r\n        /**\r\n         * The radius of the sphere.\r\n         */\r\n        get: function () {\r\n            return this._radius;\r\n        },\r\n        set: function (value) {\r\n            this._radius = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"segmentsW\", {\r\n        /**\r\n         * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n         */\r\n        get: function () {\r\n            return this._segmentsW;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsW = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"segmentsH\", {\r\n        /**\r\n         * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n         */\r\n        get: function () {\r\n            return this._segmentsH;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsH = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveSpherePrefab.prototype, \"yUp\", {\r\n        /**\r\n         * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n         */\r\n        get: function () {\r\n            return this._yUp;\r\n        },\r\n        set: function (value) {\r\n            this._yUp = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveSpherePrefab.prototype._pBuildGraphics = function (target, elementsType) {\r\n        var indices;\r\n        var positions;\r\n        var normals;\r\n        var tangents;\r\n        var stride;\r\n        var i;\r\n        var j;\r\n        var vidx, fidx; // indices\r\n        var comp1;\r\n        var comp2;\r\n        var numVertices;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleGraphics = target;\r\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\r\n            if (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\r\n                triangleGraphics.invalidateIndices();\r\n                triangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n            }\r\n            else {\r\n                triangleGraphics.setIndices(new Uint16Array((this._segmentsH - 1) * this._segmentsW * 6));\r\n                triangleGraphics.setPositions(new Float32Array(numVertices * 3));\r\n                triangleGraphics.setNormals(new Float32Array(numVertices * 3));\r\n                triangleGraphics.setTangents(new Float32Array(numVertices * 3));\r\n                this._pInvalidateUVs();\r\n            }\r\n            indices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n            positions = triangleGraphics.positions.get(numVertices);\r\n            normals = triangleGraphics.normals.get(numVertices);\r\n            tangents = triangleGraphics.tangents.get(numVertices);\r\n            stride = triangleGraphics.concatenatedBuffer.stride / 4;\r\n            vidx = 0;\r\n            fidx = 0;\r\n            var startIndex;\r\n            var t1;\r\n            var t2;\r\n            for (j = 0; j <= this._segmentsH; ++j) {\r\n                startIndex = vidx;\r\n                var horangle = Math.PI * j / this._segmentsH;\r\n                var z = -this._radius * Math.cos(horangle);\r\n                var ringradius = this._radius * Math.sin(horangle);\r\n                for (i = 0; i <= this._segmentsW; ++i) {\r\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\r\n                    var x = ringradius * Math.cos(verangle);\r\n                    var y = ringradius * Math.sin(verangle);\r\n                    var normLen = 1 / Math.sqrt(x * x + y * y + z * z);\r\n                    var tanLen = Math.sqrt(y * y + x * x);\r\n                    if (this._yUp) {\r\n                        t1 = 0;\r\n                        t2 = tanLen > .007 ? x / tanLen : 0;\r\n                        comp1 = -z;\r\n                        comp2 = y;\r\n                    }\r\n                    else {\r\n                        t1 = tanLen > .007 ? x / tanLen : 0;\r\n                        t2 = 0;\r\n                        comp1 = y;\r\n                        comp2 = z;\r\n                    }\r\n                    if (i == this._segmentsW) {\r\n                        positions[vidx] = positions[startIndex];\r\n                        positions[vidx + 1] = positions[startIndex + 1];\r\n                        positions[vidx + 2] = positions[startIndex + 2];\r\n                        normals[vidx] = normals[startIndex] + (x * normLen) * .5;\r\n                        normals[vidx + 1] = normals[startIndex + 1] + (comp1 * normLen) * .5;\r\n                        normals[vidx + 2] = normals[startIndex + 2] + (comp2 * normLen) * .5;\r\n                        tangents[vidx] = tanLen > .007 ? -y / tanLen : 1;\r\n                        tangents[vidx + 1] = t1;\r\n                        tangents[vidx + 2] = t2;\r\n                    }\r\n                    else {\r\n                        positions[vidx] = x;\r\n                        positions[vidx + 1] = comp1;\r\n                        positions[vidx + 2] = comp2;\r\n                        normals[vidx] = x * normLen;\r\n                        normals[vidx + 1] = comp1 * normLen;\r\n                        normals[vidx + 2] = comp2 * normLen;\r\n                        tangents[vidx] = tanLen > .007 ? -y / tanLen : 1;\r\n                        tangents[vidx + 1] = t1;\r\n                        tangents[vidx + 2] = t2;\r\n                    }\r\n                    if (i > 0 && j > 0) {\r\n                        var a = (this._segmentsW + 1) * j + i;\r\n                        var b = (this._segmentsW + 1) * j + i - 1;\r\n                        var c = (this._segmentsW + 1) * (j - 1) + i - 1;\r\n                        var d = (this._segmentsW + 1) * (j - 1) + i;\r\n                        if (j == this._segmentsH) {\r\n                            positions[vidx] = positions[startIndex];\r\n                            positions[vidx + 1] = positions[startIndex + 1];\r\n                            positions[vidx + 2] = positions[startIndex + 2];\r\n                            indices[fidx++] = a;\r\n                            indices[fidx++] = c;\r\n                            indices[fidx++] = d;\r\n                        }\r\n                        else if (j == 1) {\r\n                            indices[fidx++] = a;\r\n                            indices[fidx++] = b;\r\n                            indices[fidx++] = c;\r\n                        }\r\n                        else {\r\n                            indices[fidx++] = a;\r\n                            indices[fidx++] = b;\r\n                            indices[fidx++] = c;\r\n                            indices[fidx++] = a;\r\n                            indices[fidx++] = c;\r\n                            indices[fidx++] = d;\r\n                        }\r\n                    }\r\n                    vidx += stride;\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n            var lineGraphics = target;\r\n            var numSegments = this._segmentsH * this._segmentsW * 2 + this._segmentsW;\r\n            var positions = new Float32Array(numSegments * 6);\r\n            var thickness = new Float32Array(numSegments);\r\n            vidx = 0;\r\n            fidx = 0;\r\n            for (j = 0; j <= this._segmentsH; ++j) {\r\n                var horangle = Math.PI * j / this._segmentsH;\r\n                var z = -this._radius * Math.cos(horangle);\r\n                var ringradius = this._radius * Math.sin(horangle);\r\n                for (i = 0; i <= this._segmentsW; ++i) {\r\n                    var verangle = 2 * Math.PI * i / this._segmentsW;\r\n                    var x = ringradius * Math.cos(verangle);\r\n                    var y = ringradius * Math.sin(verangle);\r\n                    if (this._yUp) {\r\n                        comp1 = -z;\r\n                        comp2 = y;\r\n                    }\r\n                    else {\r\n                        comp1 = y;\r\n                        comp2 = z;\r\n                    }\r\n                    if (i > 0) {\r\n                        //horizonal lines\r\n                        positions[vidx++] = x;\r\n                        positions[vidx++] = comp1;\r\n                        positions[vidx++] = comp2;\r\n                        thickness[fidx++] = 1;\r\n                        //vertical lines\r\n                        if (j > 0) {\r\n                            var addx = (j == 1) ? 3 - (6 * (this._segmentsW - i) + 12 * i) : 3 - this._segmentsW * 12;\r\n                            positions[vidx] = positions[vidx++ + addx];\r\n                            positions[vidx] = positions[vidx++ + addx];\r\n                            positions[vidx] = positions[vidx++ + addx];\r\n                            positions[vidx++] = x;\r\n                            positions[vidx++] = comp1;\r\n                            positions[vidx++] = comp2;\r\n                            thickness[fidx++] = 1;\r\n                        }\r\n                    }\r\n                    //horizonal lines\r\n                    if (i < this._segmentsW) {\r\n                        positions[vidx++] = x;\r\n                        positions[vidx++] = comp1;\r\n                        positions[vidx++] = comp2;\r\n                    }\r\n                }\r\n            }\r\n            // build real data from raw data\r\n            lineGraphics.setPositions(positions);\r\n            lineGraphics.setThickness(thickness);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveSpherePrefab.prototype._pBuildUVs = function (target, elementsType) {\r\n        var i, j;\r\n        var numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\r\n        var uvs;\r\n        var stride;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            numVertices = (this._segmentsH + 1) * (this._segmentsW + 1);\r\n            var triangleGraphics = target;\r\n            if (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n            }\r\n            else {\r\n                triangleGraphics.setUVs(new Float32Array(numVertices * 2));\r\n            }\r\n            uvs = triangleGraphics.uvs.get(numVertices);\r\n            stride = triangleGraphics.uvs.stride;\r\n            var index = 0;\r\n            for (j = 0; j <= this._segmentsH; ++j) {\r\n                for (i = 0; i <= this._segmentsW; ++i) {\r\n                    uvs[index] = (i / this._segmentsW) * this._scaleU;\r\n                    uvs[index + 1] = (j / this._segmentsH) * this._scaleV;\r\n                    index += stride;\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n        }\r\n    };\r\n    return PrimitiveSpherePrefab;\r\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\r\nexports.PrimitiveSpherePrefab = PrimitiveSpherePrefab;\r\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ElementsType_1 = require(\"../graphics/ElementsType\");\r\nvar PrimitivePrefabBase_1 = require(\"../prefabs/PrimitivePrefabBase\");\r\n/**\r\n * A UV Cylinder primitive sprite.\r\n */\r\nvar PrimitiveTorusPrefab = (function (_super) {\r\n    __extends(PrimitiveTorusPrefab, _super);\r\n    /**\r\n     * Creates a new <code>Torus</code> object.\r\n     * @param radius The radius of the torus.\r\n     * @param tuebRadius The radius of the inner tube of the torus.\r\n     * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n     * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n     * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n     */\r\n    function PrimitiveTorusPrefab(material, elementsType, radius, tubeRadius, segmentsR, segmentsT, yUp) {\r\n        if (material === void 0) { material = null; }\r\n        if (elementsType === void 0) { elementsType = \"triangle\"; }\r\n        if (radius === void 0) { radius = 50; }\r\n        if (tubeRadius === void 0) { tubeRadius = 50; }\r\n        if (segmentsR === void 0) { segmentsR = 16; }\r\n        if (segmentsT === void 0) { segmentsT = 8; }\r\n        if (yUp === void 0) { yUp = true; }\r\n        _super.call(this, material, elementsType);\r\n        this._numVertices = 0;\r\n        this._radius = radius;\r\n        this._tubeRadius = tubeRadius;\r\n        this._segmentsR = segmentsR;\r\n        this._segmentsT = segmentsT;\r\n        this._yUp = yUp;\r\n    }\r\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"radius\", {\r\n        /**\r\n         * The radius of the torus.\r\n         */\r\n        get: function () {\r\n            return this._radius;\r\n        },\r\n        set: function (value) {\r\n            this._radius = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"tubeRadius\", {\r\n        /**\r\n         * The radius of the inner tube of the torus.\r\n         */\r\n        get: function () {\r\n            return this._tubeRadius;\r\n        },\r\n        set: function (value) {\r\n            this._tubeRadius = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"segmentsR\", {\r\n        /**\r\n         * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n         */\r\n        get: function () {\r\n            return this._segmentsR;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsR = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"segmentsT\", {\r\n        /**\r\n         * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n         */\r\n        get: function () {\r\n            return this._segmentsT;\r\n        },\r\n        set: function (value) {\r\n            this._segmentsT = value;\r\n            this._pInvalidatePrimitive();\r\n            this._pInvalidateUVs();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PrimitiveTorusPrefab.prototype, \"yUp\", {\r\n        /**\r\n         * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n         */\r\n        get: function () {\r\n            return this._yUp;\r\n        },\r\n        set: function (value) {\r\n            this._yUp = value;\r\n            this._pInvalidatePrimitive();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveTorusPrefab.prototype._pBuildGraphics = function (target, elementsType) {\r\n        var indices;\r\n        var positions;\r\n        var normals;\r\n        var tangents;\r\n        var stride;\r\n        var i, j;\r\n        var x, y, z, nx, ny, nz, revolutionAngleR, revolutionAngleT;\r\n        var vidx;\r\n        var fidx;\r\n        var numIndices = 0;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleGraphics = target;\r\n            // evaluate target number of vertices, triangles and indices\r\n            this._numVertices = (this._segmentsT + 1) * (this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n            numIndices = this._segmentsT * this._segmentsR * 6; // each level has segmentR quads, each of 2 triangles\r\n            // need to initialize raw arrays or can be reused?\r\n            if (this._numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateIndices();\r\n                triangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n                triangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n            }\r\n            else {\r\n                triangleGraphics.setIndices(new Uint16Array(numIndices));\r\n                triangleGraphics.setPositions(new Float32Array(this._numVertices * 3));\r\n                triangleGraphics.setNormals(new Float32Array(this._numVertices * 3));\r\n                triangleGraphics.setTangents(new Float32Array(this._numVertices * 3));\r\n                this._pInvalidateUVs();\r\n            }\r\n            indices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n            positions = triangleGraphics.positions.get(this._numVertices);\r\n            normals = triangleGraphics.normals.get(this._numVertices);\r\n            tangents = triangleGraphics.tangents.get(this._numVertices);\r\n            stride = triangleGraphics.concatenatedBuffer.stride / 4;\r\n            vidx = 0;\r\n            fidx = 0;\r\n            // evaluate revolution steps\r\n            var revolutionAngleDeltaR = 2 * Math.PI / this._segmentsR;\r\n            var revolutionAngleDeltaT = 2 * Math.PI / this._segmentsT;\r\n            var comp1, comp2;\r\n            var t1, t2, n1, n2;\r\n            var startIndex = 0;\r\n            var nextVertexIndex = 0;\r\n            // surface\r\n            var a, b, c, d, length;\r\n            for (j = 0; j <= this._segmentsT; ++j) {\r\n                startIndex = vidx;\r\n                for (i = 0; i <= this._segmentsR; ++i) {\r\n                    // revolution vertex\r\n                    revolutionAngleR = i * revolutionAngleDeltaR;\r\n                    revolutionAngleT = j * revolutionAngleDeltaT;\r\n                    length = Math.cos(revolutionAngleT);\r\n                    nx = length * Math.cos(revolutionAngleR);\r\n                    ny = length * Math.sin(revolutionAngleR);\r\n                    nz = Math.sin(revolutionAngleT);\r\n                    x = this._radius * Math.cos(revolutionAngleR) + this._tubeRadius * nx;\r\n                    y = this._radius * Math.sin(revolutionAngleR) + this._tubeRadius * ny;\r\n                    z = (j == this._segmentsT) ? 0 : this._tubeRadius * nz;\r\n                    if (this._yUp) {\r\n                        n1 = -nz;\r\n                        n2 = ny;\r\n                        t1 = 0;\r\n                        t2 = (length ? nx / length : x / this._radius);\r\n                        comp1 = -z;\r\n                        comp2 = y;\r\n                    }\r\n                    else {\r\n                        n1 = ny;\r\n                        n2 = nz;\r\n                        t1 = (length ? nx / length : x / this._radius);\r\n                        t2 = 0;\r\n                        comp1 = y;\r\n                        comp2 = z;\r\n                    }\r\n                    if (i == this._segmentsR) {\r\n                        positions[vidx] = x;\r\n                        positions[vidx + 1] = positions[startIndex + 1];\r\n                        positions[vidx + 2] = positions[startIndex + 2];\r\n                    }\r\n                    else {\r\n                        positions[vidx] = x;\r\n                        positions[vidx + 1] = comp1;\r\n                        positions[vidx + 2] = comp2;\r\n                    }\r\n                    normals[vidx] = nx;\r\n                    normals[vidx + 1] = n1;\r\n                    normals[vidx + 2] = n2;\r\n                    tangents[vidx] = -(length ? ny / length : y / this._radius);\r\n                    tangents[vidx + 1] = t1;\r\n                    tangents[vidx + 2] = t2;\r\n                    vidx += stride;\r\n                    // close triangle\r\n                    if (i > 0 && j > 0) {\r\n                        a = nextVertexIndex; // current\r\n                        b = nextVertexIndex - 1; // previous\r\n                        c = b - this._segmentsR - 1; // previous of last level\r\n                        d = a - this._segmentsR - 1; // current of last level\r\n                        indices[fidx++] = a;\r\n                        indices[fidx++] = b;\r\n                        indices[fidx++] = c;\r\n                        indices[fidx++] = a;\r\n                        indices[fidx++] = c;\r\n                        indices[fidx++] = d;\r\n                    }\r\n                    nextVertexIndex++;\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PrimitiveTorusPrefab.prototype._pBuildUVs = function (target, elementsType) {\r\n        var i, j;\r\n        var uvs;\r\n        var stride;\r\n        if (elementsType == ElementsType_1.ElementsType.TRIANGLE) {\r\n            var triangleGraphics = target;\r\n            // need to initialize raw array or can be reused?\r\n            if (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\r\n                triangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n            }\r\n            else {\r\n                triangleGraphics.setUVs(new Float32Array(this._numVertices * 2));\r\n            }\r\n            uvs = triangleGraphics.uvs.get(this._numVertices);\r\n            stride = triangleGraphics.uvs.stride;\r\n            // current uv component index\r\n            var index = 0;\r\n            // surface\r\n            for (j = 0; j <= this._segmentsT; ++j) {\r\n                for (i = 0; i <= this._segmentsR; ++i) {\r\n                    // revolution vertex\r\n                    uvs[index] = (i / this._segmentsR) * this._scaleU;\r\n                    uvs[index + 1] = (j / this._segmentsT) * this._scaleV;\r\n                    index += stride;\r\n                }\r\n            }\r\n        }\r\n        else if (elementsType == ElementsType_1.ElementsType.LINE) {\r\n        }\r\n    };\r\n    return PrimitiveTorusPrefab;\r\n}(PrimitivePrefabBase_1.PrimitivePrefabBase));\r\nexports.PrimitiveTorusPrefab = PrimitiveTorusPrefab;\r\n},{\"../graphics/ElementsType\":\"awayjs-display/lib/graphics/ElementsType\",\"../prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\"}],\"awayjs-display/lib/prefabs\":[function(require,module,exports){\n\"use strict\";\r\nvar PrefabBase_1 = require(\"./prefabs/PrefabBase\");\r\nexports.PrefabBase = PrefabBase_1.PrefabBase;\r\nvar PrimitiveCapsulePrefab_1 = require(\"./prefabs/PrimitiveCapsulePrefab\");\r\nexports.PrimitiveCapsulePrefab = PrimitiveCapsulePrefab_1.PrimitiveCapsulePrefab;\r\nvar PrimitiveConePrefab_1 = require(\"./prefabs/PrimitiveConePrefab\");\r\nexports.PrimitiveConePrefab = PrimitiveConePrefab_1.PrimitiveConePrefab;\r\nvar PrimitiveCubePrefab_1 = require(\"./prefabs/PrimitiveCubePrefab\");\r\nexports.PrimitiveCubePrefab = PrimitiveCubePrefab_1.PrimitiveCubePrefab;\r\nvar PrimitiveCylinderPrefab_1 = require(\"./prefabs/PrimitiveCylinderPrefab\");\r\nexports.PrimitiveCylinderPrefab = PrimitiveCylinderPrefab_1.PrimitiveCylinderPrefab;\r\nvar PrimitivePlanePrefab_1 = require(\"./prefabs/PrimitivePlanePrefab\");\r\nexports.PrimitivePlanePrefab = PrimitivePlanePrefab_1.PrimitivePlanePrefab;\r\nvar PrimitivePolygonPrefab_1 = require(\"./prefabs/PrimitivePolygonPrefab\");\r\nexports.PrimitivePolygonPrefab = PrimitivePolygonPrefab_1.PrimitivePolygonPrefab;\r\nvar PrimitivePrefabBase_1 = require(\"./prefabs/PrimitivePrefabBase\");\r\nexports.PrimitivePrefabBase = PrimitivePrefabBase_1.PrimitivePrefabBase;\r\nvar PrimitiveSpherePrefab_1 = require(\"./prefabs/PrimitiveSpherePrefab\");\r\nexports.PrimitiveSpherePrefab = PrimitiveSpherePrefab_1.PrimitiveSpherePrefab;\r\nvar PrimitiveTorusPrefab_1 = require(\"./prefabs/PrimitiveTorusPrefab\");\r\nexports.PrimitiveTorusPrefab = PrimitiveTorusPrefab_1.PrimitiveTorusPrefab;\r\n},{\"./prefabs/PrefabBase\":\"awayjs-display/lib/prefabs/PrefabBase\",\"./prefabs/PrimitiveCapsulePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCapsulePrefab\",\"./prefabs/PrimitiveConePrefab\":\"awayjs-display/lib/prefabs/PrimitiveConePrefab\",\"./prefabs/PrimitiveCubePrefab\":\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\",\"./prefabs/PrimitiveCylinderPrefab\":\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\",\"./prefabs/PrimitivePlanePrefab\":\"awayjs-display/lib/prefabs/PrimitivePlanePrefab\",\"./prefabs/PrimitivePolygonPrefab\":\"awayjs-display/lib/prefabs/PrimitivePolygonPrefab\",\"./prefabs/PrimitivePrefabBase\":\"awayjs-display/lib/prefabs/PrimitivePrefabBase\",\"./prefabs/PrimitiveSpherePrefab\":\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\",\"./prefabs/PrimitiveTorusPrefab\":\"awayjs-display/lib/prefabs/PrimitiveTorusPrefab\"}],\"awayjs-display/lib/text/AntiAliasType\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nvar AntiAliasType = (function () {\r\n    function AntiAliasType() {\r\n    }\r\n    /**\r\n     * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n     * allows font faces to be rendered at very high quality at small sizes. It\r\n     * is best used with applications that have a lot of small text. Advanced\r\n     * anti-aliasing is not recommended for very large fonts(larger than 48\r\n     * points). This constant is used for the <code>antiAliasType</code> property\r\n     * in the TextField class. Use the syntax\r\n     * <code>AntiAliasType.ADVANCED</code>.\r\n     */\r\n    AntiAliasType.ADVANCED = \"advanced\";\r\n    /**\r\n     * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n     * earlier. This setting is recommended for applications that do not have a\r\n     * lot of text. This constant is used for the <code>antiAliasType</code>\r\n     * property in the TextField class. Use the syntax\r\n     * <code>AntiAliasType.NORMAL</code>.\r\n     */\r\n    AntiAliasType.NORMAL = \"normal\";\r\n    return AntiAliasType;\r\n}());\r\nexports.AntiAliasType = AntiAliasType;\r\n},{}],\"awayjs-display/lib/text/BitmapFontChar\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nvar BitmapFontChar = (function () {\r\n    function BitmapFontChar(id, x, y, width, height, xoff, yoff, xadv, page, channel) {\r\n        this.id = id;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.x_offset = xoff;\r\n        this.y_offset = yoff;\r\n        this.x_advance = xadv;\r\n        this.page = page;\r\n        this.channel = channel;\r\n    }\r\n    return BitmapFontChar;\r\n}());\r\nexports.BitmapFontChar = BitmapFontChar;\r\n},{}],\"awayjs-display/lib/text/BitmapFontTable\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar BitmapFontChar_1 = require(\"../text/BitmapFontChar\");\r\n/**\r\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\r\n *\r\n *\r\n * @see away.base.TriangleElements\r\n * @see away.entities.Sprite\r\n *\r\n * @class away.base.GraphicBase\r\n */\r\nvar BitmapFontTable = (function (_super) {\r\n    __extends(BitmapFontTable, _super);\r\n    //TODO test shader picking\r\n    //\t\tpublic get shaderPickingDetails():boolean\r\n    //\t\t{\r\n    //\r\n    //\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n    //\t\t}\r\n    /**\r\n     * Creates a new TesselatedFont object\r\n     */\r\n    function BitmapFontTable() {\r\n        _super.call(this);\r\n        this._font_chars = [];\r\n        this._bitmap_pages = [];\r\n        this._font_chars_dic = new Object();\r\n        this._ascent = 0;\r\n        this._descent = 0;\r\n        this._current_size = 0;\r\n        this._size_multiply = 0;\r\n        this._init_size = 0;\r\n    }\r\n    Object.defineProperty(BitmapFontTable.prototype, \"assetType\", {\r\n        get: function () {\r\n            return BitmapFontTable.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BitmapFontTable.prototype.initFontSize = function (font_size) {\r\n        if (this._current_size == font_size)\r\n            return;\r\n        this._current_size = font_size;\r\n        this._size_multiply = font_size / this._init_size;\r\n    };\r\n    BitmapFontTable.prototype.getCharDataCanvas = function (char_code) {\r\n        var this_char = this._font_chars_dic[char_code];\r\n        if (this_char) {\r\n            //console.log(\"this_char found\");\r\n            return [this_char.x, this_char.y, this_char.width, this_char.height, this_char.x_offset * this._size_multiply, this_char.y_offset * this._size_multiply];\r\n        }\r\n        //console.log(\"this_char not found\" + char_code);\r\n        return [];\r\n    };\r\n    BitmapFontTable.prototype.getCharData = function (char_code) {\r\n        var this_char = this._font_chars_dic[char_code];\r\n        if (this_char) {\r\n            //console.log(\"this_char found\");\r\n            return [this_char.x / 256, this_char.y / 256, this_char.width / 256, this_char.height / 256, this_char.x_offset * this._size_multiply, this_char.y_offset * this._size_multiply];\r\n        }\r\n        //console.log(\"this_char not found\" + char_code);\r\n        return [];\r\n    };\r\n    BitmapFontTable.prototype.getCharVertCnt = function (char_code) {\r\n        return 6 * 4;\r\n    };\r\n    BitmapFontTable.prototype.getCharWidth = function (char_code) {\r\n        var this_char = this._font_chars_dic[char_code];\r\n        if (this_char)\r\n            return this._size_multiply * this_char.x_advance;\r\n        return 0;\r\n    };\r\n    BitmapFontTable.prototype.getLineHeight = function () {\r\n        return this._current_size;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    BitmapFontTable.prototype.dispose = function () {\r\n    };\r\n    BitmapFontTable.prototype.add_page = function (image) {\r\n        this._bitmap_pages.push(image);\r\n    };\r\n    BitmapFontTable.prototype.get_page = function (idx) {\r\n        if (idx === void 0) { idx = 0; }\r\n        return this._bitmap_pages[idx];\r\n    };\r\n    Object.defineProperty(BitmapFontTable.prototype, \"ascent\", {\r\n        get: function () {\r\n            return this._ascent;\r\n        },\r\n        set: function (value) {\r\n            this._ascent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BitmapFontTable.prototype, \"descent\", {\r\n        get: function () {\r\n            return this._descent;\r\n        },\r\n        set: function (value) {\r\n            this._descent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BitmapFontTable.prototype, \"offset_x\", {\r\n        get: function () {\r\n            return this._offset_x;\r\n        },\r\n        set: function (value) {\r\n            this._offset_x = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BitmapFontTable.prototype, \"offset_y\", {\r\n        get: function () {\r\n            return this._offset_y;\r\n        },\r\n        set: function (value) {\r\n            this._offset_y = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BitmapFontTable.prototype.get_font_chars = function () {\r\n        return this._font_chars;\r\n    };\r\n    BitmapFontTable.prototype.get_font_em_size = function () {\r\n        return this._font_em_size;\r\n    };\r\n    BitmapFontTable.prototype.set_whitespace_width = function (value) {\r\n        this._whitespace_width = value;\r\n    };\r\n    BitmapFontTable.prototype.get_whitespace_width = function () {\r\n        return this._whitespace_width;\r\n    };\r\n    BitmapFontTable.prototype.set_font_em_size = function (font_em_size) {\r\n        this._font_em_size = font_em_size;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    BitmapFontTable.prototype.getChar = function (name) {\r\n        return this._font_chars_dic[name];\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    BitmapFontTable.prototype.setChar = function (id, x, y, width, height, xoff, yoff, xadv, page, channel) {\r\n        var bitmap_font_char = new BitmapFontChar_1.BitmapFontChar(id, x, y, width, height, xoff, yoff, xadv, page, channel);\r\n        this._font_chars.push(bitmap_font_char);\r\n        this._font_chars_dic[id] = bitmap_font_char;\r\n    };\r\n    BitmapFontTable.assetType = \"[asset BitmapFontTable]\";\r\n    return BitmapFontTable;\r\n}(AssetBase_1.AssetBase));\r\nexports.BitmapFontTable = BitmapFontTable;\r\n},{\"../text/BitmapFontChar\":\"awayjs-display/lib/text/BitmapFontChar\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/Font\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar TesselatedFontTable_1 = require(\"../text/TesselatedFontTable\");\r\nvar BitmapFontTable_1 = require(\"../text/BitmapFontTable\");\r\n/**\r\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\r\n *\r\n *\r\n * @see away.base.TriangleElements\r\n * @see away.entities.Sprite\r\n *\r\n * @class away.base.GraphicBase\r\n */\r\nvar Font = (function (_super) {\r\n    __extends(Font, _super);\r\n    //TODO test shader picking\r\n    //\t\tpublic get shaderPickingDetails():boolean\r\n    //\t\t{\r\n    //\r\n    //\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n    //\t\t}\r\n    /**\r\n     * Creates a new TesselatedFont object\r\n     */\r\n    function Font() {\r\n        _super.call(this);\r\n        this._font_styles = [];\r\n    }\r\n    Object.defineProperty(Font.prototype, \"font_styles\", {\r\n        get: function () {\r\n            return this._font_styles;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Font.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return Font.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    Font.prototype.dispose = function () {\r\n    };\r\n    /**\r\n     *Get a font-table for a specific name, or create one if it does not exists.\r\n     */\r\n    Font.prototype.get_font_table = function (style_name, assetType) {\r\n        if (assetType === void 0) { assetType = TesselatedFontTable_1.TesselatedFontTable.assetType; }\r\n        var len = this._font_styles.length;\r\n        for (var i = 0; i < len; ++i) {\r\n            if ((this._font_styles[i].assetType == assetType) && (this._font_styles[i].name == style_name)) {\r\n                return this._font_styles[i];\r\n            }\r\n        }\r\n        var font_style = null;\r\n        if (assetType == TesselatedFontTable_1.TesselatedFontTable.assetType) {\r\n            font_style = new TesselatedFontTable_1.TesselatedFontTable();\r\n        }\r\n        else if (assetType == BitmapFontTable_1.BitmapFontTable.assetType) {\r\n            font_style = new BitmapFontTable_1.BitmapFontTable();\r\n        }\r\n        font_style.name = style_name;\r\n        this._font_styles.push(font_style);\r\n        return font_style;\r\n    };\r\n    Font.assetType = \"[asset Font]\";\r\n    return Font;\r\n}(AssetBase_1.AssetBase));\r\nexports.Font = Font;\r\n},{\"../text/BitmapFontTable\":\"awayjs-display/lib/text/BitmapFontTable\",\"../text/TesselatedFontTable\":\"awayjs-display/lib/text/TesselatedFontTable\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/GridFitType\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nvar GridFitType = (function () {\r\n    function GridFitType() {\r\n    }\r\n    /**\r\n     * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n     * not forced to the pixel grid. This constant is used in setting the\r\n     * <code>gridFitType</code> property of the TextField class. This is often a\r\n     * good setting for animation or for large font sizes. Use the syntax\r\n     * <code>GridFitType.NONE</code>.\r\n     */\r\n    GridFitType.NONE = \"none\";\r\n    /**\r\n     * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n     * is used in setting the <code>gridFitType</code> property of the TextField\r\n     * class. This setting only works for left-justified text fields and acts\r\n     * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n     * setting generally provides the best readability for left-aligned text. Use\r\n     * the syntax <code>GridFitType.PIXEL</code>.\r\n     */\r\n    GridFitType.PIXEL = \"pixel\";\r\n    /**\r\n     * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n     * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n     * is often a good setting for right-aligned or center-aligned dynamic text,\r\n     * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n     * constant is used in setting the <code>gridFitType</code> property of the\r\n     * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n     */\r\n    GridFitType.SUBPIXEL = \"subpixel\";\r\n    return GridFitType;\r\n}());\r\nexports.GridFitType = GridFitType;\r\n},{}],\"awayjs-display/lib/text/IFontTable\":[function(require,module,exports){\n\"use strict\";\r\n},{}],\"awayjs-display/lib/text/TesselatedFontChar\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nvar TesselatedFontChar = (function () {\r\n    function TesselatedFontChar(elements) {\r\n        /**\r\n         * the char_codes that this geom has kerning set for\r\n         */\r\n        this.kerningCharCodes = [];\r\n        /**\r\n         * the kerning values per char_code\r\n         */\r\n        this.kerningValues = [];\r\n        this.elements = elements;\r\n    }\r\n    return TesselatedFontChar;\r\n}());\r\nexports.TesselatedFontChar = TesselatedFontChar;\r\n},{}],\"awayjs-display/lib/text/TesselatedFontTable\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\nvar TesselatedFontChar_1 = require(\"../text/TesselatedFontChar\");\r\n/**\r\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\r\n *\r\n *\r\n * @see away.base.TriangleElements\r\n * @see away.entities.Sprite\r\n *\r\n * @class away.base.GraphicBase\r\n */\r\nvar TesselatedFontTable = (function (_super) {\r\n    __extends(TesselatedFontTable, _super);\r\n    //TODO test shader picking\r\n    //\t\tpublic get shaderPickingDetails():boolean\r\n    //\t\t{\r\n    //\r\n    //\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n    //\t\t}\r\n    /**\r\n     * Creates a new TesselatedFont object\r\n     */\r\n    function TesselatedFontTable() {\r\n        _super.call(this);\r\n        this._font_chars = [];\r\n        this._font_chars_dic = new Object();\r\n        this._ascent = 0;\r\n        this._descent = 0;\r\n        this._current_size = 0;\r\n        this._size_multiply = 0;\r\n        this._font_em_size = 0;\r\n    }\r\n    TesselatedFontTable.prototype.initFontSize = function (font_size) {\r\n        if (this._current_size == font_size)\r\n            return;\r\n        this._current_size = font_size;\r\n        this._size_multiply = font_size / this._font_em_size;\r\n    };\r\n    TesselatedFontTable.prototype.getCharVertCnt = function (char_code) {\r\n        var tesselated_font_char = this._font_chars_dic[char_code];\r\n        if (tesselated_font_char) {\r\n            return tesselated_font_char.elements.numVertices * 3;\r\n        }\r\n        return 0;\r\n    };\r\n    TesselatedFontTable.prototype.getCharWidth = function (char_code) {\r\n        var tesselated_font_char = this._font_chars_dic[char_code];\r\n        if (tesselated_font_char) {\r\n            return tesselated_font_char.char_width * this._size_multiply;\r\n        }\r\n        return 0;\r\n    };\r\n    TesselatedFontTable.prototype.getLineHeight = function () {\r\n        return 0;\r\n    };\r\n    Object.defineProperty(TesselatedFontTable.prototype, \"assetType\", {\r\n        get: function () {\r\n            return TesselatedFontTable.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     */\r\n    TesselatedFontTable.prototype.dispose = function () {\r\n    };\r\n    Object.defineProperty(TesselatedFontTable.prototype, \"ascent\", {\r\n        get: function () {\r\n            return this._ascent;\r\n        },\r\n        set: function (value) {\r\n            this._ascent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TesselatedFontTable.prototype, \"descent\", {\r\n        get: function () {\r\n            return this._descent;\r\n        },\r\n        set: function (value) {\r\n            this._descent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TesselatedFontTable.prototype, \"offset_x\", {\r\n        get: function () {\r\n            return this._offset_x;\r\n        },\r\n        set: function (value) {\r\n            this._offset_x = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TesselatedFontTable.prototype, \"offset_y\", {\r\n        get: function () {\r\n            return this._offset_y;\r\n        },\r\n        set: function (value) {\r\n            this._offset_y = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TesselatedFontTable.prototype.get_font_chars = function () {\r\n        return this._font_chars;\r\n    };\r\n    TesselatedFontTable.prototype.get_font_em_size = function () {\r\n        return this._font_em_size;\r\n    };\r\n    TesselatedFontTable.prototype.set_whitespace_width = function (value) {\r\n        this._whitespace_width = value;\r\n    };\r\n    TesselatedFontTable.prototype.get_whitespace_width = function () {\r\n        return this._whitespace_width;\r\n    };\r\n    TesselatedFontTable.prototype.set_font_em_size = function (font_em_size) {\r\n        this._font_em_size = font_em_size;\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    TesselatedFontTable.prototype.getChar = function (name) {\r\n        return this._font_chars_dic[name];\r\n    };\r\n    /**\r\n     *\r\n     */\r\n    TesselatedFontTable.prototype.setChar = function (name, elements, char_width) {\r\n        var tesselated_font_char = new TesselatedFontChar_1.TesselatedFontChar(elements);\r\n        tesselated_font_char.char_width = char_width;\r\n        elements.name = name;\r\n        this._font_chars.push(tesselated_font_char);\r\n        this._font_chars_dic[name] = tesselated_font_char;\r\n    };\r\n    TesselatedFontTable.assetType = \"[asset TesselatedFontTable]\";\r\n    return TesselatedFontTable;\r\n}(AssetBase_1.AssetBase));\r\nexports.TesselatedFontTable = TesselatedFontTable;\r\n},{\"../text/TesselatedFontChar\":\"awayjs-display/lib/text/TesselatedFontChar\",\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/TextFieldAutoSize\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nvar TextFieldAutoSize = (function () {\r\n    function TextFieldAutoSize() {\r\n    }\r\n    /**\r\n     * Specifies that the text is to be treated as center-justified text. Any\r\n     * resizing of a single line of a text field is equally distributed to both\r\n     * the right and left sides.\r\n     */\r\n    TextFieldAutoSize.CENTER = \"center\";\r\n    /**\r\n     * Specifies that the text is to be treated as left-justified text, meaning\r\n     * that the left side of the text field remains fixed and any resizing of a\r\n     * single line is on the right side.\r\n     */\r\n    TextFieldAutoSize.LEFT = \"left\";\r\n    /**\r\n     * Specifies that no resizing is to occur.\r\n     */\r\n    TextFieldAutoSize.NONE = \"none\";\r\n    /**\r\n     * Specifies that the text is to be treated as right-justified text, meaning\r\n     * that the right side of the text field remains fixed and any resizing of a\r\n     * single line is on the left side.\r\n     */\r\n    TextFieldAutoSize.RIGHT = \"right\";\r\n    return TextFieldAutoSize;\r\n}());\r\nexports.TextFieldAutoSize = TextFieldAutoSize;\r\n},{}],\"awayjs-display/lib/text/TextFieldType\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nvar TextFieldType = (function () {\r\n    function TextFieldType() {\r\n    }\r\n    /**\r\n     * Used to specify a <code>dynamic</code> TextField.\r\n     */\r\n    TextFieldType.DYNAMIC = \"dynamic\";\r\n    /**\r\n     * Used to specify an <code>input</code> TextField.\r\n     */\r\n    TextFieldType.INPUT = \"input\";\r\n    /**\r\n     * Used to specify an <code>static</code> TextField.\r\n     */\r\n    TextFieldType.STATIC = \"input\";\r\n    return TextFieldType;\r\n}());\r\nexports.TextFieldType = TextFieldType;\r\n},{}],\"awayjs-display/lib/text/TextFormatAlign\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nvar TextFormatAlign = (function () {\r\n    function TextFormatAlign() {\r\n        /**\r\n         * Constant; centers the text in the text field. Use the syntax\r\n         * <code>TextFormatAlign.CENTER</code>.\r\n         */\r\n        this.CENTER = \"center\";\r\n        /**\r\n         * Constant; justifies text within the text field. Use the syntax\r\n         * <code>TextFormatAlign.JUSTIFY</code>.\r\n         */\r\n        this.JUSTIFY = \"justify\";\r\n        /**\r\n         * Constant; aligns text to the left within the text field. Use the syntax\r\n         * <code>TextFormatAlign.LEFT</code>.\r\n         */\r\n        this.LEFT = \"left\";\r\n        /**\r\n         * Constant; aligns text to the right within the text field. Use the syntax\r\n         * <code>TextFormatAlign.RIGHT</code>.\r\n         */\r\n        this.RIGHT = \"right\";\r\n    }\r\n    return TextFormatAlign;\r\n}());\r\nexports.TextFormatAlign = TextFormatAlign;\r\n},{}],\"awayjs-display/lib/text/TextFormat\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nvar TextFormat = (function (_super) {\r\n    __extends(TextFormat, _super);\r\n    /**\r\n     * Creates a TextFormat object with the specified properties. You can then\r\n     * change the properties of the TextFormat object to change the formatting of\r\n     * text fields.\r\n     *\r\n     * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n     * not defined. All of the parameters are optional; any omitted parameters\r\n     * are treated as <code>null</code>.</p>\r\n     *\r\n     * @param font        The name of a font for text as a string.\r\n     * @param size        An integer that indicates the size in pixels.\r\n     * @param color       The color of text using this text format. A number\r\n     *                    containing three 8-bit RGB components; for example,\r\n     *                    0xFF0000 is red, and 0x00FF00 is green.\r\n     * @param bold        A Boolean value that indicates whether the text is\r\n     *                    boldface.\r\n     * @param italic      A Boolean value that indicates whether the text is\r\n     *                    italicized.\r\n     * @param underline   A Boolean value that indicates whether the text is\r\n     *                    underlined.\r\n     * @param url         The URL to which the text in this text format\r\n     *                    hyperlinks. If <code>url</code> is an empty string, the\r\n     *                    text does not have a hyperlink.\r\n     * @param target      The target window where the hyperlink is displayed. If\r\n     *                    the target window is an empty string, the text is\r\n     *                    displayed in the default target window\r\n     *                    <code>_self</code>. If the <code>url</code> parameter\r\n     *                    is set to an empty string or to the value\r\n     *                    <code>null</code>, you can get or set this property,\r\n     *                    but the property will have no effect.\r\n     * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n     *                    value.\r\n     * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n     * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n     * @param indent      An integer that indicates the indentation from the left\r\n     *                    margin to the first character in the paragraph.\r\n     * @param leading     A number that indicates the amount of leading vertical\r\n     *                    space between lines.\r\n     */\r\n    function TextFormat(font, size, color, bold, italic, underline, url, link_target, align, leftMargin, rightMargin, indent, leading) {\r\n        if (font === void 0) { font = \"Times New Roman\"; }\r\n        if (size === void 0) { size = 12; }\r\n        if (color === void 0) { color = 0x000000; }\r\n        if (bold === void 0) { bold = false; }\r\n        if (italic === void 0) { italic = false; }\r\n        if (underline === void 0) { underline = false; }\r\n        if (url === void 0) { url = \"\"; }\r\n        if (link_target === void 0) { link_target = \"\"; }\r\n        if (align === void 0) { align = \"left\"; }\r\n        if (leftMargin === void 0) { leftMargin = 0; }\r\n        if (rightMargin === void 0) { rightMargin = 0; }\r\n        if (indent === void 0) { indent = 0; }\r\n        if (leading === void 0) { leading = 0; }\r\n        _super.call(this);\r\n        /**\r\n         * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n         * stop is specified in pixels. If custom tab stops are not specified\r\n         * (<code>null</code>), the default tab stop is 4(average character width).\r\n         */\r\n        //todo: not used with in tesselated-font-table yet\r\n        this.tabStops = [];\r\n        this.font_name = font;\r\n        this.size = size;\r\n        this.bold = bold;\r\n        this.italic = italic;\r\n        this.underline = underline;\r\n        this.url = url;\r\n        this.link_target = link_target;\r\n        this.align = align;\r\n        this.leftMargin = leftMargin;\r\n        this.rightMargin = rightMargin;\r\n        this.indent = indent;\r\n        this.leading = leading;\r\n    }\r\n    Object.defineProperty(TextFormat.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         */\r\n        get: function () {\r\n            return TextFormat.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextFormat.assetType = \"[asset TextFormat]\";\r\n    return TextFormat;\r\n}(AssetBase_1.AssetBase));\r\nexports.TextFormat = TextFormat;\r\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/text/TextInteractionMode\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nvar TextInteractionMode = (function () {\r\n    function TextInteractionMode() {\r\n    }\r\n    /**\r\n     * The text field's default interaction mode is NORMAL and it varies across\r\n     * platform. On Desktop, the normal mode implies that the text field is in\r\n     * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n     * implies that the text field can only be scrolled but the text can not be\r\n     * selected.\r\n     */\r\n    TextInteractionMode.NORMAL = \"normal\";\r\n    /**\r\n     * On mobile platforms like Android, the text field starts in normal mode\r\n     * (which implies scroll and non-selectable mode). The user can switch to\r\n     * selection mode through the in-built context menu of the text field object.\r\n     */\r\n    TextInteractionMode.SELECTION = \"selection\";\r\n    return TextInteractionMode;\r\n}());\r\nexports.TextInteractionMode = TextInteractionMode;\r\n},{}],\"awayjs-display/lib/text/TextLineMetrics\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the\r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nvar TextLineMetrics = (function () {\r\n    /**\r\n     * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n     * information about the text metrics of a line of text in a text field.\r\n     * Objects of this class are returned by the\r\n     * away.entities.TextField.getLineMetrics() method.\r\n     *\r\n     * @param x           The left position of the first character in pixels.\r\n     * @param width       The width of the text of the selected lines (not\r\n     *                    necessarily the complete text) in pixels.\r\n     * @param height      The height of the text of the selected lines (not\r\n     *                    necessarily the complete text) in pixels.\r\n     * @param ascent      The length from the baseline to the top of the line\r\n     *                    height in pixels.\r\n     * @param descent     The length from the baseline to the bottom depth of\r\n     *                    the line in pixels.\r\n     * @param leading     The measurement of the vertical distance between the\r\n     *                    lines of text.\r\n     */\r\n    function TextLineMetrics(x, width, height, ascent, descent, leading) {\r\n        if (x === void 0) { x = NaN; }\r\n        if (width === void 0) { width = NaN; }\r\n        if (height === void 0) { height = NaN; }\r\n        if (ascent === void 0) { ascent = NaN; }\r\n        if (descent === void 0) { descent = NaN; }\r\n        if (leading === void 0) { leading = NaN; }\r\n    }\r\n    return TextLineMetrics;\r\n}());\r\nexports.TextLineMetrics = TextLineMetrics;\r\n},{}],\"awayjs-display/lib/text\":[function(require,module,exports){\n\"use strict\";\r\nvar AntiAliasType_1 = require(\"./text/AntiAliasType\");\r\nexports.AntiAliasType = AntiAliasType_1.AntiAliasType;\r\nvar Font_1 = require(\"./text/Font\");\r\nexports.Font = Font_1.Font;\r\nvar GridFitType_1 = require(\"./text/GridFitType\");\r\nexports.GridFitType = GridFitType_1.GridFitType;\r\nvar TesselatedFontTable_1 = require(\"./text/TesselatedFontTable\");\r\nexports.TesselatedFontTable = TesselatedFontTable_1.TesselatedFontTable;\r\nvar BitmapFontTable_1 = require(\"./text/BitmapFontTable\");\r\nexports.BitmapFontTable = BitmapFontTable_1.BitmapFontTable;\r\nvar TesselatedFontChar_1 = require(\"./text/TesselatedFontChar\");\r\nexports.TesselatedFontChar = TesselatedFontChar_1.TesselatedFontChar;\r\nvar BitmapFontChar_1 = require(\"./text/BitmapFontChar\");\r\nexports.BitmapFontChar = BitmapFontChar_1.BitmapFontChar;\r\nvar TextFieldAutoSize_1 = require(\"./text/TextFieldAutoSize\");\r\nexports.TextFieldAutoSize = TextFieldAutoSize_1.TextFieldAutoSize;\r\nvar TextFieldType_1 = require(\"./text/TextFieldType\");\r\nexports.TextFieldType = TextFieldType_1.TextFieldType;\r\nvar TextFormat_1 = require(\"./text/TextFormat\");\r\nexports.TextFormat = TextFormat_1.TextFormat;\r\nvar TextFormatAlign_1 = require(\"./text/TextFormatAlign\");\r\nexports.TextFormatAlign = TextFormatAlign_1.TextFormatAlign;\r\nvar TextInteractionMode_1 = require(\"./text/TextInteractionMode\");\r\nexports.TextInteractionMode = TextInteractionMode_1.TextInteractionMode;\r\nvar TextLineMetrics_1 = require(\"./text/TextLineMetrics\");\r\nexports.TextLineMetrics = TextLineMetrics_1.TextLineMetrics;\r\n},{\"./text/AntiAliasType\":\"awayjs-display/lib/text/AntiAliasType\",\"./text/BitmapFontChar\":\"awayjs-display/lib/text/BitmapFontChar\",\"./text/BitmapFontTable\":\"awayjs-display/lib/text/BitmapFontTable\",\"./text/Font\":\"awayjs-display/lib/text/Font\",\"./text/GridFitType\":\"awayjs-display/lib/text/GridFitType\",\"./text/TesselatedFontChar\":\"awayjs-display/lib/text/TesselatedFontChar\",\"./text/TesselatedFontTable\":\"awayjs-display/lib/text/TesselatedFontTable\",\"./text/TextFieldAutoSize\":\"awayjs-display/lib/text/TextFieldAutoSize\",\"./text/TextFieldType\":\"awayjs-display/lib/text/TextFieldType\",\"./text/TextFormat\":\"awayjs-display/lib/text/TextFormat\",\"./text/TextFormatAlign\":\"awayjs-display/lib/text/TextFormatAlign\",\"./text/TextInteractionMode\":\"awayjs-display/lib/text/TextInteractionMode\",\"./text/TextLineMetrics\":\"awayjs-display/lib/text/TextLineMetrics\"}],\"awayjs-display/lib/textures/MappingMode\":[function(require,module,exports){\n\"use strict\";\r\n/**\r\n\r\n\r\n */\r\nvar MappingMode = (function () {\r\n    function MappingMode() {\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    MappingMode.NORMAL = \"normal\";\r\n    /**\r\n     *\r\n     */\r\n    MappingMode.LINEAR_GRADIENT = \"linearGradient\";\r\n    /**\r\n     *\r\n     */\r\n    MappingMode.RADIAL_GRADIENT = \"radialGradient\";\r\n    return MappingMode;\r\n}());\r\nexports.MappingMode = MappingMode;\r\n},{}],\"awayjs-display/lib/textures/Single2DTexture\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ErrorBase_1 = require(\"awayjs-core/lib/errors/ErrorBase\");\r\nvar ImageUtils_1 = require(\"awayjs-core/lib/utils/ImageUtils\");\r\nvar MappingMode_1 = require(\"../textures/MappingMode\");\r\nvar TextureBase_1 = require(\"../textures/TextureBase\");\r\nvar Single2DTexture = (function (_super) {\r\n    __extends(Single2DTexture, _super);\r\n    function Single2DTexture(image2D) {\r\n        if (image2D === void 0) { image2D = null; }\r\n        _super.call(this);\r\n        this.setNumImages(1);\r\n        this.image2D = image2D;\r\n        this._mappingMode = MappingMode_1.MappingMode.NORMAL;\r\n    }\r\n    Object.defineProperty(Single2DTexture.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return Single2DTexture.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Single2DTexture.prototype, \"mappingMode\", {\r\n        get: function () {\r\n            return this._mappingMode;\r\n        },\r\n        set: function (value) {\r\n            if (this._mappingMode == value)\r\n                return;\r\n            this._mappingMode = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Single2DTexture.prototype, \"sampler2D\", {\r\n        /**\r\n         *\r\n         * @returns {Image2D}\r\n         */\r\n        get: function () {\r\n            return this._samplers[0];\r\n        },\r\n        set: function (value) {\r\n            if (this._samplers[0] == value)\r\n                return;\r\n            this.setSamplerAt(value, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Single2DTexture.prototype, \"image2D\", {\r\n        /**\r\n         *\r\n         * @returns {Image2D}\r\n         */\r\n        get: function () {\r\n            return this._images[0];\r\n        },\r\n        set: function (value) {\r\n            if (this._images[0] == value)\r\n                return;\r\n            if (!ImageUtils_1.ImageUtils.isImage2DValid(value))\r\n                throw new ErrorBase_1.ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n            this.setImageAt(value, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Single2DTexture.assetType = \"[texture Single2DTexture]\";\r\n    return Single2DTexture;\r\n}(TextureBase_1.TextureBase));\r\nexports.Single2DTexture = Single2DTexture;\r\n},{\"../textures/MappingMode\":\"awayjs-display/lib/textures/MappingMode\",\"../textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\",\"awayjs-core/lib/errors/ErrorBase\":undefined,\"awayjs-core/lib/utils/ImageUtils\":undefined}],\"awayjs-display/lib/textures/SingleCubeTexture\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar TextureBase_1 = require(\"../textures/TextureBase\");\r\nvar SingleCubeTexture = (function (_super) {\r\n    __extends(SingleCubeTexture, _super);\r\n    function SingleCubeTexture(imageCube) {\r\n        if (imageCube === void 0) { imageCube = null; }\r\n        _super.call(this);\r\n        this.setNumImages(1);\r\n        this.imageCube = imageCube;\r\n    }\r\n    Object.defineProperty(SingleCubeTexture.prototype, \"assetType\", {\r\n        /**\r\n         *\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return SingleCubeTexture.assetType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SingleCubeTexture.prototype, \"samplerCube\", {\r\n        /**\r\n         *\r\n         * @returns {Image2D}\r\n         */\r\n        get: function () {\r\n            return this._samplers[0];\r\n        },\r\n        set: function (value) {\r\n            if (this._samplers[0] == value)\r\n                return;\r\n            this.setSamplerAt(value, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SingleCubeTexture.prototype, \"imageCube\", {\r\n        /**\r\n         *\r\n         * @returns {ImageCube}\r\n         */\r\n        get: function () {\r\n            return this._images[0];\r\n        },\r\n        set: function (value) {\r\n            if (this._images[0] == value)\r\n                return;\r\n            this.setImageAt(value, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SingleCubeTexture.assetType = \"[texture SingleCubeTexture]\";\r\n    return SingleCubeTexture;\r\n}(TextureBase_1.TextureBase));\r\nexports.SingleCubeTexture = SingleCubeTexture;\r\n},{\"../textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\"}],\"awayjs-display/lib/textures/TextureBase\":[function(require,module,exports){\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AssetBase_1 = require(\"awayjs-core/lib/library/AssetBase\");\r\n/**\r\n *\r\n */\r\nvar TextureBase = (function (_super) {\r\n    __extends(TextureBase, _super);\r\n    /**\r\n     *\r\n     */\r\n    function TextureBase() {\r\n        _super.call(this);\r\n        this._numImages = 0;\r\n        this._images = new Array();\r\n        this._samplers = new Array();\r\n    }\r\n    TextureBase.prototype.getNumImages = function () {\r\n        return this._numImages;\r\n    };\r\n    TextureBase.prototype.setNumImages = function (value) {\r\n        if (this._numImages == value)\r\n            return;\r\n        this._numImages = value;\r\n        this._images.length = value;\r\n        this._samplers.length = value;\r\n        this.invalidate();\r\n    };\r\n    TextureBase.prototype.getImageAt = function (index) {\r\n        return this._images[index];\r\n    };\r\n    TextureBase.prototype.setImageAt = function (image, index) {\r\n        this._images[index] = image;\r\n        this.invalidate();\r\n    };\r\n    TextureBase.prototype.getSamplerAt = function (index) {\r\n        return this._samplers[index];\r\n    };\r\n    TextureBase.prototype.setSamplerAt = function (sampler, index) {\r\n        this._samplers[index] = sampler;\r\n        this.invalidate();\r\n    };\r\n    return TextureBase;\r\n}(AssetBase_1.AssetBase));\r\nexports.TextureBase = TextureBase;\r\n},{\"awayjs-core/lib/library/AssetBase\":undefined}],\"awayjs-display/lib/textures\":[function(require,module,exports){\n\"use strict\";\r\nvar MappingMode_1 = require(\"./textures/MappingMode\");\r\nexports.MappingMode = MappingMode_1.MappingMode;\r\nvar Single2DTexture_1 = require(\"./textures/Single2DTexture\");\r\nexports.Single2DTexture = Single2DTexture_1.Single2DTexture;\r\nvar SingleCubeTexture_1 = require(\"./textures/SingleCubeTexture\");\r\nexports.SingleCubeTexture = SingleCubeTexture_1.SingleCubeTexture;\r\nvar TextureBase_1 = require(\"./textures/TextureBase\");\r\nexports.TextureBase = TextureBase_1.TextureBase;\r\n},{\"./textures/MappingMode\":\"awayjs-display/lib/textures/MappingMode\",\"./textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"./textures/SingleCubeTexture\":\"awayjs-display/lib/textures/SingleCubeTexture\",\"./textures/TextureBase\":\"awayjs-display/lib/textures/TextureBase\"}],\"awayjs-display/lib/utils/Cast\":[function(require,module,exports){\n\"use strict\";\r\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\r\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\r\nvar CastError_1 = require(\"../errors/CastError\");\r\nvar Single2DTexture_1 = require(\"../textures/Single2DTexture\");\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nvar Cast = (function () {\r\n    function Cast() {\r\n    }\r\n    Cast.string = function (data) {\r\n        if (typeof (data) == 'function')\r\n            data = new data;\r\n        if (typeof (data) == 'string')\r\n            return data;\r\n        return data;\r\n    };\r\n    Cast.byteArray = function (data) {\r\n        if (typeof (data) == 'function')\r\n            data = new data;\r\n        if (data instanceof ByteArray_1.ByteArray)\r\n            return data;\r\n        return data;\r\n    };\r\n    //        public static xml(data:any):XML\r\n    //        {\r\n    //            if (typeof(data) == 'function')\r\n    //                data = new data;\r\n    //\r\n    //            if (data is XML)\r\n    //                return data;\r\n    //\r\n    //            return XML(data);\r\n    //        }\r\n    Cast.isHex = function (str) {\r\n        var length = str.length;\r\n        for (var i = 0; i < length; ++i) {\r\n            if (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    Cast.tryColor = function (data) {\r\n        if (typeof (data) == 'number' /*uint*/)\r\n            return Math.floor(data);\r\n        if (typeof (data) == 'string') {\r\n            if (data == \"random\")\r\n                return Math.floor(Math.random() * 0x1000000);\r\n            if (this._colorNames == null) {\r\n                this._colorNames = new Object();\r\n                this._colorNames[\"steelblue\"] = 0x4682B4;\r\n                this._colorNames[\"royalblue\"] = 0x041690;\r\n                this._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n                this._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n                this._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n                this._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n                this._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n                this._colorNames[\"midnightblue\"] = 0x191970;\r\n                this._colorNames[\"navy\"] = 0x000080;\r\n                this._colorNames[\"darkblue\"] = 0x00008B;\r\n                this._colorNames[\"mediumblue\"] = 0x0000CD;\r\n                this._colorNames[\"blue\"] = 0x0000FF;\r\n                this._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n                this._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n                this._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n                this._colorNames[\"skyblue\"] = 0x87CEEB;\r\n                this._colorNames[\"lightblue\"] = 0xADD8E6;\r\n                this._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n                this._colorNames[\"azure\"] = 0xF0FFFF;\r\n                this._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n                this._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n                this._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n                this._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n                this._colorNames[\"darkcyan\"] = 0x008B8B;\r\n                this._colorNames[\"teal\"] = 0x008080;\r\n                this._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n                this._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n                this._colorNames[\"aqua\"] = 0x00FFFF;\r\n                this._colorNames[\"cyan\"] = 0x00FFFF;\r\n                this._colorNames[\"turquoise\"] = 0x40E0D0;\r\n                this._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n                this._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n                this._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n                this._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n                this._colorNames[\"seagreen\"] = 0x2E8B57;\r\n                this._colorNames[\"darkgreen\"] = 0x006400;\r\n                this._colorNames[\"green\"] = 0x008000;\r\n                this._colorNames[\"forestgreen\"] = 0x228B22;\r\n                this._colorNames[\"limegreen\"] = 0x32CD32;\r\n                this._colorNames[\"lime\"] = 0x00FF00;\r\n                this._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n                this._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n                this._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n                this._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n                this._colorNames[\"palegreen\"] = 0x98FB98;\r\n                this._colorNames[\"lightgreen\"] = 0x90EE90;\r\n                this._colorNames[\"springgreen\"] = 0x00FF7F;\r\n                this._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n                this._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n                this._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n                this._colorNames[\"olive\"] = 0x808000;\r\n                this._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n                this._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n                this._colorNames[\"goldenrod\"] = 0xDAA520;\r\n                this._colorNames[\"gold\"] = 0xFFD700;\r\n                this._colorNames[\"yellow\"] = 0xFFFF00;\r\n                this._colorNames[\"khaki\"] = 0xF0E68C;\r\n                this._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n                this._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n                this._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n                this._colorNames[\"wheat\"] = 0xF5DEB3;\r\n                this._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n                this._colorNames[\"burlywood\"] = 0xDEB887;\r\n                this._colorNames[\"tan\"] = 0xD2B48C;\r\n                this._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n                this._colorNames[\"sienna\"] = 0xA0522D;\r\n                this._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n                this._colorNames[\"chocolate\"] = 0xD2691E;\r\n                this._colorNames[\"peru\"] = 0xCD853F;\r\n                this._colorNames[\"sandybrown\"] = 0xF4A460;\r\n                this._colorNames[\"darkred\"] = 0x8B0000;\r\n                this._colorNames[\"maroon\"] = 0x800000;\r\n                this._colorNames[\"brown\"] = 0xA52A2A;\r\n                this._colorNames[\"firebrick\"] = 0xB22222;\r\n                this._colorNames[\"indianred\"] = 0xCD5C5C;\r\n                this._colorNames[\"lightcoral\"] = 0xF08080;\r\n                this._colorNames[\"salmon\"] = 0xFA8072;\r\n                this._colorNames[\"darksalmon\"] = 0xE9967A;\r\n                this._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n                this._colorNames[\"coral\"] = 0xFF7F50;\r\n                this._colorNames[\"tomato\"] = 0xFF6347;\r\n                this._colorNames[\"darkorange\"] = 0xFF8C00;\r\n                this._colorNames[\"orange\"] = 0xFFA500;\r\n                this._colorNames[\"orangered\"] = 0xFF4500;\r\n                this._colorNames[\"crimson\"] = 0xDC143C;\r\n                this._colorNames[\"red\"] = 0xFF0000;\r\n                this._colorNames[\"deeppink\"] = 0xFF1493;\r\n                this._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n                this._colorNames[\"magenta\"] = 0xFF00FF;\r\n                this._colorNames[\"hotpink\"] = 0xFF69B4;\r\n                this._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n                this._colorNames[\"pink\"] = 0xFFC0CB;\r\n                this._colorNames[\"palevioletred\"] = 0xDB7093;\r\n                this._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n                this._colorNames[\"purple\"] = 0x800080;\r\n                this._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n                this._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n                this._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n                this._colorNames[\"indigo\"] = 0x4B0082;\r\n                this._colorNames[\"darkviolet\"] = 0x9400D3;\r\n                this._colorNames[\"darkorchid\"] = 0x9932CC;\r\n                this._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n                this._colorNames[\"orchid\"] = 0xDA70D6;\r\n                this._colorNames[\"violet\"] = 0xEE82EE;\r\n                this._colorNames[\"plum\"] = 0xDDA0DD;\r\n                this._colorNames[\"thistle\"] = 0xD8BFD8;\r\n                this._colorNames[\"lavender\"] = 0xE6E6FA;\r\n                this._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n                this._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n                this._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n                this._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n                this._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n                this._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n                this._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n                this._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n                this._colorNames[\"ivory\"] = 0xFFFFF0;\r\n                this._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n                this._colorNames[\"linen\"] = 0xFAF0E6;\r\n                this._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n                this._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n                this._colorNames[\"bisque\"] = 0xFFE4C4;\r\n                this._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n                this._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n                this._colorNames[\"beige\"] = 0xF5F5DC;\r\n                this._colorNames[\"seashell\"] = 0xFFF5EE;\r\n                this._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n                this._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n                this._colorNames[\"snow\"] = 0xFFFAFA;\r\n                this._colorNames[\"white\"] = 0xFFFFFF;\r\n                this._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n                this._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n                this._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n                this._colorNames[\"silver\"] = 0xC0C0C0;\r\n                this._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n                this._colorNames[\"grey\"] = 0x808080;\r\n                this._colorNames[\"lightslategrey\"] = 0x778899;\r\n                this._colorNames[\"slategrey\"] = 0x708090;\r\n                this._colorNames[\"dimgrey\"] = 0x696969;\r\n                this._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n                this._colorNames[\"black\"] = 0x000000;\r\n                this._colorNames[\"transparent\"] = 0xFF000000;\r\n            }\r\n            if (this._colorNames[data] != null)\r\n                return this._colorNames[data];\r\n            if ((data.length == 6) && this.isHex(data))\r\n                return parseInt(\"0x\" + data);\r\n        }\r\n        return null;\r\n    };\r\n    Cast.color = function (data) {\r\n        var result = this.tryColor(data);\r\n        if (result == null)\r\n            throw new CastError_1.CastError(\"Can't cast to color: \" + data);\r\n        return result;\r\n    };\r\n    Cast.tryClass = function (name) {\r\n        if (this._notClasses[name])\r\n            return name;\r\n        var result = this._classes[name];\r\n        if (result != null)\r\n            return result;\r\n        try {\r\n            result = window[name];\r\n            this._classes[name] = result;\r\n            return result;\r\n        }\r\n        catch (e /*ReferenceError*/) {\r\n        }\r\n        this._notClasses[name] = true;\r\n        return name;\r\n    };\r\n    Cast.image2D = function (data) {\r\n        if (data == null)\r\n            return null;\r\n        if (typeof (data) == 'string')\r\n            data = this.tryClass(data);\r\n        if (typeof (data) == 'function') {\r\n            try {\r\n                data = new data();\r\n            }\r\n            catch (e /*ArgumentError*/) {\r\n                data = new data(0, 0);\r\n            }\r\n        }\r\n        if (data instanceof Image2D_1.Image2D)\r\n            return data;\r\n        if (data instanceof Single2DTexture_1.Single2DTexture)\r\n            data = data.image2D;\r\n        throw new CastError_1.CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n    };\r\n    Cast.bitmapTexture = function (data) {\r\n        if (data == null)\r\n            return null;\r\n        if (typeof (data) == 'string')\r\n            data = this.tryClass(data);\r\n        if (typeof (data) == 'function') {\r\n            try {\r\n                data = new data();\r\n            }\r\n            catch (e /*ArgumentError*/) {\r\n                data = new data(0, 0);\r\n            }\r\n        }\r\n        if (data instanceof Single2DTexture_1.Single2DTexture)\r\n            return data;\r\n        try {\r\n            var bmd = Cast.image2D(data);\r\n            return new Single2DTexture_1.Single2DTexture(bmd);\r\n        }\r\n        catch (e /*CastError*/) {\r\n        }\r\n        throw new CastError_1.CastError(\"Can't cast to Single2DTexture: \" + data);\r\n    };\r\n    Cast._hexChars = \"0123456789abcdefABCDEF\";\r\n    Cast._notClasses = new Object();\r\n    Cast._classes = new Object();\r\n    return Cast;\r\n}());\r\nexports.Cast = Cast;\r\n},{\"../errors/CastError\":\"awayjs-display/lib/errors/CastError\",\"../textures/Single2DTexture\":\"awayjs-display/lib/textures/Single2DTexture\",\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-core/lib/utils/ByteArray\":undefined}],\"awayjs-display/lib/utils/ElementsUtils\":[function(require,module,exports){\n\"use strict\";\r\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nvar Float3Attributes_1 = require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nvar Float4Attributes_1 = require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nvar Byte4Attributes_1 = require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\r\nvar Box_1 = require(\"awayjs-core/lib/geom/Box\");\r\nvar Sphere_1 = require(\"awayjs-core/lib/geom/Sphere\");\r\nvar HitTestCache_1 = require(\"../graphics/HitTestCache\");\r\nvar ElementsUtils = (function () {\r\n    function ElementsUtils() {\r\n    }\r\n    ElementsUtils.generateFaceNormals = function (indexAttributes, positionAttributes, faceNormalAttributes, count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var indices = indexAttributes.get(count, offset);\r\n        var positions = positionAttributes.get(positionAttributes.count);\r\n        if (faceNormalAttributes == null)\r\n            faceNormalAttributes = new Float4Attributes_1.Float4Attributes(count + offset);\r\n        else if (faceNormalAttributes.count < count + offset)\r\n            faceNormalAttributes.count = count + offset;\r\n        var indexDim = indexAttributes.stride;\r\n        var posDim = positionAttributes.dimensions;\r\n        var posStride = positionAttributes.stride;\r\n        var faceNormals = faceNormalAttributes.get(count, offset);\r\n        var len = count * indexDim;\r\n        var i = 0;\r\n        var j = 0;\r\n        var index;\r\n        var x1, x2, x3;\r\n        var y1, y2, y3;\r\n        var z1, z2, z3;\r\n        var dx1, dy1, dz1;\r\n        var dx2, dy2, dz2;\r\n        var cx, cy, cz;\r\n        var d;\r\n        if (posDim == 3) {\r\n            for (i = 0; i < len; i += indexDim) {\r\n                index = indices[i] * posStride;\r\n                x1 = positions[index];\r\n                y1 = positions[index + 1];\r\n                z1 = positions[index + 2];\r\n                index = indices[i + 1] * posStride;\r\n                x2 = positions[index];\r\n                y2 = positions[index + 1];\r\n                z2 = positions[index + 2];\r\n                index = indices[i + 2] * posStride;\r\n                x3 = positions[index];\r\n                y3 = positions[index + 1];\r\n                z3 = positions[index + 2];\r\n                dx1 = x3 - x1;\r\n                dy1 = y3 - y1;\r\n                dz1 = z3 - z1;\r\n                dx2 = x2 - x1;\r\n                dy2 = y2 - y1;\r\n                dz2 = z2 - z1;\r\n                cx = dz1 * dy2 - dy1 * dz2;\r\n                cy = dx1 * dz2 - dz1 * dx2;\r\n                cz = dy1 * dx2 - dx1 * dy2;\r\n                d = Math.sqrt(cx * cx + cy * cy + cz * cz);\r\n                // length of cross product = 2*triangle area\r\n                faceNormals[j++] = cx;\r\n                faceNormals[j++] = cy;\r\n                faceNormals[j++] = cz;\r\n                faceNormals[j++] = d;\r\n            }\r\n        }\r\n        else if (posDim == 2) {\r\n            for (i = 0; i < len; i += indexDim) {\r\n                faceNormals[j++] = 0;\r\n                faceNormals[j++] = 0;\r\n                faceNormals[j++] = 1;\r\n                faceNormals[j++] = 1;\r\n            }\r\n        }\r\n        return faceNormalAttributes;\r\n    };\r\n    ElementsUtils.generateNormals = function (indexAttributes, faceNormalAttributes, normalAttributes, concatenatedBuffer) {\r\n        var indices = indexAttributes.get(indexAttributes.count);\r\n        var faceNormals = faceNormalAttributes.get(faceNormalAttributes.count);\r\n        if (normalAttributes == null)\r\n            normalAttributes = new Float3Attributes_1.Float3Attributes(concatenatedBuffer);\r\n        var indexDim = indexAttributes.dimensions;\r\n        var normalStride = normalAttributes.stride;\r\n        var normals = normalAttributes.get(normalAttributes.count);\r\n        var i;\r\n        var len = normalAttributes.count * normalStride;\r\n        //clear normal values\r\n        for (i = 0; i < len; i += normalStride) {\r\n            normals[i] = 0;\r\n            normals[i + 1] = 0;\r\n            normals[i + 2] = 0;\r\n        }\r\n        len = indexAttributes.count * indexDim;\r\n        var index;\r\n        var f1 = 0;\r\n        var f2 = 1;\r\n        var f3 = 2;\r\n        //collect face normals\r\n        for (i = 0; i < len; i += indexDim) {\r\n            index = indices[i] * normalStride;\r\n            normals[index] += faceNormals[f1];\r\n            normals[index + 1] += faceNormals[f2];\r\n            normals[index + 2] += faceNormals[f3];\r\n            index = indices[i + 1] * normalStride;\r\n            normals[index] += faceNormals[f1];\r\n            normals[index + 1] += faceNormals[f2];\r\n            normals[index + 2] += faceNormals[f3];\r\n            index = indices[i + 2] * normalStride;\r\n            normals[index] += faceNormals[f1];\r\n            normals[index + 1] += faceNormals[f2];\r\n            normals[index + 2] += faceNormals[f3];\r\n            f1 += 4;\r\n            f2 += 4;\r\n            f3 += 4;\r\n        }\r\n        len = normalAttributes.count * normalStride;\r\n        var vx;\r\n        var vy;\r\n        var vz;\r\n        var d;\r\n        //normalise normals collections\r\n        for (i = 0; i < len; i += normalStride) {\r\n            vx = normals[i];\r\n            vy = normals[i + 1];\r\n            vz = normals[i + 2];\r\n            d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\r\n            normals[i] = vx * d;\r\n            normals[i + 1] = vy * d;\r\n            normals[i + 2] = vz * d;\r\n        }\r\n        return normalAttributes;\r\n    };\r\n    ElementsUtils.generateFaceTangents = function (indexAttributes, positionAttributes, uvAttributes, faceTangentAttributes, count, offset, useFaceWeights) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (useFaceWeights === void 0) { useFaceWeights = false; }\r\n        var indices = indexAttributes.get(count, offset);\r\n        var positions = positionAttributes.get(positionAttributes.count);\r\n        var uvs = uvAttributes.get(uvAttributes.count);\r\n        if (faceTangentAttributes == null)\r\n            faceTangentAttributes = new Float4Attributes_1.Float4Attributes(count + offset);\r\n        else if (faceTangentAttributes.count < count + offset)\r\n            faceTangentAttributes.count = count + offset;\r\n        var indexDim = indexAttributes.dimensions;\r\n        var posDim = positionAttributes.dimensions;\r\n        var posStride = positionAttributes.stride;\r\n        var uvStride = uvAttributes.stride;\r\n        var faceTangents = faceTangentAttributes.get(count, offset);\r\n        var i = 0;\r\n        var index1;\r\n        var index2;\r\n        var index3;\r\n        var v0;\r\n        var v1;\r\n        var v2;\r\n        var dv1;\r\n        var dv2;\r\n        var denom;\r\n        var x0, y0, z0;\r\n        var dx1, dy1, dz1;\r\n        var dx2, dy2, dz2;\r\n        var cx, cy, cz;\r\n        //multiply by dimension to get index length\r\n        var len = count * indexDim;\r\n        for (i = 0; i < len; i += indexDim) {\r\n            index1 = indices[i];\r\n            index2 = indices[i + 1];\r\n            index3 = indices[i + 2];\r\n            v0 = uvs[index1 * uvStride + 1];\r\n            dv1 = uvs[index2 * uvStride + 1] - v0;\r\n            dv2 = uvs[index3 * uvStride + 1] - v0;\r\n            v0 = index1 * posStride;\r\n            v1 = index2 * posStride;\r\n            v2 = index3 * posStride;\r\n            x0 = positions[v0];\r\n            dx1 = positions[v1] - x0;\r\n            dx2 = positions[v2] - x0;\r\n            cx = dv2 * dx1 - dv1 * dx2;\r\n            y0 = positions[v0 + 1];\r\n            dy1 = positions[v1 + 1] - y0;\r\n            dy2 = positions[v2 + 1] - y0;\r\n            cy = dv2 * dy1 - dv1 * dy2;\r\n            if (posDim == 3) {\r\n                z0 = positions[v0 + 2];\r\n                dz1 = positions[v1 + 2] - z0;\r\n                dz2 = positions[v2 + 2] - z0;\r\n                cz = dv2 * dz1 - dv1 * dz2;\r\n            }\r\n            else {\r\n                cz = 0;\r\n            }\r\n            denom = 1 / Math.sqrt(cx * cx + cy * cy + cz * cz);\r\n            faceTangents[i] = denom * cx;\r\n            faceTangents[i + 1] = denom * cy;\r\n            faceTangents[i + 2] = denom * cz;\r\n        }\r\n        return faceTangentAttributes;\r\n    };\r\n    ElementsUtils.generateTangents = function (indexAttributes, faceTangentAttributes, faceNormalAttributes, tangentAttributes, concatenatedBuffer) {\r\n        var indices = indexAttributes.get(indexAttributes.count);\r\n        var faceTangents = faceTangentAttributes.get(faceTangentAttributes.count);\r\n        var faceNormals = faceNormalAttributes.get(faceNormalAttributes.count);\r\n        if (tangentAttributes == null)\r\n            tangentAttributes = new Float3Attributes_1.Float3Attributes(concatenatedBuffer);\r\n        var indexDim = indexAttributes.dimensions;\r\n        var tangentStride = tangentAttributes.stride;\r\n        var tangents = tangentAttributes.get(tangentAttributes.count);\r\n        var i;\r\n        var len = tangentAttributes.count * tangentStride;\r\n        //clear tangent values\r\n        for (i = 0; i < len; i += tangentStride) {\r\n            tangents[i] = 0;\r\n            tangents[i + 1] = 0;\r\n            tangents[i + 2] = 0;\r\n        }\r\n        var weight;\r\n        var index;\r\n        var f1 = 0;\r\n        var f2 = 1;\r\n        var f3 = 2;\r\n        var f4 = 3;\r\n        len = indexAttributes.count * indexDim;\r\n        //collect face tangents\r\n        for (i = 0; i < len; i += indexDim) {\r\n            weight = faceNormals[f4];\r\n            index = indices[i] * tangentStride;\r\n            tangents[index++] += faceTangents[f1] * weight;\r\n            tangents[index++] += faceTangents[f2] * weight;\r\n            tangents[index] += faceTangents[f3] * weight;\r\n            index = indices[i + 1] * tangentStride;\r\n            tangents[index++] += faceTangents[f1] * weight;\r\n            tangents[index++] += faceTangents[f2] * weight;\r\n            tangents[index] += faceTangents[f3] * weight;\r\n            index = indices[i + 2] * tangentStride;\r\n            tangents[index++] += faceTangents[f1] * weight;\r\n            tangents[index++] += faceTangents[f2] * weight;\r\n            tangents[index] += faceTangents[f3] * weight;\r\n            f1 += 3;\r\n            f2 += 3;\r\n            f3 += 3;\r\n            f4 += 4;\r\n        }\r\n        var vx;\r\n        var vy;\r\n        var vz;\r\n        var d;\r\n        //normalise tangents collections\r\n        for (i = 0; i < len; i += tangentStride) {\r\n            vx = tangents[i];\r\n            vy = tangents[i + 1];\r\n            vz = tangents[i + 2];\r\n            d = 1.0 / Math.sqrt(vx * vx + vy * vy + vz * vz);\r\n            tangents[i] = vx * d;\r\n            tangents[i + 1] = vy * d;\r\n            tangents[i + 2] = vz * d;\r\n        }\r\n        return tangentAttributes;\r\n    };\r\n    ElementsUtils.generateColors = function (indexAttributes, colorAttributes, concatenatedBuffer, count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (colorAttributes == null)\r\n            colorAttributes = new Byte4Attributes_1.Byte4Attributes(concatenatedBuffer);\r\n        if (colorAttributes.count < count + offset)\r\n            colorAttributes.count = count + offset;\r\n        var colors = colorAttributes.get(count, offset);\r\n        var colorStride = colorAttributes.stride;\r\n        var len = colorAttributes.count * colorStride;\r\n        for (var i = 0; i < len; i += colorStride) {\r\n            colors[i] = 0xFF;\r\n            colors[i + 1] = 0xFF;\r\n            colors[i + 2] = 0xFF;\r\n            colors[i + 3] = 0xFF;\r\n        }\r\n        return colorAttributes;\r\n    };\r\n    ElementsUtils.scale = function (scaleA, scaleB, scaleC, output, count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        if (output.count < count + offset)\r\n            output.count = count + offset;\r\n        var scaleArray = new Float32Array([scaleA, scaleB, scaleC]);\r\n        var values = output.get(count, offset);\r\n        var outputStride = output.stride;\r\n        var outputDim = output.dimensions;\r\n        var i;\r\n        var j;\r\n        var len = count * outputStride;\r\n        for (i = 0; i < len; i += outputStride)\r\n            for (j = 0; j < outputDim; j++)\r\n                values[i + j] *= scaleArray[j];\r\n        output.invalidate();\r\n    };\r\n    ElementsUtils.applyTransformation = function (transform, positionAttributes, normalAttributes, tangentAttributes, count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        //todo: make this compatible with 2-dimensional positions\r\n        var positions = positionAttributes.get(count, offset);\r\n        var positionStride = positionAttributes.stride;\r\n        var normals;\r\n        var normalStride;\r\n        if (normalAttributes) {\r\n            normals = normalAttributes.get(count, offset);\r\n            normalStride = normalAttributes.stride;\r\n        }\r\n        var tangents;\r\n        var tangentStride;\r\n        if (tangentAttributes) {\r\n            tangents = tangentAttributes.get(count, offset);\r\n            tangentStride = tangentAttributes.stride;\r\n        }\r\n        var i;\r\n        var i1;\r\n        var i2;\r\n        var vector = new Vector3D_1.Vector3D();\r\n        var invTranspose;\r\n        if (normalAttributes || tangentAttributes) {\r\n            invTranspose = transform.clone();\r\n            invTranspose.invert();\r\n            invTranspose.transpose();\r\n        }\r\n        var vi0 = 0;\r\n        var ni0 = 0;\r\n        var ti0 = 0;\r\n        for (i = 0; i < count; ++i) {\r\n            // bake position\r\n            i1 = vi0 + 1;\r\n            i2 = vi0 + 2;\r\n            vector.x = positions[vi0];\r\n            vector.y = positions[i1];\r\n            vector.z = positions[i2];\r\n            vector = transform.transformVector(vector);\r\n            positions[vi0] = vector.x;\r\n            positions[i1] = vector.y;\r\n            positions[i2] = vector.z;\r\n            vi0 += positionStride;\r\n            if (normals) {\r\n                // bake normal\r\n                i1 = ni0 + 1;\r\n                i2 = ni0 + 2;\r\n                vector.x = normals[ni0];\r\n                vector.y = normals[i1];\r\n                vector.z = normals[i2];\r\n                vector = invTranspose.deltaTransformVector(vector);\r\n                vector.normalize();\r\n                normals[ni0] = vector.x;\r\n                normals[i1] = vector.y;\r\n                normals[i2] = vector.z;\r\n                ni0 += normalStride;\r\n            }\r\n            if (tangents) {\r\n                // bake tangent\r\n                i1 = ti0 + 1;\r\n                i2 = ti0 + 2;\r\n                vector.x = tangents[ti0];\r\n                vector.y = tangents[i1];\r\n                vector.z = tangents[i2];\r\n                vector = invTranspose.deltaTransformVector(vector);\r\n                vector.normalize();\r\n                tangents[ti0] = vector.x;\r\n                tangents[i1] = vector.y;\r\n                tangents[i2] = vector.z;\r\n                ti0 += tangentStride;\r\n            }\r\n        }\r\n        positionAttributes.invalidate();\r\n        if (normalAttributes)\r\n            normalAttributes.invalidate();\r\n        if (tangentAttributes)\r\n            tangentAttributes.invalidate();\r\n    };\r\n    ElementsUtils.getSubIndices = function (indexAttributes, numVertices, indexMappings, indexOffset) {\r\n        if (indexOffset === void 0) { indexOffset = 0; }\r\n        var buffer = indexAttributes.attributesBuffer;\r\n        var numIndices = indexAttributes.length;\r\n        //reset mappings\r\n        indexMappings.length = 0;\r\n        //shortcut for those buffers that fit into the maximum buffer sizes\r\n        if (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\r\n            return buffer;\r\n        var i;\r\n        var indices = indexAttributes.get(indexAttributes.count, indexOffset);\r\n        var splitIndices = new Array();\r\n        var indexSwap = ElementsUtils._indexSwap;\r\n        indexSwap.length = numIndices;\r\n        for (i = 0; i < numIndices; i++)\r\n            indexSwap[i] = -1;\r\n        var originalIndex;\r\n        var splitIndex;\r\n        var index = 0;\r\n        var offsetLength = indexOffset * indexAttributes.dimensions;\r\n        // Loop over all triangles\r\n        i = 0;\r\n        while (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\r\n            originalIndex = indices[i];\r\n            if (indexSwap[originalIndex] >= 0) {\r\n                splitIndex = indexSwap[originalIndex];\r\n            }\r\n            else {\r\n                // This vertex does not yet exist in the split list and\r\n                // needs to be copied from the long list.\r\n                splitIndex = index++;\r\n                indexSwap[originalIndex] = splitIndex;\r\n                indexMappings[splitIndex] = originalIndex;\r\n            }\r\n            // Store new index, which may have come from the swap look-up,\r\n            // or from copying a new set of vertex data from the original vector\r\n            splitIndices[i++] = splitIndex;\r\n        }\r\n        buffer = new AttributesBuffer_1.AttributesBuffer(indexAttributes.size * indexAttributes.dimensions, splitIndices.length / indexAttributes.dimensions);\r\n        indexAttributes = indexAttributes.clone(buffer);\r\n        indexAttributes.set(splitIndices);\r\n        return buffer;\r\n    };\r\n    ElementsUtils.getSubVertices = function (vertexBuffer, indexMappings) {\r\n        if (!indexMappings.length)\r\n            return vertexBuffer;\r\n        var stride = vertexBuffer.stride;\r\n        var vertices = vertexBuffer.bufferView;\r\n        var splitVerts = new Uint8Array(indexMappings.length * stride);\r\n        var splitIndex;\r\n        var originalIndex;\r\n        var i = 0;\r\n        var j = 0;\r\n        var len = indexMappings.length;\r\n        for (i = 0; i < len; i++) {\r\n            splitIndex = i * stride;\r\n            originalIndex = indexMappings[i] * stride;\r\n            for (j = 0; j < stride; j++)\r\n                splitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n        }\r\n        vertexBuffer = new AttributesBuffer_1.AttributesBuffer(stride, len);\r\n        vertexBuffer.bufferView = splitVerts;\r\n        return vertexBuffer;\r\n    };\r\n    //TODO - generate this dyanamically based on num tris\r\n    ElementsUtils.hitTestTriangleElements = function (x, y, z, box, triangleElements, count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var positionAttributes = triangleElements.positions;\r\n        var curveAttributes = triangleElements.getCustomAtributes(\"curves\");\r\n        var posStride = positionAttributes.stride;\r\n        var curveStride = curveAttributes.stride;\r\n        var positions = positionAttributes.get(count, offset);\r\n        var curves = curveAttributes ? curveAttributes.get(count, offset) : null;\r\n        var id0;\r\n        var id1;\r\n        var id2;\r\n        var ax;\r\n        var ay;\r\n        var bx;\r\n        var by;\r\n        var cx;\r\n        var cy;\r\n        var hitTestCache = triangleElements.hitTestCache[offset] || (triangleElements.hitTestCache[offset] = new HitTestCache_1.HitTestCache());\r\n        var index = -1; //hitTestCache.lastCollisionIndex;\r\n        if (index != -1 && index < count) {\r\n            precheck: {\r\n                id0 = index + 2;\r\n                id1 = index + 1;\r\n                id2 = index + 0;\r\n                ax = positions[id0 * posStride];\r\n                ay = positions[id0 * posStride + 1];\r\n                bx = positions[id1 * posStride];\r\n                by = positions[id1 * posStride + 1];\r\n                cx = positions[id2 * posStride];\r\n                cy = positions[id2 * posStride + 1];\r\n                //console.log(ax, ay, bx, by, cx, cy);\r\n                //from a to p\r\n                var dx = ax - x;\r\n                var dy = ay - y;\r\n                //edge normal (a-b)\r\n                var nx = by - ay;\r\n                var ny = -(bx - ax);\r\n                //console.log(ax,ay,bx,by,cx,cy);\r\n                var dot = (dx * nx) + (dy * ny);\r\n                if (dot > 0)\r\n                    break precheck;\r\n                dx = bx - x;\r\n                dy = by - y;\r\n                nx = cy - by;\r\n                ny = -(cx - bx);\r\n                dot = (dx * nx) + (dy * ny);\r\n                if (dot > 0)\r\n                    break precheck;\r\n                dx = cx - x;\r\n                dy = cy - y;\r\n                nx = ay - cy;\r\n                ny = -(ax - cx);\r\n                dot = (dx * nx) + (dy * ny);\r\n                if (dot > 0)\r\n                    break precheck;\r\n                if (curves) {\r\n                    //check if not solid\r\n                    if (curves[id0 * curveStride + 2] != -128) {\r\n                        var v0x = bx - ax;\r\n                        var v0y = by - ay;\r\n                        var v1x = cx - ax;\r\n                        var v1y = cy - ay;\r\n                        var v2x = x - ax;\r\n                        var v2y = y - ay;\r\n                        var den = v0x * v1y - v1x * v0y;\r\n                        var v = (v2x * v1y - v1x * v2y) / den;\r\n                        var w = (v0x * v2y - v2x * v0y) / den;\r\n                        //var u:number = 1 - v - w;\t//commented out as inlined away\r\n                        //here be dragons\r\n                        var uu = 0.5 * v + w;\r\n                        var vv = w;\r\n                        var d = uu * uu - vv;\r\n                        var az = curves[id0 * curveStride];\r\n                        if (d > 0 && az == -128) {\r\n                            break precheck;\r\n                            ;\r\n                        }\r\n                        else if (d < 0 && az == 127) {\r\n                            break precheck;\r\n                            ;\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        //hard coded min vertex count to bother using a grid for\r\n        if (count > 150) {\r\n            var cells = hitTestCache.cells;\r\n            var divisions = cells.length ? hitTestCache.divisions : (hitTestCache.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\r\n            var conversionX = divisions / box.width;\r\n            var conversionY = divisions / box.height;\r\n            var minx = box.x;\r\n            var miny = box.y;\r\n            if (!cells.length) {\r\n                //now we have bounds start creating grid cells and filling\r\n                cells.length = divisions * divisions;\r\n                for (var k = 0; k < count; k += 3) {\r\n                    id0 = k + 2;\r\n                    id1 = k + 1;\r\n                    id2 = k + 0;\r\n                    ax = positions[id0 * posStride];\r\n                    ay = positions[id0 * posStride + 1];\r\n                    bx = positions[id1 * posStride];\r\n                    by = positions[id1 * posStride + 1];\r\n                    cx = positions[id2 * posStride];\r\n                    cy = positions[id2 * posStride + 1];\r\n                    //subtractions to push into positive space\r\n                    var min_index_x = Math.floor((Math.min(ax, bx, cx) - minx) * conversionX);\r\n                    var min_index_y = Math.floor((Math.min(ay, by, cy) - miny) * conversionY);\r\n                    var max_index_x = Math.floor((Math.max(ax, bx, cx) - minx) * conversionX);\r\n                    var max_index_y = Math.floor((Math.max(ay, by, cy) - miny) * conversionY);\r\n                    for (var i = min_index_x; i <= max_index_x; i++) {\r\n                        for (var j = min_index_y; j <= max_index_y; j++) {\r\n                            var index = i + j * divisions;\r\n                            var nodes = cells[index] || (cells[index] = new Array());\r\n                            //push in the triangle ids\r\n                            nodes.push(id0, id1, id2);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            var index_x = Math.floor((x - minx) * conversionX);\r\n            var index_y = Math.floor((y - miny) * conversionY);\r\n            if ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\r\n                return false;\r\n            var nodes = cells[index_x + index_y * divisions];\r\n            if (nodes == null)\r\n                return false;\r\n            var nodeCount = nodes.length;\r\n            for (var k = 0; k < nodeCount; k += 3) {\r\n                id2 = nodes[k + 2];\r\n                if (id2 == index)\r\n                    continue;\r\n                id1 = nodes[k + 1];\r\n                id0 = nodes[k];\r\n                ax = positions[id0 * posStride];\r\n                ay = positions[id0 * posStride + 1];\r\n                bx = positions[id1 * posStride];\r\n                by = positions[id1 * posStride + 1];\r\n                cx = positions[id2 * posStride];\r\n                cy = positions[id2 * posStride + 1];\r\n                //from a to p\r\n                var dx = ax - x;\r\n                var dy = ay - y;\r\n                //edge normal (a-b)\r\n                var nx = by - ay;\r\n                var ny = -(bx - ax);\r\n                var dot = (dx * nx) + (dy * ny);\r\n                if (dot > 0)\r\n                    continue;\r\n                dx = bx - x;\r\n                dy = by - y;\r\n                nx = cy - by;\r\n                ny = -(cx - bx);\r\n                dot = (dx * nx) + (dy * ny);\r\n                if (dot > 0)\r\n                    continue;\r\n                dx = cx - x;\r\n                dy = cy - y;\r\n                nx = ay - cy;\r\n                ny = -(ax - cx);\r\n                dot = (dx * nx) + (dy * ny);\r\n                if (dot > 0)\r\n                    continue;\r\n                if (curves) {\r\n                    //check if not solid\r\n                    if (curves[id0 * curveStride + 2] != -128) {\r\n                        var v0x = bx - ax;\r\n                        var v0y = by - ay;\r\n                        var v1x = cx - ax;\r\n                        var v1y = cy - ay;\r\n                        var v2x = x - ax;\r\n                        var v2y = y - ay;\r\n                        var den = v0x * v1y - v1x * v0y;\r\n                        var v = (v2x * v1y - v1x * v2y) / den;\r\n                        var w = (v0x * v2y - v2x * v0y) / den;\r\n                        //var u:number = 1 - v - w;\t//commented out as inlined away\r\n                        //here be dragons\r\n                        var uu = 0.5 * v + w;\r\n                        var vv = w;\r\n                        var d = uu * uu - vv;\r\n                        var az = curves[id0 * curveStride];\r\n                        if (d > 0 && az == -128)\r\n                            continue;\r\n                        else if (d < 0 && az == 127)\r\n                            continue;\r\n                    }\r\n                }\r\n                hitTestCache.lastCollisionIndex = id2;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        //brute force\r\n        for (var k = 0; k < count; k += 3) {\r\n            id2 = k + 0;\r\n            if (id2 == index)\r\n                continue;\r\n            id1 = k + 1;\r\n            id0 = k + 2;\r\n            ax = positions[id0 * posStride];\r\n            ay = positions[id0 * posStride + 1];\r\n            bx = positions[id1 * posStride];\r\n            by = positions[id1 * posStride + 1];\r\n            cx = positions[id2 * posStride];\r\n            cy = positions[id2 * posStride + 1];\r\n            //console.log(ax, ay, bx, by, cx, cy);\r\n            //from a to p\r\n            var dx = ax - x;\r\n            var dy = ay - y;\r\n            //edge normal (a-b)\r\n            var nx = by - ay;\r\n            var ny = -(bx - ax);\r\n            //console.log(ax,ay,bx,by,cx,cy);\r\n            var dot = (dx * nx) + (dy * ny);\r\n            if (dot > 0)\r\n                continue;\r\n            dx = bx - x;\r\n            dy = by - y;\r\n            nx = cy - by;\r\n            ny = -(cx - bx);\r\n            dot = (dx * nx) + (dy * ny);\r\n            if (dot > 0)\r\n                continue;\r\n            dx = cx - x;\r\n            dy = cy - y;\r\n            nx = ay - cy;\r\n            ny = -(ax - cx);\r\n            dot = (dx * nx) + (dy * ny);\r\n            if (dot > 0)\r\n                continue;\r\n            if (curves) {\r\n                //check if not solid\r\n                if (curves[id0 * curveStride + 2] != -128) {\r\n                    var v0x = bx - ax;\r\n                    var v0y = by - ay;\r\n                    var v1x = cx - ax;\r\n                    var v1y = cy - ay;\r\n                    var v2x = x - ax;\r\n                    var v2y = y - ay;\r\n                    var den = v0x * v1y - v1x * v0y;\r\n                    var v = (v2x * v1y - v1x * v2y) / den;\r\n                    var w = (v0x * v2y - v2x * v0y) / den;\r\n                    //var u:number = 1 - v - w;\t//commented out as inlined away\r\n                    //here be dragons\r\n                    var uu = 0.5 * v + w;\r\n                    var vv = w;\r\n                    var d = uu * uu - vv;\r\n                    var az = curves[id0 * curveStride];\r\n                    if (d > 0 && az == -128) {\r\n                        continue;\r\n                    }\r\n                    else if (d < 0 && az == 127) {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            hitTestCache.lastCollisionIndex = id2;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ElementsUtils.getTriangleGraphicsBoxBounds = function (positionAttributes, output, count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var positions = positionAttributes.get(count, offset);\r\n        var posDim = positionAttributes.dimensions;\r\n        var posStride = positionAttributes.stride;\r\n        var pos;\r\n        var minX = 0, minY = 0, minZ = 0;\r\n        var maxX = 0, maxY = 0, maxZ = 0;\r\n        var len = count * posStride;\r\n        for (var i = 0; i < len; i += posStride) {\r\n            if (i == 0) {\r\n                maxX = minX = positions[i];\r\n                maxY = minY = positions[i + 1];\r\n                maxZ = minZ = (posDim == 3) ? positions[i + 2] : 0;\r\n            }\r\n            else {\r\n                pos = positions[i];\r\n                if (pos < minX)\r\n                    minX = pos;\r\n                else if (pos > maxX)\r\n                    maxX = pos;\r\n                pos = positions[i + 1];\r\n                if (pos < minY)\r\n                    minY = pos;\r\n                else if (pos > maxY)\r\n                    maxY = pos;\r\n                if (posDim == 3) {\r\n                    pos = positions[i + 2];\r\n                    if (pos < minZ)\r\n                        minZ = pos;\r\n                    else if (pos > maxZ)\r\n                        maxZ = pos;\r\n                }\r\n            }\r\n        }\r\n        if (output == null)\r\n            output = new Box_1.Box();\r\n        output.x = minX;\r\n        output.y = minY;\r\n        output.z = minZ;\r\n        output.right = maxX;\r\n        output.bottom = maxY;\r\n        output.back = maxZ;\r\n        return output;\r\n    };\r\n    ElementsUtils.getTriangleGraphicsSphereBounds = function (positionAttributes, center, output, count, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var positions = positionAttributes.get(count, offset);\r\n        var posDim = positionAttributes.dimensions;\r\n        var posStride = positionAttributes.stride;\r\n        var maxRadiusSquared = 0;\r\n        var radiusSquared;\r\n        var len = count * posStride;\r\n        var distanceX;\r\n        var distanceY;\r\n        var distanceZ;\r\n        for (var i = 0; i < len; i += posStride) {\r\n            distanceX = positions[i] - center.x;\r\n            distanceY = positions[i + 1] - center.y;\r\n            distanceZ = (posDim == 3) ? positions[i + 2] - center.z : -center.z;\r\n            radiusSquared = distanceX * distanceX + distanceY * distanceY + distanceZ * distanceZ;\r\n            if (maxRadiusSquared < radiusSquared)\r\n                maxRadiusSquared = radiusSquared;\r\n        }\r\n        if (output == null)\r\n            output = new Sphere_1.Sphere();\r\n        output.x = center.x;\r\n        output.y = center.y;\r\n        output.z = center.z;\r\n        output.radius = Math.sqrt(maxRadiusSquared);\r\n        return output;\r\n    };\r\n    ElementsUtils.tempFloat32x4 = new Float32Array(4);\r\n    ElementsUtils.LIMIT_VERTS = 0xffff;\r\n    ElementsUtils.LIMIT_INDICES = 0xffffff;\r\n    ElementsUtils._indexSwap = new Array();\r\n    return ElementsUtils;\r\n}());\r\nexports.ElementsUtils = ElementsUtils;\r\n},{\"../graphics/HitTestCache\":\"awayjs-display/lib/graphics/HitTestCache\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/attributes/Byte4Attributes\":undefined,\"awayjs-core/lib/attributes/Float3Attributes\":undefined,\"awayjs-core/lib/attributes/Float4Attributes\":undefined,\"awayjs-core/lib/geom/Box\":undefined,\"awayjs-core/lib/geom/Sphere\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-display/lib/utils\":[function(require,module,exports){\n\"use strict\";\r\nvar Cast_1 = require(\"./utils/Cast\");\r\nexports.Cast = Cast_1.Cast;\r\nvar ElementsUtils_1 = require(\"./utils/ElementsUtils\");\r\nexports.ElementsUtils = ElementsUtils_1.ElementsUtils;\r\n},{\"./utils/Cast\":\"awayjs-display/lib/utils/Cast\",\"./utils/ElementsUtils\":\"awayjs-display/lib/utils/ElementsUtils\"}]},{},[1])\n\n",
    "import * as adapters\t\t\t\tfrom \"./lib/adapters\";\r\nimport * as animators\t\t\t\tfrom \"./lib/animators\";\r\nimport * as base\t\t\t\t\tfrom \"./lib/base\";\r\nimport * as bounds\t\t\t\t\tfrom \"./lib/bounds\";\r\nimport * as controllers\t\t\t\tfrom \"./lib/controllers\";\r\nimport * as display\t\t\t\t\tfrom \"./lib/display\";\r\nimport * as draw\t\t\t\t\tfrom \"./lib/draw\";\r\nimport * as errors\t\t\t\t\tfrom \"./lib/errors\";\r\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\r\nimport * as factories\t\t\t\tfrom \"./lib/factories\";\r\nimport * as graphics\t\t\t\tfrom \"./lib/graphics\";\r\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\r\nimport * as materials\t\t\t\tfrom \"./lib/materials\";\r\nimport * as partition\t\t\t\tfrom \"./lib/partition\";\r\nimport * as pick\t\t\t\t\tfrom \"./lib/pick\";\r\nimport * as prefabs\t\t\t\t\tfrom \"./lib/prefabs\";\r\nimport * as text\t\t\t\t\tfrom \"./lib/text\";\r\nimport * as textures\t\t\t\tfrom \"./lib/textures\";\r\nimport * as utils\t\t\t\t\tfrom \"./lib/utils\";\r\nimport {IRenderer}\t\t\t\t\tfrom \"./lib/IRenderer\";\r\nimport {ITraverser}\t\t\t\t\tfrom \"./lib/ITraverser\";\r\nimport {View}\t\t\t\t\t\t\tfrom \"./lib/View\";\r\n\r\npartition.PartitionBase.registerAbstraction(partition.CameraNode, display.Camera);\r\npartition.PartitionBase.registerAbstraction(partition.DirectionalLightNode, display.DirectionalLight);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Sprite);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Shape);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.MovieClip);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.Billboard);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.LineSegment);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextField);\r\npartition.PartitionBase.registerAbstraction(partition.EntityNode, display.TextFieldMultiRender);\r\npartition.PartitionBase.registerAbstraction(partition.LightProbeNode, display.LightProbe);\r\npartition.PartitionBase.registerAbstraction(partition.PointLightNode, display.PointLight);\r\npartition.PartitionBase.registerAbstraction(partition.SkyboxNode, display.Skybox);\r\n\r\nexport {\r\n\tadapters,\r\n\tanimators,\r\n\tbase,\r\n\tbounds,\r\n\tcontrollers,\r\n\tdisplay,\r\n\tdraw,\r\n\terrors,\r\n\tevents,\r\n\tfactories,\r\n\tgraphics,\r\n\tmanagers,\r\n\tmaterials,\r\n\tpartition,\r\n\tpick,\r\n\tprefabs,\r\n\ttext,\r\n\ttextures,\r\n\tutils,\r\n\tIRenderer,\r\n\tITraverser,\r\n\tView\r\n}\r\n\r\n",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {getTimer}\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/getTimer\";\r\n\r\nimport {IRenderer}\t\t\t\t\tfrom \"./IRenderer\";\r\nimport {DisplayObject}\t\t\t\tfrom \"./display/DisplayObject\";\r\nimport {TouchPoint}\t\t\t\t\tfrom \"./base/TouchPoint\";\r\nimport {Scene}\t\t\t\t\t\tfrom \"./display/Scene\";\r\nimport {IPicker}\t\t\t\t\t\tfrom \"./pick/IPicker\";\r\nimport {PickingCollision}\t\t\t\tfrom \"./pick/PickingCollision\";\r\nimport {RaycastPicker}\t\t\t\tfrom \"./pick/RaycastPicker\";\r\nimport {Camera}\t\t\t\t\t\tfrom \"./display/Camera\";\r\nimport {CameraEvent}\t\t\t\t\tfrom \"./events/CameraEvent\";\r\nimport {DisplayObjectEvent}\t\t\tfrom \"./events/DisplayObjectEvent\";\r\nimport {RendererEvent}\t\t\t\tfrom \"./events/RendererEvent\";\r\nimport {MouseManager}\t\t\t\t\tfrom \"./managers/MouseManager\";\r\n\r\nexport class View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t ******************clear********************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\tpublic _pTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tif(document) {\r\n\t\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\t\tdocument.body.appendChild(this._htmlElement);\r\n\t\t}\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tget touchPoints():Array<TouchPoint>\r\n\t{\r\n\t\treturn this._pTouchPoints;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\tpublic getLocalTouchPoints(displayObject:DisplayObject):Array<TouchPoint>\r\n\t{\r\n\t\tvar localPosition:Vector3D;\r\n\t\tvar localTouchPoints:Array<TouchPoint> = new Array<TouchPoint>();\r\n\r\n\t\tvar len:number = this._pTouchPoints.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tlocalPosition = displayObject.inverseSceneTransform.transformVector(this.unproject(this._pTouchPoints[i].x, this._pTouchPoints[i].y, 1000));\r\n\t\t\tlocalTouchPoints.push(new TouchPoint(localPosition.x, localPosition.y, this._pTouchPoints[i].id));\r\n\t\t}\r\n\r\n\t\treturn localTouchPoints;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tif(this._htmlElement) {\r\n\t\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tif(this._htmlElement) {\r\n\t\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tif(this._htmlElement) {\r\n\t\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tif(this._htmlElement) {\r\n\t\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement && this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif(this._htmlElement) {\r\n\t\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t}\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render():void\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//render the contents of the scene\r\n\t\tthis._pRenderer.render(this._pCamera, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate _onPartitionChanged(event:DisplayObjectEvent):void\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onProjectionChanged(event:CameraEvent):void\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onViewportUpdated(event:RendererEvent):void\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onScissorUpdated(event:RendererEvent):void\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider():void\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollision = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollision == null || collidingObject.rayEntryDistance < this._mouseManager._iCollision.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollision = collidingObject;\r\n\t\t}\r\n\t}\r\n}",
    "export {IDisplayObjectAdapter}\t\t\tfrom \"./adapters/IDisplayObjectAdapter\";\r\nexport {IMovieClipAdapter}\t\t\t\tfrom \"./adapters/IMovieClipAdapter\";",
    "import {TriangleElements}\t\t\t\tfrom \"../../graphics/TriangleElements\";\r\n\r\nexport class ParticleData\r\n{\r\n\tpublic particleIndex:number /*uint*/;\r\n\tpublic numVertices:number /*uint*/;\r\n\tpublic startVertexIndex:number /*uint*/;\r\n\tpublic elements:TriangleElements;\r\n}\r\n\r\nexport default ParticleData",
    "import {AssetBase}\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nexport class AnimationNodeBase extends AssetBase\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}",
    "export {ParticleData}\t\t\t\t\tfrom \"./animators/data/ParticleData\";\r\nexport {AnimationNodeBase}\t\t\t\tfrom \"./animators/nodes/AnimationNodeBase\";\r\nexport {IAnimationSet}\t\t\t\t\tfrom \"./animators/IAnimationSet\";\r\nexport {IAnimator}\t\t\t\t\t\tfrom \"./animators/IAnimator\";",
    "/**\r\n *\r\n */\r\nexport class AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}",
    "/**\r\n *\r\n */\r\nexport class HierarchicalProperties\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MOUSE_ENABLED:number = 1;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static VISIBLE:number = 2;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASK_ID:number = 4;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static MASKS:number = 8;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static COLOR_TRANSFORM:number = 16;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SCENE_TRANSFORM:number = 32;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ALL:number = 63;\r\n}",
    "export class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}",
    "import {ImageBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\r\nimport {SamplerBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\r\nimport {Matrix}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\r\n\r\nimport {EventDispatcher}\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\r\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\r\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\r\n\r\n/**\r\n *\r\n */\r\nexport class Style extends EventDispatcher\r\n{\r\n\tprivate _sampler:SamplerBase;\r\n\tprivate _samplers:Object = new Object();\r\n\tprivate _image:ImageBase;\r\n\tprivate _images:Object = new Object();\r\n\tprivate _uvMatrix:Matrix;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\r\n\tpublic get sampler():SamplerBase\r\n\t{\r\n\t\treturn this._sampler;\r\n\t}\r\n\r\n\tpublic set sampler(value:SamplerBase)\r\n\t{\r\n\t\tif (this._sampler == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._sampler = value;\r\n\r\n\t\tthis._invalidateProperties();\r\n\t}\r\n\r\n\tpublic get image():ImageBase\r\n\t{\r\n\t\treturn this._image;\r\n\t}\r\n\r\n\tpublic set image(value:ImageBase)\r\n\t{\r\n\t\tif (this._image == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._image = value;\r\n\r\n\t\tthis._invalidateProperties();\r\n\t}\r\n\r\n\tpublic get uvMatrix():Matrix\r\n\t{\r\n\t\treturn this._uvMatrix;\r\n\t}\r\n\r\n\tpublic set uvMatrix(value:Matrix)\r\n\t{\r\n\t\tif (this._uvMatrix == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._uvMatrix = value;\r\n\r\n\t\tthis._invalidateProperties();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._invalidateProperties();\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic getImageAt(texture:TextureBase, index:number = 0):ImageBase\r\n\t{\r\n\t\treturn (this._images[texture.id]? this._images[texture.id][index] : null) || this._image;\r\n\t}\r\n\r\n\tpublic getSamplerAt(texture:TextureBase, index:number = 0):SamplerBase\r\n\t{\r\n\t\treturn (this._samplers[texture.id]? this._samplers[texture.id][index] : null) || this._sampler;\r\n\t}\r\n\r\n\tpublic addImageAt(image:ImageBase, texture:TextureBase, index:number = 0):void\r\n\t{\r\n\t\tif (!this._images[texture.id])\r\n\t\t\tthis._images[texture.id] = new Array<ImageBase>();\r\n\r\n\t\tthis._images[texture.id][index] = image;\r\n\t}\r\n\r\n\tpublic addSamplerAt(sampler:SamplerBase, texture:TextureBase, index:number = 0):void\r\n\t{\r\n\t\tif (!this._samplers[texture.id])\r\n\t\t\tthis._samplers[texture.id] = new Array<SamplerBase>();\r\n\r\n\t\tthis._samplers[texture.id][index] = sampler;\r\n\r\n\t\tthis._invalidateProperties();\r\n\t}\r\n\r\n\r\n\tpublic removeImageAt(texture:TextureBase, index:number = 0):void\r\n\t{\r\n\t\tif (!this._images[texture.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._images[texture.id][index] = null;\r\n\r\n\t\tthis._invalidateProperties();\r\n\t}\r\n\r\n\tpublic removeSamplerAt(texture:TextureBase, index:number = 0):void\r\n\t{\r\n\t\tif (!this._samplers[texture.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplers[texture.id][index] = null;\r\n\r\n\t\tthis._invalidateProperties();\r\n\t}\r\n\r\n\tprivate _invalidateProperties():void\r\n\t{\r\n\t\tthis.dispatchEvent(new StyleEvent(StyleEvent.INVALIDATE_PROPERTIES, this));\r\n\t}\r\n}\r\n",
    "import {HierarchicalProperties}\t\t\tfrom \"../base/HierarchicalProperties\";\r\nimport {MovieClip}\t\t\t\t\t\tfrom \"../display/MovieClip\";\r\nimport {DisplayObject}\t\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {ColorTransform}\t\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {FrameScriptManager}\t\t\t\tfrom \"../managers/FrameScriptManager\";\r\n\r\n\r\nexport class Timeline\r\n{\r\n\tprivate _functions:Array<(child:DisplayObject, target_mc:MovieClip, i:number) => void> = [];\r\n\tprivate _blocked:boolean;\r\n\tpublic _update_indices:Array<number> = [];\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices = [];\r\n\r\n\t\tthis._potentialPrototypes = [];\r\n\t\tthis._labels = {};\r\n\t\tthis._framescripts = {};\r\n\t\tthis._framescripts_translated = {};\r\n\r\n\t\t//cache functions\r\n\t\tthis._functions[1] = this.update_mtx_all;\r\n\t\tthis._functions[2] = this.update_colortransform;\r\n\t\tthis._functions[3] = this.update_masks;\r\n\t\tthis._functions[4] = this.update_name;\r\n\t\tthis._functions[5] = this.update_button_name;\r\n\t\tthis._functions[6] = this.update_visibility;\r\n\t\tthis._functions[7] = this.update_blendmode;\r\n\t\tthis._functions[8] = this.update_rendermode;\r\n\t\tthis._functions[11] = this.update_mtx_scale_rot;\r\n\t\tthis._functions[12] = this.update_mtx_pos;\r\n\t\tthis._functions[200] = this.enable_maskmode;\r\n\t\tthis._functions[201] = this.remove_masks;\r\n\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices == null)||(this.frame_recipe == null)||(this.keyframe_durations == null))\r\n\t\t\treturn;\r\n\r\n\t\tthis.keyframe_firstframes = [];\r\n\t\tthis.keyframe_constructframes = [];\r\n\t\tvar frame_cnt = 0;\r\n\t\tvar ic = 0;\r\n\t\tvar ic2 = 0;\r\n\t\tvar keyframe_cnt = 0;\r\n\t\tvar last_construct_frame = 0;\r\n\t\tfor(ic = 0; ic < this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif(this.frame_recipe[ic] & 1)\r\n\t\t\t\tlast_construct_frame = keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt] = frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++] = last_construct_frame;\r\n\r\n\t\t\tfor(ic2 = 0; ic2 < duration; ic2++)\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++] = ic;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index] == null)\r\n\t\t\treturn \"\";\r\n\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number):void\r\n\t{\r\n\t\tif(FrameScriptManager.frameScriptDebug){\r\n\t\t\t// if we are in debug mode, we try to extract the function name from the first line of framescript code,\r\n\t\t\t// and check if this function is available on the object that is set as frameScriptDebug\r\n\t\t\t// try to get the functions name (it should be the first line as comment)\r\n\t\t\tvar functionname = value.split(/[\\r\\n]+/g)[0].split(\"//\")[1];\r\n\t\t\tif(FrameScriptManager.frameScriptDebug[functionname]){\r\n\t\t\t\tthis._framescripts[keyframe_index] = FrameScriptManager.frameScriptDebug[functionname];\r\n\t\t\t\tthis._framescripts_translated[keyframe_index]=true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthrow new Error(\"Framescript could not be found on FrameScriptManager.frameScriptDebug.\\n the Object set as FrameScriptmanager.frameScriptDebug should contain a function with the name '\"+functionname+\"' !!!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\tif(scriptPass1)\r\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n\t\t\telse\r\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tvar this_clone:DisplayObject = this._potentialPrototypes[id].clone();\r\n\t\tthis_clone.name = \"\";\r\n\t\treturn this_clone;\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index >= 0)\r\n\t\t\ttarget_mc.currentFrameIndex = this.keyframe_firstframes[key_frame_index];\r\n\t}\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value:number, skip_script:boolean = false):void\r\n\t{\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\r\n\t\t\treturn;\r\n\r\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\tthis.constructNextFrame(target_mc, !skip_script, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump forward, but not jump a gap, we start at current_keyframe_idx + 1\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number = (jump_forward && !jump_gap)? current_keyframe_idx + 1 : break_frame_idx;\r\n\r\n\t\tvar i:number;\r\n\t\tvar k:number;\r\n\r\n\t\tif (jump_gap) // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--)\r\n\t\t\t\tif (target_mc._children[i]._depthID < 0)\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\r\n\t\t//if we jump back, we want to reset all objects (but not the timelines of the mcs)\r\n\t\tif (!jump_forward)\r\n\t\t\ttarget_mc.resetSessionIDs();\r\n\r\n\t\t// in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\tvar depth_sessionIDs:Object = target_mc.getSessionIDDepths();\r\n\r\n\t\t//pass1: only apply add/remove commands into depth_sessionIDs.\r\n\t\tthis.pass1(start_construct_idx, target_keyframe_idx, depth_sessionIDs);\r\n\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames have their properties reset if we are jumping back\r\n\t\tvar child:DisplayObject;\r\n\t\tfor (i = target_mc.numChildren - 1; i >= 0; i--) {\r\n\t\t\tchild = target_mc._children[i];\r\n\t\t\tif (child._depthID < 0) {\r\n\t\t\t\tif (depth_sessionIDs[child._depthID] != child._sessionID) {\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t\t} else if (!jump_forward) {\r\n\t\t\t\t\tif(child.adapter) {\r\n\t\t\t\t\t\tif (!child.adapter.isBlockedByScript()) {\r\n\t\t\t\t\t\t\tchild.transform.clearMatrix3D();\r\n\t\t\t\t\t\t\tchild.transform.clearColorTransform();\r\n\t\t\t\t\t\t\t//this.name=\"\";\r\n\t\t\t\t\t\t\tchild.masks = null;\r\n\t\t\t\t\t\t\tchild.maskMode = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!child.adapter.isVisibilityByScript()) {\r\n\t\t\t\t\t\t\tchild.visible = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// now we need to addchild the objects that were added before targetframe first\r\n\t\t// than we can add the script of the targetframe\r\n\t\t// than we can addchild objects added on targetframe\r\n\t\tfor (var key in depth_sessionIDs) {\r\n\t\t\tchild = target_mc.getPotentialChildInstance(this.add_child_stream[depth_sessionIDs[key]*2]);\r\n\t\t\tif (child._sessionID == -1)\r\n\t\t\t\ttarget_mc._addTimelineChildAt(child, Number(key), depth_sessionIDs[key]);\r\n\t\t}\r\n\r\n\t\tif (!skip_script && this.keyframe_firstframes[target_keyframe_idx] == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\r\n\r\n\t\t//pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tthis.pass2(target_mc);\r\n\r\n\t\ttarget_mc.constructedKeyFrameIndex = target_keyframe_idx;\r\n\t}\r\n\r\n\tpublic pass1(start_construct_idx:number, target_keyframe_idx:number, depth_sessionIDs:Object):void\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar k:number;\r\n\r\n\t\tthis._update_indices.length = 0;// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt = 0;\r\n\t\tvar start_index:number;\r\n\t\tvar end_index:number;\r\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\r\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\r\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\r\n\r\n\t\t\tif (frame_recipe & 2) {\r\n\t\t\t\t// remove childs\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor (i = start_index; i < end_index; i++)\r\n\t\t\t\t\tdelete depth_sessionIDs[this.remove_child_stream[i] - 16383];\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 4) {\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tend_index = start_index + this.command_length_stream[frame_command_idx++];\r\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t\t\t// this could be changed in exporter\r\n\t\t\t\tfor (i = end_index - 1; i >= start_index; i--)\r\n\t\t\t\t\tdepth_sessionIDs[this.add_child_stream[i*2 + 1] - 16383] = i;\r\n\t\t\t}\r\n\r\n\t\t\tif (frame_recipe & 8)\r\n\t\t\t\tthis._update_indices[update_cnt++] = frame_command_idx;// execute update command later\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pass2(target_mc:MovieClip):void\r\n\t{\r\n\t\tvar k:number;\r\n\t\tvar len:number = this._update_indices.length;\r\n\t\tfor (k = 0; k < len; k++)\r\n\t\t\tthis.update_childs(target_mc, this._update_indices[k]);\r\n\t}\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean = true, scriptPass1:Boolean = false):void\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif(queueScript && this.keyframe_firstframes[new_keyFrameIndex] == frameIndex)\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n\r\n\t\tif(target_mc.constructedKeyFrameIndex != new_keyFrameIndex) {\r\n\t\t\ttarget_mc.constructedKeyFrameIndex = new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx = this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe = this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif(frame_recipe & 1) {\r\n\t\t\t\tfor (var i:number = target_mc.numChildren - 1; i >= 0; i--)\r\n\t\t\t\t\tif (target_mc._children[i]._depthID < 0)\r\n\t\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t} else if (frame_recipe & 2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, frame_command_idx++);\r\n\t\t\t}\r\n\r\n\t\t\tif(frame_recipe & 4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, frame_command_idx++);\r\n\r\n\t\t\tif(frame_recipe & 8)\r\n\t\t\t\tthis.update_childs(target_mc, frame_command_idx++);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number):void\r\n\t{\r\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\r\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\r\n\t\tfor(var i:number = start_index; i < end_index; i++)\r\n\t\t\tsourceMovieClip.removeChildAt(sourceMovieClip.getDepthIndexInternal(this.remove_child_stream[i] - 16383));\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, frame_command_idx:number):void\r\n\t{\r\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t// this could be changed in exporter\r\n\t\tvar idx:number;\r\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\r\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\r\n\t\tfor (var i:number = end_index - 1; i >= start_index; i--) {\r\n\t\t\tidx = i*2;\r\n\t\t\tsourceMovieClip._addTimelineChildAt(sourceMovieClip.getPotentialChildInstance(this.add_child_stream[idx]), this.add_child_stream[idx + 1] - 16383, i);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(target_mc:MovieClip, frame_command_idx:number):void\r\n\t{\r\n\t\tvar p:number;\r\n\t\tvar props_start_idx:number;\r\n\t\tvar props_end_index:number;\r\n\t\tvar start_index:number = this.command_index_stream[frame_command_idx];\r\n\t\tvar end_index:number = start_index + this.command_length_stream[frame_command_idx];\r\n\t\tvar child:DisplayObject;\r\n\t\tfor(var i:number = start_index; i < end_index; i++) {\r\n\t\t\tchild = target_mc.getChildAtSessionID(this.update_child_stream[i]);\r\n\t\t\tif (child) {\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tthis._blocked = Boolean(child.adapter && child.adapter.isBlockedByScript());\r\n\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\r\n\t\t\t\tprops_end_index = props_start_idx + this.update_child_props_length_stream[i];\r\n\t\t\t\tfor(p = props_start_idx; p < props_end_index; p++)\r\n\t\t\t\t\tthis._functions[this.property_type_stream[p]].call(this, child, target_mc, this.property_index_stream[p]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_mtx_all(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tif (this._blocked)\r\n\t\t\treturn;\r\n\r\n\t\ti *= 6;\r\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\r\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[i++];\r\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[i++];\r\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[i++];\r\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[i++];\r\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[i++];\r\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[i];\r\n\r\n\t\tchild.transform.invalidateComponents();\r\n\t}\r\n\r\n\tpublic update_colortransform(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tif (this._blocked)\r\n\t\t\treturn;\r\n\r\n\t\ti *= 8;\r\n\t\tvar new_ct:ColorTransform = child.transform.colorTransform || (child.transform.colorTransform = new ColorTransform());\r\n\t\tnew_ct.rawData[0] = this.properties_stream_f32_ct[i++];\r\n\t\tnew_ct.rawData[1] = this.properties_stream_f32_ct[i++];\r\n\t\tnew_ct.rawData[2] = this.properties_stream_f32_ct[i++];\r\n\t\tnew_ct.rawData[3] = this.properties_stream_f32_ct[i++];\r\n\t\tnew_ct.rawData[4] = this.properties_stream_f32_ct[i++];\r\n\t\tnew_ct.rawData[5] = this.properties_stream_f32_ct[i++];\r\n\t\tnew_ct.rawData[6] = this.properties_stream_f32_ct[i++];\r\n\t\tnew_ct.rawData[7] = this.properties_stream_f32_ct[i];\r\n\r\n\t\tchild.transform.invalidateColorTransform();\r\n\t}\r\n\r\n\tpublic update_masks(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\t// an object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n\t\t// this is not implmeented in the runtime yet\r\n\t\t// for now, a second mask-groupd would overwrite the first one\r\n\t\tvar mask:DisplayObject;\r\n\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\tvar numMasks:number = this.properties_stream_int[i++];\r\n\r\n\t\t//mask may not exist if a goto command moves the playhead to a point in the timeline after\r\n\t\t//one of the masks in a mask array has already been removed. Therefore a check is needed.\r\n\t\tfor(var m:number = 0; m < numMasks; m++)\r\n\t\t\tif((mask = target_mc.getChildAtSessionID(this.properties_stream_int[i++])))\r\n\t\t\t\tmasks.push(mask);\r\n\r\n\r\n\t\tchild.masks = masks;\r\n\t}\r\n\r\n\tpublic update_name(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tchild.name = this.properties_stream_strings[i];\r\n\t\ttarget_mc.adapter.registerScriptObject(child);\r\n\t}\r\n\r\n\tpublic update_button_name(target:DisplayObject, sourceMovieClip:MovieClip, i:number):void\r\n\t{\r\n\t\ttarget.name = this.properties_stream_strings[i];\r\n\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n\t\t(<MovieClip> target).addButtonListeners();\r\n\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t}\r\n\r\n\tpublic update_visibility(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tif (!child.adapter || !child.adapter.isVisibilityByScript())\r\n\t\t\tchild.visible = Boolean(i);\r\n\t}\r\n\r\n\tpublic update_mtx_scale_rot(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tif (this._blocked)\r\n\t\t\treturn;\r\n\r\n\t\ti *= 4;\r\n\r\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\r\n\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[i++];\r\n\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[i++];\r\n\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[i++];\r\n\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[i];\r\n\r\n\t\tchild.transform.invalidateComponents();\r\n\r\n\t\tchild.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\tpublic update_mtx_pos(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tif (this._blocked)\r\n\t\t\treturn;\r\n\r\n\t\ti *= 2;\r\n\r\n\t\tvar new_matrix:Matrix3D = child.transform.matrix3D;\r\n\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[i++];\r\n\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[i];\r\n\r\n\t\tchild.transform.invalidatePosition();\r\n\t}\r\n\r\n\tpublic enable_maskmode(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tchild.maskMode = true;\r\n\t}\r\n\r\n\tpublic remove_masks(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tchild.masks = null;\r\n\t}\r\n\tpublic update_blendmode(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tconsole.log(\"update blendmode \"+i);\r\n\t}\r\n\tpublic update_rendermode(child:DisplayObject, target_mc:MovieClip, i:number):void\r\n\t{\r\n\t\tconsole.log(\"update rendermode \"+i);\r\n\t}\r\n}",
    "/**\r\n *\r\n */\r\nexport class TouchPoint\r\n{\r\n\tx:number;\r\n\r\n\ty:number;\r\n\r\n\tid:number;\r\n\r\n\tconstructor(x:number, y:number, id:number)\r\n\t{\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.id = id;\r\n\t}\r\n}",
    "import {EventDispatcher}\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\r\nimport {ColorTransform}\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\r\nimport {Matrix}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\r\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {PerspectiveProjection}\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\r\n\r\n\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {TransformEvent}\t\t\t\tfrom \"../events/TransformEvent\";\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nexport class Transform extends EventDispatcher\r\n{\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n\tprivate _rotation:Vector3D = new Vector3D();\r\n\tprivate _skew:Vector3D = new Vector3D();\r\n\tprivate _scale:Vector3D = new Vector3D(1, 1, 1);\r\n\tprivate _components:Array<Vector3D>;\r\n\tprivate _componentsDirty:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._matrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(val:ColorTransform)\r\n\t{\r\n\t\tif (this._colorTransform == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._colorTransform = val;\r\n\r\n\t\tthis.invalidateColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Scene.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._matrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._matrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._matrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._updateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 15; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\t\t\r\n\t\tthis.invalidateComponents();\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._matrix3D.position;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this.matrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\tif (this._componentsDirty)\r\n\t\t\tthis._updateComponents();\r\n\r\n\t\treturn this._rotation;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number):void\r\n\t{\r\n\t\tif (this._componentsDirty)\r\n\t\t\tthis._updateComponents();\r\n\r\n\t\tthis._rotation.x = ax;\r\n\t\tthis._rotation.y = ay;\r\n\t\tthis._rotation.z = az;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\tif (this._componentsDirty)\r\n\t\t\tthis._updateComponents();\r\n\r\n\t\treturn this._scale;\r\n\t}\r\n\r\n\tpublic scaleTo(sx:number, sy:number, sz:number):void\r\n\t{\r\n\t\tif (this._componentsDirty)\r\n\t\t\tthis._updateComponents();\r\n\r\n\t\tthis._scale.x = sx;\r\n\t\tthis._scale.y = sy;\r\n\t\tthis._scale.z = sz;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get skew():Vector3D\r\n\t{\r\n\t\tif (this._componentsDirty)\r\n\t\t\tthis._updateComponents();\r\n\r\n\t\treturn this._skew;\r\n\t}\r\n\r\n\tpublic skewTo(sx:number, sy:number, sz:number):void\r\n\t{\r\n\t\tif (this._componentsDirty)\r\n\t\t\tthis._updateComponents();\r\n\r\n\t\tthis._skew.x = sx;\r\n\t\tthis._skew.y = sy;\r\n\t\tthis._skew.z = sz;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this.matrix3D);\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n\t\tthis._components = new Array<Vector3D>(4);\r\n\r\n\t\tthis._components[1] = this._rotation;\r\n\t\tthis._components[2] = this._skew;\r\n\t\tthis._components[3] = this._scale;\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number):void\r\n\t{\r\n\t\tthis.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number):void\r\n\t{\r\n\t\tthis.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number):void\r\n\t{\r\n\t\tthis.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number):void\r\n\t{\r\n\t\tthis.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number):void\r\n\t{\r\n\t\tthis.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number):void\r\n\t{\r\n\t\tthis.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number):void\r\n\t{\r\n\t\tthis._matrix3D.rawData[12] = dx;\r\n\t\tthis._matrix3D.rawData[13] = dy;\r\n\t\tthis._matrix3D.rawData[14] = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number):void\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number):void\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number):void\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number):void\r\n\t{\r\n\t\tthis.matrix3D.prependRotation(angle, axis);\r\n\r\n\t\tthis.invalidateComponents();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number):void\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.matrix3D.appendTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number):void\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.matrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\tpublic clearMatrix3D():void\r\n\t{\r\n\t\tthis._matrix3D.identity();\r\n\t\tthis.invalidateComponents();\r\n\t}\r\n\r\n\tpublic clearColorTransform():void\r\n\t{\r\n\t\tif (!this._colorTransform)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tthis._colorTransform.clear();\r\n\t\tthis.invalidateColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateMatrix3D():void\r\n\t{\r\n\t\tthis._matrix3DDirty = true;\r\n\t\t\r\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\r\n\t}\r\n\r\n\tpublic invalidateComponents():void\r\n\t{\r\n\t\tthis.invalidatePosition();\r\n\t\t\r\n\t\tthis._componentsDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidatePosition():void\r\n\t{\r\n\t\tthis._matrix3D.invalidatePosition();\r\n\r\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_MATRIX3D, this));\r\n\t}\r\n\r\n\tpublic invalidateColorTransform():void\r\n\t{\r\n\t\tthis.dispatchEvent(new TransformEvent(TransformEvent.INVALIDATE_COLOR_TRANSFORM, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _updateMatrix3D():void\r\n\t{\r\n\t\tthis._matrix3D.recompose(this._components);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\r\n\tprivate _updateComponents():void\r\n\t{\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tthis._rotation.x = vec.x;\r\n\t\tthis._rotation.y = vec.y;\r\n\t\tthis._rotation.z = vec.z;\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tthis._skew.x = vec.x;\r\n\t\tthis._skew.y = vec.y;\r\n\t\tthis._skew.z = vec.z;\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._scale.x = vec.x;\r\n\t\tthis._scale.y = vec.y;\r\n\t\tthis._scale.z = vec.z;\r\n\r\n\t\tthis._componentsDirty = false;\r\n\t}\r\n}\r\n",
    "export {AlignmentMode}\t\t\t\t\tfrom \"./base/AlignmentMode\";\r\nexport {HierarchicalProperties}\t\t\tfrom \"./base/HierarchicalProperties\";\r\nexport {IBitmapDrawable}\t\t\t\t\tfrom \"./base/IBitmapDrawable\";\r\nexport {IRenderable}\t\t\t\t\t\tfrom \"./base/IRenderable\";\r\nexport {ISurface}\t\t\t\t\t\tfrom \"./base/ISurface\";\r\nexport {OrientationMode}\t\t\t\t\tfrom \"./base/OrientationMode\";\r\nexport {Style}\t\t\t\t\t\t\tfrom \"./base/Style\";\r\nexport {Timeline}\t\t\t\t\t\tfrom \"./base/Timeline\";\r\nexport {TouchPoint}\t\t\t\t\t\tfrom \"./base/TouchPoint\";\r\nexport {Transform}\t\t\t\t\t\tfrom \"./base/Transform\";",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {PlaneClassification}\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\r\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {ElementsType}\t\t\t\t\tfrom \"../graphics/ElementsType\";\r\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\r\nimport {PrimitiveCubePrefab}\t\t\tfrom \"../prefabs/PrimitiveCubePrefab\";\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most sprites.\r\n */\r\nexport class AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify():void\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate():void\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Sprite\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab(null, ElementsType.LINE);\r\n\r\n\t\treturn <Sprite> this._prefab.getNewObject();\r\n\t}\r\n}",
    "import {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {PlaneClassification}\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\r\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {ElementsType}\t\t\t\t\tfrom \"../graphics/ElementsType\";\r\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\r\nimport {PrimitiveSpherePrefab}\t\tfrom \"../prefabs/PrimitiveSpherePrefab\";\r\n\r\nexport class BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify():void\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate():void\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Float32Array = matrix.rawData;\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Sprite\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab(null, ElementsType.LINE);\r\n\r\n\t\treturn <Sprite> this._prefab.getNewObject();\r\n\t}\r\n}",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\n\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\r\n\r\nexport class BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Sprite;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis._pEntity = null;\r\n\t\tthis._pBoundsPrimitive = null;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pInvalidated = true;\r\n\t\t}\r\n\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify():void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate():void\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Sprite\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}",
    "/**\r\n *\r\n */\r\nexport class BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}",
    "import {PlaneClassification}\t\t\tfrom \"awayjs-core/lib/geom/PlaneClassification\";\r\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\n\r\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\r\n\r\n\r\nexport class NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}",
    "export {AxisAlignedBoundingBox}\t\t\tfrom \"./bounds/AxisAlignedBoundingBox\";\r\nexport {BoundingSphere}\t\t\t\t\tfrom \"./bounds/BoundingSphere\";\r\nexport {BoundingVolumeBase}\t\t\t\tfrom \"./bounds/BoundingVolumeBase\";\r\nexport {BoundsType}\t\t\t\t\t\tfrom \"./bounds/BoundsType\";\r\nexport {NullBounds}\t\t\t\t\t\tfrom \"./bounds/NullBounds\";",
    "import {AbstractMethodError}\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\n\r\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\r\n\r\nexport class ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate():void\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartitionBounds();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController():void\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}",
    "import {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\r\n\r\nimport {ControllerBase}\t\t\tfrom \"../controllers/ControllerBase\";\r\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nexport class FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true):void\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number):void\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number):void\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}",
    "import {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\r\nimport {HoverController}\t\t\tfrom \"../controllers/HoverController\";\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nexport class FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true):void\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}",
    "import {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\r\nimport {LookAtController}\t\t\tfrom \"../controllers/LookAtController\";\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nexport class HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true):void\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}",
    "import {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\r\nimport {ControllerBase}\t\t\tfrom \"../controllers/ControllerBase\";\r\nimport {DisplayObjectEvent}\t\tfrom \"../events/DisplayObjectEvent\";\r\n\r\nexport class LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true):void\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent):void\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}",
    "import {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\r\nimport {LookAtController}\t\t\tfrom \"../controllers/LookAtController\";\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nexport class SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true):void\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tvar position:Vector3D = this._pTargetObject.transform.position.add(this._velocity);\r\n\t\tthis._pTargetObject.transform.moveTo(position.x, position.y, position.z);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}",
    "export {ControllerBase}\t\t\t\t\tfrom \"./controllers/ControllerBase\";\r\nexport {FirstPersonController}\t\t\tfrom \"./controllers/FirstPersonController\";\r\nexport {FollowController}\t\t\t\tfrom \"./controllers/FollowController\";\r\nexport {HoverController}\t\t\t\t\tfrom \"./controllers/HoverController\";\r\nexport {LookAtController}\t\t\t\tfrom \"./controllers/LookAtController\";\r\nexport {SpringController}\t\t\t\tfrom \"./controllers/SpringController\";",
    "import {Sampler2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\r\nimport {Image2D}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\r\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\r\n\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\r\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {RenderableEvent}\t\t\t\tfrom \"../events/RenderableEvent\";\r\nimport {SurfaceEvent}\t\t\t\t\tfrom \"../events/SurfaceEvent\";\r\nimport {DefaultMaterialManager}\t\tfrom \"../managers/DefaultMaterialManager\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\r\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nexport class Billboard extends DisplayObject implements IEntity, IRenderable\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\r\n\tprivate _style:Style;\r\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\r\n\tprivate onInvalidateTextureDelegate:(event:SurfaceEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the sprite. Act on the sprite's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(SurfaceEvent.INVALIDATE_TEXTURE, this.onInvalidateTextureDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onInvalidateTextureDelegate = (event:SurfaceEvent) => this.onInvalidateTexture(event);\r\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._updateDimensions();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds():void\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * The style used to render the current Billboard. If set to null, the default style of the material will be used instead.\r\n\t */\r\n\tpublic get style():Style\r\n\t{\r\n\t\treturn this._style;\r\n\t}\r\n\r\n\tpublic set style(value:Style)\r\n\t{\r\n\t\tif (this._style == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis._style = value;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis._onInvalidateProperties();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\r\n\t{\r\n\t\treturn pickingCollider.testBillboardCollision(this, this.material, pickingCollision);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onInvalidateTexture(event:SurfaceEvent):void\r\n\t{\r\n\t\tthis._updateDimensions();\r\n\t}\r\n\r\n\tpublic _acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\ttraverser.applyRenderable(this);\r\n\t}\r\n\r\n\tprivate _updateDimensions():void\r\n\t{\r\n\t\tvar texture:TextureBase = this.material.getTextureAt(0);\r\n\r\n\t\tvar image:Image2D = texture? <Image2D> ((this._style? this._style.getImageAt(texture) : null) || (this.material.style? this.material.style.getImageAt(texture) : null) || texture.getImageAt(0)) : null;\r\n\r\n\t\tif (image) {\r\n\t\t\tvar sampler:Sampler2D = <Sampler2D> ((this._style? this._style.getSamplerAt(texture) : null) || (this.material.style? this.material.style.getSamplerAt(texture) : null) || texture.getSamplerAt(0) || DefaultMaterialManager.getDefaultSampler());\r\n\t\t\tif (sampler.imageRect) {\r\n\t\t\t\tthis._billboardWidth = sampler.imageRect.width*image.width;\r\n\t\t\t\tthis._billboardHeight = sampler.imageRect.height*image.height;\r\n\t\t\t} else {\r\n\t\t\t\tthis._billboardWidth = image.rect.width;\r\n\t\t\t\tthis._billboardHeight = image.rect.height;\r\n\t\t\t}\r\n\r\n\t\t\tthis._billboardRect = sampler.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\t\t} else {\r\n\t\t\tthis._billboardWidth = 1;\r\n\t\t\tthis._billboardHeight = 1;\r\n\t\t\tthis._billboardRect = new Rectangle(0, 0, 1, 1);\r\n\t\t}\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tthis.invalidateElements();\r\n\t}\r\n\r\n\r\n\tpublic invalidateElements():void\r\n\t{\r\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\r\n\t}\r\n\t\r\n\tpublic invalidateSurface():void\r\n\t{\r\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\r\n\t}\r\n\r\n\tprivate _onInvalidateProperties(event:StyleEvent = null):void\r\n\t{\r\n\t\tthis.invalidateSurface();\r\n\r\n\t\tthis._updateDimensions();\r\n\t}\r\n}",
    "import {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {ProjectionEvent}\t\t\t\tfrom \"awayjs-core/lib/events/ProjectionEvent\";\r\nimport {IProjection}\t\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\r\nimport {PerspectiveProjection}\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\r\n\r\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\r\nimport {IRenderer}\t\t\t\t\tfrom \"../IRenderer\";\r\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\r\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {CameraEvent}\t\t\t\t\tfrom \"../events/CameraEvent\";\r\n\r\n\r\nexport class Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent):void\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum():void\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:Float32Array = this.viewProjection.rawData;\r\n\t\tvar invLen:number;\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._viewProjectionDirty = true;\r\n\t\t\tthis._frustumPlanesDirty = true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer):void\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-sprites, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n}",
    "import {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {LightBase}\t\t\t\t\tfrom \"../display/LightBase\";\r\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\r\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {DirectionalShadowMapper}\t\tfrom \"../materials/shadowmappers/DirectionalShadowMapper\";\r\n\r\nexport class DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[light DirectionalLight]\";\r\n\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DirectionalLight.assetType;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform():void\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds():void\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {ArgumentError}\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\r\nimport {RangeError}\t\t\t\t\tfrom \"awayjs-core/lib/errors/RangeError\";\r\nimport {Extensions}\t\t\t\t\tfrom \"awayjs-core/lib/utils/Extensions\";\r\n\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\r\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\r\nimport {Scene}\t\t\t\t\t\tfrom \"../display/Scene\";\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nexport class DisplayObjectContainer extends DisplayObject\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _depth_childs:Object = {};\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _nextHighestDepthDirty:boolean;\r\n\tpublic _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MOUSE_ENABLED);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\r\n\t\tvar index = this.getDepthIndexInternal(depth);\r\n\r\n\t\tif (index != -1) {\r\n\t\t\tif (replace) {\r\n\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t} else {\r\n\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\tthis.addChildAtDepth(this._children[index], depth + 1, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._nextHighestDepth < depth + 1)\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\r\n\t\tthis._depth_childs[depth] = child;\r\n\t\tthis._children.push(child);\r\n\r\n\t\tchild._depthID = depth;\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._invalidateChildren();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._children[index]._depthID : this.getNextHighestDepth(), false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>):void\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObjectContainer\r\n\t{\r\n\t\tvar newInstance:DisplayObjectContainer = new DisplayObjectContainer();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObjectContainer):void\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.mouseChildren = this._mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeValues():void\r\n\t{\r\n\t\tfor (var i:number = this._children.length - 1; i >= 0; i--)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\r\n\t\tsuper.disposeValues();\r\n\t}\r\n\r\n\tpublic getChildAtDepth(depth:number):DisplayObject\r\n\t{\r\n\t\treturn this._depth_childs[depth];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getNextHighestDepth():number\r\n\t{\r\n\t\tif (this._nextHighestDepthDirty)\r\n\t\t\tthis._updateNextHighestDepth();\r\n\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new ArgumentError(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._invalidateChildren();\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number = 0, endIndex:number = 2147483647):void\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number):void\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject):void\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number):void\r\n\t{\r\n\t\tvar depth:number = this._children[index2]._depthID;\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._children[index1]._depthID);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds():void\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tvar min:number;\r\n\t\t\tvar max:number;\r\n\t\t\tvar minX:number, minY:number, minZ:number;\r\n\t\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setBoundIdentity();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateHierarchicalProperties(bitFlag:number):boolean\r\n\t{\r\n\t\tif (super.pInvalidateHierarchicalProperties(bitFlag))\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateHierarchicalProperties(bitFlag);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene, partition:PartitionBase):void\r\n\t{\r\n\t\tsuper._iSetScene(value, partition);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._iSetScene(value, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tpublic removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\r\n\t\t//update next highest depth\r\n\t\tif (this._nextHighestDepth == child._depthID + 1)\r\n\t\t\tthis._nextHighestDepthDirty = true;\r\n\r\n\t\tdelete this._depth_childs[child._depthID];\r\n\r\n\t\tchild._depthID = -16384;\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic getDepthIndexInternal(depth:number):number\r\n\t{\r\n\t\tif (!this._depth_childs[depth])\r\n\t\t\treturn -1;\r\n\r\n\t\treturn this._children.indexOf(this._depth_childs[depth]);\r\n\t}\r\n\r\n\tprivate _updateNextHighestDepth():void\r\n\t{\r\n\t\tthis._nextHighestDepthDirty = false;\r\n\r\n\t\tthis._nextHighestDepth = 0;\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._nextHighestDepth < this._children[i]._depthID)\r\n\t\t\t\tthis._nextHighestDepth = this._children[i]._depthID;\r\n\r\n\t\tthis._nextHighestDepth += 1;\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tvar numChildren:number = this._children.length;\r\n\t\tfor(var i:number = 0; i < numChildren; i++)\r\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic _updateMaskMode():void\r\n\t{\r\n\t\tif (this.maskMode)\r\n\t\t\tthis.mouseChildren = false;\r\n\r\n\t\tsuper._updateMaskMode();\r\n\t}\r\n\r\n\tprivate _invalidateChildren():void\r\n\t{\r\n\t\tif (this._pIsContainer != Boolean(this._children.length)) {\r\n\t\t\tif (this._pImplicitPartition)\r\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\r\n\t\t\tthis._pIsContainer = Boolean(this._children.length);\r\n\r\n\t\t\tif (this._pImplicitPartition)\r\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n}",
    "import {BlendMode}\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\r\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {ColorTransform}\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\r\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\r\nimport {MathConsts}\t\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\r\nimport {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\nimport {LoaderInfo}\t\t\t\t\tfrom \"awayjs-core/lib/library/LoaderInfo\";\r\nimport {EventBase}\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nimport {IRenderer}\t\t\t\t\tfrom \"../IRenderer\";\r\nimport {IDisplayObjectAdapter}\t\tfrom \"../adapters/IDisplayObjectAdapter\";\r\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\r\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\r\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\r\nimport {Scene}\t\t\t\t\t\tfrom \"../display/Scene\";\r\nimport {ControllerBase}\t\t\t\tfrom \"../controllers/ControllerBase\";\r\nimport {AlignmentMode}\t\t\t\tfrom \"../base/AlignmentMode\";\r\nimport {OrientationMode}\t\t\t\tfrom \"../base/OrientationMode\";\r\nimport {IBitmapDrawable}\t\t\t\tfrom \"../base/IBitmapDrawable\";\r\nimport {Transform}\t\t\t\t\tfrom \"../base/Transform\";\r\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\r\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\nimport {Camera}\t\t\t\t\t\tfrom \"../display/Camera\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {DisplayObjectEvent}\t\t\tfrom \"../events/DisplayObjectEvent\";\r\nimport {TransformEvent}\t\t\t\tfrom \"../events/TransformEvent\";\r\nimport {PrefabBase}\t\t\t\t\tfrom \"../prefabs/PrefabBase\";\r\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nexport class DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _iIsRoot:boolean;\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<EventBase> = new Array<EventBase>();\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pIsEntity:boolean = false;\r\n\tpublic _pIsContainer:boolean = false;\r\n\tpublic _sessionID:number = -1;\r\n\tpublic _depthID:number = -16384;\r\n\r\n\tprivate _explicitPartition:PartitionBase;\r\n\tpublic _pImplicitPartition:PartitionBase;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tprivate _explicitMaskId:number = -1;\r\n\tpublic _explicitMasks:Array<DisplayObject>;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tpublic _pImplicitMaskId:number = -1;\r\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\r\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitColorTransform:ColorTransform;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _matrix3DDirty:boolean;\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _eulers:Vector3D;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _pivot:Vector3D;\r\n\tprivate _pivotScale:Vector3D;\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pickingCollider:IPickingCollider;\r\n\tprivate _pickingCollision:PickingCollision;\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _inheritColorTransform:boolean = false;\r\n\tprivate _maskMode:boolean = false;\r\n\r\n\tpublic _hierarchicalPropsDirty:number;\r\n\r\n\t//temp vector used in global to local\r\n\tprivate _tempVector3D:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n\t\tif (this._inheritColorTransform == value)\r\n\t\t\treturn;\r\n\r\n        this._inheritColorTransform = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._transform.colorTransform? this._transform.colorTransform.alphaMultiplier : 1;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n\t\tif (!this._transform.colorTransform)\r\n\t\t\tthis._transform.colorTransform = new ColorTransform();\r\n\r\n        this._transform.colorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis.invalidate();\r\n\t\t\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tif (!this._eulers)\r\n\t\t\tthis._eulers = new Vector3D();\r\n\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity():boolean\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isContainer():boolean\r\n\t{\r\n\t\treturn this._pIsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\tpublic get maskMode():boolean\r\n\t{\r\n\t\treturn this._maskMode;\r\n\t}\r\n\r\n\tpublic set maskMode(value:boolean)\r\n\t{\r\n\t\tif (this._maskMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maskMode = value;\r\n\r\n\t\tthis._explicitMaskId = value? this.id : -1;\r\n\r\n\t\tthis._updateMaskMode();\r\n\t}\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():PartitionBase\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:PartitionBase)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._iSetScene(this._pScene, this._pParent? this._pParent._iAssignedPartition : null);\r\n\r\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pickingCollider:IPickingCollider;\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot && this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tif (!pivot) {\r\n\t\t\tthis._pivot = null;\r\n\t\t\tthis._pivotScale = null;\r\n\t\t} else {\r\n\t\t\tif (!this._pivot)\r\n\t\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\t\tthis._pivot.x = pivot.x;\r\n\t\t\tthis._pivot.y = pivot.y;\r\n\t\t\tthis._pivot.z = pivot.z;\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._transform.rotation.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.rotation.x = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis._transform.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._transform.rotation.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.rotation.y = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis._transform.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._transform.rotation.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.rotation.z = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis._transform.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._transform.scale.x;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._transform.scale.y;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._transform.scale.z;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\treturn this._transform.skew.x;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.skew.x = val;\r\n\r\n\t\tthis._transform.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\treturn this._transform.skew.y;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.skew.y = val;\r\n\r\n\t\tthis._transform.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\treturn this._transform.skew.z;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.skew.z = val;\r\n\r\n\t\tthis._transform.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.SCENE_TRANSFORM)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.VISIBLE);\r\n\t}\r\n\r\n\tpublic get masks():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._explicitMasks;\r\n\t}\r\n\r\n\tpublic set masks(value:Array<DisplayObject>)\r\n\t{\r\n\t\tif (this._explicitMasks == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMasks = value;\r\n\r\n\t\t//make sure maskMode is set to true for all masks\r\n\t\tif (value != null && value.length) {\r\n\t\t\tvar len:number = value.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tvalue[i].maskMode = true;\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASKS);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._transform.position.x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._transform.position.x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.matrix3D.rawData[12] = val;\r\n\r\n\t\tthis._transform.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._transform.position.y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._transform.position.y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.matrix3D.rawData[13] = val;\r\n\r\n\t\tthis._transform.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._transform.position.z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._transform.position.z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.matrix3D.rawData[14] = val;\r\n\r\n\t\tthis._transform.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic zOffset:number = 0;\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform();\r\n\r\n\t\t//setup transform listeners\r\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_MATRIX3D, (event:TransformEvent) => this._onInvalidateMatrix3D(event));\r\n\t\tthis._transform.addEventListener(TransformEvent.INVALIDATE_COLOR_TRANSFORM, (event:TransformEvent) => this._onInvalidateColorTransform(event));\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:(event:EventBase) => void):void\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar newInstance:DisplayObject = new DisplayObject();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:DisplayObject):void\r\n\t{\r\n\t\tnewInstance.partition = this._explicitPartition;\r\n\t\tnewInstance.boundsType = this._boundsType;\r\n\t\tnewInstance.pivot = this._pivot;\r\n\t\tnewInstance.name = this._pName;\r\n\t\tnewInstance.mouseEnabled = this._explicitMouseEnabled;\r\n\t\tnewInstance.extra = this.extra;\r\n\t\tnewInstance.maskMode = this._maskMode;\r\n\t\tnewInstance.castsShadows = this.castsShadows;\r\n\r\n\t\tif (this._explicitMasks)\r\n\t\t\tnewInstance.masks = this._explicitMasks;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tnewInstance._transform.matrix3D = this._transform.matrix3D;\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.disposeValues();\r\n\t}\r\n\r\n\tpublic disposeValues():void\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent.removeChild(this);\r\n\r\n\t\t//if (this._adapter) {\r\n\t\t//\tthis._adapter.dispose();\r\n\t\t//\tthis._adapter = null;\r\n\t\t//}\r\n\r\n\t\t//this._pos = null;\r\n\t\t//this._rot = null;\r\n\t\t//this._sca = null;\r\n\t\t//this._ske = null;\r\n\t\t//this._transformComponents = null;\r\n\t\t//this._transform.dispose();\r\n\t\t//this._transform = null;\r\n\t\t//\r\n\t\t//this._matrix3D = null;\r\n\t\t//this._pSceneTransform = null;\r\n\t\t//this._inverseSceneTransform = null;\r\n\r\n\t\tthis._explicitMasks = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._transform.matrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag = false):boolean\r\n\t{\r\n\t\tif(!this._pImplicitVisibility)\r\n\t\t\treturn;\r\n\r\n\t\tif(this._pImplicitMaskId != -1 && !masksFlag)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._explicitMasks) {\r\n\t\t\tvar numMasks:number = this._explicitMasks.length;\r\n\t\t\tvar maskHit:boolean = false;\r\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\r\n\t\t\t\tif (this._explicitMasks[i].hitTestPoint(x, y, shapeFlag, true)) {\r\n\t\t\t\t\tmaskHit = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!maskHit)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null):void\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Float32Array;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._transform.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point, target:Point = null):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D, this._tempVector3D);\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Point();\r\n\r\n\t\ttarget.x = pos.x;\r\n\t\ttarget.y = pos.y;\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number):void\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tthis.visible = true;\r\n\r\n\t\tif(this._transform.matrix3D)\r\n\t\t\tthis._transform.clearMatrix3D();\r\n\r\n\t\tif(this._transform.colorTransform)\r\n\t\t\tthis._transform.clearColorTransform();\r\n\r\n\t\t//this.name=\"\";\r\n\t\tthis.masks = null;\r\n\r\n\t\tthis.maskMode = false;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(cameraTransform:Matrix3D):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = cameraTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0].copyFrom(this.scenePosition);\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (this._pivot && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:(event:EventBase) => void):void\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():PartitionBase\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollision():PickingCollision\r\n\t{\r\n\t\tif (!this._pickingCollision)\r\n\t\t\tthis._pickingCollision = new PickingCollision(this);\r\n\r\n\t\treturn this._pickingCollision;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer):void\r\n\t{\r\n\t\tthis._pParent = value;\r\n\r\n        if (value)\r\n\t\t\tthis._iSetScene(value._pScene, value._iAssignedPartition);\r\n\t\telse\r\n\t\t\tthis._iSetScene(null, null);\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.ALL);\r\n\t}\r\n\r\n\tpublic pInvalidateHierarchicalProperties(propDirty:number):boolean\r\n\t{\r\n\t\tvar newPropDirty:number = (this._hierarchicalPropsDirty ^ propDirty) & propDirty;\r\n\t\tif (!newPropDirty)\r\n\t\t\treturn true;\r\n\r\n\t\tthis._hierarchicalPropsDirty |= propDirty;\r\n\r\n\t\tif (newPropDirty & HierarchicalProperties.SCENE_TRANSFORM) {\r\n\t\t\tthis._inverseSceneTransformDirty = true;\r\n\t\t\tthis._scenePositionDirty = true;\r\n\r\n\t\t\tif (this.isEntity)\r\n\t\t\t\tthis.invalidatePartitionBounds();\r\n\r\n\t\t\tif (this._pParent)\r\n\t\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\t\tthis.queueDispatch(this._sceneTransformChanged || (this._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this)));\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _iSetScene(scene:Scene, partition:PartitionBase):void\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\r\n\t\t\t//gc abstraction objects\r\n\t\t\tthis.clear();\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._listenToSceneChanged)\r\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform():void\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tthis._pSceneTransform.copyFrom(this._transform.matrix3D);\r\n\r\n\t\tif (this._pivot) {\r\n\t\t\tif (!this._pivotScale)\r\n\t\t\t\tthis._pivotScale = new Vector3D();\r\n\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._transform.scale.x;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._transform.scale.y;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._transform.scale.z;\r\n\t\t\tthis._pSceneTransform.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._pSceneTransform.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot)\r\n\t\t\tthis._pSceneTransform.append(this._pParent.sceneTransform);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.SCENE_TRANSFORM;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate():void\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.VISIBLE)\r\n\t\t\tthis._updateVisible();\r\n\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMaskId():number\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASK_ID)\r\n\t\t\tthis._updateMaskId();\r\n\r\n\t\treturn this._pImplicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMasks;\r\n\t}\r\n\r\n\tpublic _iMasksConfig():Array<Array<number>>\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MASKS)\r\n\t\t\tthis._updateMasks();\r\n\r\n\t\treturn this._pImplicitMaskIds;\r\n\t}\r\n\r\n\tpublic _iAssignedColorTransform():ColorTransform\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.COLOR_TRANSFORM)\r\n\t\t\tthis._updateColorTransform();\r\n\r\n\t\treturn this._pImplicitColorTransform;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\tif (this._hierarchicalPropsDirty & HierarchicalProperties.MOUSE_ENABLED)\r\n\t\t\tthis._updateMouseEnabled();\r\n\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic _acceptTraverser(collector:ITraverser):void\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _onInvalidateMatrix3D(event:TransformEvent):void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.SCENE_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate _onInvalidateColorTransform(event:TransformEvent):void\r\n\t{\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds():void\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartitionBounds();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds():void\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds():void\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n\tprivate queueDispatch(event:EventBase):void\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number):void\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.scale.x = val;\r\n\r\n\t\tthis._transform.invalidateMatrix3D();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number):void\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.scale.y = val;\r\n\r\n\t\tthis._transform.invalidateMatrix3D();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number):void\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._transform.scale.z = val;\r\n\r\n\t\tthis._transform.invalidateMatrix3D();\r\n\t}\r\n\r\n\tpublic _updateMouseEnabled():void\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = (this._pParent)? this._pParent.mouseChildren && this._pParent._pImplicitMouseEnabled : true;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this.pickingCollider)\r\n\t\t\tthis.pickingCollider =  this._pParent.pickingCollider;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MOUSE_ENABLED;\r\n\t}\r\n\r\n\tprivate _updateVisible():void\r\n\t{\r\n\t\tthis._pImplicitVisibility = (this._pParent)? this._explicitVisibility && this._pParent._iIsVisible() : this._explicitVisibility;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.VISIBLE;\r\n\t}\r\n\r\n\tprivate _updateMaskId():void\r\n\t{\r\n\t\tthis._pImplicitMaskId = (this._pParent && this._pParent._iAssignedMaskId() != -1)? this._pParent._iAssignedMaskId() : this._explicitMaskId;\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASK_ID;\r\n\t}\r\n\r\n\tprivate _updateMasks():void\r\n\t{\r\n\t\tthis._pImplicitMasks = (this._pParent && this._pParent._iAssignedMasks())? (this._explicitMasks != null)? this._pParent._iAssignedMasks().concat([this._explicitMasks]) : this._pParent._iAssignedMasks().concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\r\n\r\n\t\tthis._pImplicitMaskIds.length = 0;\r\n\r\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\r\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar implicitChildren:Array<DisplayObject>;\r\n\t\t\tvar implicitChildIds:Array<number>;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\r\n\t\t\t\tnumChildren = implicitChildren.length;\r\n\t\t\t\timplicitChildIds = new Array<number>();\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\r\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].id);\r\n\r\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.MASKS;\r\n\t}\r\n\r\n\tprivate _updateColorTransform():void\r\n\t{\r\n\t\tif (!this._pImplicitColorTransform)\r\n\t\t\tthis._pImplicitColorTransform = new ColorTransform();\r\n\r\n\t\tif (this._inheritColorTransform && this._pParent && this._pParent._iAssignedColorTransform()) {\r\n\t\t\tthis._pImplicitColorTransform.copyFrom(this._pParent._iAssignedColorTransform());\r\n\r\n\t\t\tif (this._transform.colorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.prepend(this._transform.colorTransform);\r\n\t\t} else {\r\n\t\t\tif (this._transform.colorTransform)\r\n\t\t\t\tthis._pImplicitColorTransform.copyFrom(this._transform.colorTransform);\r\n\t\t\telse\r\n\t\t\t\tthis._pImplicitColorTransform.clear();\r\n\t\t}\r\n\r\n\t\tthis._hierarchicalPropsDirty ^= HierarchicalProperties.COLOR_TRANSFORM;\r\n\t}\r\n\r\n\tpublic _updateMaskMode():void\r\n\t{\r\n\t\tif (this.maskMode)\r\n\t\t\tthis.mouseEnabled = false;\r\n\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.MASK_ID);\r\n\t}\r\n\r\n\tpublic clear():void\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tvar i:number;\r\n\r\n\t\tthis._pImplicitColorTransform = null;\r\n\t\tthis._pImplicitMasks = null;\r\n\t}\r\n\r\n\tpublic invalidatePartitionBounds():void\r\n\t{\r\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this));\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}",
    "import {Matrix3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {AbstractMethodError}\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\n\r\nimport {DisplayObjectContainer}\tfrom \"../display/DisplayObjectContainer\";\r\nimport {Camera}\t\t\t\t\tfrom \"../display/Camera\";\r\nimport {IEntity}\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {LightEvent}\t\t\t\tfrom \"../events/LightEvent\";\r\nimport {ShadowMapperBase}\t\t\tfrom \"../materials/shadowmappers/ShadowMapperBase\";\r\n\r\nexport class LightBase extends DisplayObjectContainer\r\n{\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _shadowsEnabled:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get shadowsEnabled():boolean\r\n\t{\r\n\t\treturn this._shadowsEnabled;\r\n\t}\r\n\r\n\tpublic set shadowsEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._shadowsEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shadowsEnabled = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient():void\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate updateSpecular():void\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse():void\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}",
    "import {ImageCube}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\r\nimport {SamplerCube}\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {ErrorBase}\t\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\r\n\r\nimport {LightBase}\t\t\t\t\tfrom \"../display/LightBase\";\r\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\r\nimport {Camera}\t\t\t\t\t\tfrom \"../display/Camera\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\n\r\nexport class LightProbe extends LightBase implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[light LightProbe]\";\r\n\r\n\tpublic diffuseMap:ImageCube;\r\n\r\n\tpublic diffuseSampler:SamplerCube = new SamplerCube();\r\n\r\n\tpublic specularMap:ImageCube;\r\n\r\n\tpublic specularSampler:SamplerCube = new SamplerCube();\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.diffuseMap = diffuseMap;\r\n\t\tthis.specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightProbe.assetType;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new ErrorBase(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n}",
    "﻿import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\r\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\r\nimport {RenderableEvent}\t\t\t\tfrom \"../events/RenderableEvent\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\r\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nexport class LineSegment extends DisplayObject implements IEntity, IRenderable\r\n{\r\n\tprivate _style:Style;\r\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\r\n\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.invalidateElements();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.invalidateElements();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.invalidateElements();\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t * The style used to render the current LineSegment. If set to null, the default style of the material will be used instead.\r\n\t */\r\n\tpublic get style():Style\r\n\t{\r\n\t\treturn this._style;\r\n\t}\r\n\r\n\tpublic set style(value:Style)\r\n\t{\r\n\t\tif (this._style == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis._style = value;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis.invalidateSurface();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds():void\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds():void\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidateElements():void\r\n\t{\r\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));//TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic invalidateSurface():void\r\n\t{\r\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\r\n\t}\r\n\r\n\tprivate _onInvalidateProperties(event:StyleEvent):void\r\n\t{\r\n\t\tthis.invalidateSurface();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\r\n\t{\r\n\t\treturn false; //TODO: detect line collisions\r\n\t}\r\n\r\n\tpublic _acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\ttraverser.applyRenderable(this);\r\n\t}\r\n}",
    "import {AssetLibraryBundle}\t\t\tfrom \"awayjs-core/lib/library/AssetLibraryBundle\";\r\nimport {Loader}\t\t\t\t\t\tfrom \"awayjs-core/lib/library/Loader\";\r\nimport {LoaderContext}\t\t\t\tfrom \"awayjs-core/lib/library/LoaderContext\";\r\nimport {URLRequest}\t\t\t\t\tfrom \"awayjs-core/lib/net/URLRequest\";\r\nimport {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\nimport {EventDispatcher}\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\r\nimport {URLLoaderEvent}\t\t\t\tfrom \"awayjs-core/lib/events/URLLoaderEvent\";\r\nimport {LoaderEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/LoaderEvent\";\r\nimport {ParserEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/ParserEvent\";\r\nimport {ParserBase}\t\t\t\t\tfrom \"awayjs-core/lib/parsers/ParserBase\";\r\n\r\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\n\r\n/**\r\n * The LoaderContainer class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the LoaderContainer object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The LoaderContainer class overrides the following methods that it inherits,\r\n * because a LoaderContainer object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>LoaderContainer</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The LoaderContainer and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the LoaderContainer class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the LoaderContainer object's root SWF file), you may want to define a\r\n * mask for the LoaderContainer object, to prevent the loaded content(which is a child\r\n * of the LoaderContainer object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nexport class LoaderContainer extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (sprites, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loader:Loader;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onLoadCompleteDelegate:(event:LoaderEvent) => void;\r\n\tprivate _onAssetCompleteDelegate:(event:AssetEvent) => void;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:URLLoaderEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadCompleteDelegate = (event:LoaderEvent) => this.onLoadComplete(event);\r\n\t\tthis._onLoadErrorDelegate = (event:URLLoaderEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close():void\r\n\t{\r\n\t\tif (!this._loader)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoader(this._loader);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoader();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, Loader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\r\n\t{\r\n\t\tthis._getLoader().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null):void\r\n\t{\r\n\t\tthis._getLoader().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoader():Loader\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loader = lib.getLoader();\r\n\t\t} else {\r\n\t\t\tthis._loader = new Loader();\r\n\t\t}\r\n\r\n\t\tthis._loader.addEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tthis._loader.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loader.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\tprivate _disposeLoader():void\r\n\t{\r\n\t\tthis._loader.removeEventListener(LoaderEvent.LOAD_COMPLETE, this._onLoadCompleteDelegate);\r\n\t\tthis._loader.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loader.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loader.stop();\r\n\r\n\t\tthis._loader = null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload():void\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object):void\r\n\t{\r\n\t\tLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>):void\r\n\t{\r\n\t\tLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent):void\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:URLLoaderEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(URLLoaderEvent.LOAD_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent):void\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onLoadComplete(event:LoaderEvent):void\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoader();\r\n\t}\r\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\n\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\r\nimport {TextField}\t\t\t\t\tfrom \"../display/TextField\";\r\nimport {MouseEvent}\t\t\t\t\tfrom \"../events/MouseEvent\";\r\nimport {IMovieClipAdapter}\t\t\tfrom \"../adapters/IMovieClipAdapter\";\r\nimport {Timeline}\t\t\t\t\t\tfrom \"../base/Timeline\";\r\nimport {FrameScriptManager}\t\t\tfrom \"../managers/FrameScriptManager\";\r\n\r\nexport class MovieClip extends Sprite\r\n{\r\n\tprivate static _skipAdvance:boolean;\r\n\r\n\tprivate static _movieClips:Array<MovieClip> = new Array<MovieClip>();\r\n\r\n\tpublic static assetType:string = \"[asset MovieClip]\";\r\n\r\n\tprivate _timeline:Timeline;\r\n\r\n\tprivate _isButton:boolean = false;\r\n\tprivate _onMouseOver:(event:MouseEvent) => void;\r\n\tprivate _onMouseOut:(event:MouseEvent) => void;\r\n\tprivate _onMouseDown:(event:MouseEvent) => void;\r\n\tprivate _onMouseUp:(event:MouseEvent) => void;\r\n\r\n\tprivate _time:number = 0;// the current time inside the animation\r\n\tprivate _currentFrameIndex:number = -1;// the current frame\r\n\r\n\tprivate _isPlaying:boolean = true;// false if paused or stopped\r\n\r\n\t// not sure if needed\r\n\tprivate _enterFrame:AssetEvent;\r\n\tprivate _skipAdvance : boolean;\r\n\tprivate _isInit:boolean = true;\r\n\r\n\tprivate _potentialInstances:Array<DisplayObject> = [];\r\n\tprivate _depth_sessionIDs:Object = {};\r\n\tprivate _sessionID_childs:Object = {};\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n\tconstructor(timeline:Timeline = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._enterFrame = new AssetEvent(AssetEvent.ENTER_FRAME, this);\r\n\r\n\t\tthis.inheritColorTransform = true;\r\n\r\n\t\tthis._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n\t\tthis._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n\t\tthis._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n\t\tthis._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n\t\tthis._timeline = timeline || new Timeline();\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.disposeValues();\r\n\r\n\t\tMovieClip._movieClips.push(this);\r\n\t}\r\n\r\n\tpublic disposeValues():void\r\n\t{\r\n\t\tsuper.disposeValues();\r\n\r\n\t\tthis._potentialInstances = [];\r\n\t\tthis._depth_sessionIDs = {};\r\n\t\tthis._sessionID_childs = {};\r\n\t}\r\n\r\n\tpublic reset_textclones():void\r\n\t{\r\n\t\tif(this.timeline) {\r\n\t\t\tvar len:number = this._potentialInstances.length;\r\n\t\t\tfor (var i:number = 0; i< len; i++) {\r\n\t\t\t\tif (this._potentialInstances[i] != null) {\r\n\t\t\t\t\tif (this._potentialInstances[i].isAsset(TextField))\r\n\t\t\t\t\t\t(<TextField>this._potentialInstances[i]).text = (<TextField>this.timeline.getPotentialChildPrototype(i)).text;\r\n\t\t\t\t\telse if (this._potentialInstances[i].isAsset(MovieClip))\r\n\t\t\t\t\t\t(<MovieClip>this._potentialInstances[i]).reset_textclones();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get isInit():boolean\r\n\t{\r\n\t\treturn this._isInit;\r\n\t}\r\n\tpublic set isInit(value:boolean)\r\n\t{\r\n\t\tthis._isInit = value;\r\n\t}\r\n\r\n\tpublic get timeline():Timeline\r\n\t{\r\n\t\treturn this._timeline;\r\n\t}\r\n\r\n\tpublic set timeline(value:Timeline)\r\n\t{\r\n\t\tthis._timeline = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic loop:boolean = true;\r\n\r\n\tpublic get numFrames() : number\r\n\t{\r\n\t\treturn this._timeline.numFrames;\r\n\t}\r\n\r\n\tpublic jumpToLabel(label:string):void\r\n\t{\r\n\t\t// the timeline.jumpTolabel will set currentFrameIndex\r\n\t\tthis._timeline.jumpToLabel(this, label);\r\n\t}\r\n\r\n\t/**\r\n\t * the current index of the current active frame\r\n\t */\r\n\tpublic constructedKeyFrameIndex:number = -1;\r\n\r\n\tpublic reset():void\r\n\t{\r\n\t\tsuper.reset();\r\n\r\n\t\t// time only is relevant for the root mc, as it is the only one that executes the update function\r\n\t\tthis._time = 0;\r\n\r\n\t\tif(this.adapter)\r\n\t\t\tthis.adapter.freeFromScript();\r\n\r\n\t\tthis.constructedKeyFrameIndex = -1;\r\n\t\tfor (var i:number = this.numChildren - 1; i >= 0; i--)\r\n\t\t\tthis.removeChildAt(i);\r\n\r\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\r\n\r\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\r\n\t\tthis._isPlaying = Boolean(numFrames > 1);\r\n\t\tif (numFrames) {\r\n\t\t\tthis._currentFrameIndex = 0;\r\n\t\t\tthis._timeline.constructNextFrame(this, true, true);\r\n\t\t} else {\r\n\t\t\tthis._currentFrameIndex = -1;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic resetSessionIDs():void\r\n\t{\r\n\t\tthis._depth_sessionIDs = {};\r\n\t}\r\n\r\n\t/*\r\n\t* Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n\t */\r\n\tpublic get currentFrameIndex():number\r\n\t{\r\n\t\treturn this._currentFrameIndex;\r\n\t}\r\n\r\n\tpublic set currentFrameIndex(value:number)\r\n\t{\r\n\t\t//if currentFrame is set greater than the available number of\r\n\t\t//frames, the playhead is moved to the last frame in the timeline.\r\n\t\t//But because the frame specified was not a keyframe, no scripts are\r\n\t\t//executed, even if they exist on the last frame.\r\n\t\tvar skip_script:boolean = false;\r\n\r\n\t\tvar numFrames:number = this._timeline.keyframe_indices.length;\r\n\r\n\t\tif (!numFrames)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 0) {\r\n\t\t\tvalue = 0;\r\n\t\t} else if (value >= numFrames) {\r\n\t\t\tvalue = numFrames - 1;\r\n\t\t\tskip_script = true;\r\n\t\t}\r\n\r\n\t\tif (this._currentFrameIndex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._currentFrameIndex = value;\r\n\r\n\t\t//changing current frame will ignore advance command for that\r\n\t\t//update's advanceFrame function, unless advanceFrame has\r\n\t\t//already been executed\r\n\t\tthis._skipAdvance = MovieClip._skipAdvance;\r\n\r\n\t\tthis._timeline.gotoFrame(this, value, skip_script);\r\n\t}\r\n\r\n\tpublic addButtonListeners():void\r\n\t{\r\n\t\tthis._isButton = true;\r\n\r\n\t\tthis.stop();\r\n\r\n\t\tthis.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n\t\tthis.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n\t\tthis.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n\t\tthis.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\t}\r\n\r\n\tpublic removeButtonListeners():void\r\n\t{\r\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n\t\tthis.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n\t\tthis.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n\t\tthis.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n\t}\r\n\r\n\tpublic getChildAtSessionID(sessionID:number):DisplayObject\r\n\t{\r\n\t\treturn this._sessionID_childs[sessionID];\r\n\t}\r\n\r\n\tpublic getSessionIDDepths():Object\r\n\t{\r\n\t\treturn this._depth_sessionIDs;\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\t//this should be implemented for all display objects\r\n\t\tchild.inheritColorTransform = true;\r\n\r\n\t\tchild.reset();// this takes care of transform and visibility\r\n\r\n\t\treturn super.addChildAtDepth(child, depth, replace);\r\n\t}\r\n\r\n\tpublic _addTimelineChildAt(child:DisplayObject, depth:number, sessionID:number):DisplayObject\r\n\t{\r\n\t\tthis._depth_sessionIDs[depth] = child._sessionID = sessionID;\r\n\r\n\t\tthis._sessionID_childs[sessionID] = child;\r\n\r\n\t\treturn this.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\tpublic removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif(child.adapter)\r\n\t\t\tchild.adapter.freeFromScript();\r\n\r\n\t\tthis.adapter.unregisterScriptObject(child);\r\n\r\n\t\t//check to make sure _depth_sessionIDs wasn't modified with a new child\r\n\t\tif (this._depth_sessionIDs[child._depthID] == child._sessionID)\r\n\t\t\tdelete this._depth_sessionIDs[child._depthID];\r\n\r\n\t\tdelete this._sessionID_childs[child._sessionID];\r\n\r\n\t\tchild._sessionID = -1;\r\n\r\n\t\treturn super.removeChildAtInternal(index);\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn MovieClip.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Starts playback of animation from current position\r\n\t */\r\n\tpublic play():void\r\n\t{\r\n\t\tif (this._timeline.keyframe_indices.length > 1)\r\n\t\t\tthis._isPlaying = true;\r\n\t}\r\n\r\n\t/**\r\n\t * should be called right before the call to away3d-render.\r\n\t */\r\n\tpublic update():void\r\n\t{\r\n\t\tMovieClip._skipAdvance = true;\r\n\r\n\t\tthis.advanceFrame();\r\n\r\n\t\tMovieClip._skipAdvance = false;\r\n\r\n\t\t// after we advanced the scenegraph, we might have some script that needs executing\r\n\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t// now we want to execute the onEnter\r\n\t\tthis.dispatchEvent(this._enterFrame);\r\n\r\n\t\t// after we executed the onEnter, we might have some script that needs executing\r\n\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t// now we execute any intervals queued\r\n\t\tFrameScriptManager.execute_intervals();\r\n\r\n\t\t// finally, we execute any scripts that were added from intervals\r\n\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t//execute any disposes as a result of framescripts\r\n\t\tFrameScriptManager.execute_dispose();\r\n\t}\r\n\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tif (!this._potentialInstances[id])\r\n\t\t\tthis._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n\r\n\t\treturn this._potentialInstances[id];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Stop playback of animation and hold current position\r\n\t */\r\n\tpublic stop():void\r\n\t{\r\n\t\tthis._isPlaying = false;\r\n\t}\r\n\r\n\tpublic clone():MovieClip\r\n\t{\r\n\t\tvar newInstance:MovieClip = (MovieClip._movieClips.length)? MovieClip._movieClips.pop() : new MovieClip(this._timeline);\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(newInstance:MovieClip):void\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.timeline = this._timeline;\r\n\t\tnewInstance.loop = this.loop;\r\n\t}\r\n\r\n\tpublic advanceFrame():void\r\n\t{\r\n\t\tif (this._isPlaying && !this._skipAdvance) {\r\n\t\t\tif (this._currentFrameIndex == this._timeline.keyframe_indices.length - 1) {\r\n\t\t\t\tif (this.loop) // end of loop - jump to first frame.\r\n\t\t\t\t\tthis.currentFrameIndex = 0;\r\n\t\t\t\telse //end of timeline, stop playing\r\n\t\t\t\t\tthis._isPlaying = false;\r\n\t\t\t} else { // not end - construct next frame\r\n\t\t\t\tthis._currentFrameIndex++;\r\n\t\t\t\tthis._timeline.constructNextFrame(this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tvar child:DisplayObject;\r\n\t\tfor (var i:number = 0; i <  len; ++i) {\r\n\t\t\tchild = this._children[i];\r\n\r\n\t\t\tif (child.isAsset(MovieClip))\r\n\t\t\t\t(<MovieClip> child).advanceFrame();\r\n\t\t}\r\n\r\n\t\tthis._skipAdvance = false;\r\n\t}\r\n\r\n// DEBUG CODE:\r\n\tlogHierarchy(depth: number = 0):void\r\n\t{\r\n\t\tthis.printHierarchyName(depth, this);\r\n\r\n\t\tvar len = this._children.length;\r\n\t\tvar child:DisplayObject;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tchild = this._children[i];\r\n\r\n\t\t\tif (child.isAsset(MovieClip))\r\n\t\t\t\t(<MovieClip> child).logHierarchy(depth + 1);\r\n\t\t\telse\r\n\t\t\t\tthis.printHierarchyName(depth + 1, child);\r\n\t\t}\r\n\t}\r\n\r\n\tprintHierarchyName(depth:number, target:DisplayObject):void\r\n\t{\r\n\t\tvar str = \"\";\r\n\t\tfor (var i = 0; i < depth; ++i)\r\n\t\t\tstr += \"--\";\r\n\r\n\t\tstr += \" \" + target.name + \" = \" + target.id;\r\n\t\tconsole.log(str);\r\n\t}\r\n\r\n\tpublic clear():void\r\n\t{\r\n\t\t//clear out potential instances\r\n\t\tvar len:number = this._potentialInstances.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tvar instance:DisplayObject = this._potentialInstances[i];\r\n\r\n\t\t\t//only dispose instances that are not used in script ie. do not have an instance name\r\n\t\t\tif (instance && instance.name == \"\") {\r\n\t\t\t\tFrameScriptManager.add_child_to_dispose(instance);\r\n\t\t\t\tdelete this._potentialInstances[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.clear();\r\n\t}\r\n}\r\nexport default MovieClip;\r\n",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {LightBase}\t\t\t\t\tfrom \"../display/LightBase\";\r\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\r\nimport {Camera}\t\t\t\t\t\tfrom \"../display/Camera\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {CubeMapShadowMapper}\t\t\tfrom \"../materials/shadowmappers/CubeMapShadowMapper\";\r\n\r\nexport class PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[light PointLight]\";\r\n\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PointLight.assetType;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds():void\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, cameraTransform:Matrix3D, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(cameraTransform));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n}",
    "import {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\r\nimport {BasicPartition}\t\t\t\tfrom \"../partition/BasicPartition\";\r\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\r\n\r\nexport class Scene extends DisplayObjectContainer\r\n{\r\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor(partition:PartitionBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.partition = partition || new BasicPartition();\r\n\r\n\t\tthis._iIsRoot = true;\r\n\t\tthis._pScene = this;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:ITraverser):void\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:PartitionBase):void\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:PartitionBase):void\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {Graphics}\t\t\t\t\t\tfrom \"../graphics/Graphics\";\r\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\r\nimport {ElementsUtils}\t\t\t\tfrom \"../utils/ElementsUtils\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Shape class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Shape object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Shape objects that contain the same graphics.\r\n * However, a Shape object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nexport class Shape extends DisplayObject\r\n{\r\n\tprivate static _shapes:Array<Shape> = new Array<Shape>();\r\n\r\n\tpublic static assetType:string = \"[asset Shape]\";\r\n\r\n\tprivate _center:Vector3D;\r\n\tprivate _graphics:Graphics;\r\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\r\n\r\n\t//temp point used in hit testing\r\n\tprivate _tempPoint:Point = new Point();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Shape.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where\r\n\t * drawing commands can occur.\r\n\t */\r\n\tpublic get graphics():Graphics\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._graphics.animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._graphics.animator)\r\n\t\t\tthis._graphics.animator.removeOwner(this);\r\n\r\n\t\tthis._graphics.animator = value;\r\n\r\n\t\tif (this._graphics.animator)\r\n\t\t\tthis._graphics.animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Shape.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._graphics.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tthis._graphics.material = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get style():Style\r\n\t{\r\n\t\treturn this._graphics.style;\r\n\t}\r\n\r\n\tpublic set style(value:Style)\r\n\t{\r\n\t\tthis._graphics.style = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Shape object.\r\n\t *\r\n\t * @param material    [optional]        The material with which to render the Shape.\r\n\t */\r\n\tconstructor(material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\r\n\r\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\r\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations():void\r\n\t{\r\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\r\n\t\tthis.transform.clearMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.disposeValues();\r\n\r\n\t\tShape._shapes.push(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeValues():void\r\n\t{\r\n\t\tsuper.disposeValues();\r\n\r\n\t\tthis._graphics.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Shape instance along with all it's children, while re-using the same\r\n\t * material, graphics and animation set. The returned result will be a copy of this shape,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * graphics, and material. Properties that are cloned or created anew for the copy\r\n\t * include subShapees, children of the shape, and the animator.\r\n\t *\r\n\t * If you want to copy just the shape, reusing it's graphics and material while not\r\n\t * cloning it's children, the simplest way is to create a new shape manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Shape = new Shape(original.graphics, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():Shape\r\n\t{\r\n\t\tvar newInstance:Shape = (Shape._shapes.length)? Shape._shapes.pop() : new Shape();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(shape:Shape):void\r\n\t{\r\n\t\tsuper.copyTo(shape);\r\n\r\n\t\tthis._graphics.copyTo(shape.graphics);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds():void\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds():void\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\r\n\t\tif (!this._center)\r\n\t\t\tthis._center = new Vector3D();\r\n\r\n\t\tthis._center.x = box.x + box.width/2;\r\n\t\tthis._center.y = box.y + box.height/2;\r\n\t\tthis._center.z = box.z + box.depth/2;\r\n\r\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _onGraphicsInvalidate(event:AssetEvent):void\r\n\t{\r\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\r\n\t\t\tif (this._pImplicitPartition)\r\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\r\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\r\n\r\n\t\t\tif (this._pImplicitPartition)\r\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\tthis.graphics.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tif(this._graphics.count) {\r\n\t\t\tthis._tempPoint.setTo(x,y);\r\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\r\n\t\t\tvar box:Box;\r\n\r\n\t\t\t//early out for box test\r\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t//early out for non-shape tests\r\n\t\t\tif (!shapeFlag)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//ok do the graphics thing\r\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic clear():void\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._graphics.clear();\r\n\t}\r\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\nimport {BlendMode}\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\r\nimport {ImageCube}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\r\n\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {IAnimationSet}\t\t\t\tfrom \"../animators/IAnimationSet\";\r\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\r\nimport {ISurface}\t\t\t\t\t\tfrom \"../base/ISurface\";\r\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {RenderableEvent}\t\t\t\tfrom \"../events/RenderableEvent\";\r\nimport {SurfaceEvent}\t\t\t\t\tfrom \"../events/SurfaceEvent\";\r\nimport {LightPickerBase}\t\t\t\tfrom \"../materials/lightpickers/LightPickerBase\";\r\nimport {SingleCubeTexture}\t\t\tfrom \"../textures/SingleCubeTexture\";\r\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\r\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nexport class Skybox extends DisplayObject implements IEntity, IRenderable, ISurface\r\n{\r\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\r\n\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _texture:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _owners:Array<IRenderable>;\r\n\tprivate _curves:boolean = false;\r\n\tprivate _imageRect:boolean = false;\r\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\r\n\tprivate _style:Style = new Style();\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether skybox should use curves. Defaults to false.\r\n\t */\r\n\tpublic get curves():boolean\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\tpublic set curves(value:boolean)\r\n\t{\r\n\t\tif (this._curves == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._curves = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use imageRects. Defaults to false.\r\n\t */\r\n\tpublic get imageRect():boolean\r\n\t{\r\n\t\treturn this._imageRect;\r\n\t}\r\n\r\n\tpublic set imageRect(value:boolean)\r\n\t{\r\n\t\tif (this._imageRect == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._imageRect = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A list of the IRenderables that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderable>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get texture():SingleCubeTexture\r\n\t{\r\n\t\treturn this._texture;\r\n\t}\r\n\r\n\tpublic set texture(value:SingleCubeTexture)\r\n\t{\r\n\t\tif (this._texture == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._texture)\r\n\t\t\tthis.removeTexture(this._texture);\r\n\r\n\t\tthis._texture = value;\r\n\r\n\t\tif (this._texture)\r\n\t\t\tthis.addTexture(this._texture);\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\tpublic getNumTextures():number\r\n\t{\r\n\t\treturn this._textures.length;\r\n\t}\r\n\r\n\tpublic getTextureAt(index:number):TextureBase\r\n\t{\r\n\t\treturn this._textures[index];\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get style():Style\r\n\t{\r\n\t\treturn this._style;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(image:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\r\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\r\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._owners = new Array<IRenderable>(this);\r\n\r\n\t\tthis._style.image = image;\r\n\t\tthis.texture =  new SingleCubeTexture();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePasses():void\r\n\t{\r\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\r\n\t}\r\n\r\n\tpublic invalidateElements():void\r\n\t{\r\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\r\n\t}\r\n\t\r\n\tpublic invalidateSurface():void\r\n\t{\r\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\r\n\t}\r\n\r\n\tpublic addTexture(texture:TextureBase):void\r\n\t{\r\n\t\tthis._textures.push(texture);\r\n\r\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n\r\n\t\tthis.onTextureInvalidate();\r\n\t}\r\n\r\n\tpublic removeTexture(texture:TextureBase):void\r\n\t{\r\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\r\n\r\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n\r\n\t\tthis.onTextureInvalidate();\r\n\t}\r\n\r\n\tprivate onTextureInvalidate(event:AssetEvent = null):void\r\n\t{\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\tprivate _onInvalidateProperties(event:StyleEvent):void\r\n\t{\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\tpublic _acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\ttraverser.applyRenderable(this);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}",
    "﻿import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {Graphics}\t\t\t\t\t\tfrom \"../graphics/Graphics\";\r\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\r\nimport {ElementsUtils}\t\t\t\tfrom \"../utils/ElementsUtils\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\r\n\r\n/**\r\n * Sprite is an instance of a Graphics, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of Graphices, which in turn correspond to SubGeometries. Graphices allow different parts\r\n * of the graphics to be assigned different materials.\r\n */\r\nexport class Sprite extends DisplayObjectContainer\r\n{\r\n\tprivate static _sprites:Array<Sprite> = new Array<Sprite>();\r\n\r\n\tpublic static assetType:string = \"[asset Sprite]\";\r\n\r\n\tprivate _center:Vector3D;\r\n\tpublic _graphics:Graphics; //TODO\r\n\tprivate _onGraphicsInvalidateDelegate:(event:AssetEvent) => void;\r\n\r\n\t//temp point used in hit testing\r\n\tprivate _tempPoint:Point = new Point();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Sprite.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Sprite object, where\r\n\t * drawing commands can occur.\r\n\t */\r\n\tpublic get graphics():Graphics\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._graphics.animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._graphics.animator)\r\n\t\t\tthis._graphics.animator.removeOwner(this);\r\n\r\n\t\tthis._graphics.animator = value;\r\n\r\n\t\tif (this._graphics.animator)\r\n\t\t\tthis._graphics.animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Sprite.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._graphics.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tthis._graphics.material = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get style():Style\r\n\t{\r\n\t\treturn this._graphics.style;\r\n\t}\r\n\r\n\tpublic set style(value:Style)\r\n\t{\r\n\t\tthis._graphics.style = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Sprite object.\r\n\t *\r\n\t * @param material    [optional]        The material with which to render the Sprite.\r\n\t */\r\n\tconstructor(material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onGraphicsInvalidateDelegate = (event:AssetEvent) => this._onGraphicsInvalidate(event);\r\n\r\n\t\tthis._graphics = new Graphics(); //unique graphics object for each Sprite\r\n\t\tthis._graphics.addEventListener(AssetEvent.INVALIDATE, this._onGraphicsInvalidateDelegate);\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations():void\r\n\t{\r\n\t\tthis._graphics.applyTransformation(this.transform.matrix3D);\r\n\t\tthis.transform.clearMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.disposeValues();\r\n\r\n\t\tSprite._sprites.push(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeValues():void\r\n\t{\r\n\t\tsuper.disposeValues();\r\n\r\n\t\tthis._graphics.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Sprite instance along with all it's children, while re-using the same\r\n\t * material, graphics and animation set. The returned result will be a copy of this sprite,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * graphics, and material. Properties that are cloned or created anew for the copy\r\n\t * include subSpritees, children of the sprite, and the animator.\r\n\t *\r\n\t * If you want to copy just the sprite, reusing it's graphics and material while not\r\n\t * cloning it's children, the simplest way is to create a new sprite manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Sprite = new Sprite(original.graphics, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():Sprite\r\n\t{\r\n\t\tvar newInstance:Sprite = (Sprite._sprites.length)? Sprite._sprites.pop() : new Sprite();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\tpublic copyTo(sprite:Sprite):void\r\n\t{\r\n\t\tsuper.copyTo(sprite);\r\n\r\n\t\tthis._graphics.copyTo(sprite.graphics);\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds():void\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.union(this._graphics.getBoxBounds(), this._pBoxBounds);\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds():void\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\r\n\t\tif (!this._center)\r\n\t\t\tthis._center = new Vector3D();\r\n\r\n\t\tthis._center.x = box.x + box.width/2;\r\n\t\tthis._center.y = box.y + box.height/2;\r\n\t\tthis._center.z = box.z + box.depth/2;\r\n\r\n\t\tthis._pSphereBounds = this._graphics.getSphereBounds(this._center, this._pSphereBounds);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate _onGraphicsInvalidate(event:AssetEvent):void\r\n\t{\r\n\t\tif (this._pIsEntity != Boolean(this._graphics.count)) {\r\n\t\t\tif (this._pImplicitPartition)\r\n\t\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\r\n\t\t\tthis._pIsEntity = Boolean(this._graphics.count);\r\n\r\n\t\t\tif (this._pImplicitPartition)\r\n\t\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\tthis.graphics.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tif(this._graphics.count) {\r\n\t\t\tthis._tempPoint.setTo(x,y);\r\n\t\t\tvar local:Point = this.globalToLocal(this._tempPoint, this._tempPoint);\r\n\t\t\tvar box:Box;\r\n\r\n\t\t\t//early out for box test\r\n\t\t\tif(!(box = this.getBox()).contains(local.x, local.y, 0))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t//early out for non-shape tests\r\n\t\t\tif (!shapeFlag)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t//ok do the graphics thing\r\n\t\t\tif (this._graphics._hitTestPointInternal(local.x, local.y))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn super._hitTestPointInternal(x, y, shapeFlag, masksFlag);\r\n\t}\r\n\r\n\tpublic clear():void\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._graphics.clear();\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {Float2Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\r\nimport {Byte4Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Matrix}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\r\nimport {ColorTransform}\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\r\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {Sampler2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\r\n\r\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {AntiAliasType}\t\t\t\tfrom \"../text/AntiAliasType\";\r\nimport {GridFitType}\t\t\t\t\tfrom \"../text/GridFitType\";\r\nimport {TextFieldAutoSize}\t\t\tfrom \"../text/TextFieldAutoSize\";\r\nimport {TextFieldType}\t\t\t\tfrom \"../text/TextFieldType\";\r\nimport {TextFormat}\t\t\t\t\tfrom \"../text/TextFormat\";\r\nimport {TextInteractionMode}\t\t\tfrom \"../text/TextInteractionMode\";\r\nimport {TextLineMetrics}\t\t\t\tfrom \"../text/TextLineMetrics\";\r\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\r\nimport {Graphics}\t\t\t\t\t\tfrom \"../graphics/Graphics\";\r\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\r\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {TesselatedFontChar}\t\t\tfrom \"../text/TesselatedFontChar\";\r\nimport {TextFormatAlign}\t\t\t\tfrom \"../text/TextFormatAlign\";\r\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\r\nimport {BitmapFontTable}\t\t\t\tfrom \"../text/BitmapFontTable\";\r\nimport {Single2DTexture}\t\t\t\tfrom \"../textures/Single2DTexture\";\r\nimport {IFontTable}\t\t\t\tfrom \"../text/IFontTable\";\r\nimport {TesselatedFontTable}\t\t\tfrom \"../text/TesselatedFontTable\";\r\nimport {BasicMaterial}\t\t\t\t\tfrom \"../materials/BasicMaterial\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\n\r\n/**\r\n * The TextFieldMultiRender class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextFieldMultiRender class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextFieldMultiRender\r\n * class to manipulate it with ActionScript. TextFieldMultiRender instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextFieldMultiRender()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextFieldMultiRender class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextFieldMultiRender objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextFieldMultiRender.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextFieldMultiRender object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nexport class TextFieldMultiRender extends Sprite\r\n{\r\n\tprivate static _textFields:Array<TextFieldMultiRender> = new Array<TextFieldMultiRender>();\r\n\r\n\tpublic static assetType:string = \"[asset TextFieldMultiRender]\";\r\n\r\n\tprivate _explicitFormats:Array<TextFormat> = new Array<TextFormat>();\r\n\tprivate _explicitFormatsRanges:Array<number> = new Array<number>();\r\n\tprivate _line_indices:Array<number> = new Array<number>();\r\n\tprivate _textGraphicsDirty:boolean;\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\tprivate _textElements:TriangleElements;\r\n\tprivate _textGraphic:Graphic;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean;\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFieldMultiRender.assetType;\r\n\t}\r\n\r\n\tprivate setFormatForRange(start:number, end:number, format:TextFormat)\r\n\t{\r\n\t\tvar i:number=0;\r\n\t\tvar len:number=this._explicitFormats.length;\r\n\t\tvar is_added:boolean=false;\r\n\t\tvar new_formatslist:Array<TextFormat>=new Array<TextFormat>();\r\n\t\tvar new_formatsranges:Array<number>=new Array<number>();\r\n\t\tvar new_cnt=0;\r\n\t\tfor(i=0; i<len; i++){\r\n\t\t\tif(!is_added){\r\n\t\t\t\tif (this._explicitFormatsRanges[(i*2)]>start){\r\n\t\t\t\t\tis_added=true;\r\n\t\t\t\t\tnew_formatslist[new_cnt]=format;\r\n\t\t\t\t\tnew_formatsranges[new_cnt*2]=start;\r\n\t\t\t\t\tnew_formatsranges[(new_cnt*2)+1]=end;\r\n\t\t\t\t\tnew_cnt++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnew_formatslist[new_cnt]=this._explicitFormats[i];\r\n\t\t\tnew_formatsranges[new_cnt*2]=this._explicitFormatsRanges[(i*2)];\r\n\t\t\tnew_formatsranges[(new_cnt*2)+1]=this._explicitFormatsRanges[(i*2)+1];\r\n\t\t\tnew_cnt++;\r\n\t\t}\r\n\t\tthis._explicitFormats=new_formatslist;\r\n\t\tthis._explicitFormatsRanges=new_formatsranges;\r\n\t}\r\n\tprivate getFormatAtChar(char_pos:number):TextFormat\r\n\t{\r\n\t\tvar i:number=0;\r\n\t\tvar len:number=this._explicitFormats.length;\r\n\t\tvar active_format:TextFormat=this.textFormat;\r\n\t\tfor(i=0; i<len; i++){\r\n\t\t\tif((this._explicitFormatsRanges[(i*2)]<=char_pos)&&(this._explicitFormatsRanges[(i*2)+1]>=char_pos)){\r\n\t\t\t\tactive_format=this._explicitFormats[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn active_format;\r\n\t}\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextFieldMultiRender new TextFieldMultiRender();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextFieldMultiRender</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextFieldMultiRender.text</code> and <code> TextFieldMultiRender.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextFieldMultiRender.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue = value.toString();\r\n\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\r\n\t\tthis._textGraphicsDirty = true;\r\n\t}\r\n\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._textFormat = value;\r\n\r\n\t\tthis._textGraphicsDirty = true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The graphics used by the sprite that provides it with its shape.\r\n\t */\r\n\tpublic get graphics():Graphics\r\n\t{\r\n\t\tif (this._textGraphicsDirty)\r\n\t\t\tthis.reConstruct();\r\n\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic _textColor:number /*int*/;\r\n\r\n\tpublic get textColor()\r\n\t{\r\n\t\treturn this._textColor;\r\n\t}\r\n\r\n\tpublic set textColor(value:number)\r\n\t{\r\n\t\tthis._textColor = value;\r\n\t\tif(!this.transform.colorTransform)\r\n\t\t\tthis.transform.colorTransform = new ColorTransform();\r\n\r\n\t\tthis.transform.colorTransform.color = value;\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn true; //TODO do this better\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TextFieldMultiRender instance. After you create the TextFieldMultiRender instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextFieldMultiRender instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tif (this._textElements)\r\n\t\t\tthis._textElements.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.disposeValues();\r\n\r\n\t\tTextFieldMultiRender._textFields.push(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeValues()\r\n\t{\r\n\t\tsuper.disposeValues();\r\n\r\n\t\tthis._textFormat = null;\r\n\t\tthis._textGraphic = null;\r\n\r\n\t\tif (this._textElements) {\r\n\t\t\tthis._textElements.dispose();\r\n\t\t\tthis._textElements = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Graphics for this Text-field.\r\n\t */\r\n\tpublic reConstruct(useCanvas2dhack:boolean=false) {\r\n\r\n\t\tthis._textGraphicsDirty = false;\r\n\r\n\t\tif(this._textFormat == null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tif (this._textGraphic) {\r\n\t\t\tthis._textGraphic.dispose();\r\n\t\t\tthis._textGraphic = null;\r\n\r\n\t\t\tthis._textElements.clear();\r\n\t\t\tthis._textElements.dispose();\r\n\t\t\tthis._textElements = null;\r\n\t\t}\r\n\r\n\t\tif(this._text == \"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar activeFormat:TextFormat=null;\r\n\t\tvar newFormat:TextFormat=null;\r\n\r\n\t\t// split text into lines\r\n\t\t// todo: split at all sorts of linebreaks (incl escaped linebreaks like we do right now)\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\r\n\t\tvar maxlineWidth:number=this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\r\n\r\n\t\tvar tl_char_codes:Array<Array<number>> = [];\r\n\t\tvar tl_char_widths:Array<Array<number>> = [];\r\n\t\tvar tl_char_formats:Array<Array<TextFormat>> = [];\r\n\t\tvar tl_width:Array<number> = [];\r\n\t\tvar tl_height:Array<number> = [];\r\n\t\tvar tl_cnt:number=0;\r\n\t\tvar w:number=0;\r\n\t\tvar c:number=0;\r\n\t\tvar tl:number=0;\r\n\t\tvar words:Array<string>;\r\n\t\tvar char_cnt:number=0;\r\n\t\tvar char_width:number=0;\r\n\t\tvar numVertices:number = 0;\r\n\t\tthis._line_indices=[];\r\n\t\t// sort all chars into final lines\r\n\t\tfor (tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tconsole.log(\"textline nr: \"+tl+\" : \"+textlines[tl]);\r\n\t\t\tthis._line_indices[tl_cnt]=char_cnt;\r\n\t\t\ttl_char_codes[tl_cnt]=[];\r\n\t\t\ttl_char_widths[tl_cnt]=[];\r\n\t\t\ttl_char_formats[tl_cnt]=[];\r\n\t\t\ttl_width[tl_cnt]=0;\r\n\t\t\ttl_height[tl_cnt]=0;\r\n\t\t\ttl_cnt++;\r\n\t\t\twords = textlines[tl].split(\" \");\r\n\t\t\tfor (w = 0; w < words.length; w++) {\r\n\t\t\t\tvar word_width:number=0;\r\n\t\t\t\tvar char_widths:Array<number>=[];\r\n\t\t\t\tvar char_formats:Array<TextFormat>=[];\r\n\t\t\t\tvar max_word_height:number=0;\r\n\t\t\t\tfor (c = 0; c < words[w].length; c++) {\r\n\t\t\t\t\tnewFormat=this.getFormatAtChar(char_cnt);\r\n\t\t\t\t\tif(newFormat!=activeFormat){\r\n\t\t\t\t\t\tactiveFormat=newFormat;\r\n\t\t\t\t\t\tactiveFormat.font_table.initFontSize(activeFormat.size);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchar_formats[c]=activeFormat;\r\n\t\t\t\t\tvar lineHeight:number=activeFormat.font_table.getLineHeight();\r\n\t\t\t\t\tif(lineHeight>max_word_height)max_word_height=lineHeight;\r\n\r\n\t\t\t\t\tchar_width = activeFormat.font_table.getCharWidth(words[w].charCodeAt(c).toString());\r\n\t\t\t\t\tnumVertices += activeFormat.font_table.getCharVertCnt(words[w].charCodeAt(c).toString());\r\n\t\t\t\t\tchar_widths[c]=char_width;\r\n\t\t\t\t\tword_width += char_width;\r\n\t\t\t\t\tchar_cnt++;\r\n\t\t\t\t}\r\n\t\t\t\t// word fits into line, just add it to the last line\r\n\t\t\t\tif((tl_width[tl_cnt-1]+word_width) <= maxlineWidth){\r\n\t\t\t\t\tif(tl_width[tl_cnt-1]!=0){\r\n\t\t\t\t\t\t// there is already a word in this line. we want to add a space\r\n\t\t\t\t\t\ttl_char_codes[tl_cnt-1].push(32);\r\n\t\t\t\t\t\t//todo: get correct format\r\n\t\t\t\t\t\ttl_char_widths[tl_cnt-1].push(activeFormat.font_table.getCharWidth(\"32\"));\r\n\t\t\t\t\t\ttl_char_formats[tl_cnt-1].push(activeFormat);\r\n\t\t\t\t\t\ttl_width[tl_cnt-1]+=activeFormat.font_table.getCharWidth(\"32\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (c = 0; c < words[w].length; c++) {\r\n\t\t\t\t\t\ttl_char_codes[tl_cnt-1].push(words[w].charCodeAt(c));\r\n\t\t\t\t\t\ttl_char_widths[tl_cnt-1].push(char_widths[c]);\r\n\t\t\t\t\t\ttl_char_formats[tl_cnt-1].push(char_formats[c]);\r\n\t\t\t\t\t\ttl_width[tl_cnt-1]+=word_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tl_height[tl_cnt-1]<max_word_height)tl_height[tl_cnt-1]=max_word_height;\r\n\t\t\t\t}\r\n\t\t\t\t// word does not fit into line, but it is first word added to line, so we add it anyway.\r\n\t\t\t\t// todo: respect auto--wrap / multiline settings + optional include 3rd party tool for splitting into sylibils\r\n\t\t\t\telse if(tl_width[tl_cnt-1]==0){\r\n\t\t\t\t\tfor (c = 0; c < words[w].length; c++) {\r\n\t\t\t\t\t\ttl_char_codes[tl_cnt-1].push(words[w].charCodeAt(c));\r\n\t\t\t\t\t\ttl_char_widths[tl_cnt-1].push(char_widths[c]);\r\n\t\t\t\t\t\ttl_char_formats[tl_cnt-1].push(char_formats[c]);\r\n\t\t\t\t\t\ttl_width[tl_cnt-1]+=word_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tl_height[tl_cnt-1]<max_word_height)tl_height[tl_cnt-1]=max_word_height;\r\n\t\t\t\t}\r\n\t\t\t\t// word does not fit, and there are already words on this line\r\n\t\t\t\telse{\r\n\t\t\t\t\ttl_char_codes[tl_cnt]=[];\r\n\t\t\t\t\ttl_char_widths[tl_cnt]=[];\r\n\t\t\t\t\ttl_char_formats[tl_cnt]=[];\r\n\t\t\t\t\ttl_width[tl_cnt]=0;\r\n\t\t\t\t\ttl_height[tl_cnt]=0;\r\n\t\t\t\t\ttl_cnt++;\r\n\t\t\t\t\tfor (c = 0; c < words[w].length; c++) {\r\n\t\t\t\t\t\ttl_char_codes[tl_cnt-1].push(words[w].charCodeAt(c));\r\n\t\t\t\t\t\ttl_char_widths[tl_cnt-1].push(char_widths[c]);\r\n\t\t\t\t\t\ttl_char_formats[tl_cnt-1].push(char_formats[c]);\r\n\t\t\t\t\t\ttl_width[tl_cnt-1]+=word_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tl_height[tl_cnt-1]<max_word_height)tl_height[tl_cnt-1]=max_word_height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar tl_startx:Array<Array<number> >=[];\r\n\t\t// calculate the final positions of the chars\r\n\t\tfor (tl = 0; tl < tl_width.length; tl++) {\r\n\r\n\t\t\tvar x_offset:number= 2 + this._textFormat.leftMargin + this._textFormat.indent;\r\n\t\t\tvar justify_addion:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=2 + this._textFormat.leftMargin + this._textFormat.indent+(maxlineWidth-tl_width[tl])/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"justify\"){\r\n\t\t\t\t/*if(final_lines_justify_bool[i]){\r\n\t\t\t\t\tjustify_addion=((maxlineWidth)-final_lines_width[i])/final_lines_justify[i];\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-tl_width[tl])-(2 + this._textFormat.rightMargin);\r\n\t\t\t}\r\n\t\t\ttl_startx[tl]=[];\r\n\t\t\tthis.textHeight=0;\r\n\t\t\tfor (var c = 0; c < tl_char_codes[tl].length; c++) {\r\n\t\t\t\tthis.textHeight+=tl_height[tl];\r\n\t\t\t\ttl_startx[tl][c]=x_offset;\r\n\t\t\t\tx_offset+=tl_char_widths[tl][c];\r\n\t\t\t\t// if this is a whitespace, we add the justify additional spacer\r\n\t\t\t\tif(tl_char_codes[tl][c]==32){\r\n\t\t\t\t\tx_offset+=justify_addion;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t//todo: i tried to use the isAsset() function instead of comparing the strings myself, but this didnt seem to work. need to find out why\r\n\t\tif(this._textFormat.font_table.assetType==TesselatedFontTable.assetType){\r\n\t\t\tvar tess_fontTable:TesselatedFontTable = <TesselatedFontTable>this._textFormat.font_table;\r\n\t\t\tvar elements:TriangleElements;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar y_offset:number=0;\r\n\t\t\tvar char_scale:number=0;\r\n\t\t\tvar vertices:Float32Array = new Float32Array(numVertices*3);\r\n\r\n\t\t\tfor (tl = 0; tl < tl_width.length; tl++) {\r\n\t\t\t\tconsole.log(\"textline nr: \"+tl+\" : \"+tl_char_codes[tl]);\r\n\t\t\t\t//console.log(\"tl_width = \"+tl_width[tl]);\r\n\t\t\t\ty_offset+=tl_height[tl];\r\n\t\t\t\tfor (var c = 0; c < tl_char_codes[tl].length; c++) {\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = tess_fontTable.getChar(tl_char_codes[tl][c].toString());\r\n\t\t\t\t\tchar_scale = tess_fontTable._size_multiply;\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\telements = this_char.elements;\r\n\t\t\t\t\t\tif (elements != null) {\r\n\t\t\t\t\t\t\tvar buffer:Float32Array = new Float32Array(elements.concatenatedBuffer.buffer);\r\n\t\t\t\t\t\t\tfor (var v:number = 0; v < elements.numVertices; v++) {\r\n\t\t\t\t\t\t\t\tvertices[j++] = buffer[v*3] * char_scale + tl_startx[tl][c];\r\n\t\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 1] * char_scale + y_offset-tl_height[tl];\r\n\t\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 2];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 3);\r\n\t\t\tattributesView.set(vertices);\r\n\t\t\tvar vertexBuffer:AttributesBuffer = attributesView.attributesBuffer;\r\n\t\t\tattributesView.dispose();\r\n\r\n\t\t\tthis._textElements = new TriangleElements(vertexBuffer);\r\n\t\t\tthis._textElements.setPositions(new Float2Attributes(vertexBuffer));\r\n\t\t\tthis._textElements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\r\n\r\n\t\t\tthis._textGraphic = this._graphics.addGraphic(this._textElements);\r\n\r\n\t\t\tthis.material = this._textFormat.material;\r\n\t\t\tvar sampler:Sampler2D = new Sampler2D();\r\n\t\t\tthis.style = new Style();\r\n\t\t\tthis.style.addSamplerAt(sampler, this.material.getTextureAt(0));\r\n\t\t\tthis.style.uvMatrix = new Matrix(0,0,0,0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\r\n\t\t\tthis.material.animateUVs = true;\r\n\t\t}\r\n\r\n\t\telse if(this._textFormat.font_table.assetType==BitmapFontTable.assetType){\r\n\t\t\tconsole.log(\"contruct bitmap text = \"+this._text);\r\n\t\t\tvar bitmap_fontTable:BitmapFontTable = <BitmapFontTable>this._textFormat.font_table;\r\n\t\t\tif(!useCanvas2dhack){\r\n\t\t\t\tvar vertices:Float32Array = new Float32Array(numVertices*7);\r\n\t\t\t\tvar vert_cnt:number=0;\r\n\t\t\t\tvar y_offset:number=0;//2+(tess_fontTable.ascent-tess_fontTable.get_font_em_size())*char_scale;\r\n\t\t\t\tfor (tl = 0; tl < tl_width.length; tl++) {\r\n\t\t\t\t\tconsole.log(\"textline nr: \"+tl+\" : \"+tl_char_codes[tl]);\r\n\t\t\t\t\t//console.log(\"tl_width = \"+tl_width[tl]);\r\n\t\t\t\t\ty_offset+=tl_height[tl];\r\n\t\t\t\t\tfor (var c = 0; c < tl_char_codes[tl].length; c++) {\r\n\t\t\t\t\t\t//console.log(\"tl_char_codes[tl] = \"+tl_char_codes[tl][c]);\r\n\t\t\t\t\t\t//console.log(\"tl_startx[tl] = \"+tl_startx[tl][c]);\r\n\t\t\t\t\t\t//console.log(\"y_offset = \"+y_offset);\r\n\t\t\t\t\t\t//console.log(\"vert_cnt = \"+vert_cnt);\r\n\t\t\t\t\t\tvar char_data:Array<number>=bitmap_fontTable.getCharData(tl_char_codes[tl][c].toString());\r\n\r\n\t\t\t\t\t\tconsole.log(\"char_data = \"+char_data);\r\n\t\t\t\t\t\tvertices[vert_cnt++] = tl_startx[tl][c]+char_data[4];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = y_offset-tl_height[tl]+char_data[5];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[0];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[1];\r\n\r\n\t\t\t\t\t\tvertices[vert_cnt++] = tl_startx[tl][c] + tl_char_widths[tl][c]+char_data[4];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = y_offset -tl_height[tl]+char_data[5];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[0] + char_data[2];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[1];\r\n\r\n\t\t\t\t\t\tvertices[vert_cnt++] = tl_startx[tl][c] + tl_char_widths[tl][c]+char_data[4];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = y_offset;\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[0] + char_data[2];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[1] + char_data[3];\r\n\r\n\t\t\t\t\t\tvertices[vert_cnt++] = tl_startx[tl][c] + tl_char_widths[tl][c]+char_data[4];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = y_offset;\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[0] + char_data[2];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[1] + char_data[3];\r\n\r\n\t\t\t\t\t\tvertices[vert_cnt++] = tl_startx[tl][c]+char_data[4];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = y_offset;\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[0];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[1] + char_data[3];\r\n\r\n\t\t\t\t\t\tvertices[vert_cnt++] = tl_startx[tl][c]+char_data[4];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = y_offset -tl_height[tl]+char_data[5];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[0];\r\n\t\t\t\t\t\tvertices[vert_cnt++] = char_data[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 4);\r\n\t\t\t\tattributesView.set(vertices);\r\n\t\t\t\tvar vertexBuffer:AttributesBuffer = attributesView.attributesBuffer;\r\n\t\t\t\tattributesView.dispose();\r\n\r\n\t\t\t\tthis._textElements = new TriangleElements(vertexBuffer);\r\n\t\t\t\tthis._textElements.setPositions(new Float2Attributes(vertexBuffer));\r\n\t\t\t\t//this._textElements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\r\n\t\t\t\t//this._textElements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\r\n\t\t\t\tthis._textElements.setUVs(new Float2Attributes(vertexBuffer));\r\n\r\n\t\t\t\tthis._textGraphic = this._graphics.addGraphic(this._textElements);\r\n\r\n\t\t\t\tvar basic_mat:BasicMaterial = new BasicMaterial();\r\n\t\t\t\tbasic_mat.texture = new Single2DTexture(bitmap_fontTable.get_page());\r\n\t\t\t\tbasic_mat.bothSides = true;\r\n\t\t\t\t//basic_mat.preserveAlpha = true;\r\n\t\t\t\tbasic_mat.alphaBlending = true;\r\n\t\t\t\tthis.material = <MaterialBase>basic_mat;\r\n\t\t\t\t//var sampler:Sampler2D = new Sampler2D();\r\n\t\t\t\t//this.style = new Style();\r\n\t\t\t\t//this.style.addSamplerAt(sampler, new Single2DTexture(bitmap_fontTable.get_page()));\r\n\t\t\t\t//this.style.uvMatrix = new Matrix(0,0,0,0, 0, 0);\r\n\t\t\t\t//this.material.animateUVs = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\r\n\t\t\t\tvar canvas:HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(\"myCanvas\");\r\n\t\t\t\tif (canvas==null){\r\n\t\t\t\t\tcanvas = document.createElement(\"canvas\");\r\n\t\t\t\t\tcanvas.id = \"myCanvas\";\r\n\t\t\t\t\tdocument.body.appendChild(canvas);\r\n\r\n\t\t\t\t}\r\n\t\t\t\tvar ctx = canvas.getContext(\"2d\");\r\n\t\t\t\tctx.canvas.width  = window.innerWidth;\r\n\t\t\t\tctx.canvas.height = window.innerHeight;\r\n\t\t\t\t//var transform_mx:Matrix3D=this.transform.matrix3D;\r\n\t\t\t\t//ctx.setTransform(transform_mx.a,transform_mx.b,transform_mx.c,transform_mx.d,transform_mx.tx,transform_mx.ty);\r\n\t\t\t\tctx.rect(0, 0, this.textWidth, this.textHeight);\r\n\t\t\t\tctx.fillStyle = \"black\";\r\n\t\t\t\tctx.fill();\r\n\t\t\t\t//ctx.drawImage(bitmap_fontTable.get_page().getCanvas(), 50, 50, 200, 200, 0, 0, 100, 100);\r\n\t\t\t\tvar y_offset:number=0;//2+(tess_fontTable.ascent-tess_fontTable.get_font_em_size())*char_scale;\r\n\t\t\t\tfor (tl = 0; tl < tl_width.length; tl++) {\r\n\t\t\t\t\tconsole.log(\"textline nr: \"+tl+\" : \"+tl_char_codes[tl]);\r\n\t\t\t\t\t//console.log(\"tl_width = \"+tl_width[tl]);\r\n\t\t\t\t\ty_offset+=tl_height[tl];\r\n\t\t\t\t\tfor (var c = 0; c < tl_char_codes[tl].length; c++) {\r\n\t\t\t\t\t\tvar char_data:Array<number>=bitmap_fontTable.getCharDataCanvas(tl_char_codes[tl][c].toString());\r\n\r\n\t\t\t\t\t\tctx.drawImage(\r\n\t\t\t\t\t\t\tbitmap_fontTable.get_page().getCanvas(),\r\n\t\t\t\t\t\t\tchar_data[0], char_data[1],\r\n\t\t\t\t\t\t\tchar_data[2], char_data[3],\r\n\t\t\t\t\t\t\ttl_startx[tl][c] + char_data[4], y_offset - tl_height[tl] + char_data[5],\r\n\t\t\t\t\t\t\ttl_char_widths[tl][c], tl_height[tl] - char_data[5]\r\n\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextFieldMultiRender objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextFieldMultiRender cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone():TextFieldMultiRender\r\n    {\r\n\t\tvar newInstance:TextFieldMultiRender = (TextFieldMultiRender._textFields.length)? TextFieldMultiRender._textFields.pop() : new TextFieldMultiRender();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n    }\r\n\r\n\r\n\tpublic copyTo(newInstance:TextFieldMultiRender)\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.textWidth = this._textWidth;\r\n\t\tnewInstance.textHeight = this._textHeight;\r\n\t\tnewInstance.textFormat = this._textFormat;\r\n\t\t//newInstance.textColor = this._textColor;\r\n\t\tnewInstance.text = this._text;\r\n\t}\r\n}\r\n",
    "import {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {Float2Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\r\nimport {Byte4Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\r\nimport {Matrix3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Matrix}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\r\nimport {ColorTransform}\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\r\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {Sampler2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\r\n\r\nimport {HierarchicalProperties}\t\tfrom \"../base/HierarchicalProperties\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {AntiAliasType}\t\t\t\tfrom \"../text/AntiAliasType\";\r\nimport {GridFitType}\t\t\t\tfrom \"../text/GridFitType\";\r\nimport {TextFieldAutoSize}\t\t\tfrom \"../text/TextFieldAutoSize\";\r\nimport {TextFieldType}\t\t\t\tfrom \"../text/TextFieldType\";\r\nimport {TextFormat}\t\t\t\t\tfrom \"../text/TextFormat\";\r\nimport {TextInteractionMode}\t\tfrom \"../text/TextInteractionMode\";\r\nimport {TextLineMetrics}\t\t\tfrom \"../text/TextLineMetrics\";\r\nimport {Sprite}\t\t\t\t\t\tfrom \"../display/Sprite\";\r\nimport {Graphics}\t\t\t\t\tfrom \"../graphics/Graphics\";\r\nimport {Graphic}\t\t\t\t\tfrom \"../graphics/Graphic\";\r\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {TesselatedFontChar}\t\t\tfrom \"../text/TesselatedFontChar\";\r\nimport {TextFormatAlign}\t\t\tfrom \"../text/TextFormatAlign\";\r\nimport {TesselatedFontTable}\t\tfrom \"../text/TesselatedFontTable\";\r\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nexport class TextField extends Sprite\r\n{\r\n\tprivate static _textFields:Array<TextField> = new Array<TextField>();\r\n\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _textGraphicsDirty:boolean;\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\tprivate _textElements:TriangleElements;\r\n\tprivate _textGraphic:Graphic;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean;\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue = value.toString();\r\n\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\r\n\t\tthis._textGraphicsDirty = true;\r\n\t}\r\n\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._textFormat = value;\r\n\r\n\t\tthis._textGraphicsDirty = true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The graphics used by the sprite that provides it with its shape.\r\n\t */\r\n\tpublic get graphics():Graphics\r\n\t{\r\n\t\tif (this._textGraphicsDirty)\r\n\t\t\tthis.reConstruct();\r\n\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic _textColor:number /*int*/;\r\n\r\n\tpublic get textColor():number\r\n\t{\r\n\t\treturn this._textColor;\r\n\t}\r\n\r\n\tpublic set textColor(value:number)\r\n\t{\r\n\t\tthis._textColor = value;\r\n\t\tif(!this.transform.colorTransform)\r\n\t\t\tthis.transform.colorTransform = new ColorTransform();\r\n\r\n\t\tthis.transform.colorTransform.color = value;\r\n\t\tthis.pInvalidateHierarchicalProperties(HierarchicalProperties.COLOR_TRANSFORM);\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity():boolean\r\n\t{\r\n\t\treturn true; //TODO do this better\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\tpublic clear():void\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tif (this._textElements)\r\n\t\t\tthis._textElements.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.disposeValues();\r\n\r\n\t\tTextField._textFields.push(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeValues():void\r\n\t{\r\n\t\tsuper.disposeValues();\r\n\r\n\t\tthis._textFormat = null;\r\n\t\tthis._textGraphic = null;\r\n\r\n\t\tif (this._textElements) {\r\n\t\t\tthis._textElements.dispose();\r\n\t\t\tthis._textElements = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Graphics for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\t\tthis._textGraphicsDirty = false;\r\n\r\n\t\tif(this._textFormat == null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tif (this._textGraphic) {\r\n\t\t\tthis._textGraphic.dispose();\r\n\t\t\tthis._textGraphic = null;\r\n\r\n\t\t\tthis._textElements.clear();\r\n\t\t\tthis._textElements.dispose();\r\n\t\t\tthis._textElements = null;\r\n\t\t}\r\n\r\n\t\tif(this._text == \"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar numVertices:number = 0;\r\n\t\tvar elements:TriangleElements;\r\n\t\tvar thisFormat:TesselatedFontTable=<TesselatedFontTable>this._textFormat.font_table;\r\n\r\n\t\tvar fallbackFormat:TesselatedFontTable=null;\r\n\t\tif (this._textFormat.fallback_font_table)\r\n\t\t\tfallbackFormat = <TesselatedFontTable>this._textFormat.fallback_font_table;\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/thisFormat.get_font_em_size();\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar whitespace_width=(thisFormat.get_whitespace_width() * char_scale)+this._textFormat.letterSpacing;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\\\n\");\r\n\t\tvar final_lines_chars:Array<Array<TesselatedFontChar>> = [];\r\n\t\tvar final_lines_char_scale:Array<Array<number>> = [];\r\n\t\tvar final_lines_width:Array<number> = [];\r\n\t\tvar final_lines_justify_bool:Array<Boolean> = [];\r\n\t\tvar final_lines_justify:Array<number> = [];\r\n\t\tvar maxlineWidth:number=this.textWidth - (4 + this._textFormat.leftMargin + this._textFormat.rightMargin + this._textFormat.indent);\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\r\n\t\t\tfinal_lines_chars.push([]);\r\n\t\t\tfinal_lines_char_scale.push([]);\r\n\t\t\tfinal_lines_width.push(0);\r\n\t\t\tfinal_lines_justify.push(0);\r\n\t\t\tfinal_lines_justify_bool.push(false);\r\n\r\n\r\n\t\t\tvar words:Array<string> = textlines[tl].split(\" \");\r\n\t\t\tfor (var i = 0; i < words.length; i++) {\r\n\t\t\t\tvar word_width:number = 0;\r\n\t\t\t\tvar word_chars:Array<TesselatedFontChar> = [];\r\n\t\t\t\tvar word_chars_scale:Array<number> = [];\r\n\t\t\t\tvar c_cnt:number = 0;\r\n\t\t\t\tfor (var w = 0; w < words[i].length; w++) {\r\n\t\t\t\t\tchar_scale = this._textFormat.size / thisFormat.get_font_em_size();\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> thisFormat.getChar(words[i].charCodeAt(w).toString());\r\n\t\t\t\t\tif (this_char == null) {\r\n\t\t\t\t\t\tif (fallbackFormat) {\r\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / fallbackFormat.get_font_em_size();\r\n\t\t\t\t\t\t\tthis_char = fallbackFormat.getChar(words[i].charCodeAt(w).toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\telements = this_char.elements;\r\n\t\t\t\t\t\tif (elements != null) {\r\n\t\t\t\t\t\t\tnumVertices += elements.numVertices;\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == words[i].charCodeAt(w)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tword_width += ((2 + this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tword_width += whitespace_width;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\r\n\t\t\t\t\t\t//x_offset += thisFormat.get_font_em_size() * char_scale;\r\n\t\t\t\t\t\tword_width += whitespace_width;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tword_chars_scale[c_cnt] = char_scale;\r\n\t\t\t\t\tword_chars[c_cnt++] = this_char;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (((final_lines_width[final_lines_width.length - 1] + word_width) <= maxlineWidth)||(final_lines_chars[final_lines_chars.length - 1].length==0)) {\r\n\t\t\t\t\t// if line can hold this word without breaking the bounds, we can just add all chars\r\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += word_width;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// word does not fit\r\n\t\t\t\t\t// todo respect autowrapping properties.\r\n\t\t\t\t\t// right now we just pretend everything has autowrapping and multiline\r\n\t\t\t\t\tif(final_lines_chars[final_lines_chars.length - 1][final_lines_chars[final_lines_chars.length - 1].length-1]==null){\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].pop();\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].pop();\r\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] -= whitespace_width;\r\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]-=1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfinal_lines_justify_bool[final_lines_justify_bool.length - 1]=true;\r\n\t\t\t\t\tfinal_lines_chars.push([]);\r\n\t\t\t\t\tfinal_lines_char_scale.push([]);\r\n\t\t\t\t\tfinal_lines_width.push(0);\r\n\t\t\t\t\tfinal_lines_justify.push(0);\r\n\t\t\t\t\tfinal_lines_justify_bool.push(false);\r\n\t\t\t\t\tfor (var fw:number = 0; fw < word_chars_scale.length; fw++) {\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(word_chars[fw]);\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(word_chars_scale[fw]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] = word_width;\r\n\t\t\t\t}\r\n\t\t\t\tif (i < (words.length - 1)) {\r\n\t\t\t\t\tif ((final_lines_width[final_lines_width.length - 1]) <= maxlineWidth) {\r\n\t\t\t\t\t\tfinal_lines_chars[final_lines_chars.length - 1].push(null);\r\n\t\t\t\t\t\tfinal_lines_char_scale[final_lines_char_scale.length - 1].push(char_scale);\r\n\t\t\t\t\t\tfinal_lines_width[final_lines_width.length - 1] += whitespace_width;\r\n\t\t\t\t\t\tfinal_lines_justify[final_lines_justify.length - 1]+=1;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ty_offset=2+(thisFormat.ascent-thisFormat.get_font_em_size())*char_scale;\r\n\r\n\t\tvar vertices:Float32Array = new Float32Array(numVertices*3);\r\n\r\n\t\tfor (var i = 0; i < final_lines_chars.length; i++) {\r\n\r\n\t\t\tvar x_offset:number= 2 + this._textFormat.leftMargin + this._textFormat.indent;\r\n\t\t\tvar justify_addion:number=0;\r\n\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\tx_offset=2 + this._textFormat.leftMargin + this._textFormat.indent+(maxlineWidth-final_lines_width[i])/2;\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"justify\"){\r\n\t\t\t\tif(final_lines_justify_bool[i]){\r\n\t\t\t\t\tjustify_addion=((maxlineWidth)-final_lines_width[i])/final_lines_justify[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\tx_offset=(this._textWidth-final_lines_width[i])-(2 + this._textFormat.rightMargin);\r\n\t\t\t}\r\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\tfor (var t = 0; t < final_lines_chars[i].length; t++) {\r\n\t\t\t\tvar this_char:TesselatedFontChar = final_lines_chars[i][t];\r\n\t\t\t\tchar_scale = final_lines_char_scale[i][t];\r\n\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\telements = this_char.elements;\r\n\t\t\t\t\tif (elements != null) {\r\n\t\t\t\t\t\tvar buffer:Float32Array = new Float32Array(elements.concatenatedBuffer.buffer);\r\n\t\t\t\t\t\tfor (var v:number = 0; v < elements.numVertices; v++) {\r\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3]*char_scale + x_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 1]*char_scale + y_offset;\r\n\t\t\t\t\t\t\tvertices[j++] = buffer[v*3 + 2];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-elements was found, we insert a \"space\"\r\n\t\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tx_offset+=whitespace_width+justify_addion;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// hack for multiline textfield in icycle.\r\n\r\n\t\t\ty_offset+=(thisFormat.ascent + thisFormat.descent)*char_scale;\r\n\t\t\t//y_offset+=(thisFormat.get_font_em_size()-thisFormat.descent)*char_scale;\r\n\t\t\ty_offset+= this._textFormat.leading;\r\n\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 3);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar vertexBuffer:AttributesBuffer = attributesView.attributesBuffer;\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis._textElements = new TriangleElements(vertexBuffer);\r\n\t\tthis._textElements.setPositions(new Float2Attributes(vertexBuffer));\r\n\t\tthis._textElements.setCustomAttributes(\"curves\", new Byte4Attributes(vertexBuffer, false));\r\n\r\n\t\tthis._textGraphic = this._graphics.addGraphic(this._textElements);\r\n\r\n\t\tthis.material = this._textFormat.material;\r\n\t\tvar sampler:Sampler2D = new Sampler2D();\r\n\t\tthis.style = new Style();\r\n\t\tthis.style.addSamplerAt(sampler, this.material.getTextureAt(0));\r\n\t\tthis.style.uvMatrix = new Matrix(0,0,0,0, this._textFormat.uv_values[0], this._textFormat.uv_values[1]);\r\n\t\tthis.material.animateUVs = true;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph():void\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string):void\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string):void\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/):void\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):void\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone():TextField\r\n    {\r\n\t\tvar newInstance:TextField = (TextField._textFields.length)? TextField._textFields.pop() : new TextField();\r\n\r\n\t\tthis.copyTo(newInstance);\r\n\r\n\t\treturn newInstance;\r\n    }\r\n\r\n\r\n\tpublic copyTo(newInstance:TextField):void\r\n\t{\r\n\t\tsuper.copyTo(newInstance);\r\n\r\n\t\tnewInstance.textWidth = this._textWidth;\r\n\t\tnewInstance.textHeight = this._textHeight;\r\n\t\tnewInstance.textFormat = this._textFormat;\r\n\t\t//newInstance.textColor = this._textColor;\r\n\t\tnewInstance.text = this._text;\r\n\t}\r\n}",
    "export {Billboard}\t\t\t\t\t\tfrom \"./display/Billboard\";\r\nexport {Camera}\t\t\t\t\t\t\tfrom \"./display/Camera\";\r\nexport {DirectionalLight}\t\t\t\tfrom \"./display/DirectionalLight\";\r\nexport {DisplayObject}\t\t\t\t\tfrom \"./display/DisplayObject\";\r\nexport {DisplayObjectContainer}\t\t\tfrom \"./display/DisplayObjectContainer\";\r\nexport {IEntity}\t\t\t\t\t\t\tfrom \"./display/IEntity\";\r\nexport {LightBase}\t\t\t\t\t\tfrom \"./display/LightBase\";\r\nexport {LightProbe}\t\t\t\t\t\tfrom \"./display/LightProbe\";\r\nexport {LineSegment}\t\t\t\t\t\tfrom \"./display/LineSegment\";\r\nexport {LoaderContainer}\t\t\t\t\tfrom \"./display/LoaderContainer\";\r\nexport {MovieClip}\t\t\t\t\t\tfrom \"./display/MovieClip\";\r\nexport {PointLight}\t\t\t\t\t\tfrom \"./display/PointLight\";\r\nexport {Scene}\t\t\t\t\t\t\tfrom \"./display/Scene\";\r\nexport {Shape}\t\t\t\t\t\t\tfrom \"./display/Shape\";\r\nexport {Skybox}\t\t\t\t\t\t\tfrom \"./display/Skybox\";\r\nexport {Sprite}\t\t\t\t\t\t\tfrom \"./display/Sprite\";\r\nexport {TextField}\t\t\t\t\t\tfrom \"./display/TextField\";\r\nexport {TextFieldMultiRender}\t\t\tfrom \"./display/TextFieldMultiRender\";\r\n",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nexport class CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:number = 1;\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:number = 0;\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:number = 2;\r\n}",
    "/**\r\n * DrawMode is an enumeration of constant values that specify the\r\n * DrawMode to use when drawing.\r\n */\r\nexport class DrawMode\r\n{\r\n\t/**\r\n\t * Used to specify to draw both strokes and fills\r\n\t */\r\n\tpublic static BOTH:number = 1;\r\n\r\n\t/**\r\n\t * Used to specify to draw strokes only\r\n\t */\r\n\tpublic static STROKE:number = 0;\r\n\r\n\t/**\r\n\t * Used to specify to draw fills only\r\n\t */\r\n\tpublic static FILL:number = 2;\r\n}",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nexport class GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}",
    "import {BitmapImage2D}\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport {Matrix}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\r\n\r\nimport {CapsStyle}\t\t\t\tfrom \"../draw/CapsStyle\";\r\nimport {GradientType}\t\t\t\tfrom \"../draw/GradientType\";\r\nimport {GraphicsPathWinding}\t\tfrom \"../draw/GraphicsPathWinding\";\r\nimport {IGraphicsData}\t\t\tfrom \"../draw/IGraphicsData\";\r\nimport {InterpolationMethod}\t\tfrom \"../draw/InterpolationMethod\";\r\nimport {JointStyle}\t\t\t\tfrom \"../draw/JointStyle\";\r\nimport {LineScaleMode}\t\t\tfrom \"../draw/LineScaleMode\";\r\nimport {TriangleCulling}\t\t\tfrom \"../draw/TriangleCulling\";\r\nimport {SpreadMethod}\t\t\t\tfrom \"../draw/SpreadMethod\";\r\n\r\nimport {Style}\t\t\t\t\tfrom \"../base/Style\";\r\nimport {Graphics}\t\t\t\t\tfrom \"../graphics/Graphics\";\r\nimport {Graphic}\t\t\t\t\tfrom \"../graphics/Graphic\";\r\nimport {GraphicsPath}\t\t\t\tfrom \"../draw/GraphicsPath\";\r\nimport {GraphicsPathCommand}\t\tfrom \"../draw/GraphicsPathCommand\";\r\nimport {DefaultMaterialManager}\tfrom \"../managers/DefaultMaterialManager\";\r\nimport {MovieClip}\t\t\t\tfrom \"../display/MovieClip\";\r\n\r\nimport {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {Sprite}\t\t\t\t\tfrom \"../display/Sprite\";\r\nimport {Float3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\r\nimport {Float2Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\r\n\r\nimport {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\r\n\r\nimport {GraphicsFactoryHelper}\t\t\t\tfrom \"../draw/GraphicsFactoryHelper\";\r\n\r\nimport {PartialImplementationError}\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\r\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nexport class GraphicsFactoryFills\r\n{\r\n\r\n\tpublic static draw_pathes(targetGraphic:Graphics) {\r\n\t\tvar len=targetGraphic.queued_fill_pathes.length;\r\n\t\tvar cp=0;\r\n\t\tfor(cp=0; cp<len; cp++){\r\n\t\t\tvar one_path:GraphicsPath = targetGraphic.queued_fill_pathes[cp];\r\n\t\t\t//one_path.finalizeContour();\r\n\t\t\tvar contour_commands:Array<Array<number> > = one_path.commands;\r\n\t\t\tvar contour_data:Array<Array<number> > = one_path.data;\r\n\t\t\tvar commands:Array<number>;\r\n\t\t\tvar data:Array<number>;\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar k:number = 0;\r\n\t\t\tvar vert_cnt:number = 0;\r\n\t\t\tvar data_cnt:number = 0;\r\n\t\t\tvar draw_direction:number = 0;\r\n\t\t\tvar contours_vertices:Array<Array<number>> = [[]];\r\n\t\t\tvar final_vert_list:Array<number> = [];\r\n\t\t\tvar final_vert_cnt:number = 0;\r\n\t\t\tvar lastPoint:Point = new Point();\r\n\t\t\tvar last_dir_vec:Point=new Point();\r\n\t\t\tvar end_point:Point=new Point();\r\n\t\t\tfor (k = 0; k < contour_commands.length; k++) {\r\n\t\t\t\tcontours_vertices.push([]);\r\n\t\t\t\tvert_cnt = 0;\r\n\t\t\t\tdata_cnt = 0;\r\n\t\t\t\tcommands = contour_commands[k];\r\n\t\t\t\tdata = contour_data[k];\r\n\t\t\t\tdraw_direction = 0;\r\n\r\n\t\t\t\tvar new_dir:number=0;\r\n\t\t\t\tvar new_dir_1:number=0;\r\n\t\t\t\tvar new_dir_2:number=0;\r\n\t\t\t\tvar dir_delta:number=0;\r\n\t\t\t\tvar last_direction:number=0;\r\n\r\n\t\t\t\tvar tmp_dir_point:Point=new Point();\r\n\t\t\t\tif((data[0] != data[data.length-2]) || (data[1] != data[data.length-1])){\r\n\t\t\t\t\tdata[data.length]==data[0];\r\n\t\t\t\t\tdata[data.length]==data[1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastPoint.x = data[0];\r\n\t\t\t\tlastPoint.y = data[1];\r\n\t\t\t\tif(commands[1]==GraphicsPathCommand.LINE_TO){\r\n\t\t\t\t\tlast_dir_vec.x = data[2]-lastPoint.x;\r\n\t\t\t\t\tlast_dir_vec.y = data[3]-lastPoint.y;\r\n\t\t\t\t}\r\n\t\t\t\telse if(commands[1]==GraphicsPathCommand.CURVE_TO){\r\n\t\t\t\t\tlast_dir_vec.x = data[4]-lastPoint.x;\r\n\t\t\t\t\tlast_dir_vec.y = data[5]-lastPoint.y;\r\n\t\t\t\t}\r\n\t\t\t\tdata_cnt=2;\r\n\t\t\t\tlast_dir_vec.normalize();\r\n\t\t\t\tlast_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\t\t\tfor (i = 1; i < commands.length; i++) {\r\n\t\t\t\t\tend_point = new Point(data[data_cnt++], data[data_cnt++]);\r\n\t\t\t\t\tif (commands[i]==GraphicsPathCommand.MOVE_TO) {\r\n\t\t\t\t\t\tconsole.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (commands[i]==GraphicsPathCommand.CURVE_TO) {\r\n\t\t\t\t\t\tend_point = new Point(data[data_cnt++], data[data_cnt++]);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//get the directional vector and the direction for this segment\r\n\t\t\t\t\ttmp_dir_point.x = end_point.x - lastPoint.x;\r\n\t\t\t\t\ttmp_dir_point.y = end_point.y - lastPoint.y;\r\n\t\t\t\t\ttmp_dir_point.normalize();\r\n\t\t\t\t\tnew_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\t\t\t\t// get the difference in angle to the last segment\r\n\t\t\t\t\tdir_delta = new_dir - last_direction;\r\n\t\t\t\t\tif(dir_delta>180){\r\n\t\t\t\t\t\tdir_delta-=360;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(dir_delta<-180){\r\n\t\t\t\t\t\tdir_delta+=360;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdraw_direction += dir_delta;\r\n\t\t\t\t\tlast_direction = new_dir;\r\n\t\t\t\t\tlastPoint.x = end_point.x;\r\n\t\t\t\t\tlastPoint.y = end_point.y;\r\n\t\t\t\t}\r\n\t\t\t\tlastPoint.x = data[0];\r\n\t\t\t\tlastPoint.y = data[1];\r\n\t\t\t\tdata_cnt=2;\r\n\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\r\n\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\r\n\t\t\t\t//console.log(\"Draw directions complete: \"+draw_direction);\r\n\t\t\t\tfor (i = 1; i < commands.length; i++) {\r\n\t\t\t\t\tswitch (commands[i]) {\r\n\t\t\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\r\n\t\t\t\t\t\t\tconsole.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase GraphicsPathCommand.LINE_TO:\r\n\t\t\t\t\t\t\tlastPoint.x = data[data_cnt++];\r\n\t\t\t\t\t\t\tlastPoint.y = data[data_cnt++];\r\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\r\n\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\r\n\t\t\t\t\t\t\tvar control_x:number = data[data_cnt++];\r\n\t\t\t\t\t\t\tvar control_y:number = data[data_cnt++];\r\n\t\t\t\t\t\t\tvar end_x:number = data[data_cnt++];\r\n\t\t\t\t\t\t\tvar end_y:number = data[data_cnt++];\r\n\r\n\t\t\t\t\t\t\ttmp_dir_point.x = control_x - lastPoint.x;\r\n\t\t\t\t\t\t\ttmp_dir_point.y = control_y - lastPoint.y;\r\n\t\t\t\t\t\t\ttmp_dir_point.normalize();\r\n\t\t\t\t\t\t\tnew_dir_1 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\t\t\t\t\t\ttmp_dir_point.x = end_x - lastPoint.x;\r\n\t\t\t\t\t\t\ttmp_dir_point.y = end_y - lastPoint.y;\r\n\t\t\t\t\t\t\ttmp_dir_point.normalize();\r\n\t\t\t\t\t\t\tnew_dir_2 = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\t\t\t\t\t\t// get the difference in angle to the last segment\r\n\t\t\t\t\t\t\tvar curve_direction:number = new_dir_2 - new_dir_1;\r\n\t\t\t\t\t\t\tif(curve_direction>180){\r\n\t\t\t\t\t\t\t\tcurve_direction-=360;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(curve_direction<-180){\r\n\t\t\t\t\t\t\t\tcurve_direction+=360;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif((curve_direction==0)&&(curve_direction==180)&&(curve_direction==-180)){\r\n\t\t\t\t\t\t\t\tlastPoint.x = end_x;\r\n\t\t\t\t\t\t\t\tlastPoint.y = end_y;\r\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.x;\r\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = lastPoint.y;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar curve_attr_1 = -1;\r\n\t\t\t\t\t\t\tif (draw_direction < 0) {\r\n\t\t\t\t\t\t\t\tif (curve_direction > 0) {\r\n\t\t\t\t\t\t\t\t\t//convex\r\n\t\t\t\t\t\t\t\t\t//console.log(\"convex\");\r\n\t\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\r\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\r\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\r\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (curve_direction < 0) {\r\n\t\t\t\t\t\t\t\t\t//convex\r\n\t\t\t\t\t\t\t\t\t//console.log(\"convex\");\r\n\t\t\t\t\t\t\t\t\tcurve_attr_1 = 1;\r\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_x;\r\n\t\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = control_y;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_x;\r\n\t\t\t\t\t\t\t\tcontours_vertices[contours_vertices.length - 1][vert_cnt++] = end_y;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (GraphicsFactoryHelper.isClockWiseXY(end_x, end_y, control_x, control_y, lastPoint.x, lastPoint.y)) {\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.x;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = lastPoint.y;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_x;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = control_y;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.5;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_x;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = end_y;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = curve_attr_1;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\t\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlastPoint.x = end_x;\r\n\t\t\t\t\t\t\tlastPoint.y = end_y;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE:\r\n\t\t\t\t\t\t\t//todo\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar verts:Array<number> = [];\r\n\t\t\tvar all_verts:Array<Point> = [];\r\n\t\t\tvar vertIndicess:Array<number> = [];\r\n\t\t\tvar elems:Array<number> = [];\r\n\t\t\tfor (k = 0; k < contours_vertices.length; k++) {\r\n\t\t\t\tvar vertices = contours_vertices[k];\r\n\r\n\t\t\t\t //for (i = 0; i < vertices.length / 2; ++i)\r\n\t\t\t\t //console.log(\"vert collected\" + i + \" = \" + vertices[i * 2] + \" / \" + vertices[i * 2 + 1]);\r\n\r\n\r\n\r\n\t\t\t\tvar verticesF32 = new Float32Array(vertices);\r\n\t\t\t\t//var verticesF32 = new Float32Array([0,0, 100,0, 100,100, 0,100]);\r\n\t\t\t\t//console.log(\"in vertices\", vertices);\r\n\t\t\t\t//var tess = new TESS();\r\n\t\t\t\tif (GraphicsFactoryHelper._tess_obj == null) {\r\n\t\t\t\t\tconsole.log(\"No libtess2 tesselator available.\\nMake it available using Graphics._tess_obj=new TESS();\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tGraphicsFactoryHelper._tess_obj.addContour(verticesF32, 2, 8, vertices.length / 2);\r\n\r\n\t\t\t}\r\n\t\t\tGraphicsFactoryHelper._tess_obj.tesselate(0/*TESS.WINDING_ODD*/, 0/*TESS.ELEMENT_POLYGONS*/, 3, 2, null);\r\n\r\n\t\t\t//console.log(\"out vertices\", Graphics._tess_obj.getVertices());\r\n\t\t\tverts = GraphicsFactoryHelper._tess_obj.getVertices();\r\n\t\t\telems = GraphicsFactoryHelper._tess_obj.getElements();\r\n\t\t\t//console.log(\"out elements\", Graphics._tess_obj.getElements());\r\n\r\n\r\n\t\t\tvar numVerts:number = verts.length / 2;\r\n\t\t\tvar numElems:number = elems.length / 3;\r\n\t\t\tfor (i = 0; i < numVerts; ++i)\r\n\t\t\t\tall_verts.push(new Point(verts[i * 2], verts[i * 2 + 1]));\r\n\r\n\t\t\tfor (i = 0; i < numElems; ++i) {\r\n\t\t\t\tvar p1 = elems[i * 3];\r\n\t\t\t\tvar p2 = elems[i * 3 + 1];\r\n\t\t\t\tvar p3 = elems[i * 3 + 2];\r\n\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].x;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p3].y;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].x;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p2].y;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].x;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = all_verts[p1].y;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 2.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 1.0;\r\n\t\t\t\tfinal_vert_list[final_vert_cnt++] = 0.0;\r\n\r\n\t\t\t}\r\n\t\t\t//for (i = 0; i < final_vert_list.length/7; ++i)\r\n\t\t\t//\tconsole.log(\"final verts \"+i+\" = \"+final_vert_list[i*7]+\" / \"+final_vert_list[i*7+1]);\r\n\t\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\t\tattributesView.set(final_vert_list);\r\n\t\t\tvar attributesBuffer:AttributesBuffer = attributesView.attributesBuffer;\r\n\t\t\tattributesView.dispose();\r\n\t\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\r\n\t\t\telements.setPositions(new Float2Attributes(attributesBuffer));\r\n\t\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\r\n\t\t\telements.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\tmaterial.bothSides = true;\r\n\t\t\tmaterial.useColorTransform = true;\r\n\t\t\tmaterial.curves = true;\r\n\t\t\tvar thisGraphic:Graphic=targetGraphic.addGraphic(elements, material);\r\n\t\t}\r\n\t\ttargetGraphic.queued_fill_pathes.length=0;\r\n\t}\r\n}",
    "import {BitmapImage2D}\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport {Matrix}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\r\n\r\nimport {CapsStyle}\t\t\t\tfrom \"../draw/CapsStyle\";\r\nimport {GradientType}\t\t\t\tfrom \"../draw/GradientType\";\r\nimport {GraphicsPathWinding}\t\tfrom \"../draw/GraphicsPathWinding\";\r\nimport {IGraphicsData}\t\t\tfrom \"../draw/IGraphicsData\";\r\nimport {InterpolationMethod}\t\tfrom \"../draw/InterpolationMethod\";\r\nimport {JointStyle}\t\t\t\tfrom \"../draw/JointStyle\";\r\nimport {LineScaleMode}\t\t\tfrom \"../draw/LineScaleMode\";\r\nimport {TriangleCulling}\t\t\tfrom \"../draw/TriangleCulling\";\r\nimport {SpreadMethod}\t\t\t\tfrom \"../draw/SpreadMethod\";\r\n\r\nimport {GraphicsPath}\t\t\t\tfrom \"../draw/GraphicsPath\";\r\nimport {GraphicsPathCommand}\t\tfrom \"../draw/GraphicsPathCommand\";\r\nimport {DefaultMaterialManager}\tfrom \"../managers/DefaultMaterialManager\";\r\nimport {MovieClip}\t\t\t\tfrom \"../display/MovieClip\";\r\n\r\nimport {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {Sprite}\t\t\t\t\tfrom \"../display/Sprite\";\r\nimport {Float3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\r\nimport {Float2Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\r\n\r\nimport {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\r\n\r\nimport {PartialImplementationError}\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nexport class GraphicsFactoryHelper\r\n{\r\n\r\n\tpublic static _tess_obj:any;\r\n\r\n\r\n\tpublic static isClockWiseXY(point1x:number, point1y:number, point2x:number, point2y:number, point3x:number, point3y:number):boolean\r\n\t{\r\n\t\tvar num:number=(point1x - point2x) * (point3y - point2y) - (point1y - point2y) * (point3x - point2x);\r\n\t\tif(num < 0)\r\n\t\t\treturn false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static getSign(ax:number, ay:number, cx:number, cy:number, bx:number, by:number):number\r\n\t{\r\n\t\treturn (ax - bx) * (cy - by) - (ay - by) * (cx - bx);\r\n\r\n\t}\r\n\r\n\tpublic static pointInTri(ax:number, ay:number, bx:number, by:number ,cx:number, cy:number, xx:number, xy:number):boolean\r\n\t{\r\n\t\tvar b1:boolean = GraphicsFactoryHelper.getSign(ax, ay, xx, xy, bx, by) > 0;\r\n\t\tvar b2:boolean = GraphicsFactoryHelper.getSign(bx, by, xx, xy, cx, cy) > 0;\r\n\t\tvar b3:boolean = GraphicsFactoryHelper.getSign(cx, cy, xx, xy, ax, ay) > 0;\r\n\t\treturn ((b1 == b2) && (b2 == b3));\r\n\t}\r\n\r\n\tpublic static getControlXForCurveX(a:number, c:number, b:number):number\r\n\t{\r\n\t\treturn c;\r\n\t}\r\n\tpublic static getControlYForCurveY(a:number, c:number, b:number):number\r\n\t{\r\n\t\treturn c;\r\n\t}\r\n\tpublic static drawPoint(startX:number,startY:number, vertices:Array<number>):void\r\n\t{\r\n\t\tGraphicsFactoryHelper.addTriangle(startX-2, startY-2, startX+2, startY-2, startX+2, startY+2, 0, vertices);\r\n\t\tGraphicsFactoryHelper.addTriangle(startX-2, startY-2, startX-2, startY+2, startX+2, startY+2, 0, vertices);\r\n\t}\r\n\tpublic static addTriangle(startX:number,startY:number, controlX:number, controlY:number, endX:number, endY:number, tri_type:number, vertices:Array<number>):void\r\n\t{\r\n\t\tvar final_vert_cnt:number = vertices.length;\r\n\t\tif(tri_type==0){\r\n\t\t\tvertices[final_vert_cnt++] = startX;\r\n\t\t\tvertices[final_vert_cnt++] = startY;\r\n\t\t\tvertices[final_vert_cnt++] = 1;\r\n\t\t\tvertices[final_vert_cnt++] = 2.0;\r\n\t\t\tvertices[final_vert_cnt++] = 0.0;\r\n\t\t\tvertices[final_vert_cnt++] = controlX;\r\n\t\t\tvertices[final_vert_cnt++] = controlY;\r\n\t\t\tvertices[final_vert_cnt++] = 1;\r\n\t\t\tvertices[final_vert_cnt++] = 2.0;\r\n\t\t\tvertices[final_vert_cnt++] = 0.0;\r\n\t\t\tvertices[final_vert_cnt++] = endX;\r\n\t\t\tvertices[final_vert_cnt++] = endY;\r\n\t\t\tvertices[final_vert_cnt++] = 1;\r\n\t\t\tvertices[final_vert_cnt++] = 2.0;\r\n\t\t\tvertices[final_vert_cnt++] = 0.0;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvertices[final_vert_cnt++] = startX;\r\n\t\t\tvertices[final_vert_cnt++] = startY;\r\n\t\t\tvertices[final_vert_cnt++] = tri_type;\r\n\t\t\tvertices[final_vert_cnt++] = 1.0;\r\n\t\t\tvertices[final_vert_cnt++] = 1.0;\r\n\t\t\tvertices[final_vert_cnt++] = controlX;\r\n\t\t\tvertices[final_vert_cnt++] = controlY;\r\n\t\t\tvertices[final_vert_cnt++] = tri_type;\r\n\t\t\tvertices[final_vert_cnt++] = 0.5;\r\n\t\t\tvertices[final_vert_cnt++] = 0.0;\r\n\t\t\tvertices[final_vert_cnt++] = endX;\r\n\t\t\tvertices[final_vert_cnt++] = endY;\r\n\t\t\tvertices[final_vert_cnt++] = tri_type;\r\n\t\t\tvertices[final_vert_cnt++] = 0.0;\r\n\t\t\tvertices[final_vert_cnt++] = 0.0;\r\n\t\t}\r\n\r\n\t}\r\n\tpublic static createCap(startX:number, startY:number, start_le:Point, start_ri:Point, dir_vec:Point, capstyle:number, cap_position:number, thickness:number, vertices:Array<number>):void\r\n\t{\r\n\r\n\t\tif (capstyle == CapsStyle.ROUND) {\r\n\t\t\t//console.log(\"add round cap\");\r\n\t\t\tvar tmp1_x:number = startX + (cap_position * (dir_vec.x * thickness));\r\n\t\t\tvar tmp1_y:number = startY + (cap_position * (dir_vec.y * thickness));\r\n\t\t\ttmp1_x = tmp1_x * 2 - start_le.x/2 - start_ri.x/2;\r\n\t\t\ttmp1_y = tmp1_y * 2 - start_le.y/2 - start_ri.y/2;\r\n\t\t\tGraphicsFactoryHelper.addTriangle(start_le.x, start_le.y, tmp1_x, tmp1_y, start_ri.x, start_ri.y, -1, vertices);\r\n\t\t}\r\n\t\telse if (capstyle == CapsStyle.SQUARE) {\r\n\t\t\t//console.log(\"add square cap\");\r\n\t\t\tvar tmp1_x:number = start_le.x + (cap_position * (dir_vec.x * thickness));\r\n\t\t\tvar tmp1_y:number = start_le.y + (cap_position * (dir_vec.y * thickness));\r\n\t\t\tvar tmp2_x:number = start_ri.x + (cap_position * (dir_vec.x * thickness));\r\n\t\t\tvar tmp2_y:number = start_ri.y + (cap_position * (dir_vec.y * thickness));\r\n\r\n\t\t\tGraphicsFactoryHelper.addTriangle(tmp2_x,tmp2_y, tmp1_x, tmp1_y, start_le.x, start_le.y, 0, vertices);\r\n\t\t\tGraphicsFactoryHelper.addTriangle(tmp2_x,tmp2_y, start_le.x, start_le.y, start_ri.x, start_ri.y, 0, vertices);\r\n\t\t}\r\n\t}\r\n\tpublic static getLineFormularData(a:Point, b:Point):Point\r\n\t{\r\n\r\n\t\tvar tmp_x = b.x - a.x;\r\n\t\tvar tmp_y = b.y - a.y;\r\n\t\tvar return_point:Point=new Point();\r\n\t\tif ((tmp_x != 0)&&(tmp_y!=0))\r\n\t\t\treturn_point.x = tmp_y / tmp_x;\r\n\t\treturn_point.y = -(return_point.x * a.x - a.y);\r\n\t\treturn return_point;\r\n\t}\r\n\tpublic static getQuadricBezierPosition(t, start, control, end):number {\r\n\t\tvar xt = 1 - t;\r\n\t\treturn xt * xt * start + 2 * xt * t * control + t * t * end;\r\n\t}\r\n\tpublic static subdivideCurve(startx:number, starty:number, cx:number, cy:number, endx:number, endy:number, startx2:number, starty2:number, cx2:number, cy2:number, endx2:number, endy2:number, array_out:Array<number>, array2_out:Array<number>):void\r\n\t{\r\n\t\tvar angle_1:number=Math.atan2(cy - starty, cx - startx) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\tvar angle_2:number=Math.atan2(endy - cy, endx - cx) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\tvar angle_delta:number=angle_2 - angle_1;\r\n\t\t//console.log(\"angle_delta \"+angle_delta);\r\n\r\n\t\tif(angle_delta>180){\r\n\t\t\tangle_delta-=360;\r\n\t\t}\r\n\t\tif(angle_delta<-180){\r\n\t\t\tangle_delta+=360;\r\n\t\t}\r\n\t\tif(Math.abs(angle_delta)>=150){\r\n\t\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\r\n\t\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar b1:boolean=false;\r\n\t\tvar b2:boolean=false;\r\n\t\tif(angle_delta<0){\r\n\t\t\t// curve is curved to right side. right side is convex\r\n\t\t\tb1 = GraphicsFactoryHelper.getSign(startx, starty, cx2, cy2, endx, endy) > 0;\r\n\t\t\tb2 = GraphicsFactoryHelper.getSign(startx, starty, cx, cy, endx, endy) > 0;\r\n\t\t\tb1 = (((starty-endy)*(cx-startx)+(endx-startx)*(cy-starty))*((starty-endy)*(cx2-startx)+(endx-startx)*(cy2-starty)))<0;\r\n\r\n\t\t}\r\n\t\telse{\r\n\t\t\t// curve is curved to left side. left side is convex\r\n\t\t\tb1 = GraphicsFactoryHelper.getSign(startx2, starty2, cx2, cy2, endx2, endy2) > 0;\r\n\t\t\tb2 = GraphicsFactoryHelper.getSign(startx2, starty2, cx, cy, endx2, endy2) > 0;\r\n\t\t\tb1 = (((starty2-endy)*(cx-startx2)+(endx2-startx2)*(cy-starty2))*((starty2-endy2)*(cx2-startx2)+(endx2-startx2)*(cy2-starty2)))<0;\r\n\r\n\t\t}\r\n\t\tif(b1){\r\n\t\t\tarray_out.push(startx, starty, cx, cy,  endx, endy);\r\n\t\t\tarray2_out.push(startx2, starty2, cx2, cy2, endx2, endy2);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// triangles overlap. we must subdivide:\r\n\r\n\t\tvar c1x = startx + (cx - startx) * 0.5;// new controlpoint 1.1\r\n\t\tvar c1y = starty + (cy - starty) * 0.5;\r\n\t\tvar c2x = cx + (endx - cx) * 0.5;// new controlpoint 1.2\r\n\t\tvar c2y = cy + (endy - cy) * 0.5;\r\n\t\tvar ax = c1x + (c2x - c1x) * 0.5;// new middlepoint 1\r\n\t\tvar ay = c1y + (c2y - c1y) * 0.5;\r\n\r\n\t\tvar c1x2 = startx2 + (cx2 - startx2) * 0.5;// new controlpoint 2.1\r\n\t\tvar c1y2 = starty2 + (cy2 - starty2) * 0.5;\r\n\t\tvar c2x2 = cx2 + (endx2 - cx2) * 0.5;// new controlpoint 2.2\r\n\t\tvar c2y2 = cy2 + (endy2 - cy2) * 0.5;\r\n\t\tvar ax2 = c1x2 + (c2x2 - c1x2) * 0.5;// new middlepoint 2\r\n\t\tvar ay2 = c1y2 + (c2y2 - c1y2) * 0.5;\r\n\r\n\t\tGraphicsFactoryHelper.subdivideCurve(startx, starty, c1x, c1y, ax, ay, startx2, starty2, c1x2, c1y2, ax2, ay2, array_out, array2_out);\r\n\t\tGraphicsFactoryHelper.subdivideCurve(ax, ay, c2x, c2y, endx, endy, ax2, ay2, c2x2, c2y2, endx2, endy2, array_out, array2_out);\r\n\r\n\t}\r\n\r\n}",
    "import {BitmapImage2D}\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport {Matrix}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\r\nimport {MathConsts}\t\t\t\tfrom \"awayjs-core/lib/geom/MathConsts\";\r\n\r\nimport {CapsStyle}\t\t\t\tfrom \"../draw/CapsStyle\";\r\nimport {GradientType}\t\t\t\tfrom \"../draw/GradientType\";\r\nimport {GraphicsPathWinding}\t\tfrom \"../draw/GraphicsPathWinding\";\r\nimport {IGraphicsData}\t\t\tfrom \"../draw/IGraphicsData\";\r\nimport {InterpolationMethod}\t\tfrom \"../draw/InterpolationMethod\";\r\nimport {JointStyle}\t\t\t\tfrom \"../draw/JointStyle\";\r\nimport {LineScaleMode}\t\t\tfrom \"../draw/LineScaleMode\";\r\nimport {TriangleCulling}\t\t\tfrom \"../draw/TriangleCulling\";\r\nimport {SpreadMethod}\t\t\t\tfrom \"../draw/SpreadMethod\";\r\n\r\nimport {Graphics}\t\t\t\t\tfrom \"../graphics/Graphics\";\r\nimport {GraphicsPath}\t\t\t\tfrom \"../draw/GraphicsPath\";\r\nimport {GraphicsPathCommand}\t\tfrom \"../draw/GraphicsPathCommand\";\r\nimport {DefaultMaterialManager}\tfrom \"../managers/DefaultMaterialManager\";\r\nimport {MovieClip}\t\t\t\tfrom \"../display/MovieClip\";\r\n\r\nimport {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {Sprite}\t\t\t\t\tfrom \"../display/Sprite\";\r\nimport {Float3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\r\nimport {Float2Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\r\n\r\nimport {GraphicsFactoryHelper}\t\t\tfrom \"../draw/GraphicsFactoryHelper\";\r\nimport {GraphicsStrokeStyle}\t\t\t\tfrom \"../draw/GraphicsStrokeStyle\";\r\n\r\n\r\nimport {PartialImplementationError}\t\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\r\nimport {TriangleElements}\t\t\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {MaterialBase}\t\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nexport class GraphicsFactoryStrokes\r\n{\r\n\tpublic static draw_pathes(targetGraphic:Graphics){\r\n\t\tvar len=targetGraphic.queued_stroke_pathes.length;\r\n\t\tvar contour_commands:Array<Array<number> >;\r\n\t\tvar contour_data:Array<Array<number> >;\r\n\t\tvar strokeStyle:GraphicsStrokeStyle;\r\n\t\tvar one_path:GraphicsPath;\r\n\t\tvar commands:Array<number>;\r\n\t\tvar data:Array<number>;\r\n\t\tvar i:number=0;\r\n\t\tvar k:number=0;\r\n\t\tvar vert_cnt:number=0;\r\n\t\tvar data_cnt:number=0;\r\n\t\tvar final_vert_list:Array<number> = [];\r\n\t\tvar final_vert_cnt:number=0;\r\n\t\tvar lastPoint:Point=new Point();\r\n\t\tvar start_point:Point=new Point();\r\n\t\tvar end_point:Point=new Point();\r\n\t\tvar start_left:Point=new Point();\r\n\t\tvar start_right:Point=new Point();\r\n\t\tvar ctr_left:Point=new Point();\r\n\t\tvar ctr_right:Point=new Point();\r\n\t\tvar ctr_left2:Point=new Point();\r\n\t\tvar ctr_right2:Point=new Point();\r\n\t\tvar end_left:Point=new Point();\r\n\t\tvar end_right:Point=new Point();\r\n\t\tvar tmp_point:Point=new Point();\r\n\t\tvar tmp_point2:Point=new Point();\r\n\t\tvar tmp_point3:Point=new Point();\r\n\t\tvar closed:boolean=false;\r\n\t\tvar last_dir_vec:Point=new Point();\r\n\t\tvar cp=0;\r\n\t\tfor(cp=0; cp<len; cp++){\r\n\r\n\t\t\tone_path = targetGraphic.queued_stroke_pathes[cp];\r\n\t\t\tcontour_commands = one_path.commands;\r\n\t\t\tcontour_data = one_path.data;\r\n\t\t\tstrokeStyle = one_path.stroke();\r\n\r\n\t\t\tvar tessVerts:Array<number>=[];\r\n\r\n\t\t\tfor(k=0; k<contour_commands.length; k++) {\r\n\t\t\t\tcommands = contour_commands[k];\r\n\t\t\t\tdata = contour_data[k];\r\n\t\t\t\tvert_cnt = 0;\r\n\t\t\t\tdata_cnt = 0;\r\n\r\n\t\t\t\tvar new_dir:number=0;\r\n\t\t\t\tvar dir_delta:number=0;\r\n\t\t\t\tvar last_direction:number=0;\r\n\r\n\t\t\t\tvar tmp_dir_point:Point=new Point();\r\n\r\n\t\t\t\tclosed = true;\r\n\t\t\t\tif((data[0] != data[data.length-2]) || (data[1] != data[data.length-1]))\r\n\t\t\t\t\tclosed = false;\r\n\t\t\t\telse{\r\n\t\t\t\t\tlast_dir_vec.x = data[data.length-2]-data[data.length-4];\r\n\t\t\t\t\tlast_dir_vec.y = data[data.length-1]-data[data.length-3];\r\n\t\t\t\t\tlast_dir_vec.normalize();\r\n\t\t\t\t\tlast_direction = Math.atan2(last_dir_vec.y, last_dir_vec.x) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\t\t\t\t//console.log(\"Path is closed, we set initial direction: \"+last_direction);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata_cnt=0;\r\n\t\t\t\tlastPoint.x=data[data_cnt++];\r\n\t\t\t\tlastPoint.y=data[data_cnt++];\r\n\r\n\r\n\t\t\t\tvar new_cmds:Array<number>=[];\r\n\t\t\t\tvar new_pnts:Array<Point>=[];\r\n\t\t\t\tvar new_cmds_cnt=0;\r\n\t\t\t\tvar new_pnts_cnt=0;\r\n\t\t\t\tvar prev_normal:Point = new Point();\r\n\t\t\t\tvar le_point:Point = new Point();\r\n\t\t\t\tvar curve_end_point:Point = new Point();\r\n\t\t\t\tvar ri_point:Point = new Point();\r\n\t\t\t\tvar ctr_point:Point = new Point();\r\n\r\n\t\t\t\tprev_normal.x = -1*last_dir_vec.y;\r\n\t\t\t\tprev_normal.y = last_dir_vec.x;\r\n\r\n\t\t\t\tfor (i = 1; i < commands.length; i++) {\r\n\t\t\t\t\tif (commands[i]==GraphicsPathCommand.MOVE_TO) {\r\n\t\t\t\t\t\tconsole.log(\"ERROR ! ONLY THE FIRST COMMAND FOR A CONTOUR IS ALLOWED TO BE A 'MOVE_TO' COMMAND\");\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log(\"\");\r\n\t\t\t\t\t//console.log(\"segment \"+i+\"lastPoint x = \"+lastPoint.x+\" y = \"+lastPoint.y)\r\n\t\t\t\t\tend_point = new Point(data[data_cnt++], data[data_cnt++]);\r\n\t\t\t\t\t//console.log(\"segment \"+i+\"end_point x = \"+end_point.x+\" y = \"+end_point.y)\r\n\t\t\t\t\tif (commands[i]==GraphicsPathCommand.CURVE_TO) {\r\n\t\t\t\t\t\tcurve_end_point = new Point(data[data_cnt++], data[data_cnt++]);\r\n\t\t\t\t\t\t//console.log(\"segment \"+i+\"curve_end_point x = \"+curve_end_point.x+\" y = \"+curve_end_point.y)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//get the directional vector and the direction for this segment\r\n\t\t\t\t\ttmp_dir_point.x = end_point.x - lastPoint.x;\r\n\t\t\t\t\ttmp_dir_point.y = end_point.y - lastPoint.y;\r\n\t\t\t\t\ttmp_dir_point.normalize();\r\n\t\t\t\t\tnew_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\t\t\t\t// get the difference in angle to the last segment\r\n\t\t\t\t\tdir_delta = new_dir - last_direction;\r\n\t\t\t\t\tif(dir_delta>180){\r\n\t\t\t\t\t\tdir_delta-=360;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(dir_delta<-180){\r\n\t\t\t\t\t\tdir_delta+=360;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlast_direction = new_dir;\r\n\t\t\t\t\t//console.log(\"segment \"+i+\" direction: \"+dir_delta);\r\n\t\t\t\t\t// rotate direction around 90 degree\r\n\t\t\t\t\ttmp_point.x = -1 * tmp_dir_point.y;\r\n\t\t\t\t\ttmp_point.y = tmp_dir_point.x;\r\n\r\n\t\t\t\t\tri_point = new Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\r\n\t\t\t\t\tle_point = new Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\r\n\r\n\t\t\t\t\tvar add_segment:boolean=false;\r\n\t\t\t\t\t// check if this is the first segment, and the path is not closed\r\n\t\t\t\t\t// in this case, we can just set the points to the contour points\r\n\t\t\t\t\tif((i==1)&&(!closed)){\r\n\t\t\t\t\t\t//console.log(\"segment \"+i+\"Path is not closed, we can just add the first segment\")\r\n\t\t\t\t\t\tadd_segment=true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\r\n\t\t\t\t\t\t// we need to figure out if we need to add a joint or not\r\n\t\t\t\t\t\tif ((dir_delta==0)||(dir_delta==180)){\r\n\t\t\t\t\t\t\t// check if this and the prev segment was a line. if yes, than they can be merged\r\n\t\t\t\t\t\t\tif ((i!=1) && (commands[i]== GraphicsPathCommand.LINE_TO) && (new_cmds[new_cmds.length-1]==GraphicsPathCommand.LINE_TO)){\r\n\t\t\t\t\t\t\t\t//console.log(\"straight line can be merged in prev straight line\");\r\n\t\t\t\t\t\t\t\tadd_segment=false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// if not we can just add the contour points\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tadd_segment=true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (dir_delta==180){\r\n\t\t\t\t\t\t\tconsole.log(\"path goes straight back (180�). DO we need to handle this edge case different ? !\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (dir_delta!=0) {\r\n\t\t\t\t\t\t\tadd_segment=true;\r\n\t\t\t\t\t\t\tvar half_angle:number=(180-(dir_delta));\r\n\t\t\t\t\t\t\tif(dir_delta<0){\r\n\t\t\t\t\t\t\t\thalf_angle=(-180-(dir_delta));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\thalf_angle= half_angle * -0.5 * MathConsts.DEGREES_TO_RADIANS;\r\n\t\t\t\t\t\t\tvar distance:number=strokeStyle.half_thickness / Math.sin(half_angle);\r\n\t\t\t\t\t\t\ttmp_point2.x = tmp_dir_point.x * Math.cos(half_angle) + tmp_dir_point.y * Math.sin(half_angle);\r\n\t\t\t\t\t\t\ttmp_point2.y = tmp_dir_point.y * Math.cos(half_angle) - tmp_dir_point.x * Math.sin(half_angle);\r\n\t\t\t\t\t\t\ttmp_point2.normalize();\r\n\t\t\t\t\t\t\tvar merged_pnt_ri:Point = new Point(lastPoint.x - (tmp_point2.x * distance), lastPoint.y - (tmp_point2.y * distance));\r\n\t\t\t\t\t\t\tvar merged_pnt_le:Point = new Point(lastPoint.x + (tmp_point2.x * distance), lastPoint.y + (tmp_point2.y * distance));\r\n\t\t\t\t\t\t\tif (dir_delta > 0){\r\n\t\t\t\t\t\t\t\tri_point = merged_pnt_ri;\r\n\t\t\t\t\t\t\t\tvar contour_le:Point = new Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\tvar contour_prev_le:Point = new Point(lastPoint.x - (prev_normal.x * strokeStyle.half_thickness), lastPoint.y - (prev_normal.y * strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\tle_point=contour_le;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tle_point = merged_pnt_le;\r\n\t\t\t\t\t\t\t\tvar contour_ri:Point = new Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\tvar contour_prev_ri:Point = new Point(lastPoint.x + (prev_normal.x * strokeStyle.half_thickness), lastPoint.y + (prev_normal.y * strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\tri_point=contour_ri;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar addJoints:boolean=true;\r\n\t\t\t\t\t\t\tif (strokeStyle.jointstyle==JointStyle.MITER){\r\n\t\t\t\t\t\t\t\tvar distance_miter:number = (Math.sqrt((distance*distance)-(strokeStyle.half_thickness*strokeStyle.half_thickness))/strokeStyle.half_thickness);\r\n\t\t\t\t\t\t\t\tif(distance_miter<=strokeStyle.miter_limit){\r\n\t\t\t\t\t\t\t\t\taddJoints=false;\r\n\t\t\t\t\t\t\t\t\tri_point = merged_pnt_ri;\r\n\t\t\t\t\t\t\t\t\tle_point = merged_pnt_le;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\tif (dir_delta > 0){\r\n\t\t\t\t\t\t\t\t\t\tcontour_le.x = contour_le.x-(tmp_dir_point.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\t\t\tcontour_le.y = contour_le.y-(tmp_dir_point.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\t\t\ttmp_point3.x=prev_normal.y*-1;\r\n\t\t\t\t\t\t\t\t\t\ttmp_point3.y=prev_normal.x;\r\n\t\t\t\t\t\t\t\t\t\tcontour_prev_le.x = contour_prev_le.x-(tmp_point3.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\t\t\tcontour_prev_le.y = contour_prev_le.y-(tmp_point3.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\tcontour_ri.x = contour_ri.x-(tmp_dir_point.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\t\t\tcontour_ri.y = contour_ri.y-(tmp_dir_point.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\t\t\ttmp_point3.x=prev_normal.y*-1;\r\n\t\t\t\t\t\t\t\t\t\ttmp_point3.y=prev_normal.x;\r\n\t\t\t\t\t\t\t\t\t\tcontour_prev_ri.x = contour_prev_ri.x-(tmp_point3.x*(strokeStyle.miter_limit*strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\t\t\tcontour_prev_ri.y = contour_prev_ri.y-(tmp_point3.y*(strokeStyle.miter_limit*strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(addJoints) {\r\n\r\n\t\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++]=(strokeStyle.jointstyle!=JointStyle.ROUND)? GraphicsPathCommand.BUILD_JOINT : GraphicsPathCommand.BUILD_ROUND_JOINT;\r\n\t\t\t\t\t\t\t\tif (dir_delta > 0) {\r\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = merged_pnt_ri;\r\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_le;\r\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_le;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_ri;\r\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = merged_pnt_le;\r\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_ri;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif(strokeStyle.jointstyle==JointStyle.ROUND){\r\n\r\n\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x - (tmp_point2.x * Math.abs(distance)), lastPoint.y - (tmp_point2.y * Math.abs(distance)));\r\n\r\n\t\t\t\t\t\t\t\t\tif (dir_delta > 0) {\r\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_le;\r\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_le;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_prev_ri;\r\n\t\t\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = contour_ri;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tprev_normal.x = tmp_point.x;\r\n\t\t\t\t\tprev_normal.y = tmp_point.y;\r\n\t\t\t\t\tif(add_segment){\r\n\t\t\t\t\t\tif (commands[i]== GraphicsPathCommand.LINE_TO) {\r\n\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.LINE_TO;\r\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = ri_point;\r\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = le_point;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (commands[i]== GraphicsPathCommand.CURVE_TO) {\r\n\t\t\t\t\t\t\ttmp_dir_point.x = curve_end_point.x - end_point.x;\r\n\t\t\t\t\t\t\ttmp_dir_point.y = curve_end_point.y - end_point.y;\r\n\t\t\t\t\t\t\ttmp_dir_point.normalize();\r\n\t\t\t\t\t\t\tnew_dir = Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\t\t\t\t\t\tdir_delta = new_dir - last_direction;\r\n\r\n\t\t\t\t\t\t\tlast_direction = new_dir;\r\n\r\n\t\t\t\t\t\t\ttmp_point.x = -1 * tmp_dir_point.y;\r\n\t\t\t\t\t\t\ttmp_point.y = tmp_dir_point.x;\r\n\t\t\t\t\t\t\tif((dir_delta!=0)&&(dir_delta!=180)){\r\n\t\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.CURVE_TO;\r\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = ri_point;\r\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = le_point;\r\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x, lastPoint.y);\r\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(end_point.x, end_point.y);\r\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = curve_end_point;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.LINE_TO;\r\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = ri_point;\r\n\t\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = le_point;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tprev_normal.x = tmp_point.x;\r\n\t\t\t\t\t\t\tprev_normal.y = tmp_point.y;\r\n\t\t\t\t\t\t\tlastPoint = curve_end_point;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (commands[i]== GraphicsPathCommand.LINE_TO) {\r\n\t\t\t\t\t\tlastPoint = end_point;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(i==commands.length-1){\r\n\t\t\t\t\t\tif (!closed) {\r\n\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.NO_OP;\r\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x + (tmp_point.x * strokeStyle.half_thickness), lastPoint.y + (tmp_point.y * strokeStyle.half_thickness));\r\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new Point(lastPoint.x - (tmp_point.x * strokeStyle.half_thickness), lastPoint.y - (tmp_point.y * strokeStyle.half_thickness));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tnew_cmds[new_cmds_cnt++] = GraphicsPathCommand.NO_OP;\r\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new_pnts[0];\r\n\t\t\t\t\t\t\tnew_pnts[new_pnts_cnt++] = new_pnts[1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// first we draw all the curves:\r\n\t\t\t\tnew_cmds_cnt=0;\r\n\t\t\t\tnew_pnts_cnt=0;\r\n\t\t\t\tfor (i = 0; i < new_cmds.length; i++) {\r\n\r\n\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.LINE_TO){\r\n\t\t\t\t\t\tnew_pnts_cnt+=2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(new_cmds[i]==GraphicsPathCommand.CURVE_TO){\r\n\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\r\n\r\n\t\t\t\t\t\tstart_point = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\tctr_point = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\tend_point = new_pnts[new_pnts_cnt++];\r\n\r\n\t\t\t\t\t\tend_right = new_pnts[new_pnts_cnt];\r\n\t\t\t\t\t\tend_left = new_pnts[new_pnts_cnt+1];\r\n\r\n\r\n\t\t\t\t\t\t// get the directional vector for the first part of the curve\r\n\t\t\t\t\t\ttmp_dir_point.x = ctr_point.x - start_point.x;\r\n\t\t\t\t\t\ttmp_dir_point.y = ctr_point.y - start_point.y;\r\n\t\t\t\t\t\ttmp_point3.x = ctr_point.x - start_point.x;\r\n\t\t\t\t\t\ttmp_point3.y = ctr_point.y - start_point.y;\r\n\t\t\t\t\t\tvar length1:number =tmp_point3.length;\r\n\t\t\t\t\t\ttmp_dir_point.normalize();\r\n\r\n\r\n\t\t\t\t\t\t// get the directional vector for the second part of the curve\r\n\t\t\t\t\t\ttmp_point2.x = end_point.x - ctr_point.x;\r\n\t\t\t\t\t\ttmp_point2.y = end_point.y - ctr_point.y;\r\n\t\t\t\t\t\tvar length2:number =tmp_point2.length;\r\n\r\n\t\t\t\t\t\ttmp_point2.normalize();\r\n\r\n\t\t\t\t\t\tvar length_calc:number = 0.5 - ((length2-length1)/length1)*0.5;\r\n\t\t\t\t\t\tif(length1>length2){\r\n\t\t\t\t\t\t\tlength_calc = 0.5 + ((length1-length2)/length2)*0.5;\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t// get angle to positive x-axis for both dir-vectors, than get the difference between those\r\n\t\t\t\t\t\tvar angle_1:number=Math.atan2(tmp_dir_point.y, tmp_dir_point.x) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\t\t\t\t\tvar angle_2:number=Math.atan2(tmp_point2.y, tmp_point2.x) * MathConsts.RADIANS_TO_DEGREES;\r\n\t\t\t\t\t\tdir_delta=angle_2-angle_1;\r\n\r\n\t\t\t\t\t\tif(dir_delta>180){\r\n\t\t\t\t\t\t\tdir_delta-=360;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(dir_delta<-180){\r\n\t\t\t\t\t\t\tdir_delta+=360;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(dir_delta==0){\r\n\t\t\t\t\t\t\tconsole.log(\"This is not a curve, we can just draw it like a straight line\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//console.log(\"segment : '\"+i+\"' direction:\"+dir_delta);\r\n\t\t\t\t\t\tvar dirNumber:number=1;\r\n\t\t\t\t\t\tif(dir_delta<0){\r\n\t\t\t\t\t\t\tdirNumber=-1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar half_angle:number=dir_delta*0.5*MathConsts.DEGREES_TO_RADIANS;\r\n\t\t\t\t\t\tvar lengthpos:number=Math.abs(length1*Math.sin(half_angle));\r\n\r\n\t\t\t\t\t\tvar distance:number=strokeStyle.half_thickness / Math.sin(half_angle);\r\n\t\t\t\t\t\ttmp_point3.x = tmp_point2.x * Math.cos(half_angle) + tmp_point2.y * Math.sin(half_angle);\r\n\t\t\t\t\t\ttmp_point3.y = tmp_point2.y * Math.cos(half_angle) - tmp_point2.x * Math.sin(half_angle);\r\n\t\t\t\t\t\ttmp_point3.normalize();\r\n\t\t\t\t\t\tvar merged_pnt_ri:Point = new Point(ctr_point.x - (tmp_point3.x * distance), ctr_point.y - (tmp_point3.y * distance));\r\n\t\t\t\t\t\tvar merged_pnt_le:Point = new Point(ctr_point.x + (tmp_point3.x * distance), ctr_point.y + (tmp_point3.y * distance));\r\n\r\n\r\n\t\t\t\t\t\tvar curve_x:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.x, ctr_point.x, end_point.x);\r\n\t\t\t\t\t\tvar curve_y:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.5, start_point.y, ctr_point.y, end_point.y);\r\n\r\n\t\t\t\t\t\tvar curve_2x:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.x, ctr_point.x, end_point.x);\r\n\t\t\t\t\t\tvar curve_2y:number = GraphicsFactoryHelper.getQuadricBezierPosition(0.501, start_point.y, ctr_point.y, end_point.y);\r\n\r\n\t\t\t\t\t\ttmp_point3.x =  -1*(curve_y - curve_2y);\r\n\t\t\t\t\t\ttmp_point3.y =  curve_x - curve_2x;\r\n\r\n\t\t\t\t\t\ttmp_point3.normalize();\r\n\r\n\t\t\t\t\t\t//GraphicsFactoryHelper.drawPoint(curve_x,curve_y, final_vert_list);\r\n\r\n\t\t\t\t\t\t// move the point on the curve to use correct thickness\r\n\t\t\t\t\t\tctr_right.x = curve_x +(dirNumber * tmp_point3.x * strokeStyle.half_thickness);\r\n\t\t\t\t\t\tctr_right.y = curve_y +(dirNumber * tmp_point3.y * strokeStyle.half_thickness);\r\n\t\t\t\t\t\tctr_left.x = curve_x -(dirNumber * tmp_point3.x * strokeStyle.half_thickness);\r\n\t\t\t\t\t\tctr_left.y = curve_y -(dirNumber * tmp_point3.y * strokeStyle.half_thickness);\r\n\r\n\t\t\t\t\t\t//GraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\r\n\t\t\t\t\t\t//GraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\r\n\r\n\t\t\t\t\t\t// calculate the actual controlpoints\r\n\t\t\t\t\t\tctr_right.x = ctr_right.x * 2 - start_right.x/2 - end_right.x/2;\r\n\t\t\t\t\t\tctr_right.y = ctr_right.y * 2 - start_right.y/2 - end_right.y/2;\r\n\t\t\t\t\t\tctr_left.x = ctr_left.x * 2 - start_left.x/2 - end_left.x/2;\r\n\t\t\t\t\t\tctr_left.y = ctr_left.y * 2 - start_left.y/2 - end_left.y/2;\r\n\r\n\r\n\t\t\t\t\t\t//ctr_right=merged_pnt_ri;\r\n\t\t\t\t\t\t//ctr_left=merged_pnt_le;\r\n\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t// controlpoints version2:\r\n\t\t\t\t\t\ttmp_dir_point.x = start_left.x-start_right.x;\r\n\t\t\t\t\t\ttmp_dir_point.y = start_left.y-start_right.y;\r\n\t\t\t\t\t\ttmp_point2.x = end_left.x-end_right.x;\r\n\t\t\t\t\t\ttmp_point2.y = end_left.y-end_right.y;\r\n\r\n\t\t\t\t\t\tctr_right.x = ctr_point.x-(tmp_dir_point.x/2);\r\n\t\t\t\t\t\tctr_right.y = ctr_point.y-(tmp_dir_point.y/2);\r\n\t\t\t\t\t\tvar new_end_ri:Point = new Point(end_point.x+(tmp_dir_point.x/2), end_point.y+(tmp_dir_point.y/2));\r\n\r\n\t\t\t\t\t\tctr_left.x = ctr_point.x+(tmp_dir_point.x/2);\r\n\t\t\t\t\t\tctr_left.y = ctr_point.y+(tmp_dir_point.y/2);\r\n\t\t\t\t\t\tvar new_end_le:Point = new Point(end_point.x-(tmp_dir_point.x/2), end_point.y-(tmp_dir_point.y/2));\r\n\t\t\t\t\t\t*/\r\n\r\n/*\r\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(start_right.x, start_right.y , final_vert_list);\r\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(start_left.x, start_left.y , final_vert_list);\r\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(ctr_right.x, ctr_right.y , final_vert_list);\r\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(ctr_left.x, ctr_left.y , final_vert_list);\r\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(end_right.x, end_right.y , final_vert_list);\r\n\t\t\t\t\t\tGraphicsFactoryHelper.drawPoint(end_left.x, end_left.y , final_vert_list);\r\n*/\r\n\t\t\t\t\t\tvar subdivided:Array<number> = [];\r\n\t\t\t\t\t\tvar subdivided2:Array<number> = [];\r\n\t\t\t\t\t\tGraphicsFactoryHelper.subdivideCurve(start_right.x, start_right.y, ctr_right.x, ctr_right.y, end_right.x, end_right.y, start_left.x, start_left.y, ctr_left.x, ctr_left.y, end_left.x, end_left.y, subdivided, subdivided2);\r\n\r\n\t\t\t\t\t\tif(dir_delta>0) {\r\n\t\t\t\t\t\t\tfor (var sc:number = 0; sc < subdivided.length / 6; sc++) {\r\n\t\t\t\t\t\t\t\t// right curved\r\n\t\t\t\t\t\t\t\t// concave curves:\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 1, final_vert_list);\r\n\r\n\t\t\t\t\t\t\t\t// fills\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], 0, final_vert_list);\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], 0, final_vert_list);\r\n\r\n\t\t\t\t\t\t\t\t// convex curves:\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], -1, final_vert_list);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tfor (var sc:number = 0; sc < subdivided.length / 6; sc++) {\r\n\t\t\t\t\t\t\t\t// left curved\r\n\t\t\t\t\t\t\t\t// convex curves:\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 2], subdivided[sc * 6 + 3], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], -1, final_vert_list);\r\n\r\n\t\t\t\t\t\t\t\t// fills\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6], subdivided[sc * 6 + 1], subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], 0, final_vert_list);\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided[sc * 6 + 4], subdivided[sc * 6 + 5], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 0, final_vert_list);\r\n\r\n\r\n\t\t\t\t\t\t\t\t// concave curves:\r\n\t\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(subdivided2[sc * 6], subdivided2[sc * 6 + 1], subdivided2[sc * 6 + 2], subdivided2[sc * 6 + 3], subdivided2[sc * 6 + 4], subdivided2[sc * 6 + 5], 1, final_vert_list);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(new_cmds[i]>=GraphicsPathCommand.BUILD_JOINT) {\r\n\t\t\t\t\t\tnew_pnts_cnt+=3;\r\n\t\t\t\t\t\t//GraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\r\n\t\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.BUILD_ROUND_JOINT) {\r\n\t\t\t\t\t\t\tend_left = new_pnts[new_pnts_cnt++];// concave curves:\r\n\t\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\t\t//console.log(\"add round tri\");\r\n\t\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_right.x, start_right.y,  end_left.x, end_left.y,start_left.x, start_left.y, -1, final_vert_list);\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// now we draw all the normal triangles.\r\n\t\t\t\t// we do it in 2 steps, to prevent curves cut anything out of underlying normal tris\r\n\t\t\t\tnew_cmds_cnt=0;\r\n\t\t\t\tnew_pnts_cnt=0;\r\n\t\t\t\tfor (i = 0; i < new_cmds.length; i++) {\r\n\r\n\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.LINE_TO){\r\n\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\tend_right = new_pnts[new_pnts_cnt];\r\n\t\t\t\t\t\tend_left = new_pnts[new_pnts_cnt+1];\r\n\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\r\n\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_left.x,  start_left.y,  end_left.x,  end_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(new_cmds[i]==GraphicsPathCommand.CURVE_TO){\r\n\t\t\t\t\t\tnew_pnts_cnt+=5;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse if(new_cmds[i]>=GraphicsPathCommand.BUILD_JOINT) {\r\n\t\t\t\t\t\tend_right = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\tstart_right = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\tstart_left = new_pnts[new_pnts_cnt++];\r\n\t\t\t\t\t\tGraphicsFactoryHelper.addTriangle(start_right.x,  start_right.y,  start_left.x,  start_left.y,  end_right.x,  end_right.y, 0, final_vert_list);\r\n\t\t\t\t\t\tif(new_cmds[i]==GraphicsPathCommand.BUILD_ROUND_JOINT) {\r\n\t\t\t\t\t\t\tnew_pnts_cnt+=3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!closed){\r\n\t\t\t\t\tlast_dir_vec.x = data[2] - data[0];\r\n\t\t\t\t\tlast_dir_vec.y = data[3] - data[1];\r\n\t\t\t\t\tlast_dir_vec.normalize();\r\n\t\t\t\t\tGraphicsFactoryHelper.createCap(data[0], data[1], new_pnts[0], new_pnts[1], last_dir_vec, strokeStyle.capstyle, -1, strokeStyle.half_thickness, final_vert_list);\r\n\r\n\t\t\t\t\tlast_dir_vec.x = data[data.length-2] - data[data.length-4];\r\n\t\t\t\t\tlast_dir_vec.y = data[data.length-1] - data[data.length-3];\r\n\t\t\t\t\tlast_dir_vec.normalize();\r\n\t\t\t\t\tGraphicsFactoryHelper.createCap(data[data.length-2], data[data.length-1], new_pnts[new_pnts.length-2], new_pnts[new_pnts.length-1], last_dir_vec, strokeStyle.capstyle, 1, strokeStyle.half_thickness, final_vert_list);\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t last_dir_vec.x = data[data.length-2] - data[data.length-4];\r\n\t\t\t\t\t last_dir_vec.y = data[data.length-1] - data[data.length-3];\r\n\t\t\t\t\t last_dir_vec.normalize();\r\n\t\t\t\t\t GraphicsFactoryHelper.createCap(data[data.length-2], data[data.length-1], contour_points[contour_points.length-1], contour_points[contour_points.length-2], last_dir_vec, strokeStyle.capstyle, -1, strokeStyle.half_thickness, final_vert_list);\r\n\t\t\t\t\t */\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t//console.log(\"final_vert_cnt \"+(final_vert_cnt/5));\r\n\t\t\t// todo: handle material / submesh settings, and check if a material / submesh already exists for this settings\r\n\r\n\t\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 5);\r\n\t\t\tattributesView.set(final_vert_list);\r\n\t\t\tvar attributesBuffer:AttributesBuffer = attributesView.attributesBuffer;\r\n\t\t\tattributesView.dispose();\r\n\t\t\tvar elements:TriangleElements = new TriangleElements(attributesBuffer);\r\n\t\t\telements.setPositions(new Float2Attributes(attributesBuffer));\r\n\t\t\telements.setCustomAttributes(\"curves\", new Float3Attributes(attributesBuffer));\r\n\t\t\t//elements.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\t\t//curve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\t\tvar material:MaterialBase = DefaultMaterialManager.getDefaultMaterial();\r\n\t\t\tmaterial.bothSides = true;\r\n\t\t\tmaterial.useColorTransform = true;\r\n\t\t\tmaterial.curves = true;\r\n\t\t\ttargetGraphic.addGraphic(elements, material);\r\n\t\t}\r\n\t\ttargetGraphic.queued_stroke_pathes.length=0;\r\n\t}\r\n\r\n}",
    "import {IGraphicsData}\t\tfrom \"../draw/IGraphicsData\";\r\n\r\n\r\nexport class GraphicsFillStyle implements IGraphicsData\r\n{\r\n    public static data_type:string = \"[graphicsdata FillStyle]\";\r\n    /**\r\n     * The Vector of drawing commands as integers representing the path.\r\n     */\r\n    private _color:number;\r\n    private _alpha:number;\r\n\r\n    constructor(color:number = 0xffffff, alpha:number = 1)\r\n    {\r\n        this._color=color;\r\n        this._alpha=alpha;\r\n    }\r\n\r\n    public get data_type():string\r\n    {\r\n        return GraphicsFillStyle.data_type;\r\n    }\r\n}",
    "/**\r\n * Defines the values to use for specifying path-drawing commands.\r\n * The values in this class are used by the Graphics.drawPath() method,\r\n *or stored in the commands vector of a GraphicsPath object.\r\n */\r\nexport class GraphicsPathCommand\r\n{\r\n\t/**\r\n\t * Represents the default \"do nothing\" command.\r\n\t */\r\n\tpublic static NO_OP:number = 0;\r\n\t/**\r\n\t * Specifies a drawing command that moves the current drawing position\r\n\t * to the x- and y-coordinates specified in the data vector.\r\n\t */\r\n\tpublic static MOVE_TO:number = 1;\r\n\r\n\t/**\r\n\t * Specifies a drawing command that draws a line from the current drawing position\r\n\t * to the x- and y-coordinates specified in the data vector.\r\n\t */\r\n\tpublic static LINE_TO:number = 2;\r\n\r\n\t/**\r\n\t *  Specifies a drawing command that draws a curve from the current drawing position\r\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\r\n\t */\r\n\tpublic static CURVE_TO:number = 3;\r\n\t/**\r\n\t *  Specifies a drawing command that draws a curve from the current drawing position\r\n\t *  to the x- and y-coordinates specified in the data vector, using a control point.\r\n\t */\r\n\tpublic static BUILD_JOINT:number \t\t= 13;\r\n\tpublic static BUILD_ROUND_JOINT:number \t= 14;\r\n\r\n\t/**\r\n\t * Specifies a \"line to\" drawing command,\r\n\t * but uses two sets of coordinates (four values) instead of one set.\r\n\t */\r\n\tpublic static WIDE_LINE_TO:number = 4;\r\n\r\n\t/**\r\n\t *   Specifies a \"move to\" drawing command,\r\n\t *   but uses two sets of coordinates (four values) instead of one set.\r\n\t */\r\n\tpublic static WIDE_MOVE_TO:number = 5;\r\n\r\n\t/**\r\n\t * Specifies a drawing command that draws a curve from the current drawing position\r\n\t * to the x- and y-coordinates specified in the data vector, using 2 control points.\r\n\t */\r\n\tpublic static CUBIC_CURVE:number = 6;\r\n}\r\nexport default GraphicsPathCommand;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nexport class GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}",
    "import {GraphicsPathWinding}\t\tfrom \"../draw/GraphicsPathWinding\";\r\nimport {GraphicsPathCommand}\t\tfrom \"../draw/GraphicsPathCommand\";\r\nimport {IGraphicsData}\t\t    from \"../draw/IGraphicsData\";\r\nimport {GraphicsFillStyle}\t\tfrom \"../draw/GraphicsFillStyle\";\r\nimport {GraphicsStrokeStyle}\t\tfrom \"../draw/GraphicsStrokeStyle\";\r\n\r\nimport {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\n/**\r\n\r\n * Defines the values to use for specifying path-drawing commands.\r\n * The values in this class are used by the Graphics.drawPath() method,\r\n *or stored in the commands vector of a GraphicsPath object.\r\n */\r\nexport class GraphicsPath implements IGraphicsData\r\n{\r\n    public static data_type:string = \"[graphicsdata path]\";\r\n    /**\r\n     * The Vector of drawing commands as integers representing the path.\r\n     */\r\n    private _commands:Array<Array<number>>;\r\n    /**\r\n     * The Vector of Numbers containing the parameters used with the drawing commands.\r\n     */\r\n    private _data:Array<Array<number>>;\r\n\r\n    /**\r\n     * Specifies the winding rule using a value defined in the GraphicsPathWinding class.\r\n     */\r\n    private _winding_rule:string;\r\n\r\n    /**\r\n     * The Vector of Numbers containing the parameters used with the drawing commands.\r\n     */\r\n    private _winding_directions:Array<number>;\r\n\r\n    private _startPoint:Point;\r\n    private _cur_point:Point;\r\n    private _style:IGraphicsData;\r\n\r\n    constructor(commands:Array<number> = null, data:Array<number> = null, winding_rule:string = GraphicsPathWinding.EVEN_ODD)\r\n    {\r\n        this._data=[];\r\n        this._commands=[];\r\n        this._style = null;\r\n\r\n        if(commands!=null && data!=null){\r\n            this._data[0]=data;\r\n            this._commands[0]=commands;\r\n        }\r\n        else{\r\n            this._data[0]=[];\r\n            this._commands[0]=[];\r\n        }\r\n        this._startPoint=new Point();\r\n        this._cur_point=new Point();\r\n        this._winding_rule=winding_rule;\r\n        this._winding_directions=[];\r\n    }\r\n\r\n    public get data_type():string\r\n    {\r\n        return GraphicsPath.data_type;\r\n    }\r\n\r\n    public get style():IGraphicsData\r\n    {\r\n        return this._style;\r\n    }\r\n    public set style(value:IGraphicsData)\r\n    {\r\n        this._style = value;\r\n    }\r\n\r\n    public fill():IGraphicsData\r\n    {\r\n        if (this._style==null)\r\n            return null;\r\n        if (this._style.data_type==GraphicsFillStyle.data_type)\r\n            return this._style;\r\n        return null;\r\n    }\r\n    public stroke():GraphicsStrokeStyle\r\n    {\r\n        if (this._style==null)\r\n            return null;\r\n        if (this._style.data_type==GraphicsStrokeStyle.data_type)\r\n            return <GraphicsStrokeStyle>this._style;\r\n        return null;\r\n    }\r\n\r\n    public get commands():Array<Array<number>>\r\n    {\r\n        return this._commands;\r\n    }\r\n\r\n    public get data():Array<Array<number>>\r\n    {\r\n        return this._data;\r\n    }\r\n\r\n    public curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n    {\r\n        if(this._commands[this._commands.length-1].length==0){\r\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\r\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\r\n            this._data[this._data.length-1].push(this._cur_point.x);\r\n            this._data[this._data.length-1].push(this._cur_point.y);\r\n        }\r\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.CURVE_TO);\r\n        /*\r\n         if(this.isFill){\r\n         this._tmp_point.x=anchorX-this._cur_point.x;\r\n         this._tmp_point.y=anchorY-this._cur_point.y;\r\n         this._tmp_point.normalize();\r\n\r\n         var testpoint:Point=new Point(this._tmp_point.x, this._tmp_point.y);\r\n         testpoint.normalize();\r\n         var degree_anchor:number=Math.acos(this._tmp_point.x * this._direction.x + this._tmp_point.y * this._direction.y) * 180 / Math.PI;\r\n         if(degree_anchor>180)degree_anchor-=360;\r\n         //var degree_anchor:number=Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI;\r\n         this._draw_directions[this._draw_directions.length-1]+=degree_anchor;\r\n         this._tmp_point.x=controlX-this._cur_point.x;\r\n         this._tmp_point.y=controlY-this._cur_point.y;\r\n         this._tmp_point.normalize();\r\n         //angle = atan2( a.x*b.y - a.y*b.x, a.x*b.x + a.y*b.y );\r\n         var degree_control:number=(Math.atan2(this._tmp_point.x* testpoint.y - this._tmp_point.y* testpoint.x, this._tmp_point.x* testpoint.x + this._tmp_point.y* testpoint.y));\r\n         if(degree_control>180)degree_control-=360;\r\n         //var degree_control:number=(Math.atan2(this._tmp_point.x, this._tmp_point.y) * 180 / Math.PI);\r\n         console.log(\"degree_control \"+degree_control);\r\n         console.log(\"degree_anchor \"+degree_anchor);\r\n         console.log(\"this._draw_directions[this._draw_directions.length-1] \"+this._draw_directions[this._draw_directions.length-1]);\r\n         this._direction.x=testpoint.x;\r\n         this._direction.y=testpoint.y;\r\n         if((degree_control)<0)\r\n         this._data[this._data.length-1].push(1);\r\n         else\r\n         this._data[this._data.length-1].push(2);\r\n\r\n         }\r\n         else{\r\n         this._data[this._data.length-1].push(1);\r\n         }\r\n         */\r\n        this._data[this._data.length-1].push(controlX);\r\n        this._data[this._data.length-1].push(controlY);\r\n        this._data[this._data.length-1].push(anchorX);\r\n        this._data[this._data.length-1].push(anchorY);\r\n        this._cur_point.x=anchorX;\r\n        this._cur_point.y=anchorY;\r\n\r\n    }\r\n\r\n    public lineTo(x:number, y:number)\r\n    {\r\n        if(this._commands[this._commands.length-1].length==0){\r\n            // every contour must start with a moveTo command, so we make sure we have correct startpoint\r\n            this._commands[this._commands.length-1].push(GraphicsPathCommand.MOVE_TO);\r\n            this._data[this._data.length-1].push(this._cur_point.x);\r\n            this._data[this._data.length-1].push(this._cur_point.y);\r\n        }\r\n        this._commands[this._commands.length-1].push(GraphicsPathCommand.LINE_TO);\r\n        this._data[this._data.length-1].push(x);\r\n        this._data[this._data.length-1].push(y);\r\n\r\n\r\n        this._cur_point.x=x;\r\n        this._cur_point.y=y;\r\n    }\r\n\r\n    public moveTo(x:number, y:number)\r\n    {\r\n        // whenever a moveTo command apears, we start a new contour\r\n        if(this._commands[this._commands.length-1].length>0){\r\n            this._commands.push([GraphicsPathCommand.MOVE_TO]);\r\n            this._data.push([x, y]);\r\n        }\r\n        this._startPoint.x = x;\r\n        this._startPoint.y = y;\r\n        this._cur_point.x = x;\r\n        this._cur_point.y = y;\r\n    }\r\n\r\n    public wideLineTo(x:number, y:number)\r\n    {\r\n        // not used\r\n        /*\r\n         this._commands.push(GraphicsPathCommand.WIDE_LINE_TO);\r\n         this._data.push(0);\r\n         this._data.push(0);\r\n         this._data.push(x);\r\n         this._data.push(y);\r\n         */\r\n    }\r\n\r\n    public wideMoveTo(x:number, y:number)\r\n    {\r\n        // not used\r\n        /*\r\n         this._commands.push(GraphicsPathCommand.WIDE_MOVE_TO);\r\n         this._data.push(0);\r\n         this._data.push(0);\r\n         this._data.push(x);\r\n         this._data.push(y);\r\n         */\r\n    }\r\n\r\n}",
    "import {IGraphicsData}\t\tfrom \"../draw/IGraphicsData\";\r\nimport {JointStyle}\t\t    from \"../draw/JointStyle\";\r\nimport {CapsStyle}\t\t    from \"../draw/CapsStyle\";\r\n\r\nexport class GraphicsStrokeStyle implements IGraphicsData\r\n{\r\n    public static data_type:string = \"[graphicsdata StrokeStyle]\";\r\n\r\n    private _color:number;\r\n    private _alpha:number;\r\n    private _thickness:number;\r\n    private _jointstyle:number;\r\n    private _capstyle:number;\r\n    private _miter_limit:number;\r\n\r\n    constructor(color:number = 0xffffff, alpha:number = 1, thickness:number = 10, jointstyle:number = JointStyle.ROUND, capstyle:number = CapsStyle.SQUARE, miter_limit:number=10)\r\n    {\r\n        this._color=color;\r\n        this._alpha=alpha;\r\n        this._thickness=thickness;\r\n        this._jointstyle=jointstyle;\r\n        this._capstyle=capstyle;\r\n        this._miter_limit=miter_limit;\r\n    }\r\n\r\n    public get data_type():string\r\n    {\r\n        return GraphicsStrokeStyle.data_type;\r\n    }\r\n\r\n    public get color():number\r\n    {\r\n        return this._color;\r\n    }\r\n    public set color(value:number)\r\n    {\r\n        this._color = value;\r\n    }\r\n\r\n    public get alpha():number\r\n    {\r\n        return this._alpha;\r\n    }\r\n    public set alpha(value:number)\r\n    {\r\n        this._alpha = value;\r\n    }\r\n\r\n    public get half_thickness():number\r\n    {\r\n        return this._thickness/2;\r\n    }\r\n    public get thickness():number\r\n    {\r\n        return this._thickness;\r\n    }\r\n    public set thickness(value:number)\r\n    {\r\n        this._thickness = value;\r\n    }\r\n\r\n    public get jointstyle():number\r\n    {\r\n        return this._jointstyle;\r\n    }\r\n    public set jointstyle(value:number)\r\n    {\r\n        this._jointstyle = value;\r\n    }\r\n    public get miter_limit():number\r\n    {\r\n        return this._miter_limit;\r\n    }\r\n    public set miter_limit(value:number){\r\n\r\n        this._miter_limit = value;\r\n    }\r\n    public get capstyle():number\r\n    {\r\n        return this._capstyle;\r\n    }\r\n    public set capstyle(value:number)\r\n    {\r\n        this._capstyle = value;\r\n    }\r\n}",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nexport class InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nexport class JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:number = 2;\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:number = 0;\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:number = 1;\r\n}",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nexport class LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nexport class PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nexport class SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nexport class TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}",
    "export {CapsStyle}\t\t\t\t\t\tfrom \"./draw/CapsStyle\";\r\nexport {GradientType}\t\t\t\t\tfrom \"./draw/GradientType\";\r\nexport {GraphicsFactoryFills} \t\t\tfrom \"./draw/GraphicsFactoryFills\";\r\nexport {GraphicsFactoryHelper} \t\t\tfrom \"./draw/GraphicsFactoryHelper\";\r\nexport {GraphicsFactoryStrokes} \t\t\tfrom \"./draw/GraphicsFactoryStrokes\";\r\nexport {GraphicsFillStyle} \t\t\t    from \"./draw/GraphicsFillStyle\";\r\nexport {GraphicsStrokeStyle}\t\t\t    from \"./draw/GraphicsStrokeStyle\";\r\nexport {GraphicsPath}\t\t\t\t\tfrom \"./draw/GraphicsPath\";\r\nexport {GraphicsPathCommand}\t\t\t\tfrom \"./draw/GraphicsPathCommand\";\r\nexport {GraphicsPathWinding}\t\t\t\tfrom \"./draw/GraphicsPathWinding\";\r\nexport {IGraphicsData}\t\t\t\t\tfrom \"./draw/IGraphicsData\";\r\nexport {InterpolationMethod}\t\t\t\tfrom \"./draw/InterpolationMethod\";\r\nexport {JointStyle}\t\t\t\t\t\tfrom \"./draw/JointStyle\";\r\nexport {LineScaleMode}\t\t\t\t\tfrom \"./draw/LineScaleMode\";\r\nexport {PixelSnapping}\t\t\t\t\tfrom \"./draw/PixelSnapping\";\r\nexport {SpreadMethod}\t\t\t\t\tfrom \"./draw/SpreadMethod\";\r\nexport {TriangleCulling}\t\t\t\t\tfrom \"./draw/TriangleCulling\";",
    "import {ErrorBase}\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\r\n\r\nexport class CastError extends ErrorBase\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}",
    "export {CastError}\t\t\t\t\t\tfrom \"./errors/CastError\";",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nimport {Camera}\t\t\t\t\tfrom \"../display/Camera\";\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nexport class CameraEvent extends EventBase\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CameraEvent\r\n\t{\r\n\t\treturn new CameraEvent(this.type, this._camera);\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\r\n\r\nexport class DisplayObjectEvent extends EventBase\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static INVALIDATE_PARTITION_BOUNDS:string = \"invalidatePartitionBounds\";\r\n\r\n\tprivate _object:DisplayObject;\r\n\r\n\tpublic get object():DisplayObject\r\n\t{\r\n\t\treturn this._object;\r\n\t}\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis._object = object;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():DisplayObjectEvent\r\n\t{\r\n\t\treturn new DisplayObjectEvent(this.type, this._object);\r\n\t}\r\n}",
    "import {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.ElementsEvent\r\n * @see away.core.base.Graphics\r\n */\r\nexport class ElementsEvent extends EventBase\r\n{\r\n\t/**\r\n\t * Dispatched when a Elements's index data has been updated.\r\n\t */\r\n\tpublic static INVALIDATE_INDICES:string = \"invalidateIndices\";\r\n\r\n\t/**\r\n\t * Dispatched when a Elements's index data has been disposed.\r\n\t */\r\n\tpublic static CLEAR_INDICES:string = \"clearIndices\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a Elements's vertex data has been updated.\r\n\t */\r\n\tpublic static INVALIDATE_VERTICES:string = \"invalidateVertices\";\r\n\r\n\t/**\r\n\t * Dispatched when a Elements's vertex data has been disposed.\r\n\t */\r\n\tpublic static CLEAR_VERTICES:string = \"clearVertices\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GraphicsEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():ElementsEvent\r\n\t{\r\n\t\treturn new ElementsEvent(this.type, this._attributesView);\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nexport class LightEvent extends EventBase\r\n{\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():LightEvent\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}",
    "import {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nimport {IEntity}\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {IRenderable}\t\t\t\tfrom \"../base/IRenderable\";\r\nimport {View}\t\t\t\t\t\tfrom \"../View\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nexport class MouseEvent extends EventBase\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The entity inside which the event took place.\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderable:IRenderable;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the elements where the event took place.\r\n\t */\r\n\tpublic elementIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic position:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic normal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation():void\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation():void\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():MouseEvent\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.entity = this.entity;\r\n\t\tresult.renderable = this.renderable;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.position = this.position;\r\n\t\tresult.normal = this.normal;\r\n\t\tresult.elementIndex = this.elementIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nimport {IRenderable}\t\t\t\t\t\tfrom \"../base/IRenderable\";\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableEvent\r\n * @see away.core.base.Graphics\r\n */\r\nexport class RenderableEvent extends EventBase\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static INVALIDATE_SURFACE:string = \"invalidateRenderable\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static INVALIDATE_ELEMENTS:string = \"invalidateElements\";\r\n\r\n\tprivate _renderable:IRenderable;\r\n\r\n\t/**\r\n\t * Create a new GraphicsEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderable:IRenderable)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderable = renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderable():IRenderable\r\n\t{\r\n\t\treturn this._renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():RenderableEvent\r\n\t{\r\n\t\treturn new RenderableEvent(this.type, this._renderable);\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nexport class RendererEvent extends EventBase\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nexport class ResizeEvent extends EventBase\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():ResizeEvent\r\n\t{\r\n\t\treturn new ResizeEvent(this.type, this._oldHeight, this._oldWidth);\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\n\r\nexport class StyleEvent extends EventBase\r\n{\r\n\tprivate _style:Style;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static INVALIDATE_PROPERTIES:string = \"invalidateProperties\";\r\n\r\n\tpublic get style():Style\r\n\t{\r\n\t\treturn this._style;\r\n\t}\r\n\r\n\tconstructor(type:string, style:Style)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._style = style;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():StyleEvent\r\n\t{\r\n\t\treturn new StyleEvent(this.type, this._style);\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nimport {ISurface}\t\t\t\t\t\tfrom \"../base/ISurface\";\r\n\r\nexport class SurfaceEvent extends EventBase\r\n{\r\n\tpublic static INVALIDATE_TEXTURE:string = \"invalidateTexture\";\r\n\r\n\tpublic static INVALIDATE_ANIMATION:string = \"invalidateAnimation\";\r\n\r\n\tpublic static INVALIDATE_PASSES:string = \"invalidatePasses\";\r\n\r\n\tprivate _surface:ISurface;\r\n\r\n\r\n\t/**\r\n\t * Create a new GraphicsEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, surface:ISurface)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._surface = surface;\r\n\t}\r\n\r\n\t/**\r\n\t * The surface of the renderable.\r\n\t */\r\n\tpublic get surface():ISurface\r\n\t{\r\n\t\treturn this._surface;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SurfaceEvent\r\n\t{\r\n\t\treturn new SurfaceEvent(this.type, this._surface);\r\n\t}\r\n}",
    "import {Point}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nimport {IEntity}\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {IRenderable}\t\t\t\tfrom \"../base/IRenderable\";\r\nimport {View}\t\t\t\t\t\tfrom \"../View\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\n\r\nexport class TouchEvent extends EventBase\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic entity:IEntity;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderable:IRenderable;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the elements where the event took place.\r\n\t */\r\n\tpublic elementIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic position:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic normal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation():void\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation():void\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():TouchEvent\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.entity = this.entity;\r\n\t\tresult.renderable = this.renderable;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.position = this.position;\r\n\t\tresult.normal = this.normal;\r\n\t\tresult.elementIndex = this.elementIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.entity.sceneTransform.transformVector(this.position);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.entity.sceneTransform.deltaTransformVector(this.normal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}",
    "import {EventBase}\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\r\n\r\nimport {Transform}\t\t\t\tfrom \"../base/Transform\";\r\n\r\nexport class TransformEvent extends EventBase\r\n{\r\n\tprivate _transform:Transform;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static INVALIDATE_MATRIX3D:string = \"invalidateMatrix3D\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static INVALIDATE_COLOR_TRANSFORM:string = \"invalidateColorTransform\";\r\n\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\tconstructor(type:string, transform:Transform)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._transform = transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TransformEvent\r\n\t{\r\n\t\treturn new TransformEvent(this.type, this._transform);\r\n\t}\r\n}",
    "export {CameraEvent}\t\t\t\t\t\tfrom \"./events/CameraEvent\";\r\nexport {DisplayObjectEvent}\t\t\t\tfrom \"./events/DisplayObjectEvent\";\r\nexport {ElementsEvent}\t\t\t\t\tfrom \"./events/ElementsEvent\";\r\nexport {LightEvent}\t\t\t\t\t\tfrom \"./events/LightEvent\";\r\nexport {MouseEvent}\t\t\t\t\t\tfrom \"./events/MouseEvent\";\r\nexport {RenderableEvent}\t\t\t\t\tfrom \"./events/RenderableEvent\";\r\nexport {RendererEvent}\t\t\t\t\tfrom \"./events/RendererEvent\";\r\nexport {ResizeEvent}\t\t\t\t\t\tfrom \"./events/ResizeEvent\";\r\nexport {StyleEvent}\t\t\t\t\t\tfrom \"./events/StyleEvent\";\r\nexport {SurfaceEvent}\t\t\t\t\tfrom \"./events/SurfaceEvent\";\r\nexport {TouchEvent}\t\t\t\t\t\tfrom \"./events/TouchEvent\";\r\nexport {TransformEvent}\t\t\t\t\tfrom \"./events/TransformEvent\";",
    "export {ITimelineSceneGraphFactory}\t\tfrom \"./factories/ITimelineSceneGraphFactory\";",
    "import {AttributesBuffer}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {Float3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\r\nimport {Short3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\r\nimport {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\r\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {ElementsEvent}\t\t\t\tfrom \"../events/ElementsEvent\";\r\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\r\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\n\r\n/**\r\n * @class away.base.TriangleElements\r\n */\r\nexport class ElementsBase extends AssetBase\r\n{\r\n\tprivate _indices:Short3Attributes;\r\n\tprivate _customAttributesNames:Array<string> = new Array<string>();\r\n\tprivate _customAttributes:Object = new Object();\r\n\t\r\n\tprivate _numElements:number = 0;\r\n\tpublic _numVertices:number = 0;\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _invalidateIndices:ElementsEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _invalidateVertices:Object = new Object();\r\n\r\n\t\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._indices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getCustomAtributesNames():Array<string>\r\n\t{\r\n\t\treturn this._customAttributesNames;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getCustomAtributes(name:string):AttributesView\r\n\t{\r\n\t\treturn this._customAttributes[name];\r\n\t}\r\n\t\r\n\t/**\r\n\t * The total amount of triangles in the TriangleElements.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\tpublic copyTo(elements:ElementsBase):void\r\n\t{\r\n\t\tif (this.indices)\r\n\t\t\telements.setIndices(this.indices.clone());\r\n\t\t\r\n\t\tfor (var name in this._customAttributes)\r\n\t\t\telements.setCustomAttributes(name, this.getCustomAtributes(name).clone());\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._indices) {\r\n\t\t\tthis._indices.dispose();\r\n\t\t\tthis._indices = null;\r\n\t\t}\r\n\t\t\r\n\t\tfor (var name in this._customAttributes) {\r\n\t\t\tthis._customAttributes[name].dispose();\r\n\t\t\tdelete this._customAttributes;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleElements.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._indices)\r\n\t\t\t\tthis.clearIndices();\r\n\r\n\t\t\tthis._indices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._indices)\r\n\t\t\t\tthis._indices = new Short3Attributes();\r\n\r\n\t\t\tthis._indices.set(values, offset);\r\n\t\t} else if (this._indices) {\r\n\t\t\tthis._indices.dispose();\r\n\t\t\tthis._indices = null;\r\n\r\n\t\t\tthis.clearIndices();\r\n\t\t}\r\n\r\n\t\tif (this._indices) {\r\n\t\t\tthis._numElements = this._indices.count;\r\n\r\n\t\t\tthis.invalidateIndices();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Updates custom attributes.\r\n\t */\r\n\tpublic setCustomAttributes(name:string, array:Array<number>, offset?:number);\r\n\tpublic setCustomAttributes(name:string, arrayBufferView:ArrayBufferView, offset?:number);\r\n\tpublic setCustomAttributes(name:string, attributesView:AttributesView, offset?:number);\r\n\tpublic setCustomAttributes(name:string, values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (values == this._customAttributes[name])\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.clearVertices(this._customAttributes[name]);\r\n\t\t\tthis._customAttributes[name] = values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._customAttributes[name])\r\n\t\t\t\tthis._customAttributes[name] = new Float3Attributes(this._concatenatedBuffer); //default custom atrributes is Float3\r\n\r\n\t\t\tthis._customAttributes[name].set(values, offset);\r\n\t\t} else if (this._customAttributes[name]) {\r\n\t\t\tthis.clearVertices(this._customAttributes[name]);\r\n\t\t\tthis._customAttributesNames.splice(this._customAttributesNames.indexOf(name), 1);\r\n\t\t\tdelete this._customAttributes[name];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.invalidateVertices(this._customAttributes[name]);\r\n\r\n\t\tthis._verticesDirty[this._customAttributes[name].id] = false;\r\n\r\n\t\tif (this._customAttributesNames.indexOf(name) == -1)\r\n\t\t\tthis._customAttributesNames.push(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():ElementsBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D, count:number = 0, offset:number = 0):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number, count:number = 0, offset:number = 0):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1, count:number = 0, offset:number = 0):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic getBoxBounds(target:Box = null, count:number = 0, offset:number = 0):Box\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null, count:number = 0, offset:number = 0):Sphere\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box, count:number = 0, offset:number = 0):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic invalidateIndices():void\r\n\t{\r\n\t\tif (!this._invalidateIndices)\r\n\t\t\tthis._invalidateIndices = new ElementsEvent(ElementsEvent.INVALIDATE_INDICES, this._indices);\r\n\r\n\t\tthis.dispatchEvent(this._invalidateIndices);\r\n\t}\r\n\r\n\tprivate clearIndices():void\r\n\t{\r\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_INDICES, this._indices));\r\n\t}\r\n\r\n\tpublic invalidateVertices(attributesView:AttributesView):void\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._invalidateVertices[attributesView.id])\r\n\t\t\tthis._invalidateVertices[attributesView.id] = new ElementsEvent(ElementsEvent.INVALIDATE_VERTICES, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._invalidateVertices[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic clearVertices(attributesView:AttributesView):void\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new ElementsEvent(ElementsEvent.CLEAR_VERTICES, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._invalidateVertices[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision, count:number = 0, offset:number = 0):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}",
    "export class ElementsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TRIANGLE:string = \"triangle\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static LINE:string = \"line\";\r\n}",
    "import {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\r\nimport {BitmapImage2D}\t\t\t \tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport {Matrix}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\r\nimport {ElementsEvent}\t\t\t\tfrom \"../events/ElementsEvent\";\r\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {ParticleData}\t\t\t\t\tfrom \"../animators/data/ParticleData\";\r\n\r\nimport {GraphicsPath}\t\t\t\t\tfrom \"../draw/GraphicsPath\";\r\nimport {GraphicsPathCommand}\t\t\tfrom \"../draw/GraphicsPathCommand\";\r\nimport {GraphicsFactoryFills}\t\t\tfrom \"../draw/GraphicsFactoryFills\";\r\nimport {GraphicsFactoryStrokes}\t\tfrom \"../draw/GraphicsFactoryStrokes\";\r\nimport {PartialImplementationError}\tfrom \"awayjs-core/lib/errors/PartialImplementationError\";\r\nimport {InterpolationMethod}\t\t\tfrom \"../draw/InterpolationMethod\";\r\nimport {JointStyle}\t\t\t\t\tfrom \"../draw/JointStyle\";\r\nimport {LineScaleMode}\t\t\t\tfrom \"../draw/LineScaleMode\";\r\nimport {TriangleCulling}\t\t\t\tfrom \"../draw/TriangleCulling\";\r\nimport {SpreadMethod}\t\t\t\t\tfrom \"../draw/SpreadMethod\";\r\nimport {CapsStyle}\t\t\t\t\tfrom \"../draw/CapsStyle\";\r\nimport {GradientType}\t\t\t\t\tfrom \"../draw/GradientType\";\r\nimport {GraphicsPathWinding}\t\t\tfrom \"../draw/GraphicsPathWinding\";\r\nimport {IGraphicsData}\t\t\t\tfrom \"../draw/IGraphicsData\";\r\nimport {GraphicsStrokeStyle}\t\t\tfrom \"../draw/GraphicsStrokeStyle\";\r\nimport {GraphicsFillStyle}\t\t\tfrom \"../draw/GraphicsFillStyle\";\r\n\r\n\r\n/**\r\n *\r\n * Graphics is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Graphics object is assigned to a Sprite, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleGraphic objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGraphics\r\n * @see away.entities.Sprite\r\n *\r\n * @class Graphics\r\n */\r\nexport class Graphics extends AssetBase\r\n{\r\n\tpublic static assetType:string = \"[asset Graphics]\";\r\n\r\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\r\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\r\n\r\n\tprivate _boxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tprivate _sphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid = true;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _graphics:Array<Graphic> = new Array<Graphic>();\r\n\tprivate _animator:IAnimator;\r\n\tprivate _style:Style;\r\n\r\n\tprivate _queued_fill_pathes:Array<GraphicsPath>;\r\n\tprivate _queued_stroke_pathes:Array<GraphicsPath>;\r\n\tprivate _active_fill_path:GraphicsPath;\r\n\tprivate _active_stroke_path:GraphicsPath;\r\n\r\n\tprivate _current_position:Point=new Point();\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Graphics.assetType;\r\n\t}\r\n\r\n\tpublic particles:Array<ParticleData>;\r\n\r\n\tpublic numParticles:number /*uint*/;\r\n\r\n\tpublic get count():number\r\n\t{\r\n\t\treturn this._graphics.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the animator of the graphics object.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tvar graphic:Graphic;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tgraphic = this._graphics[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (graphic.material) {\r\n\t\t\t\tgraphic.material.iRemoveOwner(graphic);\r\n\t\t\t\tgraphic.material.iAddOwner(graphic);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing graphic objects in case they need to pull new elements\r\n\t\t\tgraphic.invalidateElements();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get style():Style\r\n\t{\r\n\t\treturn this._style;\r\n\t}\r\n\r\n\tpublic set style(value:Style)\r\n\t{\r\n\t\tif (this._style == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis._style = value;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis._iInvalidateSurfaces();\r\n\t}\r\n\r\n\tpublic get queued_stroke_pathes():Array<GraphicsPath>\r\n\t{\r\n\t\treturn this._queued_stroke_pathes;\r\n\t}\r\n\r\n\tpublic set queued_stroke_pathes(value:Array<GraphicsPath>)\r\n\t{\r\n\t\tthis._queued_stroke_pathes=value\r\n\t}\r\n\tpublic get queued_fill_pathes():Array<GraphicsPath>\r\n\t{\r\n\t\treturn this._queued_fill_pathes;\r\n\t}\r\n\r\n\tpublic set queued_fill_pathes(value:Array<GraphicsPath>)\r\n\t{\r\n\t\tthis._queued_fill_pathes=value\r\n\t}\r\n\t/**\r\n\t * The material with which to render the Graphics.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tvar graphic:Graphic;\r\n\r\n\t\tif (this._material)\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\r\n\t\t\t\t\tthis._material.iRemoveOwner(graphic);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material)\r\n\t\t\tfor (i = 0; i < len; i++)\r\n\t\t\t\tif (!(graphic = this._graphics[i])._iGetExplicitMaterial())\r\n\t\t\t\t\tthis._material.iAddOwner(graphic);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Graphics object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._current_position=new Point();\r\n\t\tthis._queued_fill_pathes=[];\r\n\t\tthis._queued_stroke_pathes=[];\r\n\t\tthis._active_fill_path=null;\r\n\t\tthis._active_stroke_path=null;\r\n\r\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\r\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a GraphicBase wrapping a Elements.\r\n\t *\r\n\t * @param elements\r\n\t */\r\n\tpublic addGraphic(elements:ElementsBase, material:MaterialBase = null, style:Style = null, count:number = 0, offset:number = 0):Graphic\r\n\t{\r\n\t\tvar graphic:Graphic;\r\n\r\n\t\tif (Graphic._available.length) {\r\n\t\t\tgraphic = Graphic._available.pop();\r\n\t\t\tgraphic._iIndex = this._graphics.length;\r\n\t\t\tgraphic.parent = this;\r\n\t\t\tgraphic.elements = elements;\r\n\t\t\tgraphic.material = material;\r\n\t\t\tgraphic.style = style;\r\n\t\t\tgraphic.count = count;\r\n\t\t\tgraphic.offset = offset;\r\n\t\t} else {\r\n\t\t\tgraphic = new Graphic(this._graphics.length, this, elements, material, style, count, offset);\r\n\t\t}\r\n\r\n\t\tthis._graphics.push(graphic);\r\n\r\n\t\tgraphic.addEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\r\n\r\n\t\tthis.invalidate();\r\n\r\n\t\treturn graphic;\r\n\t}\r\n\r\n\tpublic removeGraphic(graphic:Graphic):void\r\n\t{\r\n\t\tthis._graphics.splice(this._graphics.indexOf(graphic), 1);\r\n\r\n\t\tgraphic.removeEventListener(ElementsEvent.INVALIDATE_VERTICES, this._onInvalidateVerticesDelegate);\r\n\r\n\t\tgraphic.elements = null;\r\n\t\tgraphic.material = null;\r\n\t\tgraphic.style = null;\r\n\t\tgraphic.clear();\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\tpublic getGraphicAt(index:number):Graphic\r\n\t{\r\n\t\treturn this._graphics[index];\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D):void\r\n\t{\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._graphics[i].applyTransformation(transform);\r\n\t}\r\n\r\n\tpublic copyTo(graphics:Graphics):void\r\n\t{\r\n\t\tgraphics.material = this._material;\r\n\t\tgraphics.style = this.style;\r\n\t\tgraphics.particles = this.particles;\r\n\t\tgraphics.numParticles = this.numParticles;\r\n\t\tvar graphic:Graphic;\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tgraphic = this._graphics[i];\r\n\t\t\tgraphics.addGraphic(graphic.elements, graphic._iGetExplicitMaterial(), graphic._iGetExplicitStyle(), graphic.count, graphic.offset);\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tgraphics.animator = this._animator.clone();\r\n\t}\r\n\r\n\tpublic clone():Graphics\r\n\t{\r\n\t\tvar newInstance:Graphics = new Graphics();\r\n\t\t\r\n\t\tthis.copyTo(newInstance);\r\n\t\t\r\n\t\treturn newInstance;\r\n\t}\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number):void\r\n\t{\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._graphics[i].scale(scale);\r\n\t}\r\n\r\n\tpublic clear():void\r\n\t{\r\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--){\r\n\t\t\tthis._graphics[i].clear();\r\n\t\t\t//this._graphics[i].dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Graphics object, including SubGeometries.\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.material = null;\r\n\t\tfor (var i:number = this._graphics.length - 1; i>=0; i--)\r\n\t\t\tthis._graphics[i].dispose();\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1):void\r\n\t{\r\n\t\tvar len:number = this._graphics.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._graphics[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic getBoxBounds():Box\r\n\t{\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\t\tif (!this._boxBounds)\r\n\t\t\t\tthis._boxBounds = new Box();\r\n\r\n\t\t\tif (this._graphics.length) {\r\n\t\t\t\tthis._boxBounds.setBoundIdentity();\r\n\t\t\t\tvar len:number = this._graphics.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\t\tthis._boxBounds = this._boxBounds.union(this._graphics[i].getBoxBounds(), this._boxBounds);\r\n\t\t\t} else {\r\n\t\t\t\tthis._boxBounds.setEmpty();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._boxBounds;\r\n\t}\r\n\r\n\r\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\r\n\t{\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\ttarget = this._graphics[i].getSphereBounds(center, target);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tsuper.invalidate();\r\n\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\t}\r\n\r\n\tpublic _iInvalidateSurfaces():void\r\n\t{\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._graphics[i].invalidateSurface();\r\n\t}\r\n\r\n\r\n\tpublic invalidateElements():void\r\n\t{\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._graphics[i].invalidateElements();\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number):boolean\r\n\t{\r\n\t\t//TODO: handle lines as well\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tfor(var i:number = 0; i < len; i++)\r\n\t\t\tif (this._graphics[i].hitTestPoint(x, y, 0))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\tvar len:number = this._graphics.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\ttraverser.applyRenderable(this._graphics[i]);\r\n\t}\r\n\r\n\tprivate _onInvalidateProperties(event:StyleEvent):void\r\n\t{\r\n\t\tthis._iInvalidateSurfaces();\r\n\t}\r\n\r\n\tprivate _onInvalidateVertices(event:ElementsEvent):void\r\n\t{\r\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\r\n\t\t\treturn;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\tpublic draw_fills() {\r\n\t\tGraphicsFactoryFills.draw_pathes(this);\r\n\t}\r\n\r\n\tpublic draw_strokes(){\r\n\t\tGraphicsFactoryStrokes.draw_pathes(this);\r\n\t}\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false):void\r\n\t{\r\n\t\tthis.draw_fills();\r\n\t\t// start a new fill path\r\n\t\tthis._active_fill_path=new GraphicsPath();\r\n\t\t// todo: create bitmap fill style\r\n\t\tthis._active_fill_path.style=new GraphicsFillStyle(0xffffff, 1);\r\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\r\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\r\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1):void\r\n\t{\r\n\t\tthis.draw_fills();\r\n\t\t// start a new fill path\r\n\t\tthis._active_fill_path=new GraphicsPath();\r\n\t\tthis._active_fill_path.style=new GraphicsFillStyle(color, alpha);\r\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\r\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\r\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0):void\r\n\t{\r\n\t\tthis.draw_fills();\r\n\t\t// start a new fill path\r\n\t\tthis._active_fill_path=new GraphicsPath();\r\n\t\t// todo: create gradient fill style\r\n\t\tthis._active_fill_path.style=new GraphicsFillStyle(colors[0], alphas[0]);\r\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\r\n\t\t\tthis._active_fill_path.moveTo(this._current_position.x, this._current_position.y);\r\n\t\tthis._queued_fill_pathes.push(this._active_fill_path);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics):void\r\n\t{\r\n\t\tsourceGraphics.copyTo(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number):void\r\n\t{\r\n\r\n\t\tthrow new PartialImplementationError(\"cubicCurveTo\");\r\n\t\t/*\r\n\t\t t = 0.5; // given example value\r\n\t\t x = (1 - t) * (1 - t) * p[0].x + 2 * (1 - t) * t * p[1].x + t * t * p[2].x;\r\n\t\t y = (1 - t) * (1 - t) * p[0].y + 2 * (1 - t) * t * p[1].y + t * t * p[2].y;\r\n\r\n\t\t this.queued_command_types.push(Graphics.CMD_BEZIER);\r\n\t\t this.queued_command_data.push(controlX1);\r\n\t\t this.queued_command_data.push(controlY1);\r\n\t\t this.queued_command_data.push(controlX2);\r\n\t\t this.queued_command_data.push(controlY2);\r\n\t\t this.queued_command_data.push(anchorX);\r\n\t\t this.queued_command_data.push(anchorY);\r\n\r\n\t\t // todo: somehow convert cubic bezier curve into 2 quadric curves...\r\n\r\n\t\t this.draw_direction+=0;\r\n\t\t */\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number):void\r\n\t{\r\n\r\n\t\tif(this._active_fill_path!=null){\r\n\t\t\tthis._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\r\n\t\t}\r\n\t\tif(this._active_stroke_path!=null){\r\n\t\t\tthis._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\r\n\t\t}\r\n\t\tthis._current_position.x=anchorX;\r\n\t\tthis._current_position.y=anchorY;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number):void\r\n\t{\r\n\t\t// todo: directly create triangles instead of draw commands ?\r\n\t\tvar radius2=radius*1.065;\r\n\t\tif(this._active_fill_path!=null){\r\n\t\t\tthis._active_fill_path.moveTo(x-radius, y);\r\n\t\t\tfor(var i=8; i>=0;i--){\r\n\r\n\t\t\t\tvar degree = (i) *(360/8)*Math.PI/180;\r\n\t\t\t\tvar degree2 = degree + ((360/16)*Math.PI/180);\r\n\t\t\t\tthis._active_fill_path.curveTo(x-(Math.cos(degree2)*radius2), y+(Math.sin(degree2)*radius2),x-(Math.cos(degree)*radius), y+(Math.sin(degree)*radius));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this._active_stroke_path!=null){\r\n\t\t\tthis._active_stroke_path.moveTo(x, y+radius);\r\n\t\t\tvar radius2=radius*0.93;\r\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y+(radius2), x-radius, y);\r\n\t\t\tthis._active_stroke_path.curveTo(x-(radius2), y-(radius2), x, y-radius);\r\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y-(radius2), x+radius, y);\r\n\t\t\tthis._active_stroke_path.curveTo(x+(radius2), y+(radius2), x, y+radius);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number):void\r\n\t{\r\n\t\twidth/=2;\r\n\t\theight/=2;\r\n\t\tif(this._active_fill_path!=null){\r\n\r\n\t\t\tthis._active_fill_path.moveTo(x, y+height);\r\n\t\t\tthis._active_fill_path.curveTo(x-(width), y+(height), x-width, y);\r\n\t\t\tthis._active_fill_path.curveTo(x-(width), y-(height), x, y-height);\r\n\t\t\tthis._active_fill_path.curveTo(x+(width), y-(height), x+width, y);\r\n\t\t\tthis._active_fill_path.curveTo(x+(width), y+(height), x, y+height);\r\n\t\t}\r\n\t\tif(this._active_stroke_path!=null){\r\n\t\t\tthis._active_stroke_path.moveTo(x, y+height);\r\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y+(height), x-width, y);\r\n\t\t\tthis._active_stroke_path.curveTo(x-(width), y-(height), x, y-height);\r\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y-(height), x+width, y);\r\n\t\t\tthis._active_stroke_path.curveTo(x+(width), y+(height), x, y+height);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>):void\r\n\t{\r\n\t\t//this.draw_fills();\r\n\t\t/*\r\n\t\t for (var i:number=0; i<graphicsData.length; i++){\r\n\t\t //todo\r\n\t\t if(graphicsData[i].dataType==\"beginFill\"){\r\n\r\n\t\t }\r\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\r\n\r\n\t\t }\r\n\t\t else if(graphicsData[i].dataType==\"endFill\"){\r\n\r\n\t\t }\r\n\t\t else if(graphicsData[i].dataType==\"Path\"){\r\n\r\n\t\t }\r\n\r\n\t\t }\r\n\t\t */\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding):void\r\n\t{\r\n\t\t//todo\r\n\t\t/*\r\n\t\t if(this._active_fill_path!=null){\r\n\t\t this._active_fill_path.curveTo(controlX, controlY, anchorX, anchorY);\r\n\t\t }\r\n\t\t if(this._active_stroke_path!=null){\r\n\t\t this._active_stroke_path.curveTo(controlX, controlY, anchorX, anchorY);\r\n\t\t }\r\n\t\t this._current_position.x=anchorX;\r\n\t\t this._current_position.y=anchorY;\r\n\t\t */\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number):void\r\n\t{\r\n\t\t//todo: directly create triangles instead of drawing commands ?\r\n\t\tif(this._active_fill_path!=null){\r\n\t\t\tthis._active_fill_path.moveTo(x, y);\r\n\t\t\tthis._active_fill_path.lineTo(x+width, y);\r\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height);\r\n\t\t\tthis._active_fill_path.lineTo(x, y+height);\r\n\t\t\tthis._active_fill_path.lineTo(x, y);\r\n\t\t}\r\n\t\tif(this._active_stroke_path!=null){\r\n\t\t\tthis._active_stroke_path.moveTo(x, y);\r\n\t\t\tthis._active_stroke_path.lineTo(x+width, y);\r\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height);\r\n\t\t\tthis._active_stroke_path.lineTo(x, y+height);\r\n\t\t\tthis._active_stroke_path.lineTo(x, y);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN):void\r\n\t{\r\n\t\t//todo: directly create triangles instead of drawing commands ?\r\n\t\tif(!ellipseHeight){\r\n\t\t\tellipseHeight=ellipseWidth;\r\n\t\t}\r\n\t\tif(this._active_fill_path!=null){\r\n\t\t\tthis._active_fill_path.moveTo(x+ellipseWidth, y);\r\n\t\t\tthis._active_fill_path.lineTo(x+width-ellipseWidth, y);\r\n\t\t\tthis._active_fill_path.curveTo(x+width, y, x+width, y+ellipseHeight);\r\n\t\t\tthis._active_fill_path.lineTo(x+width, y+height-ellipseHeight);\r\n\t\t\tthis._active_fill_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\r\n\t\t\tthis._active_fill_path.lineTo(x+ellipseWidth, y+height);\r\n\t\t\tthis._active_fill_path.curveTo(x, y+height, x, y+height-ellipseHeight);\r\n\t\t\tthis._active_fill_path.lineTo(x, y+ellipseHeight);\r\n\t\t\tthis._active_fill_path.curveTo(x, y, x+ellipseWidth, y);\r\n\t\t}\r\n\t\tif(this._active_stroke_path!=null){\r\n\t\t\tthis._active_stroke_path.moveTo(x+ellipseWidth, y);\r\n\t\t\tthis._active_stroke_path.lineTo(x+width-ellipseWidth, y);\r\n\t\t\tthis._active_stroke_path.curveTo(x+width, y, x+width, y+ellipseHeight);\r\n\t\t\tthis._active_stroke_path.lineTo(x+width, y+height-ellipseHeight);\r\n\t\t\tthis._active_stroke_path.curveTo(x+width, y+height, x+width-ellipseWidth, y+height);\r\n\t\t\tthis._active_stroke_path.lineTo(x+ellipseWidth, y+height);\r\n\t\t\tthis._active_stroke_path.curveTo(x, y+height, x, y+height-ellipseHeight);\r\n\t\t\tthis._active_stroke_path.lineTo(x, y+ellipseHeight);\r\n\t\t\tthis._active_stroke_path.curveTo(x, y, x+ellipseWidth, y);\r\n\t\t}\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null):void\r\n\t{\r\n\t\tif(this._active_fill_path!=null){\r\n\t\t\t//todo\r\n\t\t}\r\n\t\tif(this._active_stroke_path!=null){\r\n\t\t\t//todo\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill():void\r\n\t{\r\n\t\tthis.draw_strokes();\r\n\t\tthis.draw_fills();\r\n\t\tthis._active_fill_path=null;\r\n\t\tthis._active_stroke_path=null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false):void\r\n\t{\r\n\t\t// start a new stroke path\r\n\t\tthis._active_stroke_path=new GraphicsPath();\r\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\r\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\r\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0):void\r\n\t{\r\n\t\t// start a new stroke path\r\n\t\tthis._active_stroke_path=new GraphicsPath();\r\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\r\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\r\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, capstyle:number = CapsStyle.NONE, jointstyle:number = JointStyle.MITER, miterLimit:number = 100):void\r\n\t{\r\n\t\t// start a new stroke path\r\n\t\tthis._active_stroke_path=new GraphicsPath();\r\n\t\tthis._active_stroke_path.style = new  GraphicsStrokeStyle(color, alpha, thickness, jointstyle, capstyle, miterLimit);\r\n\t\tif(this._current_position.x!=0 || this._current_position.y!=0)\r\n\t\t\tthis._active_stroke_path.moveTo(this._current_position.x, this._current_position.y);\r\n\t\tthis._queued_stroke_pathes.push(this._active_stroke_path);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number):void\r\n\t{\r\n\t\tif(this._active_fill_path!=null){\r\n\t\t\tthis._active_fill_path.lineTo(x, y);\r\n\t\t}\r\n\t\tif(this._active_stroke_path!=null){\r\n\t\t\tthis._active_stroke_path.lineTo(x, y);\r\n\t\t}\r\n\t\tthis._current_position.x=x;\r\n\t\tthis._current_position.y=y;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number):void\r\n\t{\r\n\r\n\t\tif(this._active_fill_path!=null){\r\n\t\t\tthis._active_fill_path.moveTo(x, y);\r\n\t\t}\r\n\t\tif(this._active_stroke_path!=null){\r\n\t\t\tthis._active_stroke_path.moveTo(x, y);\r\n\t\t}\r\n\t\tthis._current_position.x=x;\r\n\t\tthis._current_position.y=y;\r\n\t}\r\n}",
    "import {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\r\nimport {RenderableEvent}\t\t\t\tfrom \"../events/RenderableEvent\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\r\nimport {ElementsEvent}\t\t\t\tfrom \"../events/ElementsEvent\";\r\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\r\nimport {Graphics}\t\t\t\t\t\tfrom \"../graphics/Graphics\";\r\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\n\r\n/**\r\n * Graphic wraps a Elements as a scene graph instantiation. A Graphic is owned by a Sprite object.\r\n *\r\n *\r\n * @see away.base.ElementsBase\r\n * @see away.entities.Sprite\r\n *\r\n * @class away.base.Graphic\r\n */\r\nexport class Graphic extends AssetBase implements IRenderable\r\n{\r\n\tpublic static _available:Array<Graphic> = new Array<Graphic>();\r\n\r\n\tpublic static assetType:string = \"[asset Graphic]\";\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tprivate _boxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tprivate _sphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid = true;\r\n\tprivate _style:Style;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _elements:ElementsBase;\r\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\r\n\tprivate _onInvalidateVerticesDelegate:(event:ElementsEvent) => void;\r\n\r\n\tpublic count:number;\r\n\r\n\tpublic offset:number;\r\n\t\r\n\tpublic parent:Graphics;\r\n\r\n\t/**\r\n\t * The Elements object which provides the geometry data for this Graphic.\r\n\t */\r\n\tpublic get  elements():ElementsBase\r\n\t{\r\n\t\treturn this._elements;\r\n\t}\r\n\r\n\tpublic set elements(value:ElementsBase)\r\n\t{\r\n\t\tif (this._elements == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._elements = value;\r\n\r\n\t\tthis.invalidateElements();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Graphic.assetType;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this.parent.animator;\r\n\t}\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleGraphic. If set to null, its parent Sprite's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this.parent.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\r\n\t */\r\n\tpublic get style():Style\r\n\t{\r\n\t\treturn this._style || this.parent.style;\r\n\t}\r\n\r\n\tpublic set style(value:Style)\r\n\t{\r\n\t\tif (this._style == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis._style = value;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis.invalidateSurface();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new Graphic object\r\n\t */\r\n\tconstructor(index:number, parent:Graphics, elements:ElementsBase, material:MaterialBase = null, style:Style = null, count:number = 0, offset:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\r\n\t\tthis._onInvalidateVerticesDelegate = (event:ElementsEvent) => this._onInvalidateVertices(event);\r\n\t\t\r\n\t\tthis._iIndex = index;\r\n\t\tthis.parent = parent;\r\n\t\tthis.elements = elements;\r\n\t\tthis.material = material;\r\n\t\tthis.style = style;\r\n\t\tthis.count = count;\r\n\t\tthis.offset = offset;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.parent.removeGraphic(this);\r\n\t\tthis.parent = null;\r\n\r\n\t\tGraphic._available.push(this);\r\n\t}\r\n\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tsuper.invalidate();\r\n\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\t}\r\n\t\r\n\tpublic invalidateElements():void\r\n\t{\r\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_ELEMENTS, this));\r\n\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\t}\r\n\r\n\tpublic invalidateSurface():void\r\n\t{\r\n\t\tthis.dispatchEvent(new RenderableEvent(RenderableEvent.INVALIDATE_SURFACE, this));\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic _iGetExplicitStyle():Style\r\n\t{\r\n\t\treturn this._style;\r\n\t}\r\n\r\n\tprivate _onInvalidateProperties(event:StyleEvent):void\r\n\t{\r\n\t\tthis.invalidateSurface();\r\n\t}\r\n\r\n\tprivate _onInvalidateVertices(event:ElementsEvent):void\r\n\t{\r\n\t\tif (event.attributesView != (<TriangleElements> event.target).positions)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tthis.invalidate();\r\n\t\t\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\t\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(pickingCollision:PickingCollision, pickingCollider:IPickingCollider):boolean\r\n\t{\r\n\t\treturn this._elements._iTestCollision(pickingCollider, this.material, pickingCollision, this.count, this.offset)\r\n\t}\r\n\r\n\r\n\tpublic applyTransformation(transform:Matrix3D):void\r\n\t{\r\n\t\tthis._elements.applyTransformation(transform, this.count, this.offset);\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tvar box:Box;\r\n\r\n\t\t//early out for box test\r\n\t\tif(!(box = this.getBoxBounds()).contains(x, y, z))\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._elements.hitTestPoint(x, y, z, box, this.count, this.offset);\r\n\t}\r\n\t\r\n\tpublic scale(scale:number):void\r\n\t{\r\n\t\tthis._elements.scale(scale, this.count, this.offset);\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1):void\r\n\t{\r\n\t\tthis._elements.scaleUV(scaleU, scaleV, this.count, this.offset);\r\n\t}\r\n\r\n\tpublic getBoxBounds():Box\r\n\t{\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\t\tthis._boxBounds = this._elements.getBoxBounds(this._boxBounds || (this._boxBounds = new Box()), this.count, this.offset);\r\n\t\t}\r\n\r\n\t\treturn this._boxBounds;\r\n\t}\r\n\r\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\r\n\t{\r\n\t\treturn this._elements.getSphereBounds(center, target, this.count, this.offset);\r\n\t}\r\n}",
    "/**\r\n * @class away.base.HitTestCache\r\n */\r\nexport class HitTestCache\r\n{\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic cells:Array<Array<number>> = new Array<Array<number>>();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic lastCollisionIndex:number = - 1;\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic divisions:number;\r\n}",
    "import {AttributesBuffer}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {Byte4Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\r\nimport {Float3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\r\nimport {Float1Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float1Attributes\";\r\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {ElementsUtils}\t\t\t\tfrom \"../utils/ElementsUtils\";\r\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\n\r\n/**\r\n * @class LineElements\r\n */\r\nexport class LineElements extends ElementsBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineElements]\";\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineElements.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoxBounds(target:Box = null):Box\r\n\t{\r\n\t\t//TODO bounding calculations for lines\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null):Sphere\r\n\t{\r\n\t\t//TODO bounding calculations for lines\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.clearVertices(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.clearVertices(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.invalidateVertices(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.invalidateVertices(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.clearVertices(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(colors, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = ElementsUtils.generateColors(this.indices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.invalidateVertices(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._thickness.dispose();\r\n\t\tthis._thickness = null;\r\n\r\n\t\tthis._colors.dispose();\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineElements\r\n\t{\r\n\t\tvar clone:LineElements = new LineElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision, count:number = 0, offset:number = 0):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollision, count || this._numVertices, offset);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {Float4Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float4Attributes\";\r\nimport {Float3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\r\nimport {Float2Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float2Attributes\";\r\nimport {Float1Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Float1Attributes\";\r\nimport {Short3Attributes}\t\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\r\nimport {Box}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Sphere}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {ElementsUtils}\t\t\t\tfrom \"../utils/ElementsUtils\";\r\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\n\r\n/**\r\n * @class away.base.TriangleElements\r\n */\r\nexport class TriangleElements extends ElementsBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleElements]\";\r\n\t\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:AttributesView;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\t//used for hittesting geometry\r\n\tpublic hitTestCache:Object = new Object();\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleElements.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per sprite. Only applicable to\r\n\t * skeleton animations that utilise more than one sprite object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\tif (!this._positions)\r\n\t\t\tthis.setPositions(new Float3Attributes(this._concatenatedBuffer));\r\n\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():AttributesView\r\n\t{\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\tpublic getBoxBounds(target:Box = null, count:number = 0, offset:number = 0):Box\r\n\t{\r\n\t\treturn ElementsUtils.getTriangleGraphicsBoxBounds(this.positions, target, count || this._numVertices, offset);\r\n\t}\r\n\r\n\tpublic getSphereBounds(center:Vector3D, target:Sphere = null, count:number = 0, offset:number = 0):Sphere\r\n\t{\r\n\t\treturn ElementsUtils.getTriangleGraphicsSphereBounds(this.positions, center, target, count || this._numVertices, offset);\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number, box:Box, count:number = 0, offset:number = 0):boolean\r\n\t{\r\n\t\treturn ElementsUtils.hitTestTriangleElements(x, y, 0, box, this, count || this._numVertices, offset);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(arrayBufferView:ArrayBufferView, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.clearVertices(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._positions)\r\n\t\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.clearVertices(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer); //positions cannot be null\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.invalidateVertices(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.invalidateVertices(this._tangents);\r\n\r\n\t\tthis.invalidateVertices(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.clearVertices(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.clearVertices(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._normals = ElementsUtils.generateNormals(this.indices, this.faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.invalidateVertices(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.clearVertices(this._tangents);\r\n\t\t\t\tthis._tangents = values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.clearVertices(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._tangents = ElementsUtils.generateTangents(this.indices, this.faceTangents, this.faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.invalidateVertices(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(arrayBufferView:ArrayBufferView, offset?:number);\r\n\tpublic setUVs(attributesView:AttributesView, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (values == this._uvs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.clearVertices(this._uvs);\r\n\t\t\tthis._uvs = values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._uvs)\r\n\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._uvs.set(values, offset);\r\n\t\t} else if (this._uvs) {\r\n\t\t\tthis.clearVertices(this._uvs);\r\n\t\t\tthis._uvs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.invalidateVertices(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.clearVertices(this._jointIndices);\r\n\t\t\tthis._jointIndices = values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.clearVertices(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.invalidateVertices(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0):void\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.clearVertices(this._jointWeights);\r\n\t\t\tthis._jointWeights = values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.clearVertices(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.invalidateVertices(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this._positions) {\r\n\t\t\tthis._positions.dispose();\r\n\t\t\tthis._positions = null;\r\n\t\t}\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleElements.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0):void\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.invalidateVertices(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.invalidateVertices(this._tangents);\r\n\t}\r\n\r\n\tpublic copyTo(elements:TriangleElements):void\r\n\t{\r\n\t\tsuper.copyTo(elements);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tvar autoDeriveNormals:boolean = this._autoDeriveNormals;\r\n\t\tvar autoDeriveTangents:boolean = this._autoDeriveTangents;\r\n\t\telements.autoDeriveNormals = this._autoDeriveNormals = false;\r\n\t\telements.autoDeriveTangents = this._autoDeriveTangents = false;\r\n\r\n\t\telements.setPositions(this.positions.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\telements.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\telements.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\telements.setUVs(this.uvs.clone());\r\n\r\n\t\telements.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\telements.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\telements.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\telements.autoDeriveNormals = this._autoDeriveNormals = autoDeriveNormals;\r\n\t\telements.autoDeriveTangents = this._autoDeriveTangents = autoDeriveTangents;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleElements\r\n\t{\r\n\t\tvar clone:TriangleElements = new TriangleElements(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tthis.copyTo(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1, count:number = 0, offset:number = 0):void\r\n\t{\r\n\t\tif (this.uvs) // only scale if uvs exist\r\n\t\t\tElementsUtils.scale(scaleU, scaleV, 0, this.uvs, count || this._numVertices, offset);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number, count:number = 0, offset:number = 0):void\r\n\t{\r\n\t\tElementsUtils.scale(scale, scale, scale, this.positions, count || this._numVertices, offset);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D, count:number = 0, offset:number = 0):void\r\n\t{\r\n\t\tElementsUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, count || this._numVertices, offset);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents():void\r\n\t{\r\n\t\tthis._faceTangents = ElementsUtils.generateFaceTangents(this.indices, this.positions, this.uvs || this.positions, this._faceTangents, this.numElements);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals():void\r\n\t{\r\n\t\tthis._faceNormals = ElementsUtils.generateFaceNormals(this.indices, this.positions, this._faceNormals, this.numElements);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollision:PickingCollision, count:number = 0, offset:number = 0):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollision, count || this._numVertices, offset);\r\n\t}\r\n}",
    "export {ElementsBase}\t\t\t\t\tfrom \"./graphics/ElementsBase\";\r\nexport {ElementsType}\t\t\t\t\tfrom \"./graphics/ElementsType\";\r\nexport {Graphic}\t\t\t\t\t\t\tfrom \"./graphics/Graphic\";\r\nexport {Graphics}\t\t\t\t\t\tfrom \"./graphics/Graphics\";\r\nexport {LineElements}\t\t\t\t\tfrom \"./graphics/LineElements\";\r\nexport {TriangleElements}\t\t\t\tfrom \"./graphics/TriangleElements\";",
    "import {TesselatedFontTable}\t\t\t\t\tfrom \"../text/TesselatedFontTable\";\r\n\r\n\r\nexport class DefaultFontManager\r\n{\r\n\tprivate static _default_font_table:TesselatedFontTable;\r\n\r\n\tpublic static getDefaultFontTable():TesselatedFontTable\r\n\t{\r\n\t\tif(DefaultFontManager._default_font_table==null){\r\n\t\t\tDefaultFontManager.createDefaultFontTable();\r\n\t\t}\r\n\t\treturn DefaultFontManager._default_font_table;\r\n\t}\r\n\r\n\r\n\tprivate static createDefaultFontTable():void\r\n\t{\r\n\t\t/*\r\n\t\tvar allchars=[];\r\n\t\t//allchars[cnt1++] = ['33',[0,0,226,67,0,192,11,68,127,127,0,0,0,128,177,67,0,80,137,68,127,127,0,0,0,0,212,67,0,192,204,68,127,127,0,0,0,0,212,67,0,192,204,68,127,127,0,0,0,128,177,67,0,80,137,68,127,127,0,0,0,0,129,67,0,192,204,68,127,127,0,0,0,0,129,67,0,192,204,68,127,127,0,0,0,128,177,67,0,80,137,68,127,127,0,0,0,0,100,67,0,192,11,68,127,127,0,0,0,0,100,67,0,192,11,68,127,127,0,0,0,128,177,67,0,80,137,68,127,127,0,0,0,0,226,67,0,192,11,68,127,127,0,0,0,0,221,67,0,0,0,69,127,127,0,0,0,0,170,67,0,208,242,68,127,127,0,0,0,0,110,67,0,0,0,69,127,127,0,0,0,0,110,67,0,0,0,69,127,127,0,0,0,0,170,67,0,208,242,68,127,127,0,0,0,0,110,67,0,160,229,68,127,127,0,0,0,0,110,67,0,160,229,68,127,127,0,0,0,0,170,67,0,208,242,68,127,127,0,0,0,0,221,67,0,160,229,68,127,127,0,0,0,0,221,67,0,160,229,68,127,127,0,0,0,0,170,67,0,208,242,68,127,127,0,0,0,0,221,67,0,0,0,69,127,127]]\r\n\t\tvar i:number=0;\r\n\t\tfor(i=0; i<cnt1;i++){\r\n\t\t\tvar vertexBuffer:AttributesBuffer = new AttributesBuffer(20, allchars[i][1].length / 20);\r\n\t\t\tvertexBuffer.bufferView = new Uint8Array(<ArrayBuffer> allchars[i][1]);\r\n\r\n\t\t\tvar curve_elements:TriangleElements = new TriangleElements(vertexBuffer);\r\n\r\n\t\t\tcurve_elements.setPositions(new Float2Attributes(vertexBuffer));\r\n\t\t\tcurve_elements.setCustomAttributes(\"curves\", new Float3Attributes(vertexBuffer));\r\n\r\n\t\t\t//add UVs if they exist in the data\r\n\t\t\tif (attr_count == 28)\r\n\t\t\t\tcurve_elements.setUVs(new Float2Attributes(vertexBuffer));\r\n\r\n\t\t\tnew_font_style.setChar(font_style_char.toString(), curve_elements, char_width);\r\n\t\t\tDefaultFontManager._default_font_table = new TesselatedFontTable();\r\n\t\t}\r\n\t\t*/\r\n\t\t//DefaultFontManager._default_font_table.\r\n\t}\r\n\r\n}",
    "import {Sampler2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\r\nimport {BitmapImage2D}\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport {BitmapImageCube}\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImageCube\";\r\n\r\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\r\nimport {LineElements}\t\t\t\t\tfrom \"../graphics/LineElements\";\r\nimport {Skybox}\t\t\t\t\t\tfrom \"../display/Skybox\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {BasicMaterial}\t\t\t\tfrom \"../materials/BasicMaterial\";\r\nimport {Single2DTexture}\t\t\t\tfrom \"../textures/Single2DTexture\";\r\nimport {SingleCubeTexture}\t\t\tfrom \"../textures/SingleCubeTexture\";\r\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\r\nimport {Graphic}\t\t\t\t\t\tfrom \"../graphics/Graphic\";\r\n\r\nexport class DefaultMaterialManager\r\n{\r\n\tprivate static _defaultSampler2D:Sampler2D;\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderable:IRenderable = null):MaterialBase\r\n\t{\r\n\t\tif (renderable != null && renderable.isAsset(Graphic) && (<Graphic> renderable).elements.isAsset(LineElements)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderable:IRenderable = null):TextureBase\r\n\t{\r\n\t\tif (renderable != null && renderable.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tpublic static getDefaultImage2D():BitmapImage2D\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\r\n\r\n\t\treturn DefaultMaterialManager._defaultBitmapImage2D;\r\n\t}\r\n\r\n\tpublic static getDefaultImageCube():BitmapImageCube\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createDefaultImageCube();\r\n\r\n\t\treturn DefaultMaterialManager._defaultBitmapImageCube;\r\n\t}\r\n\r\n\tpublic static getDefaultSampler():Sampler2D\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultSampler2D)\r\n\t\t\tDefaultMaterialManager.createDefaultSampler2D();\r\n\r\n\t\treturn DefaultMaterialManager._defaultSampler2D;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture():void\r\n\t{\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture();\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture():void\r\n\t{\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture();\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultImageCube():void\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createDefaultImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createDefaultImage2D():void\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++)\r\n\t\t\tfor (j = 0; j < 8; j++)\r\n\t\t\t\tif ((j & 1) ^ (i & 1))\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial():void\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.texture = DefaultMaterialManager._defaultTexture;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial():void\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.texture = DefaultMaterialManager._defaultCubeTexture;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial():void\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial(0xFFFFFF);\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultSampler2D():void\r\n\t{\r\n\t\tDefaultMaterialManager._defaultSampler2D = new Sampler2D();\r\n\t}\r\n\r\n}",
    "import {DisplayObject}\t\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {MovieClip}\t\t\t\t\t\tfrom \"../display/MovieClip\";\r\n\r\nexport class FrameScriptManager\r\n{\r\n\t// FrameScript debugging:\r\n\t// the first line of a FrameScript should be a comment that represents the functions unique name\r\n\t// the exporter creates a js file, containing a object that has the framescripts functions set as properties according to the unique names\r\n\t// this object can be set as \"frameScriptDebug\" in order to enable debug mode\r\n\r\n\r\n\tpublic static frameScriptDebug:Object = undefined;\r\n\r\n\t//queue of objects for disposal\r\n\tprivate static _queued_dispose:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n\t// queues pass1 of scripts.\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\r\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\r\n\r\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\r\n\r\n\tprivate static _intervalID:number=0;\r\n\tpublic static setInterval(func:any):number\r\n\t{\r\n\t\tthis._intervalID++;\r\n\t\tthis._active_intervals[this._intervalID]=func;\r\n\t\treturn this._intervalID\r\n\t}\r\n\r\n\tpublic static clearInterval(id:number):void\r\n\t{\r\n\t\tdelete this._active_intervals[id];\r\n\t}\r\n\r\n\tpublic static execute_intervals():void\r\n\t{\r\n\t\tfor(var key in this._active_intervals){\r\n\t\t\tthis._active_intervals[key].call();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static add_child_to_dispose(child:DisplayObject):void\r\n\t{\r\n\t\tthis._queued_dispose.push(child);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2.length = 0;\r\n\t\tthis._queued_scripts_pass2.length = 0;\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs_pass2.push(mc);\r\n\t\tthis._queued_scripts_pass2.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\r\n\t\t\treturn;\r\n\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2.length = 0;\r\n\t\tthis._queued_scripts_pass2.length = 0;\r\n\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif(mc.scene!=null) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t//\ttry {\r\n\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t//\t}\r\n\t\t\t/*\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs.length = 0;\r\n\t\tthis._queued_scripts.length = 0;\r\n\t}\r\n\r\n\tpublic static execute_dispose():void\r\n\t{\r\n\t\tvar len:number = this._queued_dispose.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._queued_dispose[i].dispose();\r\n\r\n\t\tthis._queued_dispose.length = 0;\r\n\t}\r\n}\r\nexport default FrameScriptManager;",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {TouchPoint}\t\t\t\t\tfrom \"../base/TouchPoint\";\r\nimport {View}\t\t\t\t\t\t\tfrom \"../View\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\nimport {MouseEvent}\t\t\t\t\tfrom \"../events/MouseEvent\";\r\nimport {FrameScriptManager}\t\t\tfrom \"../managers/FrameScriptManager\";\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nexport class MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollision:PickingCollision;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollision;\r\n\tprivate _queuedEvents:Array<MouseEvent> = new Array<MouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent;\r\n\r\n\tprivate _mouseUp:MouseEvent = new MouseEvent(MouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:MouseEvent = new MouseEvent(MouseEvent.CLICK);\r\n\tprivate _mouseOut:MouseEvent = new MouseEvent(MouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:MouseEvent = new MouseEvent(MouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:MouseEvent = new MouseEvent(MouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:MouseEvent = new MouseEvent(MouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:MouseEvent = new MouseEvent(MouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:MouseEvent = new MouseEvent(MouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event) => void;\r\n\tprivate onDoubleClickDelegate:(event) => void;\r\n\tprivate onMouseDownDelegate:(event) => void;\r\n\tprivate onMouseMoveDelegate:(event) => void;\r\n\tprivate onMouseUpDelegate:(event) => void;\r\n\tprivate onMouseWheelDelegate:(event) => void;\r\n\tprivate onMouseOverDelegate:(event) => void;\r\n\tprivate onMouseOutDelegate:(event) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean):void\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollision != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollision)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\t if (forceMouseMove && this._iCollision)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:MouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = <DisplayObject> event.entity;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\r\n\t\t\t// if nothing is queued, the function will return directly anyway\r\n\t\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollision;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View):void\r\n\t{\r\n\t\tif(view && view.htmlElement) {\r\n\t\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\t\t\tthis._viewLookup.push(view);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unregisterView(view:View):void\r\n\t{\r\n\t\tif(view && view.htmlElement) {\r\n\t\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onMouseMoveDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t\t}\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:MouseEvent, sourceEvent, collision:PickingCollision = null):void\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = (sourceEvent.clientX != null)? sourceEvent.clientX : sourceEvent.changedTouches[0].clientX;\r\n\t\t\tevent.screenY = (sourceEvent.clientY != null)? sourceEvent.clientY : sourceEvent.changedTouches[0].clientY;\r\n\t\t}\r\n\r\n\t\tif (collision == null)\r\n\t\t\tcollision = this._iCollision;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collision) {\r\n\t\t\t// Object.\r\n\t\t\tevent.entity = collision.entity;\r\n\t\t\tevent.renderable = collision.renderable;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collision.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.position = collision.position? collision.position.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.normal = collision.normal? collision.normal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.elementIndex = collision.elementIndex;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.entity = null;\r\n\t\t\tevent.position = this._nullVector;\r\n\t\t\tevent.normal = this._nullVector;\r\n\t\t\tevent.elementIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event):void\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollision)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event):void\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollision)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event):void\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollision)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event):void\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollision)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event):void\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollision)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event):void\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollision)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event):void\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollision)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event):void\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollision)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event):void\r\n\t{\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tview._pTouchPoints.length = 0;\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\r\n\t\t\tif (event.touches) {\r\n\t\t\t\tvar touch;\r\n\t\t\t\tvar len:number = event.touches.length;\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\ttouch = event.touches[i];\r\n\t\t\t\t\tview._pTouchPoints.push(new TouchPoint(touch.clientX + bounds.left, touch.clientY + bounds.top, touch.identifier));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._iUpdateDirty)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollision)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {View}\t\t\t\t\t\t\tfrom \"../View\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\nimport {TouchEvent}\t\t\t\tfrom \"../events/TouchEvent\";\r\n\r\nexport class TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollision:PickingCollision;\r\n\tprivate _previousCollidingObject:PickingCollision;\r\n\tpublic static _iCollisionFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<TouchEvent> = new Array<TouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:TouchEvent = new TouchEvent(TouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:TouchEvent = new TouchEvent(TouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:TouchEvent = new TouchEvent(TouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:TouchEvent = new TouchEvent(TouchEvent.TOUCH_END);\r\n\tprivate _touchOver:TouchEvent = new TouchEvent(TouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event) => void;\r\n\tprivate onTouchMoveDelegate:(event) => void;\r\n\tprivate onTouchEndDelegate:(event) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollisionFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean):void\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollision = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollisionFromTouchId[ this._touchPoint.id ] = this._iCollision;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean):void\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollision != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollision)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollision, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollision)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollision, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:TouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = <DisplayObject> event.entity;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollisionFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View):void\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View):void\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:TouchEvent, sourceEvent, collider:PickingCollision, touch:TouchPoint):void\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.entity = collider.entity;\r\n\t\t\tevent.renderable = collider.renderable;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.position = collider.position? collider.position.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.normal = collider.normal? collider.normal.clone() : null;\r\n\t\t\t// ElementsIndex.\r\n\t\t\tevent.elementIndex = collider.elementIndex;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.entity = null;\r\n\t\t\tevent.position = this._nullVector;\r\n\t\t\tevent.normal = this._nullVector;\r\n\t\t\tevent.elementIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event):void\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\r\n\t\tif (this._iCollision)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollision, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event):void\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollision)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollision, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event):void\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollision = TouchManager._iCollisionFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollision)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollision, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev) => any;\r\n\tontouchmove: (ev) => any;\r\n\tontouchend: (ev) => any;\r\n\tontouchcancel: (ev) => any;\r\n\taddEventListener(type: string, listener: (ev) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev) => any;\r\n\tontouchmove: (ev) => any;\r\n\tontouchend: (ev) => any;\r\n\tontouchcancel: (ev) => any;\r\n\taddEventListener(type: string, listener: (ev) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev) => any;\r\n\tontouchmove: (ev) => any;\r\n\tontouchend: (ev) => any;\r\n\tontouchcancel: (ev) => any;\r\n\taddEventListener(type: string, listener: (ev) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev) => any;\r\ndeclare var ontouchmove: (ev) => any;\r\ndeclare var ontouchend: (ev) => any;\r\ndeclare var ontouchcancel: (ev) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev) => any, useCapture?: boolean): void;\r\n\r\n",
    "export {DefaultMaterialManager}\t\t\tfrom \"./managers/DefaultMaterialManager\";\r\nexport {FrameScriptManager}\t\t\t\tfrom \"./managers/FrameScriptManager\";\r\nexport {MouseManager}\t\t\t\t\tfrom \"./managers/MouseManager\";\r\nexport {TouchManager}\t\t\t\t\tfrom \"./managers/TouchManager\";",
    "import {Image2D}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\r\n\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {Single2DTexture}\t\t\t\tfrom \"../textures/Single2DTexture\";\r\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nexport class BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n    private _texture:TextureBase;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(image?:Image2D, alpha?:number);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(imageColor:any = null, alpha:number = 1)\r\n\t{\r\n\t\tsuper(imageColor, alpha);\r\n\r\n        //set a texture if an image is present\r\n        if (imageColor instanceof Image2D)\r\n            this.texture = new Single2DTexture();\r\n\t}\r\n\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n\r\n        this._preserveAlpha = value;\r\n\r\n        this.invalidate();\r\n    }\r\n\r\n\r\n    /**\r\n     * The texture object to use for the albedo colour.\r\n     */\r\n    public get texture():TextureBase\r\n    {\r\n        return this._texture;\r\n    }\r\n\r\n    public set texture(value:TextureBase)\r\n    {\r\n        if (this._texture == value)\r\n            return;\r\n\r\n        if (this._texture)\r\n            this.removeTexture(this._texture);\r\n\r\n        this._texture = value;\r\n\r\n        if (this._texture)\r\n            this.addTexture(this._texture);\r\n\r\n        this.invalidateTexture();\r\n    }\r\n}",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nexport class LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}",
    "import {BlendMode}\t\t\t\t\tfrom \"awayjs-core/lib/image/BlendMode\";\r\nimport {ImageBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\r\nimport {ColorTransform}\t\t\t\tfrom \"awayjs-core/lib/geom/ColorTransform\";\r\nimport {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {IAnimationSet}\t\t\t\tfrom \"../animators/IAnimationSet\";\r\nimport {IAnimator}\t\t\t\t\tfrom \"../animators/IAnimator\";\r\nimport {ISurface}\t\t\t\t\t\tfrom \"../base/ISurface\";\r\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\r\nimport {SurfaceEvent}\t\t\t\t\tfrom \"../events/SurfaceEvent\";\r\nimport {LightPickerBase}\t\t\t\tfrom \"../materials/lightpickers/LightPickerBase\";\r\nimport {TextureBase}\t\t\t\t\tfrom \"../textures/TextureBase\";\r\nimport {Style}\t\t\t\t\t\tfrom \"../base/Style\";\r\nimport {StyleEvent}\t\t\t\t\tfrom \"../events/StyleEvent\";\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nexport class MaterialBase extends AssetBase implements ISurface\r\n{\r\n\tprivate _textures:Array<TextureBase> = new Array<TextureBase>();\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\tprivate _onInvalidatePropertiesDelegate:(event:StyleEvent) => void;\r\n\tprivate _style:Style = new Style();\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _imageRect:boolean = false;\r\n\tprivate _curves:boolean = false;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tprivate _onLightChangeDelegate:(event:AssetEvent) => void;\r\n\tprivate _onTextureInvalidateDelegate:(event:AssetEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor(image?:ImageBase, alpha?:number);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(imageColor:any = null, alpha:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onInvalidatePropertiesDelegate = (event:StyleEvent) => this._onInvalidateProperties(event);\r\n\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tif (imageColor instanceof ImageBase)\r\n\t\t\tthis._style.image = <ImageBase> imageColor;\r\n\t\telse if (imageColor)\r\n\t\t\tthis._style.color = Number(imageColor);\r\n\r\n\t\tthis.alpha = alpha;\r\n\r\n\t\tthis._onLightChangeDelegate = (event:AssetEvent) => this.onLightsChange(event);\r\n\t\tthis._onTextureInvalidateDelegate = (event:AssetEvent) => this.onTextureInvalidate(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(AssetEvent.INVALIDATE, this._onLightChangeDelegate);\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether material should use curves. Defaults to false.\r\n\t */\r\n\tpublic get curves():boolean\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\tpublic set curves(value:boolean)\r\n\t{\r\n\t\tif (this._curves == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._curves = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use an atlas. Defaults to false.\r\n\t */\r\n\tpublic get imageRect():boolean\r\n\t{\r\n\t\treturn this._imageRect;\r\n\t}\r\n\r\n\tpublic set imageRect(value:boolean)\r\n\t{\r\n\t\tif (this._imageRect == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._imageRect = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The style used to render the current TriangleGraphic. If set to null, its parent Sprite's style will be used instead.\r\n\t */\r\n\tpublic get style():Style\r\n\t{\r\n\t\treturn this._style;\r\n\t}\r\n\r\n\tpublic set style(value:Style)\r\n\t{\r\n\t\tif (this._style == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.removeEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis._style = value;\r\n\r\n\t\tif (this._style)\r\n\t\t\tthis._style.addEventListener(StyleEvent.INVALIDATE_PROPERTIES, this._onInvalidatePropertiesDelegate);\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUseColorTransform = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderable as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderable that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderable):void\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.invalidateSurface();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderable as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderable):void\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.invalidateSurface();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderables that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderable>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic getNumTextures():number\r\n\t{\r\n\t\treturn this._textures.length;\r\n\t}\r\n\r\n\tpublic getTextureAt(index:number):TextureBase\r\n\t{\r\n\t\treturn this._textures[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePasses():void\r\n\t{\r\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_PASSES, this));\r\n\t}\r\n\r\n\tprivate invalidateAnimation():void\r\n\t{\r\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_ANIMATION, this));\r\n\t}\r\n\r\n\tpublic invalidateSurfaces():void\r\n\t{\r\n\t\tvar len:number = this._owners.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._owners[i].invalidateSurface();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:AssetEvent):void\r\n\t{\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\tpublic invalidateTexture():void\r\n\t{\r\n\t\tthis.dispatchEvent(new SurfaceEvent(SurfaceEvent.INVALIDATE_TEXTURE, this));\r\n\t}\r\n\r\n\tpublic addTextureAt(texture:TextureBase, index:number):void\r\n\t{\r\n\t\tvar i:number = this._textures.indexOf(texture);\r\n\r\n\t\tif (i == index)\r\n\t\t\treturn;\r\n\t\telse if (i != -1)\r\n\t\t\tthis._textures.splice(i, 1);\r\n\r\n\t\tthis._textures.splice(index, 0, texture);\r\n\r\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n\r\n\t\tthis.onTextureInvalidate();\r\n\t}\r\n\r\n\tpublic addTexture(texture:TextureBase):void\r\n\t{\r\n\t\tif (this._textures.indexOf(texture) != -1)\r\n\t\t\treturn;\r\n\r\n\t\tthis._textures.push(texture);\r\n\r\n\t\ttexture.addEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n\r\n\t\tthis.onTextureInvalidate();\r\n\t}\r\n\t\r\n\tpublic removeTexture(texture:TextureBase):void\r\n\t{\r\n\t\tthis._textures.splice(this._textures.indexOf(texture), 1);\r\n\r\n\t\ttexture.removeEventListener(AssetEvent.INVALIDATE, this._onTextureInvalidateDelegate);\r\n\r\n\t\tthis.onTextureInvalidate();\r\n\t}\r\n\t\r\n\tprivate onTextureInvalidate(event:AssetEvent = null):void\r\n\t{\r\n\t\tthis.invalidatePasses();\r\n\r\n\t\t//invalidate renderables for number of images getter (in case it has changed)\r\n\t\tthis.invalidateSurfaces();\r\n\t}\r\n\r\n\tprivate _onInvalidateProperties(event:StyleEvent):void\r\n\t{\r\n\t\tthis.invalidatePasses();\r\n\t}\r\n}",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../../display/IEntity\";\r\nimport {LightBase}\t\t\t\t\tfrom \"../../display/LightBase\";\r\nimport {DirectionalLight}\t\t\t\tfrom \"../../display/DirectionalLight\";\r\nimport {LightProbe}\t\t\t\t\tfrom \"../../display/LightProbe\";\r\nimport {PointLight}\t\t\t\t\tfrom \"../../display/PointLight\";\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nexport class LightPickerBase extends AssetBase\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(entity:IEntity):void\r\n\t{\r\n\t\tthis.updateProbeWeights(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(entity:IEntity):void\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleGraphic. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = entity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\n\r\nimport {LightBase}\t\t\t\t\tfrom \"../../display/LightBase\";\r\nimport {DirectionalLight}\t\t\t\tfrom \"../../display/DirectionalLight\";\r\nimport {LightProbe}\t\t\t\t\tfrom \"../../display/LightProbe\";\r\nimport {PointLight}\t\t\t\t\tfrom \"../../display/PointLight\";\r\nimport {LightEvent}\t\t\t\t\tfrom \"../../events/LightEvent\";\r\nimport {LightPickerBase}\t\t\t\tfrom \"../../materials/lightpickers/LightPickerBase\";\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nexport class StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:(event:LightEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights():Array<any>\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.shadowsEnabled)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.shadowsEnabled)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners():void\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent):void\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight):void\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.shadowsEnabled) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight):void\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.shadowsEnabled) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}",
    "import {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\r\nimport {Rectangle}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\r\nimport {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\nimport {FreeMatrixProjection}\t\t\tfrom \"awayjs-core/lib/projections/FreeMatrixProjection\";\r\nimport {IProjection}\t\t\t\t\tfrom \"awayjs-core/lib/projections/IProjection\";\r\n\r\nimport {IRenderer}\t\t\t\t\tfrom \"../../IRenderer\";\r\nimport {Scene}\t\t\t\t\t\tfrom \"../../display/Scene\";\r\nimport {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\r\nimport {DirectionalShadowMapper}\t\tfrom \"../../materials/shadowmappers/DirectionalShadowMapper\";\r\nimport {Single2DTexture}\t\t\t\tfrom \"../../textures/Single2DTexture\";\r\n\r\nexport class CascadeShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number):void\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init():void\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/):void\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects():void\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new AssetEvent(AssetEvent.INVALIDATE, this));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer):void\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\trenderer.cullPlanes = this._pCullPlanes;\r\n\t\trenderer._iRenderCascades(this._pOverallDepthCamera, scene, target.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects():void\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(camera:Camera):void\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = camera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(camera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number):void\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}",
    "import {ImageCube}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {PerspectiveProjection}\t\tfrom \"awayjs-core/lib/projections/PerspectiveProjection\";\r\n\r\nimport {Scene}\t\t\t\t\t\tfrom \"../../display/Scene\";\r\nimport {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\r\nimport {PointLight}\t\t\t\t\tfrom \"../../display/PointLight\";\r\nimport {ShadowMapperBase}\t\t\t\tfrom \"../../materials/shadowmappers/ShadowMapperBase\";\r\nimport {IRenderer}\t\t\t\t\tfrom \"../../IRenderer\";\r\nimport {SingleCubeTexture}\t\t\tfrom \"../../textures/SingleCubeTexture\";\r\n\r\nexport class CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras():void\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number):void\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(camera:Camera):void\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.moveTo(pos.x, pos.y, pos.z);\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(scene:Scene, target:SingleCubeTexture, renderer:IRenderer):void\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tif (this._needsRender[i])\r\n\t\t\t\trenderer._iRender(this._depthCameras[i], scene, target.imageCube, null, i)\r\n\t}\r\n}",
    "import {Image2D}\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\r\nimport {Matrix3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Matrix3DUtils}\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\r\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {FreeMatrixProjection}\t\t\tfrom \"awayjs-core/lib/projections/FreeMatrixProjection\";\r\n\r\nimport {Scene}\t\t\t\t\t\tfrom \"../../display/Scene\";\r\nimport {IRenderer}\t\t\t\t\tfrom \"../../IRenderer\";\r\nimport {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\r\nimport {DirectionalLight}\t\t\t\tfrom \"../../display/DirectionalLight\";\r\nimport {ShadowMapperBase}\t\t\t\tfrom \"../../materials/shadowmappers/ShadowMapperBase\";\r\nimport {Single2DTexture}\t\t\t\tfrom \"../../textures/Single2DTexture\";\r\n\r\nexport class DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture):void\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.image2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(scene:Scene, target:Single2DTexture, renderer:IRenderer):void\r\n\t{\r\n\t\trenderer.cullPlanes = this._pCullPlanes;\r\n\t\trenderer._iRender(this._pOverallDepthCamera, scene, target.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(camera:Camera):void\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = camera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(camera:Camera):void\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, camera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(camera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(camera:Camera, corners:Array<number>, matrix:Matrix3D):void\r\n\t{\r\n\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((camera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((camera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((camera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(camera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}",
    "import {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\r\nimport {DirectionalShadowMapper}\t\tfrom \"../../materials/shadowmappers/DirectionalShadowMapper\";\r\n\r\nexport class NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(camera:Camera):void\r\n\t{\r\n\t\tvar corners:Array<number> = camera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(camera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}",
    "import {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {Scene}\t\t\t\t\t\tfrom \"../../display/Scene\";\r\nimport {LightBase}\t\t\t\t\tfrom \"../../display/LightBase\";\r\nimport {IRenderer}\t\t\t\t\tfrom \"../../IRenderer\";\r\nimport {Camera}\t\t\t\t\t\tfrom \"../../display/Camera\";\r\nimport {TextureBase}\t\t\t\t\tfrom \"../../textures/TextureBase\";\r\n\r\nexport class ShadowMapperBase extends AssetBase\r\n{\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows():void\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase):void\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(camera:Camera, scene:Scene, renderer:IRenderer):void\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(scene, this._depthMap, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(camera:Camera):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(scene:Scene, target:TextureBase, renderer:IRenderer):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value):void\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}",
    "export {LightPickerBase}\t\t\t\t\tfrom \"./materials/lightpickers/LightPickerBase\";\r\nexport {StaticLightPicker}\t\t\t\tfrom \"./materials/lightpickers/StaticLightPicker\";\r\nexport {CascadeShadowMapper}\t\t\t\tfrom \"./materials/shadowmappers/CascadeShadowMapper\";\r\nexport {CubeMapShadowMapper}\t\t\t\tfrom \"./materials/shadowmappers/CubeMapShadowMapper\";\r\nexport {DirectionalShadowMapper}\t\t\tfrom \"./materials/shadowmappers/DirectionalShadowMapper\";\r\nexport {NearDirectionalShadowMapper}\t\tfrom \"./materials/shadowmappers/NearDirectionalShadowMapper\";\r\nexport {ShadowMapperBase}\t\t\t\tfrom \"./materials/shadowmappers/ShadowMapperBase\";\r\nexport {BasicMaterial}\t\t\t\t\tfrom \"./materials/BasicMaterial\";\r\nexport {LightSources}\t\t\t\t\tfrom \"./materials/LightSources\";\r\nexport {MaterialBase}\t\t\t\t\tfrom \"./materials/MaterialBase\";",
    "import {NodeBase}\t\t\t\t\t\tfrom \"../partition/NodeBase\";\r\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\r\n\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nexport class BasicPartition extends PartitionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rootNode = new NodeBase();\r\n\t}\r\n}",
    "import {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\r\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nexport class CameraNode extends EntityNode\r\n{\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug sprite, then sure accept that\r\n\t}\r\n}",
    "import {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\r\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nexport class DirectionalLightNode extends EntityNode\r\n{\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._displayObject);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\nimport {IAbstractionPool}\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\r\nimport {AbstractionBase}\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\r\n\r\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {AxisAlignedBoundingBox}\t\tfrom \"../bounds/AxisAlignedBoundingBox\";\r\nimport {BoundingSphere}\t\t\t\tfrom \"../bounds/BoundingSphere\";\r\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\r\nimport {BoundsType}\t\t\t\t\tfrom \"../bounds/BoundsType\";\r\nimport {NullBounds}\t\t\t\t\tfrom \"../bounds/NullBounds\";\r\nimport {SceneGraphNode}\t\t\t\tfrom \"../partition/SceneGraphNode\";\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {DisplayObjectEvent}\t\t\tfrom \"../events/DisplayObjectEvent\";\r\nimport {INode}\t\t\t\t\t\tfrom \"../partition/INode\";\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nexport class DisplayObjectNode extends AbstractionBase implements INode\r\n{\r\n\tpublic numEntities:number = 0;\r\n\r\n\tpublic isSceneGraphNode:boolean = false;\r\n\r\n\tpublic _iUpdateQueueNext:DisplayObjectNode;\r\n\r\n\tprivate _onInvalidatePartitionBoundsDelegate:(event:DisplayObjectEvent) => void;\r\n\t\r\n\tpublic _displayObject:DisplayObject;\r\n\tprivate _boundsDirty:boolean = true;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\tpublic parent:SceneGraphNode;\r\n\r\n\tprivate _boundsType:string;\r\n\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._displayObject.debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get bounds():BoundingVolumeBase\r\n\t{\r\n\t\tif (this._boundsDirty)\r\n\t\t\tthis._updateBounds();\r\n\r\n\t\treturn this._bounds;\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject, pool:IAbstractionPool)\r\n\t{\r\n\t\tsuper(displayObject, pool);\r\n\r\n\t\tthis._onInvalidatePartitionBoundsDelegate = (event:DisplayObjectEvent) => this._onInvalidatePartitionBounds(event);\r\n\r\n\t\tthis._displayObject = displayObject;\r\n\t\tthis._displayObject.addEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\r\n\r\n\t\tthis._boundsType = this._displayObject.boundsType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this._displayObject.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isMask():boolean\r\n\t{\r\n\t\treturn this._displayObject.maskMode;\r\n\t}\r\n\r\n\tpublic onClear(event:AssetEvent):void\r\n\t{\r\n\t\tsuper.onClear(event);\r\n\r\n\t\tthis._displayObject.removeEventListener(DisplayObjectEvent.INVALIDATE_PARTITION_BOUNDS, this._onInvalidatePartitionBoundsDelegate);\r\n\t\tthis._displayObject = null;\r\n\r\n\t\tif (this._bounds)\r\n\t\t\tthis._bounds.dispose();\r\n\r\n\t\tthis._bounds = null;\r\n\t}\r\n\r\n\tpublic onInvalidate(event:AssetEvent):void\r\n\t{\r\n\t\tsuper.onInvalidate(event);\r\n\r\n\t\tif (this._boundsType != this._displayObject.boundsType) {\r\n\t\t\tthis._boundsType = this._displayObject.boundsType;\r\n\t\t\tthis._boundsDirty = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isRenderable():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\t// do nothing here\r\n\t}\r\n\r\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent):void\r\n\t{\r\n\t\t// do nothing here\r\n\t}\r\n\r\n\tprivate _updateBounds():void\r\n\t{\r\n\t\tif (this._bounds)\r\n\t\t\tthis._bounds.dispose();\r\n\r\n\t\tif (this._boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._displayObject);\r\n\t\telse if (this._boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._displayObject);\r\n\t\telse if (this._boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis._boundsDirty = false;\r\n\t}\r\n}",
    "import {AssetEvent}\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\r\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {DisplayObjectEvent}\t\t\tfrom \"../events/DisplayObjectEvent\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\nimport {DisplayObjectNode}\t\t\tfrom \"../partition/DisplayObjectNode\";\r\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nexport class EntityNode extends DisplayObjectNode\r\n{\r\n\tpublic numEntities:number = 1;\r\n\r\n\tprivate _partition:PartitionBase;\r\n\tprivate _maskPosition:Vector3D = new Vector3D();\r\n\r\n\r\n\tconstructor(displayObject:DisplayObject, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(displayObject, partition);\r\n\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\tpublic onClear(event:AssetEvent):void\r\n\t{\r\n\t\tsuper.onClear(event);\r\n\r\n\t\tthis._partition = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._displayObject._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(globalRayPosition:Vector3D, globalRayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._displayObject._iIsVisible() || !this.isIntersectingMasks(globalRayPosition, globalRayDirection, this._displayObject._iAssignedMasks()))\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollision:PickingCollision = this._displayObject._iPickingCollision;\r\n\t\tpickingCollision.rayPosition = this._displayObject.inverseSceneTransform.transformVector(globalRayPosition);\r\n\t\tpickingCollision.rayDirection = this._displayObject.inverseSceneTransform.deltaTransformVector(globalRayDirection);\r\n\r\n\t\tif (!pickingCollision.normal)\r\n\t\t\tpickingCollision.normal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this.bounds.rayIntersection(pickingCollision.rayPosition, pickingCollision.rayDirection, pickingCollision.normal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollision.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollision.globalRayPosition = globalRayPosition;\r\n\t\tpickingCollision.globalRayDirection = globalRayDirection;\r\n\t\tpickingCollision.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isRenderable():boolean\r\n\t{\r\n\t\treturn this._displayObject._iAssignedColorTransform()._isRenderable();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyEntity(this._displayObject);\r\n\t}\r\n\r\n\tpublic _onInvalidatePartitionBounds(event:DisplayObjectEvent):void\r\n\t{\r\n\t\tthis.bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tprivate isIntersectingMasks(globalRayPosition:Vector3D, globalRayDirection:Vector3D, masks:Array<Array<DisplayObject>>):boolean\r\n\t{\r\n\t\t//horrible hack for 2d masks\r\n\t\tif (masks != null) {\r\n\t\t\tthis._maskPosition.x = globalRayPosition.x + globalRayDirection.x*1000;\r\n\t\t\tthis._maskPosition.y = globalRayPosition.y + globalRayDirection.y*1000;\r\n\t\t\tvar numLayers:number = masks.length;\r\n\t\t\tvar children:Array<DisplayObject>;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar layerHit:boolean;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\tchildren = masks[i];\r\n\t\t\t\tnumChildren = children.length;\r\n\t\t\t\tlayerHit = false;\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\r\n\t\t\t\t\tif (children[j].hitTestPoint(this._maskPosition.x, this._maskPosition.y, true, true)) {\r\n\t\t\t\t\t\tlayerHit = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!layerHit)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n}",
    "import {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\r\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nexport class LightProbeNode extends EntityNode\r\n{\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._displayObject);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}",
    "import {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\n\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {INode}\t\t\t\t\t\tfrom \"../partition/INode\";\r\nimport {IContainerNode}\t\t\t\tfrom \"../partition/IContainerNode\";\r\nimport {BoundingVolumeBase}\t\t\tfrom \"../bounds/BoundingVolumeBase\";\r\nimport {NullBounds}\t\t\t\t\tfrom \"../bounds/NullBounds\";\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nexport class NodeBase implements IContainerNode\r\n{\r\n\tprivate _bounds:BoundingVolumeBase = new NullBounds();\r\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\tpublic numEntities:number = 0;\r\n\r\n\tpublic parent:IContainerNode;\r\n\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get bounds():BoundingVolumeBase\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isRenderable():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isMask():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\t\tthis.parent = null;\r\n\t\tthis._pChildNodes = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\tif (this.numEntities == 0)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\r\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:INode):void\r\n\t{\r\n\t\tnode.parent = this;\r\n\t\tthis.numEntities += node.numEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities += numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:INode):void\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities -= numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n}",
    "import {IAbstractionPool}\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\r\nimport {IAssetClass}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\r\n\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\r\nimport {IEntityNodeClass}\t\t\t\tfrom \"../partition/IEntityNodeClass\";\r\nimport {DisplayObjectNode}\t\t\tfrom \"../partition/DisplayObjectNode\";\r\nimport {IContainerNode}\t\t\t\tfrom \"../partition/IContainerNode\";\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nexport class PartitionBase implements IAbstractionPool\r\n{\r\n\tprivate static _abstractionClassPool:Object = new Object();\r\n\r\n\tprivate _abstractionPool:Object = new Object();\r\n\r\n\tpublic _rootNode:IContainerNode;\r\n\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:DisplayObjectNode;\r\n\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\tpublic getAbstraction(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\treturn (this._abstractionPool[displayObject.id] || (this._abstractionPool[displayObject.id] = new (<IEntityNodeClass> PartitionBase._abstractionClassPool[displayObject.assetType])(displayObject, this)));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param image\r\n\t */\r\n\tpublic clearAbstraction(displayObject:DisplayObject):void\r\n\t{\r\n\t\tthis._abstractionPool[displayObject.id] = null;\r\n\t}\r\n\r\n\tpublic traverse(traverser:ITraverser):void\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tif (this._rootNode) {\r\n\t\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:DisplayObjectNode):void\r\n\t{\r\n\t\tvar t:DisplayObjectNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:DisplayObjectNode):void\r\n\t{\r\n\t\tvar t:DisplayObjectNode;\r\n\r\n\t\tif (node.parent) {\r\n\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tprivate updateEntities():void\r\n\t{\r\n\t\tvar node:DisplayObjectNode = this._updateQueue;\r\n\t\twhile (node) {\r\n\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\tnode._displayObject._iInternalUpdate();\r\n\t\t\tnode = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\t//reset head\r\n\t\tnode = this._updateQueue;\r\n\t\tvar targetNode:IContainerNode;\r\n\t\tvar t:DisplayObjectNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this.findParentForNode(node);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node.parent)\r\n\t\t\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject):void\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iMarkForUpdate(this.getAbstraction(displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject):void\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iRemoveEntity(this.getAbstraction(displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerAbstraction(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass):void\r\n\t{\r\n\t\tPartitionBase._abstractionClassPool[assetClass.assetType] = entityNodeClass;\r\n\t}\r\n}",
    "import {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\r\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nexport class PointLightNode extends EntityNode\r\n{\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._displayObject);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}",
    "import {ITraverser}\t\t\t\tfrom \"../ITraverser\";\r\nimport {DisplayObjectNode}\t\t\tfrom \"../partition/DisplayObjectNode\";\r\nimport {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\r\nimport {IContainerNode}\t\t\t\tfrom \"../partition/IContainerNode\";\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nexport class SceneGraphNode extends DisplayObjectNode implements IContainerNode\r\n{\r\n\tpublic isSceneGraphNode:boolean = true;\r\n\r\n\tprivate _numNodes:number = 0;\r\n\tprivate _pChildNodes:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\r\n\tprivate _childDepths:Array<number> = new Array<number>();\r\n\tprivate _numMasks:number = 0;\r\n\tprivate _childMasks:Array<DisplayObjectNode> = new Array<DisplayObjectNode>();\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:ITraverser):void\r\n\t{\r\n\t\t//containers nodes are for ordering only, no need to check enterNode or debugVisible\r\n\t\tif (this.numEntities == 0)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numNodes; i++)\r\n\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n\t\tfor (i = 0; i < this._numMasks; i++)\r\n\t\t\tthis._childMasks[i].acceptTraverser(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:DisplayObjectNode):void\r\n\t{\r\n\t\tnode.parent = this;\r\n\r\n\t\tif (node._displayObject.maskMode) {\r\n\t\t\tthis._childMasks.push(node);\r\n\t\t\tthis._numMasks++;\r\n\t\t} else {\r\n\t\t\tvar depth:number = node._displayObject._depthID;\r\n\t\t\tvar len:number = this._childDepths.length;\r\n\t\t\tvar index:number = len;\r\n\r\n\t\t\twhile (index--)\r\n\t\t\t\tif (this._childDepths[index] < depth)\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\tindex++;\r\n\r\n\t\t\tif (index < len) {\r\n\t\t\t\tthis._pChildNodes.splice(index, 0, node);\r\n\t\t\t\tthis._childDepths.splice(index, 0, depth);\r\n\t\t\t} else {\r\n\t\t\t\tthis._pChildNodes.push(node);\r\n\t\t\t\tthis._childDepths.push(depth);\r\n\t\t\t}\r\n\t\t\tthis._numNodes++;\r\n\t\t}\r\n\r\n\t\tvar numEntities:number = node.isSceneGraphNode? (<SceneGraphNode> node).numEntities : 1;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities += numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:DisplayObjectNode):void\r\n\t{\r\n\t\tif (node._displayObject.maskMode) {\r\n\t\t\tthis._childMasks.splice(this._childMasks.indexOf(node), 1);\r\n\t\t\tthis._numMasks--;\r\n\t\t} else {\r\n\t\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\r\n\t\t\tthis._pChildNodes.splice(index, 1);\r\n\t\t\tthis._childDepths.splice(index, 1);\r\n\t\t\tthis._numNodes--;\r\n\t\t}\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities -= numEntities;\r\n\t\t} while ((node = <DisplayObjectNode> node.parent) != null);\r\n\t}\r\n}\r\nexport default SceneGraphNode;",
    "import {IAbstractionPool}\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\r\n\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {DisplayObjectContainer}\t\tfrom \"../display/DisplayObjectContainer\";\r\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\r\nimport {SceneGraphNode}\t\t\t\tfrom \"../partition/SceneGraphNode\";\r\nimport {PartitionBase}\t\t\t\tfrom \"../partition/PartitionBase\";\r\nimport {IContainerNode}\t\t\t\tfrom \"../partition/IContainerNode\";\r\nimport {DisplayObjectNode}\t\t\tfrom \"../partition/DisplayObjectNode\";\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nexport class SceneGraphPartition extends PartitionBase\r\n{\r\n\tprivate _sceneGraphNodePool:SceneGraphNodePool;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._sceneGraphNodePool = new SceneGraphNodePool();\r\n\t}\r\n\r\n\tpublic traverse(traverser:ITraverser):void\r\n\t{\r\n\t\tsuper.traverse(traverser);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:DisplayObjectNode):IContainerNode\r\n\t{\r\n\t\tif (node.isSceneGraphNode && (node._displayObject.partition == this || node._displayObject._iIsRoot)) {\r\n\t\t\tthis._rootNode = <SceneGraphNode> node;\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (!node.isSceneGraphNode && node._displayObject.isContainer)\r\n\t\t\treturn this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> node._displayObject);\r\n\r\n\t\treturn this._sceneGraphNodePool.getAbstraction(node._displayObject.parent);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject):void\r\n\t{\r\n\t\tsuper._iRegisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iMarkForUpdate(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject):void\r\n\t{\r\n\t\tsuper._iUnregisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iRemoveEntity(this._sceneGraphNodePool.getAbstraction(<DisplayObjectContainer> displayObject));\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * @class away.pool.SceneGraphNodePool\r\n */\r\nexport class SceneGraphNodePool implements IAbstractionPool\r\n{\r\n\tprivate _abstractionPool:Object = new Object();\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getAbstraction(displayObjectContainer:DisplayObjectContainer):SceneGraphNode\r\n\t{\r\n\t\treturn (this._abstractionPool[displayObjectContainer.id] || (this._abstractionPool[displayObjectContainer.id] = new SceneGraphNode(displayObjectContainer, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic clearAbstraction(displayObjectContainer:DisplayObjectContainer):void\r\n\t{\r\n\t\tdelete this._abstractionPool[displayObjectContainer.id];\r\n\t}\r\n}",
    "import {Plane3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Plane3D\";\r\n\r\nimport {EntityNode}\t\t\t\t\tfrom \"../partition/EntityNode\";\r\nimport {ITraverser}\t\t\t\tfrom \"../ITraverser\";\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nexport class SkyboxNode extends EntityNode\r\n{\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._displayObject._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false; //skybox never casts shadows\r\n\t}\r\n}",
    "export {BasicPartition}\t\t\t\t\tfrom \"./partition/BasicPartition\";\r\nexport {CameraNode}\t\t\t\t\t\tfrom \"./partition/CameraNode\";\r\nexport {DirectionalLightNode}\t\t\tfrom \"./partition/DirectionalLightNode\";\r\nexport {DisplayObjectNode}\t\t\t\tfrom \"./partition/DisplayObjectNode\";\r\nexport {EntityNode}\t\t\t\t\t\tfrom \"./partition/EntityNode\";\r\nexport {IContainerNode}\t\t\t\t\tfrom \"./partition/IContainerNode\";\r\nexport {IDisplayObjectNode}\t\t\t\tfrom \"./partition/IDisplayObjectNode\";\r\nexport {IEntityNodeClass}\t\t\t\tfrom \"./partition/IEntityNodeClass\";\r\nexport {INode}\t\t\t\t\t\t\tfrom \"./partition/INode\";\r\nexport {LightProbeNode}\t\t\t\t\tfrom \"./partition/LightProbeNode\";\r\nexport {NodeBase}\t\t\t\t\t\tfrom \"./partition/NodeBase\";\r\nexport {PartitionBase}\t\t\t\t\tfrom \"./partition/PartitionBase\";\r\nexport {PointLightNode}\t\t\t\t\tfrom \"./partition/PointLightNode\";\r\nexport {SceneGraphNode}\t\t\t\t\tfrom \"./partition/SceneGraphNode\";\r\nexport {SceneGraphPartition}\t\t\t\tfrom \"./partition/SceneGraphPartition\";\r\nexport {SkyboxNode}\t\t\t\t\t\tfrom \"./partition/SkyboxNode\";\r\n",
    "import {Vector3D}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {Point}\t\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {LineElements}\t\t\t\t\t\tfrom \"../graphics/LineElements\";\r\nimport {TriangleElements}\t\t\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {Billboard}\t\t\t\t\t\tfrom \"../display/Billboard\";\r\nimport {PickingCollision}\t\t\t\t\tfrom \"../pick/PickingCollision\";\r\nimport {IPickingCollider}\t\t\t\t\tfrom \"../pick/IPickingCollider\";\r\nimport {MaterialBase}\t\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nexport class JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollision The collision object used to store the collision results\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollision:PickingCollision):boolean\r\n\t{\r\n\t\tpickingCollision.renderable = null;\r\n\r\n\t\t//if (this._testGraphicCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollision, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollision.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollision.renderable = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleElements</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleElements\r\n\t * @param material\r\n\t * @param pickingCollision\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleElements:TriangleElements, material:MaterialBase, pickingCollision:PickingCollision, count:number, offset:number = 0):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollision.rayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollision.rayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:ArrayBufferView = triangleElements.positions.get(count, offset);\r\n\t\tvar posDim:number = triangleElements.positions.dimensions;\r\n\t\tvar posStride:number = triangleElements.positions.stride;\r\n\r\n\t\tvar indices:Uint16Array;\r\n\t\tif (triangleElements.indices) {\r\n\t\t\tindices = triangleElements.indices.get(triangleElements.numElements);\r\n\t\t\tcount = indices.length;\r\n\t\t}\r\n\r\n\t\tfor (var index:number = 0; index < count; index+=3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\tif (indices) {\r\n\t\t\t\ti0 = indices[index]*posStride;\r\n\t\t\t\ti1 = indices[index + 1]*posStride;\r\n\t\t\t\ti2 = indices[index + 2]*posStride;\r\n\t\t\t} else {\r\n\t\t\t\ti0 = index*posStride;\r\n\t\t\t\ti1 = (index + 1)*posStride;\r\n\t\t\t\ti2 = (index + 2)*posStride;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts1y = p2y - p0y;\r\n\r\n\t\t\tif (posDim == 3) {\r\n\t\t\t\tp0z = positions[i0 + 2];\r\n\t\t\t\tp1z = positions[i1 + 2];\r\n\t\t\t\tp2z = positions[i2 + 2];\r\n\t\t\t\ts0z = p1z - p0z;\r\n\t\t\t\ts1z = p2z - p0z;\r\n\r\n\t\t\t\t// evaluate sides and triangle normal\r\n\t\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\t\tnx *= nl;\r\n\t\t\t\tny *= nl;\r\n\t\t\t\tnz *= nl;\r\n\t\t\t} else { //2d hittest\r\n\t\t\t\tnx = 0;\r\n\t\t\t\tny = 0;\r\n\t\t\t\tnz = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < pickingCollision.rayEntryDistance) { // all tests passed\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollision.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollision.position = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollision.normal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tif (triangleElements.uvs) { //uv calculations\r\n\t\t\t\t\t\tvar uvs:ArrayBufferView = triangleElements.uvs.get(triangleElements.numVertices);\r\n\t\t\t\t\t\tvar uvStride:number = triangleElements.uvs.stride;\r\n\r\n\t\t\t\t\t\tvar uIndex:number = indices[index]*uvStride;\r\n\t\t\t\t\t\tvar uv0:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\r\n\t\t\t\t\t\tuIndex = indices[index + 1]*uvStride;\r\n\t\t\t\t\t\tvar uv1:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\r\n\t\t\t\t\t\tuIndex = indices[index + 2]*uvStride;\r\n\t\t\t\t\t\tvar uv2:Vector3D = new Vector3D(uvs[uIndex], uvs[uIndex + 1]);\r\n\t\t\t\t\t\tpickingCollision.uv = new Point(u*uv0.x + v*uv1.x + w*uv2.x, u*uv0.y + v*uv1.y + w*uv2.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpickingCollision.elementIndex = collisionTriangleIndex;\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\t//\r\n\t///**\r\n\t// * Tests a <code>CurveElements</code> object for a collision with the picking ray.\r\n\t// *\r\n\t// * @param triangleElements\r\n\t// * @param material\r\n\t// * @param pickingCollision\r\n\t// * @returns {boolean}\r\n\t// */\r\n\t//public testCurveCollision(curveElements:CurveElements, material:MaterialBase, pickingCollision:PickingCollision, shortestCollisionDistance:number):boolean\r\n\t//{\r\n\t//\tvar rayPosition:Vector3D = pickingCollision.localRayPosition;\r\n\t//\tvar rayDirection:Vector3D = pickingCollision.localRayDirection;\r\n\t//\r\n\t//\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t//\t//this will only work while all points lie on the x/y plane\r\n\t//\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\t//\r\n\t//\tvar result:Vector3D = new Vector3D();\r\n\t//\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t//\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t//\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t//\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t//\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t//\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t//\trayDirection.scaleBy(t);\r\n\t//\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\t//\r\n\t//\tvar indices:Uint16Array = curveElements.indices.get(curveElements.numElements);\r\n\t//\tvar collisionCurveIndex:number = -1;\r\n\t//\tvar bothSides:boolean = material.bothSides;\r\n\t//\r\n\t//\r\n\t//\tvar positions:Float32Array = curveElements.positions.get(curveElements.numVertices);\r\n\t//\tvar posDim:number = curveElements.positions.dimensions;\r\n\t//\tvar curves:Float32Array = curveElements.curves.get(curveElements.numVertices);\r\n\t//\tvar curveDim:number = curveElements.curves.dimensions;\r\n\t//\tvar uvs:ArrayBufferView = curveElements.uvs.get(curveElements.numVertices);\r\n\t//\tvar uvDim:number = curveElements.uvs.dimensions;\r\n\t//\tvar numIndices:number = indices.length;\r\n\t//\r\n\t//\r\n\t//\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t//\t{\r\n\t//\t\tvar id0:number = indices[index];\r\n\t//\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t//\t\tvar id2:number = indices[index + 2] * posDim;\r\n\t//\r\n\t//\t\tvar ax:number = positions[id0 * posDim];\r\n\t//\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t//\t\tvar bx:number = positions[id1];\r\n\t//\t\tvar by:number = positions[id1 + 1];\r\n\t//\t\tvar cx:number = positions[id2];\r\n\t//\t\tvar cy:number = positions[id2 + 1];\r\n\t//\r\n\t//\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t//\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t//\r\n\t//\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\t//\r\n\t//\t\t//from a to p\r\n\t//\t\tvar dx:number = ax - p.x;\r\n\t//\t\tvar dy:number = ay - p.y;\r\n\t//\r\n\t//\t\t//edge normal (a-b)\r\n\t//\t\tvar nx:number = by - ay;\r\n\t//\t\tvar ny:number = -(bx - ax);\r\n\t//\r\n\t//\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\t//\r\n\t//\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t//\t\t//console.log(\"dot a\",dot);\r\n\t//\t\tif (dot > 0)\r\n\t//\t\t\tcontinue;\r\n\t//\r\n\t//\t\tdx = bx - p.x;\r\n\t//\t\tdy = by - p.y;\r\n\t//\t\tnx = cy - by;\r\n\t//\t\tny = -(cx - bx);\r\n\t//\r\n\t//\t\tdot = (dx * nx) + (dy * ny);\r\n\t//\t\t//console.log(\"dot b\",dot);\r\n\t//\t\tif (dot > 0)\r\n\t//\t\t\tcontinue;\r\n\t//\r\n\t//\t\tdx = cx - p.x;\r\n\t//\t\tdy = cy - p.y;\r\n\t//\t\tnx = ay - cy;\r\n\t//\t\tny = -(ax - cx);\r\n\t//\r\n\t//\t\tdot = (dx * nx) + (dy * ny);\r\n\t//\t\t//console.log(\"dot c\",dot);\r\n\t//\t\tif (dot > 0)\r\n\t//\t\t\tcontinue;\r\n\t//\r\n\t//\t\t//check if not solid\r\n\t//\t\tif (curvex != 2) {\r\n\t//\r\n\t//\t\t\tvar v0x:number = bx - ax;\r\n\t//\t\t\tvar v0y:number = by - ay;\r\n\t//\t\t\tvar v1x:number = cx - ax;\r\n\t//\t\t\tvar v1y:number = cy - ay;\r\n\t//\t\t\tvar v2x:number = p.x - ax;\r\n\t//\t\t\tvar v2y:number = p.y - ay;\r\n\t//\r\n\t//\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t//\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t//\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t//\t\t\tvar u:number = 1 - v - w;\r\n\t//\r\n\t//\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t//\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\t//\r\n\t//\t\t\tvar d:number = uu * uu - vv;\r\n\t//\r\n\t//\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t//\t\t\t\tcontinue;\r\n\t//\t\t}\r\n\t//\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t//\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t//\t\tif (distance < shortestCollisionDistance) {\r\n\t//\t\t\tshortestCollisionDistance = distance;\r\n\t//\t\t\tcollisionCurveIndex = index/3;\r\n\t//\t\t\tpickingCollision.rayEntryDistance = distance;\r\n\t//\t\t\tpickingCollision.localPosition = p;\r\n\t//\t\t\tpickingCollision.localNormal = new Vector3D(0, 0, 1);\r\n\t//\t\t\tpickingCollision.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t//\t\t\tpickingCollision.index = index;\r\n\t//\t\t\t//\t\t\t\t\t\tpickingCollision.elementIndex = this.pGetSpriteGraphicIndex(renderable);\r\n\t//\r\n\t//\t\t\t// if not looking for best hit, first found will do...\r\n\t//\t\t\tif (!this._findClosestCollision)\r\n\t//\t\t\t\treturn true;\r\n\t//\t\t}\r\n\t//\t}\r\n\t//\r\n\t//\tif (collisionCurveIndex >= 0)\r\n\t//\t\treturn true;\r\n\t//\r\n\t//\treturn false;\r\n\t//}\r\n\r\n\t/**\r\n\t * Tests a <code>LineElements</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleElements\r\n\t * @param material\r\n\t * @param pickingCollision\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineElements:LineElements, material:MaterialBase, pickingCollision:PickingCollision, count:number, offset:number = 0):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}",
    "import {Point}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Point\";\r\nimport {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollision\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollision\r\n */\r\nexport class PickingCollision\r\n{\r\n\t/**\r\n\t * The entity to which this collision object belongs.\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t * The renderable associated with a collision.\r\n\t */\r\n\tpublic renderable:IRenderable;\r\n\r\n\t/**\r\n\t * The local position of the collision on the renderable's surface.\r\n\t */\r\n\tpublic position:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic normal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the element where the collision took place.\r\n\t */\r\n\tpublic elementIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic globalRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic globalRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollision</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tthis.entity = entity;\r\n\t}\r\n}",
    "import {Vector3D}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\n\r\n\r\nimport {ITraverser}\t\t\t\t\tfrom \"../ITraverser\";\r\nimport {DisplayObject}\t\t\t\tfrom \"../display/DisplayObject\";\r\nimport {Scene}\t\t\t\t\t\tfrom \"../display/Scene\";\r\nimport {View}\t\t\t\t\t\t\tfrom \"../View\";\r\nimport {IPicker}\t\t\t\t\t\tfrom \"../pick/IPicker\";\r\nimport {PickingCollision}\t\t\t\tfrom \"../pick/PickingCollision\";\r\nimport {IEntity}\t\t\t\t\t\tfrom \"../display/IEntity\";\r\nimport {IRenderable}\t\t\t\t\tfrom \"../base/IRenderable\";\r\nimport {INode}\t\t\t\t\t\tfrom \"../partition/INode\";\r\nimport {IPickingCollider}\t\t\t\tfrom \"../pick/IPickingCollider\";\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual renderable objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nexport class RaycastPicker implements IPicker, ITraverser\r\n{\r\n\tprivate _rayPosition:Vector3D;\r\n\tprivate _rayDirection:Vector3D;\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _view:View;\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _bestCollision:PickingCollision;\r\n\tprivate _testCollision:PickingCollision;\r\n\tprivate _testCollider:IPickingCollider;\r\n\tprivate _ignoredEntities:Array<IEntity>;\r\n\r\n\tprivate _entities:Array<IEntity> = new Array<IEntity>();\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic onlyMouseEnabled:boolean = true;\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:INode):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection) && !node.isMask();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollision\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._view = view;\r\n\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollision\r\n\t{\r\n\t\tthis._rayPosition = rayPosition;\r\n\t\tthis._rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this);\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._entities.length)\r\n\t\t\treturn null;\r\n\r\n\t\tvar collision:PickingCollision = this.getPickingCollision();\r\n\r\n\t\t//discard entities\r\n\t\tthis._entities.length = 0;\r\n\r\n\t\treturn collision;\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollision\r\n//\t\t{\r\n//\t\t\tthis._numRenderables = 0;\r\n//\r\n//\t\t\tvar renderable:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\trenderable = entities[c];\r\n//\r\n//\t\t\t\tif (renderable.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._renderables[this._numRenderables++] = renderable;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollision(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities:Array<IEntity>):void\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\t\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this.onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tif (this._ignoredEntities) {\r\n\t\t\tvar len:number = this._ignoredEntities.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity2._iPickingCollision.rayEntryDistance - entity1._iPickingCollision.rayEntryDistance;\r\n\t}\r\n\r\n\tprivate getPickingCollision():PickingCollision\r\n\t{\r\n\t\t// Sort entities from closest to furthest to reduce tests.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tthis._bestCollision = null;\r\n\t\t\r\n\t\tvar entity:IEntity;\r\n\t\tvar len:number = this._entities.length;\r\n\t\tfor (var i:number = len - 1; i >=0; i--) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tthis._testCollision = entity._iPickingCollision;\r\n\t\t\tif (this._bestCollision == null || this._testCollision.rayEntryDistance < this._bestCollision.rayEntryDistance) {\r\n\t\t\t\tthis._testCollider = entity.pickingCollider;\r\n\t\t\t\tif (this._testCollider) {\r\n\t\t\t\t\tthis._testCollision.rayEntryDistance = Number.MAX_VALUE;\r\n\t\t\t\t\tentity._acceptTraverser(this);\r\n\t\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\t\tif (this._bestCollision && !this._findClosestCollision)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t} else if (!this._testCollision.rayOriginIsInsideBounds) {\r\n\t\t\t\t\t// A bounds collision with no picking collider stops all checks.\r\n\t\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\t\tthis._bestCollision = this._testCollision;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._bestCollision)\r\n\t\t\tthis.updatePosition(this._bestCollision);\r\n\r\n\t\treturn this._bestCollision;\r\n\t}\r\n\r\n\tprivate updatePosition(pickingCollision:PickingCollision):void\r\n\t{\r\n\t\tvar collisionPos:Vector3D = pickingCollision.position || (pickingCollision.position = new Vector3D());\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollision.rayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollision.rayPosition;\r\n\t\tvar t:number = pickingCollision.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose():void\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity):void\r\n\t{\r\n\t\tif (!this.isIgnored(entity))\r\n\t\t\tthis._entities.push(entity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyRenderable(renderable:IRenderable):void\r\n\t{\r\n\t\tif (renderable._iTestCollision(this._testCollision, this._testCollider))\r\n\t\t\tthis._bestCollision = this._testCollision;\r\n\t}\r\n\t\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity):void\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity):void\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity):void\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity):void\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}",
    "export {IPicker}\t\t\t\t\t\t\tfrom \"./pick/IPicker\";\r\nexport {IPickingCollider}\t\t\t\tfrom \"./pick/IPickingCollider\";\r\nexport {JSPickingCollider}\t\t\t\tfrom \"./pick/JSPickingCollider\";\r\nexport {PickingCollision}\t\t\t\tfrom \"./pick/PickingCollision\";\r\nexport {RaycastPicker}\t\t\t\t\tfrom \"./pick/RaycastPicker\";",
    "import {AssetBase}\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\nimport {AbstractMethodError}\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\n\r\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nexport class PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate():void\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\r\n\r\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\r\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\r\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\r\n\r\n/**\r\n * A Capsule primitive sprite.\r\n */\r\nexport class PrimitiveCapsulePrefab extends PrimitivePrefabBase\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(material, elementsType);\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:ArrayBufferView;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar stride:number;\r\n\t\t\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateIndices();\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setIndices(new Uint16Array(numIndices));\r\n\t\t\t\ttriangleGraphics.setPositions(new Float32Array(this._numVertices*3));\r\n\t\t\t\ttriangleGraphics.setNormals(new Float32Array(this._numVertices*3));\r\n\t\t\t\ttriangleGraphics.setTangents(new Float32Array(this._numVertices*3));\r\n\t\t\t\t\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\r\n\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\r\n\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\r\n\t\t\tstride = triangleGraphics.concatenatedBuffer.stride/4;\r\n\t\t\t\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:ArrayBufferView;\r\n\t\tvar stride:number;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setUVs(new Float32Array(this._numVertices*2));\r\n\t\t\t}\r\n\r\n\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\r\n\t\t\tstride = triangleGraphics.uvs.stride;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = ( j/this._segmentsH )*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}",
    "import {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {PrimitiveCylinderPrefab}\tfrom \"../prefabs/PrimitiveCylinderPrefab\";\r\n\r\n/**\r\n * A UV Cone primitive sprite.\r\n */\r\nexport class PrimitiveConePrefab extends PrimitiveCylinderPrefab\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(material, elementsType, 0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}",
    "﻿import {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\r\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\r\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nexport class PrimitiveCubePrefab extends PrimitivePrefabBase\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper(material, elementsType);\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:ArrayBufferView;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar stride:number;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\tvar numVertices:number = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar numIndices:number = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\r\n\t\t\t\ttriangleGraphics.invalidateIndices();\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setIndices(new Uint16Array(numIndices));\r\n\t\t\t\ttriangleGraphics.setPositions(new Float32Array(numVertices*3));\r\n\t\t\t\ttriangleGraphics.setNormals(new Float32Array(numVertices*3));\r\n\t\t\t\ttriangleGraphics.setTangents(new Float32Array(numVertices*3));\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n\t\t\tpositions = triangleGraphics.positions.get(numVertices);\r\n\t\t\tnormals = triangleGraphics.normals.get(numVertices);\r\n\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\r\n\t\t\tstride = triangleGraphics.concatenatedBuffer.stride/4;\r\n\t\t\t\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGraphics.setPositions(positions);\r\n\t\t\tlineGraphics.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:ArrayBufferView;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setUVs(new Float32Array(numVertices*2));\r\n\t\t\t}\r\n\r\n\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\r\n\t\t\tstride = triangleGraphics.uvs.stride;\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGraphics() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\r\n\t\t\t\t\tuvs[index] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\r\n\t\t\t\t\tuvs[index] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = ( tl1v + j*dv)*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\r\n\t\t\t\t\tuvs[index] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}",
    "import {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\r\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\r\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\r\n\r\n/**\r\n * A Cylinder primitive sprite.\r\n */\r\nexport class PrimitiveCylinderPrefab extends PrimitivePrefabBase\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number):void\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number):void\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(material, elementsType);\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:ArrayBufferView;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar stride:number;\r\n\t\t\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateIndices();\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setIndices(new Uint16Array(numIndices));\r\n\t\t\t\ttriangleGraphics.setPositions(new Float32Array(this._numVertices*3));\r\n\t\t\t\ttriangleGraphics.setNormals(new Float32Array(this._numVertices*3));\r\n\t\t\t\ttriangleGraphics.setTangents(new Float32Array(this._numVertices*3));\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\r\n\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\r\n\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\r\n\t\t\tstride = triangleGraphics.concatenatedBuffer.stride/4;\r\n\t\t\t\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\tnextVertexIndex++;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + stride];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + stride + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + stride + 2];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*stride;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += stride;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex++;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + stride];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + stride + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + stride + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*stride;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGraphics.setPositions(positions);\r\n\t\t\tlineGraphics.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:ArrayBufferView;\r\n\t\tvar stride:number;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setUVs(new Float32Array(this._numVertices*2));\r\n\t\t\t}\r\n\r\n\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\r\n\t\t\tstride = triangleGraphics.uvs.stride;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index + 1] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tindex += stride;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index + 1] = y*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index + 1] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tindex += stride;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index + 1] = y*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index + 1] = ( j/this._pSegmentsH )*this._scaleV;\r\n\r\n\t\t\t\t\t\tindex += stride;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\r\n\r\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\r\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\r\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\r\n\r\n/**\r\n * A Plane primitive sprite.\r\n */\r\nexport class PrimitivePlanePrefab extends PrimitivePrefabBase\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper(material, elementsType);\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar stride:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:ArrayBufferView;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGraphics.indices != null && numIndices == triangleGraphics.indices.length) {\r\n\t\t\t\ttriangleGraphics.invalidateIndices();\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setIndices(new Uint16Array(numIndices));\r\n\t\t\t\t\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n\t\t\t\r\n\t\t\tif (numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setPositions(new Float32Array(numVertices*3));\r\n\t\t\t\ttriangleGraphics.setNormals(new Float32Array(numVertices*3));\r\n\t\t\t\ttriangleGraphics.setTangents(new Float32Array(numVertices*3));\r\n\t\t\t\t\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tpositions = triangleGraphics.positions.get(numVertices);\r\n\t\t\tnormals = triangleGraphics.normals.get(numVertices);\r\n\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\r\n\t\t\tstride = triangleGraphics.concatenatedBuffer.stride/4;\r\n\t\t\t\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:ArrayBufferView;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGraphics.setPositions(positions);\r\n\t\t\tlineGraphics.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar uvs:ArrayBufferView;\r\n\t\tvar stride:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setUVs(new Float32Array(numVertices*2));\r\n\t\t\t}\r\n\r\n\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\r\n\t\t\tstride = triangleGraphics.uvs.stride;\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\r\n\t\t\t\t\tindex += stride;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tindex += stride;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\r\n\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {PrimitiveCylinderPrefab}\tfrom \"../prefabs/PrimitiveCylinderPrefab\";\r\n\r\n/**\r\n * A UV RegularPolygon primitive sprite.\r\n */\r\nexport class PrimitivePolygonPrefab extends PrimitiveCylinderPrefab\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(material, elementsType, radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AbstractMethodError}\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\n\r\nimport {DisplayObject}\t\t\tfrom \"../display/DisplayObject\";\r\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\r\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\r\nimport {Sprite}\t\t\t\t\tfrom \"../display/Sprite\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {PrefabBase}\t\t\t\tfrom \"../prefabs/PrefabBase\";\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nexport class PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _primitiveDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _elements:ElementsBase;\r\n\tprivate _elementsType:string;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get elementsType():string\r\n\t{\r\n\t\treturn this._elementsType;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Sprite> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\")\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._material = material;\r\n\t\tthis._elementsType = elementsType;\r\n\r\n\t\tif (this._elementsType == ElementsType.TRIANGLE) {\r\n\t\t\tvar triangleElements:TriangleElements = new TriangleElements(new AttributesBuffer());\r\n\t\t\ttriangleElements.autoDeriveNormals = false;\r\n\t\t\ttriangleElements.autoDeriveTangents = false;\r\n\t\t\tthis._elements = triangleElements;\r\n\t\t} else if (this._elementsType == ElementsType.LINE) {\r\n\t\t\tthis._elements = new LineElements(new AttributesBuffer());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGraphics method (and in turn by updateGraphics).\r\n\t */\r\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidatePrimitive():void\r\n\t{\r\n\t\tthis._primitiveDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs():void\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGraphics():void\r\n\t{\r\n\t\tthis._pBuildGraphics(this._elements, this._elementsType);\r\n\r\n\t\tthis._primitiveDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs():void\r\n\t{\r\n\t\tthis._pBuildUVs(this._elements, this._elementsType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate():void\r\n\t{\r\n\t\tif (this._primitiveDirty)\r\n\t\t\tthis.updateGraphics();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar sprite:Sprite = new Sprite(this._material);\r\n\t\tsprite.graphics.addGraphic(this._elements);\r\n\t\tsprite._iSourcePrefab = this;\r\n\r\n\t\treturn sprite;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\r\n\r\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\r\nimport {LineElements}\t\t\t\tfrom \"../graphics/LineElements\";\r\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\r\n\r\n/**\r\n * A UV Sphere primitive sprite.\r\n */\r\nexport class PrimitiveSpherePrefab extends PrimitivePrefabBase\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(material, elementsType);\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:ArrayBufferView;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar stride:number;\r\n\t\t\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGraphics.numVertices && triangleGraphics.indices != null) {\r\n\t\t\t\ttriangleGraphics.invalidateIndices();\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setIndices(new Uint16Array((this._segmentsH - 1)*this._segmentsW*6));\r\n\t\t\t\ttriangleGraphics.setPositions(new Float32Array(numVertices*3));\r\n\t\t\t\ttriangleGraphics.setNormals(new Float32Array(numVertices*3));\r\n\t\t\t\ttriangleGraphics.setTangents(new Float32Array(numVertices*3));\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n\t\t\tpositions = triangleGraphics.positions.get(numVertices);\r\n\t\t\tnormals = triangleGraphics.normals.get(numVertices);\r\n\t\t\ttangents = triangleGraphics.tangents.get(numVertices);\r\n\t\t\tstride = triangleGraphics.concatenatedBuffer.stride/4;\r\n\t\t\t\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\r\n\t\t\tvar lineGraphics:LineElements = <LineElements> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:ArrayBufferView = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGraphics.setPositions(positions);\r\n\t\t\tlineGraphics.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:ArrayBufferView;\r\n\t\tvar stride:number;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\tif (triangleGraphics.uvs && numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setUVs(new Float32Array(numVertices*2));\r\n\t\t\t}\r\n\r\n\t\t\tuvs = triangleGraphics.uvs.get(numVertices);\r\n\t\t\tstride = triangleGraphics.uvs.stride;\r\n\t\t\t\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = ( j/this._segmentsH )*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}",
    "import {IAsset}\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\r\n\r\nimport {ElementsType}\t\t\t\tfrom \"../graphics/ElementsType\";\r\nimport {ElementsBase}\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {MaterialBase}\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {PrimitivePrefabBase}\t\tfrom \"../prefabs/PrimitivePrefabBase\";\r\n\r\n/**\r\n * A UV Cylinder primitive sprite.\r\n */\r\nexport class PrimitiveTorusPrefab extends PrimitivePrefabBase\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidatePrimitive();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(material:MaterialBase = null, elementsType:string = \"triangle\", radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(material, elementsType);\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGraphics(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:ArrayBufferView;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar stride:number;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateIndices();\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.positions);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.normals);\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.tangents);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setIndices(new Uint16Array(numIndices));\r\n\t\t\t\ttriangleGraphics.setPositions(new Float32Array(this._numVertices*3));\r\n\t\t\t\ttriangleGraphics.setNormals(new Float32Array(this._numVertices*3));\r\n\t\t\t\ttriangleGraphics.setTangents(new Float32Array(this._numVertices*3));\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tindices = triangleGraphics.indices.get(triangleGraphics.numElements);\r\n\t\t\tpositions = triangleGraphics.positions.get(this._numVertices);\r\n\t\t\tnormals = triangleGraphics.normals.get(this._numVertices);\r\n\t\t\ttangents = triangleGraphics.tangents.get(this._numVertices);\r\n\t\t\tstride = triangleGraphics.concatenatedBuffer.stride/4;\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += stride;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:ElementsBase, elementsType:string):void\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:ArrayBufferView;\r\n\t\tvar stride:number;\r\n\r\n\r\n\t\tif (elementsType == ElementsType.TRIANGLE) {\r\n\r\n\t\t\tvar triangleGraphics:TriangleElements = <TriangleElements> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGraphics.uvs && this._numVertices == triangleGraphics.numVertices) {\r\n\t\t\t\ttriangleGraphics.invalidateVertices(triangleGraphics.uvs);\r\n\t\t\t} else {\r\n\t\t\t\ttriangleGraphics.setUVs(new Float32Array(this._numVertices*2));\r\n\t\t\t}\r\n\r\n\t\t\tuvs = triangleGraphics.uvs.get(this._numVertices);\r\n\t\t\tstride = triangleGraphics.uvs.stride;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = ( j/this._segmentsT )*this._scaleV;\r\n\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else if (elementsType == ElementsType.LINE) {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}",
    "export {PrefabBase}\t\t\t\t\t\tfrom \"./prefabs/PrefabBase\";\r\nexport {PrimitiveCapsulePrefab}\t\t\tfrom \"./prefabs/PrimitiveCapsulePrefab\";\r\nexport {PrimitiveConePrefab}\t\t\t\tfrom \"./prefabs/PrimitiveConePrefab\";\r\nexport {PrimitiveCubePrefab}\t\t\t\tfrom \"./prefabs/PrimitiveCubePrefab\";\r\nexport {PrimitiveCylinderPrefab}\t\t\tfrom \"./prefabs/PrimitiveCylinderPrefab\";\r\nexport {PrimitivePlanePrefab}\t\t\tfrom \"./prefabs/PrimitivePlanePrefab\";\r\nexport {PrimitivePolygonPrefab}\t\t\tfrom \"./prefabs/PrimitivePolygonPrefab\";\r\nexport {PrimitivePrefabBase}\t\t\t\tfrom \"./prefabs/PrimitivePrefabBase\";\r\nexport {PrimitiveSpherePrefab}\t\t\tfrom \"./prefabs/PrimitiveSpherePrefab\";\r\nexport {PrimitiveTorusPrefab}\t\t\tfrom \"./prefabs/PrimitiveTorusPrefab\";",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nexport class AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}",
    "import {TesselatedFontTable}\t\t\tfrom \"../text/TesselatedFontTable\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nexport class BitmapFontChar\r\n{\r\n\r\n\tpublic id:string;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n\tpublic width:number;\r\n\tpublic height:number;\r\n\tpublic x_offset:number;\r\n\tpublic y_offset:number;\r\n\tpublic x_advance:number;\r\n\tpublic page:number;\r\n\tpublic channel:number;\r\n\r\n\tconstructor(id:string, x:number,y:number, width:number,  height:number, xoff:number, yoff:number, xadv:number, page:number, channel: number)\r\n\t{\r\n\t\tthis.id = id;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.x_offset = xoff;\r\n\t\tthis.y_offset = yoff;\r\n\t\tthis.x_advance = xadv;\r\n\t\tthis.page = page;\r\n\t\tthis.channel = channel;\r\n\t}\r\n\r\n}",
    "import {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {BitmapFontChar}\t\t\tfrom \"../text/BitmapFontChar\";\r\nimport {IFontTable}\t\t\t\tfrom \"../text/IFontTable\";\r\nimport {BitmapImage2D}\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\r\nimport {AbstractMethodError}\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\n/**\r\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\r\n *\r\n *\r\n * @see away.base.TriangleElements\r\n * @see away.entities.Sprite\r\n *\r\n * @class away.base.GraphicBase\r\n */\r\nexport class BitmapFontTable extends AssetBase implements IFontTable\r\n{\r\n\tpublic static assetType:string = \"[asset BitmapFontTable]\";\r\n\tprivate _font_chars:Array<BitmapFontChar>;\r\n\tpublic _init_size:number;\r\n\tpublic _current_size:number;\r\n\tpublic _size_multiply:number;\r\n\tprivate _bitmap_pages:Array<BitmapImage2D>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _offset_x:number;\r\n\tprivate _offset_y:number;\r\n\tprivate _ascent:number;\r\n\tprivate _descent:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = [];\r\n\t\tthis._bitmap_pages = [];\r\n\t\tthis._font_chars_dic = new Object();\r\n\t\tthis._ascent=0;\r\n\t\tthis._descent=0;\r\n\t\tthis._current_size=0;\r\n\t\tthis._size_multiply=0;\r\n\t\tthis._init_size=0;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BitmapFontTable.assetType;\r\n\t}\r\n\r\n\tpublic initFontSize(font_size:number)\r\n\t{\r\n\t\tif(this._current_size==font_size) return;\r\n\t\tthis._current_size = font_size;\r\n\t\tthis._size_multiply= font_size/this._init_size;\r\n\t}\r\n\r\n\tpublic getCharDataCanvas(char_code:string):Array<number>\r\n\t{\r\n\t\tvar this_char:BitmapFontChar=this._font_chars_dic[char_code];\r\n\t\tif(this_char){\r\n\t\t\t//console.log(\"this_char found\");\r\n\t\t\treturn [this_char.x, this_char.y, this_char.width, this_char.height, this_char.x_offset*this._size_multiply, this_char.y_offset*this._size_multiply];\r\n\t\t}\r\n\t\t//console.log(\"this_char not found\" + char_code);\r\n\t\treturn [];\r\n\t}\r\n\tpublic getCharData(char_code:string):Array<number>\r\n\t{\r\n\t\tvar this_char:BitmapFontChar=this._font_chars_dic[char_code];\r\n\t\tif(this_char){\r\n\t\t\t//console.log(\"this_char found\");\r\n\t\t\treturn [this_char.x/256, this_char.y/256, this_char.width/256, this_char.height/256, this_char.x_offset*this._size_multiply, this_char.y_offset*this._size_multiply];\r\n\t\t}\r\n\t\t//console.log(\"this_char not found\" + char_code);\r\n\t\treturn [];\r\n\t}\r\n\tpublic getCharVertCnt(char_code:string):number\r\n\t{\r\n\t\treturn 6*4;\r\n\t}\r\n\tpublic getCharWidth(char_code:string):number\r\n\t{\r\n\t\tvar this_char:BitmapFontChar=this._font_chars_dic[char_code];\r\n\t\tif(this_char)\r\n\t\t\treturn this._size_multiply*this_char.x_advance;\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic getLineHeight():number\r\n\t{\r\n\t\treturn this._current_size;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic add_page(image:BitmapImage2D) {\r\n\t\tthis._bitmap_pages.push(image);\r\n\t}\r\n\tpublic get_page(idx:number=0):BitmapImage2D {\r\n\t\treturn this._bitmap_pages[idx];\r\n\t}\r\n\tget ascent():number {\r\n\t\treturn this._ascent;\r\n\t}\r\n\r\n\tset ascent(value:number){\r\n\t\tthis._ascent=value;\r\n\t}\r\n\tget descent():number {\r\n\t\treturn this._descent;\r\n\t}\r\n\r\n\tset descent(value:number){\r\n\t\tthis._descent=value;\r\n\t}\r\n\r\n\tget offset_x():number {\r\n\t\treturn this._offset_x;\r\n\t}\r\n\r\n\tset offset_x(value:number){\r\n\t\tthis._offset_x=value;\r\n\t}\r\n\tget offset_y():number {\r\n\t\treturn this._offset_y;\r\n\t}\r\n\r\n\tset offset_y(value:number){\r\n\t\tthis._offset_y=value;\r\n\t}\r\n\tpublic get_font_chars():Array<BitmapFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getChar(name:string):BitmapFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[name];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setChar(id:string, x:number,y:number, width:number,  height:number, xoff:number, yoff:number, xadv:number, page:number, channel: number):void\r\n\t{\r\n\t\tvar bitmap_font_char:BitmapFontChar = new BitmapFontChar(id, x, y, width, height, xoff, yoff, xadv, page, channel);\r\n\t\tthis._font_chars.push(bitmap_font_char);\r\n\t\tthis._font_chars_dic[id]=bitmap_font_char;\r\n\t}\r\n\r\n}",
    "import {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {IFontTable}\t\t\t\t\tfrom \"../text/IFontTable\";\r\nimport {TesselatedFontTable}\t\tfrom \"../text/TesselatedFontTable\";\r\nimport {BitmapFontTable}\t\t\tfrom \"../text/BitmapFontTable\";\r\n\r\n/**\r\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\r\n *\r\n *\r\n * @see away.base.TriangleElements\r\n * @see away.entities.Sprite\r\n *\r\n * @class away.base.GraphicBase\r\n */\r\nexport class Font extends AssetBase\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<IFontTable> = [];\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get font_styles():Array<IFontTable>\r\n\t{\r\n\t\treturn this._font_styles;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string, assetType:string=TesselatedFontTable.assetType):IFontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif((this._font_styles[i].assetType==assetType)&&(this._font_styles[i].name==style_name)){\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar font_style:IFontTable=null;\r\n\t\tif(assetType==TesselatedFontTable.assetType){\r\n\t\t\tfont_style = new TesselatedFontTable();\r\n\t\t}\r\n\t\telse if(assetType==BitmapFontTable.assetType){\r\n\t\t\tfont_style = new BitmapFontTable();\r\n\t\t}\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nexport class GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}",
    "import {TesselatedFontTable}\t\t\tfrom \"../text/TesselatedFontTable\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nexport class TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * Elements for this char\r\n\t */\r\n\tpublic elements:TriangleElements;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=[];\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=[];\r\n\r\n\r\n\tconstructor(elements:TriangleElements)\r\n\t{\r\n\t\tthis.elements = elements;\r\n\t}\r\n\r\n}",
    "import {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {ElementsBase}\t\t\t\t\tfrom \"../graphics/ElementsBase\";\r\nimport {TriangleElements}\t\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {TesselatedFontChar}\t\t\tfrom \"../text/TesselatedFontChar\";\r\nimport {IFontTable}\t\t\t\t\tfrom \"../text/IFontTable\";\r\n\r\n/**\r\n * GraphicBase wraps a TriangleElements as a scene graph instantiation. A GraphicBase is owned by a Sprite object.\r\n *\r\n *\r\n * @see away.base.TriangleElements\r\n * @see away.entities.Sprite\r\n *\r\n * @class away.base.GraphicBase\r\n */\r\nexport class TesselatedFontTable extends AssetBase implements IFontTable\r\n{\r\n\tpublic static assetType:string = \"[asset TesselatedFontTable]\";\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _offset_x:number;\r\n\tprivate _offset_y:number;\r\n\tprivate _ascent:number;\r\n\tprivate _descent:number;\r\n\tpublic _current_size:number;\r\n\tpublic _size_multiply:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = [];\r\n\t\tthis._font_chars_dic = new Object();\r\n\t\tthis._ascent=0;\r\n\t\tthis._descent=0;\r\n\t\tthis._current_size=0;\r\n\t\tthis._size_multiply=0;\r\n\t\tthis._font_em_size=0;\r\n\t}\r\n\r\n\tpublic initFontSize(font_size:number)\r\n\t{\r\n\t\tif(this._current_size==font_size) return;\r\n\t\tthis._current_size = font_size;\r\n\t\tthis._size_multiply= font_size/this._font_em_size;\r\n\t}\r\n\r\n\tpublic getCharVertCnt(char_code:string):number\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = this._font_chars_dic[char_code];\r\n\t\tif(tesselated_font_char){\r\n\t\t\treturn tesselated_font_char.elements.numVertices*3;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\tpublic getCharWidth(char_code:string):number\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = this._font_chars_dic[char_code];\r\n\t\tif(tesselated_font_char){\r\n\t\t\treturn tesselated_font_char.char_width*this._size_multiply;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\r\n\tpublic getLineHeight():number\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TesselatedFontTable.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose():void\r\n\t{\r\n\r\n\t}\r\n\r\n\tget ascent():number {\r\n\t\treturn this._ascent;\r\n\t}\r\n\r\n\tset ascent(value:number){\r\n\t\tthis._ascent=value;\r\n\t}\r\n\tget descent():number {\r\n\t\treturn this._descent;\r\n\t}\r\n\r\n\tset descent(value:number){\r\n\t\tthis._descent=value;\r\n\t}\r\n\r\n\tget offset_x():number {\r\n\t\treturn this._offset_x;\r\n\t}\r\n\r\n\tset offset_x(value:number){\r\n\t\tthis._offset_x=value;\r\n\t}\r\n\tget offset_y():number {\r\n\t\treturn this._offset_y;\r\n\t}\r\n\r\n\tset offset_y(value:number){\r\n\t\tthis._offset_y=value;\r\n\t}\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getChar(name:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[name];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setChar(name:string, elements:ElementsBase, char_width:number):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<TriangleElements> elements);\r\n\t\ttesselated_font_char.char_width=char_width;\r\n\t\telements.name = name;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[name]=tesselated_font_char;\r\n\t}\r\n\r\n}",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nexport class TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nexport class TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nexport class TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}",
    "import {AssetBase}\t\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\n\r\nimport {IFontTable}\t\t\t\t\t\tfrom \"../text/IFontTable\";\r\nimport {MaterialBase}\t\t\t\t\tfrom \"../materials/MaterialBase\";\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nexport class TextFormat extends AssetBase\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:IFontTable;\r\n\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic fallback_font_table:IFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = [];\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nexport class TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nexport class TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}",
    "export {AntiAliasType}\t\t\t\t\tfrom \"./text/AntiAliasType\";\r\nexport {Font}\t\t\t\t\t\t\tfrom \"./text/Font\";\r\nexport {GridFitType}\t\t\t\t\tfrom \"./text/GridFitType\";\r\nexport {IFontTable}\t\t\t\t        from \"./text/IFontTable\";\r\nexport {TesselatedFontTable}\t\t\tfrom \"./text/TesselatedFontTable\";\r\nexport {BitmapFontTable}\t\t\t    from \"./text/BitmapFontTable\";\r\nexport {TesselatedFontChar}\t\t\t\tfrom \"./text/TesselatedFontChar\";\r\nexport {BitmapFontChar}\t\t\t\t    from \"./text/BitmapFontChar\";\r\nexport {TextFieldAutoSize}\t\t\t\tfrom \"./text/TextFieldAutoSize\";\r\nexport {TextFieldType}\t\t\t\t\tfrom \"./text/TextFieldType\";\r\nexport {TextFormat}\t\t\t\t\t\tfrom \"./text/TextFormat\";\r\nexport {TextFormatAlign}\t\t\t\tfrom \"./text/TextFormatAlign\";\r\nexport {TextInteractionMode}\t\t\tfrom \"./text/TextInteractionMode\";\r\nexport {TextLineMetrics}\t\t\t\tfrom \"./text/TextLineMetrics\";",
    "/**\r\n\r\n\r\n */\r\nexport class MappingMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static LINEAR_GRADIENT:string = \"linearGradient\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static RADIAL_GRADIENT:string = \"radialGradient\";\r\n}",
    "﻿﻿import {Sampler2D}\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\r\nimport {Image2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\r\nimport {ErrorBase}\t\t\t\tfrom \"awayjs-core/lib/errors/ErrorBase\";\r\nimport {ImageUtils}\t\t\t\tfrom \"awayjs-core/lib/utils/ImageUtils\";\r\n\r\nimport {MappingMode}\t\t\t\tfrom \"../textures/MappingMode\";\r\nimport {TextureBase}\t\t\t\tfrom \"../textures/TextureBase\";\r\n\r\nexport class Single2DTexture extends TextureBase\r\n{\r\n\tprivate _mappingMode:string;\r\n\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\tpublic get mappingMode():string\r\n\t{\r\n\t\treturn this._mappingMode;\r\n\t}\r\n\r\n\tpublic set mappingMode(value:string)\r\n\t{\r\n\t\tif (this._mappingMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mappingMode = value;\r\n\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn <Sampler2D> this._samplers[0];\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._samplers[0] == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.setSamplerAt(value, 0);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get image2D():Image2D\r\n\t{\r\n\t\treturn <Image2D> this._images[0];\r\n\t}\r\n\r\n\tpublic set image2D(value:Image2D)\r\n\t{\r\n\t\tif (this._images[0] == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value))\r\n\t\t\tthrow new ErrorBase(\"Invalid image2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis.setImageAt(value, 0);\r\n\t}\r\n\r\n\tconstructor(image2D:Image2D = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.setNumImages(1);\r\n\r\n\t\tthis.image2D = image2D;\r\n\r\n\t\tthis._mappingMode = MappingMode.NORMAL;\r\n\t}\r\n}",
    "import {SamplerCube}\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\r\nimport {ImageCube}\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\r\n\r\nimport {TextureBase}\t\t\t\tfrom \"../textures/TextureBase\";\r\n\r\n\r\nexport class SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn <SamplerCube> this._samplers[0];\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplers[0] == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.setSamplerAt(value, 0);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {ImageCube}\r\n\t */\r\n\tpublic get imageCube():ImageCube\r\n\t{\r\n\t\treturn <ImageCube> this._images[0];\r\n\t}\r\n\r\n\tpublic set imageCube(value:ImageCube)\r\n\t{\r\n\t\tif (this._images[0] == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis.setImageAt(value, 0);\r\n\t}\r\n\r\n\t\r\n\tconstructor(imageCube:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.setNumImages(1);\r\n\r\n\t\tthis.imageCube = imageCube;\r\n\t}\r\n}",
    "import {ImageBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\r\nimport {SamplerBase}\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerBase\";\r\nimport {AssetBase}\t\t\t\t\tfrom \"awayjs-core/lib/library/AssetBase\";\r\nimport {AbstractMethodError}\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\r\n\r\nimport {ISurface}\t\t\t\t\t\tfrom \"../base/ISurface\";\r\n/**\r\n *\r\n */\r\nexport class TextureBase extends AssetBase\r\n{\r\n\tpublic _numImages:number = 0;\r\n\tpublic _images:Array<ImageBase> = new Array<ImageBase>();\r\n\tpublic _samplers:Array<SamplerBase> = new Array<SamplerBase>();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic getNumImages():number\r\n\t{\r\n\t\treturn this._numImages;\r\n\t}\r\n\r\n\tpublic setNumImages(value:number):void\r\n\t{\r\n\t\tif (this._numImages == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._numImages = value;\r\n\r\n\t\tthis._images.length = value;\r\n\t\tthis._samplers.length = value;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\tpublic getImageAt(index:number):ImageBase\r\n\t{\r\n\t\treturn this._images[index];\r\n\t}\r\n\r\n\tpublic setImageAt(image:ImageBase, index:number):void\r\n\t{\r\n\t\tthis._images[index] = image;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\tpublic getSamplerAt(index:number):SamplerBase\r\n\t{\r\n\t\treturn this._samplers[index];\r\n\t}\r\n\r\n\tpublic setSamplerAt(sampler:SamplerBase, index:number):void\r\n\t{\r\n\t\tthis._samplers[index] = sampler;\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n}",
    "export {MappingMode}\t\t\t\t\t\tfrom \"./textures/MappingMode\";\r\nexport {Single2DTexture}\t\t\t\t\tfrom \"./textures/Single2DTexture\";\r\nexport {SingleCubeTexture}\t\t\t\tfrom \"./textures/SingleCubeTexture\";\r\nexport {TextureBase}\t\t\t\t\t\tfrom \"./textures/TextureBase\";",
    "import {Image2D}\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\r\nimport {ByteArray}\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\r\n\r\nimport {CastError}\t\t\t\tfrom \"../errors/CastError\";\r\nimport {Single2DTexture}\t\t\tfrom \"../textures/Single2DTexture\";\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nexport class Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}",
    "import {AttributesBuffer}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\r\nimport {AttributesView}\t\t\tfrom \"awayjs-core/lib/attributes/AttributesView\";\r\nimport {Short2Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Short2Attributes\";\r\nimport {Short3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Short3Attributes\";\r\nimport {Float3Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float3Attributes\";\r\nimport {Float4Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Float4Attributes\";\r\nimport {Byte4Attributes}\t\t\tfrom \"awayjs-core/lib/attributes/Byte4Attributes\";\r\nimport {Matrix3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\r\nimport {Vector3D}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Vector3D\";\r\nimport {Box}\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Box\";\r\nimport {Sphere}\t\t\t\t\tfrom \"awayjs-core/lib/geom/Sphere\";\r\n\r\nimport {TriangleElements}\t\t\tfrom \"../graphics/TriangleElements\";\r\nimport {HitTestCache}\t\t\tfrom \"../graphics/HitTestCache\";\r\n\r\nexport class ElementsUtils\r\n{\r\n\tprivate static tempFloat32x4:Float32Array = new Float32Array(4);\r\n\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:AttributesView, faceNormalAttributes:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (faceNormalAttributes == null)\r\n\t\t\tfaceNormalAttributes = new Float4Attributes(count + offset);\r\n\t\telse if (faceNormalAttributes.count < count + offset)\r\n\t\t\tfaceNormalAttributes.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.stride;\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\t\tvar posStride:number = positionAttributes.stride;\r\n\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(count, offset);\r\n\r\n\t\tvar len:number = count*indexDim;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\tif (posDim == 3) {\r\n\t\t\tfor (i = 0; i < len; i += indexDim) {\r\n\t\t\t\tindex = indices[i]*posStride;\r\n\t\t\t\tx1 = positions[index];\r\n\t\t\t\ty1 = positions[index + 1];\r\n\t\t\t\tz1 = positions[index + 2];\r\n\t\t\t\tindex = indices[i + 1]*posStride;\r\n\t\t\t\tx2 = positions[index];\r\n\t\t\t\ty2 = positions[index + 1];\r\n\t\t\t\tz2 = positions[index + 2];\r\n\t\t\t\tindex = indices[i + 2]*posStride;\r\n\t\t\t\tx3 = positions[index];\r\n\t\t\t\ty3 = positions[index + 1];\r\n\t\t\t\tz3 = positions[index + 2];\r\n\t\t\t\tdx1 = x3 - x1;\r\n\t\t\t\tdy1 = y3 - y1;\r\n\t\t\t\tdz1 = z3 - z1;\r\n\t\t\t\tdx2 = x2 - x1;\r\n\t\t\t\tdy2 = y2 - y1;\r\n\t\t\t\tdz2 = z2 - z1;\r\n\t\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\t\tfaceNormals[j++] = cx;\r\n\t\t\t\tfaceNormals[j++] = cy;\r\n\t\t\t\tfaceNormals[j++] = cz;\r\n\t\t\t\tfaceNormals[j++] = d;\r\n\t\t\t}\r\n\t\t} else if (posDim == 2) {\r\n\t\t\tfor (i = 0; i < len; i += indexDim) {\r\n\t\t\t\tfaceNormals[j++] = 0;\r\n\t\t\t\tfaceNormals[j++] = 0;\r\n\t\t\t\tfaceNormals[j++] = 1;\r\n\t\t\t\tfaceNormals[j++] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn faceNormalAttributes;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, normalAttributes:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (normalAttributes == null)\r\n\t\t\tnormalAttributes = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar normalStride:number = normalAttributes.stride;\r\n\r\n\t\tvar normals:Float32Array = normalAttributes.get(normalAttributes.count);\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = normalAttributes.count*normalStride;\r\n\r\n\t\t//clear normal values\r\n\t\tfor (i = 0; i < len; i += normalStride) {\r\n\t\t\tnormals[i] = 0;\r\n\t\t\tnormals[i + 1] = 0;\r\n\t\t\tnormals[i + 2] = 0;\r\n\t\t}\r\n\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\tfor (i = 0; i < len; i += indexDim) {\r\n\t\t\tindex = indices[i]*normalStride;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i + 1]*normalStride;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i + 2]*normalStride;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\tlen = normalAttributes.count*normalStride;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\tfor (i = 0; i < len; i += normalStride) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i] = vx*d;\r\n\t\t\tnormals[i + 1] = vy*d;\r\n\t\t\tnormals[i + 2] = vz*d;\r\n\t\t}\r\n\r\n\t\treturn normalAttributes;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:AttributesView, uvAttributes:AttributesView, faceTangentAttributes:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:ArrayBufferView = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = <Float32Array> uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (faceTangentAttributes == null)\r\n\t\t\tfaceTangentAttributes = new Float4Attributes(count + offset);\r\n\t\telse if (faceTangentAttributes.count < count + offset)\r\n\t\t\tfaceTangentAttributes.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\t\tvar posStride:number = positionAttributes.stride;\r\n\t\tvar uvStride:number = uvAttributes.stride;\r\n\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar v0:number;\r\n\t\tvar v1:number;\r\n\t\tvar v2:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tvar len:number = count*indexDim;\r\n\t\tfor (i = 0; i < len; i += indexDim) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvStride + 1];\r\n\t\t\tdv1 = uvs[index2*uvStride + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvStride + 1] - v0;\r\n\r\n\t\t\tv0 = index1*posStride;\r\n\t\t\tv1 = index2*posStride;\r\n\t\t\tv2 = index3*posStride;\r\n\r\n\t\t\tx0 = positions[v0];\r\n\t\t\tdx1 = positions[v1] - x0;\r\n\t\t\tdx2 = positions[v2] - x0;\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\r\n\t\t\ty0 = positions[v0 + 1];\r\n\t\t\tdy1 = positions[v1 + 1] - y0;\r\n\t\t\tdy2 = positions[v2 + 1] - y0;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\r\n\t\t\tif (posDim == 3) {\r\n\t\t\t\tz0 = positions[v0 + 2];\r\n\t\t\t\tdz1 = positions[v1 + 2] - z0;\r\n\t\t\t\tdz2 = positions[v2 + 2] - z0;\r\n\t\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\t} else {\r\n\t\t\t\tcz = 0;\r\n\t\t\t}\r\n\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i] = denom*cx;\r\n\t\t\tfaceTangents[i + 1] = denom*cy;\r\n\t\t\tfaceTangents[i + 2] = denom*cz;\r\n\t\t}\r\n\r\n\t\treturn faceTangentAttributes;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, tangentAttributes:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (tangentAttributes == null)\r\n\t\t\ttangentAttributes = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar tangentStride:number = tangentAttributes.stride;\r\n\r\n\t\tvar tangents:Float32Array = tangentAttributes.get(tangentAttributes.count);\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = tangentAttributes.count*tangentStride;\r\n\r\n\t\t//clear tangent values\r\n\t\tfor (i = 0; i < len; i += tangentStride) {\r\n\t\t\ttangents[i] = 0;\r\n\t\t\ttangents[i + 1] = 0;\r\n\t\t\ttangents[i + 2] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\tfor (i = 0; i < len; i += indexDim) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i]*tangentStride;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i + 1]*tangentStride;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i + 2]*tangentStride;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\tfor (i = 0; i < len; i += tangentStride) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i] = vx*d;\r\n\t\t\ttangents[i + 1] = vy*d;\r\n\t\t\ttangents[i + 2] = vz*d;\r\n\t\t}\r\n\r\n\t\treturn tangentAttributes;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, colorAttributes:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (colorAttributes == null)\r\n\t\t\tcolorAttributes = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tif (colorAttributes.count < count + offset)\r\n\t\t\tcolorAttributes.count = count + offset;\r\n\r\n\t\tvar colors:Uint8Array = colorAttributes.get(count, offset);\r\n\t\tvar colorStride:number = colorAttributes.stride;\r\n\r\n\t\tvar len:number = colorAttributes.count*colorStride;\r\n\t\tfor (var i:number = 0; i < len; i += colorStride) {\r\n\t\t\tcolors[i] = 0xFF;\r\n\t\t\tcolors[i + 1] = 0xFF;\r\n\t\t\tcolors[i + 2] = 0xFF;\r\n\t\t\tcolors[i + 3] = 0xFF;\r\n\t\t}\r\n\r\n\t\treturn colorAttributes;\r\n\t}\r\n\r\n\tpublic static scale(scaleA:number, scaleB:number, scaleC:number, output:AttributesView, count:number, offset:number = 0):void\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar scaleArray:Float32Array = new Float32Array([scaleA, scaleB, scaleC]);\r\n\t\tvar values:ArrayBufferView = output.get(count, offset);\r\n\t\tvar outputStride:number = output.stride;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar len:number = count*outputStride;\r\n\r\n\t\tfor (i = 0; i < len; i += outputStride)\r\n\t\t\tfor (j = 0; j < outputDim; j++)\r\n\t\t\t\tvalues[i+j] *= scaleArray[j];\r\n\r\n\t\toutput.invalidate();\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:AttributesView, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0):void\r\n\t{\r\n\t\t//todo: make this compatible with 2-dimensional positions\r\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\r\n\t\tvar positionStride:number = positionAttributes.stride;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalStride:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalStride = normalAttributes.stride;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentStride:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentStride = tangentAttributes.stride;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionStride;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalStride;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentStride;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.invalidate();\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.invalidate();\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.invalidate();\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.attributesBuffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < ElementsUtils.LIMIT_INDICES && numVertices < ElementsUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = ElementsUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < ElementsUtils.LIMIT_INDICES && index + 1 < ElementsUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n\r\n\t//TODO - generate this dyanamically based on num tris\r\n\r\n\tpublic static hitTestTriangleElements(x:number, y:number, z:number, box:Box, triangleElements:TriangleElements, count:number, offset:number = 0):boolean\r\n\t{\r\n\t\tvar positionAttributes:AttributesView = triangleElements.positions;\r\n\t\tvar curveAttributes:AttributesView = triangleElements.getCustomAtributes(\"curves\");\r\n\r\n\t\tvar posStride:number = positionAttributes.stride;\r\n\t\tvar curveStride:number = curveAttributes.stride;\r\n\r\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\r\n\t\tvar curves:ArrayBufferView = curveAttributes? curveAttributes.get(count, offset) : null;\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tvar hitTestCache:HitTestCache = triangleElements.hitTestCache[offset] || (triangleElements.hitTestCache[offset] = new HitTestCache());\r\n\t\tvar index:number = -1;//hitTestCache.lastCollisionIndex;\r\n\t\t\r\n\t\tif(index != -1 && index < count)\r\n\t\t{\r\n\t\t\tprecheck:\r\n\t\t\t{\r\n\t\t\t\tid0 = index + 2;\r\n\t\t\t\tid1 = index + 1;\r\n\t\t\t\tid2 = index + 0;\r\n\r\n\t\t\t\tax = positions[id0 * posStride];\r\n\t\t\t\tay = positions[id0 * posStride + 1];\r\n\t\t\t\tbx = positions[id1 * posStride];\r\n\t\t\t\tby = positions[id1 * posStride + 1];\r\n\t\t\t\tcx = positions[id2 * posStride];\r\n\t\t\t\tcy = positions[id2 * posStride + 1];\r\n\r\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tbreak precheck;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tbreak precheck;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tbreak precheck;\r\n\r\n\t\t\t\tif (curves) {\r\n\t\t\t\t\t//check if not solid\r\n\t\t\t\t\tif (curves[id0 * curveStride + 2]!=-128) {\r\n\r\n\t\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t\t//here be dragons\r\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\t\tvar az:number = curves[id0 * curveStride];\r\n\t\t\t\t\t\tif (d > 0 && az == -128) {\r\n\t\t\t\t\t\t\tbreak precheck;;\r\n\t\t\t\t\t\t} else if (d < 0 && az == 127) {\r\n\t\t\t\t\t\t\tbreak precheck;;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif (count > 150) {\r\n\t\t\tvar cells:Array<Array<number>> = hitTestCache.cells;\r\n\t\t\tvar divisions:number = cells.length? hitTestCache.divisions : (hitTestCache.divisions = Math.min(Math.ceil(Math.sqrt(count)), 32));\r\n\t\t\tvar conversionX:number = divisions/box.width;\r\n\t\t\tvar conversionY:number = divisions/box.height;\r\n\t\t\tvar minx:number = box.x;\r\n\t\t\tvar miny:number = box.y;\r\n\r\n\t\t\tif (!cells.length) { //build grid\r\n\r\n\t\t\t\t//now we have bounds start creating grid cells and filling\r\n\t\t\t\tcells.length = divisions * divisions;\r\n\r\n\t\t\t\tfor(var k:number = 0; k < count; k+=3) {\r\n\t\t\t\t\tid0 = k + 2;\r\n\t\t\t\t\tid1 = k + 1;\r\n\t\t\t\t\tid2 = k + 0;\r\n\r\n\t\t\t\t\tax = positions[id0 * posStride];\r\n\t\t\t\t\tay = positions[id0 * posStride + 1];\r\n\t\t\t\t\tbx = positions[id1 * posStride];\r\n\t\t\t\t\tby = positions[id1 * posStride + 1];\r\n\t\t\t\t\tcx = positions[id2 * posStride];\r\n\t\t\t\t\tcy = positions[id2 * posStride + 1];\r\n\r\n\t\t\t\t\t//subtractions to push into positive space\r\n\t\t\t\t\tvar min_index_x:number = Math.floor((Math.min(ax, bx, cx) - minx)*conversionX);\r\n\t\t\t\t\tvar min_index_y:number = Math.floor((Math.min(ay, by, cy) - miny)*conversionY);\r\n\r\n\t\t\t\t\tvar max_index_x:number = Math.floor((Math.max(ax, bx, cx) - minx)*conversionX);\r\n\t\t\t\t\tvar max_index_y:number = Math.floor((Math.max(ay, by, cy) - miny)*conversionY);\r\n\r\n\r\n\t\t\t\t\tfor (var i:number = min_index_x; i <= max_index_x; i++) {\r\n\t\t\t\t\t\tfor (var j:number = min_index_y; j <= max_index_y; j++) {\r\n\t\t\t\t\t\t\tvar index:number = i + j*divisions;\r\n\t\t\t\t\t\t\tvar nodes:Array<number> = cells[index] || (cells[index] = new Array<number>());\r\n\r\n\t\t\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar index_x:number = Math.floor((x - minx)*conversionX);\r\n\t\t\tvar index_y:number = Math.floor((y - miny)*conversionY);\r\n\r\n\t\t\tif ((index_x < 0 || index_x > divisions || index_y < 0 || index_y > divisions))\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodes:Array<number> = cells[index_x + index_y*divisions];\r\n\r\n\t\t\tif (nodes == null)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tvar nodeCount:number = nodes.length;\r\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tif(id2 == index) continue;\r\n\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid0 = nodes[k];\r\n\r\n\t\t\t\tax = positions[id0 * posStride];\r\n\t\t\t\tay = positions[id0 * posStride + 1];\r\n\t\t\t\tbx = positions[id1 * posStride];\r\n\t\t\t\tby = positions[id1 * posStride + 1];\r\n\t\t\t\tcx = positions[id2 * posStride];\r\n\t\t\t\tcy = positions[id2 * posStride + 1];\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\t\tif (dot > 0)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tif (curves) {\r\n\t\t\t\t\t//check if not solid\r\n\t\t\t\t\tif (curves[id0 * curveStride + 2]!=-128) {\r\n\r\n\t\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t\t//here be dragons\r\n\t\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\t\t\t\t\t\tvar az:number = curves[id0 * curveStride];\r\n\r\n\t\t\t\t\t\tif (d > 0 && az == -128)\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\telse if (d < 0 && az == 127)\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thitTestCache.lastCollisionIndex = id2;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//brute force\r\n\t\tfor(var k:number = 0; k < count; k += 3) {\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tif(id2 == index) continue;\r\n\t\t\t\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid0 = k + 2;\r\n\r\n\t\t\tax = positions[id0 * posStride];\r\n\t\t\tay = positions[id0 * posStride + 1];\r\n\t\t\tbx = positions[id1 * posStride];\r\n\t\t\tby = positions[id1 * posStride + 1];\r\n\t\t\tcx = positions[id2 * posStride];\r\n\t\t\tcy = positions[id2 * posStride + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (curves) {\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curves[id0 * curveStride + 2]!=-128) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\tvar az:number = curves[id0 * curveStride];\r\n\t\t\t\t\tif (d > 0 && az == -128) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (d < 0 && az == 127) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\thitTestCache.lastCollisionIndex = id2;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic static getTriangleGraphicsBoxBounds(positionAttributes:AttributesView, output:Box, count:number, offset:number = 0):Box\r\n\t{\r\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\t\tvar posStride:number = positionAttributes.stride;\r\n\r\n\t\tvar pos:number;\r\n\t\tvar minX:number = 0, minY:number = 0, minZ:number = 0;\r\n\t\tvar maxX:number = 0, maxY:number = 0, maxZ:number = 0;\r\n\r\n\t\tvar len:number = count*posStride;\r\n\t\tfor (var i:number = 0; i < len; i += posStride) {\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tmaxX = minX = positions[i];\r\n\t\t\t\tmaxY = minY = positions[i + 1];\r\n\t\t\t\tmaxZ = minZ = (posDim == 3)? positions[i + 2] : 0;\r\n\t\t\t} else {\r\n\t\t\t\tpos = positions[i];\r\n\t\t\t\tif (pos < minX)\r\n\t\t\t\t\tminX = pos;\r\n\t\t\t\telse if (pos > maxX)\r\n\t\t\t\t\tmaxX = pos;\r\n\r\n\t\t\t\tpos = positions[i + 1];\r\n\r\n\t\t\t\tif (pos < minY)\r\n\t\t\t\t\tminY = pos;\r\n\t\t\t\telse if (pos > maxY)\r\n\t\t\t\t\tmaxY = pos;\r\n\r\n\t\t\t\tif (posDim == 3) {\r\n\t\t\t\t\tpos = positions[i + 2];\r\n\r\n\t\t\t\t\tif (pos < minZ)\r\n\t\t\t\t\t\tminZ = pos;\r\n\t\t\t\t\telse if (pos > maxZ)\r\n\t\t\t\t\t\tmaxZ = pos;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Box();\r\n\r\n\t\toutput.x = minX;\r\n\t\toutput.y = minY;\r\n\t\toutput.z = minZ;\r\n\t\toutput.right = maxX;\r\n\t\toutput.bottom = maxY;\r\n\t\toutput.back = maxZ;\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static getTriangleGraphicsSphereBounds(positionAttributes:AttributesView, center:Vector3D, output:Sphere, count:number, offset:number = 0):Sphere\r\n\t{\r\n\t\tvar positions:ArrayBufferView = positionAttributes.get(count, offset);\r\n\t\tvar posDim:number = positionAttributes.dimensions;\r\n\t\tvar posStride:number = positionAttributes.stride;\r\n\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar len = count*posStride;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tfor (var i:number = 0; i < len; i += posStride) {\r\n\t\t\tdistanceX = positions[i] - center.x;\r\n\t\t\tdistanceY = positions[i + 1] - center.y;\r\n\t\t\tdistanceZ = (posDim == 3)? positions[i + 2] - center.z : -center.z;\r\n\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t}\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Sphere();\r\n\t\t\r\n\t\toutput.x = center.x;\r\n\t\toutput.y = center.y;\r\n\t\toutput.z = center.z;\r\n\t\toutput.radius = Math.sqrt(maxRadiusSquared);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n}",
    "export {Cast}\t\t\t\t\t\t\tfrom \"./utils/Cast\";\r\nexport {ElementsUtils}\t\t\t\t\tfrom \"./utils/ElementsUtils\";"
  ],
  "sourceRoot": ""
}
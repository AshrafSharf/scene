{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "colorTransform",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "_sceneChanged",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "child",
    "addChildAt",
    "addChildAtDepth",
    "replace",
    "removeChildAtInternal",
    "removeChildAt",
    "addChildren",
    "childarray",
    "_i",
    "mouseEnabled",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildAtDepth",
    "getDepthIndexInternal",
    "getChildByName",
    "childIndex",
    "getChildDepth",
    "getNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildAtDepth",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "childHit",
    "all_masks",
    "mi_cnt",
    "mask_child",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "isAsset",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "all_hir_masks",
    "hit",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "toString",
    "split",
    "tl",
    "line_width",
    "font_chars",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "_updateQueue",
    "_iUpdateQueueNext",
    "updateEntities",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n/**\n * Provides an abstract base class for nodes in an animation blend tree.\n */\nclass AnimationNodeBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\n\n\tpublic _pStateClass:any;\n\n\tpublic get stateClass():any\n\t{\n\t\treturn this._pStateClass;\n\t}\n\n\t/**\n\t * Creates a new <code>AnimationNodeBase</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AnimationNodeBase.assetType;\n\t}\n}\n\nexport = AnimationNodeBase;",
    "/**\n *\n */\nclass AlignmentMode\n{\n\t/**\n\t *\n\t */\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\n\n\t/**\n\t *\n\t */\n\tpublic static PIVOT_POINT:string = \"pivot\";\n}\n\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.CurveSubGeometry\n */\nclass CurveSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _uvsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _curves:Float2Attributes;\n\tprivate _uvs:Float2Attributes;\n\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _scaleU:number = 1;\n\tprivate _scaleV:number = 1;\n\n\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubGeometry.assetType;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\n\t\tif (value)\n\t\t\tthis._uvsDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get curves():Float2Attributes\n\t{\n\t\treturn this._curves;\n\t}\n\n\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (this._uvsDirty)\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\t//grid stuff - to tidy\n\tprivate cells:Array<Array<number>>;\n\t//TODO - generate this dyanamically based on num tris\n\tprivate devisions:number = 32;\n\tprivate conversionX:number;\n\tprivate conversionY:number;\n\tprivate minx:number;\n\tprivate maxx:number;\n\tprivate miny:number;\n\tprivate maxy:number;\n\n\tprivate getCell(x:number, y:number):number\n\t{\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\n\n\t\t//out of bounds\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\n\n\t\treturn  index_x + index_y * this.devisions;\n\t}\n\tprivate buildGrid():void\n\t{\n\t\t//calculate bounds, ideally via bounding box already computed\n\t\t//if not just loop through and generate min/max\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tthis.minx = Number.MAX_VALUE;\n\t\tthis.maxx = -Number.MAX_VALUE;\n\t\tthis.miny = Number.MAX_VALUE;\n\t\tthis.maxy = -Number.MAX_VALUE;\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\n\t\t{\n\t\t\tvar x:number = positions[k];\n\t\t\tvar y:number = positions[k + 1];\n\n\t\t\tif(x < this.minx) this.minx = x;\n\t\t\tif(x > this.maxx) this.maxx = x;\n\t\t\tif(y < this.miny) this.miny = y;\n\t\t\tif(y > this.maxy) this.maxy = y;\n\t\t}\n\n\t\tvar width:number = this.maxx - this.minx;\n\t\tvar height:number = this.maxy - this.miny;\n\n\n\t\t//now we have bounds start creating grid cells and filling\n\t\tvar maxDevisions:number = 32;\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\n\t\tvar numCells:number = this.devisions * this.devisions;\n\t\tvar cellWidth:number = width/this.devisions;\n\t\tvar cellHeight:number = height/this.devisions;\n\n\t\tthis.conversionX = 1/cellWidth;\n\t\tthis.conversionY = 1/cellHeight;\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\tthis.cells = new Array<Array<number>>(numCells);\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//subtractions to push into positive space\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\n\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\n\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\n\n\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\n\t\t\t{\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\n\t\t\t\t{\n\t\t\t\t\tvar index:number = i + j * this.devisions;\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\n\t\t\t\t\tif(nodes == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnodes = new Array<number>();\n\t\t\t\t\t\tthis.cells[index] = nodes;\n\t\t\t\t\t}\n\t\t\t\t\t//push in the triangle ids\n\t\t\t\t\tnodes.push(id0, id1, id2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\n\t\tvar posDim:number = this.positions.dimensions;\n\t\tvar curveDim:number = this.curves.dimensions;\n\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\n\n\t\tvar id0:number;\n\t\tvar id1:number;\n\t\tvar id2:number;\n\n\t\tvar ax:number;\n\t\tvar ay:number;\n\t\tvar bx:number;\n\t\tvar by:number;\n\t\tvar cx:number;\n\t\tvar cy:number;\n\n\t\t//hard coded min vertex count to bother using a grid for\n\t\tif(this.numVertices > 150){\n\n\n\t\t\tif (this.cells == null) {\n\t\t\t\tthis.buildGrid();\n\t\t\t}\n\t\t\tvar cell:number = this.getCell(x, y);\n\t\t\tif (cell == -1) return false;\n\n\t\t\tvar nodes:Array<number> = this.cells[cell];\n\t\t\tif (nodes == null) return false;\n\n\n\t\t\tfor (var k:number = 0; k < nodes.length; k += 3) {\n\t\t\t\tid0 = nodes[k];\n\t\t\t\tid1 = nodes[k + 1];\n\t\t\t\tid2 = nodes[k + 2];\n\n\t\t\t\tax = positions[id0 * posDim];\n\t\t\t\tay = positions[id0 * posDim + 1];\n\t\t\t\tbx = positions[id1 * posDim];\n\t\t\t\tby = positions[id1 * posDim + 1];\n\t\t\t\tcx = positions[id2 * posDim];\n\t\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t\t//from a to p\n\t\t\t\tvar dx:number = ax - x;\n\t\t\t\tvar dy:number = ay - y;\n\n\t\t\t\t//edge normal (a-b)\n\t\t\t\tvar nx:number = by - ay;\n\t\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot a\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = bx - x;\n\t\t\t\tdy = by - y;\n\t\t\t\tnx = cy - by;\n\t\t\t\tny = -(cx - bx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot b\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tdx = cx - x;\n\t\t\t\tdy = cy - y;\n\t\t\t\tnx = ay - cy;\n\t\t\t\tny = -(ax - cx);\n\n\t\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t\t//console.log(\"dot c\",dot);\n\t\t\t\tif (dot > 0) continue;\n\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t\t//check if not solid\n\t\t\t\tif (curvex != 2) {\n\n\t\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t\t//here be dragons\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\t\tvar vv:number = w;\n\n\t\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t//brute force\n\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\n\t\t{\n\t\t\tid0 = k + 2;\n\t\t\tid1 = k + 1;\n\t\t\tid2 = k + 0;\n\n\t\t\tax = positions[id0 * posDim];\n\t\t\tay = positions[id0 * posDim + 1];\n\t\t\tbx = positions[id1 * posDim];\n\t\t\tby = positions[id1 * posDim + 1];\n\t\t\tcx = positions[id2 * posDim];\n\t\t\tcy = positions[id2 * posDim + 1];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - x;\n\t\t\tvar dy:number = ay - y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = bx - x;\n\t\t\tdy = by - y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tdx = cx - x;\n\t\t\tdy = cy - y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0) continue;\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = x - ax;\n\t\t\t\tvar v2y:number = y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\n\n\t\t\t\t//here be dragons\n\t\t\t\tvar uu:number = 0.5 * v + w;\n\t\t\t\tvar vv:number = w;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\n\t\t\t\tif (d > 0 && az == -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (d < 0 && az == 1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setCurves(array:Array<number>, offset?:number);\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setCurves(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._curves)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._curves.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._curves);\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._curves);\n\n\t\tthis._verticesDirty[this._curves.id] = false;\n\t}\n\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tthis._curves.dispose();\n\t\tthis._curves = null;\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():CurveSubGeometry\n\t{\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.CurveSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.CurveSubMesh\n */\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\n\n\tprivate _subGeometry:CurveSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn CurveSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t */\n\tpublic get subGeometry():CurveSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new CurveSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\n\t * @param material An optional material used to render this CurveSubMesh.\n\t */\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n * The DisplayObject class is the base class for all objects that can be\n * placed on the display list. The display list manages all objects displayed\n * in flash. Use the DisplayObjectContainer class to arrange the\n * display objects in the display list. DisplayObjectContainer objects can\n * have child display objects, while other display objects, such as Shape and\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\n * children.\n *\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\n * and <i>y</i> position of an object, as well as more advanced properties of\n * the object such as its transformation matrix. </p>\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception. </p>\n *\n * <p>All display objects inherit from the DisplayObject class.</p>\n *\n * <p>The DisplayObject class itself does not include any APIs for rendering\n * content onscreen. For that reason, if you want create a custom subclass of\n * the DisplayObject class, you will want to extend one of its subclasses that\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\n *\n * <p>The DisplayObject class contains several broadcast events. Normally, the\n * target of any particular event is a specific DisplayObject instance. For\n * example, the target of an <code>added</code> event is the specific\n * DisplayObject instance that was added to the display list. Having a single\n * target restricts the placement of event listeners to that target and in\n * some cases the target's ancestors on the display list. With broadcast\n * events, however, the target is not a specific DisplayObject instance, but\n * rather all DisplayObject instances, including those that are not on the\n * display list. This means that you can add a listener to any DisplayObject\n * instance to listen for broadcast events. In addition to the broadcast\n * events listed in the DisplayObject class's Events table, the DisplayObject\n * class also inherits two broadcast events from the EventDispatcher class:\n * <code>activate</code> and <code>deactivate</code>.</p>\n *\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\n * longer begin with the underscore(_) character.</p>\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n * \n * @event added            Dispatched when a display object is added to the\n *                         display list. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event addedToScene     Dispatched when a display object is added to the on\n *                         scene display list, either directly or through the\n *                         addition of a sub tree in which the display object\n *                         is contained. The following methods trigger this\n *                         event:\n *                         <code>DisplayObjectContainer.addChild()</code>,\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\n *                         entering a new frame. If the playhead is not\n *                         moving, or if there is only one frame, this event\n *                         is dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\n *                         exiting the current frame. All frame scripts have\n *                         been run. If the playhead is not moving, or if\n *                         there is only one frame, this event is dispatched\n *                         continuously in conjunction with the frame rate.\n *                         This event is a broadcast event, which means that\n *                         it is dispatched by all display objects with a\n *                         listener registered for this event.\n * @event frameConstructed [broadcast event] Dispatched after the constructors\n *                         of frame display objects have run but before frame\n *                         scripts have run. If the playhead is not moving, or\n *                         if there is only one frame, this event is\n *                         dispatched continuously in conjunction with the\n *                         frame rate. This event is a broadcast event, which\n *                         means that it is dispatched by all display objects\n *                         with a listener registered for this event.\n * @event removed          Dispatched when a display object is about to be\n *                         removed from the display list. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event removedFromScene Dispatched when a display object is about to be\n *                         removed from the display list, either directly or\n *                         through the removal of a sub tree in which the\n *                         display object is contained. Two methods of the\n *                         DisplayObjectContainer class generate this event:\n *                         <code>removeChild()</code> and\n *                         <code>removeChildAt()</code>.\n *\n *                         <p>The following methods of a\n *                         DisplayObjectContainer object also generate this\n *                         event if an object must be removed to make room for\n *                         the new object: <code>addChild()</code>,\n *                         <code>addChildAt()</code>, and\n *                         <code>setChildIndex()</code>. </p>\n * @event render           [broadcast event] Dispatched when the display list\n *                         is about to be updated and rendered. This event\n *                         provides the last opportunity for objects listening\n *                         for this event to make changes before the display\n *                         list is rendered. You must call the\n *                         <code>invalidate()</code> method of the Scene\n *                         object each time you want a <code>render</code>\n *                         event to be dispatched. <code>Render</code> events\n *                         are dispatched to an object only if there is mutual\n *                         trust between it and the object that called\n *                         <code>Scene.invalidate()</code>. This event is a\n *                         broadcast event, which means that it is dispatched\n *                         by all display objects with a listener registered\n *                         for this event.\n *\n *                         <p><b>Note: </b>This event is not dispatched if the\n *                         display is not rendering. This is the case when the\n *                         content is either minimized or obscured. </p>\n */\nclass DisplayObject extends AssetBase implements IBitmapDrawable\n{\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\n\tprivate _elementsDirty:boolean;\n\tprivate _loaderInfo:LoaderInfo;\n\tprivate _mouseX:number;\n\tprivate _mouseY:number;\n\tprivate _root:DisplayObjectContainer;\n\tprivate _bounds:Rectangle;\n\tpublic _pBoxBounds:Box;\n\tprivate _boxBoundsInvalid:boolean = true;\n\tpublic _pSphereBounds:Sphere;\n\tprivate _sphereBoundsInvalid:boolean = true;\n\tprivate _debugVisible:boolean;\n\tpublic _pName:string;\n\n\tpublic _pScene:Scene;\n\tpublic _pParent:DisplayObjectContainer;\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\n\tpublic _pSceneTransformDirty:boolean;\n\tpublic _pIsEntity:boolean;\n    public _iMaskID:number = -1;\n    public _iMasks:DisplayObject[] = null;\n\n\tprivate _explicitPartition:Partition;\n\tpublic _pImplicitPartition:Partition;\n\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\n\tprivate _sceneChanged:DisplayObjectEvent;\n\tprivate _transform:Transform;\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\n\tprivate _matrix3DDirty:boolean;\n    public _pColorTransform:ColorTransform;\n\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\n\tprivate _inverseSceneTransformDirty:boolean;\n\tprivate _scenePosition:Vector3D = new Vector3D();\n\tprivate _scenePositionDirty:boolean;\n\tprivate _explicitVisibility:boolean = true;\n\tpublic _pImplicitVisibility:boolean = true;\n\tprivate _explicitMouseEnabled:boolean = true;\n\tpublic _pImplicitMouseEnabled:boolean = true;\n\tprivate _listenToSceneTransformChanged:boolean;\n\tprivate _listenToSceneChanged:boolean;\n\n\tprivate _positionDirty:boolean;\n\tprivate _rotationDirty:boolean;\n\tprivate _skewDirty:boolean;\n\tprivate _scaleDirty:boolean;\n\n\tprivate _positionChanged:DisplayObjectEvent;\n\tprivate _rotationChanged:DisplayObjectEvent;\n\tprivate _skewChanged:DisplayObjectEvent;\n\tprivate _scaleChanged:DisplayObjectEvent;\n\n\tprivate _rotationX:number = 0;\n\tprivate _rotationY:number = 0;\n\tprivate _rotationZ:number = 0;\n\tprivate _eulers:Vector3D = new Vector3D();\n\tprivate _flipY:Matrix3D = new Matrix3D();\n\n\tprivate _listenToPositionChanged:boolean;\n\tprivate _listenToRotationChanged:boolean;\n\tprivate _listenToSkewChanged:boolean;\n\tprivate _listenToScaleChanged:boolean;\n\tprivate _zOffset:number = 0;\n\n\tpublic _width:number;\n\tpublic _height:number;\n\tpublic _depth:number;\n\n\tprivate _skewX:number = 0;\n\tprivate _skewY:number = 0;\n\tprivate _skewZ:number = 0;\n\tprivate _scaleX:number = 1;\n\tprivate _scaleY:number = 1;\n\tprivate _scaleZ:number = 1;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _pivot:Vector3D = new Vector3D();\n\tprivate _pivotScale:Vector3D = new Vector3D();\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\n\tprivate _pivotZero:boolean = true;\n\tprivate _pivotDirty:boolean;\n\tprivate _pos:Vector3D = new Vector3D();\n\tprivate _rot:Vector3D = new Vector3D();\n\tprivate _ske:Vector3D = new Vector3D();\n\tprivate _sca:Vector3D = new Vector3D();\n\tprivate _transformComponents:Array<Vector3D>;\n\n\tpublic _pIgnoreTransform:boolean = false;\n\n\tprivate _shaderPickingDetails:boolean;\n\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\n\n\tpublic _boundsType:string;\n\n\tpublic _pPickingCollider:IPickingCollider;\n\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\n\n\tpublic _iSourcePrefab:PrefabBase;\n\n    private _globalColorTransformChanged:DisplayObjectEvent;\n    private _globalColorTransformDirty:boolean;\n    private _globalColorTransform:ColorTransform = new ColorTransform();\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\n    private _onColorTransformChangedDelegate:(event:Event) => void;\n    private _inheritColorTransform:boolean = false;\n\n    public get inheritColorTransform():boolean\n    {\n        return this._inheritColorTransform;\n    }\n\n    public set inheritColorTransform(value:boolean)\n    {\n        this._inheritColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n\n    public get globalColorTransform():ColorTransform\n    {\n        if (this._globalColorTransformDirty)\n            this._updateGlobalColorTransform();\n\n        return this._globalColorTransform;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\n\n\t/**\n\t * Indicates the alpha transparency value of the object specified. Valid\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\n\t * even though they are invisible.\n\t */\n\tpublic get alpha():number\n    {\n        return this._pColorTransform.alphaMultiplier;\n    }\n\n    public set alpha(value:number)\n    {\n        this._pColorTransform.alphaMultiplier = value;\n    }\n\n    public get colorTransform()\n    {\n        return this._pColorTransform;\n    }\n\n    public set colorTransform(value:ColorTransform)\n    {\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\n        if (this._pColorTransform)\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\n\n\n        this._pSetColorTransform(value);\n\n        if (value)\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\n    }\n\n\t/**\n\t * A value from the BlendMode class that specifies which blend mode to use. A\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\n\t * bitmap-filled square shape to the vector render. If you attempt to set\n\t * this property to an invalid value, Flash runtimes set the value to\n\t * <code>BlendMode.NORMAL</code>.\n\t *\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\n\t * object. Each pixel is composed of three constituent colors(red, green,\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\n\t * the movie clip with the corresponding color of the pixel in the\n\t * background. For example, if <code>blendMode</code> is set to\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\n\t * value of the display object with the red value of the background, and uses\n\t * the lighter of the two as the value for the red component of the displayed\n\t * color.</p>\n\t *\n\t * <p>The following table describes the <code>blendMode</code> settings. The\n\t * BlendMode class defines string values you can use. The illustrations in\n\t * the table show <code>blendMode</code> values applied to a circular display\n\t * object(2) superimposed on another display object(1).</p>\n\t */\n\tpublic blendMode:BlendMode;\n\n\t/**\n\t *\n\t */\n\tpublic get boundsType():string\n\t{\n\t\treturn this._boundsType;\n\t}\n\n\tpublic set boundsType(value:string)\n\t{\n\t\tif (this._boundsType == value)\n\t\t\treturn;\n\n\t\tthis._boundsType = value;\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].updateBounds();\n\t}\n\n\t/**\n\t * If set to <code>true</code>, NME will use the software renderer to cache\n\t * an internal bitmap representation of the display object. For native targets,\n\t * this is often much slower than the default hardware renderer. When you\n\t * are using the Flash target, this caching may increase performance for display\n\t * objects that contain complex vector content.\n\t *\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\n\t * to the bitmap instead of the main display. If\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\n\t * then copied to the main display as unstretched, unrotated pixels snapped\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\n\t * instead of being stretched.</p>\n\t *\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\n\t * object is drawn to the off-screen bitmap using that matrix and the\n\t * stretched and/or rotated results of that rendering are used to draw the\n\t * object to the main display.</p>\n\t *\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\n\t * property is set to <code>true</code>.</p>\n\t *\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\n\t * <code>true</code>, the rendering does not change, however the display\n\t * object performs pixel snapping automatically. The animation speed can be\n\t * significantly faster depending on the complexity of the vector content.\n\t * </p>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\n\t * <code>true</code> whenever you apply a filter to a display object(when\n\t * its <code>filter</code> array is not empty), and if a display object has a\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\n\t * <code>true</code> for that display object, even if you set the property to\n\t * <code>false</code>. If you clear all filters for a display object, the\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\n\t *\n\t * <p>A display object does not use a bitmap even if the\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\n\t * instead renders from vector data in the following cases:</p>\n\t *\n\t * <ul>\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\n\t * in width.</li>\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\n\t * </ul>\n\t *\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\n\t * that have mostly static content and that do not scale and rotate\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\n\t * performance increases when the movie clip is translated(when its <i>x</i>\n\t * and <i>y</i> position is changed).</p>\n\t */\n\tpublic cacheAsBitmap:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic castsShadows:boolean = true;\n\n\t/**\n\t * Indicates the depth of the display object, in pixels. The depth is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\n\t * set <code>depth</code> to a different value.</p>\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this.getBox().depth*this.scaleZ;\n\t}\n\n\tpublic set depth(val:number)\n\t{\n\t\tif (this._depth == val)\n\t\t\treturn;\n\n\t\tthis._depth = val;\n\n\t\tthis._setScaleZ(val/this.getBox().depth);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\n\t */\n\tpublic get eulers():Vector3D\n\t{\n\t\tthis._eulers.x = this.rotationX;\n\t\tthis._eulers.y = this.rotationY;\n\t\tthis._eulers.z = this.rotationZ;\n\n\t\treturn this._eulers;\n\t}\n\n\tpublic set eulers(value:Vector3D)\n\t{\n\t\tthis.rotationX = value.x;\n\t\tthis.rotationY = value.y;\n\t\tthis.rotationZ = value.z;\n\t}\n\n\t/**\n\t * An object that can contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * An indexed array that contains each filter object currently associated\n\t * with the display object. The flash.filters package contains several\n\t * classes that define specific filters you can use.\n\t *\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\n\t * you must make a temporary copy of the entire <code>filters</code> array,\n\t * modify the temporary array, then assign the value of the temporary array\n\t * back to the <code>filters</code> array. You cannot directly add a new\n\t * filter object to the <code>filters</code> array.</p>\n\t *\n\t * <p>To add a filter by using ActionScript, perform the following steps\n\t * (assume that the target display object is named\n\t * <code>myDisplayObject</code>):</p>\n\t *\n\t * <ol>\n\t *   <li>Create a new filter object by using the constructor method of your\n\t * chosen filter class.</li>\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\n\t * array.</li>\n\t *   <li>Assign the value of the temporary array to the\n\t * <code>myDisplayObject.filters</code> array.</li>\n\t * </ol>\n\t *\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\n\t * a temporary array. Instead, you can directly assign an array literal that\n\t * contains one or more filter objects that you create. The first example in\n\t * the Examples section adds a drop shadow filter by using code that handles\n\t * both defined and undefined <code>filters</code> arrays.</p>\n\t *\n\t * <p>To modify an existing filter object, you must use the technique of\n\t * modifying a copy of the <code>filters</code> array:</p>\n\t *\n\t * <ol>\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\n\t * array, such as one named <code>myFilters</code>.</li>\n\t *   <li>Modify the property by using the temporary array,\n\t * <code>myFilters</code>. For example, to set the quality property of the\n\t * first filter in the array, you could use the following code:\n\t * <code>myFilters[0].quality = 1;</code></li>\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\n\t * array.</li>\n\t * </ol>\n\t *\n\t * <p>At load time, if a display object has an associated filter, it is\n\t * marked to cache itself as a transparent bitmap. From this point forward,\n\t * as long as the display object has a valid filter list, the player caches\n\t * the display object as a bitmap. This source bitmap is used as a source\n\t * image for the filter effects. Each display object usually has two bitmaps:\n\t * one with the original unfiltered source display object and another for the\n\t * final image after filtering. The final image is used when rendering. As\n\t * long as the display object does not change, the final image does not need\n\t * updating.</p>\n\t *\n\t * <p>The flash.filters package includes classes for filters. For example, to\n\t * create a DropShadow filter, you would write:</p>\n\t *\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel4</code> output).\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader doesn't specify any image input or\n\t *                       the first input is not an <code>image4</code> input.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\n\t *                       and the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\n\t *                       ByteArray or Vector.<Number> instance as a shader\n\t *                       input, and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput object, or the specified values\n\t *                       don't match the amount of data in the input data.\n\t *                       See the <code>ShaderInput.input</code> property for\n\t *                       more information.\n\t */\n//\t\tpublic filters:Array<Dynamic>;\n\n\t/**\n\t * Indicates the height of the display object, in pixels. The height is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content (such as an empty sprite) has a height of 0, even if you try to\n\t * set <code>height</code> to a different value.</p>\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this.getBox().height*this.scaleY;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tthis._height = val;\n\n\t\tthis._setScaleY(val/this.getBox().height);\n\t}\n\n\t/**\n\t * Indicates the instance container index of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByIndex()</code> method of the display object\n\t * container.\n\t *\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\n\t */\n\tpublic get index():number\n\t{\n\t\tif (this._pParent)\n\t\t\treturn this._pParent.getChildIndex(this);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get inverseSceneTransform():Matrix3D\n\t{\n\t\tif (this._inverseSceneTransformDirty) {\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\n\t\t\tthis._inverseSceneTransform.invert();\n\t\t\tthis._inverseSceneTransformDirty = false;\n\t\t}\n\t\treturn this._inverseSceneTransform;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get ignoreTransform():boolean\n\t{\n\t\treturn this._pIgnoreTransform;\n\t}\n\n\tpublic set ignoreTransform(value:boolean)\n\t{\n\t\tif (this._pIgnoreTransform == value)\n\t\t\treturn;\n\n\t\tthis._pIgnoreTransform = value;\n\n\t\tif (value) {\n\t\t\tthis._pSceneTransform.identity();\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\n\t\t}\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get isEntity()\n\t{\n\t\treturn this._pIsEntity;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object containing information about loading the file\n\t * to which this display object belongs. The <code>loaderInfo</code> property\n\t * is defined only for the root display object of a SWF file or for a loaded\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\n\t * a display object named <code>myDisplayObject</code>, use\n\t * <code>myDisplayObject.root.loaderInfo</code>.\n\t *\n\t * <p>A large SWF file can monitor its download by calling\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\n\t * func)</code>.</p>\n\t */\n\tpublic get loaderInfo():LoaderInfo\n\t{\n\t\treturn this._loaderInfo;\n\t}\n\n\t/**\n\t * The calling display object is masked by the specified <code>mask</code>\n\t * object. To ensure that masking works when the Stage is scaled, the\n\t * <code>mask</code> display object must be in an active part of the display\n\t * list. The <code>mask</code> object itself is not drawn. Set\n\t * <code>mask</code> to <code>null</code> to remove the mask.\n\t *\n\t * <p>To be able to scale a mask object, it must be on the display list. To\n\t * be able to drag a mask Sprite object(by calling its\n\t * <code>startDrag()</code> method), it must be on the display list. To call\n\t * the <code>startDrag()</code> method for a mask sprite based on a\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\n\t *\n\t * <p>When display objects are cached by setting the\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\n\t * mask and the display object being masked must be part of the same cached\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\n\t * child of the display object. If an ancestor of the display object on the\n\t * display list is cached, then the mask must be a child of that ancestor or\n\t * one of its descendents. If more than one ancestor of the masked object is\n\t * cached, then the mask must be a descendent of the cached container closest\n\t * to the masked object in the display list.</p>\n\t *\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\n\t * more than one calling display object. When the <code>mask</code> is\n\t * assigned to a second display object, it is removed as the mask of the\n\t * first object, and that object's <code>mask</code> property becomes\n\t * <code>null</code>.</p>\n\t */\n\tpublic mask:DisplayObject;\n\n\t/**\n\t * Specifies whether this object receives mouse, or other user input,\n\t * messages. The default value is <code>true</code>, which means that by\n\t * default any InteractiveObject instance that is on the display list\n\t * receives mouse events or other user input events. If\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\n\t * not receive any mouse events(or other user input events like keyboard\n\t * events). Any children of this instance on the display list are not\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\n\t * children of an object on the display list, use\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseEnabled():boolean\n\t{\n\t\treturn this._explicitMouseEnabled;\n\t}\n\n\tpublic set mouseEnabled(value:boolean)\n\t{\n\t\tif (this._explicitMouseEnabled == value)\n\t\t\treturn;\n\n\t\tthis._explicitMouseEnabled = value;\n\t}\n\n\n\t/**\n\t * Indicates the x coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseX():number\n\t{\n\t\treturn this._mouseX;\n\t}\n\n\t/**\n\t * Indicates the y coordinate of the mouse or user input device position, in\n\t * pixels.\n\t *\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\n\t * coordinate will reflect the non-rotated object.</p>\n\t */\n\tpublic get mouseY():number\n\t{\n\t\treturn this._mouseY;\n\t}\n\n\t/**\n\t * Indicates the instance name of the DisplayObject. The object can be\n\t * identified in the child list of its parent display object container by\n\t * calling the <code>getChildByName()</code> method of the display object\n\t * container.\n\t *\n\t * @throws IllegalOperationError If you are attempting to set this property\n\t *                               on an object that was placed on the timeline\n\t *                               in the Flash authoring tool.\n\t */\n\tpublic get name() :string\n    {\n        return this._pName;\n    }\n\n    public set name(value : string)\n    {\n        this._pName = value;\n    }\n\n\t/**\n\t *\n\t */\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\n\n\t/**\n\t * Indicates the DisplayObjectContainer object that contains this display\n\t * object. Use the <code>parent</code> property to specify a relative path to\n\t * display objects that are above the current display object in the display\n\t * list hierarchy.\n\t *\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\n\t * display list as in the following:</p>\n\t *\n\t * @throws SecurityError The parent display object belongs to a security\n\t *                       sandbox to which you do not have access. You can\n\t *                       avoid this situation by having the parent movie call\n\t *                       the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic get parent():DisplayObjectContainer\n\t{\n\t\treturn this._pParent;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get partition():Partition\n\t{\n\t\treturn this._explicitPartition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tif (this._explicitPartition == value)\n\t\t\treturn;\n\n\t\tthis._explicitPartition = value;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pickingCollider():IPickingCollider\n\t{\n\t\treturn this._pPickingCollider;\n\t}\n\n\tpublic set pickingCollider(value:IPickingCollider)\n\t{\n\t\tthis._pPickingCollider = value;\n\t}\n\n\t/**\n\t * Defines the local point around which the object rotates.\n\t */\n\tpublic get pivot():Vector3D\n\t{\n\t\treturn this._pivot;\n\t}\n\n\n\tpublic set pivot(pivot:Vector3D)\n\t{\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\n\t\t\treturn;\n\n\t\tthis._pivot.x = pivot.x;\n\t\tthis._pivot.y = pivot.y;\n\t\tthis._pivot.z = pivot.z;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * For a display object in a loaded SWF file, the <code>root</code> property\n\t * is the top-most display object in the portion of the display list's tree\n\t * structure represented by that SWF file. For a Bitmap object representing a\n\t * loaded image file, the <code>root</code> property is the Bitmap object\n\t * itself. For the instance of the main class of the first SWF file loaded,\n\t * the <code>root</code> property is the display object itself. The\n\t * <code>root</code> property of the Scene object is the Scene object itself.\n\t * The <code>root</code> property is set to <code>null</code> for any display\n\t * object that has not been added to the display list, unless it has been\n\t * added to a display object container that is off the display list but that\n\t * is a child of the top-most display object in a loaded SWF file.\n\t *\n\t * <p>For example, if you create a new Sprite object by calling the\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\n\t * is <code>null</code> until you add it to the display list(or to a display\n\t * object container that is off the display list but that is a child of the\n\t * top-most display object in a SWF file).</p>\n\t *\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\n\t * file may not be on the display list, the top-most display object in the\n\t * SWF file has its <code>root</code> property set to itself. The Loader\n\t * object does not have its <code>root</code> property set until it is added\n\t * as a child of a display object for which the <code>root</code> property is\n\t * set.</p>\n\t */\n\tpublic get root():DisplayObjectContainer\n\t{\n\t\treturn this._root;\n\t}\n\n\t/**\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\n\t * this range are added to or subtracted from 360 to obtain a value within\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\n\t * is the same as <code> my_video.rotation = 90</code>.\n\t */\n\tpublic rotation:number; //TODO\n\n\t/**\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationX(val:number)\n\t{\n\t\tif (this.rotationX == val)\n\t\t\treturn;\n\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationY(val:number)\n\t{\n\t\tif (this.rotationY == val)\n\t\t\treturn;\n\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\n\t * from its original orientation relative to the 3D parent container. Values\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\n\t * represent counterclockwise rotation. Values outside this range are added\n\t * to or subtracted from 360 to obtain a value within the range.\n\t */\n\tpublic get rotationZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\tpublic set rotationZ(val:number)\n\t{\n\t\tif (this.rotationZ == val)\n\t\t\treturn;\n\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\n\n\t\tthis.invalidateRotation();\n\t}\n\n\t/**\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\n\t * the entire display object is scaled normally when any scale transformation\n\t * is applied.\n\t *\n\t * <p>When you define the <code>scale9Grid</code> property, the display\n\t * object is divided into a grid with nine regions based on the\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\n\t * grid. The eight other regions of the grid are the following areas: </p>\n\t *\n\t * <ul>\n\t *   <li>The upper-left corner outside of the rectangle</li>\n\t *   <li>The area above the rectangle </li>\n\t *   <li>The upper-right corner outside of the rectangle</li>\n\t *   <li>The area to the left of the rectangle</li>\n\t *   <li>The area to the right of the rectangle</li>\n\t *   <li>The lower-left corner outside of the rectangle</li>\n\t *   <li>The area below the rectangle</li>\n\t *   <li>The lower-right corner outside of the rectangle</li>\n\t * </ul>\n\t *\n\t * <p>You can think of the eight regions outside of the center(defined by\n\t * the rectangle) as being like a picture frame that has special rules\n\t * applied to it when scaled.</p>\n\t *\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\n\t * is scaled, all text and gradients are scaled normally; however, for other\n\t * types of objects the following rules apply:</p>\n\t *\n\t * <ul>\n\t *   <li>Content in the center region is scaled normally. </li>\n\t *   <li>Content in the corners is not scaled. </li>\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\n\t * Content in the left and right regions is scaled vertically only.</li>\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\n\t * fit their shapes.</li>\n\t * </ul>\n\t *\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\n\t * the <code>scale9Grid</code> property is ignored).</p>\n\t *\n\t * <p>For example, consider the following display object and a rectangle that\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\n\t *\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\n\t * object to be used as a component, in which edge regions retain the same\n\t * width when the component is scaled.</p>\n\t *\n\t * @throws ArgumentError If you pass an invalid argument to the method.\n\t */\n\tpublic scale9Grid:Rectangle;\n\n\t/**\n\t * Indicates the horizontal scale(percentage) of the object as applied from\n\t * the registration point. The default registration point is(0,0). 1.0\n\t * equals 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleX;\n\t}\n\n\tpublic set scaleX(val:number)\n\t{\n\t\t//remove absolute width\n\t\tthis._width = null;\n\n\t\tthis._setScaleX(val);\n\t}\n\n\t/**\n\t * Indicates the vertical scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\n\t */\n\tpublic get scaleY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleY;\n\t}\n\n\tpublic set scaleY(val:number)\n\t{\n\t\t//remove absolute height\n\t\tthis._height = null;\n\n\t\tthis._setScaleY(val);\n\t}\n\n\t/**\n\t * Indicates the depth scale(percentage) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t * 1.0 is 100% scale.\n\t *\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\n\t * <code>y</code> and <code>z</code> property values, which are defined in\n\t * whole pixels. </p>\n\t */\n\tpublic get scaleZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._scaleZ;\n\t}\n\n\tpublic set scaleZ(val:number)\n\t{\n\t\t//remove absolute depth\n\t\tthis._depth = null;\n\n\t\tthis._setScaleZ(val);\n\t}\n\n\t/**\n\t * Indicates the horizontal skew(angle) of the object as applied from\n\t * the registration point. The default registration point is(0,0).\n\t */\n\tpublic get skewX():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewX;\n\t}\n\n\tpublic set skewX(val:number)\n\t{\n\t\tif (this.skewX == val)\n\t\t\treturn;\n\n\t\tthis._skewX = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the vertical skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewY():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewY;\n\t}\n\n\tpublic set skewY(val:number)\n\t{\n\t\tif (this.skewY == val)\n\t\t\treturn;\n\n\t\tthis._skewY = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t * Indicates the depth skew(angle) of an object as applied from the\n\t * registration point of the object. The default registration point is(0,0).\n\t */\n\tpublic get skewZ():number\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\treturn this._skewZ;\n\t}\n\n\tpublic set skewZ(val:number)\n\t{\n\t\tif (this.skewZ == val)\n\t\t\treturn;\n\n\t\tthis._skewZ = val;\n\n\t\tthis.invalidateSkew();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\tif (this._scenePositionDirty) {\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\n\t\t\t} else {\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\n\t\t\t}\n\n\t\t\tthis._scenePositionDirty = false;\n\t\t}\n\t\treturn this._scenePosition;\n\t}\n\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._pSceneTransform;\n\t}\n\n\t/**\n\t * The scroll rectangle bounds of the display object. The display object is\n\t * cropped to the size defined by the rectangle, and it scrolls within the\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\n\t * of the <code>scrollRect</code> object.\n\t *\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\n\t * display object's coordinate space and are scaled just like the overall\n\t * display object. The corner bounds of the cropped window on the scrolling\n\t * display object are the origin of the display object(0,0) and the point\n\t * defined by the width and height of the rectangle. They are not centered\n\t * around the origin, but use the origin to define the upper-left corner of\n\t * the area. A scrolled display object always scrolls in whole pixel\n\t * increments. </p>\n\t *\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\n\t * an object up and down by setting the <code>y</code> property of the\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\n\t * 90° and you scroll it left and right, the display object actually scrolls\n\t * up and down.</p>\n\t */\n\tpublic scrollRect:Rectangle;\n\n\t/**\n\t *\n\t */\n\tpublic get shaderPickingDetails():boolean\n\t{\n\t\treturn this._shaderPickingDetails;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._debugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (value == this._debugVisible)\n\t\t\treturn;\n\n\t\tthis._debugVisible = value;\n\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\n\t}\n\n\t/**\n\t * An object with properties pertaining to a display object's matrix, color\n\t * transform, and pixel bounds. The specific properties  -  matrix,\n\t * colorTransform, and three read-only properties\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\n\t * Transform class.\n\t *\n\t * <p>Each of the transform object's properties is itself an object. This\n\t * concept is important because the only way to set new values for the matrix\n\t * or colorTransform objects is to create a new object and copy that object\n\t * into the transform.matrix or transform.colorTransform property.</p>\n\t *\n\t * <p>For example, to increase the <code>tx</code> value of a display\n\t * object's matrix, you must make a copy of the entire matrix object, then\n\t * copy the new object into the matrix property of the transform object:</p>\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\n\t *\n\t * <p>You cannot directly set the <code>tx</code> property. The following\n\t * code has no effect on <code>myDisplayObject</code>: </p>\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\n\t * 10; </code></pre>\n\t *\n\t * <p>You can also copy an entire transform object and assign it to another\n\t * display object's transform property. For example, the following code\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\n\t * <code>myNewDisplayObj</code>:</p>\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\n\t *\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\n\t * same values for its matrix, color transform, and pixel bounds as the old\n\t * display object, <code>myOldDisplayObj</code>.</p>\n\t *\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\n\t * available, for color transforms.</p>\n\t */\n\tpublic get transform():Transform\n\t{\n\t\treturn this._transform;\n\t}\n\n\t/**\n\t * Whether or not the display object is visible. Display objects that are not\n\t * visible are disabled. For example, if <code>visible=false</code> for an\n\t * InteractiveObject instance, it cannot be clicked.\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn this._explicitVisibility;\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tif (this._explicitVisibility == value)\n\t\t\treturn;\n\n\t\tthis._explicitVisibility = value;\n\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\n\t}\n\n\t/**\n\t * Indicates the width of the display object, in pixels. The width is\n\t * calculated based on the bounds of the content of the display object. When\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\n\t * is adjusted accordingly, as shown in the following code:\n\t *\n\t * <p>Except for TextField and Video objects, a display object with no\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\n\t * <code>width</code> to a different value.</p>\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this.getBox().width*this.scaleX;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tthis._width = val;\n\n\t\tthis._setScaleX(val/this.getBox().width);\n\t}\n\n\t/**\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tthis._x = this._matrix3D.rawData[12] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\n\t * object is inside a DisplayObjectContainer that has transformations, it is\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\n\t * DisplayObjectContainer's children inherit a coordinate system that is\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\n\t * registration point position.\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tthis._y = this._matrix3D.rawData[13] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\n\t * instance relative to the 3D parent container. The z property is used for\n\t * 3D coordinates, not screen or pixel coordinates.\n\t *\n\t * <p>When you set a <code>z</code> property for a display object to\n\t * something other than the default value of <code>0</code>, a corresponding\n\t * Matrix3D object is automatically created. for adjusting a display object's\n\t * position and orientation in three dimensions. When working with the\n\t * z-axis, the existing behavior of x and y properties changes from screen or\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\n\t *\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\n\t *\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\n\t */\n\tpublic get z():number\n\t{\n\t\treturn this._z;\n\t}\n\n\tpublic set z(val:number)\n\t{\n\t\tif (this._z == val)\n\t\t\treturn;\n\n\t\tthis._z = this._matrix3D.rawData[14] = val;\n\n\t\tthis.invalidatePosition();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get zOffset():number\n\t{\n\t\treturn this._zOffset;\n\t}\n\n\tpublic set zOffset(value:number)\n\t{\n\t\tthis._zOffset = value;\n\t}\n\n\t/**\n\t * Creates a new <code>DisplayObject</code> instance.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\t// Cached vector of transformation components used when\n\t\t// recomposing the transform matrix in updateTransform()\n\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\n\t\tthis._transformComponents = new Array<Vector3D>(4);\n\n\t\tthis._transformComponents[0] = this._pos;\n\t\tthis._transformComponents[1] = this._rot;\n\t\tthis._transformComponents[2] = this._ske;\n\t\tthis._transformComponents[3] = this._sca;\n\n\t\t//creation of associated transform object\n\t\tthis._transform = new Transform(this);\n\n\t\tthis._matrix3D.identity();\n\n\t\tthis._flipY.appendScale(1, -1, 1);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\n\t\t\t\tthis._listenToSceneChanged = true;\n\t\t\t\tbreak;\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\n\t\t\t\tthis._listenToSceneTransformChanged = true;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObject = new DisplayObject();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = this.name;\n\n        clone._iMaskID = this._iMaskID;\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this.parent)\n\t\t\tthis.parent.removeChild(this);\n\n\t\twhile (this._pRenderables.length)\n\t\t\tthis._pRenderables[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic disposeAsset()\n\t{\n\t\tthis.dispose();\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the area of the display object relative\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\n\t * Consider the following code, which shows how the rectangle returned can\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\n\t * you pass to the method:\n\t *\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to display coordinates, or display coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * <p>The <code>getBounds()</code> method is similar to the\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\n\t * an example, see the description of the <code>getRect()</code> method.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that defines the boundary of the display object, based\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\n\t * parameter, excluding any strokes on shapes. The values that the\n\t * <code>getRect()</code> method returns are the same or smaller than those\n\t * returned by the <code>getBounds()</code> method.\n\t *\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\n\t * <code>globalToLocal()</code> methods to convert the display object's local\n\t * coordinates to Scene coordinates, or Scene coordinates to local\n\t * coordinates, respectively.</p>\n\t *\n\t * @param targetCoordinateSpace The display object that defines the\n\t *                              coordinate system to use.\n\t * @return The rectangle that defines the area of the display object relative\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\n\t *         system.\n\t */\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\n\t{\n\t\treturn this._bounds; //TODO\n\t}\n\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//TODO targetCoordinateSpace\n\t\tif (this._boxBoundsInvalid) {\n\t\t\tthis._pUpdateBoxBounds();\n\n\t\t\t//scale updates if absolute dimensions are detected\n\t\t\tif (this._width != null)\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\n\n\t\t\tif (this._height != null)\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\n\n\t\t\tif (this._depth != null)\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\n\t\t}\n\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\n\t\t\treturn this._pBoxBounds;\n\n\t\tif (targetCoordinateSpace == this._pParent)\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\n\t\telse\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\n\t}\n\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tif (this._sphereBoundsInvalid)\n\t\t\tthis._pUpdateSphereBounds();\n\n\t\treturn this._pSphereBounds;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\n\t * to the display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\n\t * because they relate to the origin(0,0) of the main display area. Then\n\t * pass the Point instance as the parameter to the\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\n\t * object instead of the origin of the Scene.</p>\n\t *\n\t * @param point An object created with the Point class. The Point object\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the display object.\n\t */\n\tpublic globalToLocal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\n\t * three-dimensional display object's(local) coordinates.\n\t *\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\n\t * y and z values that you assign to the Vector3D object represent global\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\n\t * <code>position</code> parameter.\n\t * The method returns three-dimensional coordinates as a Vector3D object\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\n\t * are relative to the origin of the three-dimensional display object.</p>\n\t *\n\t * @param point A Vector3D object representing global x, y and z coordinates in\n\t *              the scene.\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\n\t *         display object.\n\t */\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.inverseSceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Evaluates the bounding box of the display object to see if it overlaps or\n\t * intersects with the bounding box of the <code>obj</code> display object.\n\t *\n\t * @param obj The display object to test against.\n\t * @return <code>true</code> if the bounding boxes of the display objects\n\t *         intersect; <code>false</code> if not.\n\t */\n\tpublic hitTestObject(obj:DisplayObject):boolean\n\t{\n\t\tvar objBox:Box = obj.getBox();\n\t\tif(!objBox) return false;\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\n\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\n\n\t\tvar box:Box = this.getBox();\n\t\tif(!box) return false;\n\n\t\t//first check all points against targer box\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\n\n\t\t//now test against obj box\n\t\tvar n0x:number = topRight.y - topLeft.y;\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\n\n\t\tvar n1x:number = bottomRight.y - topRight.y;\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\n\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\n\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\n\n\t\tvar p0x:number = box.left - topLeft.x;\n\t\tvar p0y:number = box.top - topLeft.y;\n\t\tvar p1x:number = box.left - topRight.x;\n\t\tvar p1y:number = box.top - topRight.y;\n\t\tvar p2x:number = box.left - bottomRight.x;\n\t\tvar p2y:number = box.top - bottomRight.y;\n\t\tvar p3x:number = box.left - bottomLeft.x;\n\t\tvar p3y:number = box.top - bottomLeft.y;\n\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.top - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.top - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.top - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.top - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if topRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.left - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.left - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.left - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.left - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomLeft is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\tp0x = box.right - topLeft.x;\n\t\tp0y = box.bottom - topLeft.y;\n\t\tp1x = box.right - topRight.x;\n\t\tp1y = box.bottom - topRight.y;\n\t\tp2x = box.right - bottomRight.x;\n\t\tp2y = box.bottom - bottomRight.y;\n\t\tp3x = box.right - bottomLeft.x;\n\t\tp3y = box.bottom - bottomLeft.y;\n\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\n\n\t\t//check if bottomRight is contained\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\n\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @param maskFlag Whether to check against the object when it is used as mask\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @param    target        The vector defining the point to be looked at\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\n\t */\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\n\t{\n\n\t\tvar yAxis:Vector3D;\n\t\tvar zAxis:Vector3D;\n\t\tvar xAxis:Vector3D;\n\t\tvar raw:Array<number>;\n\n\t\tif (upAxis == null)\n\t\t\tupAxis = Vector3D.Y_AXIS;\n\t\telse\n\t\t\tupAxis.normalize();\n\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\n\t\tzAxis.normalize();\n\n\t\txAxis = upAxis.crossProduct(zAxis);\n\t\txAxis.normalize();\n\n\t\tif (xAxis.length < 0.05) {\n\t\t\txAxis.x = upAxis.y;\n\t\t\txAxis.y = upAxis.x;\n\t\t\txAxis.z = 0;\n\t\t\txAxis.normalize();\n\t\t}\n\n\t\tyAxis = zAxis.crossProduct(xAxis);\n\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\traw[0] = xAxis.x;\n\t\traw[1] = xAxis.y;\n\t\traw[2] = xAxis.z;\n\t\traw[3] = 0;\n\n\t\traw[4] = yAxis.x;\n\t\traw[5] = yAxis.y;\n\t\traw[6] = yAxis.z;\n\t\traw[7] = 0;\n\n\t\traw[8] = zAxis.x;\n\t\traw[9] = zAxis.y;\n\t\traw[10] = zAxis.z;\n\t\traw[11] = 0;\n\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.copyRawDataFrom(raw);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Converts the <code>point</code> object from the display object's(local)\n\t * coordinates to the Scene(global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\n\t * coordinates from values that are relative to the origin(0,0) of a\n\t * specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Point instance that you created as the parameter to\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\n\t * Scene instead of the origin of the display object.</p>\n\t *\n\t * @param point The name or identifier of a point created with the Point\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\n\t *              properties.\n\t * @return A Point object with coordinates relative to the Scene.\n\t */\n\tpublic localToGlobal(point:Point):Point\n\t{\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(new Vector3D(point.x, point.y, 0));\n\t\treturn new Point(pos.x, pos.y);\n\t}\n\n\t/**\n\t * Converts a three-dimensional point of the three-dimensional display\n\t * object's(local) coordinates to a three-dimensional point in the Scene\n\t * (global) coordinates.\n\t *\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\n\t * a specific display object(local coordinates) to values that are relative to\n\t * the origin of the Scene(global coordinates).</p>\n\t *\n\t * <p>To use this method, first create an instance of the Point class. The\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\n\t * because they relate to the origin of the display object.</p>\n\t *\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\n\t * the origin of the Scene instead of the origin of the display object.</p>\n\t *\n\t * @param position A Vector3D object containing either a three-dimensional\n\t *                position or the coordinates of the three-dimensional\n\t *                display object.\n\t * @return A Vector3D object representing a three-dimensional position in\n\t *         the Scene.\n\t */\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(position);\n\t}\n\n\t/**\n\t * Moves the 3d object directly to a point in space\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\n\tpublic moveTo(dx:number, dy:number, dz:number)\n\t{\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\n\t\t\treturn;\n\n\t\tthis.x = dx;\n\t\tthis.y = dy;\n\t\tthis.z = dz;\n\t}\n\n\t/**\n\t * Moves the local point around which the object rotates.\n\t *\n\t * @param    dx        The amount of movement along the local x axis.\n\t * @param    dy        The amount of movement along the local y axis.\n\t * @param    dz        The amount of movement along the local z axis.\n\t */\n\tpublic movePivot(dx:number, dy:number, dz:number)\n\t{\n\t\tif (dx == 0 && dy == 0 && dz == 0)\n\t\t\treturn;\n\n\t\tthis._pivot.x += dx;\n\t\tthis._pivot.y += dy;\n\t\tthis._pivot.z += dz;\n\n\t\tthis.invalidatePivot();\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local x-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic pitch(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\n\t}\n\n\tpublic reset_to_init_state():void\n\t{\n\t\tthis.visible=true;\n\t\tif(this._iMatrix3D)\n\t\t\tthis._iMatrix3D.identity();\n\t\tif(this.colorTransform)\n\t\t\tthis.colorTransform.clear();\n\n\t\tthis.pInvalidateSceneTransform();\n\t}\n\t/**\n\t *\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\n\t\t\tvar scale:Vector3D = comps[3];\n\t\t\tcomps[0] = this.scenePosition;\n\t\t\tscale.x = this.scaleX;\n\t\t\tscale.y = this.scaleY;\n\t\t\tscale.z = this.scaleZ;\n\t\t\tthis._orientationMatrix.recompose(comps);\n\n\t\t\t//add in case of pivot\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\n\n\t\t\treturn this._orientationMatrix;\n\t\t}\n\n\t\treturn this.sceneTransform;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local z-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic roll(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\n\t}\n\n\t/**\n\t * Rotates the 3d object around an axis by a defined angle\n\t *\n\t * @param    axis        The vector defining the axis of rotation\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic rotate(axis:Vector3D, angle:number)\n\t{\n\t\tvar m:Matrix3D = new Matrix3D();\n\t\tm.prependRotation(angle, axis);\n\n\t\tvar vec:Vector3D = m.decompose()[1];\n\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\n\t}\n\n\t/**\n\t * Rotates the 3d object directly to a euler angle\n\t *\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\n\t * @param    az        The angle in degrees of the rotation around the z axis.\n\t */\n\tpublic rotateTo(ax:number, ay:number, az:number)\n\t{\n\t\tthis.rotationX = ax;\n\t\tthis.rotationY = ay;\n\t\tthis.rotationZ = az;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\tif (this.hasEventListener(type, listener))\n\t\t\treturn;\n\n\t\tswitch (type) {\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\n\t\t\t\tthis._listenToPositionChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\n\t\t\t\tthis._listenToRotationChanged = false;\n\t\t\t\tbreak;\n\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\n\t\t\t\tthis._listenToSkewChanged = false;\n\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\n\t\t\t\tthis._listenToScaleChanged = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translate(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis.x += x*len;\n\t\tthis.y += y*len;\n\t\tthis.z += z*len;\n\t}\n\n\t/**\n\t * Moves the 3d object along a vector by a defined length\n\t *\n\t * @param    axis        The vector defining the axis of movement\n\t * @param    distance    The length of the movement\n\t */\n\tpublic translateLocal(axis:Vector3D, distance:number)\n\t{\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\n\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\n\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\n\n\t\tthis.x = this._pos.x;\n\t\tthis.y = this._pos.y;\n\t\tthis.z = this._pos.z;\n\t}\n\n\t/**\n\t * Rotates the 3d object around it's local y-axis\n\t *\n\t * @param    angle        The amount of rotation in degrees\n\t */\n\tpublic yaw(angle:number)\n\t{\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iController:ControllerBase;\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iAssignedPartition():Partition\n\t{\n\t\treturn this._pImplicitPartition;\n\t}\n\n\t/**\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t *\n\t * @internal\n\t */\n\tpublic get _iMatrix3D():Matrix3D\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\tthis._pUpdateMatrix3D();\n\n\t\tif (this._pivotDirty)\n\t\t\tthis._pUpdatePivot();\n\n\t\treturn this._matrix3D;\n\t}\n\n\tpublic set _iMatrix3D(val:Matrix3D)\n\t{\n\t\tfor (var i:number = 0; i < 12; i++)\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\n\n\t\tthis.x = val.rawData[12];\n\t\tthis.y = val.rawData[13];\n\t\tthis.z = val.rawData[14];\n\n\t\tthis._elementsDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\n\t{\n\t\tif (!this._pPickingCollisionVO)\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\n\n\t\treturn this._pPickingCollisionVO;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic iSetParent(value:DisplayObjectContainer)\n\t{\n        if (this._pParent) {\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n        }\n\n\t\tthis._pParent = value;\n\n        if (value) {\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\n\t\t} else {\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\n\t\t\tthis._pUpdateImplicitVisibility(true);\n\t\t\tthis._pUpdateImplicitPartition(null, null);\n\t\t}\n\n        this._invalidateGlobalColorTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\treturn;\n\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\n\t\tif (!this._sceneTransformChanged)\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\n\n\t\tthis.queueDispatch(this._sceneTransformChanged);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tthis._pImplicitMouseEnabled = value;\n\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\n\t{\n\t\tvar sceneChanged:boolean = this._pScene != scene;\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//unregister partition from current scene\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\n\n\t\t\t//unregister entity from current partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\t// assign parent implicit partition if no explicit one is given\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\n\n\t\t//assign scene\n\t\tif (sceneChanged)\n\t\t\tthis._pScene = scene;\n\n\t\tif (this._pScene && this._pImplicitPartition) {\n\t\t\t//register partition with scene\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\n\n\t\t\t//register entity with new partition\n\t\t\tif (this._pIsEntity)\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\n\t\t}\n\n\t\tif (sceneChanged && this._pScene)\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\n\n\t\tif (sceneChanged) {\n\t\t\tif (!this._pIgnoreTransform)\n\t\t\t\tthis.pInvalidateSceneTransform();\n\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateMatrix3D()\n\t{\n\t\tif (this._elementsDirty)\n\t\t\tthis.updateElements();\n\n\t\tthis._pos.x = this._x;\n\t\tthis._pos.y = this._y;\n\t\tthis._pos.z = this._z;\n\n\t\tthis._rot.x = this._rotationX;\n\t\tthis._rot.y = this._rotationY;\n\t\tthis._rot.z = this._rotationZ;\n\n\t\tthis._ske.x = this._skewX;\n\t\tthis._ske.y = this._skewY;\n\t\tthis._ske.z = this._skewZ;\n\n\t\tthis._sca.x = this._scaleX;\n\t\tthis._sca.y = this._scaleY;\n\t\tthis._sca.z = this._scaleZ;\n\n\t\tthis._matrix3D.recompose(this._transformComponents);\n\n\t\tthis._matrix3DDirty = false;\n\t}\n\n\tpublic _pUpdatePivot()\n\t{\n\t\tif (!this._pivotZero) {\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\n\t\t}\n\n\t\tthis._pivotDirty = false;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.updateController();\n\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\n\t\t} else {\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\n\t\t}\n\n\t\tthis._positionDirty = false;\n\t\tthis._rotationDirty = false;\n\t\tthis._skewDirty = false;\n\t\tthis._scaleDirty = false;\n\t\tthis._pSceneTransformDirty = false;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._pRenderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\n\n\t\tthis._pRenderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic _iInternalUpdate()\n\t{\n\t\tif (this._iController)\n\t\t\tthis._iController.update();\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\n\n\t\tthis._queuedEvents.length = 0;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsVisible():boolean\n\t{\n\t\treturn this._pImplicitVisibility;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iIsMouseEnabled():boolean\n\t{\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iSetScene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\n\t}\n\n\n\t/**\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\n\t *\n\t * @private\n\t */\n\tprivate invalidateMatrix3D():void\n\t{\n\t\tif (this._matrix3DDirty)\n\t\t\treturn;\n\n\t\tthis._matrix3DDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tpublic invalidatePartition()\n\t{\n\t\tvar len:number = this._entityNodes.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._entityNodes[i].invalidatePartition();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePivot()\n\t{\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\n\n\t\tif (this._pivotDirty)\n\t\t\treturn;\n\n\t\tthis._pivotDirty = true;\n\n\t\tthis.invalidateMatrix3D();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidatePosition()\n\t{\n\t\tif (this._positionDirty)\n\t\t\treturn;\n\n\t\tthis._positionDirty = true;\n\n\t\tif (!this._pIgnoreTransform)\n\t\t\tthis.pInvalidateSceneTransform();\n\n\t\tif (!this._pivotZero)\n\t\t\tthis.invalidatePivot();\n\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateRotation(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._rotationDirty)\n\t\t\treturn;\n\n\t\tthis._rotationDirty = true;\n\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateSkew(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._skewDirty)\n\t\t\treturn;\n\n\t\tthis._skewDirty = true;\n\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateScale(matrixDirty:boolean = true)\n\t{\n\t\tif (matrixDirty)\n\t\t\tthis.invalidateMatrix3D();\n\n\t\tif (this._scaleDirty)\n\t\t\treturn;\n\n\t\tthis._scaleDirty = true;\n\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\n\t}\n\n\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tthis._entityNodes.push(entityNode);\n\n\t\treturn entityNode;\n\t}\n\n\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\n\t{\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\n\n\t\tthis._entityNodes.splice(index, 1);\n\n\t\treturn entityNode;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pInvalidateBounds()\n\t{\n\t\tthis._boxBoundsInvalid = true;\n\t\tthis._sphereBoundsInvalid = true;\n\n\t\tif (this.isEntity)\n\t\t\tthis.invalidatePartition();\n\n\t\tif (this._pParent)\n\t\t\tthis._pParent._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tthis._boxBoundsInvalid = false;\n\n\t\tif (this._pBoxBounds == null)\n\t\t\tthis._pBoxBounds = new Box();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tthis._sphereBoundsInvalid = false;\n\n\t\tif (this._pSphereBounds == null)\n\t\t\tthis._pSphereBounds = new Sphere();\n\t}\n\n    _updateGlobalColorTransform()\n    {\n        if (this._inheritColorTransform && this._pParent) {\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\n            if (this._pColorTransform)\n                this._globalColorTransform.prepend(this._pColorTransform);\n        } else {\n            if (this._pColorTransform)\n                this._globalColorTransform.copyFrom(this._pColorTransform);\n            else\n                this._globalColorTransform.clear();\n        }\n\n        this._globalColorTransformDirty = false;\n    }\n\n    // this method is to bypass that TypeScript can't call super setters.\n    _pSetColorTransform(value:ColorTransform)\n    {\n        this._pColorTransform = value;\n        this._invalidateGlobalColorTransform();\n    }\n\n    _invalidateGlobalColorTransform()\n    {\n        this._globalColorTransformDirty = true;\n\n        if (!this._globalColorTransformChanged)\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\n\n        this.dispatchEvent(this._globalColorTransformChanged);\n    }\n\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n    private onColorTransformChanged(event:Event)\n    {\n        this._invalidateGlobalColorTransform();\n    }\n\n\tprivate queueDispatch(event:Event)\n\t{\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\tprivate updateElements()\n\t{\n\t\tthis._elementsDirty = false;\n\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\n\t\tvar vec:Vector3D;\n\n\t\tvec = elements[1];\n\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\n\t\t\tthis._rotationX = vec.x;\n\t\t\tthis._rotationY = vec.y;\n\t\t\tthis._rotationZ = vec.z;\n\n\t\t\tthis.invalidateRotation(false);\n\t\t}\n\n\t\tvec = elements[2];\n\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\n\t\t\tthis._skewX = vec.x;\n\t\t\tthis._skewY = vec.y;\n\t\t\tthis._skewZ = vec.z;\n\n\t\t\tthis.invalidateSkew(false);\n\t\t}\n\n\t\tvec = elements[3];\n\n\t\tthis._width = null;\n\t\tthis._height = null;\n\t\tthis._depth = null;\n\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\n\t\t\tthis._scaleX = vec.x;\n\t\t\tthis._scaleY = vec.y;\n\t\t\tthis._scaleZ = vec.z;\n\n\t\t\tthis.invalidateScale(false);\n\t\t}\n\t}\n\n\tprivate _setScaleX(val:number)\n\t{\n\t\tif (this.scaleX == val)\n\t\t\treturn;\n\n\t\tthis._scaleX = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleY(val:number)\n\t{\n\t\tif (this.scaleY == val)\n\t\t\treturn;\n\n\t\tthis._scaleY = val;\n\n\t\tthis.invalidateScale();\n\t}\n\n\tprivate _setScaleZ(val:number)\n\t{\n\t\tif (this.scaleZ == val)\n\t\t\treturn;\n\n\t\tthis._scaleZ = val;\n\n\t\tthis.invalidateScale();\n\t}\n}\n\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\n\n/**\n *\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\n * the SubGeometries to its respective TriangleSubMesh objects.\n *\n *\n *\n * @see away.core.base.SubGeometry\n * @see away.entities.Mesh\n *\n * @class Geometry\n */\nclass Geometry extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Geometry]\";\n\n\tprivate _subGeometries:Array<SubGeometryBase>;\n\n\tpublic get assetType():string\n\t{\n\t\treturn Geometry.assetType;\n\t}\n\n\t/**\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\n\t */\n\tpublic get subGeometries():Array<SubGeometryBase>\n\t{\n\t\treturn this._subGeometries;\n\t}\n\n\t/**\n\t * Creates a new Geometry object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tvar len:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\n\t}\n\n\t/**\n\t * Adds a new TriangleSubGeometry object to the list.\n\t * @param subGeometry The TriangleSubGeometry object to be added.\n\t */\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.push(subGeometry);\n\n\t\tsubGeometry.parentGeometry = this;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Removes a new TriangleSubGeometry object from the list.\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\n\t */\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\n\t{\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\n\n\t\tsubGeometry.parentGeometry = null;\n\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\n\n\t\tthis.iInvalidateBounds(subGeometry);\n\t}\n\n\t/**\n\t * Clones the geometry.\n\t * @return An exact duplicate of the current Geometry object.\n\t */\n\tpublic clone():Geometry\n\t{\n\t\tvar clone:Geometry = new Geometry();\n\t\tvar len:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\n\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scale(scale);\n\t}\n\n\t/**\n\t * Clears all resources used by the Geometry object, including SubGeometries.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\n\t\t\tthis.removeSubGeometry(subGeom);\n\t\t\tsubGeom.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Scales the uv coordinates (tiling)\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\n\t */\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tvar numSubGeoms:number = this._subGeometries.length;\n\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\n\t}\n\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\n\t{\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\n\t}\n}\n\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nclass LightBase extends DisplayObjectContainer\n{\n\tpublic static assetType:string = \"[asset Light]\";\n\n\tprivate _color:number = 0xffffff;\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _ambient:number = 0;\n\tpublic _iAmbientR:number = 0;\n\tpublic _iAmbientG:number = 0;\n\tpublic _iAmbientB:number = 0;\n\n\tprivate _specular:number = 1;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\n\tprivate _diffuse:number = 1;\n\tpublic _iDiffuseR:number = 1;\n\tpublic _iDiffuseG:number = 1;\n\tpublic _iDiffuseB:number = 1;\n\n\tprivate _castsShadows:boolean = false;\n\n\tprivate _shadowMapper:ShadowMapperBase;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tif (this._castsShadows == value)\n\t\t\treturn;\n\n\t\tthis._castsShadows = value;\n\n\t\tif (value) {\n\t\t\tif (this._shadowMapper == null)\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\n\n\t\t\tthis._shadowMapper.light = this;\n\t\t} else {\n\t\t\tthis._shadowMapper.dispose();\n\t\t\tthis._shadowMapper = null;\n\t\t}\n\t\t//*/\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\n\t}\n\n\tpublic pCreateShadowMapper():ShadowMapperBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get diffuse():number\n\t{\n\t\treturn this._diffuse;\n\t}\n\n\tpublic set diffuse(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._diffuse = value;\n\t\tthis.updateDiffuse();\n\t}\n\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tthis._color = value;\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\n\t\tthis._colorB = (this._color & 0xff)/0xff;\n\n\t\tthis.updateDiffuse();\n\t\tthis.updateSpecular();\n\t}\n\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tthis._ambient = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._ambientColor = value;\n\t\tthis.updateAmbient();\n\t}\n\n\tprivate updateAmbient()\n\t{\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn LightBase.assetType;\n\t}\n\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = this._colorR*this._specular;\n\t\tthis._iSpecularG = this._colorG*this._specular;\n\t\tthis._iSpecularB = this._colorB*this._specular;\n\t}\n\n\tprivate updateDiffuse()\n\t{\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\n\t}\n\n\tpublic get shadowMapper():ShadowMapperBase\n\t{\n\t\treturn this._shadowMapper;\n\t}\n\n\tpublic set shadowMapper(value:ShadowMapperBase)\n\t{\n\t\tthis._shadowMapper = value;\n\t\tthis._shadowMapper.light = this;\n\t}\n}\n\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class LineSubGeometry\n */\nclass LineSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\n\tprivate _positions:AttributesView;\n\tprivate _thickness:Float1Attributes;\n\tprivate _colors:Byte4Attributes;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubGeometry.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():AttributesView\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():Float1Attributes\n\t{\n\t\treturn this._thickness;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colors():Byte4Attributes\n\t{\n\t\tif (!this._colors)\n\t\t\tthis.setColors(this._colors);\n\n\t\treturn this._colors;\n\t}\n\n\t/**\n\t * The total amount of vertices in the LineSubGeometry.\n\t */\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\t\t\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tif (index/6 & 1) {\n\t\t\t\t\tpositions[index] = values[i + 3];\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\n\t\t\t\t\tpositions[index + 3] = values[i];\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\n\t\t\t\t} else {\n\t\t\t\t\tpositions[index] = values[i];\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\n\t\t\t\t}\n\n\t\t\t\tindex += 6;\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tvar o:number = index/6 - 4;\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis._positions.set(positions, offset*4);\n\n\t\t\tthis.setIndices(indices, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the thickness.\n\t */\n\tpublic setThickness(array:Array<number>, offset?:number);\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\n\tpublic setThickness(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Float1Attributes) {\n\t\t\tthis._thickness = <Float1Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._thickness)\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\n\n\t\t\tvar i:number = 0;\n\t\t\tvar j:number = 0;\n\t\t\tvar index:number = 0;\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\n\n\t\t\twhile (i < values.length) {\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\n\n\t\t\t\tif (++j == 4) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tthis._thickness.set(thickness, offset*4);\n\t\t} else if (this._thickness) {\n\t\t\tthis._thickness.dispose();\n\t\t\tthis._thickness = null;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._thickness);\n\n\t\tthis._verticesDirty[this._thickness.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setColors(array:Array<number>, offset?:number);\n\tpublic setColors(float32Array:Float32Array, offset?:number);\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\n\tpublic setColors(values:any, offset:number = 0)\n\t{\n\t\tif (values) {\n\t\t\tif (values == this._colors)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Byte4Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\n\t\t\t\tthis._colors = <Byte4Attributes> values;\n\t\t\t} else {\n\t\t\t\tif (!this._colors)\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\n\n\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\tvar index:number = 0;\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\tif (index/4 & 1) {\n\t\t\t\t\t\tcolors[index] = values[i + 4];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolors[index] = values[i];\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (++j == 4) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\ti += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 4;\n\t\t\t\t}\n\n\t\t\t\tthis._colors.set(values, offset*4);\n\t\t\t}\n\t\t} else {\n\t\t\t//auto-derive colors\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._colors);\n\n\t\tthis._verticesDirty[this._colors.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions = null;\n\t\tthis._thickness = null;\n\t\tthis._colors = null;\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():LineSubGeometry\n\t{\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\tclone.setIndices(this._pIndices.clone());\n\n\t\tclone.setPositions(this._positions.clone());\n\t\tclone.setThickness(this._thickness.clone());\n\t\tclone.setColors(this._colors.clone());\n\n\t\treturn clone;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.LineSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.LineSubMesh\n */\nclass LineSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\n\n\tprivate _subGeometry:LineSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSubMesh.assetType;\n\t}\n\n\t/**\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t */\n\tpublic get subGeometry():LineSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new LineSubMesh object\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\n\t * @param material An optional material used to render this LineSubMesh.\n\t */\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The LoaderInfo class provides information about a loaded SWF file or a\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\n * any display object. The information provided includes load progress, the\n * URLs of the loader and loaded content, the number of bytes total for the\n * media, and the nominal height and width of the media.\n *\n * <p>You can access LoaderInfo objects in two ways: </p>\n *\n * <ul>\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\n * object -  The <code>contentLoaderInfo</code> property is always available\n * for any Loader object. For a Loader object that has not called the\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\n * sufficiently loaded, attempting to access many of the properties of the\n * <code>contentLoaderInfo</code> property throws an error.</li>\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\n * </ul>\n *\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\n * information about the content that the Loader object is loading, whereas\n * the <code>loaderInfo</code> property of a DisplayObject provides\n * information about the root SWF file for that display object. </p>\n *\n * <p>When you use a Loader object to load a display object(such as a SWF\n * file or a bitmap), the <code>loaderInfo</code> property of the display\n * object is the same as the <code>contentLoaderInfo</code> property of the\n * Loader object(<code>DisplayObject.loaderInfo =\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\n * the only way to access the LoaderInfo for the instance of the main class of\n * the SWF file.</p>\n *\n * <p>The following diagram shows the different uses of the LoaderInfo\n * object - for the instance of the main class of the SWF file, for the\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\n * <code>loaderInfo</code> property of a loaded object:</p>\n *\n * <p>When a loading operation is not complete, some properties of the\n * <code>contentLoaderInfo</code> property of a Loader object are not\n * available. You can obtain some properties, such as\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\n * can access all properties of the <code>loaderInfo</code> object and the\n * loaded image or SWF file.</p>\n *\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\n *\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\n * \n * @event complete   Dispatched when data has loaded successfully. In other\n *                   words, it is dispatched when all the content has been\n *                   downloaded and the loading has finished. The\n *                   <code>complete</code> event is always dispatched after\n *                   the <code>init</code> event. The <code>init</code> event\n *                   is dispatched when the object is ready to access, though\n *                   the content may still be downloading.\n * @event httpStatus Dispatched when a network request is made over HTTP and\n *                   an HTTP status code can be detected.\n * @event init       Dispatched when the properties and methods of a loaded\n *                   SWF file are accessible and ready for use. The content,\n *                   however, can still be downloading. A LoaderInfo object\n *                   dispatches the <code>init</code> event when the following\n *                   conditions exist:\n *                   <ul>\n *                     <li>All properties and methods associated with the\n *                   loaded object and those associated with the LoaderInfo\n *                   object are accessible.</li>\n *                     <li>The constructors for all child objects have\n *                   completed.</li>\n *                     <li>All ActionScript code in the first frame of the\n *                   loaded SWF's main timeline has been executed.</li>\n *                   </ul>\n *\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\n *                   when the first frame of a movie or animation is loaded.\n *                   The movie is then accessible and can be added to the\n *                   display list. The complete movie, however, can take\n *                   longer to download. The <code>Event.COMPLETE</code> is\n *                   only dispatched once the full movie is loaded.</p>\n *\n *                   <p>The <code>init</code> event always precedes the\n *                   <code>complete</code> event.</p>\n * @event ioError    Dispatched when an input or output error occurs that\n *                   causes a load operation to fail.\n * @event open       Dispatched when a load operation starts.\n * @event progress   Dispatched when data is received as the download\n *                   operation progresses.\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\n *                   object is removed by using the <code>unload()</code>\n *                   method of the Loader object, or when a second load is\n *                   performed by the same Loader object and the original\n *                   content is removed prior to the load beginning.\n */\nclass LoaderInfo extends EventDispatcher\n{\n\tprivate _bytes:ByteArray;\n\tprivate _bytesLoaded:number;\n\tprivate _bytesTotal:number;\n\tprivate _content:DisplayObject;\n\tprivate _contentType:string;\n\tprivate _loader:Loader;\n\tprivate _url:string;\n\t/**\n\t * The bytes associated with a LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get bytes():ByteArray\n\t{\n\t\treturn this._bytes;\n\t}\n\n\t/**\n\t * The number of bytes that are loaded for the media. When this number equals\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\n\t */\n\tpublic get bytesLoaded():number /*int*/\n\t{\n\t\treturn this._bytesLoaded;\n\t}\n\n\t/**\n\t * The number of compressed bytes in the entire media file.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\n\t * is 0. After the first <code>progress</code> event from the Loader object,\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\n\t * downloaded.</p>\n\t */\n\tpublic get bytesTotal():number /*int*/\n\t{\n\t\treturn this._bytesTotal;\n\t}\n\n\t/**\n\t * The loaded object associated with this LoaderInfo object.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the loaded object due to security\n\t *                       restrictions. This situation can occur, for\n\t *                       instance, when a Loader object attempts to access\n\t *                       the <code>contentLoaderInfo.content</code> property\n\t *                       and it is not granted security permission to access\n\t *                       the loaded content.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\n\t * enough of the file has loaded in order to determine the type. The\n\t * following list gives the possible values:\n\t * <ul>\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\n\t *   <li><code>\"image/jpeg\"</code></li>\n\t *   <li><code>\"image/gif\"</code></li>\n\t *   <li><code>\"image/png\"</code></li>\n\t * </ul>\n\t */\n\tpublic get contentType():string\n\t{\n\t\treturn this._contentType;\n\t}\n\n\t/**\n\t * The Loader object associated with this LoaderInfo object. If this\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\n\t * of the main class of the SWF file, no Loader object is associated.\n\t * \n\t * @throws SecurityError If the object accessing this API is prevented from\n\t *                       accessing the Loader object because of security\n\t *                       restrictions. This can occur, for instance, when a\n\t *                       loaded SWF file attempts to access its\n\t *                       <code>loaderInfo.loader</code> property and it is\n\t *                       not granted security permission to access the\n\t *                       loading SWF file.\n\t *\n\t *                       <p>For more information related to security, see the\n\t *                       Flash Player Developer Center Topic: <a\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                       scope=\"external\">Security</a>.</p>\n\t */\n\tpublic get loader():Loader\n\t{\n\t\treturn this._loader;\n\t}\n\n\t/**\n\t * The URL of the media being loaded.\n\t *\n\t * <p>Before the first <code>progress</code> event is dispatched by this\n\t * LoaderInfo object's corresponding Loader object, the value of the\n\t * <code>url</code> property might reflect only the initial URL specified in\n\t * the call to the <code>load()</code> method of the Loader object. After the\n\t * first <code>progress</code> event, the <code>url</code> property reflects\n\t * the media's final URL, after any redirects and relative URLs are\n\t * resolved.</p>\n\t *\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\n\t * see the <code>isURLInaccessible</code> property for details.</p>\n\t */\n\tpublic get url():string\n\t{\n\t\treturn this._url;\n\t}\n}\n\nexport = LoaderInfo;",
    "class OrientationMode\n{\n\t/**\n\t *\n\t */\n\tpublic static DEFAULT:string = \"default\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\n\n\t/**\n\t *\n\t */\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\n}\n\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass SubGeometryBase extends AssetBase\n{\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\n\t\n\tpublic _pIndices:Short3Attributes;\n\n\tprivate _numElements:number = 0;\n\n\tpublic _concatenatedBuffer:AttributesBuffer;\n\n\tprivate _indicesUpdated:SubGeometryEvent;\n\n\tpublic _verticesDirty:Object = new Object();\n\tpublic _verticesUpdated:Object = new Object();\n\n\tpublic get concatenatedBuffer():AttributesBuffer\n\t{\n\t\treturn this._concatenatedBuffer;\n\t}\n\n\t/**\n\t * The raw index data that define the faces.\n\t */\n\tpublic get indices():Short3Attributes\n\t{\n\t\treturn this._pIndices;\n\t}\n\n\t/**\n\t * The total amount of triangles in the TriangleSubGeometry.\n\t */\n\tpublic get numElements():number\n\t{\n\t\treturn this._numElements;\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper();\n\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic invalidate():void\n\t{\n\t\tvar len:number = this._subGeometryVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._subGeometryVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._subGeometryVO.length)\n\t\t\tthis._subGeometryVO[0].dispose();\n\n\t\tthis._pIndices.dispose();\n\t\tthis._pIndices = null;\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values instanceof Short3Attributes) {\n\t\t\tif (this._pIndices)\n\t\t\t\tthis.notifyIndicesDispose();\n\n\t\t\tthis._pIndices = <Short3Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._pIndices)\n\t\t\t\tthis._pIndices = new Short3Attributes();\n\n\t\t\tthis._pIndices.set(values, offset);\n\t\t} else if (this._pIndices) {\n\t\t\tthis._pIndices.dispose();\n\t\t\tthis._pIndices = null;\n\n\t\t\tthis.notifyIndicesDispose();\n\t\t}\n\n\t\tif (this._pIndices) {\n\t\t\tthis._numElements = this._pIndices.count;\n\n\t\t\tthis.notifyIndicesUpdate();\n\t\t} else {\n\t\t\tthis._numElements = 0;\n\t\t}\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateBounds()\n\t{\n\t\tif (this.parentGeometry)\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\n\t}\n\n\t/**\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\n\t *\n\t * @private\n\t */\n\tpublic parentGeometry:Geometry;\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tprivate notifyIndicesUpdate()\n\t{\n\t\tif (!this._indicesUpdated)\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\n\n\t\tthis.dispatchEvent(this._indicesUpdated);\n\t}\n\n\tprivate notifyIndicesDispose()\n\t{\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\n\t}\n\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\n\t\t\treturn;\n\n\t\tthis._verticesDirty[attributesView.id] = true;\n\n\t\tif (!this._verticesUpdated[attributesView.id])\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\n\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\n\t}\n\n\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\n\t{\n\t\tif (!attributesView)\n\t\t\treturn;\n\n\t\tattributesView.dispose();\n\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\n\n\t\tthis._verticesDirty[attributesView.id] = null;\n\t\tthis._verticesUpdated[attributesView.id] = null;\n\t}\n\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.push(subGeometryVO);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\n\t{\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\n\n\t\treturn subGeometryVO;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass SubMeshBase extends AssetBase\n{\n\tpublic _pParentMesh:Mesh;\n\tpublic _uvTransform:UVTransform;\n\tpublic _colorTransform:ColorTransform;\n\n\tpublic _iIndex:number = 0;\n\n\tpublic _material:MaterialBase;\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._pParentMesh.animator;\n\t}\n\n\t/**\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material || this._pParentMesh.material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t * The scene transform object that transforms from model to world space.\n\t */\n\tpublic get sceneTransform():Matrix3D\n\t{\n\t\treturn this._pParentMesh.sceneTransform;\n\t}\n\n\t/**\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\n\t */\n\tpublic get parentMesh():Mesh\n\t{\n\t\treturn this._pParentMesh;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t * Creates a new SubMeshBase object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.material = null;\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\t/**\n\t *\n\t * @param camera\n\t * @returns {away.geom.Matrix3D}\n\t */\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\n\t{\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _iInvalidateRenderableGeometry()\n\t{\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].invalidateGeometry();\n\t}\n\n\tpublic _iGetExplicitMaterial():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n}\n\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * The Transform class provides access to color adjustment properties and two-\n * or three-dimensional transformation objects that can be applied to a\n * display object. During the transformation, the color or the orientation and\n * position of a display object is adjusted(offset) from the current values\n * or coordinates to new values or coordinates. The Transform class also\n * collects data about color and two-dimensional matrix transformations that\n * are applied to a display object and all of its parent objects. You can\n * access these combined transformations through the\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\n * properties.\n *\n * <p>To apply color transformations: create a ColorTransform object, set the\n * color adjustments using the object's methods and properties, and then\n * assign the <code>colorTransformation</code> property of the\n * <code>transform</code> property of the display object to the new\n * ColorTransformation object.</p>\n *\n * <p>To apply two-dimensional transformations: create a Matrix object, set\n * the matrix's two-dimensional transformation, and then assign the\n * <code>transform.matrix</code> property of the display object to the new\n * Matrix object.</p>\n *\n * <p>To apply three-dimensional transformations: start with a\n * three-dimensional display object. A three-dimensional display object has a\n * <code>z</code> property value other than zero. You do not need to create\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\n * is created automatically when you assign a <code>z</code> value to a\n * display object. You can access the display object's Matrix3D object through\n * the display object's <code>transform</code> property. Using the methods of\n * the Matrix3D class, you can add to or modify the existing transformation\n * settings. Also, you can create a custom Matrix3D object, set the custom\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\n * object to the display object using the <code>transform.matrix</code>\n * property.</p>\n *\n * <p>To modify a perspective projection of the stage or root object: use the\n * <code>transform.matrix</code> property of the root display object to gain\n * access to the PerspectiveProjection object. Or, apply different perspective\n * projection properties to a display object by setting the perspective\n * projection properties of the display object's parent. The child display\n * object inherits the new properties. Specifically, create a\n * PerspectiveProjection object and set its properties, then assign the\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\n * property of the parent display object's <code>transform</code> property.\n * The specified projection transformation then applies to all the display\n * object's three-dimensional children.</p>\n *\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\n * perspective transformations, do not assign both to a display object at the\n * same time. Use the PerspectiveProjection object for focal length and\n * projection center changes. For more control over the perspective\n * transformation, create a perspective projection Matrix3D object.</p>\n */\nclass Transform\n{\n\tprivate _displayObject:DisplayObject;\n\tprivate _concatenatedColorTransform:ColorTransform;\n\tprivate _concatenatedMatrix:Matrix;\n\tprivate _pixelBounds:Rectangle;\n\tpublic _position:Vector3D = new Vector3D();\n\n\t/**\n\t *\n\t */\n\tpublic get backVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A ColorTransform object containing values that universally adjust the\n\t * colors in the display object.\n\t * \n\t * @throws TypeError The colorTransform is null when being set\n\t */\n\tpublic colorTransform:ColorTransform;\n\n\t/**\n\t * A ColorTransform object representing the combined color transformations\n\t * applied to the display object and all of its parent objects, back to the\n\t * root level. If different color transformations have been applied at\n\t * different levels, all of those transformations are concatenated into one\n\t * ColorTransform object for this property.\n\t */\n\tpublic get concatenatedColorTransform():ColorTransform\n\t{\n\t\treturn this._concatenatedColorTransform; //TODO\n\t}\n\n\t/**\n\t * A Matrix object representing the combined transformation matrixes of the\n\t * display object and all of its parent objects, back to the root level. If\n\t * different transformation matrixes have been applied at different levels,\n\t * all of those matrixes are concatenated into one matrix for this property.\n\t * Also, for resizeable SWF content running in the browser, this property\n\t * factors in the difference between stage coordinates and window coordinates\n\t * due to window resizing. Thus, the property converts local coordinates to\n\t * window coordinates, which may not be the same coordinate space as that of\n\t * the Stage.\n\t */\n\tpublic get concatenatedMatrix():Matrix\n\t{\n\t\treturn this._concatenatedMatrix; //TODO\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get downVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get forwardVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get leftVector():Vector3D\n\t{\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t\tdirector.negate();\n\n\t\treturn director;\n\t}\n\n\t/**\n\t * A Matrix object containing values that alter the scaling, rotation, and\n\t * translation of the display object.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t * \n\t * @throws TypeError The matrix is null when being set\n\t */\n\tpublic matrix:Matrix;\n\n\t/**\n\t * Provides access to the Matrix3D object of a three-dimensional display\n\t * object. The Matrix3D object represents a transformation matrix that\n\t * determines the display object's position and orientation. A Matrix3D\n\t * object can also perform perspective projection.\n\t *\n\t * <p>If the <code>matrix</code> property is set to a value(not\n\t * <code>null</code>), the <code>matrix3D</code> property is\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\n\t * value(not <code>null</code>), the <code>matrix</code> property is\n\t * <code>null</code>.</p>\n\t */\n\tpublic get matrix3D():Matrix3D\n\t{\n\t\treturn this._displayObject._iMatrix3D;\n\t}\n\n\tpublic set matrix3D(val:Matrix3D)\n\t{\n\t\tthis._displayObject._iMatrix3D = val;\n\t}\n\n\t/**\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\n\t * display object. The PerspectiveProjection object can be used to modify the\n\t * perspective transformation of the stage or to assign a perspective\n\t * transformation to all the three-dimensional children of a display object.\n\t *\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\n\t */\n\tpublic perspectiveProjection:PerspectiveProjection;\n\n\t/**\n\t * A Rectangle object that defines the bounding rectangle of the display\n\t * object on the stage.\n\t */\n\tpublic get pixelBounds():Rectangle\n\t{\n\t\treturn this._pixelBounds;\n\t}\n\n\t/**\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get position():Vector3D\n\t{\n\t\treturn this._displayObject._iMatrix3D.position\n\t}\n\n\tpublic set position(value:Vector3D)\n\t{\n\t\tthis._displayObject.x = value.x;\n\t\tthis._displayObject.y = value.y;\n\t\tthis._displayObject.z = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get rightVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\n\t}\n\n\t/**\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get rotation():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\n\t}\n\n\tpublic set rotation(value:Vector3D)\n\t{\n\t\tthis._displayObject.rotationX = value.x;\n\t\tthis._displayObject.rotationY = value.y;\n\t\tthis._displayObject.rotationZ = value.z;\n\t}\n\n\t/**\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\n\t */\n\tpublic get scale():Vector3D\n\t{\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\n\t}\n\n\tpublic set scale(value:Vector3D)\n\t{\n\t\tthis._displayObject.scaleX = value.x;\n\t\tthis._displayObject.scaleY = value.y;\n\t\tthis._displayObject.scaleZ = value.z;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get upVector():Vector3D\n\t{\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\n\t}\n\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis._displayObject = displayObject;\n\t}\n\n\t/**\n\t * Returns a Matrix3D object, which can transform the space of a specified\n\t * display object in relation to the current display object's space. You can\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\n\t * three-dimensional display object relative to another three-dimensional\n\t * display object.\n\t * \n\t * @param relativeTo The display object relative to which the transformation\n\t *                   occurs. To get a Matrix3D object relative to the stage,\n\t *                   set the parameter to the <code>root</code> or\n\t *                   <code>stage</code> object. To get the world-relative\n\t *                   matrix of the display object, set the parameter to a\n\t *                   display object that has a perspective transformation\n\t *                   applied to it.\n\t * @return A Matrix3D object that can be used to transform the space from the\n\t *         <code>relativeTo</code> display object to the current display\n\t *         object space.\n\t */\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\n\t{\n\t\treturn new Matrix3D(); //TODO\n\t}\n\n\n\t/**\n\t * Moves the 3d object forwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveForward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local z axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveBackward(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\n\tpublic moveLeft(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local x axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveRight(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object forwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveUp(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\n\t}\n\n\t/**\n\t * Moves the 3d object backwards along it's local y axis\n\t *\n\t * @param    distance    The length of the movement\n\t */\n\tpublic moveDown(distance:number)\n\t{\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\n\t}\n}\n\nexport = Transform;\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\n\n/**\n * @class away.base.TriangleSubGeometry\n */\nclass TriangleSubGeometry extends SubGeometryBase\n{\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\n\n\tprivate _numVertices:number = 0;\n\tprivate _faceNormalsDirty:boolean = true;\n\tprivate _faceTangentsDirty:boolean = true;\n\n\tprivate _positions:Float3Attributes;\n\tprivate _normals:Float3Attributes;\n\tprivate _tangents:Float3Attributes;\n\tprivate _uvs:Float2Attributes;\n\tprivate _secondaryUVs:Float2Attributes;\n\tprivate _jointIndices:AttributesView;\n\tprivate _jointWeights:AttributesView;\n\n\tprivate _useCondensedIndices:boolean;\n\tprivate _condensedIndexLookUp:Array<number>;\n\n\tprivate _jointsPerVertex:number;\n\n\tprivate _autoDeriveNormals:boolean = true;\n\tprivate _autoDeriveTangents:boolean = true;\n\tprivate _autoDeriveUVs:boolean = false;\n\n\tprivate _faceNormals:Float4Attributes;\n\tprivate _faceTangents:Float3Attributes;\n\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubGeometry.assetType;\n\t}\n\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\t/**\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\n\t * by condensing the number of joint index values required per mesh. Only applicable to\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\n\t */\n\tpublic get useCondensedIndices():boolean\n\t{\n\t\treturn this._useCondensedIndices;\n\t}\n\n\tpublic set useCondensedIndices(value:boolean)\n\t{\n\t\tif (this._useCondensedIndices == value)\n\t\t\treturn;\n\n\t\tthis._useCondensedIndices = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointsPerVertex():number\n\t{\n\t\treturn this._jointsPerVertex;\n\t}\n\n\tpublic set jointsPerVertex(value:number)\n\t{\n\t\tif (this._jointsPerVertex == value)\n\t\t\treturn;\n\n\t\tthis._jointsPerVertex = value;\n\n\t\tif (this._jointIndices)\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\n\n\t\tif (this._jointWeights)\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\n\t}\n\n\t/**\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\n\t */\n\tpublic get autoDeriveUVs():boolean\n\t{\n\t\treturn this._autoDeriveUVs;\n\t}\n\n\tpublic set autoDeriveUVs(value:boolean)\n\t{\n\t\tif (this._autoDeriveUVs == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveUVs = value;\n\t}\n\n\t/**\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveNormals():boolean\n\t{\n\t\treturn this._autoDeriveNormals;\n\t}\n\n\tpublic set autoDeriveNormals(value:boolean)\n\t{\n\t\tif (this._autoDeriveNormals == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveNormals = value;\n\t}\n\n\t/**\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\n\t * explicitly.\n\t */\n\tpublic get autoDeriveTangents():boolean\n\t{\n\t\treturn this._autoDeriveTangents;\n\t}\n\n\tpublic set autoDeriveTangents(value:boolean)\n\t{\n\t\tif (this._autoDeriveTangents == value)\n\t\t\treturn;\n\n\t\tthis._autoDeriveTangents = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get positions():Float3Attributes\n\t{\n\t\treturn this._positions;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get normals():Float3Attributes\n\t{\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\n\t\t\tthis.setNormals(this._normals);\n\n\t\treturn this._normals;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get tangents():Float3Attributes\n\t{\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\n\t\t\tthis.setTangents(this._tangents);\n\n\t\treturn this._tangents;\n\t}\n\n\t/**\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceNormals():Float4Attributes\n\t{\n\t\tif (this._faceNormalsDirty)\n\t\t\tthis.updateFaceNormals();\n\n\t\treturn this._faceNormals;\n\t}\n\n\t/**\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\n\t */\n\tpublic get faceTangents():Float3Attributes\n\t{\n\t\tif (this._faceTangentsDirty)\n\t\t\tthis.updateFaceTangents();\n\n\t\treturn this._faceTangents;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvs():Float2Attributes\n\t{\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\n\t\t\tthis.setUVs(this._uvs);\n\n\t\treturn this._uvs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get secondaryUVs():Float2Attributes\n\t{\n\t\treturn this._secondaryUVs;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointIndices():AttributesView\n\t{\n\t\treturn this._jointIndices;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get jointWeights():AttributesView\n\t{\n\t\treturn this._jointWeights;\n\t}\n\n\tpublic get condensedIndexLookUp():Array<number>\n\t{\n\t\treturn this._condensedIndexLookUp;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\n\t{\n\t\tsuper(concatenatedBuffer);\n\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\n\n\t\tthis._numVertices = this._positions.count;\n\t}\n\n\tpublic getBoundingPositions():Float32Array\n\t{\n\t\treturn this._positions.get(this._numVertices);\n\t}\n\n\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic setPositions(array:Array<number>, offset?:number);\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setPositions(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._positions)\n\t\t\treturn;\n\n\t\tif (values instanceof Float3Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = <Float3Attributes> values;\n\t\t} else if (values) {\n\t\t\tthis._positions.set(values, offset);\n\t\t} else {\n\t\t\tthis.notifyVerticesDispose(this._positions);\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\n\t\t}\n\n\t\tthis._numVertices = this._positions.count;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis.pInvalidateBounds();\n\n\t\tthis.notifyVerticesUpdate(this._positions);\n\n\t\tthis._verticesDirty[this._positions.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex normals based on the geometry.\n\t */\n\tpublic setNormals(array:Array<number>, offset?:number);\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setNormals(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveNormals) {\n\t\t\tif (values == this._normals)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._normals)\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._normals.set(values, offset);\n\t\t\t} else if (this._normals) {\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\n\t\t\t\tthis._normals = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tthis._verticesDirty[this._normals.id] = false;\n\t}\n\n\t/**\n\t * Updates the vertex tangents based on the geometry.\n\t */\n\tpublic setTangents(array:Array<number>, offset?:number);\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\n\tpublic setTangents(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveTangents) {\n\t\t\tif (values == this._tangents)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float3Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = <Float3Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._tangents)\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._tangents.set(values, offset);\n\t\t\t} else if (this._tangents) {\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\n\t\t\t\tthis._tangents = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._faceTangentsDirty)\n\t\t\t\tthis.updateFaceTangents();\n\n\t\t\tif (this._faceNormalsDirty)\n\t\t\t\tthis.updateFaceNormals();\n\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis._verticesDirty[this._tangents.id] = false;\n\t}\n\n\t/**\n\t * Updates the uvs based on the geometry.\n\t */\n\tpublic setUVs(array:Array<number>, offset?:number);\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setUVs(values:any, offset:number = 0)\n\t{\n\t\tif (!this._autoDeriveUVs) {\n\t\t\tif (values == this._uvs)\n\t\t\t\treturn;\n\n\t\t\tif (values instanceof Float2Attributes) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = <Float2Attributes> values;\n\t\t\t} else if (values) {\n\t\t\t\tif (!this._uvs)\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\t\tthis._uvs.set(values, offset);\n\t\t\t} else if (this._uvs) {\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\n\t\t\t\tthis._uvs = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\n\t\t}\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tthis.notifyVerticesUpdate(this._uvs);\n\n\t\tthis._verticesDirty[this._uvs.id] = false;\n\t}\n\n\t/**\n\t * Updates the secondary uvs based on the geometry.\n\t */\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._secondaryUVs)\n\t\t\treturn;\n\n\t\tif (values instanceof Float2Attributes) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\n\t\t} else if (values) {\n\t\t\tif (!this._secondaryUVs)\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\n\n\t\t\tthis._secondaryUVs.set(values, offset);\n\t\t} else if (this._secondaryUVs) {\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\n\t\t\tthis._secondaryUVs = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\n\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint indices\n\t */\n\tpublic setJointIndices(array:Array<number>, offset?:number);\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\n\tpublic setJointIndices(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointIndices)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointIndices)\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tif (this._useCondensedIndices) {\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar oldIndex:number;\n\t\t\t\tvar newIndex:number = 0;\n\t\t\t\tvar dic:Object = new Object();\n\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\n\n\t\t\t\twhile (i < values.length) {\n\t\t\t\t\toldIndex = values[i];\n\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\t//reset value to dictionary lookup\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._jointIndices.set(values, offset);\n\n\t\t} else if (this._jointIndices) {\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\n\t\t\tthis._jointIndices = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\n\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\n\t}\n\n\t/**\n\t * Updates the joint weights.\n\t */\n\tpublic setJointWeights(array:Array<number>, offset?:number);\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\n\tpublic setJointWeights(values:any, offset:number = 0)\n\t{\n\t\tif (values == this._jointWeights)\n\t\t\treturn;\n\n\t\tif (values instanceof AttributesView) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = <AttributesView> values;\n\t\t} else if (values) {\n\t\t\tif (!this._jointWeights)\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\n\n\t\t\tthis._jointWeights.set(values, offset);\n\n\t\t} else if (this._jointWeights) {\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\n\t\t\tthis._jointWeights = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\n\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis._positions.dispose();\n\t\tthis._positions = null;\n\n\t\tif (this._normals) {\n\t\t\tthis._normals.dispose();\n\t\t\tthis._normals = null;\n\t\t}\n\n\t\tif (this._tangents) {\n\t\t\tthis._tangents.dispose();\n\t\t\tthis._tangents = null;\n\t\t}\n\n\t\tif (this._uvs) {\n\t\t\tthis._uvs.dispose();\n\t\t\tthis._uvs = null;\n\t\t}\n\n\t\tif (this._secondaryUVs) {\n\t\t\tthis._secondaryUVs.dispose();\n\t\t\tthis._secondaryUVs = null;\n\t\t}\n\n\t\tif (this._jointIndices) {\n\t\t\tthis._jointIndices.dispose();\n\t\t\tthis._jointIndices = null;\n\t\t}\n\n\t\tif (this._jointWeights) {\n\t\t\tthis._jointWeights.dispose();\n\t\t\tthis._jointWeights = null;\n\t\t}\n\n\t\tif (this._faceNormals) {\n\t\t\tthis._faceNormals.dispose();\n\t\t\tthis._faceNormals = null;\n\t\t}\n\n\t\tif (this._faceTangents) {\n\t\t\tthis._faceTangents.dispose();\n\t\t\tthis._faceTangents = null;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the face indices of the TriangleSubGeometry.\n\t *\n\t * @param indices The face indices to upload.\n\t */\n\tpublic setIndices(array:Array<number>, offset?:number);\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\n\tpublic setIndices(values:any, offset:number = 0)\n\t{\n\t\tsuper.setIndices(values, offset);\n\n\t\tthis._faceNormalsDirty = true;\n\t\tthis._faceTangentsDirty = true;\n\n\t\tif (this._autoDeriveNormals)\n\t\t\tthis.notifyVerticesUpdate(this._normals);\n\n\t\tif (this._autoDeriveTangents)\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\n\n\t\tif (this._autoDeriveUVs)\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\n\t}\n\n\t/**\n\t * Clones the current object\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():TriangleSubGeometry\n\t{\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\n\n\t\t//temp disable auto derives\n\t\tclone.autoDeriveNormals = false;\n\t\tclone.autoDeriveTangents = false;\n\t\tclone.autoDeriveUVs = false;\n\n\t\tif (this.indices)\n\t\t\tclone.setIndices(this.indices.clone());\n\n\t\tif (this.normals)\n\t\t\tclone.setNormals(this.normals.clone());\n\n\t\tif (this.uvs)\n\t\t\tclone.setUVs(this.uvs.clone());\n\n\t\tif (this.tangents)\n\t\t\tclone.setTangents(this.tangents.clone());\n\n\t\tif (this.secondaryUVs)\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\n\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\n\n\t\tif (this.jointIndices)\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\n\n\t\tif (this.jointWeights)\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\n\n\t\t//return auto derives to cloned values\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\n\n\t\treturn clone;\n\t}\n\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\n\t{\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\n\t}\n\n\t/**\n\t * Scales the geometry.\n\t * @param scale The amount by which to scale.\n\t */\n\tpublic scale(scale:number)\n\t{\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\n\t}\n\n\tpublic applyTransformation(transform:Matrix3D)\n\t{\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\n\t}\n\n\t/**\n\t * Updates the tangents for each face.\n\t */\n\tprivate updateFaceTangents()\n\t{\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\n\n\t\tthis._faceTangentsDirty = false;\n\t}\n\n\t/**\n\t * Updates the normals for each face.\n\t */\n\tprivate updateFaceNormals()\n\t{\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\n\n\t\tthis._faceNormalsDirty = false;\n\t}\n\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\n\t}\n}\n\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\n\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.TriangleSubMesh\n */\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\n{\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\n\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\n\n\tprivate _subGeometry:TriangleSubGeometry;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TriangleSubMesh.assetType;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t */\n\tpublic get subGeometry():TriangleSubGeometry\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Creates a new TriangleSubMesh object\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\n\t * @param material An optional material used to render this TriangleSubMesh.\n\t */\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pParentMesh = parentMesh;\n\t\tthis._subGeometry = subGeometry;\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\t}\n}\n\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\n\n\n/**\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\n * This is useful for most meshes.\n */\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\n{\n\tpublic _box:Box;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\tprivate _z:number = 0;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\tprivate _depth:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _halfExtentsX:number = 0;\n\tprivate _halfExtentsY:number = 0;\n\tprivate _halfExtentsZ:number = 0;\n\tprivate _prefab:PrimitiveCubePrefab;\n\n\t/**\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\n\t */\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic nullify()\n\t{\n\t\tthis._x = this._y = this._z = 0;\n\t\tthis._width = this._height = this._depth = 0;\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar a:number = plane.a;\n\t\t\tvar b:number = plane.b;\n\t\t\tvar c:number = plane.c;\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\n\n\t\t\tif (projDist < 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\n\t}\n\n\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\n\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._box = this._pEntity.getBox();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\t\tvar hx:number = this._box.width/2;\n\t\tvar hy:number = this._box.height/2;\n\t\tvar hz:number = this._box.depth/2;\n\t\tvar cx:number = this._box.x + hx;\n\t\tvar cy:number = this._box.y + hy;\n\t\tvar cz:number = this._box.z + hz;\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\n\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.width = this._box.width;\n\t\t\tthis._prefab.height = this._box.height;\n\t\t\tthis._prefab.depth = this._box.depth;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\n\t\tthis._width = this._halfExtentsX*2;\n\t\tthis._height = this._halfExtentsY*2;\n\t\tthis._depth = this._halfExtentsZ*2;\n\n\t\tthis._x = this._centerX - this._halfExtentsX;\n\t\tthis._y = this._centerY - this._halfExtentsY;\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveCubePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\n\nclass BoundingSphere extends BoundingVolumeBase\n{\n\tprivate _sphere:Sphere;\n\tprivate _radius:number = 0;\n\tprivate _centerX:number = 0;\n\tprivate _centerY:number = 0;\n\tprivate _centerZ:number = 0;\n\tprivate _prefab:PrimitiveSpherePrefab;\n\n\tconstructor(entity:IEntity)\n\t{\n\t\tsuper(entity);\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\n\t\tthis._radius = 0;\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\n\t\t\tvar plane:Plane3D = planes[i];\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\n\t\t\tif (projDist < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\tif(this._pInvalidated)\n\t\t\tthis._pUpdate();\n\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\n\t}\n\n\t//@override\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tvar a:number = plane.a;\n\t\tvar b:number = plane.b;\n\t\tvar c:number = plane.c;\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\n\n\t\tif (a < 0)\n\t\t\ta = -a;\n\n\t\tif (b < 0)\n\t\t\tb = -b;\n\n\t\tif (c < 0)\n\t\t\tc = -c;\n\n\t\tvar rr:Number = (a + b + c)*this._radius;\n\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tsuper._pUpdate();\n\n\t\tthis._sphere = this._pEntity.getSphere();\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\n\n\t\tvar cx:number = this._sphere.x;\n\t\tvar cy:number = this._sphere.y;\n\t\tvar cz:number = this._sphere.z;\n\t\tvar r:number = this._sphere.radius;\n\n\t\tvar raw:Array<number> = new Array<number>(16);\n\t\tmatrix.copyRawDataTo(raw);\n\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\n\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\n\n\t\tvar rx:number = m11 + m12 + m13;\n\t\tvar ry:number = m21 + m22 + m23;\n\t\tvar rz:number = m31 + m32 + m33;\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\n\n\t\tif (this._prefab) {\n\t\t\tthis._prefab.radius = r;\n\t\t\tthis._pBoundsPrimitive.x = cx;\n\t\t\tthis._pBoundsPrimitive.y = cy;\n\t\t\tthis._pBoundsPrimitive.z = cz;\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\n\t\t}\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthis._prefab = new PrimitiveSpherePrefab();\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\n\n\t\treturn <Mesh> this._prefab.getNewObject();\n\t}\n}\n\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nclass BoundingVolumeBase\n{\n\tpublic _pEntity:IEntity;\n\tpublic _pBoundsPrimitive:Mesh;\n\tpublic _pInvalidated:boolean = true;\n\n\tconstructor(entity)\n\t{\n\t\tthis._pEntity = entity;\n\t}\n\n\tpublic get boundsPrimitive():IEntity\n\t{\n\t\tif (this._pBoundsPrimitive == null) {\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\n\n\t\t\tthis._pUpdate();\n\t\t}\n\n\t\treturn this._pBoundsPrimitive;\n\t}\n\n\tpublic nullify()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\n\t{\n\t\treturn -1;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pUpdate()\n\t{\n\t\tthis._pInvalidated = false;\n\t}\n\n\tpublic invalidate()\n\t{\n\t\tthis._pInvalidated = true;\n\t}\n\n\tpublic _pCreateBoundsPrimitive():Mesh\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = BoundingVolumeBase;",
    "/**\n *\n */\nclass BoundsType\n{\n\t/**\n\t *\n\t */\n\tpublic static SPHERE:string = \"sphere\";\n\n\t/**\n\t *\n\t */\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\n\n\t/**\n\t *\n\t */\n\tpublic static NULL:string = \"null\";\n}\n\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\n\n\nclass NullBounds extends BoundingVolumeBase\n{\n\tprivate _alwaysIn:boolean;\n\n\tconstructor(alwaysIn:boolean = true)\n\t{\n\t\tsuper(null);\n\n\t\tthis._alwaysIn = alwaysIn;\n\t}\n\n\t//@override\n\tpublic clone():BoundingVolumeBase\n\t{\n\t\treturn new NullBounds(this._alwaysIn);\n\t}\n\n\t//@override\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn this._alwaysIn;\n\t}\n\n\tpublic classifyToPlane(plane:Plane3D):number\n\t{\n\t\treturn PlaneClassification.INTERSECT;\n\t}\n}\n\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\n\n/**\n * The DisplayObjectContainer class is the base class for all objects that can\n * serve as display object containers on the display list. The display list\n * manages all objects displayed in the Flash runtimes. Use the\n * DisplayObjectContainer class to arrange the display objects in the display\n * list. Each DisplayObjectContainer object has its own child list for\n * organizing the z-order of the objects. The z-order is the front-to-back\n * order that determines which object is drawn in front, which is behind, and\n * so on.\n *\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\n * <code>ArgumentError</code> exception.</p>\n * The DisplayObjectContainer class is an abstract base class for all objects\n * that can contain child objects. It cannot be instantiated directly; calling\n * the <code>new DisplayObjectContainer()</code> constructor throws an\n * <code>ArgumentError</code> exception.\n *\n * <p>For more information, see the \"Display Programming\" chapter of the\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\n */\nclass DisplayObjectContainer extends DisplayObject implements IAsset\n{\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\n\n\tprivate _mouseChildren:boolean = true;\n\tprivate _depths:Array<number> = new Array<number>();\n\tprivate _nextHighestDepth:number = 0;\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\n\tpublic _iIsRoot:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn DisplayObjectContainer.assetType;\n\t}\n\n\t/**\n\t * Determines whether or not the children of the object are mouse, or user\n\t * input device, enabled. If an object is enabled, a user can interact with\n\t * it by using a mouse or user input device. The default is\n\t * <code>true</code>.\n\t *\n\t * <p>This property is useful when you create a button with an instance of\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\n\t * Sprite instance to create a button, you can choose to decorate the button\n\t * by using the <code>addChild()</code> method to add additional Sprite\n\t * instances. This process can cause unexpected behavior with mouse events\n\t * because the Sprite instances you add as children can become the target\n\t * object of a mouse event when you expect the parent instance to be the\n\t * target object. To ensure that the parent instance serves as the target\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\n\t * property of the parent instance to <code>false</code>.</p>\n\t *\n\t * <p> No event is dispatched by setting this property. You must use the\n\t * <code>addEventListener()</code> method to create interactive\n\t * functionality.</p>\n\t */\n\tpublic get mouseChildren():boolean\n\t{\n\t\treturn this._mouseChildren;\n\t}\n\n\tpublic set mouseChildren(value:boolean)\n\t{\n\t\tif (this._mouseChildren == value)\n\t\t\treturn;\n\n\t\tthis._mouseChildren = value;\n\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\n\t}\n\n\t/**\n\t * Returns the number of children of this object.\n\t */\n\tpublic get numChildren():number /*int*/\n\t{\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Determines whether the children of the object are tab enabled. Enables or\n\t * disables tabbing for the children of the object. The default is\n\t * <code>true</code>.\n\t *\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\n\t * Flex. Instead, use the\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\n\t *\n\t * @throws IllegalOperationError Calling this property of the Stage object\n\t *                               throws an exception. The Stage object does\n\t *                               not implement this property.\n\t */\n\tpublic tabChildren:boolean;\n\n\t/**\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\n\t * constructors for the following subclasses of DisplayObjectContainer:\n\t * <ul>\n\t *   <li><code>new Loader()</code></li>\n\t *   <li><code>new Sprite()</code></li>\n\t *   <li><code>new MovieClip()</code></li>\n\t * </ul>\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added to the front(top) of all other children in\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\n\t * position, use the <code>addChildAt()</code> method.)\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\n\t * problems with a published SWF file, including security problems and\n\t * conflicts with other loaded SWF files. There is only one Stage within a\n\t * Flash runtime instance, no matter how many SWF files you load into the\n\t * runtime. So, generally, objects should not be added to the Stage,\n\t * directly, at all. The only object the Stage should contain is the root\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\n\t * to the Stage.</p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this.addChildAt(child, this._children.length);\n\t}\n\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\n\t\t\n\t\t//if child already has a parent, remove it.\n\t\tif (child._pParent)\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\n\n\t\tchild.iSetParent(this);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._depths.length;\n\t\tvar index:number = len;\n\t\t\n\t\twhile (index--)\n\t\t\tif (this._depths[index] < depth)\n\t\t\t\tbreak;\n\n\t\tindex++;\n\n\t\tif (index < len) {\n\t\t\t//if replace flag & depths match current depth, remove the existing child\n\t\t\tif (this._depths[index] == depth) {\n\t\t\t\tif (replace) {\n\t\t\t\t\tthis.removeChildAt(index);\n\t\t\t\t} else {\n\t\t\t\t\t//update depths if there are children higher than added child\n\t\t\t\t\tfor (var i:number = index; i < len; i++)\n\t\t\t\t\t\tthis._depths[i] = this._depths[i] + 1;\n\n\t\t\t\t\tthis._nextHighestDepth++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._children.splice(index, 0, child);\n\t\t\tthis._depths.splice(index, 0, depth);\n\t\t} else {\n\t\t\tthis._children.push(child);\n\t\t\tthis._depths.push(depth);\n\n\t\t\tthis._nextHighestDepth = depth + 1;\n\t\t}\n\n\t\treturn child;\n\t}\n\t\n\t/**\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\n\t * instance. The child is added at the index position specified. An index of\n\t * 0 represents the back(bottom) of the display list for this\n\t * DisplayObjectContainer object.\n\t *\n\t * <p>For example, the following example shows three display objects, labeled\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\n\t *\n\t * <p>If you add a child object that already has a different display object\n\t * container as a parent, the object is removed from the child list of the\n\t * other display object container. </p>\n\t *\n\t * @param child The DisplayObject instance to add as a child of this\n\t *              DisplayObjectContainer instance.\n\t * @param index The index position to which the child is added. If you\n\t *              specify a currently occupied index position, the child object\n\t *              that exists at that position and all higher positions are\n\t *              moved up one position in the child list.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\n\t *                       throws if the caller is a child(or grandchild etc.)\n\t *                       of the child being added.\n\t * @throws RangeError    Throws if the index position does not exist in the\n\t *                       child list.\n\t * @event added Dispatched when a display object is added to the display\n\t *              list.\n\t */\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\n\t{\n\t\treturn this.addChildAtDepth(child, (index < this._children.length)? this._depths[index] : this._nextHighestDepth, false);\n\t}\n\n\tpublic addChildren(...childarray:Array<DisplayObject>)\n\t{\n\t\tvar len:number = childarray.length;\n\t\tfor (var i:number = 0; i <  len; i++)\n\t\t\tthis.addChild(childarray[i]);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.partition = this.partition;\n\t\tclone.name = this.name;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tclone.addChild(this._children[i].clone());\n\n\t\t// todo: implement for all subtypes\n\t\treturn clone;\n\t}\n\n\t/**\n\t * Determines whether the specified display object is a child of the\n\t * DisplayObjectContainer instance or the instance itself. The search\n\t * includes the entire display list including this DisplayObjectContainer\n\t * instance. Grandchildren, great-grandchildren, and so on each return\n\t * <code>true</code>.\n\t *\n\t * @param child The child object to test.\n\t * @return <code>true</code> if the <code>child</code> object is a child of\n\t *         the DisplayObjectContainer or the container itself; otherwise\n\t *         <code>false</code>.\n\t */\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._children.indexOf(child) >= 0;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic disposeWithChildren()\n\t{\n\t\tthis.dispose();\n\n\t\twhile (this.numChildren > 0)\n\t\t\tthis.getChildAt(0).dispose();\n\t}\n\t\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\n\t}\n\t\n\t/**\n\t * Returns the child display object instance that exists at the specified\n\t * index.\n\t *\n\t * @param index The index position of the child object.\n\t * @return The child display object at the specified index position.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic getChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children[index];\n\n\t\tif (child == null)\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\n\n\t\treturn child;\n\t}\n\n\t/**\n\t * Returns the child display object that exists with the specified name. If\n\t * more that one child display object has the specified name, the method\n\t * returns the first object in the child list.\n\t *\n\t * <p>The <code>getChildAt()</code> method is faster than the\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\n\t * accesses a child from a cached array, whereas the\n\t * <code>getChildByName()</code> method has to traverse a linked list to\n\t * access a child.</p>\n\t *\n\t * @param name The name of the child to return.\n\t * @return The child display object with the specified name.\n\t */\n\tpublic getChildByName(name:string):DisplayObject\n\t{\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._children[i].name == name)\n\t\t\t\treturn this._children[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\n\t *\n\t * @param child The DisplayObject instance to identify.\n\t * @return The index position of the child display object to identify.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\n\t{\n\t\tvar childIndex:number = this._children.indexOf(child);\n\n\t\tif (childIndex == -1)\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\n\n\t\treturn childIndex;\n\t}\n\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\n\t{\n\t\treturn this._depths[this.getChildIndex(child)];\n\t}\n\n\tpublic getNextHighestDepth()\n\t{\n\t\treturn this._nextHighestDepth;\n\t}\n\n\t/**\n\t * Returns an array of objects that lie under the specified point and are\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\n\t * instance. Any child objects that are inaccessible for security reasons are\n\t * omitted from the returned array. To determine whether this security\n\t * restriction affects the returned array, call the\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\n\t *\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\n\t * Stage, which may differ from the coordinate space of the display object\n\t * container(unless the display object container is the Stage). You can use\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\n\t * methods to convert points between these coordinate spaces.</p>\n\t *\n\t * @param point The point under which to look.\n\t * @return An array of objects that lie under the specified point and are\n\t *         children(or grandchildren, and so on) of this\n\t *         DisplayObjectContainer instance.\n\t */\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\n\t{\n\t\treturn new Array<DisplayObject>();\n\t}\n\n\t/**\n\t * Removes the specified <code>child</code> DisplayObject instance from the\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\n\t * property of the removed child is set to <code>null</code> , and the object\n\t * is garbage collected if no other references to the child exist. The index\n\t * positions of any display objects above the child in the\n\t * DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param child The DisplayObject instance to remove.\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\n\t *         parameter.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t */\n\tpublic removeChild(child:DisplayObject):DisplayObject\n\t{\n\t\tif (child == null)\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\n\n\t\tthis.removeChildAt(this.getChildIndex(child));\n\n\t\treturn child;\n\t}\n\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\n\t{\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\n\t}\t\n\n\t/**\n\t * Removes a child DisplayObject from the specified <code>index</code>\n\t * position in the child list of the DisplayObjectContainer. The\n\t * <code>parent</code> property of the removed child is set to\n\t * <code>null</code>, and the object is garbage collected if no other\n\t * references to the child exist. The index positions of any display objects\n\t * above the child in the DisplayObjectContainer are decreased by 1.\n\t *\n\t * <p>The garbage collector reallocates unused memory space. When a variable\n\t * or object is no longer actively referenced or stored somewhere, the\n\t * garbage collector sweeps through and wipes out the memory space it used to\n\t * occupy if no other references to it exist.</p>\n\t *\n\t * @param index The child index of the DisplayObject to remove.\n\t * @return The DisplayObject instance that was removed.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t * @throws SecurityError This child display object belongs to a sandbox to\n\t *                       which the calling object does not have access. You\n\t *                       can avoid this situation by having the child movie\n\t *                       call the <code>Security.allowDomain()</code> method.\n\t */\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\n\n\t\tchild.iSetParent(null);\n\n\t\tthis._pInvalidateBounds();\n\t\t\n\t\treturn child;\n\t}\n\n\t/**\n\t * Removes all <code>child</code> DisplayObject instances from the child list\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\n\t * of the removed children is set to <code>null</code>, and the objects are\n\t * garbage collected if no other references to the children exist.\n\t *\n\t * The garbage collector reallocates unused memory space. When a variable or\n\t * object is no longer actively referenced or stored somewhere, the garbage\n\t * collector sweeps through and wipes out the memory space it used to occupy\n\t * if no other references to it exist.\n\t *\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\n\t *                       not exist in the child list.\n\t */\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\n\t{\n\t\tif (beginIndex < 0)\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\n\n\t\tif (endIndex > this._children.length)\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\n\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\n\t\t\tthis.removeChild(this._children[i]);\n\t}\n\n\t/**\n\t * Changes the position of an existing child in the display object container.\n\t * This affects the layering of child objects. For example, the following\n\t * example shows three display objects, labeled a, b, and c, at index\n\t * positions 0, 1, and 2, respectively:\n\t *\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\n\t * index position that is already occupied, the only positions that change\n\t * are those in between the display object's former and new position. All\n\t * others will stay the same. If a child is moved to an index LOWER than its\n\t * current index, all children in between will INCREASE by 1 for their index\n\t * reference. If a child is moved to an index HIGHER than its current index,\n\t * all children in between will DECREASE by 1 for their index reference. For\n\t * example, if the display object container in the previous example is named\n\t * <code>container</code>, you can swap the position of the display objects\n\t * labeled a and b by calling the following code:</p>\n\t *\n\t * <p>This code results in the following arrangement of objects:</p>\n\t *\n\t * @param child The child DisplayObject instance for which you want to change\n\t *              the index number.\n\t * @param index The resulting index number for the <code>child</code> display\n\t *              object.\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\n\t *                       object.\n\t * @throws RangeError    Throws if the index does not exist in the child\n\t *                       list.\n\t */\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Swaps the z-order (front-to-back order) of the two specified child\n\t * objects. All other child objects in the display object container remain in\n\t * the same index positions.\n\t *\n\t * @param child1 The first child object.\n\t * @param child2 The second child object.\n\t * @throws ArgumentError Throws if either child parameter is not a child of\n\t *                       this object.\n\t */\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\n\t{\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\n\t}\n\n\t/**\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\n\t * specified index positions in the child list. All other child objects in\n\t * the display object container remain in the same index positions.\n\t *\n\t * @param index1 The index position of the first child object.\n\t * @param index2 The index position of the second child object.\n\t * @throws RangeError If either index does not exist in the child list.\n\t */\n\tpublic swapChildrenAt(index1:number, index2:number)\n\t{\n\t\tvar depth:number = this._depths[index1];\n\t\tvar child:DisplayObject = this._children[index1];\n\n\t\tthis._depths[index1] = this._depths[index2];\n\t\tthis._children[index1] = this._children[index2];\n\n\t\tthis._depths[index2] = depth;\n\t\tthis._children[index2] = child;\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar min:number;\n\t\tvar max:number;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\n\t\tvar box:Box;\n\t\tvar numChildren:number = this._children.length;\n\n\t\tif (numChildren > 0) {\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\n\t\t\t\tbox = this._children[i].getBox(this);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\n\t\t\t\t} else {\n\t\t\t\t\tmax = box.width + (min = box.x);\n\t\t\t\t\tif (min < minX)\n\t\t\t\t\t\tminX = min;\n\t\t\t\t\tif (max > maxX)\n\t\t\t\t\t\tmaxX = max;\n\n\t\t\t\t\tmax = box.height + (min = box.y);\n\t\t\t\t\tif (min < minY)\n\t\t\t\t\t\tminY = min;\n\t\t\t\t\tif (max > maxY)\n\t\t\t\t\t\tmaxY = max;\n\n\t\t\t\t\tmax = box.depth + (min = box.z);\n\t\t\t\t\tif (min < minZ)\n\t\t\t\t\t\tminZ = min;\n\t\t\t\t\tif (max > maxZ)\n\t\t\t\t\t\tmaxZ = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t} else {\n\t\t\tthis._pBoxBounds.setEmpty();\n\t\t}\n\t}\n\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i].pInvalidateSceneTransform();\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitVisibility(value:boolean)\n\t{\n\t\tsuper._pUpdateImplicitVisibility(value);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\n\t{\n\t\tsuper._pUpdateImplicitPartition(value, scene);\n\n\t\tvar len:number = this._children.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\n\t}\n\n\t/**\n\t * @private\n\t *\n\t * @param child\n\t */\n\tprivate removeChildAtInternal(index:number):DisplayObject\n\t{\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\n\t\tthis._depths.splice(index, 1);\n\n\t\t//if child is the last in array, update next highest depth\n\t\tif (index == this._children.length)\n\t\t\tthis._nextHighestDepth = this._depths[index - 1] + 1;\n\n\t\treturn child;\n\t}\n\t\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\n\t{\n\t\tvar index:number = this._depths.indexOf(depth);\n\n\t\tif (index == -1)\n\t\t\tthrow new ArgumentError(\"No child at specified depth\");\n\n\t\treturn index;\n\t}\n\t\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\tif(this._iMaskID!==-1 && !masksFlag)return;\n\t\tif(this.visible==false)return;\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\n\t\t{\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag, masksFlag);\n\t\t\tif(childHit) {\n\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\tif(all_masks){\n\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++){\n\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\tif(mask_child.parent){\n\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x,y, shapeFlag, true);\n\t\t\t\t\t\t\tif(childHit) return true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\n\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\n\n/**\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\n * files. Use the <code>load()</code> method to initiate loading. The loaded\n * display object is added as a child of the Loader object.\n *\n * <p>Use the URLLoader class to load text or binary data.</p>\n *\n * <p>The Loader class overrides the following methods that it inherits,\n * because a Loader object can only have one child display object - the\n * display object that it loads. Calling the following methods throws an\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\n * child array. </p>\n *\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\n * them.</p>\n *\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\n * security model: </p>\n *\n * <ul>\n *   <li>You can load content from any accessible source. </li>\n *   <li>Loading is not allowed if the calling SWF file is in a network\n * sandbox and the file to be loaded is local. </li>\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\n * cannot be cross-scripted by a SWF file in another security sandbox unless\n * that cross-scripting arrangement was approved through a call to the\n * <code>System.allowDomain()</code> or the\n * <code>System.allowInsecureDomain()</code> method in the loaded content\n * file.</li>\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\n * ActionScript 3.0). However, you can communicate between the two SWF files\n * by using the LocalConnection class.</li>\n *   <li>If the loaded content is an image, its data cannot be accessed by a\n * SWF file outside of the security sandbox, unless the domain of that SWF\n * file was included in a URL policy file at the origin domain of the\n * image.</li>\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\n * clips in the local-with-networking sandbox, and the reverse is also\n * prevented. </li>\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\n * Developer's Guide</i>. </li>\n * </ul>\n *\n * <p>However, in AIR, content in the <code>application</code> security\n * sandbox(content installed with the AIR application) are not restricted by\n * these security limitations.</p>\n *\n * <p>For more information related to security, see the Flash Player Developer\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\n * scope=\"external\">Security</a>.</p>\n *\n * <p>When loading a SWF file from an untrusted source(such as a domain other\n * than that of the Loader object's root SWF file), you may want to define a\n * mask for the Loader object, to prevent the loaded content(which is a child\n * of the Loader object) from drawing to portions of the Stage outside of that\n * mask, as shown in the following code:</p>\n */\nclass Loader extends DisplayObjectContainer\n{\n\t/**\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\n\t * individual asset type (meshes, materials et c.)\n\t *\n\t * @eventType AssetEvent\n\t */\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\n\n\n\t/**\n\t * Dispatched when a full resource (including dependencies) finishes loading.\n\t *\n\t * @eventType LoaderEvent\n\t */\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\n\n\tprivate _loaderSession:LoaderSession;\n\tprivate _loaderSessionGarbage:LoaderSession;\n\tprivate _gcTimeoutIID:number;\n\tprivate _useAssetLib:boolean;\n\tprivate _assetLibId:string;\n\tprivate _onResourceCompleteDelegate:Function;\n\tprivate _onAssetCompleteDelegate:Function;\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\n\n\tprivate _content:DisplayObject;\n\tprivate _contentLoaderInfo:LoaderInfo;\n\n\t/**\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\n\t * GIF) file that was loaded by using the <code>load()</code> or\n\t * <code>loadBytes()</code> methods.\n\t *\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\n\t *                       security sandbox to which you do not have access.\n\t *                       For a loaded SWF file, you can avoid this situation\n\t *                       by having the file call the\n\t *                       <code>Security.allowDomain()</code> method or by\n\t *                       having the loading file specify a\n\t *                       <code>loaderContext</code> parameter with its\n\t *                       <code>securityDomain</code> property set to\n\t *                       <code>SecurityDomain.currentDomain</code> when you\n\t *                       call the <code>load()</code> or\n\t *                       <code>loadBytes()</code> method.\n\t */\n\tpublic get content():DisplayObject\n\t{\n\t\treturn this._content;\n\t}\n\n\t/**\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\n\t * LoaderInfo objects are shared between the Loader object and the loaded\n\t * content object. The LoaderInfo object supplies loading progress\n\t * information and statistics about the loaded file.\n\t *\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\n\t * LoaderInfo object, even before the content is loaded, so that you can add\n\t * event listeners to the object prior to the load.</p>\n\t *\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\n\t */\n\tpublic get contentLoaderInfo():LoaderInfo\n\t{\n\t\treturn this._contentLoaderInfo;\n\t}\n\n\t/**\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\n\t * as a child of the Loader instance. You can then add the Loader object to\n\t * the display list(for instance, by using the <code>addChild()</code>\n\t * method of a DisplayObjectContainer instance). The asset appears on the\n\t * Stage as it loads.\n\t *\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\n\t * to a display object container on the display list. In this mode, the\n\t * Loader instance might be used to load a SWF file that contains additional\n\t * modules of an application. </p>\n\t *\n\t * <p>To detect when the SWF file is finished loading, you can use the events\n\t * of the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\n\t * point, the code in the module SWF file can be executed to initialize and\n\t * start the module. In the offlist mode, a Loader instance might also be\n\t * used to load a SWF file that contains components or media assets. Again,\n\t * you can use the LoaderInfo object event notifications to detect when the\n\t * components are finished loading. At that point, the application can start\n\t * using the components and media assets in the library of the SWF file by\n\t * instantiating the ActionScript 3.0 classes that represent those components\n\t * and assets.</p>\n\t *\n\t * <p>To determine the status of a Loader object, monitor the following\n\t * events that the LoaderInfo object associated with the\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\n\t *\n\t * <ul>\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\n\t * dispatched if the file cannot be loaded or if an error occured during the\n\t * load process. </li>\n\t *   <li>The <code>progress</code> event fires continuously while the file is\n\t * being loaded.</li>\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\n\t * downloading, but before the loaded movie clip's methods and properties are\n\t * available. </li>\n\t *   <li>The <code>init</code> event is dispatched after the properties and\n\t * methods of the loaded SWF file are accessible, so you can begin\n\t * manipulating the loaded SWF file. This event is dispatched before the\n\t * <code>complete</code> handler. In streaming SWF files, the\n\t * <code>init</code> event can occur significantly earlier than the\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\n\t * handler.</li>\n\t * </ul>\n\t */\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\n\t{\n\t\tsuper();\n\t\t\n\t\tthis._useAssetLib = useAssetLibrary;\n\t\tthis._assetLibId = assetLibraryId;\n\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\n\t}\n\n\t/**\n\t * Cancels a <code>load()</code> method operation that is currently in\n\t * progress for the Loader instance.\n\t *\n\t */\n\tpublic close()\n\t{\n\t\tif (!this._loaderSession)\n\t\t\treturn;\n\t\t\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle;\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\n\t\t}\n\t\t\n\t\tthis._disposeLoaderSession();\n\t}\n\n\t/**\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\n\t * object that is a child of this Loader object. If you load an animated GIF\n\t * file, only the first frame is displayed. As the Loader object can contain\n\t * only a single child, issuing a subsequent <code>load()</code> request\n\t * terminates the previous request, if still pending, and commences a new\n\t * load.\n\t *\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\n\t * loaded image is 8,191 pixels in width or height, and the total number of\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\n\t * and 2,880 pixels in width.</p>\n\t *\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\n\t * rotation, and scale properties of the parent display objects of the Loader\n\t * object. </p>\n\t *\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\n\t * with this method, or to cancel a load operation that is in progress.</p>\n\t *\n\t * <p>You can prevent a SWF file from using this method by setting the\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\n\t * <code>embed</code> tags in the HTML page that contains the SWF\n\t * content.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\n\t * body), the POST operation is subject to the security rules applied to\n\t * uploads:</p>\n\t *\n\t * <ul>\n\t *   <li>The POST operation must be performed in response to a user-initiated\n\t * action, such as a mouse click or key press.</li>\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\n\t * same server as the SWF file that is sending the POST request), the target\n\t * server must provide a URL policy file that permits cross-domain\n\t * access.</li>\n\t * </ul>\n\t *\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\n\t * the POST operation is subject to the security rules applied to\n\t * uploads.</p>\n\t *\n\t * <p>For more information related to security, see the Flash Player\n\t * Developer Center Topic: <a\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\n\t * scope=\"external\">Security</a>.</p>\n\t *\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\n\t *                file to be loaded. A relative path must be relative to the\n\t *                main SWF file. Absolute URLs must include the protocol\n\t *                reference, such as http:// or file:///. Filenames cannot\n\t *                include disk drive specifications.\n\t * @param context A LoaderContext object, which has properties that define\n\t *                the following:\n\t *                <ul>\n\t *                  <li>Whether or not to check for the existence of a policy\n\t *                file upon loading the object</li>\n\t *                  <li>The ApplicationDomain for the loaded object</li>\n\t *                  <li>The SecurityDomain for the loaded object</li>\n\t *                  <li>The ImageDecodingPolicy for the loaded image\n\t *                object</li>\n\t *                </ul>\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the loaded content remains in\n\t *                its own security domain.</p>\n\t *\n\t *                <p>For complete details, see the description of the\n\t *                properties in the <a\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\n\t *                class.</p>\n\t * @param ns      An optional namespace string under which the file is to be\n\t *                loaded, allowing the differentiation of two resources with\n\t *                identical assets.\n\t * @param parser  An optional parser object for translating the loaded data\n\t *                into a usable resource. If not provided, LoaderSession will\n\t *                attempt to auto-detect the file type.\n\t * @throws IOError               The <code>digest</code> property of the\n\t *                               <code>request</code> object is not\n\t *                               <code>null</code>. You should only set the\n\t *                               <code>digest</code> property of a URLRequest\n\t *                               object when calling the\n\t *                               <code>URLLoader.load()</code> method when\n\t *                               loading a SWZ file(an Adobe platform\n\t *                               component).\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         The value of\n\t *                               <code>LoaderContext.securityDomain</code>\n\t *                               must be either <code>null</code> or\n\t *                               <code>SecurityDomain.currentDomain</code>.\n\t *                               This reflects the fact that you can only\n\t *                               place the loaded media in its natural\n\t *                               security sandbox or your own(the latter\n\t *                               requires a policy file).\n\t * @throws SecurityError         Local SWF files may not set\n\t *                               LoaderContext.securityDomain to anything\n\t *                               other than <code>null</code>. It is not\n\t *                               permitted to import non-local media into a\n\t *                               local sandbox, or to place other local media\n\t *                               in anything other than its natural sandbox.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\n\t *                               <code>securityDomain</code> properties of\n\t *                               the <code>context</code> parameter are from\n\t *                               a disallowed domain.\n\t * @throws SecurityError         If a local SWF file is attempting to use the\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the file has completed loading. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a network request is made over HTTP and\n\t *                      Flash Player can detect the HTTP status code.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      SWF file are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when an input or output error occurs that\n\t *                      causes a load operation to fail.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the loading operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is received while load operation\n\t *                      progresses.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if a SWF file in the local-with-filesystem\n\t *                      sandbox attempts to load content in the\n\t *                      local-with-networking sandbox, or vice versa.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\n\t}\n\n\t/**\n\t * Loads from binary data stored in a ByteArray object.\n\t *\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\n\t *\n\t * <p>When you use this method, consider the Flash Player security model,\n\t * which is described in the Loader class description. </p>\n\t *\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\n\t *                any of the file formats supported by the Loader class: SWF,\n\t *                GIF, JPEG, or PNG.\n\t * @param context A LoaderContext object. Only the\n\t *                <code>applicationDomain</code> property of the\n\t *                LoaderContext object applies; the\n\t *                <code>checkPolicyFile</code> and\n\t *                <code>securityDomain</code> properties of the LoaderContext\n\t *                object do not apply.\n\t *\n\t *                <p>If the <code>context</code> parameter is not specified\n\t *                or refers to a null object, the content is loaded into the\n\t *                current security domain -  a process referred to as \"import\n\t *                loading\" in Flash Player security documentation.\n\t *                Specifically, if the loading SWF file trusts the remote SWF\n\t *                by incorporating the remote SWF into its code, then the\n\t *                loading SWF can import it directly into its own security\n\t *                domain.</p>\n\t *\n\t *                <p>For more information related to security, see the Flash\n\t *                Player Developer Center Topic: <a\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\n\t *                scope=\"external\">Security</a>.</p>\n\t * @throws ArgumentError         If the <code>length</code> property of the\n\t *                               ByteArray object is not greater than 0.\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\n\t *                               <code>securityDomain</code> property of the\n\t *                               <code>context</code> parameter are non-null.\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\n\t *                               property of the <code>context</code>\n\t *                               parameter is a <code>Loader</code>.\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\n\t *                               parameter is set to non-null and has some\n\t *                               values which are not Strings.\n\t * @throws SecurityError         If the provided\n\t *                               <code>applicationDomain</code> property of\n\t *                               the <code>context</code> property is from a\n\t *                               disallowed domain.\n\t * @throws SecurityError         You cannot connect to commonly reserved\n\t *                               ports. For a complete list of blocked ports,\n\t *                               see \"Restricting Networking APIs\" in the\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and it is not possible to\n\t *                      add the loaded content as a child to the specified\n\t *                      DisplayObjectContainer. This could happen if the\n\t *                      loaded content is a\n\t *                      <code>flash.display.AVM1Movie</code> or if the\n\t *                      <code>addChild()</code> call to the\n\t *                      requestedContentParent throws an error.\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation is complete. The\n\t *                      <code>complete</code> event is always dispatched\n\t *                      after the <code>init</code> event.\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the properties and methods of the loaded\n\t *                      data are accessible. The <code>init</code> event\n\t *                      always precedes the <code>complete</code> event.\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the runtime cannot parse the data in the\n\t *                      byte array.\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when the operation starts.\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object as data is transfered in memory.\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object if the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      property has been specified and the security sandbox\n\t *                      of the\n\t *                      <code>LoaderContext.requestedContentParent</code>\n\t *                      does not have access to the loaded SWF.\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\n\t *                      object when a loaded object is removed.\n\t */\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\n\t{\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\n\t}\n\n\tprivate _getLoaderSession()\n\t{\n\t\tif (this._useAssetLib) {\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\n\t\t\tthis._loaderSession = lib.getLoaderSession();\n\t\t} else {\n\t\t\tthis._loaderSession = new LoaderSession();\n\t\t}\n\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\t// Error are handled separately (see documentation for addErrorHandler)\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\n\n\t\treturn this._loaderSession;\n\t}\n\n\tprivate _disposeLoaderSession()\n\t{\n\t\t// Add loader to garbage - for a collection sweep and kill\n\t\tthis._loaderSessionGarbage = this._loaderSession;\n\t\tdelete this._loaderSession;\n\t\tthis._loaderSession = null;\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\n\t}\n\t\n\t/**\n\t * Removes a child of this Loader object that was loaded by using the\n\t * <code>load()</code> method. The <code>property</code> of the associated\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\n\t * necessarily destroyed because other objects might have references to it;\n\t * however, it is no longer a child of the Loader object.\n\t *\n\t * <p>As a best practice, before you unload a child SWF file, you should\n\t * explicitly close any streams in the child SWF file's objects, such as\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\n\t * audio in the child SWF file might continue to play, even though the child\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\n\t * event listener to the child that listens for the <code>unload</code>\n\t * event. When the parent calls <code>Loader.unload()</code>, the\n\t * <code>unload</code> event is dispatched to the child. The following code\n\t * shows how you might do this:</p>\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\n\t * myLocalConnection.close(); }\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\n\t * closeAllStreams);</pre>\n\t *\n\t */\n\tpublic unload()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Enables a specific parser.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClass The parser class to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParser(parserClass:Object)\n\t{\n\t\tLoaderSession.enableParser(parserClass);\n\t}\n\n\t/**\n\t * Enables a list of parsers.\n\t * When no specific parser is set for a loading/parsing opperation,\n\t * loader3d can autoselect the correct parser to use.\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\n\t *\n\t * @param parserClasses A Vector of parser classes to enable.\n\t * @see away.parsers.Parsers\n\t */\n\tpublic static enableParsers(parserClasses:Array<Object>)\n\t{\n\t\tLoaderSession.enableParsers(parserClasses);\n\t}\n\t\n\tprivate loaderSessionGC():void\n\t{\n\t\t//remove listeners\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\n\n\t\tif (!this._useAssetLib)\n\t\t\tthis._loaderSessionGarbage.stop();\n\n\t\tdelete this._loaderSessionGarbage;\n\t\tthis._loaderSessionGarbage = null;\n\n\t\tclearTimeout(this._gcTimeoutIID);\n\t\tthis._gcTimeoutIID = null;\n\t}\n\n\tprivate onAssetComplete(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when an error occurs during loading\n\t */\n\tprivate onLoadError(event:IOErrorEvent):boolean\n\t{\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a an error occurs during parsing\n\t */\n\tprivate onParseError(event:ParserEvent):boolean\n\t{\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\n\t\t\tthis.dispatchEvent(event);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate onTextureSizeError(event:AssetEvent)\n\t{\n\t\tthis.dispatchEvent(event);\n\t}\n\n\t/**\n\t * Called when the resource and all of its dependencies was retrieved.\n\t */\n\tprivate onResourceComplete(event:LoaderEvent)\n\t{\n\t\tthis._content = <DisplayObject> event.content;\n\n\t\tif (this._content)\n\t\t\tthis.addChild(this._content);\n\n\t\tthis.dispatchEvent(event);\n\n\t\tthis._disposeLoaderSession();\n\t}\n}\n\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\nclass Scene extends EventDispatcher\n{\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\n\tprivate _partition:Partition;\n\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\n\tpublic _iCollectionMark = 0;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._partition = new Partition(new NodeBase());\n\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\n\n\t\tthis._iSceneGraphRoot._iSetScene(this);\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\n\t\tthis._iSceneGraphRoot.partition = this._partition;\n\t}\n\n\tpublic traversePartitions(traverser:CollectorBase)\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._partitions.length;\n\n\t\ttraverser.scene = this;\n\n\t\tthis._iCollectionMark++;\n\n\t\twhile (i < len)\n\t\t\tthis._partitions[i++].traverse(traverser);\n\t}\n\n\tpublic get partition():Partition\n\t{\n\t\treturn this._iSceneGraphRoot.partition;\n\t}\n\n\tpublic set partition(value:Partition)\n\t{\n\t\tthis._iSceneGraphRoot.partition = value;\n\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\n\t}\n\n\tpublic contains(child:DisplayObject):boolean\n\t{\n\t\treturn this._iSceneGraphRoot.contains(child);\n\t}\n\n\tpublic addChild(child:DisplayObject):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.addChild(child);\n\t}\n\n\tpublic removeChild(child:DisplayObject)\n\t{\n\t\tthis._iSceneGraphRoot.removeChild(child);\n\t}\n\n\tpublic removeChildAt(index:number)\n\t{\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\n\t}\n\n\n\tpublic getChildAt(index:number):DisplayObject\n\t{\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\n\t}\n\n\tpublic get numChildren():number\n\t{\n\t\treturn this._iSceneGraphRoot.numChildren;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.push(partition);\n\n\t\t//ensure duplicates are not found in partitions array\n\t\tif (this._partitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.push(partition);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPartition(partition:Partition)\n\t{\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\n\n\t\t//if no more partition references found, remove from partitions array\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\n\t}\n}\n\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\n\nclass View\n{\n\n\t/*\n\t *************************************************************************************************************************\n\t * Development Notes\n\t *************************************************************************************************************************\n\t *\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\n\t *\n\t * Background\n\t *                  - this is currently not being included in our tests and is currently disabled\n\t *\n\t **************************************************************************************************************************\n\t */\n\n\t// Protected\n\tpublic _pScene:Scene;\n\tpublic _pCamera:Camera;\n\tpublic _pEntityCollector:CollectorBase;\n\tpublic _pRenderer:IRenderer;\n\n\t// Private\n\tprivate _aspectRatio:number;\n\tprivate _width:number = 0;\n\tprivate _height:number = 0;\n\n\tprivate _time:number = 0;\n\tprivate _deltaTime:number = 0;\n\tprivate _backgroundColor:number = 0x000000;\n\tprivate _backgroundAlpha:number = 1;\n\n\tprivate _viewportDirty:boolean = true;\n\tprivate _scissorDirty:boolean = true;\n\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\n\tprivate _mouseManager:MouseManager;\n\tprivate _mousePicker:IPicker = new RaycastPicker();\n\n\tprivate _htmlElement:HTMLDivElement;\n\tprivate _shareContext:boolean;\n\tpublic _pMouseX:number;\n\tpublic _pMouseY:number;\n\n\t/*\n\t ***********************************************************************\n\t * Disabled / Not yet implemented\n\t ***********************************************************************\n\t *\n\t * private _background:away.textures.Texture2DBase;\n\t *\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\n\t *\n\t */\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\n\t{\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\n\n\t\tthis.scene = scene || new Scene();\n\t\tthis.camera = camera || new Camera();\n\t\tthis.renderer = renderer;\n\n\t\t//make sure document border is zero\n\t\tdocument.body.style.margin = \"0px\";\n\n\t\tthis._htmlElement = document.createElement(\"div\");\n\t\tthis._htmlElement.style.position = \"absolute\";\n\n\t\tdocument.body.appendChild(this._htmlElement);\n\n\t\tthis._mouseManager = MouseManager.getInstance();\n\t\tthis._mouseManager.registerView(this);\n\n//\t\t\tif (this._shareContext)\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\n\t}\n\n\t/**\n\t *\n\t * @param e\n\t */\n\tprivate onScenePartitionChanged(event:SceneEvent)\n\t{\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\n\n\tpublic get mouseX():number\n\t{\n\t\treturn this._pMouseX;\n\t}\n\n\tpublic get mouseY():number\n\t{\n\t\treturn this._pMouseY;\n\t}\n\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\n\t}\n\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\n\t{\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get htmlElement():HTMLDivElement\n\t{\n\t\treturn this._htmlElement;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get renderer():IRenderer\n\t{\n\t\treturn this._pRenderer;\n\t}\n\n\tpublic set renderer(value:IRenderer)\n\t{\n\t\tif (this._pRenderer == value)\n\t\t\treturn;\n\n\t\tif (this._pRenderer) {\n\t\t\tthis._pRenderer.dispose();\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\t\t}\n\n\t\tthis._pRenderer = value;\n\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\n\n\t\t//reset entity collector\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\n\n\t\tif (this._pCamera)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\t//reset back buffer\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\n\t\tthis._pRenderer.width = this._width;\n\t\tthis._pRenderer.height = this._height;\n\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tif (this._pRenderer)\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get backgroundColor():number\n\t{\n\t\treturn this._backgroundColor;\n\t}\n\n\tpublic set backgroundColor(value:number)\n\t{\n\t\tif (this._backgroundColor == value)\n\t\t\treturn;\n\n\t\tthis._backgroundColor = value;\n\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get backgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\t/**\n\t *\n\t * @param value\n\t */\n\tpublic set backgroundAlpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {Camera3D}\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\t/**\n\t * Set camera that's used to render the scene for this viewport\n\t */\n\tpublic set camera(value:Camera)\n\t{\n\t\tif (this._pCamera == value)\n\t\t\treturn;\n\n\t\tif (this._pCamera)\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\n\t\tthis._pCamera = value;\n\n\t\tif (this._pEntityCollector)\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t * @returns {away.containers.Scene3D}\n\t */\n\tpublic get scene():Scene\n\t{\n\t\treturn this._pScene;\n\t}\n\n\t/**\n\t * Set the scene that's used to render for this viewport\n\t */\n\tpublic set scene(value:Scene)\n\t{\n\t\tif (this._pScene == value)\n\t\t\treturn;\n\n\t\tif (this._pScene)\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tthis._pScene = value;\n\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\n\n\t\tif (this._pCamera)\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get deltaTime():number\n\t{\n\t\treturn this._deltaTime;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.width = value;\n\t\tthis._htmlElement.style.width = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._aspectRatio = this._width/this._height;\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\t\tthis._pRenderer.height = value;\n\t\tthis._htmlElement.style.height = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get mousePicker():IPicker\n\t{\n\t\treturn this._mousePicker;\n\t}\n\n\tpublic set mousePicker(value:IPicker)\n\t{\n\t\tif (this._mousePicker == value)\n\t\t\treturn;\n\n\t\tif (value == null)\n\t\t\tthis._mousePicker = new RaycastPicker();\n\t\telse\n\t\t\tthis._mousePicker = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._pRenderer.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this._pRenderer.x == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.x == value;\n\t\tthis._htmlElement.style.left = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._pRenderer.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this._pRenderer.y == value)\n\t\t\treturn;\n\n\t\tthis._pRenderer.y == value;\n\t\tthis._htmlElement.style.top = value + \"px\";\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get visible():boolean\n\t{\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\n\t}\n\n\tpublic set visible(value:boolean)\n\t{\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\n\t\t//TODO transfer visible property to associated context (if one exists)\n\t}\n\n\t/**\n\t *\n\t * @returns {number}\n\t */\n\tpublic get renderedFacesCount():number\n\t{\n\t\treturn 0; //TODO\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\n\t}\n\n\t/**\n\t * Renders the view.\n\t */\n\tpublic render()\n\t{\n\t\tthis.pUpdateTime();\n\n\t\t//update view and size data\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\n\n\t\tif (this._scissorDirty) {\n\t\t\tthis._scissorDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\n\t\t}\n\n\t\tif (this._viewportDirty) {\n\t\t\tthis._viewportDirty = false;\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\n\t\t}\n\n\t\t// update picking\n\t\tif (!this._shareContext) {\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\n\t\t\t//_touch3DManager.fireTouchEvents();\n\t\t}\n\t\t//_touch3DManager.updateCollider();\n\n\t\t//clear entity collector ready for collection\n\t\tthis._pEntityCollector.clear();\n\n\t\t// collect stuff to render\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\n\n\t\t//render the contents of the entity collector\n\t\tthis._pRenderer.render(this._pEntityCollector);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic pUpdateTime():void\n\t{\n\t\tvar time:number = getTimer();\n\n\t\tif (this._time == 0)\n\t\t\tthis._time = time;\n\n\t\tthis._deltaTime = time - this._time;\n\t\tthis._time = time;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRenderer.dispose();\n\n\t\t// TODO: imeplement mouseManager / touch3DManager\n\t\tthis._mouseManager.unregisterView(this);\n\n\t\t//this._touch3DManager.disableTouchListeners(this);\n\t\t//this._touch3DManager.dispose();\n\n\t\tthis._mouseManager = null;\n\t\t//this._touch3DManager = null;\n\n\t\tthis._pRenderer = null;\n\t\tthis._pEntityCollector = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get iEntityCollector():CollectorBase\n\t{\n\t\treturn this._pEntityCollector;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onProjectionChanged(event:CameraEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onViewportUpdated(event:RendererEvent)\n\t{\n\t\tthis._viewportDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate onScissorUpdated(event:RendererEvent)\n\t{\n\t\tthis._scissorDirty = true;\n\t}\n\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\n\n\t\treturn v;\n\t}\n\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\n\n\t}\n\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\n\t{\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\n\t}\n\n\t/* TODO: implement Touch3DManager\n\t public get touchPicker():IPicker\n\t {\n\t return this._touch3DManager.touchPicker;\n\t }\n\t */\n\t/* TODO: implement Touch3DManager\n\t public set touchPicker( value:IPicker)\n\t {\n\t this._touch3DManager.touchPicker = value;\n\t }\n\t */\n\n\tpublic forceMouseMove:boolean;\n\n\t/*TODO: implement Background\n\t public get background():away.textures.Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\t/*TODO: implement Background\n\t public set background( value:away.textures.Texture2DBase )\n\t {\n\t this._background = value;\n\t this._renderer.background = _background;\n\t }\n\t */\n\n\t// TODO: required dependency stageGL\n\tpublic updateCollider()\n\t{\n\t\tif (!this._shareContext) {\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\t\t} else {\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\n\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\n\t\t}\n\t}\n}\n\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass ControllerBase\n{\n\tpublic _pControllerDirty:boolean;\n\tpublic _pAutoUpdate:boolean = true;\n\tpublic _pTargetObject:DisplayObject;\n\n\tconstructor(targetObject:DisplayObject = null)\n\t{\n\t\tthis.targetObject = targetObject;\n\t}\n\n\tpublic pNotifyUpdate()\n\t{\n\t\tif (this._pTargetObject)\n\t\t\tthis._pTargetObject.invalidatePartition();\n\t}\n\n\tpublic get targetObject():DisplayObject\n\t{\n\t\treturn this._pTargetObject;\n\t}\n\n\tpublic set targetObject(val:DisplayObject)\n\t{\n\t\tif (this._pTargetObject == val)\n\t\t\treturn;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = null;\n\n\t\tthis._pTargetObject = val;\n\n\t\tif (this._pTargetObject && this._pAutoUpdate)\n\t\t\tthis._pTargetObject._iController = this;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._pAutoUpdate;\n\t}\n\n\tpublic set autoUpdate(val:boolean)\n\t{\n\t\tif (this._pAutoUpdate == val)\n\t\t\treturn;\n\n\t\tthis._pAutoUpdate = val;\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pAutoUpdate)\n\t\t\t\tthis._pTargetObject._iController = this;\n\t\t\telse\n\t\t\t\tthis._pTargetObject._iController = null;\n\t\t}\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic updateController()\n\t{\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\n\t\t\tthis._pControllerDirty = false;\n\t\t\tthis.pNotifyUpdate();\n\t\t}\n\t}\n}\n\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\n\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away3d.containers.View3D\n */\nclass FirstPersonController extends ControllerBase\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic  _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _walkIncrement:number = 0;\n\tprivate _strafeIncrement:number = 0;\n\tprivate _wrapPanAngle:boolean = false;\n\n\tpublic fly:boolean = false;\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\n\n\t\tif (this._walkIncrement) {\n\t\t\tif (this.fly) {\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\n\t\t\t} else {\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\t\t}\n\t\t\tthis._walkIncrement = 0;\n\t\t}\n\n\t\tif (this._strafeIncrement) {\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\n\t\t\tthis._strafeIncrement = 0;\n\t\t}\n\n\t}\n\n\tpublic incrementWalk(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._walkIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic incrementStrafe(val:number)\n\t{\n\t\tif (val == 0)\n\t\t\treturn;\n\n\t\tthis._strafeIncrement += val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n}\n\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\n\n/**\n * Controller used to follow behind an object on the XZ plane, with an optional\n * elevation (tiltAngle).\n *\n * @see    away3d.containers.View3D\n */\nclass FollowController extends HoverController\n{\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\n\t{\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (!this.lookAtObject)\n\t\t\treturn;\n\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\n\t\tsuper.update();\n\t}\n}\n\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Extended camera used to hover round a specified target object.\n *\n * @see    away.containers.View\n */\nclass HoverController extends LookAtController\n{\n\tpublic _iCurrentPanAngle:number = 0;\n\tpublic _iCurrentTiltAngle:number = 90;\n\n\tprivate _panAngle:number = 0;\n\tprivate _tiltAngle:number = 90;\n\tprivate _distance:number = 1000;\n\tprivate _minPanAngle:number = -Infinity;\n\tprivate _maxPanAngle:number = Infinity;\n\tprivate _minTiltAngle:number = -90;\n\tprivate _maxTiltAngle:number = 90;\n\tprivate _steps:number = 8;\n\tprivate _yFactor:number = 2;\n\tprivate _wrapPanAngle:boolean = false;\n\tprivate _upAxis:Vector3D = new Vector3D();\n\n\t/**\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\n\t *\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t */\n\tpublic get steps():number\n\t{\n\t\treturn this._steps;\n\t}\n\n\tpublic set steps(val:number)\n\t{\n\t\tval = (val < 1)? 1 : val;\n\n\t\tif (this._steps == val)\n\t\t\treturn;\n\n\t\tthis._steps = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\n\t */\n\tpublic get panAngle():number\n\t{\n\t\treturn this._panAngle;\n\t}\n\n\tpublic set panAngle(val:number)\n\t{\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\n\n\t\tif (this._panAngle == val)\n\t\t\treturn;\n\n\t\tthis._panAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Elevation angle of the camera in degrees. Defaults to 90.\n\t */\n\tpublic get tiltAngle():number\n\t{\n\t\treturn this._tiltAngle;\n\t}\n\n\tpublic set tiltAngle(val:number)\n\t{\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\n\n\t\tif (this._tiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._tiltAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Distance between the camera and the specified target. Defaults to 1000.\n\t */\n\tpublic get distance():number\n\t{\n\t\treturn this._distance;\n\t}\n\n\tpublic set distance(val:number)\n\t{\n\t\tif (this._distance == val)\n\t\t\treturn;\n\n\t\tthis._distance = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get minPanAngle():number\n\t{\n\t\treturn this._minPanAngle;\n\t}\n\n\tpublic set minPanAngle(val:number)\n\t{\n\t\tif (this._minPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._minPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\n\t *\n\t * @see    #panAngle\n\t */\n\tpublic get maxPanAngle():number\n\t{\n\t\treturn this._maxPanAngle;\n\t}\n\n\tpublic set maxPanAngle(val:number)\n\t{\n\t\tif (this._maxPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxPanAngle = val;\n\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\n\t}\n\n\t/**\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get minTiltAngle():number\n\t{\n\t\treturn this._minTiltAngle;\n\t}\n\n\tpublic set minTiltAngle(val:number)\n\t{\n\t\tif (this._minTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._minTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\n\t *\n\t * @see    #tiltAngle\n\t */\n\tpublic get maxTiltAngle():number\n\t{\n\t\treturn this._maxTiltAngle;\n\t}\n\n\tpublic set maxTiltAngle(val:number)\n\t{\n\t\tif (this._maxTiltAngle == val)\n\t\t\treturn;\n\n\t\tthis._maxTiltAngle = val;\n\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\n\t}\n\n\t/**\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\n\t *\n\t * @see    #distance\n\t */\n\tpublic get yFactor():number\n\t{\n\t\treturn this._yFactor;\n\t}\n\n\tpublic set yFactor(val:number)\n\t{\n\t\tif (this._yFactor == val)\n\t\t\treturn;\n\n\t\tthis._yFactor = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\n\t */\n\tpublic get wrapPanAngle():boolean\n\t{\n\t\treturn this._wrapPanAngle;\n\t}\n\n\tpublic set wrapPanAngle(val:boolean)\n\t{\n\t\tif (this._wrapPanAngle == val)\n\t\t\treturn;\n\n\t\tthis._wrapPanAngle = val;\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t/**\n\t * Creates a new <code>HoverController</code> object.\n\t */\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.distance = distance;\n\t\tthis.panAngle = panAngle;\n\t\tthis.tiltAngle = tiltAngle;\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\n\t\tthis.minTiltAngle = minTiltAngle;\n\t\tthis.maxTiltAngle = maxTiltAngle;\n\t\tthis.steps = steps;\n\t\tthis.yFactor = yFactor;\n\t\tthis.wrapPanAngle = wrapPanAngle;\n\n\t\t//values passed in contrustor are applied immediately\n\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t}\n\n\t/**\n\t * Updates the current tilt angle and pan angle values.\n\t *\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\n\t *\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\n\t *\n\t * @see    #tiltAngle\n\t * @see    #panAngle\n\t * @see    #steps\n\t */\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\n\n\t\t\tthis._pControllerDirty = true;\n\n\t\t\tif (this._wrapPanAngle) {\n\t\t\t\tif (this._panAngle < 0) {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\n\t\t\t\t} else {\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\n\t\t\t\t}\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\n\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\n\t\t\t}\n\n\t\t\tif (interpolate) {\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\n\t\t\t} else {\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t}\n\n\t\t\t//snap coords if angle differences are close\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\n\t\t\t}\n\t\t}\n\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\n\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\n\t\t}\n\t}\n}\n\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\n\nclass LookAtController extends ControllerBase\n{\n\tpublic _pLookAtPosition:Vector3D;\n\tpublic _pLookAtObject:DisplayObject;\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\n\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\n\t{\n\t\tsuper(targetObject);\n\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\n\n\t\tif (lookAtObject)\n\t\t\tthis.lookAtObject = lookAtObject;\n\t\telse\n\t\t\tthis.lookAtPosition = new Vector3D();\n\t}\n\n\tpublic get lookAtPosition():Vector3D\n\t{\n\t\treturn this._pLookAtPosition;\n\t}\n\n\tpublic set lookAtPosition(val:Vector3D)\n\t{\n\t\tif (this._pLookAtObject) {\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\t\t\tthis._pLookAtObject = null;\n\t\t}\n\n\t\tthis._pLookAtPosition = val;\n\t\tthis.pNotifyUpdate();\n\t}\n\n\tpublic get lookAtObject():DisplayObject\n\t{\n\t\treturn this._pLookAtObject;\n\t}\n\n\tpublic set lookAtObject(val:DisplayObject)\n\t{\n\t\tif (this._pLookAtPosition)\n\t\t\tthis._pLookAtPosition = null;\n\n\t\tif (this._pLookAtObject == val)\n\t\t\treturn;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis._pLookAtObject = val;\n\n\t\tif (this._pLookAtObject)\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\n\n\t\tthis.pNotifyUpdate();\n\t}\n\n\t//@override\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tif (this._pTargetObject) {\n\t\t\tif (this._pLookAtPosition)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\n\t\t\telse if (this._pLookAtObject)\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\n\t\t}\n\t}\n\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\n\t{\n\t\tthis.pNotifyUpdate();\n\t}\n}\n\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\n\n/**\n * Uses spring physics to animate the target object towards a position that is\n * defined as the lookAtTarget object's position plus the vector defined by the\n * positionOffset property.\n */\nclass SpringController extends LookAtController\n{\n\tprivate _velocity:Vector3D;\n\tprivate _dv:Vector3D;\n\tprivate _stretch:Vector3D;\n\tprivate _force:Vector3D;\n\tprivate _acceleration:Vector3D;\n\tprivate _desiredPosition:Vector3D;\n\n\t/**\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic stiffness:number;\n\n\t/**\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\n\t * A number between 1 and 20 is recommended.\n\t */\n\tpublic damping:number;\n\n\t/**\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\n\t */\n\tpublic mass:number;\n\n\t/**\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\n\t */\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\n\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\n\t{\n\t\tsuper(targetObject, lookAtObject);\n\n\t\tthis.stiffness = stiffness;\n\t\tthis.damping = damping;\n\t\tthis.mass = mass;\n\n\t\tthis._velocity = new Vector3D();\n\t\tthis._dv = new Vector3D();\n\t\tthis._stretch = new Vector3D();\n\t\tthis._force = new Vector3D();\n\t\tthis._acceleration = new Vector3D();\n\t\tthis._desiredPosition = new Vector3D();\n\n\t}\n\n\tpublic update(interpolate:boolean = true)\n\t{\n\t\tvar offs:Vector3D;\n\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\n\t\t\treturn;\n\n\t\tthis._pControllerDirty = true;\n\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\n\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\n\t\tthis._stretch.scaleBy(-this.stiffness);\n\n\t\tthis._dv.copyFrom(this._velocity);\n\t\tthis._dv.scaleBy(this.damping);\n\n\t\tthis._force.x = this._stretch.x - this._dv.x;\n\t\tthis._force.y = this._stretch.y - this._dv.y;\n\t\tthis._force.z = this._stretch.z - this._dv.z;\n\n\t\tthis._acceleration.copyFrom(this._force);\n\t\tthis._acceleration.scaleBy(1/this.mass);\n\n\t\tthis._velocity.incrementBy(this._acceleration);\n\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\n\n\t\tsuper.update();\n\t}\n}\n\nexport = SpringController;",
    "/**\n * The CapsStyle class is an enumeration of constant values that specify the\n * caps style to use in drawing lines. The constants are provided for use as\n * values in the <code>caps</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\n * following three types of caps:\n */\nclass CapsStyle\n{\n\t/**\n\t * Used to specify round caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n\n\t/**\n\t * Used to specify no caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Used to specify square caps in the <code>caps</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static SQUARE:string = \"square\";\n}\n\nexport = CapsStyle;",
    "/**\n * The GradientType class provides values for the <code>type</code> parameter\n * in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\n * class.\n */\nclass GradientType\n{\n\t/**\n\t * Value used to specify a linear gradient fill.\n\t */\n\tpublic static LINEAR:string = \"linear\";\n\n\t/**\n\t * Value used to specify a radial gradient fill.\n\t */\n\tpublic static RADIAL:string = \"radial\";\n}\n\nexport = GradientType;",
    "/**\n * The GraphicsPathWinding class provides values for the\n * <code>flash.display.GraphicsPath.winding</code> property and the\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\n * direction to draw a path. A clockwise path is positively wound, and a\n * counter-clockwise path is negatively wound:\n *\n * <p> When paths intersect or overlap, the winding direction determines the\n * rules for filling the areas created by the intersection or overlap:</p>\n */\nclass GraphicsPathWinding\n{\n\tpublic static EVEN_ODD:string = \"evenOdd\";\n\tpublic static NON_ZERO:string = \"nonZero\";\n}\n\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\n\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\n\n/**\n * The Graphics class contains a set of methods that you can use to create a\n * vector shape. Display objects that support drawing include Sprite and Shape\n * objects. Each of these classes includes a <code>graphics</code> property\n * that is a Graphics object. The following are among those helper functions\n * provided for ease of use: <code>drawRect()</code>,\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\n * <code>drawEllipse()</code>.\n *\n * <p>You cannot create a Graphics object directly from ActionScript code. If\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\n *\n * <p>The Graphics class is final; it cannot be subclassed.</p>\n */\nclass Graphics\n{\n\t/**\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\n\t * tiled to fill the area. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\n\t *               to be displayed.\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the bitmap. For\n\t *               example, you can use the following matrix to rotate a bitmap\n\t *               by 45 degrees(pi/4 radians):\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\n\t *               pattern. If <code>false</code>, the bitmap image does not\n\t *               repeat, and the edges of the bitmap are used for any fill\n\t *               area that extends beyond the bitmap.\n\t *\n\t *               <p>For example, consider the following bitmap(a 20 x\n\t *               20-pixel checkerboard pattern):</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\n\t *               in the following example), the bitmap fill repeats the\n\t *               bitmap:</p>\n\t *\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\n\t *               the bitmap fill uses the edge pixels for the fill area\n\t *               outside the bitmap:</p>\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\n\t *               <code>true</code>, upscaled bitmap images are rendered by\n\t *               using a bilinear algorithm. Rendering by using the nearest\n\t *               neighbor algorithm is faster.\n\t */\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\n\t * when drawing. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * @param color The color of the fill(0xRRGGBB).\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\n\t */\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\n\t * the object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use:\n\t *                            <code>GradientType.LINEAR</code> or\n\t *                            <code>GradientType.RADIAL</code>.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>beginGradientFill()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use, either:\n\t *                            <code>SpreadMethod.PAD</code>,\n\t *                            <code>SpreadMethod.REFLECT</code>, or\n\t *                            <code>SpreadMethod.REPEAT</code>.\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors:</p>\n\t *\n\t *                            <p>This example uses\n\t *                            <code>SpreadMethod.PAD</code> for the spread\n\t *                            method, and the gradient fill looks like the\n\t *                            following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t *\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\n\t *                            for the spread method, the gradient fill looks\n\t *                            like the following:</p>\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use:\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\n\t *                            <code>InterpolationMethod.RGB</code>\n\t *\n\t *                            <p>For example, consider a simple linear\n\t *                            gradient between two colors(with the\n\t *                            <code>spreadMethod</code> parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows: </p>\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. 0 means that the\n\t *                            focal point is in the center. 1 means that the\n\t *                            focal point is at one border of the gradient\n\t *                            circle. -1 means that the focal point is at the\n\t *                            other border of the gradient circle. A value\n\t *                            less than -1 or greater than 1 is rounded to -1\n\t *                            or 1. For example, the following example shows\n\t *                            a <code>focalPointRatio</code> set to 0.75:\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\n\t */\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\n\t * object. The fill remains in effect until you call the\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\n\t * method. Calling the <code>clear()</code> method clears the fill.\n\t *\n\t * <p>The application renders the fill whenever three or more points are\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\n\t *\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\n\t * be colored cyan.</p>\n\t *\n\t * @param shader The shader to use for the fill. This Shader instance is not\n\t *               required to specify an image input. However, if an image\n\t *               input is specified in the shader, the input must be provided\n\t *               manually. To specify the input, set the <code>input</code>\n\t *               property of the corresponding ShaderInput property of the\n\t *               <code>Shader.data</code> property.\n\t *\n\t *               <p>When you pass a Shader instance as an argument the shader\n\t *               is copied internally. The drawing fill operation uses that\n\t *               internal copy, not a reference to the original shader. Any\n\t *               changes made to the shader, such as changing a parameter\n\t *               value, input, or bytecode, are not applied to the copied\n\t *               shader that's used for the fill.</p>\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\n\t *               can use to define transformations on the shader. For\n\t *               example, you can use the following matrix to rotate a shader\n\t *               by 45 degrees(pi/4 radians):\n\t *\n\t *               <p>The coordinates received in the shader are based on the\n\t *               matrix that is specified for the <code>matrix</code>\n\t *               parameter. For a default(<code>null</code>) matrix, the\n\t *               coordinates in the shader are local pixel coordinates which\n\t *               can be used to sample an input.</p>\n\t * @throws ArgumentError When the shader output type is not compatible with\n\t *                       this operation(the shader must specify a\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\n\t * @throws ArgumentError When the shader specifies an image input that isn't\n\t *                       provided.\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\n\t *                       as an input and the <code>width</code> and\n\t *                       <code>height</code> properties aren't specified for\n\t *                       the ShaderInput, or the specified values don't match\n\t *                       the amount of data in the input object. See the\n\t *                       <code>ShaderInput.input</code> property for more\n\t *                       information.\n\t */\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Clears the graphics that were drawn to this Graphics object, and resets\n\t * fill and line style settings.\n\t *\n\t */\n\tpublic clear()\n\t{\n\n\t}\n\n\t/**\n\t * Copies all of drawing commands from the source Graphics object into the\n\t * calling Graphics object.\n\t *\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\n\t *                       commands.\n\t */\n\tpublic copyFrom(sourceGraphics:Graphics)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a cubic Bezier curve from the current drawing position to the\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\n\t * and two control points. The curve interpolates the two anchor points and\n\t * curves toward the two control points.\n\t *\n\t * The four points you use to draw a cubic Bezier curve with the\n\t * <code>cubicCurveTo()</code> method are as follows:\n\t *\n\t * <ul>\n\t *   <li>The current drawing position is the first anchor point. </li>\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\n\t *   </li>\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\n\t *   specify the first control point.</li>\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\n\t *   specify the second control point.</li>\n\t * </ul>\n\t *\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\n\t *\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\n\t * the current drawing position to (<code>anchorX</code>,\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\n\t * the current drawing position remains unchanged.\n\t *\n\t * If your movie clip contains content created with the Flash drawing tools,\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\n\t * underneath that content.\n\t *\n\t * @param controlX1 Specifies the horizontal position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY1 Specifies the vertical position of the first control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlX2 Specifies the horizontal position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param controlY2 Specifies the vertical position of the second control\n\t *                  point relative to the registration point of the parent\n\t *                  display object.\n\t * @param anchorX   Specifies the horizontal position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t * @param anchorY   Specifies the vertical position of the anchor point\n\t *                  relative to the registration point of the parent display\n\t *                  object.\n\t */\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a curve using the current line style from the current drawing\n\t * position to(anchorX, anchorY) and using the control point that\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\n\t * drawing position is then set to(<code>anchorX</code>,\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\n\t * content created with the Flash drawing tools, calls to the\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\n\t * call the <code>curveTo()</code> method before any calls to the\n\t * <code>moveTo()</code> method, the default of the current drawing position\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\n\t * current drawing position is not changed.\n\t *\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\n\t * consist of two anchor points and one control point. The curve interpolates\n\t * the two anchor points and curves toward the control point. </p>\n\t *\n\t * @param controlX A number that specifies the horizontal position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param controlY A number that specifies the vertical position of the\n\t *                 control point relative to the registration point of the\n\t *                 parent display object.\n\t * @param anchorX  A number that specifies the horizontal position of the\n\t *                 next anchor point relative to the registration point of\n\t *                 the parent display object.\n\t * @param anchorY  A number that specifies the vertical position of the next\n\t *                 anchor point relative to the registration point of the\n\t *                 parent display object.\n\t */\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a circle. Set the line style, fill, or both before you call the\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      The <i>x</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param y      The <i>y</i> location of the center of the circle relative\n\t *               to the registration point of the parent display object(in\n\t *               pixels).\n\t * @param radius The radius of the circle(in pixels).\n\t */\n\tpublic drawCircle(x:number, y:number, radius:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\n\t * <code>drawEllipse()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\n\t *               the ellipse relative to the registration point of the parent\n\t *               display object(in pixels).\n\t * @param width  The width of the ellipse(in pixels).\n\t * @param height The height of the ellipse(in pixels).\n\t */\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of IGraphicsData instances for drawing. This method\n\t * accepts a Vector containing objects including paths, fills, and strokes\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\n\t * instances can refer to a part of a shape, or a complex fully defined set\n\t * of data for rendering a complete shape.\n\t *\n\t * <p> Graphics paths can contain other graphics paths. If the\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\n\t * sub-paths are rendered during this operation. </p>\n\t *\n\t */\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\n\t{\n\n\t}\n\n\t/**\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\n\t * coordinate location. The drawing direction is a value from the\n\t * GraphicsPathWinding class.\n\t *\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\n\t * with a series of individual <code>lineTo()</code> and\n\t * <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\n\t * so rotation and scaling of shapes is more accurate and gives better\n\t * results. However, curves submitted using the <code>drawPath()</code>\n\t * method can have small sub-pixel alignment errors when used in conjunction\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\n\t *\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\n\t * for filling and drawing lines. They are: </p>\n\t *\n\t * <ul>\n\t *   <li>When a fill is applied to rendering a path:\n\t * <ul>\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\n\t * stroke rendering will still occur, consistent with the rules for strokes\n\t * below.)</li>\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\n\t * begin point) is implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t *   <li>When a stroke is applied to rendering a path:\n\t * <ul>\n\t *   <li>The sub-paths can be composed of any number of points.</li>\n\t *   <li>The sub-path is never implicitly closed.</li>\n\t * </ul>\n\t * </li>\n\t * </ul>\n\t *\n\t * @param winding Specifies the winding rule using a value defined in the\n\t *                GraphicsPathWinding class.\n\t */\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method.\n\t *\n\t * @param x      A number indicating the horizontal position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param y      A number indicating the vertical position relative to the\n\t *               registration point of the parent display object(in pixels).\n\t * @param width  The width of the rectangle(in pixels).\n\t * @param height The height of the rectangle(in pixels).\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\n\t *                       parameters are not a number\n\t *                      (<code>Number.NaN</code>).\n\t */\n\tpublic drawRect(x:number, y:number, width:number, height:number)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\n\t * call the <code>drawRoundRect()</code> method, by calling the\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method.\n\t *\n\t * @param x             A number indicating the horizontal position relative\n\t *                      to the registration point of the parent display\n\t *                      object(in pixels).\n\t * @param y             A number indicating the vertical position relative to\n\t *                      the registration point of the parent display object\n\t *                     (in pixels).\n\t * @param width         The width of the round rectangle(in pixels).\n\t * @param height        The height of the round rectangle(in pixels).\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\n\t *                      corners(in pixels).\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\n\t *                      corners(in pixels). Optional; if no value is\n\t *                      specified, the default value matches that provided\n\t *                      for the <code>ellipseWidth</code> parameter.\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\n\t *                       <code>ellipseWidth</code> or\n\t *                       <code>ellipseHeight</code> parameters are not a\n\t *                       number(<code>Number.NaN</code>).\n\t */\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\n\t{\n\n\t}\n\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\n\n\t/**\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\n\t * set of(u,v) coordinates.\n\t *\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\n\t * that transform matrix is ignored. </p>\n\t *\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\n\t * bitmap fill is used. </p>\n\t *\n\t * @param culling Specifies whether to render triangles that face in a\n\t *                specified direction. This parameter prevents the rendering\n\t *                of triangles that cannot be seen in the current view. This\n\t *                parameter can be set to any value defined by the\n\t *                TriangleCulling class.\n\t */\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\n\t{\n\n\t}\n\n\t/**\n\t * Applies a fill to the lines and curves that were added since the last call\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\n\t * specified in the previous call to the <code>beginFill()</code>,\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\n\t * method. If the current drawing position does not equal the previous\n\t * position specified in a <code>moveTo()</code> method and a fill is\n\t * defined, the path is closed with a line and then filled.\n\t *\n\t */\n\tpublic endFill()\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\n\t *\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param bitmap The bitmap to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\n\t * @param smooth Whether smoothing should be applied to the bitmap.\n\t */\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a gradient to use for the stroke when drawing lines.\n\t *\n\t * <p>The gradient line style is used for subsequent calls to Graphics\n\t * methods such as the <code>lineTo()</code> methods or the\n\t * <code>drawCircle()</code> method. The line style remains in effect until\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\n\t * methods, or the <code>lineGradientStyle()</code> method again with\n\t * different parameters. </p>\n\t *\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\n\t * of drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param type                A value from the GradientType class that\n\t *                            specifies which gradient type to use, either\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\n\t * @param colors              An array of RGB hexadecimal color values used\n\t *                            in the gradient; for example, red is 0xFF0000,\n\t *                            blue is 0x0000FF, and so on. You can specify\n\t *                            up to 15 colors. For each color, specify a\n\t *                            corresponding value in the alphas and ratios\n\t *                            parameters.\n\t * @param alphas              An array of alpha values for the corresponding\n\t *                            colors in the colors array; valid values are 0\n\t *                            to 1. If the value is less than 0, the default\n\t *                            is 0. If the value is greater than 1, the\n\t *                            default is 1.\n\t * @param ratios              An array of color distribution ratios; valid\n\t *                            values are 0-255. This value defines the\n\t *                            percentage of the width where the color is\n\t *                            sampled at 100%. The value 0 represents the\n\t *                            left position in the gradient box, and 255\n\t *                            represents the right position in the gradient\n\t *                            box.\n\t * @param matrix              A transformation matrix as defined by the\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\n\t *                            class includes a\n\t *                            <code>createGradientBox()</code> method, which\n\t *                            lets you conveniently set up the matrix for use\n\t *                            with the <code>lineGradientStyle()</code>\n\t *                            method.\n\t * @param spreadMethod        A value from the SpreadMethod class that\n\t *                            specifies which spread method to use:\n\t * @param interpolationMethod A value from the InterpolationMethod class that\n\t *                            specifies which value to use. For example,\n\t *                            consider a simple linear gradient between two\n\t *                            colors(with the <code>spreadMethod</code>\n\t *                            parameter set to\n\t *                            <code>SpreadMethod.REFLECT</code>). The\n\t *                            different interpolation methods affect the\n\t *                            appearance as follows:\n\t * @param focalPointRatio     A number that controls the location of the\n\t *                            focal point of the gradient. The value 0 means\n\t *                            the focal point is in the center. The value 1\n\t *                            means the focal point is at one border of the\n\t *                            gradient circle. The value -1 means that the\n\t *                            focal point is at the other border of the\n\t *                            gradient circle. Values less than -1 or greater\n\t *                            than 1 are rounded to -1 or 1. The following\n\t *                            image shows a gradient with a\n\t *                            <code>focalPointRatio</code> of -0.75:\n\t */\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\n\t{\n\n\t}\n\n\t/**\n\t * Specifies a shader to use for the line stroke when drawing lines.\n\t *\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\n\t * </p>\n\t *\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within a path. </p>\n\t *\n\t * <p>Call the <code>lineStyle()</code> method before you call the\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\n\t * value of the line style is <code>undefined</code>.</p>\n\t *\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\n\t * <code>undefined</code>. </p>\n\t *\n\t * @param shader The shader to use for the line stroke.\n\t * @param matrix An optional transformation matrix as defined by the\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\n\t *               otherwise manipulate the bitmap before applying it to the\n\t *               line style.\n\t */\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\n//\t\t{\n//\n//\t\t}\n\n\t/**\n\t * Specifies a line style used for subsequent calls to Graphics methods such\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\n\t * method. The line style remains in effect until you call the\n\t * <code>lineGradientStyle()</code> method, the\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\n\t * method with different parameters.\n\t *\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\n\t * drawing a path to specify different styles for different line segments\n\t * within the path.</p>\n\t *\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\n\t * style back to <code>undefined</code>.</p>\n\t *\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\n\t *\n\t * @param thickness    An integer that indicates the thickness of the line in\n\t *                     points; valid values are 0-255. If a number is not\n\t *                     specified, or if the parameter is undefined, a line is\n\t *                     not drawn. If a value of less than 0 is passed, the\n\t *                     default is 0. The value 0 indicates hairline\n\t *                     thickness; the maximum thickness is 255. If a value\n\t *                     greater than 255 is passed, the default is 255.\n\t * @param color        A hexadecimal color value of the line; for example,\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\n\t *                     value is not indicated, the default is 0x000000\n\t *                    (black). Optional.\n\t * @param alpha        A number that indicates the alpha value of the color\n\t *                     of the line; valid values are 0 to 1. If a value is\n\t *                     not indicated, the default is 1(solid). If the value\n\t *                     is less than 0, the default is 0. If the value is\n\t *                     greater than 1, the default is 1.\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\n\t *                     specifies whether to hint strokes to full pixels. This\n\t *                     affects both the position of anchors of a curve and\n\t *                     the line stroke size itself. With\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\n\t *                     line widths are adjusted to full pixel widths. With\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\n\t *                     disjoints can appear for curves and straight lines.\n\t *                     For example, the following illustrations show how\n\t *                     Flash Player or Adobe AIR renders two rounded\n\t *                     rectangles that are identical, except that the\n\t *                     <code>pixelHinting</code> parameter used in the\n\t *                     <code>lineStyle()</code> method is set differently\n\t *                    (the images are scaled by 200%, to emphasize the\n\t *                     difference):\n\t *\n\t *                     <p>If a value is not supplied, the line does not use\n\t *                     pixel hinting.</p>\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\n\t *                     LineScaleMode class that specifies which scale mode to\n\t *                     use:\n\t *                     <ul>\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\n\t *                     scale the line thickness when the object is scaled\n\t *                    (the default). </li>\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\n\t *                     the line thickness. </li>\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     vertically <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\n\t *                     left is scaled vertically only, and the circle on the\n\t *                     right is scaled both vertically and horizontally:\n\t *                     </li>\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\n\t *                     scale the line thickness if the object is scaled\n\t *                     horizontally <i>only</i>. For example, consider the\n\t *                     following circles, drawn with a one-pixel line, and\n\t *                     each with the <code>scaleMode</code> parameter set to\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\n\t *                     the left is scaled horizontally only, and the circle\n\t *                     on the right is scaled both vertically and\n\t *                     horizontally:   </li>\n\t *                     </ul>\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\n\t *                     CapsStyle class that specifies the type of caps at the\n\t *                     end of lines. Valid values are:\n\t *                     <code>CapsStyle.NONE</code>,\n\t *                     <code>CapsStyle.ROUND</code>, and\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\n\t *                     indicated, Flash uses round caps.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>capsStyle</code> settings. For each\n\t *                     setting, the illustration shows a blue line with a\n\t *                     thickness of 30(for which the <code>capsStyle</code>\n\t *                     applies), and a superimposed black line with a\n\t *                     thickness of 1(for which no <code>capsStyle</code>\n\t *                     applies): </p>\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\n\t *                     JointStyle class that specifies the type of joint\n\t *                     appearance used at angles. Valid values are:\n\t *                     <code>JointStyle.BEVEL</code>,\n\t *                     <code>JointStyle.MITER</code>, and\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\n\t *                     indicated, Flash uses round joints.\n\t *\n\t *                     <p>For example, the following illustrations show the\n\t *                     different <code>joints</code> settings. For each\n\t *                     setting, the illustration shows an angled blue line\n\t *                     with a thickness of 30(for which the\n\t *                     <code>jointStyle</code> applies), and a superimposed\n\t *                     angled black line with a thickness of 1(for which no\n\t *                     <code>jointStyle</code> applies): </p>\n\t *\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\n\t *                     <code>JointStyle.MITER</code>, you can use the\n\t *                     <code>miterLimit</code> parameter to limit the length\n\t *                     of the miter.</p>\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\n\t *                     indicates the limit at which a miter is cut off. Valid\n\t *                     values range from 1 to 255(and values outside that\n\t *                     range are rounded to 1 or 255). This value is only\n\t *                     used if the <code>jointStyle</code> is set to\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\n\t *                     value represents the length that a miter can extend\n\t *                     beyond the point at which the lines meet to form a\n\t *                     joint. The value expresses a factor of the line\n\t *                     <code>thickness</code>. For example, with a\n\t *                     <code>miterLimit</code> factor of 2.5 and a\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\n\t *                     off at 25 pixels.\n\t *\n\t *                     <p>For example, consider the following angled lines,\n\t *                     each drawn with a <code>thickness</code> of 20, but\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\n\t *                     Superimposed are black reference lines showing the\n\t *                     meeting points of the joints:</p>\n\t *\n\t *                     <p>Notice that a given <code>miterLimit</code> value\n\t *                     has a specific maximum angle for which the miter is\n\t *                     cut off. The following table lists some examples:</p>\n\t */\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\n\t{\n\n\t}\n\n\t/**\n\t * Draws a line using the current line style from the current drawing\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\n\t * which you are drawing contains content that was created with the Flash\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\n\t * to the <code>moveTo()</code> method, the default position for the current\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\n\t * method fails and the current drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic lineTo(x:number, y:number)\n\t{\n\n\t}\n\n\t/**\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\n\t * any of the parameters are missing, this method fails and the current\n\t * drawing position is not changed.\n\t *\n\t * @param x A number that indicates the horizontal position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t * @param y A number that indicates the vertical position relative to the\n\t *          registration point of the parent display object(in pixels).\n\t */\n\tpublic moveTo(x:number, y:number)\n\t{\n\n\t}\n}\n\nexport = Graphics;",
    "/**\n * The InterpolationMethod class provides values for the\n * <code>interpolationMethod</code> parameter in the\n * <code>Graphics.beginGradientFill()</code> and\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\n * determines the RGB space to use when rendering the gradient.\n */\nclass InterpolationMethod\n{\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\n\n\t/**\n\t * Specifies that the RGB interpolation method should be used. This means\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\n\t * conversion between red, green, and blue component values and the actual\n\t * intensity of the visible component color.\n\t *\n\t * <p>For example, consider a simple linear gradient between two colors(with\n\t * the <code>spreadMethod</code> parameter set to\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\n\t * affect the appearance as follows: </p>\n\t */\n\tpublic static RGB:string = \"rgb\";\n}\n\nexport = InterpolationMethod;",
    "/**\n * The JointStyle class is an enumeration of constant values that specify the\n * joint style to use in drawing lines. These constants are provided for use\n * as values in the <code>joints</code> parameter of the\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\n * three types of joints: miter, round, and bevel, as the following example\n * shows:\n */\nclass JointStyle\n{\n\t/**\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static BEVEL:string = \"bevel\";\n\n\t/**\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static MITER:string = \"miter\";\n\n\t/**\n\t * Specifies round joints in the <code>joints</code> parameter of the\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\n\t */\n\tpublic static ROUND:string = \"round\";\n}\n\nexport = JointStyle;",
    "/**\n * The LineScaleMode class provides values for the <code>scaleMode</code>\n * parameter in the <code>Graphics.lineStyle()</code> method.\n */\nclass LineScaleMode\n{\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\n\t * scaled only vertically, and the circle on the right is scaled both\n\t * vertically and horizontally.\n\t */\n\tpublic static HORIZONTAL:string = \"horizontal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\n\t * when the object is scaled(the default).\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * With this setting used as the <code>scaleMode</code> parameter of the\n\t * <code>lineStyle()</code> method, the thickness of the line scales\n\t * <i>only</i> horizontally. For example, consider the following circles,\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\n\t * left is scaled only horizontally, and the circle on the right is scaled\n\t * both vertically and horizontally.\n\t */\n\tpublic static VERTICAL:string = \"vertical\";\n}\n\nexport = LineScaleMode;",
    "/**\n * The PixelSnapping class is an enumeration of constant values for setting\n * the pixel snapping options by using the <code>pixelSnapping</code> property\n * of a Bitmap object.\n */\nclass PixelSnapping\n{\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is always snapped to the\n\t * nearest pixel, independent of any transformation.\n\t */\n\tpublic static ALWAYS:string = \"always\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\n\t * setting allows the image to be drawn as fast as possible by using the\n\t * vector renderer.\n\t */\n\tpublic static AUTO:string = \"auto\";\n\n\t/**\n\t * A constant value used in the <code>pixelSnapping</code> property of a\n\t * Bitmap object to specify that no pixel snapping occurs.\n\t */\n\tpublic static NEVER:string = \"never\";\n}\n\nexport = PixelSnapping;",
    "/**\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\n * parameter in the <code>beginGradientFill()</code> and\n * <code>lineGradientStyle()</code> methods of the Graphics class.\n *\n * <p>The following example shows the same gradient fill using various spread\n * methods:</p>\n */\nclass SpreadMethod\n{\n\t/**\n\t * Specifies that the gradient use the <i>pad</i> spread method.\n\t */\n\tpublic static PAD:string = \"pad\";\n\n\t/**\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\n\t */\n\tpublic static REFLECT:string = \"reflect\";\n\n\t/**\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\n\t */\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = SpreadMethod;",
    "/**\n * Defines codes for culling algorithms that determine which triangles not to\n * render when drawing triangle paths.\n *\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\n * that is perpendicular to the surface of the triangle. </p>\n *\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\n * has a positive normal value. That is, its normal points in a positive\n * z-axis direction, away from the current view point. When the\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\n * positive normals are not rendered. Another term for this is backface\n * culling. </p>\n *\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\n * a negative normal value. That is, its normal points in a negative z-axis\n * direction, toward the current view point. When the\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\n * negative normals will not be rendered. </p>\n */\nclass TriangleCulling\n{\n\t/**\n\t * Specifies culling of all triangles facing toward the current view point.\n\t */\n\tpublic static NEGATIVE:string = \"negative\";\n\n\t/**\n\t * Specifies no culling. All triangles in the path are rendered.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies culling of all triangles facing away from the current view\n\t * point. This is also known as backface culling.\n\t */\n\tpublic static POSITIVE:string = \"positive\";\n}\n\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * The Billboard class represents display objects that represent bitmap images.\n * These can be images that you load with the <code>flash.Assets</code> or\n * <code>flash.display.Loader</code> classes, or they can be images that you\n * create with the <code>Billboard()</code> constructor.\n *\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\n * object that contains a reference to a Image2D object. After you create a\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\n * method of the parent DisplayObjectContainer instance to place the bitmap on\n * the display list.</p>\n *\n * <p>A Billboard object can share its Image2D reference among several Billboard\n * objects, independent of translation or rotation properties. Because you can\n * create multiple Billboard objects that reference the same Image2D object,\n * multiple display objects can use the same complex Image2D object without\n * incurring the memory overhead of a Image2D object for each display\n * object instance.</p>\n *\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\n * of two ways: by using the default hardware renderer with a single hardware surface,\n * or by using the slower software renderer when 3D acceleration is not available.</p>\n *\n * <p>If you would prefer to perform a batch rendering command, rather than using a\n * single surface for each Billboard object, you can also draw to the screen using the\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\n * objects.</code></p>\n *\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\n * class, so it cannot dispatch mouse events. However, you can use the\n * <code>addEventListener()</code> method of the display object container that\n * contains the Billboard object.</p>\n */\n\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset Billboard]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _billboardWidth:number;\n\tprivate _billboardHeight:number;\n\tprivate _billboardRect:Rectangle;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _parentColorTransform:ColorTransform;\n\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\n\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Billboard.assetType;\n\t}\n\n\t/**\n\t * The Image2D object being referenced.\n\t */\n\tpublic image2D:Image2D; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get billboardRect():Rectangle\n\t{\n\t\treturn this._billboardRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardHeight():number\n\t{\n\t\treturn this._billboardHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get billboardWidth():number\n\t{\n\t\treturn this._billboardWidth;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iRemoveOwner(this);\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\n\n\t\tthis._material = value;\n\n\t\tif (this._material) {\n\t\t\tthis._material.iAddOwner(this);\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\n\t * This value is ignored in the native and HTML5 targets.\n\t * The PixelSnapping class includes possible values:\n\t * <ul>\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\n\t * the nearest pixel, independent of transformation.</li>\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\n\t * as possible using the internal vector renderer.</li>\n\t * </ul>\n\t */\n\tpublic pixelSnapping:string; //TODO\n\n\t/**\n\t * Controls whether or not the bitmap is smoothed when scaled. If\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\n\t */\n\tpublic smoothing:boolean; //TODO\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\t// outputs the concaneted color-transform\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\t// set this on the inheritet colorTransform\n\t\tthis.transform.colorTransform = value;\n\t\t// new calculate the concaneted transform\n\t\tthis._applyColorTransform();\n\n\t}\n\n\tpublic get parentColorTransform():ColorTransform\n\t{\n\t\treturn this._parentColorTransform;\n\t}\n\n\tpublic set parentColorTransform(value:ColorTransform)\n\t{\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\n\t\tthis._parentColorTransform = value;\n\t\tthis._applyColorTransform();\n\t}\n\n\tprivate _applyColorTransform()\n\t{\n\t\tthis._colorTransform=new ColorTransform();\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\n\t\t}\n\t\telse if (this.transform.colorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\n\t\t}\n\t\telse if (this._parentColorTransform){\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\n\t\t}\n\t}\n\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\n\n\t\tthis.material = material;\n\n\t\tthis._billboardWidth = material.width;\n\t\tthis._billboardHeight = material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\n\t\tthis._billboardWidth = material.width;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Billboard = new Billboard(this.material);\n\t\treturn clone;\n\t}\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate onSizeChanged(event:MaterialEvent)\n\t{\n\t\tthis._billboardWidth = this._material.width;\n\t\tthis._billboardHeight = this._material.height;\n\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\n\n\t\tthis._pInvalidateBounds();\n\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\n\n\nclass Camera extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Camera]\";\n\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\n\tprivate _viewProjectionDirty:Boolean = true;\n\tprivate _projection:IProjection;\n\tprivate _frustumPlanes:Array<Plane3D>;\n\tprivate _frustumPlanesDirty:Boolean = true;\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\n\n\tconstructor(projection:IProjection = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\n\n\t\tthis._projection = projection || new PerspectiveProjection();\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\n\t\tthis._frustumPlanes = [];\n\n\t\tfor (var i:number = 0; i < 6; ++i)\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\n\n\t\tthis.z = -1000;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\t//@override\n\tpublic get assetType():string\n\t{\n\t\treturn Camera.assetType;\n\t}\n\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\n\t{\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t\tthis.dispatchEvent(event);\n\t}\n\n\tpublic get frustumPlanes():Array<Plane3D>\n\t{\n\t\tif (this._frustumPlanesDirty)\n\t\t\tthis.updateFrustum();\n\n\t\treturn this._frustumPlanes;\n\t}\n\n\tprivate updateFrustum()\n\t{\n\t\tvar a:number, b:number, c:number;\n\t\t//var d : Number;\n\t\tvar c11:number, c12:number, c13:number, c14:number;\n\t\tvar c21:number, c22:number, c23:number, c24:number;\n\t\tvar c31:number, c32:number, c33:number, c34:number;\n\t\tvar c41:number, c42:number, c43:number, c44:number;\n\t\tvar p:Plane3D;\n\t\tvar raw:number[] = new Array<number>(16);\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\n\t\tvar invLen:number;\n\t\tthis.viewProjection.copyRawDataTo(raw);\n\n\t\tc11 = raw[0];\n\t\tc12 = raw[4];\n\t\tc13 = raw[8];\n\t\tc14 = raw[12];\n\t\tc21 = raw[1];\n\t\tc22 = raw[5];\n\t\tc23 = raw[9];\n\t\tc24 = raw[13];\n\t\tc31 = raw[2];\n\t\tc32 = raw[6];\n\t\tc33 = raw[10];\n\t\tc34 = raw[14];\n\t\tc41 = raw[3];\n\t\tc42 = raw[7];\n\t\tc43 = raw[11];\n\t\tc44 = raw[15];\n\n\t\t// left plane\n\t\tp = this._frustumPlanes[0];\n\t\ta = c41 + c11;\n\t\tb = c42 + c12;\n\t\tc = c43 + c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c14)*invLen;\n\n\t\t// right plane\n\t\tp = this._frustumPlanes[1];\n\t\ta = c41 - c11;\n\t\tb = c42 - c12;\n\t\tc = c43 - c13;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c14 - c44)*invLen;\n\n\t\t// bottom\n\t\tp = this._frustumPlanes[2];\n\t\ta = c41 + c21;\n\t\tb = c42 + c22;\n\t\tc = c43 + c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -(c44 + c24)*invLen;\n\n\t\t// top\n\t\tp = this._frustumPlanes[3];\n\t\ta = c41 - c21;\n\t\tb = c42 - c22;\n\t\tc = c43 - c23;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c24 - c44)*invLen;\n\n\t\t// near\n\t\tp = this._frustumPlanes[4];\n\t\ta = c31;\n\t\tb = c32;\n\t\tc = c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = -c34*invLen;\n\n\t\t// far\n\t\tp = this._frustumPlanes[5];\n\t\ta = c41 - c31;\n\t\tb = c42 - c32;\n\t\tc = c43 - c33;\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\n\t\tp.a = a*invLen;\n\t\tp.b = b*invLen;\n\t\tp.c = c*invLen;\n\t\tp.d = (c34 - c44)*invLen;\n\n\t\tthis._frustumPlanesDirty = false;\n\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic pInvalidateSceneTransform()\n\t{\n\t\tsuper.pInvalidateSceneTransform();\n\n\t\tthis._viewProjectionDirty = true;\n\t\tthis._frustumPlanesDirty = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get projection():IProjection\n\t{\n\t\treturn this._projection;\n\t}\n\n\tpublic set projection(value:IProjection)\n\t{\n\t\tif (this._projection == value)\n\t\t\treturn;\n\n\t\tif (!value)\n\t\t\tthrow new Error(\"Projection cannot be null!\");\n\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis._projection = value;\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get viewProjection():Matrix3D\n\t{\n\t\tif (this._viewProjectionDirty) {\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\n\t\t\tthis._viewProjection.append(this._projection.matrix);\n\t\t\tthis._viewProjectionDirty = false;\n\t\t}\n\n\t\treturn this._viewProjection;\n\t}\n\n\t/**\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\n\t */\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\t/**\n\t * Calculates the normalised position in screen space of the given scene position.\n\t *\n\t * @param point3d the position vector of the scene coordinates to be projected.\n\t * @return The normalised screen position of the given scene coordinates.\n\t */\n\tpublic project(point3d:Vector3D):Vector3D\n\t{\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\n\t}\n\n\t/**\n\t * Calculates the scene position of the given normalized coordinates in screen space.\n\t *\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\n\t * @return The scene position of the given screen coordinates.\n\t */\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\n\t{\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterCamera(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterCamera(this);\n\t}\n}\n\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass DirectionalLight extends LightBase implements IEntity\n{\n\tprivate _direction:Vector3D;\n\tprivate _tmpLookAt:Vector3D;\n\tprivate _sceneDirection:Vector3D;\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\n\tprivate _projAABBPoints:Array<number>;\n\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\n\n\t\tthis._sceneDirection = new Vector3D();\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get sceneDirection():Vector3D\n\t{\n\t\tif (this._pSceneTransformDirty)\n\t\t\tthis.pUpdateSceneTransform();\n\n\t\treturn this._sceneDirection;\n\t}\n\n\tpublic get direction():Vector3D\n\t{\n\t\treturn this._direction;\n\t}\n\n\tpublic set direction(value:Vector3D)\n\t{\n\t\tthis._direction = value;\n\n\t\tif (!this._tmpLookAt)\n\t\t\tthis._tmpLookAt = new Vector3D();\n\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\n\n\t\tthis.lookAt(this._tmpLookAt);\n\t}\n\n\t//@override\n\tpublic pUpdateSceneTransform()\n\t{\n\t\tsuper.pUpdateSceneTransform();\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\n\t\tthis._sceneDirection.normalize();\n\t}\n\n\t//@override\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\n\t{\n\t\treturn new DirectionalShadowMapper();\n\t}\n\n\t//override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tif (!this._projAABBPoints)\n\t\t\tthis._projAABBPoints = [];\n\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\n\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\n\t\tvar d:number;\n\t\tfor (var i:number = 0; i < 24;) {\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < xMin)\n\t\t\t\txMin = d;\n\n\t\t\tif (d > xMax)\n\t\t\t\txMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < yMin)\n\t\t\t\tyMin = d;\n\n\t\t\tif (d > yMax)\n\t\t\t\tyMax = d;\n\n\t\t\td = this._projAABBPoints[i++];\n\n\t\t\tif (d < zMin)\n\t\t\t\tzMin = d;\n\n\t\t\tif (d > zMax)\n\t\t\t\tzMax = d;\n\t\t}\n\n\t\tvar invXRange:number = 1/(xMax - xMin);\n\t\tvar invYRange:number = 1/(yMax - yMin);\n\t\tvar invZRange:number = 1/(zMax - zMin);\n\t\traw[0] = 2*invXRange;\n\t\traw[5] = 2*invYRange;\n\t\traw[10] = invZRange;\n\t\traw[12] = -(xMax + xMin)*invXRange;\n\t\traw[13] = -(yMax + yMin)*invYRange;\n\t\traw[14] = -zMin*invZRange;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\t\traw[15] = 1;\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterDirectionalLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterDirectionalLight(this);\n\t}\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\t//update points\n\t\tvar minX:number = this._pBoxBounds.x;\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\n\t\tvar minZ:number = this._pBoxBounds.z;\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\n\t\tvar maxY:number = this._pBoxBounds.y;\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\n\n\t\tthis._pAabbPoints[0] = minX;\n\t\tthis._pAabbPoints[1] = minY;\n\t\tthis._pAabbPoints[2] = minZ;\n\t\tthis._pAabbPoints[3] = maxX;\n\t\tthis._pAabbPoints[4] = minY;\n\t\tthis._pAabbPoints[5] = minZ;\n\t\tthis._pAabbPoints[6] = minX;\n\t\tthis._pAabbPoints[7] = maxY;\n\t\tthis._pAabbPoints[8] = minZ;\n\t\tthis._pAabbPoints[9] = maxX;\n\t\tthis._pAabbPoints[10] = maxY;\n\t\tthis._pAabbPoints[11] = minZ;\n\t\tthis._pAabbPoints[12] = minX;\n\t\tthis._pAabbPoints[13] = minY;\n\t\tthis._pAabbPoints[14] = maxZ;\n\t\tthis._pAabbPoints[15] = maxX;\n\t\tthis._pAabbPoints[16] = minY;\n\t\tthis._pAabbPoints[17] = maxZ;\n\t\tthis._pAabbPoints[18] = minX;\n\t\tthis._pAabbPoints[19] = maxY;\n\t\tthis._pAabbPoints[20] = maxZ;\n\t\tthis._pAabbPoints[21] = maxX;\n\t\tthis._pAabbPoints[22] = maxY;\n\t\tthis._pAabbPoints[23] = maxZ;\n\t}\n}\n\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\nclass LightProbe extends LightBase implements IEntity\n{\n\tprivate _diffuseMap:ImageCube;\n\tprivate _specularMap:ImageCube;\n\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._diffuseMap = diffuseMap;\n\t\tthis._specularMap = specularMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get diffuseMap():ImageCube\n\t{\n\t\treturn this._diffuseMap;\n\t}\n\n\tpublic set diffuseMap(value:ImageCube)\n\t{\n\t\tthis._diffuseMap = value;\n\t}\n\n\tpublic get specularMap():ImageCube\n\t{\n\t\treturn this._specularMap;\n\t}\n\n\tpublic set specularMap(value:ImageCube)\n\t{\n\t\tthis._specularMap = value;\n\t}\n\n\t//@override\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterLightProbe(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterLightProbe(this);\n\t}\n}\n\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A Line Segment primitive.\n */\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\n{\n\tpublic static assetType:string = \"[asset LineSegment]\";\n\n\tprivate _animator:IAnimator;\n\tprivate _material:MaterialBase;\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\n\tpublic _startPosition:Vector3D;\n\tpublic _endPosition:Vector3D;\n\tpublic _halfThickness:number;\n\n\t/**\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LineSegment.assetType;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get startPostion():Vector3D\n\t{\n\t\treturn this._startPosition;\n\t}\n\n\tpublic set startPosition(value:Vector3D)\n\t{\n\t\tif (this._startPosition == value)\n\t\t\treturn;\n\n\t\tthis._startPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get endPosition():Vector3D\n\t{\n\t\treturn this._endPosition;\n\t}\n\n\tpublic set endPosition(value:Vector3D)\n\t{\n\t\tif (this._endPosition == value)\n\t\t\treturn;\n\n\t\tthis._endPosition = value;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (this.material)\n\t\t\tthis.material.iRemoveOwner(this);\n\n\t\tthis._material = value;\n\n\t\tif (this.material)\n\t\t\tthis.material.iAddOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get thickness():number\n\t{\n\t\treturn this._halfThickness*2;\n\t}\n\n\tpublic set thickness(value:number)\n\t{\n\t\tif (this._halfThickness == value)\n\t\t\treturn;\n\n\t\tthis._halfThickness = value*0.5;\n\n\t\tthis.notifyRenderableUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * Create a line segment\n\t *\n\t * @param startPosition Start position of the line segment\n\t * @param endPosition Ending position of the line segment\n\t * @param thickness Thickness of the line\n\t */\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis.material = material;\n\n\t\tthis._startPosition = startPosition;\n\t\tthis._endPosition = endPosition;\n\t\tthis._halfThickness = thickness*0.5;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._startPosition = null;\n\t\tthis._endPosition = null;\n\t}\n\n\t/**\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pUpdateBoxBounds();\n\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyRenderableUpdate()\n\t{\n\t\tvar len:number = this._pRenderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\trenderer._iApplyRenderableOwner(this);\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n}\n\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\n * of the geometry to be assigned different materials.\n */\nclass Mesh extends DisplayObjectContainer implements IEntity\n{\n\tpublic static assetType:string = \"[asset Mesh]\";\n\n\tprivate _uvTransform:UVTransform;\n\n\tprivate _subMeshes:Array<ISubMesh>;\n\tprivate _geometry:Geometry;\n\tprivate _material:MaterialBase;\n\tprivate _animator:IAnimator;\n\tprivate _castsShadows:boolean = true;\n\tprivate _shareAnimationGeometry:boolean = true;\n\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\n\n\t/**\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\n\t */\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\tpublic set animator(value:IAnimator)\n\t{\n\t\tif (this._animator)\n\t\t\tthis._animator.removeOwner(this);\n\n\t\tthis._animator = value;\n\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\n\t\t\tif (subMesh.material) {\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\n\t\t\t}\n\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\n\t\t}\n\n\t\tif (this._animator)\n\t\t\tthis._animator.addOwner(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Mesh.assetType;\n\t}\n\n\t/**\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\n\t */\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn this._castsShadows;\n\t}\n\n\tpublic set castsShadows(value:boolean)\n\t{\n\t\tthis._castsShadows = value;\n\t}\n\n\t/**\n\t * The geometry used by the mesh that provides it with its shape.\n\t */\n\tpublic get geometry():Geometry\n\t{\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\tpublic set geometry(value:Geometry)\n\t{\n\t\tvar i:number;\n\n\t\tif (this._geometry) {\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\n\t\t\t\tthis._subMeshes[i].dispose();\n\n\t\t\tthis._subMeshes.length = 0;\n\t\t}\n\n\t\tthis._geometry = value;\n\n\t\tif (this._geometry) {\n\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\n\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\n\t\t}\n\t}\n\n\t/**\n\t * The material with which to render the Mesh.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tvar i:number;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar subMesh:ISubMesh;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\n\n\t\tthis._material = value;\n\n\t\tfor (i = 0; i < len; i++)\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\n\t\t\t\tthis._material.iAddOwner(subMesh);\n\t}\n\n\t/**\n\t * Indicates whether or not the mesh share the same animation geometry.\n\t */\n\tpublic get shareAnimationGeometry():boolean\n\t{\n\t\treturn this._shareAnimationGeometry;\n\t}\n\n\tpublic set shareAnimationGeometry(value:boolean)\n\t{\n\t\tthis._shareAnimationGeometry = value;\n\t}\n\n\t/**\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\n\t * material.\n\t */\n\tpublic get subMeshes():Array<ISubMesh>\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\treturn this._subMeshes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._pColorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tsuper._pSetColorTransform(value);\n\t}\n\t/**\n\t * Create a new Mesh object.\n\t *\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\n\t * @param material    [optional]        The material with which to render the Mesh.\n\t */\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._subMeshes = new Array<ISubMesh>();\n\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\n\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\n\t\tthis.geometry = geometry || new Geometry();\n\n\t\tthis.material = material;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic bakeTransformations()\n\t{\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\n\t\tthis._iMatrix3D.identity();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\tthis.material = null;\n\t\tthis.geometry = null;\n\t}\n\n\t/**\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\n\t * @return\n\t */\n\tpublic disposeWithAnimatorAndChildren()\n\t{\n\t\tthis.disposeWithChildren();\n\n\t\t if (this._animator)\n\t\t\tthis._animator.dispose();\n\t}\n\n\t/**\n\t * Clones this Mesh instance along with all it's children, while re-using the same\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\n\t * containing copies of all of it's children.\n\t *\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\n\t * geometry, and material. Properties that are cloned or created anew for the copy\n\t * include subMeshes, children of the mesh, and the animator.\n\t *\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\n\t * cloning it's children, the simplest way is to create a new mesh manually:\n\t *\n\t * <code>\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\n\t * </code>\n\t */\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Mesh = new Mesh(null, null);\n\n        this._iCopyToMesh(clone);\n\n\t\treturn clone;\n\t}\n\n    public _iCopyToMesh(clone:Mesh):void\n    {\n        clone.geometry = this._geometry;\n        clone.material = this._material;\n        clone._iMatrix3D = this._iMatrix3D;\n        clone.pivot = this.pivot;\n        clone.partition = this.partition;\n        clone.boundsType = this.boundsType;\n\n\n        clone.name = this.name;\n        clone.castsShadows = this.castsShadows;\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\n        clone.mouseEnabled = this.mouseEnabled;\n        clone.mouseChildren = this.mouseChildren;\n        //this is of course no proper cloning\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n        clone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n        var len:number = this._subMeshes.length;\n        for (var i:number = 0; i < len; ++i)\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n        len = this.numChildren;\n        for (i = 0; i < len; ++i)\n            clone.addChild(this.getChildAt(i).clone());\n\n        if (this._animator)\n            clone.animator = this._animator.clone();\n    }\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @returns {SubMeshBase}\n\t */\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\n\t{\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @protected\n\t */\n\tpublic _pUpdateBoxBounds()\n\t{\n\t\tsuper._pUpdateBoxBounds();\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar minX:number, minY:number, minZ:number;\n\t\tvar maxX:number, maxY:number, maxZ:number;\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\n\t\t\tif (this.numChildren) {\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\n\t\t\t} else {\n\t\t\t\tminX = maxX = boundingPositions[i];\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\n\t\t\t\t\tminZ = maxZ = 0;\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\t\t\t\tfor (i = 0; i < len; i+=3) {\n\t\t\t\t\tp = boundingPositions[i];\n\t\t\t\t\tif (p < minX)\n\t\t\t\t\t\tminX = p;\n\t\t\t\t\telse if (p > maxX)\n\t\t\t\t\t\tmaxX = p;\n\n\t\t\t\t\tp = boundingPositions[i + 1];\n\n\t\t\t\t\tif (p < minY)\n\t\t\t\t\t\tminY = p;\n\t\t\t\t\telse if (p > maxY)\n\t\t\t\t\t\tmaxY = p;\n\n\t\t\t\t\tp = boundingPositions[i + 2];\n\n\t\t\t\t\tif (p < tmp_minZ)\n\t\t\t\t\t\ttmp_minZ = p;\n\t\t\t\t\telse if (p > tmp_maxZ)\n\t\t\t\t\t\ttmp_maxZ = p;\n\t\t\t\t}\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\n\t\t\t\t\tminZ = tmp_minZ;\n\t\t\t\t\tmaxZ = tmp_maxZ;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\n\t\t}\n\t}\n\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tvar box:Box = this.getBox();\n\t\tvar centerX:number = box.x + box.width/2;\n\t\tvar centerY:number = box.y + box.height/2;\n\t\tvar centerZ:number = box.z + box.depth/2;\n\n\t\tvar i:number, j:number, p:number, len:number;\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\n\t\tvar subGeom:SubGeometryBase;\n\t\tvar boundingPositions:Float32Array;\n\t\tvar numSubGeoms:number = subGeoms.length;\n\t\tvar maxRadiusSquared:number = 0;\n\t\tvar radiusSquared:number;\n\t\tvar distanceX:number;\n\t\tvar distanceY:number;\n\t\tvar distanceZ:number;\n\n\t\tif (numSubGeoms > 0) {\n\t\t\ti = 0;\n\t\t\tsubGeom = subGeoms[0];\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\n\t\t\t\tsubGeom = subGeoms[j];\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\n\t\t\t\tlen = boundingPositions.length;\n\n\t\t\t\tfor (i = 0; i < len; i += 3) {\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\n\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._pSphereBounds.x = centerX;\n\t\tthis._pSphereBounds.y = centerY;\n\t\tthis._pSphereBounds.z = centerZ;\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\n\t{\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * Called when a SubGeometry was added to the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryAdded(event:GeometryEvent)\n\t{\n\t\tthis.addSubMesh(event.subGeometry);\n\t}\n\n\t/**\n\t * Called when a SubGeometry was removed from the Geometry.\n\t *\n\t * @private\n\t */\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\n\t{\n\t\tvar subMesh:ISubMesh;\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\n\t\tvar len:number = this._subMeshes.length;\n\t\tvar i:number;\n\n\t\t// Important! This has to be done here, and not delayed until the\n\t\t// next render loop, since this may be caused by the geometry being\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\tsubMesh = this._subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry == subGeom) {\n\t\t\t\tsubMesh.dispose();\n\n\t\t\t\tthis._subMeshes.splice(i, 1);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t--len;\n\t\tfor (; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iIndex = i;\n\t}\n\n\t/**\n\t * Adds a SubMeshBase wrapping a SubGeometry.\n\t *\n\t * @param subGeometry\n\t */\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\n\t{\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\n\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\n\t\tvar len:number = this._subMeshes.length;\n\n\t\tsubMesh._iIndex = len;\n\n\t\tthis._subMeshes[len] = subMesh;\n\n\t\tthis._pInvalidateBounds();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param shortestCollisionDistance\n\t * @param findClosest\n\t * @returns {boolean}\n\t *\n\t * @internal\n\t */\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\n\t{\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\n\n\t\tvar subMesh:ISubMesh;\n\n\t\tvar len:number = this.subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tsubMesh = this.subMeshes[i];\n\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\n\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\n\n\t\t\t\tif (!findClosest)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\n\t}\n\n\t/**\n\t *\n\t * @param renderer\n\t *\n\t * @internal\n\t */\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t// Since this getter is invoked every iteration of the render loop, and\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\n\t\t// validated here to give it a chance to rebuild.\n\t\tif (this._iSourcePrefab)\n\t\t\tthis._iSourcePrefab._iValidate();\n\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\n\t}\n\n\tpublic _iInvalidateRenderableGeometries()\n\t{\n\t\tvar len:number = this._subMeshes.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterEntity(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterEntity(this);\n\t}\n\t/**\n\t * Evaluates the display object to see if it overlaps or intersects with the\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\n\t * coordinate space of the Scene, not the display object container that\n\t * contains the display object(unless that display object container is the\n\t * Scene).\n\t *\n\t * @param x         The <i>x</i> coordinate to test against this object.\n\t * @param y         The <i>y</i> coordinate to test against this object.\n\t * @param shapeFlag Whether to check against the actual pixels of the object\n\t *                 (<code>true</code>) or the bounding box\n\t *                 (<code>false</code>).\n\t * @return <code>true</code> if the display object overlaps or intersects\n\t *         with the specified point; <code>false</code> otherwise.\n\t */\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\n\t{\n\t\t// if this is a mask, directly return false\n\t\tif(this._iMaskID!==-1 && !masksFlag)return false;\n\n\t\t// if this is invisible, all children should be invisible too.\n\t\t// todo: is the above statement correct for awayjs visible-property ?\n\t\tif(this.visible==false)return false;\n\n\t\t// from this point out, we can not return false, without checking collision of childs.\n\t\t\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\n\n\t\tif(this.geometry) {\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\n\t\t\t\tif (!shapeFlag)\n\t\t\t\t\treturn true;\n\n\t\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++) {\n\t\t\t\t\tif (this.geometry.subGeometries[j].hitTestPoint(local.x, local.y, 0)) {\n\n\t\t\t\t\t\t// if the mesh is masked, we need to check if 1 mask will collide\n\t\t\t\t\t\tvar all_masks:Array<DisplayObject> = this._iMasks;\n\t\t\t\t\t\tif (all_masks) {\n\t\t\t\t\t\t\tvar all_hir_masks:Array<DisplayObject> = this[\"hierarchicalMasks\"];\n\t\t\t\t\t\t\t//todo: check if there will be cases when no hirarchical masks have been collected and assigned yet.\n\t\t\t\t\t\t\tif (all_hir_masks){\n\t\t\t\t\t\t\t\tall_masks = all_hir_masks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (var mi_cnt:number = 0; mi_cnt < all_masks.length; mi_cnt++) {\n\t\t\t\t\t\t\t\tvar mask_child:DisplayObject = all_masks[mi_cnt];\n\t\t\t\t\t\t\t\tif (mask_child.parent) {\n\t\t\t\t\t\t\t\t\tvar childHit:boolean = mask_child.hitTestPoint(x, y, shapeFlag, true);\n\t\t\t\t\t\t\t\t\tif (childHit)return true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar hit:boolean = false;\n\t\thit = super.hitTestPoint(x, y, shapeFlag, masksFlag);\n\t\tif(hit)\treturn true;\n\n\t\treturn false;\n\t}\n}\n\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\n\nclass PointLight extends LightBase implements IEntity\n{\n\tpublic _pRadius:number = 90000;\n\tpublic _pFallOff:number = 100000;\n\tpublic _pFallOffFactor:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.SPHERE;\n\t}\n\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\n\t{\n\t\treturn new CubeMapShadowMapper();\n\t}\n\n\tpublic get radius():number\n\t{\n\t\treturn this._pRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pRadius = value;\n\n\t\tif (this._pRadius < 0) {\n\t\t\tthis._pRadius = 0;\n\t\t} else if (this._pRadius > this._pFallOff) {\n\t\t\tthis._pFallOff = this._pRadius;\n\t\t\tthis._pInvalidateBounds();\n\t\t}\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\n\t}\n\n\tpublic iFallOffFactor():number\n\t{\n\t\treturn this._pFallOffFactor;\n\t}\n\n\tpublic get fallOff():number\n\t{\n\t\treturn this._pFallOff;\n\t}\n\n\tpublic set fallOff(value:number)\n\t{\n\t\tthis._pFallOff = value;\n\n\t\tif (this._pFallOff < 0)\n\t\t\tthis._pFallOff = 0;\n\n\t\tif (this._pFallOff < this._pRadius)\n\t\t\tthis._pRadius = this._pFallOff;\n\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\n\t\tthis._pInvalidateBounds();\n\t}\n\n\tpublic _pUpdateSphereBounds()\n\t{\n\t\tsuper._pUpdateSphereBounds();\n\n\t\tthis._pSphereBounds.radius = this._pFallOff;\n\t}\n\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\n\t{\n\t\tvar raw:number[] = new Array<number>(16);\n\t\tvar m:Matrix3D = new Matrix3D();\n\n\t\t// todo: do not use lookAt on Light\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this._pParent.inverseSceneTransform);\n\t\tthis.lookAt(m.position);\n\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\n\t\tm.append(this.inverseSceneTransform);\n\n\t\tvar box:Box = entity.getBox();\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\n\t\tvar zMin:number;\n\t\tvar zMax:number;\n\n\t\tvar z:number = m.rawData[14];\n\t\tzMin = z - d;\n\t\tzMax = z + d;\n\n\t\traw[5] = raw[0] = zMin/d;\n\t\traw[10] = zMax/(zMax - zMin);\n\t\traw[11] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\n\t\traw[14] = -zMin*raw[10];\n\n\t\tif (!target)\n\t\t\ttarget = new Matrix3D();\n\n\t\ttarget.copyRawDataFrom(raw);\n\t\ttarget.prepend(m);\n\n\t\treturn target;\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterPointLight(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterPointLight(this);\n\t}\n}\n\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\n\n/**\n * This class is used to create lightweight shapes using the ActionScript\n * drawing application program interface(API). The Shape class includes a\n * <code>graphics</code> property, which lets you access methods from the\n * Graphics class.\n *\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\n * includes other features not available to the Shape class. For example, a\n * Sprite object is a display object container, whereas a Shape object is not\n * (and cannot contain child display objects). For this reason, Shape objects\n * consume less memory than Sprite objects that contain the same graphics.\n * However, a Sprite object supports user input events, while a Shape object\n * does not.</p>\n */\nclass Shape extends DisplayObject\n{\n\tprivate _graphics:Graphics;\n\n\t/**\n\t * Specifies the Graphics object belonging to this Shape object, where vector\n\t * drawing commands can occur.\n\t */\n\tget graphics():Graphics\n\t{\n\t\treturn this._graphics;\n\t}\n\n\t/**\n\t * Creates a new Shape object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic clone():DisplayObject\n\t{\n\t\tvar clone:Shape = new Shape();\n\t\tclone.pivot = this.pivot;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.name = name;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\t\tclone._graphics = this._graphics;\n\t\treturn clone;\n\t}\n}\n\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\n/**\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\n * the sky box is always as large as possible without being clipped.\n */\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\n{\n\tpublic static assetType:string = \"[asset Skybox]\";\n\n\tprivate _cubeMap:SingleCubeTexture;\n\tpublic _pAlphaThreshold:number = 0;\n\tprivate _animationSet:IAnimationSet;\n\tpublic _pLightPicker:LightPickerBase;\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\n\tprivate _uvTransform:UVTransform;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _owners:Array<IRenderableOwner>;\n\tprivate _mipmap:boolean = false;\n\tprivate _smooth:boolean = true;\n\n\tprivate _animator:IAnimator;\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pIinvalidatePasses();\n\t}\n\t\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pIinvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\tpublic get animator():IAnimator\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get uvTransform():UVTransform\n\t{\n\t\treturn this._uvTransform;\n\t}\n\n\tpublic set uvTransform(value:UVTransform)\n\t{\n\t\tthis._uvTransform = value;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\t/**\n\t* The cube texture to use as the skybox.\n\t*/\n\tpublic get cubeMap():SingleCubeTexture\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:SingleCubeTexture)\n\t{\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\n\t\tif (value && this._cubeMap)\n\t\t\tthis._pInvalidateRender();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * Create a new Skybox object.\n\t *\n\t * @param material\tThe material with which to render the Skybox.\n\t */\n\tconstructor(cubeMap:SingleCubeTexture = null)\n\t{\n\t\tsuper();\n\n\t\tthis._pIsEntity = true;\n\t\tthis._owners = new Array<IRenderableOwner>(this);\n\n\t\tthis.cubeMap = cubeMap;\n\n\t\t//default bounds type\n\t\tthis._boundsType = BoundsType.NULL;\n\t}\n\n\tpublic get assetType():string\n\t{\n\t\treturn Skybox.assetType;\n\t}\n\n\tpublic get castsShadows():boolean\n\t{\n\t\treturn false; //TODO\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\n\t\tvar len:number = this._renderables.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renderables[i].dispose();\n\n\t\tthis._renderables = new Array<IRenderable>();\n\t}\n\n\tpublic _applyRenderer(renderer:IRenderer)\n\t{\n\t\t//skybox do not get collected in the standard entity list\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tthis._renderables.push(renderable);\n\n\t\treturn renderable;\n\t}\n\n\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\n\t{\n\t\tvar index:number = this._renderables.indexOf(renderable);\n\n\t\tthis._renderables.splice(index, 1);\n\n\t\treturn renderable;\n\t}\n\n\tpublic _pRegisterEntity(partition:Partition)\n\t{\n\t\tpartition._iRegisterSkybox(this);\n\t}\n\n\tpublic _pUnregisterEntity(partition:Partition)\n\t{\n\t\tpartition._iUnregisterSkybox(this);\n\t}\n}\n\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\n\n/**\n * The TextField class is used to create display objects for text display and\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\n * perform low-level text rendering. However, in Flex, you typically use the\n * Label, Text, TextArea, and TextInput controls to process text. <ph\n * outputclass=\"flashonly\">You can give a text field an instance name in the\n * Property inspector and use the methods and properties of the TextField\n * class to manipulate it with ActionScript. TextField instance names are\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\n * the Actions panel.\n *\n * <p>To create a text field dynamically, use the <code>TextField()</code>\n * constructor.</p>\n *\n * <p>The methods of the TextField class let you set, select, and manipulate\n * text in a dynamic or input text field that you create during authoring or\n * at runtime. </p>\n *\n * <p>ActionScript provides several ways to format your text at runtime. The\n * TextFormat class lets you set character and paragraph formatting for\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\n * text fields by using the <code>TextField.styleSheet</code> property and the\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\n * formatting tags, or apply styles. You can assign HTML formatted text, which\n * optionally uses CSS styles, directly to a text field. HTML text that you\n * assign to a text field can contain embedded media(movie clips, SWF files,\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\n * media in the same way that a web browser wraps text around media embedded\n * in an HTML document. </p>\n *\n * <p>Flash Player supports a subset of HTML tags that you can use to format\n * text. See the list of supported HTML tags in the description of the\n * <code>htmlText</code> property.</p>\n * \n * @event change                    Dispatched after a control value is\n *                                  modified, unlike the\n *                                  <code>textInput</code> event, which is\n *                                  dispatched before the value is modified.\n *                                  Unlike the W3C DOM Event Model version of\n *                                  the <code>change</code> event, which\n *                                  dispatches the event only after the\n *                                  control loses focus, the ActionScript 3.0\n *                                  version of the <code>change</code> event\n *                                  is dispatched any time the control\n *                                  changes. For example, if a user types text\n *                                  into a text field, a <code>change</code>\n *                                  event is dispatched after every keystroke.\n * @event link                      Dispatched when a user clicks a hyperlink\n *                                  in an HTML-enabled text field, where the\n *                                  URL begins with \"event:\". The remainder of\n *                                  the URL after \"event:\" is placed in the\n *                                  text property of the LINK event.\n *\n *                                  <p><b>Note:</b> The default behavior,\n *                                  adding the text to the text field, occurs\n *                                  only when Flash Player generates the\n *                                  event, which in this case happens when a\n *                                  user attempts to input text. You cannot\n *                                  put text into a text field by sending it\n *                                  <code>textInput</code> events.</p>\n * @event scroll                    Dispatched by a TextField object\n *                                  <i>after</i> the user scrolls.\n * @event textInput                 Flash Player dispatches the\n *                                  <code>textInput</code> event when a user\n *                                  enters one or more characters of text.\n *                                  Various text input methods can generate\n *                                  this event, including standard keyboards,\n *                                  input method editors(IMEs), voice or\n *                                  speech recognition systems, and even the\n *                                  act of pasting plain text with no\n *                                  formatting or style information.\n * @event textInteractionModeChange Flash Player dispatches the\n *                                  <code>textInteractionModeChange</code>\n *                                  event when a user changes the interaction\n *                                  mode of a text field. for example on\n *                                  Android, one can toggle from NORMAL mode\n *                                  to SELECTION mode using context menu\n *                                  options\n */\nclass TextField extends Mesh\n{\n\tpublic static assetType:string = \"[asset TextField]\";\n\n\tprivate _bottomScrollV:number;\n\tprivate _caretIndex:number;\n\tprivate _length:number;\n\tprivate _maxScrollH:number;\n\tprivate _maxScrollV:number;\n\tprivate _numLines:number;\n\tprivate _selectionBeginIndex:number;\n\tprivate _selectionEndIndex:number;\n\tprivate _text:string = \"\";\n\tprivate _textHeight:number;\n\tprivate _textInteractionMode:TextInteractionMode;\n\tprivate _textWidth:number;\n\n\tprivate _charBoundaries:Rectangle;\n\tprivate _charIndexAtPoint:number;\n\tprivate _firstCharInParagraph:number;\n\tprivate _imageReference:DisplayObject\n\tprivate _lineIndexAtPoint:number;\n\tprivate _lineIndexOfChar:number;\n\tprivate _lineLength:number;\n\tprivate _lineMetrics:TextLineMetrics;\n\tprivate _lineOffset:number;\n\tprivate _lineText:string;\n\tprivate _paragraphLength:number;\n\tprivate _textFormat:TextFormat;\n\n\t/**\n\t * When set to <code>true</code> and the text field is not in focus, Flash\n\t * Player highlights the selection in the text field in gray. When set to\n\t * <code>false</code> and the text field is not in focus, Flash Player does\n\t * not highlight the selection in the text field.\n\t * \n\t * @default false\n\t */\n\tpublic alwaysShowSelection:boolean\n\n\t/**\n\t * The type of anti-aliasing used for this text field. Use\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\n\t * control this setting only if the font is embedded(with the\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\n\t *\n\t * <p>To set values for this property, use the following string values:</p>\n\t */\n\tpublic antiAliasType:AntiAliasType;\n\n\t/**\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\n\t * for the <code>TextFieldAutoSize</code> constants:\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\n\t * and <code>TextFieldAutoSize.CENTER</code>.\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\n\t * (the default) no resizing occurs.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\n\t * the text is treated as left-justified text, meaning that the left margin\n\t * of the text field remains fixed and any resizing of a single line of the\n\t * text field is on the right margin. If the text includes a line break(for\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\n\t * to <code>true</code>, only the bottom of the text field is resized and the\n\t * right side remains fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\n\t * right-justified text, meaning that the right margin of the text field\n\t * remains fixed and any resizing of a single line of the text field is on\n\t * the left margin. If the text includes a line break(for example,\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\n\t * only the bottom of the text field is resized and the left side remains\n\t * fixed.</p>\n\t *\n\t * <p>If <code>autoSize</code> is set to\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\n\t * center-justified text, meaning that any resizing of a single line of the\n\t * text field is equally distributed to both the right and left margins. If\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\n\t * bottom of the text field is resized and the left and right sides remain\n\t * fixed.</p>\n\t * \n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\n\t *                       of flash.text.TextFieldAutoSize.\n\t */\n\tpublic autoSize:TextFieldAutoSize;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextField.assetType;\n\t}\n\n\t/**\n\t * Specifies whether the text field has a background fill. If\n\t * <code>true</code>, the text field has a background fill. If\n\t * <code>false</code>, the text field has no background fill. Use the\n\t * <code>backgroundColor</code> property to set the background color of a\n\t * text field.\n\t * \n\t * @default false\n\t */\n\tpublic background:boolean;\n\n\t/**\n\t * The color of the text field background. The default value is\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\n\t * if there currently is no background, but the color is visible only if the\n\t * text field has the <code>background</code> property set to\n\t * <code>true</code>.\n\t */\n\tpublic backgroundColor:number /*int*/;\n\n\t/**\n\t * Specifies whether the text field has a border. If <code>true</code>, the\n\t * text field has a border. If <code>false</code>, the text field has no\n\t * border. Use the <code>borderColor</code> property to set the border color.\n\t * \n\t * @default false\n\t */\n\tpublic border:boolean;\n\n\t/**\n\t * The color of the text field border. The default value is\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\n\t * if there currently is no border, but the color is visible only if the text\n\t * field has the <code>border</code> property set to <code>true</code>.\n\t */\n\tpublic borderColor:number /*int*/;\n\n\t/**\n\t * An integer(1-based index) that indicates the bottommost line that is\n\t * currently visible in the specified text field. Think of the text field as\n\t * a window onto a block of text. The <code>scrollV</code> property is the\n\t * 1-based index of the topmost visible line in the window.\n\t *\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\n\t */\n\tpublic get bottomScrollV():number /*int*/\n\t{\n\t\treturn this._bottomScrollV;\n\t}\n\n\t/**\n\t * The index of the insertion point(caret) position. If no insertion point\n\t * is displayed, the value is the position the insertion point would be if\n\t * you restored focus to the field(typically where the insertion point last\n\t * was, or 0 if the field has not had focus).\n\t *\n\t * <p>Selection span indexes are zero-based(for example, the first position\n\t * is 0, the second position is 1, and so on).</p>\n\t */\n\tpublic get caretIndex():number /*int*/\n\t{\n\t\treturn this._caretIndex;\n\t}\n\n\t/**\n\t * A Boolean value that specifies whether extra white space(spaces, line\n\t * breaks, and so on) in a text field with HTML text is removed. The default\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\n\t * affects text set with the <code>htmlText</code> property, not the\n\t * <code>text</code> property. If you set text with the <code>text</code>\n\t * property, <code>condenseWhite</code> is ignored.\n\t *\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\n\t * breaks in the text field.</p>\n\t *\n\t * <p>Set the <code>condenseWhite</code> property before setting the\n\t * <code>htmlText</code> property.</p>\n\t */\n\tpublic condenseWhite:boolean;\n\n\t/**\n\t * Specifies the format applied to newly inserted text, such as text entered\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\n\t * method.\n\t *\n\t * <p><b>Note:</b> When selecting characters to be replaced with\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\n\t * selected up to and including the last character. Here is an example:</p>\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\n\t * </pre>\n\t *\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\n\t * returned TextFormat object has all of its properties defined. No property\n\t * is <code>null</code>.</p>\n\t *\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic defaultTextFormat:TextFormat;\n\n\t/**\n\t * Specifies whether the text field is a password text field. If the value of\n\t * this property is <code>true</code>, the text field is treated as a\n\t * password text field and hides the input characters using asterisks instead\n\t * of the actual characters. If <code>false</code>, the text field is not\n\t * treated as a password text field. When password mode is enabled, the Cut\n\t * and Copy commands and their corresponding keyboard shortcuts will not\n\t * function. This security mechanism prevents an unscrupulous user from using\n\t * the shortcuts to discover a password on an unattended computer.\n\t * \n\t * @default false\n\t */\n\tpublic displayAsPassword:boolean;\n\n\t/**\n\t * Specifies whether to render by using embedded font outlines. If\n\t * <code>false</code>, Flash Player renders the text field by using device\n\t * fonts.\n\t *\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\n\t * for a text field, you must specify a font for that text by using the\n\t * <code>font</code> property of a TextFormat object applied to the text\n\t * field. If the specified font is not embedded in the SWF file, the text is\n\t * not displayed.</p>\n\t * \n\t * @default false\n\t */\n\tpublic embedFonts:boolean;\n\n\t/**\n\t * The type of grid fitting used for this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The type of grid fitting used determines whether Flash Player forces\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\n\t * or not at all.</p>\n\t *\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\n\t * following string values:</p>\n\t * \n\t * @default pixel\n\t */\n\tpublic gridFitType:GridFitType;\n\n\t/**\n\t * Contains the HTML representation of the text field contents.\n\t *\n\t * <p>Flash Player supports the following HTML tags:</p>\n\t *\n\t * <p>Flash Player and AIR also support explicit character codes, such as\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\n\t */\n\tpublic htmlText:string;\n\n\t/**\n\t * The number of characters in a text field. A character such as tab\n\t * (<code>\\t</code>) counts as one character.\n\t */\n\tpublic get length():number /*int*/\n\t{\n\t\treturn this._length;\n\t}\n\n\t/**\n\t * The maximum number of characters that the text field can contain, as\n\t * entered by a user. A script can insert more text than\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\n\t * only how much text a user can enter. If the value of this property is\n\t * <code>0</code>, a user can enter an unlimited amount of text.\n\t * \n\t * @default 0\n\t */\n\tpublic maxChars:number /*int*/;\n\n\t/**\n\t * The maximum value of <code>scrollH</code>.\n\t */\n\tpublic maxScrollH():number /*int*/\n\t{\n\t\treturn this._maxScrollH;\n\t}\n\n\t/**\n\t * The maximum value of <code>scrollV</code>.\n\t */\n\tpublic maxScrollV():number /*int*/\n\t{\n\t\treturn this._maxScrollV;\n\t}\n\n\t/**\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\n\t * multiline text fields when the user clicks a text field and rolls the\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\n\t * implement your own text field scrolling.\n\t */\n\tpublic mouseWheelEnabled:boolean;\n\n\t/**\n\t * Indicates whether field is a multiline text field. If the value is\n\t * <code>true</code>, the text field is multiline; if the value is\n\t * <code>false</code>, the text field is a single-line text field. In a field\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\n\t * determines whether the <code>Enter</code> key creates a new line(a value\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\n\t * value of <code>false</code>, newlines are stripped out of the text.\n\t * \n\t * @default false\n\t */\n\tpublic multiline:boolean;\n\n\t/**\n\t * Defines the number of text lines in a multiline text field. If\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\n\t * lines increases when text wraps.\n\t */\n\tpublic get numLines():number /*int*/\n\t{\n\t\treturn this._numLines;\n\t}\n\n\t/**\n\t * Indicates the set of characters that a user can enter into the text field.\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\n\t * you can enter any character. If the value of the <code>restrict</code>\n\t * property is an empty string, you cannot enter any character. If the value\n\t * of the <code>restrict</code> property is a string of characters, you can\n\t * enter only characters in the string into the text field. The string is\n\t * scanned from left to right. You can specify a range by using the hyphen\n\t * (-) character. Only user interaction is restricted; a script can put any\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\n\t * not synchronize with the Embed font options in the Property inspector.\n\t *\n\t * <p>If the string begins with a caret(^) character, all characters are\n\t * initially accepted and succeeding characters in the string are excluded\n\t * from the set of accepted characters. If the string does not begin with a\n\t * caret(^) character, no characters are initially accepted and succeeding\n\t * characters in the string are included in the set of accepted\n\t * characters.</p>\n\t *\n\t * <p>The following example allows only uppercase characters, spaces, and\n\t * numbers to be entered into a text field:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\n\t *\n\t * <p>The following example includes all characters, but excludes lowercase\n\t * letters:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\n\t *\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\n\t * character in the string, so when specified in ActionScript, a double\n\t * backslash must be used. For example, the following code includes only the\n\t * dash(-) and caret(^):</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\n\t *\n\t * <p>The ^ can be used anywhere in the string to toggle between including\n\t * characters and excluding characters. The following code includes only\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\n\t *\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\n\t * <code>restrict</code> strings. The following code includes only the\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\n\t * \n\t * @default null\n\t */\n\tpublic restrict:string;\n\n\t/**\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\n\t * property is 0, the text is not horizontally scrolled. This property value\n\t * is an integer that represents the horizontal position in pixels.\n\t *\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\n\t * because most fonts you typically use are proportionally spaced; that is,\n\t * the characters can have different widths. Flash Player performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\n\t * height of the line adjusts to fit the largest font in use.</p>\n\t *\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\n\t */\n\tpublic scrollH:number;\n\n\t/**\n\t * The vertical position of text in a text field. The <code>scrollV</code>\n\t * property is useful for directing users to a specific paragraph in a long\n\t * passage, or creating scrolling text fields.\n\t *\n\t * <p>The units of vertical scrolling are lines, whereas the units of\n\t * horizontal scrolling are pixels. If the first line displayed is the first\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\n\t * is measured in pixels because most fonts are proportionally spaced; that\n\t * is, the characters can have different widths. Flash performs vertical\n\t * scrolling by line because users usually want to see a complete line of\n\t * text rather than a partial line. Even if there are multiple fonts on a\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\n\t */\n\tpublic scrollV:number;\n\n\t/**\n\t * A Boolean value that indicates whether the text field is selectable. The\n\t * value <code>true</code> indicates that the text is selectable. The\n\t * <code>selectable</code> property controls whether a text field is\n\t * selectable, not whether a text field is editable. A dynamic text field can\n\t * be selectable even if it is not editable. If a dynamic text field is not\n\t * selectable, the user cannot select its text.\n\t *\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\n\t * the text field does not respond to selection commands from the mouse or\n\t * keyboard, and the text cannot be copied with the Copy command. If\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\n\t * field can be selected with the mouse or keyboard, and the text can be\n\t * copied with the Copy command. You can select text this way even if the\n\t * text field is a dynamic text field instead of an input text field. </p>\n\t * \n\t * @default true\n\t */\n\tpublic selectable:boolean;\n\n\t/**\n\t * The zero-based character index value of the first character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionBeginIndex():number /*int*/\n\t{\n\t\treturn this._selectionBeginIndex;\n\t}\n\n\t/**\n\t * The zero-based character index value of the last character in the current\n\t * selection. For example, the first character is 0, the second character is\n\t * 1, and so on. If no text is selected, this property is the value of\n\t * <code>caretIndex</code>.\n\t */\n\tpublic get selectionEndIndex():number /*int*/\n\t{\n\t\treturn this._selectionEndIndex;\n\t}\n\n\t/**\n\t * The sharpness of the glyph edges in this text field. This property applies\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\n\t * property to the nearest value in the range(either -400 or 400).\n\t * \n\t * @default 0\n\t */\n\tpublic sharpness:number;\n\n\t/**\n\t * Attaches a style sheet to the text field. For information on creating\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\n\t * Developer's Guide</i>.\n\t *\n\t * <p>You can change the style sheet associated with a text field at any\n\t * time. If you change the style sheet in use, the text field is redrawn with\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\n\t * use is removed, the text field is redrawn without a style sheet. </p>\n\t *\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\n\t * incorporate the formatting previously applied by the style sheet. To\n\t * preserve the original <code>TextField.htmlText</code> contents without the\n\t * formatting, save the value in a variable before removing the style\n\t * sheet.</p>\n\t */\n\tpublic styleSheet:StyleSheet;\n\n\t/**\n\t * A string that is the current text in the text field. Lines are separated\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\n\t * property contains unformatted text in the text field, without HTML tags.\n\t *\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\n\t * property.</p>\n\t */\n\tpublic get text():string\n\t{\n\t\treturn this._text;\n\t}\n\n\tpublic set text(value:string)\n\t{\n\t\tif (this._text == value)\n\t\t\treturn;\n\n\t\tthis._text = value;\n\t\tthis.reConstruct();\n\t}\n\tpublic get textFormat():TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\tpublic set textFormat(value:TextFormat)\n\t{\n\t\tif (this._textFormat == value)\n\t\t\treturn;\n\t\tthis._textFormat = value;\n\t\tthis.reConstruct();\n\t}\n\n\t/**\n\t * The color of the text in a text field, in hexadecimal format. The\n\t * hexadecimal color system uses six digits to represent color values. Each\n\t * digit has 16 possible values or characters. The characters range from 0-9\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\n\t * <code>0xFFFFFF</code>.\n\t * \n\t * @default 0(0x000000)\n\t */\n\tpublic textColor:number /*int*/;\n\n\n\t/**\n\t * The interaction mode property, Default value is\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\n\t * that the text can be scrolled but not selected. One can switch to the\n\t * selectable mode through the in-built context menu on the text field. On\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\n\t * selection mode.\n\t */\n\tpublic get textInteractionMode():TextInteractionMode\n\t{\n\t\treturn this._textInteractionMode;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textWidth():number\n\t{\n\t\treturn this._textWidth;\n\t}\n\tpublic set textWidth(value:number)\n\t{\n\t\tthis._textWidth = value;\n\t}\n\n\t/**\n\t * The width of the text in pixels.\n\t */\n\tpublic get textHeight():number\n\t{\n\t\treturn this._textHeight;\n\t}\n\tpublic set textHeight(value:number)\n\t{\n\t\tthis._textHeight = value;\n\t}\n\t/**\n\t * The thickness of the glyph edges in this text field. This property applies\n\t * only when <code>AntiAliasType</code> is set to\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t *\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\n\t * you attempt to set <code>thickness</code> to a value outside that range,\n\t * the property is set to the nearest value in the range(either -200 or\n\t * 200).</p>\n\t * \n\t * @default 0\n\t */\n\tpublic thickness:number;\n\n\t/**\n\t * The type of the text field. Either one of the following TextFieldType\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\n\t * which specifies an input text field, which a user can edit.\n\t * \n\t * @default dynamic\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\n\t *                       flash.text.TextFieldType.\n\t */\n\tpublic type:TextFieldType;\n\n\t/**\n\t * Specifies whether to copy and paste the text formatting along with the\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\n\t * between text fields. Both the origin and destination text fields for the\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\n\t * to <code>true</code>. The default value is <code>false</code>.\n\t */\n\tpublic useRichTextClipboard:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether the text field has word wrap. If\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\n\t * has word wrap; if the value is <code>false</code>, the text field does not\n\t * have word wrap. The default value is <code>false</code>.\n\t */\n\tpublic wordWrap:boolean;\n\n\t/**\n\t * Creates a new TextField instance. After you create the TextField instance,\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\n\t * the parent DisplayObjectContainer object to add the TextField instance to\n\t * the display list.\n\t *\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\n\t */\n\tconstructor()\n\t{\n\t\tsuper(new Geometry());\n\t\tthis.type = TextFieldType.STATIC;\n\t}\n\n\t/**\n\t * Reconstructs the Geometry for this Text-field.\n\t */\n\tpublic reConstruct() {\n\n\n\t\tif(this._textFormat==null)\n\t\t\treturn;\n\n\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\n\n\t\tif(this._text==\"\")\n\t\t\treturn;\n\n\t\tvar vertices:Array<number> = new Array<number>();\n\n\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\n\t\tvar y_offset:number=0;\n\t\tvar prev_char:TesselatedFontChar = null;\n\t\tvar j:number = 0;\n\t\tvar k:number = 0;\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\n\t\t\tvar line_width:number=0;\n\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines[tl].charCodeAt(i).toString());\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t\t\t\tline_width+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t\tfont_chars.push(this_char);\n\t\t\t}\n\t\t\tvar x_offset:number=0;\n\t\t\tif(this._textFormat.align==\"center\"){\n\t\t\t\tx_offset=(this._textWidth-line_width)/2;\n\t\t\t}\n\t\t\telse if(this._textFormat.align==\"right\"){\n\t\t\t\tx_offset=(this._textWidth-line_width);\n\t\t\t}\n\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\n\t\t\t//console.log(\"this._width=\"+this._width);\n\t\t\tfor (var i = 0; i < textlines[tl].length; i++) {\n\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\n\t\t\t\tif (this_char != null) {\n\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\n\t\t\t\t\tif (this_subGeom != null) {\n\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\n\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\n\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\n\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\n\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\n\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\n\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\n\t\t\t\t\t\tvar kerning_value:number = 0;\n\t\t\t\t\t\tif (prev_char != null) {\n\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\n\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\n\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\n\t\t\t\t}\n\t\t\t}\n\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\n\t\t}\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\n\t\tattributesView.set(vertices);\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\n\t\tattributesView.dispose();\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\n\t\tthis.subMeshes[0].material=this._textFormat.material;\n\t}\n\t/**\n\t * Appends the string specified by the <code>newText</code> parameter to the\n\t * end of the text of the text field. This method is more efficient than an\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\n\t * text field that contains a significant amount of content.\n\t *\n\t * @param newText The string to append to the existing text.\n\t */\n\tpublic appendText(newText:string) {\n\t\tthis._text+=newText;\n\t}\n\n\t/**\n\t * *tells the Textfield that a paragraph is defined completly.\n\t * e.g. the textfield will start a new line for future added text.\n\t */\n\tpublic closeParagraph()\n\t{\n\t\t//TODO\n\t}\n\n\t/**\n\t * Returns a rectangle that is the bounding box of the character.\n\t * \n\t * @param charIndex The zero-based index value for the character(for\n\t *                  example, the first position is 0, the second position is\n\t *                  1, and so on).\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\n\t *         maximum values defining the bounding box of the character.\n\t */\n\tpublic getCharBoundaries(charIndex:number):Rectangle\n\t{\n\t\treturn this._charBoundaries;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the character at the point specified\n\t * by the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the character.\n\t * @param y The <i>y</i> coordinate of the character.\n\t * @return The zero-based index value of the character(for example, the\n\t *         first position is 0, the second position is 1, and so on). Returns\n\t *         -1 if the point is not over any character.\n\t */\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._charIndexAtPoint;\n\t}\n\n\t/**\n\t * Given a character index, returns the index of the first character in the\n\t * same paragraph.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the first character in the same\n\t *         paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._firstCharInParagraph;\n\t}\n\n\t/**\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\n\t * image or SWF file that has been added to an HTML-formatted text field by\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\n\t * following format:\n\t *\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\n\t * 'instanceName' ></code></pre></p>\n\t * \n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\n\t *           of the <code><img></code> tag).\n\t * @return The display object corresponding to the image or SWF file with the\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\n\t *         of the text field. For media loaded from an external source, this\n\t *         object is a Loader object, and, once loaded, the media object is a\n\t *         child of that Loader object. For media embedded in the SWF file,\n\t *         it is the loaded object. If no <code><img></code> tag with the\n\t *         matching <code>id</code> exists, the method returns\n\t *         <code>null</code>.\n\t */\n\tpublic getImageReference(id:string):DisplayObject\n\t{\n\t\treturn this._imageReference;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line at the point specified by\n\t * the <code>x</code> and <code>y</code> parameters.\n\t * \n\t * @param x The <i>x</i> coordinate of the line.\n\t * @param y The <i>y</i> coordinate of the line.\n\t * @return The zero-based index value of the line(for example, the first\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\n\t *         point is not over any line.\n\t */\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\n\t{\n\t\treturn this._lineIndexAtPoint;\n\t}\n\n\t/**\n\t * Returns the zero-based index value of the line containing the character\n\t * specified by the <code>charIndex</code> parameter.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return The zero-based index value of the line.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineIndexOfChar;\n\t}\n\n\t/**\n\t * Returns the number of characters in a specific text line.\n\t * \n\t * @param lineIndex The line number for which you want the length.\n\t * @return The number of characters in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineLength;\n\t}\n\n\t/**\n\t * Returns metrics information about a given text line.\n\t * \n\t * @param lineIndex The line number for which you want metrics information.\n\t * @return A TextLineMetrics object.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\n\t{\n\t\treturn this._lineMetrics;\n\t}\n\n\t/**\n\t * Returns the character index of the first character in the line that the\n\t * <code>lineIndex</code> parameter specifies.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The zero-based index value of the first character in the line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._lineOffset;\n\t}\n\n\t/**\n\t * Returns the text of the line specified by the <code>lineIndex</code>\n\t * parameter.\n\t * \n\t * @param lineIndex The zero-based index value of the line(for example, the\n\t *                  first line is 0, the second line is 1, and so on).\n\t * @return The text string contained in the specified line.\n\t * @throws RangeError The line number specified is out of range.\n\t */\n\tpublic getLineText(lineIndex:number /*int*/):string\n\t{\n\t\treturn this._lineText;\n\t}\n\n\t/**\n\t * Given a character index, returns the length of the paragraph containing\n\t * the given character. The length is relative to the first character in the\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\n\t * the character index passed in.\n\t * \n\t * @param charIndex The zero-based index value of the character(for example,\n\t *                  the first character is 0, the second character is 1, and\n\t *                  so on).\n\t * @return Returns the number of characters in the paragraph.\n\t * @throws RangeError The character index specified is out of range.\n\t */\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn this._paragraphLength;\n\t}\n\n\t/**\n\t * Returns a TextFormat object that contains formatting information for the\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\n\t * parameters specify. Only properties that are common to the entire text\n\t * specified are set in the resulting TextFormat object. Any property that is\n\t * <i>mixed</i>, meaning that it has different values at different points in\n\t * the text, has a value of <code>null</code>.\n\t *\n\t * <p>If you do not specify values for these parameters, this method is\n\t * applied to all the text in the text field. </p>\n\t *\n\t * <p>The following table describes three possible usages:</p>\n\t * \n\t * @return The TextFormat object that represents the formatting properties\n\t *         for the specified text.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\n\t{\n\t\treturn this._textFormat;\n\t}\n\n\t/**\n\t * Replaces the current selection with the contents of the <code>value</code>\n\t * parameter. The text is inserted at the position of the current selection,\n\t * using the current default character format and default paragraph format.\n\t * The text is not treated as HTML.\n\t *\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\n\t * delete text without disrupting the character and paragraph formatting of\n\t * the rest of the text.</p>\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param value The string to replace the currently selected text.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceSelectedText(value:string)\n\t{\n\n\t}\n\n\t/**\n\t * Replaces the range of characters that the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters specify with the contents of the\n\t * <code>newText</code> parameter. As designed, the text from\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t * \n\t * @param beginIndex The zero-based index value for the start position of the\n\t *                   replacement range.\n\t * @param endIndex   The zero-based index position of the first character\n\t *                   after the desired text span.\n\t * @param newText    The text to use to replace the specified range of\n\t *                   characters.\n\t * @throws Error This method cannot be used on a text field with a style\n\t *               sheet.\n\t */\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\n\t{\n\n\t}\n\n\t/**\n\t * Sets as selected the text designated by the index values of the first and\n\t * last characters, which are specified with the <code>beginIndex</code> and\n\t * <code>endIndex</code> parameters. If the two parameter values are the\n\t * same, this method sets the insertion point, as if you set the\n\t * <code>caretIndex</code> property.\n\t * \n\t * @param beginIndex The zero-based index value of the first character in the\n\t *                   selection(for example, the first character is 0, the\n\t *                   second character is 1, and so on).\n\t * @param endIndex   The zero-based index value of the last character in the\n\t *                   selection.\n\t */\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\n\t{\n\n\t}\n\n\t/**\n\t * Applies the text formatting that the <code>format</code> parameter\n\t * specifies to the specified text in a text field. The value of\n\t * <code>format</code> must be a TextFormat object that specifies the desired\n\t * text formatting changes. Only the non-null properties of\n\t * <code>format</code> are applied to the text field. Any property of\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\n\t * default, all of the properties of a newly created TextFormat object are\n\t * set to <code>null</code>.\n\t *\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\n\t * the text field.</p>\n\t *\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\n\t * applied to a range of characters or to the entire body of text in a text\n\t * field. To apply the properties of format to all text in the text field, do\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\n\t * To apply the properties of the format to a range of text, specify values\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\n\t * You can use the <code>length</code> property to determine the index\n\t * values.</p>\n\t *\n\t * <p>The two types of formatting information in a TextFormat object are\n\t * character level formatting and paragraph level formatting. Each character\n\t * in a text field can have its own character formatting settings, such as\n\t * font name, font size, bold, and italic.</p>\n\t *\n\t * <p>For paragraphs, the first character of the paragraph is examined for\n\t * the paragraph formatting settings for the entire paragraph. Examples of\n\t * paragraph formatting settings are left margin, right margin, and\n\t * indentation.</p>\n\t *\n\t * <p>Any text inserted manually by the user, or replaced by the\n\t * <code>replaceSelectedText()</code> method, receives the default text field\n\t * formatting for new text, and not the formatting specified for the text\n\t * insertion point. To set the default formatting for new text, use\n\t * <code>defaultTextFormat</code>.</p>\n\t * \n\t * @param format A TextFormat object that contains character and paragraph\n\t *               formatting information.\n\t * @throws Error      This method cannot be used on a text field with a style\n\t *                    sheet.\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\n\t *                    specified is out of range.\n\t */\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\n\t{\n\n\t}\n\n\t/**\n\t * Returns true if an embedded font is available with the specified\n\t * <code>fontName</code> and <code>fontStyle</code> where\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\n\t * embedded fonts are only used with the flash.text.engine classes. The two\n\t * types are distinguished by the <code>fontType</code> property of the\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\n\t * function.\n\t *\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\n\t * available at run time with the specified name and style is of type\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\n\t * embedded font were available with the specified name and style.</p>\n\t *\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\n\t * \n\t * @param fontName  The name of the embedded font to check.\n\t * @param fontStyle Specifies the font style to check. Use\n\t *                  <code>flash.text.FontStyle</code>\n\t * @return <code>true</code> if a compatible embedded font is available,\n\t *         otherwise <code>false</code>.\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\n\t *                       of <code>flash.text.FontStyle</code>.\n\t */\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\n\t{\n\t\treturn false;\n\t}\n\n    public clone() : DisplayObject\n    {\n        var clone = new TextField();\n        this._iCopyToTextField(clone);\n        return clone;\n    }\n\n    public _iCopyToTextField(clone:TextField):void\n    {\n\t\tclone.geometry = new Geometry();\n\t\t//clone.material = this._material;\n\t\tclone._iMatrix3D = this._iMatrix3D;\n\t\tclone.pivot = this.pivot;\n\t\tclone.partition = this.partition;\n\t\tclone.boundsType = this.boundsType;\n\n\n\t\tclone.name = this.name;\n\t\tclone.castsShadows = this.castsShadows;\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\n\t\tclone.mouseEnabled = this.mouseEnabled;\n\t\tclone.mouseChildren = this.mouseChildren;\n\t\t//this is of course no proper cloning\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\n\t\tclone.extra = this.extra;\n\t\tclone._iMaskID = this._iMaskID;\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\n\n\t\t//var len:number = this._subMeshes.length;\n\t\t//for (var i:number = 0; i < len; ++i)\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\n\n\n\t\tvar len = this.numChildren;\n\t\tvar i;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tclone.addChild(this.getChildAt(i).clone());\n\n\t\t//if (this._animator)\n\t\t//\tclone.animator = this._animator.clone();\n\t\tclone.textWidth=this.textWidth;\n\t\tclone.textHeight=this.textHeight;\n       \tclone.textFormat = this._textFormat;\n        //clone.textColor = clone.textColor;\n       \tclone.text = this._text;\n    }\n}\n\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass CastError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\n/**\n * @class away.events.CameraEvent\n */\nclass CameraEvent extends Event\n{\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\n\n\tprivate _camera:Camera;\n\n\tconstructor(type:string, camera:Camera)\n\t{\n\t\tsuper(type);\n\n\t\tthis._camera = camera;\n\t}\n\n\tpublic get camera():Camera\n\t{\n\t\treturn this._camera;\n\t}\n}\n\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass DisplayObjectEvent extends Event\n{\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\n\n\tpublic object:DisplayObject;\n\n\tconstructor(type:string, object:DisplayObject)\n\t{\n\t\tsuper(type);\n\t\tthis.object = object;\n\t}\n}\n\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\n\n/**\n* Dispatched to notify changes in a geometry object's state.\n*\n* @class away.events.GeometryEvent\n* @see away3d.core.base.Geometry\n*/\nclass GeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\n\n\t/**\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\n\t */\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\n\n\t/**\n\t *\n\t */\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\n\n\tprivate _subGeometry:SubGeometryBase;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\n\t */\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\n\t{\n\t\tsuper(type);\n\n\t\tthis._subGeometry = subGeometry;\n\t}\n\n\t/**\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\n\t */\n\tpublic get subGeometry():SubGeometryBase\n\t{\n\t\treturn this._subGeometry;\n\t}\n\n\t/**\n\t * Clones the event.\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\n\t}\n}\n\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass LightEvent extends Event\n{\n\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t//@override\n\tpublic clone():Event\n\t{\n\t\treturn new LightEvent(this.type);\n\t}\n}\n\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass MaterialEvent extends Event\n{\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n/**\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\n * TODO: we don't have screenZ data, tho this should be easy to implement\n */\nclass MouseEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:MouseEvent;\n\n\t/**\n\t * Defines the value of the type property of a mouseOver3d event object.\n\t */\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseOut3d event object.\n\t */\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseUp3d event object.\n\t */\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseDown3d event object.\n\t */\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseMove3d event object.\n\t */\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOver3d event object.\n\t */\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\n\n\t/**\n\t * Defines the value of the type property of a rollOut3d event object.\n\t */\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\n\n\t/**\n\t * Defines the value of the type property of a click3d event object.\n\t */\n\tpublic static CLICK:string = \"click3d\";\n\n\t/**\n\t * Defines the value of the type property of a doubleClick3d event object.\n\t */\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\n\n\t/**\n\t * Defines the value of the type property of a mouseWheel3d event object.\n\t */\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\n\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\t/**\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\n\t */\n\tpublic delta:number;\n\n\t/**\n\t * Create a new MouseEvent object.\n\t * @param type The type of the MouseEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\n\t/**\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\tresult.delta = this.delta;\n\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\n\t\tresult._iParentEvent = this;\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.RenderableOwnerEvent\n * @see away.core.base.Geometry\n */\nclass RenderableOwnerEvent extends Event\n{\n\t/**\n\t * Dispatched when a Renderable owners's render object owner has been updated.\n\t */\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\n\n\tprivate _renderOwner:IRenderOwner;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param dataType An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, renderOwner:IRenderOwner)\n\t{\n\t\tsuper(type);\n\n\t\tthis._renderOwner = renderOwner;\n\t}\n\n\t/**\n\t * The renderobject owner of the renderable owner.\n\t */\n\tpublic get renderOwner():IRenderOwner\n\t{\n\t\treturn this._renderOwner;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\n\t}\n}\n\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass RendererEvent extends Event\n{\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\n\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n}\n\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ResizeEvent extends Event\n{\n\tpublic static RESIZE:string = \"resize\";\n\n\tprivate _oldHeight:number;\n\tprivate _oldWidth:number;\n\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\n\t{\n\t\tsuper(type);\n\n\t\tthis._oldHeight = oldHeight;\n\t\tthis._oldWidth = oldWidth;\n\t}\n\n\tpublic get oldHeight():number\n\t{\n\t\treturn this._oldHeight;\n\t}\n\n\tpublic get oldWidth():number\n\t{\n\t\treturn this._oldWidth;\n\t}\n}\n\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\nclass SceneEvent extends Event\n{\n\t/**\n\t *\n\t */\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\n\n\t/**\n\t *\n\t */\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\n\n\t/**\n\t *\n\t */\n\tpublic displayObject:DisplayObject;\n\n\tconstructor(type:string, displayObject:DisplayObject)\n\t{\n\t\tsuper(type);\n\n\t\tthis.displayObject = displayObject;\n\t}\n}\n\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\n/**\n * Dispatched to notify changes in a sub geometry object's state.\n *\n * @class away.events.SubGeometryEvent\n * @see away.core.base.Geometry\n */\nclass SubGeometryEvent extends Event\n{\n\t/**\n\t * Dispatched when a SubGeometry's index data has been updated.\n\t */\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's index data has been disposed.\n\t */\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\n\t\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been updated.\n\t */\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\n\n\t/**\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\n\t */\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\n\n\t\n\tprivate _attributesView:AttributesView;\n\n\t/**\n\t * Create a new GeometryEvent\n\t * @param type The event type.\n\t * @param attributesView An optional data type of the vertex data being updated.\n\t */\n\tconstructor(type:string, attributesView:AttributesView)\n\t{\n\t\tsuper(type);\n\n\t\tthis._attributesView = attributesView;\n\t}\n\n\t/**\n\t * The attributes view of the vertex data.\n\t */\n\tpublic get attributesView():AttributesView\n\t{\n\t\treturn this._attributesView;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\n\t}\n}\n\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nclass TouchEvent extends Event\n{\n\t// Private.\n\tpublic _iAllowedToPropagate:boolean = true;\n\tpublic _iParentEvent:TouchEvent;\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\n\n\t/**\n\t *\n\t */\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\n\t\n\t/**\n\t * The horizontal coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenX:number;\n\t\n\t/**\n\t * The vertical coordinate at which the event occurred in view coordinates.\n\t */\n\tpublic screenY:number;\n\t\n\t/**\n\t * The view object inside which the event took place.\n\t */\n\tpublic view:View;\n\t\n\t/**\n\t * The 3d object inside which the event took place.\n\t */\n\tpublic object:DisplayObject;\n\t\n\t/**\n\t * The renderable owner inside which the event took place.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\t\n\t/**\n\t * The material of the 3d element inside which the event took place.\n\t */\n\tpublic material:MaterialBase;\n\t\n\t/**\n\t * The uv coordinate inside the draw primitive where the event took place.\n\t */\n\tpublic uv:Point;\n\t\n\t/**\n\t * The index of the face where the event took place.\n\t */\n\tpublic index:number;\n\t\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n\tpublic subGeometryIndex:number;\n\t\n\t/**\n\t * The position in object space where the event took place\n\t */\n\tpublic localPosition:Vector3D;\n\t\n\t/**\n\t * The normal in object space where the event took place\n\t */\n\tpublic localNormal:Vector3D;\n\t\n\t/**\n\t * Indicates whether the Control key is active (true) or inactive (false).\n\t */\n\tpublic ctrlKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Alt key is active (true) or inactive (false).\n\t */\n\tpublic altKey:boolean;\n\t\n\t/**\n\t * Indicates whether the Shift key is active (true) or inactive (false).\n\t */\n\tpublic shiftKey:boolean;\n\n\n\tpublic touchPointID:number;\n\t\n\t/**\n\t * Create a new TouchEvent object.\n\t * @param type The type of the TouchEvent.\n\t */\n\tconstructor(type:string)\n\t{\n\t\tsuper(type);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get bubbles():boolean\n\t{\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\n\t\tthis._iAllowedToPropagate = true;\n\n\t\t// Don't bubble if propagation has been stopped.\n\t\treturn doesBubble;\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopPropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\t\t\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopPropagation();\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic stopImmediatePropagation()\n\t{\n\t\tthis._iAllowedToPropagate = false;\n\n\t\tif (this._iParentEvent)\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\n\t}\n\t\n\t/**\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\n\t */\n\tpublic clone():Event\n\t{\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\n\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\n\t\t if (isDefaultPrevented())\n\t\t result.preventDefault();\n\t\t */\n\t\t\n\t\tresult.screenX = this.screenX;\n\t\tresult.screenY = this.screenY;\n\t\t\n\t\tresult.view = this.view;\n\t\tresult.object = this.object;\n\t\tresult.renderableOwner = this.renderableOwner;\n\t\tresult.material = this.material;\n\t\tresult.uv = this.uv;\n\t\tresult.localPosition = this.localPosition;\n\t\tresult.localNormal = this.localNormal;\n\t\tresult.index = this.index;\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\n\t\t\n\t\tresult.ctrlKey = this.ctrlKey;\n\t\tresult.shiftKey = this.shiftKey;\n\t\t\n\t\tresult._iParentEvent = this;\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t * The position in scene space where the event took place\n\t */\n\tpublic get scenePosition():Vector3D\n\t{\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\n\t}\n\t\n\t/**\n\t * The normal in scene space where the event took place\n\t */\n\tpublic get sceneNormal():Vector3D\n\t{\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\n\t\tsceneNormal.normalize();\n\n\t\treturn sceneNormal;\n\t}\n}\n\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\n\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\n\tprivate static _defaultTextureMaterial:BasicMaterial;\n\tprivate static _defaultColorMaterial:BasicMaterial;\n\tprivate static _defaultTexture:Single2DTexture;\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\n\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\n\t\t}\n\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\n\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\n\t}\n\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\n\t{\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\n\t\t}\n\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tprivate static createDefaultCubeTexture()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\n\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\n\t}\n\n\tprivate static createCheckeredBitmapImageCube()\n\t{\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\n\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\n\n\t\tfor (var i:number = 0; i < 6; i++)\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\n\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\n\t}\n\n\tprivate static createCheckeredBitmapImage2D()\n\t{\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\n\t}\n\n\tprivate static createDefaultTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\n\t}\n\n\tprivate static createDefaultCubeTextureMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\n\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\n\t}\n\n\tprivate static createDefaultColorMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\n\n/**\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\n */\nclass MouseManager\n{\n\tprivate static _instance:MouseManager;\n\n\tprivate _viewLookup:Array<View> = new Array<View>();\n\n\tpublic _iActiveDiv:HTMLDivElement;\n\tpublic _iUpdateDirty:boolean;\n\tpublic _iCollidingObject:PickingCollisionVO;\n\t\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\n\n\tprivate _mouseMoveEvent:MouseEvent;\n\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\n\n\tprivate onClickDelegate:(event:MouseEvent) => void;\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\n\n\t/**\n\t * Creates a new <code>MouseManager</code> object.\n\t */\n\tconstructor()\n\t{\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\n\t}\n\n\tpublic static getInstance():MouseManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new MouseManager());\n\t}\n\n\tpublic fireMouseEvents(forceMouseMove:boolean)\n\t{\n\t\t // If colliding object has changed, queue over/out events.\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\tif (this._previousCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\n\n\t\t\tif (this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\n\t\t}\n\n\t\t // Fire mouse move events here if forceMouseMove is on.\n\t\tif (forceMouseMove && this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\n\n\t\tvar event:AwayMouseEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\n\t\t\twhile (dispatcher) {\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\n\t\t\t\t\tdispatcher.dispatchEvent(event);\n\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t}\n\t\t}\n\n\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._previousCollidingObject = this._iCollidingObject;\n\n\t\tthis._iUpdateDirty = false;\n\t}\n\n//\t\tpublic addViewLayer(view:View)\n//\t\t{\n//\t\t\tvar stg:Stage = view.stage;\n//\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\n//\t\t\tif (!view.stageGL.mouse3DManager)\n//\t\t\t\tview.stageGL.mouse3DManager = this;\n//\n//\t\t\tif (!hasKey(view))\n//\t\t\t\t_view3Ds[view] = 0;\n//\n//\t\t\t_childDepth = 0;\n//\t\t\ttraverseDisplayObjects(stg);\n//\t\t\t_viewCount = _childDepth;\n//\t\t}\n\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.push(view);\n\t}\n\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\n\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\n\t{\n\t\t// 2D properties.\n\t\tif (sourceEvent) {\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\t\tevent.altKey = sourceEvent.altKey;\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\t\tevent.screenX = sourceEvent.clientX;\n\t\t\tevent.screenY = sourceEvent.clientY;\n\t\t}\n\n\t\tif (collider == null)\n\t\t\tcollider = this._iCollidingObject;\n\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Listeners.\n\t// ---------------------------------------------------------------------\n\n\tprivate onMouseMove(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\n\t}\n\n\tprivate onMouseOut(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = null;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseOut, event);\n\t}\n\n\tprivate onMouseOver(event:MouseEvent)\n\t{\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch( this._mouseOver, event);\n\t}\n\n\tprivate onClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseClick, event);\n\t}\n\n\tprivate onDoubleClick(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\n\t}\n\n\tprivate onMouseDown(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseDown, event);\n\t}\n\n\tprivate onMouseUp(event)\n\t{\n\t\tevent.preventDefault();\n\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseUp , event);\n\t}\n\n\tprivate onMouseWheel(event:MouseEvent)\n\t{\n\t\tthis.updateColliders(event);\n\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\n\t}\n\n\n\tprivate updateColliders(event)\n\t{\n\t\tif (this._iUpdateDirty)\n\t\t\treturn;\n\n\t\tvar view:View;\n\t\tvar bounds:ClientRect;\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\n\t\tvar len:number = this._viewLookup.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tview = this._viewLookup[i];\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\n\t\t\t\tview._pMouseX = null;\n\t\t\t\tview._pMouseY = null;\n\t\t\t} else {\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\n\t\t\t\tview.updateCollider();\n\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._iUpdateDirty = true;\n\t}\n}\n\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\n\nclass TouchManager\n{\n\tprivate static _instance:TouchManager;\n\n\tprivate _updateDirty:boolean = true;\n\tprivate _nullVector:Vector3D = new Vector3D();\n\tprivate _numTouchPoints:number;\n\tprivate _touchPoint:TouchPoint;\n\tprivate _iCollidingObject:PickingCollisionVO;\n\tprivate _previousCollidingObject:PickingCollisionVO;\n\tpublic static _iCollidingObjectFromTouchId:Object;\n\tpublic static _previousCollidingObjectFromTouchId:Object;\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\n\t\n\tprivate _touchPoints:Array<TouchPoint>;\n\tprivate _touchPointFromId:Object;\n\t\n\tprivate _touchMoveEvent:TouchEvent;\n\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\n\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\n\t\n\tconstructor()\n\t{\n\t\tthis._touchPoints = new Array<TouchPoint>();\n\t\tthis._touchPointFromId = new Object();\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\n\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\n\t}\n\n\tpublic static getInstance():TouchManager\n\t{\n\t\tif (this._instance)\n\t\t\treturn this._instance;\n\n\t\treturn (this._instance = new TouchManager());\n\t}\n\n\t// ---------------------------------------------------------------------\n\t// Interface.\n\t// ---------------------------------------------------------------------\n\t\n\tpublic updateCollider(forceTouchMove:boolean)\n\t{\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\n\t\t//\t}\n\t\t//}\n\t}\n\t\n\tpublic fireTouchEvents(forceTouchMove:boolean)\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[i];\n\t\t\t// If colliding object has changed, queue over/out events.\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\n\t\t\t\tif (this._previousCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\n\t\t\t\tif (this._iCollidingObject)\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t\t}\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\n\t\t\tif (forceTouchMove && this._iCollidingObject)\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\n\t\t}\n\n\t\tvar event:AwayTouchEvent;\n\t\tvar dispatcher:DisplayObject;\n\n\t\t// Dispatch all queued events.\n\t\tvar len:number = this._queuedEvents.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\n\t\t\tevent = this._queuedEvents[i];\n\t\t\tdispatcher = event.object;\n\t\t\t\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\n\t\t\t\tdispatcher = dispatcher.parent;\n\t\t\t\n\t\t\tif (dispatcher)\n\t\t\t\tdispatcher.dispatchEvent(event);\n\t\t}\n\t\tthis._queuedEvents.length = 0;\n\n\t\tthis._updateDirty = false;\n\t\t\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\n\t\t}\n\t}\n\t\n\tpublic registerView(view:View)\n\t{\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\tpublic unregisterView(view:View)\n\t{\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Private.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\n\t{\n\t\t// 2D properties.\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\n\t\tevent.altKey = sourceEvent.altKey;\n\t\tevent.shiftKey = sourceEvent.shiftKey;\n\t\tevent.screenX = touch.x;\n\t\tevent.screenY = touch.y;\n\t\tevent.touchPointID = touch.id;\n\t\t\n\t\t// 3D properties.\n\t\tif (collider) {\n\t\t\t// Object.\n\t\t\tevent.object = collider.displayObject;\n\t\t\tevent.renderableOwner = collider.renderableOwner;\n\t\t\t// UV.\n\t\t\tevent.uv = collider.uv;\n\t\t\t// Position.\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\n\t\t\t// Normal.\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\n\t\t\t// Face index.\n\t\t\tevent.index = collider.index;\n\t\t\t// SubGeometryIndex.\n\t\t\tevent.subGeometryIndex = collider.index;\n\t\t\t\n\t\t} else {\n\t\t\t// Set all to null.\n\t\t\tevent.uv = null;\n\t\t\tevent.object = null;\n\t\t\tevent.localPosition = this._nullVector;\n\t\t\tevent.localNormal = this._nullVector;\n\t\t\tevent.index = 0;\n\t\t\tevent.subGeometryIndex = 0;\n\t\t}\n\t\t\n\t\t// Store event to be dispatched later.\n\t\tthis._queuedEvents.push(event);\n\t}\n\t\n\t// ---------------------------------------------------------------------\n\t// Event handlers.\n\t// ---------------------------------------------------------------------\n\t\n\tprivate onTouchBegin(event:TouchEvent)\n\t{\n\t\t\n\t\tvar touch:TouchPoint = new TouchPoint();\n\t\t//touch.id = event.touchPointID;\n\t\t//touch.x = event.stageX;\n\t\t//touch.y = event.stageY;\n\t\tthis._numTouchPoints++;\n\t\tthis._touchPoints.push(touch);\n\t\tthis._touchPointFromId[ touch.id ] = touch;\n\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\n\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\tif (this._iCollidingObject)\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\n\n\t\tthis._updateDirty = true;\n\t}\n\t\n\tprivate onTouchMove(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t////touch.x = event.stageX;\n\t\t////touch.y = event.stageY;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n\t\n\tprivate onTouchEnd(event:TouchEvent)\n\t{\n\t\t\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\n\t\t//\n\t\t//if (!touch) return;\n\t\t//\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\n\t\t//if (this._iCollidingObject)\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\n\t\t//\n\t\t//this._touchPointFromId[ touch.id ] = null;\n\t\t//this._numTouchPoints--;\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\n\t\t//\n\t\t//this._updateDirty = true;\n\t}\n}\n\n\nexport = TouchManager;\n\nclass TouchPoint\n{\n\tpublic id:number;\n\tpublic x:number;\n\tpublic y:number;\n}\n\n\n/**\n * Classes for Touch Interfaces\n */\ninterface TouchEvent extends UIEvent {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n\taltKey: boolean;\n\tmetaKey: boolean;\n\tctrlKey: boolean;\n\tshiftKey: boolean;\n\trotation: number;\n\tscale: number;\n\n\t// for iOS\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\n\n\t// for Android\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\n}\n\ndeclare var TouchEvent: {\n\tprototype: TouchEvent;\n\tnew (): TouchEvent;\n}\n\ninterface TouchList {\n\tlength: number;\n\t[index: number]: Touch;\n\titem: (index: number) => Touch;\n}\n\ninterface Touch {\n\tidentifier: number;\n\ttarget: EventTarget;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n}\n\ninterface Window {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface Document {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ninterface HTMLElement {\n\tontouchstart: (ev: TouchEvent) => any;\n\tontouchmove: (ev: TouchEvent) => any;\n\tontouchend: (ev: TouchEvent) => any;\n\tontouchcancel: (ev: TouchEvent) => any;\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n}\n\ndeclare var ontouchstart: (ev: TouchEvent) => any;\ndeclare var ontouchmove: (ev: TouchEvent) => any;\ndeclare var ontouchend: (ev: TouchEvent) => any;\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\n\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\n\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\n\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n/**\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass BasicMaterial extends MaterialBase\n{\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\n\n    private _preserveAlpha:boolean = false;\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn BasicMaterial.assetType;\n\t}\n\n\t/**\n\t * Creates a new BasicMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tif (textureColor instanceof Image2D)\n\t\t\ttextureColor = new Single2DTexture(textureColor);\n\n\t\tif (textureColor instanceof TextureBase) {\n\t\t\tthis.texture = <TextureBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n    /**\n     * Indicates whether alpha should be preserved - defaults to false\n     */\n    public get preserveAlpha():boolean\n    {\n        return this._preserveAlpha;\n    }\n    public set preserveAlpha(value:boolean)\n    {\n        if (this._preserveAlpha == value)\n            return;\n        this._preserveAlpha = value;\n        this._pInvalidateRender();\n    }\n}\n\nexport = BasicMaterial;",
    "/**\n * Enumeration class for defining which lighting types affect the specific material\n * lighting component (diffuse and specular). This can be useful if, for example, you\n * want to use light probes for diffuse global lighting, but want specular reflections from\n * traditional light sources without those affecting the diffuse light.\n *\n * @see away.materials.ColorMaterial.diffuseLightSources\n * @see away.materials.ColorMaterial.specularLightSources\n * @see away.materials.TextureMaterial.diffuseLightSources\n * @see away.materials.TextureMaterial.specularLightSources\n */\nclass LightSources\n{\n\t/**\n\t * Defines normal lights are to be used as the source for the lighting\n\t * component.\n\t */\n\tpublic static LIGHTS:number = 0x01;\n\n\t/**\n\t * Defines that global lighting probes are to be used as the source for the\n\t * lighting component.\n\t */\n\tpublic static PROBES:number = 0x02;\n\n\t/**\n\t * Defines that both normal and global lighting probes  are to be used as the\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\n\t */\n\tpublic static ALL:number = 0x03;\n}\n\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n\n/**\n * MaterialBase forms an abstract base class for any material.\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\n *\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\n * shaders, or entire new material frameworks.\n */\nclass MaterialBase extends AssetBase implements IRenderOwner\n{\n\tprivate _colorTransform:ColorTransform;\n\tprivate _pUseColorTransform:boolean = false;\n\tprivate _frameRect:Rectangle;\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\t\n\tprivate _sizeChanged:MaterialEvent;\n\tprivate _renders:Array<IRender> = new Array<IRender>();\n\n\tpublic _pAlphaThreshold:number = 0;\n\tpublic _pAnimateUVs:boolean = false;\n\tprivate _enableLightFallOff:boolean = true;\n\tprivate _specularLightSources:number = 0x01;\n\tprivate _diffuseLightSources:number = 0x03;\n\n\t/**\n\t * An object to contain any extra data.\n\t */\n\tpublic extra:Object;\n\n\t/**\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\n\t * that the deferred renderer knows not to take the forward rendering path.\n\t *\n\t * @private\n\t */\n\tpublic _iClassification:string;\n\n\n\t/**\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\n\t *\n\t * @private\n\t */\n\tpublic _iMaterialId:number = 0;\n\n\tpublic _iBaseScreenPassIndex:number = 0;\n\n\tprivate _bothSides:boolean = false; // update\n\tprivate _animationSet:IAnimationSet;\n\n\t/**\n\t * A list of material owners, renderables or custom Entities.\n\t */\n\tprivate _owners:Array<IRenderableOwner>;\n\n\tprivate _alphaPremultiplied:boolean;\n\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\n\n\tprivate _mipmap:boolean = true;\n\tprivate _smooth:boolean = true;\n\tprivate _repeat:boolean = false;\n\tprivate _color:number = 0xFFFFFF;\n\tpublic _pTexture:TextureBase;\n\n\tpublic _pLightPicker:LightPickerBase;\n\n\tpublic _pHeight:number = 1;\n\tpublic _pWidth:number = 1;\n\n\tprivate _onLightChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new MaterialBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._iMaterialId = Number(this.id);\n\n\t\tthis._owners = new Array<IRenderableOwner>();\n\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\n\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic get frameRect():Rectangle\n\t{\n\t\treturn this._frameRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._pHeight;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._animationSet;\n\t}\n\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see LightPickerBase\n\t * @see StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker == value)\n\t\t\treturn;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\n\t */\n\tpublic get mipmap():boolean\n\t{\n\t\treturn this._mipmap;\n\t}\n\n\tpublic set mipmap(value:boolean)\n\t{\n\t\tif (this._mipmap == value)\n\t\t\treturn;\n\n\t\tthis._mipmap = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\n\t */\n\tpublic get smooth():boolean\n\t{\n\t\treturn this._smooth;\n\t}\n\n\tpublic set smooth(value:boolean)\n\t{\n\t\tif (this._smooth == value)\n\t\t\treturn;\n\n\t\tthis._smooth = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\n\t */\n\tpublic get repeat():boolean\n\t{\n\t\treturn this._repeat;\n\t}\n\n\tpublic set repeat(value:boolean)\n\t{\n\t\tif (this._repeat == value)\n\t\t\treturn;\n\n\t\tthis._repeat = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The diffuse reflectivity color of the surface.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(value:number)\n\t{\n\t\tif (this._color == value)\n\t\t\treturn;\n\n\t\tthis._color = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The texture object to use for the albedo colour.\n\t */\n\tpublic get texture():TextureBase\n\t{\n\t\treturn this._pTexture;\n\t}\n\n\tpublic set texture(value:TextureBase)\n\t{\n\t\tif (this._pTexture == value)\n\t\t\treturn;\n\n\t\tthis._pTexture = value;\n\n\t\tthis._pInvalidatePasses();\n\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\n\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\n\t\t} else {\n\t\t\tthis._frameRect = null;\n\t\t\tthis._pHeight = 1;\n\t\t\tthis._pWidth = 1;\n\t\t}\n\n\n\t\tthis._pNotifySizeChanged();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get animateUVs():boolean\n\t{\n\t\treturn this._pAnimateUVs;\n\t}\n\n\tpublic set animateUVs(value:boolean)\n\t{\n\t\tif (this._pAnimateUVs == value)\n\t\t\treturn;\n\n\t\tthis._pAnimateUVs = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\n\t */\n\tpublic get useColorTransform():boolean\n\t{\n\t\treturn this._pUseColorTransform;\n\t}\n\n\tpublic set useColorTransform(value:boolean)\n\t{\n\t\tif (this._pUseColorTransform == value)\n\t\t\treturn;\n\t\tthis._pUseColorTransform = value;\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\n\t * compatibility for constrained mode.\n\t */\n\tpublic get enableLightFallOff():boolean\n\t{\n\t\treturn this._enableLightFallOff;\n\t}\n\n\tpublic set enableLightFallOff(value:boolean)\n\t{\n\t\tif (this._enableLightFallOff == value)\n\t\t\treturn;\n\n\t\tthis._enableLightFallOff = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\n\t * and/or light probes for diffuse reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get diffuseLightSources():number\n\t{\n\t\treturn this._diffuseLightSources;\n\t}\n\n\tpublic set diffuseLightSources(value:number)\n\t{\n\t\tif (this._diffuseLightSources == value)\n\t\t\treturn;\n\n\t\tthis._diffuseLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\n\t * and/or light probes for specular reflections.\n\t *\n\t * @see away3d.materials.LightSources\n\t */\n\tpublic get specularLightSources():number\n\t{\n\t\treturn this._specularLightSources;\n\t}\n\n\tpublic set specularLightSources(value:number)\n\t{\n\t\tif (this._specularLightSources == value)\n\t\t\treturn;\n\n\t\tthis._specularLightSources = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\n\t * could be used by other materials and will not be disposed.\n\t */\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\n\t\tlen = this._renders.length;\n\t\tfor (i = 0; i < len; i++)\n\t\t\tthis._renders[i].dispose();\n\n\t\tthis._renders = new Array<IRender>();\n\t}\n\n\t/**\n\t * Defines whether or not the material should cull triangles facing away from the camera.\n\t */\n\tpublic get bothSides():boolean\n\t{\n\t\treturn this._bothSides;\n\t}\n\n\tpublic set bothSides(value:boolean)\n\t{\n\t\tif (this._bothSides = value)\n\t\t\treturn;\n\n\t\tthis._bothSides = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic get blendMode():string\n\t{\n\t\treturn this._pBlendMode;\n\t}\n\n\tpublic set blendMode(value:string)\n\t{\n\t\tif (this._pBlendMode == value)\n\t\t\treturn;\n\n\t\tthis._pBlendMode = value;\n\n\t\tthis._pInvalidateRender();\n\t}\n\n\t/**\n\t * Indicates whether visible textures (or other pixels) used by this material have\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\n\t * blended alpha edges.\n\t */\n\tpublic get alphaPremultiplied():boolean\n\t{\n\t\treturn this._alphaPremultiplied;\n\t}\n\n\tpublic set alphaPremultiplied(value:boolean)\n\t{\n\t\tif (this._alphaPremultiplied == value)\n\t\t\treturn;\n\n\t\tthis._alphaPremultiplied = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\n\t */\n\tpublic get alphaThreshold():number\n\t{\n\t\treturn this._pAlphaThreshold;\n\t}\n\n\tpublic set alphaThreshold(value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (this._pAlphaThreshold == value)\n\t\t\treturn;\n\n\t\tthis._pAlphaThreshold = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._pWidth;\n\t}\n\n\t//\n\t// MATERIAL MANAGEMENT\n\t//\n\t/**\n\t * Mark an IRenderableOwner as owner of this material.\n\t * Assures we're not using the same material across renderables with different animations, since the\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\n\t *\n\t * @param owner The IRenderableOwner that had this material assigned\n\t *\n\t * @internal\n\t */\n\tpublic iAddOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.push(owner);\n\n\t\tvar animationSet:IAnimationSet;\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\n\n\t\tif (animator)\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\n\n\t\tif (owner.animator) {\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\n\t\t\t} else {\n\t\t\t\tif (this._animationSet != animationSet) {\n\n\t\t\t\t\tthis._animationSet = animationSet;\n\n\t\t\t\t\tthis.invalidateAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * Removes an IRenderableOwner as owner.\n\t * @param owner\n\t *\n\t * @internal\n\t */\n\tpublic iRemoveOwner(owner:IRenderableOwner)\n\t{\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\n\n\t\tif (this._owners.length == 0) {\n\t\t\tthis._animationSet = null;\n\n\t\t\tthis.invalidateAnimation();\n\t\t}\n\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\n\t}\n\n\t/**\n\t * A list of the IRenderableOwners that use this material\n\t *\n\t * @private\n\t */\n\tpublic get iOwners():Array<IRenderableOwner>\n\t{\n\t\treturn this._owners;\n\t}\n\n\t/**\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\n\t *\n\t * @private\n\t */\n\tpublic _pInvalidatePasses()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidatePasses();\n\t}\n\n\tprivate invalidateAnimation()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateAnimation();\n\t}\n\t\n\tpublic _pInvalidateRender()\n\t{\n\t\tvar len:number = this._renders.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._renders[i].invalidateRender();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changed.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis._pInvalidateRender();\n\t}\n\n\tpublic _pNotifySizeChanged()\n\t{\n\t\tif (!this._sizeChanged)\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\n\n\t\tthis.dispatchEvent(this._sizeChanged);\n\t}\n\n\tpublic _iAddRender(render:IRender):IRender\n\t{\n\t\tthis._renders.push(render);\n\n\t\treturn render;\n\t}\n\n\tpublic _iRemoveRender(render:IRender):IRender\n\t{\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\n\n\t\treturn render;\n\t}\n}\n\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\n\n/**\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\n * extended to provide more application-specific dynamic selection of lights.\n *\n * @see StaticLightPicker\n */\nclass LightPickerBase extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset LightPicker]\";\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumCastingPointLights:number = 0;\n\tpublic _pNumCastingDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\n\tpublic _pAllPickedLights:Array<LightBase>;\n\tpublic _pPointLights:Array<PointLight>;\n\tpublic _pCastingPointLights:Array<PointLight>;\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\n\tpublic _pLightProbes:Array<LightProbe>;\n\tpublic _pLightProbeWeights:Array<number>;\n\n\t/**\n\t * Creates a new LightPickerBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Disposes resources used by the light picker.\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn LightPickerBase.assetType;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that will be provided.\n\t */\n\tpublic get numDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The maximum amount of point lights that will be provided.\n\t */\n\tpublic get numPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of directional lights that cast shadows.\n\t */\n\tpublic get numCastingDirectionalLights():number\n\t{\n\t\treturn this._pNumCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of point lights that cast shadows.\n\t */\n\tpublic get numCastingPointLights():number\n\t{\n\t\treturn this._pNumCastingPointLights;\n\t}\n\n\t/**\n\t * The maximum amount of light probes that will be provided.\n\t */\n\tpublic get numLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * The collected point lights to be used for shading.\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights to be used for shading.\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pDirectionalLights;\n\t}\n\n\t/**\n\t * The collected point lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingPointLights():Array<PointLight>\n\t{\n\t\treturn this._pCastingPointLights;\n\t}\n\n\t/**\n\t * The collected directional lights that cast shadows to be used for shading.\n\t */\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._pCastingDirectionalLights;\n\t}\n\n\t/**\n\t * The collected light probes to be used for shading.\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._pLightProbes;\n\t}\n\n\t/**\n\t * The weights for each light probe, defining their influence on the object.\n\t */\n\tpublic get lightProbeWeights():Array<number>\n\t{\n\t\treturn this._pLightProbeWeights;\n\t}\n\n\t/**\n\t * A collection of all the collected lights.\n\t */\n\tpublic get allPickedLights():Array<LightBase>\n\t{\n\t\treturn this._pAllPickedLights;\n\t}\n\n\t/**\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\n\t */\n\tpublic collectLights(renderable:IRenderable)\n\t{\n\t\tthis.updateProbeWeights(renderable);\n\t}\n\n\t/**\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\n\t * @param renderable The renderble for which to calculate the light probes' influence.\n\t */\n\tprivate updateProbeWeights(renderable:IRenderable)\n\t{\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\n\t\tvar lightPos:Vector3D;\n\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\n\t\tvar dx:number, dy:number, dz:number;\n\t\tvar w:number, total:number = 0;\n\t\tvar i:number;\n\n\t\t// calculates weights for probes\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\n\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\n\t\t\tdx = rx - lightPos.x;\n\t\t\tdy = ry - lightPos.y;\n\t\t\tdz = rz - lightPos.z;\n\t\t\t// weight is inversely proportional to square of distance\n\t\t\tw = dx*dx + dy*dy + dz*dz;\n\n\t\t\t// just... huge if at the same spot\n\t\t\tw = w > .00001? 1/w : 50000000;\n\t\t\tthis._pLightProbeWeights[i] = w;\n\t\t\ttotal += w;\n\t\t}\n\n\t\t// normalize\n\t\ttotal = 1/total;\n\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\n\t\t\tthis._pLightProbeWeights[i] *= total;\n\t}\n}\n\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\n/**\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\n * occur.\n */\nclass StaticLightPicker extends LightPickerBase\n{\n\tprivate _lights:Array<any>;\n\tprivate _onCastShadowChangeDelegate:Function;\n\n\t/**\n\t * Creates a new StaticLightPicker object.\n\t * @param lights The lights to be used for shading.\n\t */\n\tconstructor(lights)\n\t{\n\t\tsuper();\n\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\n\n\t\tthis.lights = lights;\n\t}\n\n\t/**\n\t * The lights used for shading.\n\t */\n\tpublic get lights()\n\t{\n\t\treturn this._lights;\n\t}\n\n\tpublic set lights(value:Array<any>)\n\t{\n\t\tvar numPointLights:number = 0;\n\t\tvar numDirectionalLights:number = 0;\n\t\tvar numCastingPointLights:number = 0;\n\t\tvar numCastingDirectionalLights:number = 0;\n\t\tvar numLightProbes:number = 0;\n\t\tvar light:LightBase;\n\n\t\tif (this._lights)\n\t\t\tthis.clearListeners();\n\n\t\tthis._lights = value;\n\t\tthis._pAllPickedLights = value;\n\t\tthis._pPointLights = new Array<PointLight>();\n\t\tthis._pCastingPointLights = new Array<PointLight>();\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\n\t\tthis._pLightProbes = new Array<LightProbe>();\n\n\t\tvar len:number = value.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tlight = value[i];\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\n\t\t\tif (light instanceof PointLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\n\n\t\t\t} else if (light instanceof DirectionalLight) {\n\t\t\t\tif (light.castsShadows)\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\n\t\t\t\telse\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\n\n\t\t\t} else if (light instanceof LightProbe) {\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\n\t\t\treturn;\n\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\n\t\tthis._pNumPointLights = numPointLights;\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\n\t\tthis._pNumLightProbes = numLightProbes;\n\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\n\n\t\t// notify material lights have changed\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\n\t}\n\n\t/**\n\t * Remove configuration change listeners on the lights.\n\t */\n\tprivate clearListeners()\n\t{\n\t\tvar len:number = this._lights.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\n\t}\n\n\t/**\n\t * Notifies the material of a configuration change.\n\t */\n\tprivate onCastShadowChange(event:LightEvent)\n\t{\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\n\t\t// But keep seperated in multipass\n\n\t\tvar light:LightBase = <LightBase> event.target;\n\n\t\tif (light instanceof PointLight)\n\t\t\tthis.updatePointCasting(<PointLight> light);\n\t\telse if (light instanceof DirectionalLight)\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * Called when a directional light's shadow casting configuration changes.\n\t */\n\tprivate updateDirectionalCasting(light:DirectionalLight)\n\t{\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumDirectionalLights;\n\t\t\t++this._pNumCastingDirectionalLights;\n\n\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pCastingDirectionalLights.push(light);\n\n\t\t} else {\n\t\t\t++this._pNumDirectionalLights;\n\t\t\t--this._pNumCastingDirectionalLights;\n\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\n\t\t\tthis._pDirectionalLights.push(light);\n\t\t}\n\t}\n\n\t/**\n\t * Called when a point light's shadow casting configuration changes.\n\t */\n\tprivate updatePointCasting(light:PointLight)\n\t{\n\t\tvar pl:PointLight = <PointLight> light;\n\n\t\tif (light.castsShadows) {\n\t\t\t--this._pNumPointLights;\n\t\t\t++this._pNumCastingPointLights;\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\n\t\t\tthis._pCastingPointLights.push(light);\n\t\t} else {\n\t\t\t++this._pNumPointLights;\n\t\t\t--this._pNumCastingPointLights;\n\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\n\t\t\tthis._pPointLights.push(light);\n\t\t}\n\t}\n}\n\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\n\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\n{\n\tpublic _pScissorRects:Rectangle[];\n\tprivate _pScissorRectsInvalid:boolean = true;\n\tprivate _splitRatios:number[];\n\n\tprivate _numCascades:number /*int*/;\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\n\n\tprivate _texOffsetsX:Array<number>;\n\tprivate _texOffsetsY:Array<number>;\n\n\tprivate _changeDispatcher:EventDispatcher;\n\tprivate _nearPlaneDistances:number[];\n\n\tconstructor(numCascades:number /*uint*/ = 3)\n\t{\n\t\tsuper();\n\n\t\tif (numCascades < 1 || numCascades > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = numCascades;\n\t\tthis._changeDispatcher = new EventDispatcher(this);\n\t\tthis.init();\n\t}\n\n\tpublic getSplitRatio(index:number /*uint*/):number\n\t{\n\t\treturn this._splitRatios[index];\n\t}\n\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\n\t{\n\t\tif (value < 0)\n\t\t\tvalue = 0;\n\t\telse if (value > 1)\n\t\t\tvalue = 1;\n\n\t\tif (index >= this._numCascades)\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\n\n\t\tthis._splitRatios[index] = value;\n\t}\n\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\n\t{\n\t\treturn this._depthCameras[partition].viewProjection;\n\t}\n\n\tprivate init()\n\t{\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\n\n\t\tvar s:number = 1;\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\n\t\t\tthis._splitRatios[i] = s;\n\t\t\ts *= .4;\n\t\t}\n\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\n\t\tthis._depthCameras = new Array<Camera>();\n\n\t\tfor (i = 0; i < this._numCascades; ++i) {\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\n\t\t}\n\t}\n\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\n\t{\n\t\tsuper._pSetDepthMapSize(value);\n\n\t\tthis.invalidateScissorRects();\n\t}\n\n\tprivate invalidateScissorRects()\n\t{\n\t\tthis._pScissorRectsInvalid = true;\n\t}\n\n\tpublic get numCascades():number /*int*/\n\t{\n\t\treturn this._numCascades;\n\t}\n\n\tpublic set numCascades(value:number /*int*/)\n\t{\n\t\tif (value == this._numCascades)\n\t\t\treturn;\n\n\t\tif (value < 1 || value > 4)\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\n\n\t\tthis._numCascades = value;\n\t\tthis.invalidateScissorRects();\n\t\tthis.init();\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tif (this._pScissorRectsInvalid)\n\t\t\tthis.updateScissorRects();\n\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\n\t}\n\n\tprivate updateScissorRects()\n\t{\n\t\tvar half:number = this._pDepthMapSize*.5;\n\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\n\n\t\tthis._pScissorRectsInvalid = false;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar matrix:Matrix3D;\n\t\tvar projection:IProjection = viewCamera.projection;\n\t\tvar projectionNear:number = projection.near;\n\t\tvar projectionRange:number = projection.far - projectionNear;\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\n\t\t\tmatrix = this._depthLenses[i].matrix;\n\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\n\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\n\n\t\t\tthis._depthLenses[i].matrix = matrix;\n\t\t}\n\t}\n\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\n\t{\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\tvar xN:number, yN:number, zN:number;\n\t\tvar xF:number, yF:number, zF:number;\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\n\t\tvar i:number /*uint*/ = 0;\n\n\t\twhile (i < 12) {\n\t\t\txN = this._pLocalFrustum[i];\n\t\t\tyN = this._pLocalFrustum[i + 1];\n\t\t\tzN = this._pLocalFrustum[i + 2];\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\n\t\t\tif (xN < minX)\n\t\t\t\tminX = xN;\n\t\t\tif (xN > maxX)\n\t\t\t\tmaxX = xN;\n\t\t\tif (yN < minY)\n\t\t\t\tminY = yN;\n\t\t\tif (yN > maxY)\n\t\t\t\tmaxY = yN;\n\t\t\tif (zN > maxZ)\n\t\t\t\tmaxZ = zN;\n\t\t\tif (xF < minX)\n\t\t\t\tminX = xF;\n\t\t\tif (xF > maxX)\n\t\t\t\tmaxX = xF;\n\t\t\tif (yF < minY)\n\t\t\t\tminY = yF;\n\t\t\tif (yF > maxY)\n\t\t\t\tmaxY = yF;\n\t\t\tif (zF > maxZ)\n\t\t\t\tmaxZ = zF;\n\t\t\ti += 3;\n\t\t}\n\n\t\tminZ = 1;\n\n\t\tvar w:number = (maxX - minX);\n\t\tvar h:number = (maxY - minY);\n\t\tvar d:number = 1/(maxZ - minZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\n\t\th = Math.floor(h/snap2 + 1)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -minZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t\tmatrix.appendScale(.96, .96, 1);\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\n\t\tmatrix.appendScale(.5, .5, 1);\n\t}\n\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.addEventListener(type, listener);\n\t}\n\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\n\t}\n\n\tpublic dispatchEvent(event:Event)\n\t{\n\t\treturn this._changeDispatcher.dispatchEvent(event);\n\t}\n\n\tpublic hasEventListener(type:string):boolean\n\t{\n\t\treturn this._changeDispatcher.hasEventListener(type);\n\t}\n\n\tget _iNearPlaneDistances():Array<number>\n\t{\n\t\treturn this._nearPlaneDistances;\n\t}\n}\n\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\n\nclass CubeMapShadowMapper extends ShadowMapperBase\n{\n\tprivate _depthCameras:Array<Camera>;\n\tprivate _projections:Array<PerspectiveProjection>;\n\tprivate _needsRender:Array<boolean>;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pDepthMapSize = 512;\n\t\tthis._needsRender = new Array();\n\t\tthis.initCameras();\n\t}\n\n\tprivate initCameras()\n\t{\n\t\tthis._depthCameras = new Array();\n\t\tthis._projections = new Array();\n\n\t\t// posX, negX, posY, negY, posZ, negZ\n\t\tthis.addCamera(0, 90, 0);\n\t\tthis.addCamera(0, -90, 0);\n\t\tthis.addCamera(-90, 0, 0);\n\t\tthis.addCamera(90, 0, 0);\n\t\tthis.addCamera(0, 0, 0);\n\t\tthis.addCamera(0, 180, 0);\n\t}\n\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\n\t{\n\t\tvar cam:Camera = new Camera();\n\t\tcam.rotationX = rotationX;\n\t\tcam.rotationY = rotationY;\n\t\tcam.rotationZ = rotationZ;\n\t\tcam.projection.near = .01;\n\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\n\t\tprojection.fieldOfView = 90;\n\t\tthis._projections.push(projection);\n\t\tcam.projection._iAspectRatio = 1;\n\t\tthis._depthCameras.push(cam);\n\t}\n\n\t//@override\n\tpublic pCreateDepthTexture():SingleCubeTexture\n\t{\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar light:PointLight = <PointLight>(this._pLight);\n\t\tvar maxDistance:number = light._pFallOff;\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\n\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tthis._projections[i].far = maxDistance;\n\t\t\tthis._depthCameras[i].transform.position = pos;\n\t\t\tthis._needsRender[i] = true;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tif (this._needsRender[i]) {\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\n\t\t\t\tthis._pCasterCollector.clear();\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\nclass DirectionalShadowMapper extends ShadowMapperBase\n{\n\tpublic _pOverallDepthCamera:Camera;\n\tpublic _pLocalFrustum:Array<number>;\n\n\tpublic _pLightOffset:number = 10000;\n\tpublic _pMatrix:Matrix3D;\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\n\tpublic _pSnap:number = 64;\n\n\tpublic _pCullPlanes:Array<Plane3D>;\n\tpublic _pMinZ:number;\n\tpublic _pMaxZ:number;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pCullPlanes = [];\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\n\t\tthis._pLocalFrustum = [];\n\t\tthis._pMatrix = new Matrix3D();\n\t}\n\n\tpublic get snap():number\n\t{\n\t\treturn this._pSnap;\n\t}\n\n\tpublic set snap(value:number)\n\t{\n\t\tthis._pSnap = value;\n\t}\n\n\tpublic get lightOffset():number\n\t{\n\t\treturn this._pLightOffset;\n\t}\n\n\tpublic set lightOffset(value:number)\n\t{\n\t\tthis._pLightOffset = value;\n\t}\n\n\t//@arcane\n\tpublic get iDepthProjection():Matrix3D\n\t{\n\t\treturn this._pOverallDepthCamera.viewProjection;\n\t}\n\n\t//@arcane\n\tpublic get depth():number\n\t{\n\t\treturn this._pMaxZ - this._pMinZ;\n\t}\n\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\n\t{\n\t\tif (this._depthMap == depthMap)\n\t\t\treturn;\n\n\t\tsuper.iSetDepthMap(depthMap);\n\n\t\tif (this._depthMap) {\n\t\t\tthis._explicitDepthMap = true;\n\t\t\tthis._pDepthMapSize = depthMap.width;\n\t\t} else {\n\t\t\tthis._explicitDepthMap = false;\n\t\t}\n\t}\n\n\tpublic pCreateDepthTexture():Single2DTexture\n\t{\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\n\t}\n\n\t//@override\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\n\t\tthis._pCasterCollector.clear();\n\t\tscene.traversePartitions(this._pCasterCollector);\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\n\t}\n\n\t//@protected\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\n\t{\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\n\t\tthis._pCullPlanes.length = 4;\n\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tvar dir:Vector3D = light.sceneDirection;\n\t\tvar dirX:number = dir.x;\n\t\tvar dirY:number = dir.y;\n\t\tvar dirZ:number = dir.z;\n\t\tvar j:number = 4;\n\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\n\t\t\t\tthis._pCullPlanes[j++] = plane;\n\t\t}\n\t}\n\n\t//@override\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t\tthis.pUpdateCullPlanes(viewCamera);\n\t}\n\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\n\t{\n\t\tvar raw:Array<number> = new Array<number>();\n\t\tvar dir:Vector3D;\n\t\tvar x:number, y:number, z:number;\n\t\tvar minX:number, minY:number;\n\t\tvar maxX:number, maxY:number;\n\t\tvar i:number;\n\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\n\t\tdir = light.sceneDirection;\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\n\t\tthis._pOverallDepthCamera.x = x;\n\t\tthis._pOverallDepthCamera.y = y;\n\t\tthis._pOverallDepthCamera.z = z;\n\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\n\n\t\tminX = maxX = this._pLocalFrustum[0];\n\t\tminY = maxY = this._pLocalFrustum[1];\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\n\n\t\ti = 3;\n\t\twhile (i < 24) {\n\t\t\tx = this._pLocalFrustum[i];\n\t\t\ty = this._pLocalFrustum[i + 1];\n\t\t\tz = this._pLocalFrustum[i + 2];\n\t\t\tif (x < minX)\n\t\t\t\tminX = x;\n\t\t\tif (x > maxX)\n\t\t\t\tmaxX = x;\n\t\t\tif (y < minY)\n\t\t\t\tminY = y;\n\t\t\tif (y > maxY)\n\t\t\t\tmaxY = y;\n\t\t\tif (z > this._pMaxZ)\n\t\t\t\tthis._pMaxZ = z;\n\t\t\ti += 3;\n\t\t}\n\n\t\tthis._pMinZ = 1;\n\n\t\tvar w:number = maxX - minX;\n\t\tvar h:number = maxY - minY;\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\n\n\t\tif (minX < 0)\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\n\n\t\tif (minY < 0)\n\t\t\tminY -= this._pSnap;\n\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\n\n\t\tvar snap2:number = 2*this._pSnap;\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\n\t\th = Math.floor(h/snap2 + 2)*snap2;\n\n\t\tmaxX = minX + w;\n\t\tmaxY = minY + h;\n\n\t\tw = 1/w;\n\t\th = 1/h;\n\n\t\traw[0] = 2*w;\n\t\traw[5] = 2*h;\n\t\traw[10] = d;\n\t\traw[12] = -(maxX + minX)*w;\n\t\traw[13] = -(maxY + minY)*h;\n\t\traw[14] = -this._pMinZ*d;\n\t\traw[15] = 1;\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\n\n\t\tmatrix.copyRawDataFrom(raw);\n\t}\n}\n\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\n{\n\tprivate _coverageRatio:number;\n\n\tconstructor(coverageRatio:number = .5)\n\t{\n\t\tsuper();\n\n\t\tthis.coverageRatio = coverageRatio;\n\t}\n\n\t/**\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\n\t */\n\tpublic get coverageRatio():number\n\t{\n\t\treturn this._coverageRatio;\n\t}\n\n\tpublic set coverageRatio(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1; else if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tthis._coverageRatio = value;\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\n\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\n\t\t\tvar v:number = corners[i];\n\t\t\tthis._pLocalFrustum[i] = v;\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\n\t\t}\n\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\n\t}\n}\n\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass ShadowMapperBase\n{\n\n\tpublic _pCasterCollector:ShadowCasterCollector;\n\n\tpublic _depthMap:TextureBase;\n\tpublic _pDepthMapSize:number = 2048;\n\tpublic _pLight:LightBase;\n\tpublic _explicitDepthMap:boolean;\n\tprivate _autoUpdateShadows:boolean = true;\n\tpublic _iShadowsInvalid:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\n\t}\n\n\tpublic pCreateCasterCollector()\n\t{\n\t\treturn new ShadowCasterCollector();\n\t}\n\n\tpublic get autoUpdateShadows():boolean\n\t{\n\t\treturn this._autoUpdateShadows;\n\t}\n\n\tpublic set autoUpdateShadows(value:boolean)\n\t{\n\t\tthis._autoUpdateShadows = value;\n\t}\n\n\tpublic updateShadows()\n\t{\n\t\tthis._iShadowsInvalid = true;\n\t}\n\n\tpublic iSetDepthMap(depthMap:TextureBase)\n\t{\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = depthMap;\n\t}\n\n\tpublic get light():LightBase\n\t{\n\t\treturn this._pLight;\n\t}\n\n\tpublic set light(value:LightBase)\n\t{\n\t\tthis._pLight = value;\n\t}\n\n\tpublic get depthMap():TextureBase\n\t{\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\treturn this._depthMap;\n\t}\n\n\tpublic get depthMapSize():number\n\t{\n\t\treturn this._pDepthMapSize;\n\t}\n\n\tpublic set depthMapSize(value:number)\n\t{\n\t\tif (value == this._pDepthMapSize)\n\t\t\treturn;\n\n\t\tthis._pSetDepthMapSize(value);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pCasterCollector = null;\n\n\t\tif (this._depthMap && !this._explicitDepthMap)\n\t\t\tthis._depthMap.dispose();\n\n\t\tthis._depthMap = null;\n\t}\n\n\tpublic pCreateDepthTexture():TextureBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\n\t{\n\t\tthis._iShadowsInvalid = false;\n\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\n\n\t\tif (!this._depthMap)\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\n\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\n\t}\n\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _pSetDepthMapSize(value)\n\t{\n\t\tthis._pDepthMapSize = value;\n\n\t\tif (this._explicitDepthMap) {\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\n\t\t} else if (this._depthMap) {\n\t\t\tthis._depthMap.dispose();\n\t\t\tthis._depthMap = null;\n\t\t}\n\t}\n}\n\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.CameraNode\n */\nclass CameraNode extends EntityNode\n{\n\tpublic static id:string = \"cameraNode\";\n\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, camera, partition);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\n\t}\n}\n\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.DirectionalLightNode\n */\nclass DirectionalLightNode extends EntityNode\n{\n\tpublic static id:string = \"directionalLightNode\";\n\n\tprivate _directionalLight:IEntity;\n\n\t/**\n\t *\n\t * @param directionalLight\n\t */\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, directionalLight, partition);\n\n\t\tthis._directionalLight = directionalLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.EntityNode\n */\nclass EntityNode extends NodeBase\n{\n\tpublic static id:string = \"entityNode\";\n\n\tprivate _pool:EntityNodePool;\n\tpublic _entity:IEntity;\n\tprivate _partition:Partition;\n\tpublic _bounds:BoundingVolumeBase;\n\tpublic _iUpdateQueueNext:EntityNode;\n\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\n\t{\n\t\tsuper();\n\t\tthis._pool = pool;\n\t\tthis._entity = entity;\n\t\tthis._partition = partition;\n\t\tthis._iNumEntities = 1;\n\n\t\tthis.updateBounds();\n\n\t\tthis.debugVisible = this._entity.debugVisible;\n\t}\n\n\tpublic get entity():IEntity\n\t{\n\t\treturn this._entity;\n\t}\n\n\tpublic removeFromParent():void\n\t{\n\t\tif (this._iParent)\n\t\t\tthis._iParent.iRemoveNode(this);\n\n\t\tthis._iParent = null;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn this.entity.castsShadows;\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this)) {\n\t\t\ttraverser.applyEntity(this._entity);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\tif (!this._entity._iIsVisible())\n\t\t\treturn false;\n\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\n\n\t\tif (!pickingCollisionVO.localNormal)\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\n\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\n\n\t\tif (rayEntryDistance < 0)\n\t\t\treturn false;\n\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\n\t\tpickingCollisionVO.rayPosition = rayPosition;\n\t\tpickingCollisionVO.rayDirection = rayDirection;\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\treturn this._bounds.boundsPrimitive;\n\t}\n\n\tpublic invalidatePartition()\n\t{\n\t\tthis._bounds.invalidate();\n\n\t\tthis._partition.iMarkForUpdate(this);\n\t}\n\n\tpublic updateBounds()\n\t{\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\n\t\t\tthis._bounds = new NullBounds();\n\n\t\tthis.updateDebugEntity();\n\t}\n}\n\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.LightProbeNode\n */\nclass LightProbeNode extends EntityNode\n{\n\tpublic static id:string = \"lightProbeNode\";\n\n\tprivate _lightProbe:IEntity;\n\n\t/**\n\t *\n\t * @param lightProbe\n\t */\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, lightProbe, partition);\n\n\t\tthis._lightProbe = lightProbe;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.partition.NodeBase\n */\nclass NodeBase\n{\n\tprivate _debugChildrenVisible:boolean;\n\tprivate _explicitDebugVisible:boolean;\n\tpublic _pImplicitDebugVisible:boolean;\n\tpublic _iParent:NodeBase;\n\tpublic _pChildNodes:Array<NodeBase>;\n\tpublic _pNumChildNodes:number = 0;\n\n\tpublic _pDebugEntity:IEntity;\n\n\tpublic _iNumEntities:number = 0;\n\tpublic _iCollectionMark:number;// = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get debugVisible():boolean\n\t{\n\t\treturn this._explicitDebugVisible;\n\t}\n\n\tpublic set debugVisible(value:boolean)\n\t{\n\t\tif (this._explicitDebugVisible == value)\n\t\t\treturn;\n\n\t\tthis._explicitDebugVisible = value;\n\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\n\n\t}\n\n\tpublic get debugChildrenVisible():boolean\n\t{\n\t\treturn this._debugChildrenVisible;\n\t}\n\n\tpublic set debugChildrenVisible(value:boolean)\n\t{\n\t\tif (this._debugChildrenVisible == value)\n\t\t\treturn;\n\n\t\tthis._debugChildrenVisible = value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get parent():NodeBase\n\t{\n\t\treturn this._iParent;\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic get _pNumEntities():number\n\t{\n\t\treturn this._iNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pChildNodes = new Array<NodeBase>();\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t * @internal\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param rayPosition\n\t * @param rayDirection\n\t * @returns {boolean}\n\t */\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t * @returns {away.partition.NodeBase}\n\t */\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\n\t{\n\t\treturn this;\n\t}\n\n\t/**\n\t *\n\t * @param traverser\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\n\t\t\treturn;\n\n\t\tif (traverser.enterNode(this)) {\n\t\t\tvar i:number = 0;\n\n\t\t\twhile (i < this._pNumChildNodes)\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\n\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @protected\n\t */\n\tpublic applyDebugEntity(traverser:CollectorBase)\n\t{\n\t\tif (this._pDebugEntity == null)\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\n\t\ttraverser.applyEntity(this._pDebugEntity);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iAddNode(node:NodeBase)\n\t{\n\t\tnode._iParent = this;\n\t\tthis._iNumEntities += node._pNumEntities;\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\n\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._iNumEntities += numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @internal\n\t */\n\tpublic iRemoveNode(node:NodeBase)\n\t{\n\t\tvar index:number = this._pChildNodes.indexOf(node);\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\n\t\tthis._pChildNodes.pop();\n\n\t\tnode._iUpdateImplicitDebugVisible(false);\n\n\t\tvar numEntities:number = node._pNumEntities;\n\t\tnode = this;\n\n\t\tdo {\n\t\t\tnode._pNumEntities -= numEntities;\n\t\t} while ((node = node._iParent) != null);\n\t}\n\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\n\t{\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\n\t\t\treturn;\n\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\n\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\n\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t} else {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = null;\n\t\t}\n\t\t\n\t}\n\n\tpublic updateDebugEntity()\n\t{\n\t\tif (this._pImplicitDebugVisible) {\n\t\t\t//this._pDebugEntity.dispose();\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\n\t\t}\n\t}\n\n\tpublic _pCreateDebugEntity():IEntity\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = NodeBase;",
    "/**\n * @class away.partition.NullNode\n */\nclass NullNode\n{\n\tconstructor()\n\t{\n\t}\n}\n\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.partition.Partition\n */\nclass Partition\n{\n\tprivate _cameraNodePool:EntityNodePool;\n\tprivate _directionalLightNodePool:EntityNodePool;\n\tprivate _entityNodePool:EntityNodePool;\n\tprivate _lightProbeNodePool:EntityNodePool;\n\tprivate _pointLightNodePool:EntityNodePool;\n\tprivate _skyboxNodePool:EntityNodePool;\n\n\tpublic _rootNode:NodeBase;\n\tprivate _updatesMade:Boolean = false;\n\tprivate _updateQueue:EntityNode;\n\n\tconstructor(rootNode:NodeBase)\n\t{\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\n\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\n\t}\n\n\tpublic get rootNode():NodeBase\n\t{\n\t\treturn this._rootNode;\n\t}\n\n\tpublic traverse(traverser:CollectorBase)\n\t{\n\t\tif (this._updatesMade) {\n\t\t\tvar t:EntityNode = this._updateQueue;\n\t\t\twhile (t) {\n\t\t\t\t//required for controllers with autoUpdate set to true and queued events\n\t\t\t\tt.entity._iInternalUpdate();\n\t\t\t\tt = t._iUpdateQueueNext;\n\t\t\t}\n\t\t\tthis.updateEntities();\n\t\t}\n\n\n\t\tthis._rootNode.acceptTraverser(traverser);\n\t}\n\n\tpublic iMarkForUpdate(node:EntityNode)\n\t{\n\t\tvar t:EntityNode = this._updateQueue;\n\n\t\twhile (t) {\n\t\t\tif (node == t)\n\t\t\t\treturn;\n\n\t\t\tt = t._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = this._updateQueue;\n\n\t\tthis._updateQueue = node;\n\t\tthis._updatesMade = true;\n\t}\n\n\tpublic iRemoveEntity(node:EntityNode)\n\t{\n\t\tvar t:EntityNode;\n\n\t\tnode.removeFromParent();\n\n\t\tif (node == this._updateQueue) {\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\n\t\t} else {\n\t\t\tt = this._updateQueue;\n\t\t\twhile (t && t._iUpdateQueueNext != node)\n\t\t\t\tt = t._iUpdateQueueNext;\n\n\t\t\tif (t)\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\n\t\t}\n\n\t\tnode._iUpdateQueueNext = null;\n\n\t\tif (!this._updateQueue)\n\t\t\tthis._updatesMade = false;\n\t}\n\n\tprivate updateEntities()\n\t{\n\t\tvar node:EntityNode = this._updateQueue;\n\t\tvar targetNode:NodeBase;\n\t\tvar t:EntityNode;\n\t\tthis._updateQueue = null;\n\t\tthis._updatesMade = false;\n\n\t\tdo {\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\n\n\t\t\tif (node.parent != targetNode) {\n\t\t\t\tif (node)\n\t\t\t\t\tnode.removeFromParent();\n\n\t\t\t\ttargetNode.iAddNode(node);\n\t\t\t}\n\n\t\t\tt = node._iUpdateQueueNext;\n\t\t\tnode._iUpdateQueueNext = null;\n\n\t\t} while ((node = t) != null);\n\t}\n\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterCamera(camera:Camera)\n\t{\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterEntity(entity:IEntity)\n\t{\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iRegisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterCamera(camera:Camera)\n\t{\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\n\t{\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterEntity(entity:IEntity)\n\t{\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\n\t{\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\n\t{\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _iUnregisterSkybox(skybox:Skybox)\n\t{\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\n\t}\n}\n\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * @class away.partition.PointLightNode\n */\nclass PointLightNode extends EntityNode\n{\n\tpublic static id:string = \"pointLightNode\";\n\n\tprivate _pointLight:IEntity;\n\n\t/**\n\t *\n\t * @param pointLight\n\t */\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, pointLight, partition);\n\n\t\tthis._pointLight = pointLight;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(this))\n\t\t\ttraverser.applyPointLight(this._pointLight);\n\t}\n\n\t/**\n\t *\n\t * @returns {boolean}\n\t */\n\tpublic isCastingShadow():boolean\n\t{\n\t\treturn false;\n\t}\n}\n\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\n\n/**\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\n *\n * @class away.partition.SkyboxNode\n */\nclass SkyboxNode extends EntityNode\n{\n\tpublic static id:string = \"skyboxNode\";\n\n\tprivate _skyBox:IEntity;\n\n\t/**\n\t * Creates a new SkyboxNode object.\n\t * @param skyBox The Skybox to be contained in the node.\n\t */\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\n\t{\n\t\tsuper(pool, skyBox, partition);\n\n\t\tthis._skyBox = skyBox;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic acceptTraverser(traverser:CollectorBase)\n\t{\n\t\tif (traverser.enterNode(<NodeBase> this))\n\t\t\ttraverser.applySkybox(this._skyBox);\n\t}\n\n\t/**\n\t *\n\t * @param planes\n\t * @param numPlanes\n\t * @returns {boolean}\n\t */\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\n\t{\n\t\tif (!this._skyBox._iIsVisible)\n\t\t\treturn false;\n\n\t\t//a skybox is always in view unless its visibility is set to false\n\t\treturn true;\n\t}\n}\n\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\n\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\n\n/**\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\n *\n * @see away.base.DisplayObject#pickingCollider\n * @see away.pick.RaycastPicker\n *\n * @class away.pick.JSPickingCollider\n */\nclass JSPickingCollider implements IPickingCollider\n{\n\tprivate _findClosestCollision:boolean;\n\n\t/**\n\t * Creates a new <code>JSPickingCollider</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._findClosestCollision = findClosestCollision;\n\t}\n\n\n\t/**\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\n\t *\n\t * @param billboard The billboard instance to be tested.\n\t * @param pickingCollisionVO The collision object used to store the collision results\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\n\t * @param findClosest\n\t */\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\n\t{\n\t\tpickingCollisionVO.renderableOwner = null;\n\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t//\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\n\t\t//\n\t\t//\treturn true;\n\t\t//}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar t:number;\n\t\tvar i0:number, i1:number, i2:number;\n\t\tvar rx:number, ry:number, rz:number;\n\t\tvar nx:number, ny:number, nz:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar coeff:number, u:number, v:number, w:number;\n\t\tvar p0x:number, p0y:number, p0z:number;\n\t\tvar p1x:number, p1y:number, p1z:number;\n\t\tvar p2x:number, p2y:number, p2z:number;\n\t\tvar s0x:number, s0y:number, s0z:number;\n\t\tvar s1x:number, s1y:number, s1z:number;\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\n\t\tvar collisionTriangleIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\n\t\t\t// evaluate triangle indices\n\t\t\ti0 = indices[index]*posDim;\n\t\t\ti1 = indices[index + 1]*posDim;\n\t\t\ti2 = indices[index + 2]*posDim;\n\n\t\t\t// evaluate triangle positions\n\t\t\tp0x = positions[i0];\n\t\t\tp0y = positions[i0 + 1];\n\t\t\tp0z = positions[i0 + 2];\n\t\t\tp1x = positions[i1];\n\t\t\tp1y = positions[i1 + 1];\n\t\t\tp1z = positions[i1 + 2];\n\t\t\tp2x = positions[i2];\n\t\t\tp2y = positions[i2 + 1];\n\t\t\tp2z = positions[i2 + 2];\n\n\t\t\t// evaluate sides and triangle normal\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\n\t\t\ts0y = p1y - p0y;\n\t\t\ts0z = p1z - p0z;\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\n\t\t\ts1y = p2y - p0y;\n\t\t\ts1z = p2z - p0z;\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\n\t\t\tny = s0z*s1x - s0x*s1z;\n\t\t\tnz = s0x*s1y - s0y*s1x;\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\n\t\t\tnx *= nl;\n\t\t\tny *= nl;\n\t\t\tnz *= nl;\n\n\t\t\t// -- plane intersection test --\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\n\t\t\t\t// find collision t\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\n\t\t\t\tt = disToPlane/nDotV;\n\t\t\t\t// find collision point\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\n\t\t\t\trx = cx - p0x;\n\t\t\t\try = cy - p0y;\n\t\t\t\trz = cz - p0z;\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\n\t\t\t\tif (v < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (w < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tu = 1 - v - w;\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\n\t\t\t\t\tshortestCollisionDistance = t;\n\t\t\t\t\tcollisionTriangleIndex = index/3;\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\t\tpickingCollisionVO.index = index;\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (collisionTriangleIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\n\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\n\t\t//this will only work while all points lie on the x/y plane\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\n\n\t\tvar result:Vector3D = new Vector3D();\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\n\t\trayDirection.scaleBy(t);\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\n\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\n\t\tvar collisionCurveIndex:number = -1;\n\t\tvar bothSides:boolean = material.bothSides;\n\n\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\n\t\tvar numIndices:number = indices.length;\n\n\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\n\t\t{\n\t\t\tvar id0:number = indices[index];\n\t\t\tvar id1:number = indices[index + 1] * posDim;\n\t\t\tvar id2:number = indices[index + 2] * posDim;\n\n\t\t\tvar ax:number = positions[id0 * posDim];\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\n\t\t\tvar bx:number = positions[id1];\n\t\t\tvar by:number = positions[id1 + 1];\n\t\t\tvar cx:number = positions[id2];\n\t\t\tvar cy:number = positions[id2 + 1];\n\n\t\t\tvar curvex:number = curves[id0 * curveDim];\n\t\t\tvar az:number = positions[id0 * posDim + 2];\n\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\n\n\t\t\t//from a to p\n\t\t\tvar dx:number = ax - p.x;\n\t\t\tvar dy:number = ay - p.y;\n\n\t\t\t//edge normal (a-b)\n\t\t\tvar nx:number = by - ay;\n\t\t\tvar ny:number = -(bx - ax);\n\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\n\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot a\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = bx - p.x;\n\t\t\tdy = by - p.y;\n\t\t\tnx = cy - by;\n\t\t\tny = -(cx - bx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot b\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\tdx = cx - p.x;\n\t\t\tdy = cy - p.y;\n\t\t\tnx = ay - cy;\n\t\t\tny = -(ax - cx);\n\n\t\t\tdot = (dx * nx) + (dy * ny);\n\t\t\t//console.log(\"dot c\",dot);\n\t\t\tif (dot > 0)\n\t\t\t\tcontinue;\n\n\t\t\t//check if not solid\n\t\t\tif (curvex != 2) {\n\n\t\t\t\tvar v0x:number = bx - ax;\n\t\t\t\tvar v0y:number = by - ay;\n\t\t\t\tvar v1x:number = cx - ax;\n\t\t\t\tvar v1y:number = cy - ay;\n\t\t\t\tvar v2x:number = p.x - ax;\n\t\t\t\tvar v2y:number = p.y - ay;\n\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\n\t\t\t\tvar u:number = 1 - v - w;\n\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\n\n\t\t\t\tvar d:number = uu * uu - vv;\n\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\n\t\t\tif (distance < shortestCollisionDistance) {\n\t\t\t\tshortestCollisionDistance = distance;\n\t\t\t\tcollisionCurveIndex = index/3;\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\n\t\t\t\tpickingCollisionVO.localPosition = p;\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\n\t\t\t\tpickingCollisionVO.index = index;\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\n\n\t\t\t\t// if not looking for best hit, first found will do...\n\t\t\t\tif (!this._findClosestCollision)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (collisionCurveIndex >= 0)\n\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\n\t *\n\t * @param triangleSubGeometry\n\t * @param material\n\t * @param pickingCollisionVO\n\t * @param shortestCollisionDistance\n\t * @returns {boolean}\n\t */\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\n\t{\n\t\treturn false;\n\t}\n\n\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\n\t{\n\t\tvar uv:Point = new Point();\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\n\t\treturn uv;\n\t}\n}\n\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\n\n/**\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\n *\n * @see away.base.DisplayObject#pickingCollisionVO\n * @see away.core.pick.IPickingCollider\n *\n * @class away.pick.PickingCollisionVO\n */\nclass PickingCollisionVO\n{\n\t/**\n\t * The display object to which this collision object belongs.\n\t */\n\tpublic displayObject:DisplayObject;\n\n\t/**\n\t * The local position of the collision on the entity's surface.\n\t */\n\tpublic localPosition:Vector3D;\n\n\t/**\n\t * The local normal vector at the position of the collision.\n\t */\n\tpublic localNormal:Vector3D;\n\n\t/**\n\t * The uv coordinate at the position of the collision.\n\t */\n\tpublic uv:Point;\n\n\t/**\n\t * The index of the face where the event took pl ace.\n\t */\n\tpublic index:number;\n\n\t/**\n\t * The index of the subGeometry where the event took place.\n\t */\n//\t\tpublic subGeometryIndex:number;\n\n\t/**\n\t * The starting position of the colliding ray in local coordinates.\n\t */\n\tpublic localRayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in local coordinates.\n\t */\n\tpublic localRayDirection:Vector3D;\n\n\t/**\n\t * The starting position of the colliding ray in scene coordinates.\n\t */\n\tpublic rayPosition:Vector3D;\n\n\t/**\n\t * The direction of the colliding ray in scene coordinates.\n\t */\n\tpublic rayDirection:Vector3D;\n\n\t/**\n\t * Determines if the ray position is contained within the entity bounds.\n\t *\n\t * @see away3d.entities.Entity#bounds\n\t */\n\tpublic rayOriginIsInsideBounds:boolean;\n\n\t/**\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\n\t */\n\tpublic rayEntryDistance:number;\n\n\t/**\n\t * The material ownwer associated with a collision.\n\t */\n\tpublic renderableOwner:IRenderableOwner;\n\n\t/**\n\t * Creates a new <code>PickingCollisionVO</code> object.\n\t *\n\t * @param entity The entity to which this collision object belongs.\n\t */\n\tconstructor(displayObject:DisplayObject)\n\t{\n\t\tthis.displayObject = displayObject;\n\t}\n\n}\n\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * Picks a 3d object from a view or scene by 3D raycast calculations.\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\n *\n * @class away.pick.RaycastPicker\n */\nclass RaycastPicker implements IPicker\n{\n\tprivate _findClosestCollision:boolean;\n\tprivate _raycastCollector:RaycastCollector;\n\tprivate _ignoredEntities = [];\n\tprivate _onlyMouseEnabled:boolean = true;\n\n\tprivate _entities:Array<IEntity>;\n\tprivate _numEntities:number = 0;\n\tprivate _hasCollisions:boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get onlyMouseEnabled():boolean\n\t{\n\t\treturn this._onlyMouseEnabled;\n\t}\n\n\tpublic set onlyMouseEnabled(value:boolean)\n\t{\n\t\tthis._onlyMouseEnabled = value;\n\t}\n\n\t/**\n\t * Creates a new <code>RaycastPicker</code> object.\n\t *\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\n\t * or simply returns the first collision encountered. Defaults to false.\n\t */\n\tconstructor(findClosestCollision:boolean = false)\n\t{\n\t\tthis._raycastCollector = new RaycastCollector();\n\n\t\tthis._findClosestCollision = findClosestCollision;\n\t\tthis._entities = new Array<IEntity>();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\n\t{\n\t\t//update ray\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\n\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\n\t{\n\t\t//clear collector\n\t\tthis._raycastCollector.clear();\n\n\t\t//setup ray vectors\n\t\tthis._raycastCollector.rayPosition = rayPosition;\n\t\tthis._raycastCollector.rayDirection = rayDirection;\n\n\t\t// collect entities to test\n\t\tscene.traversePartitions(this._raycastCollector);\n\n\t\tthis._numEntities = 0;\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\n\t\tvar entity:IEntity;\n\n\t\twhile (node) {\n\t\t\tif (!this.isIgnored(entity = node.entity))\n\t\t\t\tthis._entities[this._numEntities++] = entity;\n\n\t\t\tnode = node.next;\n\t\t}\n\n\t\t//early out if no collisions detected\n\t\tif (!this._numEntities)\n\t\t\treturn null;\n\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n\t}\n\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\n//\t\t{\n//\t\t\tthis._numEntities = 0;\n//\n//\t\t\tvar entity:IEntity;\n//\t\t\tvar l:number = entities.length;\n//\n//\t\t\tfor (var c:number = 0; c < l; c++) {\n//\t\t\t\tentity = entities[c];\n//\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\n//\t\t\t}\n//\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\n//\t\t}\n\n\tpublic setIgnoreList(entities)\n\t{\n\t\tthis._ignoredEntities = entities;\n\t}\n\n\tprivate isIgnored(entity:IEntity):boolean\n\t{\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\n\t\t\treturn true;\n\n\t\tvar len:number = this._ignoredEntities.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tif (this._ignoredEntities[i] == entity)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\n\t{\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\n\t}\n\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\n\t{\n\t\t// trim before sorting\n\t\tthis._entities.length = this._numEntities;\n\n\t\t// Sort entities from closest to furthest.\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\n\n\t\t// ---------------------------------------------------------------------\n\t\t// Evaluate triangle collisions when needed.\n\t\t// Replaces collision data provided by bounds collider with more precise data.\n\t\t// ---------------------------------------------------------------------\n\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\n\t\tvar bestCollisionVO:PickingCollisionVO;\n\t\tvar pickingCollisionVO:PickingCollisionVO;\n\t\tvar entity:IEntity;\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._numEntities; ++i) {\n\t\t\tentity = this._entities[i];\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\n\t\t\tif (entity.pickingCollider) {\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\n\t\t\t\t\tif (!this._findClosestCollision) {\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\n\t\t\t\t// if it has been established that there is NO triangle collider to test\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\n\t\t\t\t\treturn pickingCollisionVO;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestCollisionVO;\n\t}\n\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\n\t{\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\n\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO\n\t}\n}\n\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\n\n/**\n * @class away.pool.EntityListItemPool\n */\nclass EntityListItemPool\n{\n\tprivate _pool:Array<EntityListItem>;\n\tprivate _index:number = 0;\n\tprivate _poolSize:number = 0;\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tthis._pool = new Array<EntityListItem>();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getItem():EntityListItem\n\t{\n\t\tvar item:EntityListItem;\n\t\tif (this._index == this._poolSize) {\n\t\t\titem = new EntityListItem();\n\t\t\tthis._pool[this._index++] = item;\n\t\t\t++this._poolSize;\n\t\t} else {\n\t\t\titem = this._pool[this._index++];\n\t\t}\n\t\treturn item;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic freeAll()\n\t{\n\t\tthis._index = 0;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.length = 0;\n\t}\n}\n\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.pool.EntityListItem\n */\nclass EntityListItem\n{\n\t/**\n\t *\n\t */\n\tpublic entity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic next:EntityListItem;\n}\n\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\n\n/**\n * @class away.pool.EntityNodePool\n */\nclass EntityNodePool\n{\n\tprivate _entityNodePool:Object = new Object();\n\tprivate _entityNodeClass:IEntityNodeClass;\n\tprivate _partition:Partition;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entityNodeClass\n\t */\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\n\t{\n\t\tthis._entityNodeClass = entityNodeClass;\n\t\tthis._partition = partition;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t * @returns EntityNode\n\t */\n\tpublic getItem(entity:IEntity):EntityNode\n\t{\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param entity\n\t */\n\tpublic disposeItem(entity:IEntity):EntityNode\n\t{\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\n\n\t\tif (entityNode) {\n\t\t\tentity._iRemoveEntityNode(entityNode);\n\n\t\t\tthis._entityNodePool[entity.id] = null;\n\t\t}\n\n\t\treturn entityNode;\n\t}\n}\n\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\n\n/**\n * @class away.pool.SubMeshPool\n */\nclass SubMeshPool\n{\n\tprivate static classPool:Object = new Object();\n\n\t/**\n\t *\n\t * @param subMeshClass\n\t */\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\n\t{\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\n\t}\n\n\t/**\n\t *\n\t * @param subGeometry\n\t */\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\n\t{\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\n\t}\n\n\tprivate static main = SubMeshPool.addDefaults();\n\n\tprivate static addDefaults()\n\t{\n\t\tSubMeshPool.registerClass(LineSubMesh);\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\n\t\tSubMeshPool.registerClass(CurveSubMesh);\n\t}\n}\n\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\n\n/**\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\n */\nclass PrefabBase extends AssetBase\n{\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\n\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\n\n\t/**\n\t * Creates a new PrefabBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns a display object generated from this prefab\n\t */\n\tpublic getNewObject():DisplayObject\n\t{\n\t\tvar object:DisplayObject = this._pCreateObject();\n\n\t\tthis._pObjects.push(object);\n\n\t\treturn object;\n\t}\n\n//\t\tpublic getNewBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\n//\n//\t\t\tthis._pBatchObjects.push(object);\n//\n//\t\t\treturn object;\n//\t\t}\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\t// To be overridden when necessary\n\t}\n}\n\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Capsule primitive mesh.\n */\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _height:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the capsule.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the capsule.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Capsule object.\n\t * @param radius The radius of the capsule.\n\t * @param height The height of the capsule.\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._height = height;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar triIndex:number = 0;\n\t\tvar index:number = 0;\n\t\tvar startIndex:number;\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tstartIndex = index;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// vertex\n\t\t\t\t\t\tpositions[index] = x;\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\n\t\t\t\t\t\t// normal\n\t\t\t\t\t\tnormals[index] = x*normLen;\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\n\t\t\t\t\t\t// tangent\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[index + 1] = t1;\n\t\t\t\t\t\ttangents[index + 2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = b;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = a;\n\t\t\t\t\t\t\tindices[triIndex++] = c;\n\t\t\t\t\t\t\tindices[triIndex++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV Cone primitive mesh.\n */\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the bottom end of the cone.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cone object.\n\t * @param radius The radius of the bottom end of the cone\n\t * @param height The height of the cone\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\n\t}\n}\n\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cube primitive prefab.\n */\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _depth:number;\n\tprivate _tile6:boolean;\n\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _segmentsD:number;\n\n\t/**\n\t * Creates a new Cube object.\n\t * @param width The size of the cube along its X-axis.\n\t * @param height The size of the cube along its Y-axis.\n\t * @param depth The size of the cube along its Z-axis.\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\n\t */\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._depth = depth;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._segmentsD = segmentsD;\n\t\tthis._tile6 = tile6;\n\t}\n\n\t/**\n\t * The size of the cube along its X-axis.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Y-axis.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The size of the cube along its Z-axis.\n\t */\n\tpublic get depth():number\n\t{\n\t\treturn this._depth;\n\t}\n\n\tpublic set depth(value:number)\n\t{\n\t\tthis._depth = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\n\t * several shared edges (between the top, front, left and right faces) which simplifies\n\t * texture painting.\n\t */\n\tpublic get tile6():boolean\n\t{\n\t\treturn this._tile6;\n\t}\n\n\tpublic set tile6(value:boolean)\n\t{\n\t\tthis._tile6 = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\n\t */\n\tpublic get segmentsD():number\n\t{\n\t\treturn this._segmentsD;\n\t}\n\n\tpublic set segmentsD(value:number)\n\t{\n\t\tthis._segmentsD = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\t\t\n\t\tvar tl:number, tr:number, bl:number, br:number;\n\t\tvar i:number, j:number, inc:number = 0;\n\n\t\tvar vidx:number, fidx:number; // indices\n\t\tvar hw:number, hh:number, hd:number; // halves\n\t\tvar dw:number, dh:number, dd:number; // deltas\n\n\t\tvar outer_pos:number;\n\t\tvar numIndices:number;\n\t\tvar numVertices:number;\n\n\t\t// half cube dimensions\n\t\thw = this._width/2;\n\t\thh = this._height/2;\n\t\thd = this._depth/2;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// Segment dimensions\n\t\t\tdw = this._width/this._segmentsW;\n\t\t\tdh = this._height/this._segmentsH;\n\t\t\tdd = this._depth/this._segmentsD;\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// front\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = -hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// back\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx + 2] = hd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\tnormals[vidx + 2] = 1;\n\t\t\t\t\ttangents[vidx] = -1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\touter_pos = -hw + i*dw;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\t// top\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// bottom\n\t\t\t\t\tpositions[vidx] = outer_pos;\n\t\t\t\t\tpositions[vidx + 1] = -hh;\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = -1;\n\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\n\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\touter_pos = hd - i*dd;\n\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\t// left\n\t\t\t\t\tpositions[vidx] = -hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = -1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = -1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// right\n\t\t\t\t\tpositions[vidx] = hw;\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\n\t\t\t\t\tnormals[vidx] = 1;\n\t\t\t\t\tnormals[vidx+1] = 0;\n\t\t\t\t\tnormals[vidx+2] = 0;\n\t\t\t\t\ttangents[vidx] = 0;\n\t\t\t\t\ttangents[vidx+1] = 0;\n\t\t\t\t\ttangents[vidx+2] = 1;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i && j) {\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\n\t\t\t\t\t\tbl = tl + 2;\n\t\t\t\t\t\tbr = tr + 2;\n\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = bl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tl;\n\t\t\t\t\t\tindices[fidx++] = br;\n\t\t\t\t\t\tindices[fidx++] = tr;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = br + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\t\t\t\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\t//front/back face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t//left/right face\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = hw\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\t//top/bottom face\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\n\t\t\t\tpositions[vidx++] = -hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = -hd;\n\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\n\t\t\t\tpositions[vidx++] = hh;\n\t\t\t\tpositions[vidx++] = hd;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number, index:number;\n\t\tvar uvs:Float32Array;\n\n\t\tvar u_tile_dim:number, v_tile_dim:number;\n\t\tvar u_tile_step:number, v_tile_step:number;\n\t\tvar tl0u:number, tl0v:number;\n\t\tvar tl1u:number, tl1v:number;\n\t\tvar du:number, dv:number;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tif (this._tile6) {\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\n\t\t\t} else {\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\n\t\t\t\tu_tile_step = v_tile_step = 0;\n\t\t\t}\n\n\t\t\t// Create planes two and two, the same way that they were\n\t\t\t// constructed in the buildGeometry() function. First calculate\n\t\t\t// the top-left UV coordinate for both planes, and then loop\n\t\t\t// over the points, calculating the UVs from these numbers.\n\n\t\t\t// When tile6 is true, the layout is as follows:\n\t\t\t//       .-----.-----.-----. (1,1)\n\t\t\t//       | Bot |  T  | Bak |\n\t\t\t//       |-----+-----+-----|\n\t\t\t//       |  L  |  F  |  R  |\n\t\t\t// (0,0)'-----'-----'-----'\n\n\t\t\tindex = 0;\n\n\t\t\t// FRONT / BACK\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TOP / BOTTOM\n\t\t\ttl0u = 1*u_tile_step;\n\t\t\ttl0v = 0*v_tile_step;\n\t\t\ttl1u = 0*u_tile_step;\n\t\t\ttl1v = 0*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsW;\n\t\t\tdv = v_tile_dim/this._segmentsD;\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// LEFT / RIGHT\n\t\t\ttl0u = 0*u_tile_step;\n\t\t\ttl0v = 1*v_tile_step;\n\t\t\ttl1u = 2*u_tile_step;\n\t\t\ttl1v = 1*v_tile_step;\n\t\t\tdu = u_tile_dim/this._segmentsD;\n\t\t\tdv = v_tile_dim/this._segmentsH;\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\n\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Cylinder primitive mesh.\n */\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tpublic _pBottomRadius:number;\n\tpublic _pSegmentsW:number;\n\tpublic _pSegmentsH:number;\n\n\tprivate _topRadius:number;\n\tprivate _height:number;\n\n\tprivate _topClosed:boolean;\n\tprivate _bottomClosed:boolean;\n\tprivate _surfaceClosed:boolean;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get topRadius():number\n\t{\n\t\treturn this._topRadius;\n\t}\n\n\tpublic set topRadius(value:number)\n\t{\n\t\tthis._topRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the bottom end of the cylinder.\n\t */\n\tpublic get bottomRadius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set bottomRadius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the top end of the cylinder.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\tpublic setSegmentsW(value:number)\n\t{\n\t\tthis._pSegmentsW = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis.setSegmentsH(value)\n\n\t}\n\n\tpublic setSegmentsH(value:number)\n\t{\n\t\tthis._pSegmentsH = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * Defines whether the top end of the cylinder is closed (true) or open.\n\t */\n\tpublic get topClosed():boolean\n\t{\n\t\treturn this._topClosed;\n\t}\n\n\tpublic set topClosed(value:boolean)\n\t{\n\t\tthis._topClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\n\t */\n\tpublic get bottomClosed():boolean\n\t{\n\t\treturn this._bottomClosed;\n\t}\n\n\tpublic set bottomClosed(value:boolean)\n\t{\n\t\tthis._bottomClosed = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Cylinder object.\n\t * @param topRadius The radius of the top end of the cylinder.\n\t * @param bottomRadius The radius of the bottom end of the cylinder\n\t * @param height The radius of the bottom end of the cylinder\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._topRadius = topRadius;\n\t\tthis._pBottomRadius = bottomRadius;\n\t\tthis._height = height;\n\t\tthis._pSegmentsW = segmentsW;\n\t\tthis._pSegmentsH = segmentsH;\n\t\tthis._topClosed = topClosed;\n\t\tthis._bottomClosed = bottomClosed;\n\t\tthis._surfaceClosed = surfaceClosed;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar z:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\n\t\tvar radius:number;\n\t\tvar revolutionAngle:number;\n\n\t\tvar dr:number;\n\t\tvar latNormElev:number;\n\t\tvar latNormBase:number;\n\t\tvar numIndices:number = 0;\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar startIndex:number = 0;\n\t\tvar nextVertexIndex:number = 0;\n\t\tvar centerVertexIndex:number = 0;\n\n\t\tvar t1:number;\n\t\tvar t2:number;\n\n\t\t// reset utility variables\n\t\tthis._numVertices = 0;\n\n\t\t// evaluate revolution steps\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\n\t\t\t}\n\t\t\tif (this._topClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\n\t\t\t}\n\t\t\tif (this._bottomClosed) {\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\n\t\t\t\tnumIndices += this._pSegmentsW*3;\n\t\t\t}\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed && this._topRadius > 0) {\n\n\t\t\t\tz = -0.5*this._height;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = 1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = -1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tpositions[vidx] = 0;\n\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\tnormals[vidx] = 0;\n\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\ttangents[vidx] = 1;\n\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\tvidx += 3;\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\n\n\t\t\t\tz = 0.5*this._height;\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\n\n\t\t\t\t// central vertex\n\t\t\t\tif (this._yUp) {\n\t\t\t\t\tt1 = -1;\n\t\t\t\t\tt2 = 0;\n\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\tcomp2 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tt1 = 0;\n\t\t\t\t\tt2 = 1;\n\t\t\t\t\tcomp1 = 0;\n\t\t\t\t\tcomp2 = z;\n\t\t\t\t}\n\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tpositions[vidx] = 0;\n\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\n\t\t\t\tnextVertexIndex += 1;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\t\t\t\t\tnormals[vidx + 1] = t1;\n\t\t\t\t\tnormals[vidx + 2] = t2;\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t// add triangle\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\n\t\t\tlatNormElev = dr/this._height;\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tvar a:number;\n\t\t\t\tvar b:number;\n\t\t\t\tvar c:number;\n\t\t\t\tvar d:number;\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\n\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\n\n\t\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\t\tt2 = -na0;\n\t\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\n\t\t\t\t\t\t\tnaComp2 = na1;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tt1 = -na0;\n\t\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t\t\tnaComp1 = na1;\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\n\t\t\t\t\t\t\ttangents[vidx] = na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t\t\tnormals[vidx] = na0;\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t\t// close triangle\n\t\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\t\t\tvar _radius = 50;\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._pSegmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar x:number;\n\t\tvar y:number;\n\t\tvar revolutionAngle:number;\n\t\tvar uvs:Float32Array;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// top\n\t\t\tif (this._topClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bottom\n\t\t\tif (this._bottomClosed) {\n\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\n\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\n\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// lateral surface\n\t\t\tif (this._surfaceClosed) {\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\n\t\t\t\t\t\t// revolution vertex\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A Plane primitive mesh.\n */\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _doubleSided:boolean;\n\n\t/**\n\t * Creates a new Plane object.\n\t * @param width The width of the plane.\n\t * @param height The height of the plane.\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\n\t */\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._doubleSided = doubleSided;\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\n\t * false, respectively. Defaults to 1.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\n\t}\n\n\t/**\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\n\t */\n\tpublic get doubleSided():boolean\n\t{\n\t\treturn this._doubleSided;\n\t}\n\n\tpublic set doubleSided(value:boolean)\n\t{\n\t\tthis._doubleSided = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The width of the plane.\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tthis._width = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The height of the plane.\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tthis._height = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar x:number, y:number;\n\t\tvar numIndices:number;\n\t\tvar base:number;\n\t\tvar tw:number = this._segmentsW + 1;\n\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar xi:number;\n\t\tvar yi:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar normals:Float32Array;\n\t\t\tvar tangents:Float32Array;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumIndices *= 2;\n\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\n\n\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\n\t\t\t\t\t\tpositions[vidx + 2] = y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx + 1] = y;\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = 0;\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\ttangents[vidx] = 1;\n\t\t\t\t\ttangents[vidx + 1] = 0;\n\t\t\t\t\ttangents[vidx + 2] = 0;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\n\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\n\n\t\t\t\t\t\tbase = xi + yi*tw;\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\n\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = base*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\n\n\t\t\t\t\t\tif (this._doubleSided) {\n\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\n\t\t\tvar positions:Float32Array;\n\t\t\tvar thickness:Float32Array;\n\n\t\t\tvar hw:number = this._width/2;\n\t\t\tvar hh:number = this._height/2;\n\n\t\t\tpositions = new Float32Array(numSegments*6);\n\t\t\tthickness = new Float32Array(numSegments);\n\n\t\t\tfidx = 0;\n\n\t\t\tvidx = 0;\n\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\n\t\t\t\tpositions[vidx++] = -hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tpositions[vidx++] = hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = -hh;\n\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\n\t\t\t\tpositions[vidx++] = 0;\n\t\t\t\tpositions[vidx++] = hh;\n\n\t\t\t\tthickness[fidx++] = 1;\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar uvs:Float32Array;\n\t\tvar numVertices:number;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\n\n\t\t\tif (this._doubleSided)\n\t\t\t\tnumVertices *= 2;\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t\tthis._pInvalidateGeometry()\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\n\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\tindex += 2;\n\n\t\t\t\t\tif (this._doubleSided) {\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\n\t\t\t\t\t\tindex += 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\n\n/**\n * A UV RegularPolygon primitive mesh.\n */\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\n{\n\n\t/**\n\t * The radius of the regular polygon.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._pBottomRadius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._pBottomRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The number of sides of the regular polygon.\n\t */\n\tpublic get sides():number\n\t{\n\t\treturn this._pSegmentsW;\n\t}\n\n\tpublic set sides(value:number)\n\t{\n\t\tthis.setSegmentsW(value);\n\t}\n\n\t/**\n\t * The number of subdivisions from the edge to the center of the regular polygon.\n\t */\n\tpublic get subdivisions():number\n\t{\n\t\treturn this._pSegmentsH;\n\t}\n\n\tpublic set subdivisions(value:number)\n\t{\n\t\tthis.setSegmentsH(value);\n\t}\n\n\t/**\n\t * Creates a new RegularPolygon disc object.\n\t * @param radius The radius of the regular polygon\n\t * @param sides Defines the number of sides of the regular polygon.\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\n\t{\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\n\t}\n}\n\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\n\n/**\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\n */\nclass PrimitivePrefabBase extends PrefabBase\n{\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\n\n\tpublic _geomDirty:boolean = true;\n\tpublic _uvDirty:boolean = true;\n\tpublic _scaleU:number = 1;\n\tpublic _scaleV:number = 1;\n\n\tprivate _material:MaterialBase;\n\tprivate _geometry:Geometry;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryType:string;\n\tprivate _geometryTypeDirty:boolean = true;\n\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn PrimitivePrefabBase.assetType;\n\t}\n\n\t/**\n\t * \n\t */\n\tpublic get geometryType():string\n\t{\n\t\treturn this._geometryType;\n\t}\n\t\n\tpublic set geometryType(value:string)\n\t{\n\t\tif (this._geometryType == value)\n\t\t\treturn;\n\n\t\tthis._geometryType = value;\n\t\t\n\t\tthis.invalidateGeometryType();\n\t}\n\n\tpublic get geometry():Geometry\n\t{\n\t\tthis._iValidate();\n\n\t\treturn this._geometry;\n\t}\n\n\t/**\n\t * The material with which to render the primitive.\n\t */\n\tpublic get material():MaterialBase\n\t{\n\t\treturn this._material;\n\t}\n\n\tpublic set material(value:MaterialBase)\n\t{\n\t\tif (value == this._material)\n\t\t\treturn;\n\n\t\tthis._material = value;\n\n\t\tvar len:number = this._pObjects.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\n\t}\n\n\tpublic get scaleU():number\n\t{\n\t\treturn this._scaleU;\n\t}\n\n\tpublic set scaleU(value:number)\n\t{\n\t\tif (this._scaleU = value)\n\t\t\treturn;\n\n\t\tthis._scaleU = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\tpublic get scaleV():number\n\t{\n\t\treturn this._scaleV;\n\t}\n\n\tpublic set scaleV(value:number)\n\t{\n\t\tif (this._scaleV = value)\n\t\t\treturn;\n\n\t\tthis._scaleV = value;\n\n\t\tthis._pInvalidateUVs();\n\t}\n\n\n\t/**\n\t * Creates a new PrimitivePrefabBase object.\n\t *\n\t * @param material The material with which to render the object\n\t */\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\n\t{\n\t\tsuper();\n\n\t\tthis._geometry = new Geometry();\n\t\tthis._material = material;\n\t\tthis._geometryType = geometryType;\n\t}\n\n\t/**\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\n\t */\n\tpublic invalidateGeometryType()\n\t{\n\t\tthis._geometryTypeDirty = true;\n\t\tthis._geomDirty = true;\n\t\tthis._uvDirty = true;\n\t}\n\t\n\t/**\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\n\t */\n\tpublic _pInvalidateGeometry()\n\t{\n\t\tthis._geomDirty = true;\n\t}\n\n\t/**\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\n\t */\n\tpublic _pInvalidateUVs()\n\t{\n\t\tthis._uvDirty = true;\n\t}\n\n\t/**\n\t * Updates the subgeometry when invalid.\n\t */\n\tprivate updateGeometryType()\n\t{\n\t\t//remove any existing sub geometry\n\t\tif (this._subGeometry)\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\n\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\n\t\t\tthis._subGeometry = triangleGeometry;\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\n\t\t}\n\n\t\tthis._geometryTypeDirty = false;\n\t}\n\n\t\n\t/**\n\t * Updates the geometry when invalid.\n\t */\n\tprivate updateGeometry()\n\t{\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\n\n\t\tthis._geomDirty = false;\n\t}\n\n\t/**\n\t * Updates the uv coordinates when invalid.\n\t */\n\tprivate updateUVs()\n\t{\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\n\n\t\tthis._uvDirty = false;\n\t}\n\n\tpublic _iValidate()\n\t{\n\t\tif (this._geometryTypeDirty)\n\t\t\tthis.updateGeometryType();\n\t\t\n\t\tif (this._geomDirty)\n\t\t\tthis.updateGeometry();\n\n\t\tif (this._uvDirty)\n\t\t\tthis.updateUVs();\n\t}\n\n\n\tpublic _pCreateObject():DisplayObject\n\t{\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\n\t\tmesh._iSourcePrefab = this;\n\n\t\treturn mesh;\n\t}\n\n\n//\t\tpublic _pCreateBatchObject():BatchObject\n//\t\t{\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\n//\t\t\tbatch._iSourcePrefab = this;\n//\n//\t\t\treturn batch;\n//\t\t}\n}\n\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Sphere primitive mesh.\n */\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _segmentsW:number;\n\tprivate _segmentsH:number;\n\tprivate _yUp:boolean;\n\n\t/**\n\t * The radius of the sphere.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\n\t */\n\tpublic get segmentsW():number\n\t{\n\t\treturn this._segmentsW;\n\t}\n\n\tpublic set segmentsW(value:number)\n\t{\n\t\tthis._segmentsW = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\n\t */\n\tpublic get segmentsH():number\n\t{\n\t\treturn this._segmentsH;\n\t}\n\n\tpublic set segmentsH(value:number)\n\t{\n\t\tthis._segmentsH = value;\n\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new Sphere object.\n\t *\n\t * @param radius The radius of the sphere.\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._segmentsW = segmentsW;\n\t\tthis._segmentsH = segmentsH;\n\t\tthis._yUp = yUp;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number;\n\t\tvar j:number;\n\t\tvar vidx:number, fidx:number; // indices\n\n\t\tvar comp1:number;\n\t\tvar comp2:number;\n\t\tvar numVertices:number;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\n\t\t\t\tpositions = new Float32Array(numVertices*3);\n\t\t\t\tnormals = new Float32Array(numVertices*3);\n\t\t\t\ttangents = new Float32Array(numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\tvar startIndex:number;\n\t\t\tvar t1:number;\n\t\t\tvar t2:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tstartIndex = vidx;\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\n\t\t\t\t\t\ttangents[vidx+1] = t1;\n\t\t\t\t\t\ttangents[vidx+2] = t2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0 && j > 0) {\n\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\n\n\t\t\t\t\t\tif (j == this._segmentsH) {\n\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\n\t\t\t\t\t\t} else if (j == 1) {\n\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvidx += 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\n\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\n\n\t\t\tvidx = 0;\n\n\t\t\tfidx = 0;\n\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\n\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\n\n\t\t\t\t\tif (this._yUp) {\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t//horizonal lines\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\tthickness[fidx++] = 1;\n\n\t\t\t\t\t\t//vertical lines\n\t\t\t\t\t\tif (j > 0) {\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\n\n\t\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\n\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//horizonal lines\n\t\t\t\t\tif (i < this._segmentsW) {\n\t\t\t\t\t\tpositions[vidx++] = x;\n\t\t\t\t\t\tpositions[vidx++] = comp1;\n\t\t\t\t\t\tpositions[vidx++] = comp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\tlineGeometry.setPositions(positions);\n\t\t\tlineGeometry.setThickness(thickness);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar i:number, j:number;\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(numVertices*2);\n\t\t\t}\n\n\t\t\tvar index:number = 0;\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\n\n/**\n * A UV Cylinder primitive mesh.\n */\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\n{\n\tprivate _radius:number;\n\tprivate _tubeRadius:number;\n\tprivate _segmentsR:number;\n\tprivate _segmentsT:number;\n\tprivate _yUp:boolean;\n\tprivate _numVertices:number = 0;\n\n\t/**\n\t * The radius of the torus.\n\t */\n\tpublic get radius():number\n\t{\n\t\treturn this._radius;\n\t}\n\n\tpublic set radius(value:number)\n\t{\n\t\tthis._radius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * The radius of the inner tube of the torus.\n\t */\n\tpublic get tubeRadius():number\n\t{\n\t\treturn this._tubeRadius;\n\t}\n\n\tpublic set tubeRadius(value:number)\n\t{\n\t\tthis._tubeRadius = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\n\t */\n\tpublic get segmentsR():number\n\t{\n\t\treturn this._segmentsR;\n\t}\n\n\tpublic set segmentsR(value:number)\n\t{\n\t\tthis._segmentsR = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\n\t */\n\tpublic get segmentsT():number\n\t{\n\t\treturn this._segmentsT;\n\t}\n\n\tpublic set segmentsT(value:number)\n\t{\n\t\tthis._segmentsT = value;\n\t\tthis._pInvalidateGeometry();\n\t\tthis._pInvalidateUVs();\n\t}\n\n\t/**\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tpublic get yUp():boolean\n\t{\n\t\treturn this._yUp;\n\t}\n\n\tpublic set yUp(value:boolean)\n\t{\n\t\tthis._yUp = value;\n\t\tthis._pInvalidateGeometry();\n\t}\n\n\t/**\n\t * Creates a new <code>Torus</code> object.\n\t * @param radius The radius of the torus.\n\t * @param tuebRadius The radius of the inner tube of the torus.\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\n\t */\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\n\t{\n\t\tsuper();\n\n\t\tthis._radius = radius;\n\t\tthis._tubeRadius = tubeRadius;\n\t\tthis._segmentsR = segmentsR;\n\t\tthis._segmentsT = segmentsT;\n\t\tthis._yUp = yUp;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\n\t{\n\t\tvar indices:Uint16Array;\n\t\tvar positions:Float32Array;\n\t\tvar normals:Float32Array;\n\t\tvar tangents:Float32Array;\n\n\t\tvar i:number, j:number;\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\n\t\tvar vidx:number;\n\t\tvar fidx:number;\n\t\tvar numIndices:number = 0;\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// evaluate target number of vertices, triangles and indices\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\n\n\t\t\t// need to initialize raw arrays or can be reused?\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tindices = new Uint16Array(numIndices);\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\n\n\t\t\t\tthis._pInvalidateUVs();\n\t\t\t}\n\n\n\t\t\tvidx = 0;\n\t\t\tfidx = 0;\n\n\t\t\t// evaluate revolution steps\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\n\n\t\t\tvar comp1:number, comp2:number;\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\n\t\t\tvar startIndex:number = 0;\n\t\t\tvar nextVertexIndex:number = 0;\n\n\t\t\t// surface\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\n\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\n\t\t\t\tstartIndex = nextVertexIndex*3;\n\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\n\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\n\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\n\n\t\t\t\t\tif (this._yUp) {\n\n\t\t\t\t\t\tn1 = -nz;\n\t\t\t\t\t\tn2 = ny;\n\t\t\t\t\t\tt1 = 0;\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tcomp1 = -z;\n\t\t\t\t\t\tcomp2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn1 = ny;\n\t\t\t\t\t\tn2 = nz;\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\n\t\t\t\t\t\tt2 = 0;\n\t\t\t\t\t\tcomp1 = y;\n\t\t\t\t\t\tcomp2 = z;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i == this._segmentsR) {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpositions[vidx] = x;\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\n\t\t\t\t\t}\n\n\t\t\t\t\tnormals[vidx] = nx;\n\t\t\t\t\tnormals[vidx + 1] = n1;\n\t\t\t\t\tnormals[vidx + 2] = n2;\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\n\t\t\t\t\ttangents[vidx + 1] = t1;\n\t\t\t\t\ttangents[vidx + 2] = t2;\n\n\t\t\t\t\tvidx += 3;\n\n\t\t\t\t\t// close triangle\n\t\t\t\t\tif (i > 0 && j > 0) {\n\t\t\t\t\t\ta = nextVertexIndex; // current\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = b;\n\t\t\t\t\t\tindices[fidx++] = c;\n\n\t\t\t\t\t\tindices[fidx++] = a;\n\t\t\t\t\t\tindices[fidx++] = c;\n\t\t\t\t\t\tindices[fidx++] = d;\n\t\t\t\t\t}\n\n\t\t\t\t\tnextVertexIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setIndices(indices);\n\n\t\t\ttriangleGeometry.setPositions(positions);\n\t\t\ttriangleGeometry.setNormals(normals);\n\t\t\ttriangleGeometry.setTangents(tangents);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//TODO\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\n\t{\n\n\t\tvar i:number, j:number;\n\t\tvar uvs:Float32Array;\n\n\n\t\tif (geometryType == \"triangleSubGeometry\") {\n\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\n\n\t\t\t// need to initialize raw array or can be reused?\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\n\t\t\t} else {\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\n\t\t\t}\n\n\t\t\t// current uv component index\n\t\t\tvar index:number = 0;\n\n\t\t\t// surface\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\n\t\t\t\t\t// revolution vertex\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// build real data from raw data\n\t\t\ttriangleGeometry.setUVs(uvs);\n\n\t\t} else if (geometryType == \"lineSubGeometry\") {\n\t\t\t//nothing to do here\n\t\t}\n\t}\n}\n\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.RenderableMergeSort\n */\nclass RenderableMergeSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable;\n\t\tvar slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortBlendedRenderables(head);\n\t\theadB = this.sortBlendedRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB) {\n\t\t\tif (head.zIndex < headB.zIndex) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result)\n\t\t\t\tresult = l; else\n\t\t\t\tcurr.next = l;\n\n\t\t\tcurr = l;\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\tvar headB:IRenderable;\n\t\tvar fast:IRenderable, slow:IRenderable;\n\n\t\tif (!head || !head.next) {\n\t\t\treturn head;\n\t\t}\n\n\t\t// split in two sublists\n\t\tslow = head;\n\t\tfast = head.next;\n\n\t\twhile (fast) {\n\t\t\tfast = fast.next;\n\t\t\tif (fast) {\n\t\t\t\tslow = slow.next;\n\t\t\t\tfast = fast.next;\n\t\t\t}\n\t\t}\n\n\t\theadB = slow.next;\n\t\tslow.next = null;\n\n\t\t// recurse\n\t\thead = this.sortOpaqueRenderables(head);\n\t\theadB = this.sortOpaqueRenderables(headB);\n\n\t\t// merge sublists while respecting order\n\t\tvar result:IRenderable;\n\t\tvar curr:IRenderable;\n\t\tvar l:IRenderable;\n\t\tvar cmp:number = 0;\n\n\t\tif (!head)\n\t\t\treturn headB;\n\t\tif (!headB)\n\t\t\treturn head;\n\n\t\twhile (head && headB && head != null && headB != null) {\n\n\t\t\t// first sort per render order id (reduces program3D switches),\n\t\t\t// then on render object id (reduces setting props),\n\t\t\t// then on zIndex (reduces overdraw)\n\t\t\tvar aid:number = head.renderOrderId;\n\t\t\tvar bid:number = headB.renderOrderId;\n\n\t\t\tif (aid == bid) {\n\t\t\t\tvar ma:number = head.renderId;\n\t\t\t\tvar mb:number = headB.renderId;\n\n\t\t\t\tif (ma == mb) {\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\n\t\t\t\t\t\tcmp = 1; else\n\t\t\t\t\t\tcmp = -1;\n\t\t\t\t} else if (ma > mb) {\n\t\t\t\t\tcmp = 1;\n\t\t\t\t} else {\n\t\t\t\t\tcmp = -1;\n\t\t\t\t}\n\t\t\t} else if (aid > bid) {\n\t\t\t\tcmp = 1;\n\t\t\t} else {\n\t\t\t\tcmp = -1;\n\t\t\t}\n\n\t\t\tif (cmp < 0) {\n\t\t\t\tl = head;\n\t\t\t\thead = head.next;\n\t\t\t} else {\n\t\t\t\tl = headB;\n\t\t\t\theadB = headB.next;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tresult = l;\n\t\t\t\tcurr = l;\n\t\t\t} else {\n\t\t\t\tcurr.next = l;\n\t\t\t\tcurr = l;\n\t\t\t}\n\t\t}\n\n\t\tif (head)\n\t\t\tcurr.next = head; else if (headB)\n\t\t\tcurr.next = headB;\n\n\t\treturn result;\n\t}\n}\n\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\n\n/**\n * @class away.sort.NullSort\n */\nclass RenderableNullSort implements IEntitySorter\n{\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\n\t{\n\t\treturn head;\n\t}\n}\n\nexport = RenderableNullSort;",
    "/**\n * The AntiAliasType class provides values for anti-aliasing in the\n * away.text.TextField class.\n */\nclass AntiAliasType\n{\n\t/**\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\n\t * allows font faces to be rendered at very high quality at small sizes. It\n\t * is best used with applications that have a lot of small text. Advanced\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\n\t * points). This constant is used for the <code>antiAliasType</code> property\n\t * in the TextField class. Use the syntax\n\t * <code>AntiAliasType.ADVANCED</code>.\n\t */\n\tpublic static ADVANCED:string = \"advanced\";\n\n\t/**\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\n\t * earlier. This setting is recommended for applications that do not have a\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\n\t * property in the TextField class. Use the syntax\n\t * <code>AntiAliasType.NORMAL</code>.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n}\n\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass Font extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset Font]\";\n\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\n\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Font.assetType;\n\t}\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\t/**\n\t *Get a font-table for a specific name, or create one if it does not exists.\n\t */\n\tpublic get_font_table(style_name:string):FontTable\n\t{\n\t\tvar len:number = this._font_styles.length;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tif(this._font_styles[i].name==style_name)\n\t\t\t\treturn this._font_styles[i];\n\t\t}\n\t\tvar font_style:FontTable = new FontTable();\n\t\tfont_style.name=style_name;\n\t\tthis._font_styles.push(font_style);\n\t\treturn font_style;\n\t}\n\n}\n\nexport = Font;",
    "/**\n * The GridFitType class defines values for grid fitting in the TextField class.\n */\nclass GridFitType\n{\n\t/**\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\n\t * not forced to the pixel grid. This constant is used in setting the\n\t * <code>gridFitType</code> property of the TextField class. This is often a\n\t * good setting for animation or for large font sizes. Use the syntax\n\t * <code>GridFitType.NONE</code>.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\n\t * is used in setting the <code>gridFitType</code> property of the TextField\n\t * class. This setting only works for left-justified text fields and acts\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\n\t * setting generally provides the best readability for left-aligned text. Use\n\t * the syntax <code>GridFitType.PIXEL</code>.\n\t */\n\tpublic static PIXEL:string = \"pixel\";\n\n\t/**\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\n\t * constant is used in setting the <code>gridFitType</code> property of the\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\n\t */\n\tpublic static SUBPIXEL:string = \"subpixel\";\n}\n\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\n\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TesselatedFontChar\n{\n\n\t/**\n\t * The width of the char\n\t */\n\tpublic char_width:number;\n\n\t/**\n\t * SubGeometry for this char\n\t */\n\tpublic subgeom:CurveSubGeometry;\n\n\t/**\n\t * the char_codes that this geom has kerning set for\n\t */\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\n\t/**\n\t * the kerning values per char_code\n\t */\n\tpublic kerningValues:Array<number>=new Array<number>();\n\n\n\tconstructor(subgeom:CurveSubGeometry)\n\t{\n\t\tthis.char_width=0;\n\t\tthis.subgeom = subgeom;\n\t\tif (this.subgeom != null) {\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\n\t\t\t\tif(positions2[v*3]>this.char_width)\n\t\t\t\t\tthis.char_width=positions2[v*3];\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport = TesselatedFontChar;",
    "\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\n\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\n\n/**\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\n *\n *\n * @see away.base.TriangleSubGeometry\n * @see away.entities.Mesh\n *\n * @class away.base.SubMeshBase\n */\nclass TesselatedFontTable extends AssetBase\n{\n\tprivate _font_chars:Array<TesselatedFontChar>;\n\tprivate _font_chars_dic:Object;\n\tprivate _font_em_size:number;\n\tprivate _whitespace_width:number;\n\tprivate _charDictDirty:Boolean;\n\t//TODO test shader picking\n//\t\tpublic get shaderPickingDetails():boolean\n//\t\t{\n//\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\n//\t\t}\n\n\t/**\n\t * Creates a new TesselatedFont object\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\n\t\tthis._font_chars_dic = new Object();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic get_font_chars():Array<TesselatedFontChar>\n\t{\n\t\treturn this._font_chars\n\t}\n\tpublic get_font_em_size():number\n\t{\n\t\treturn this._font_em_size\n\t}\n\tpublic set_whitespace_width(value:number):void\n\t{\n\t\tthis._whitespace_width=value;\n\t}\n\tpublic get_whitespace_width():number\n\t{\n\t\treturn this._whitespace_width\n\t}\n\tpublic set_font_em_size(font_em_size:number):void\n\t{\n\t\tthis._font_em_size=font_em_size;\n\t}\n\t/**\n\t *\n\t */\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\n\t{\n\t\treturn this._font_chars_dic[char];\n\t}\n\t/**\n\t *\n\t */\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\n\t{\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\n\t\tsubgeo.name=char;\n\t\tthis._font_chars.push(tesselated_font_char);\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\n\t}\n\n}\n\nexport = TesselatedFontTable;",
    "/**\n * The TextFieldAutoSize class is an enumeration of constant values used in\n * setting the <code>autoSize</code> property of the TextField class.\n */\nclass TextFieldAutoSize\n{\n\t/**\n\t * Specifies that the text is to be treated as center-justified text. Any\n\t * resizing of a single line of a text field is equally distributed to both\n\t * the right and left sides.\n\t */\n\tpublic static CENTER:string = \"center\";\n\n\t/**\n\t * Specifies that the text is to be treated as left-justified text, meaning\n\t * that the left side of the text field remains fixed and any resizing of a\n\t * single line is on the right side.\n\t */\n\tpublic static LEFT:string = \"left\";\n\n\t/**\n\t * Specifies that no resizing is to occur.\n\t */\n\tpublic static NONE:string = \"none\";\n\n\t/**\n\t * Specifies that the text is to be treated as right-justified text, meaning\n\t * that the right side of the text field remains fixed and any resizing of a\n\t * single line is on the left side.\n\t */\n\tpublic static RIGHT:string = \"right\";\n}\n\nexport = TextFieldAutoSize;",
    "/**\n * The TextFieldType class is an enumeration of constant values used in setting the\n * <code>type</code> property of the TextField class.\n *\n * @see away.entities.TextField#type\n */\nclass TextFieldType\n{\n\t/**\n\t * Used to specify a <code>dynamic</code> TextField.\n\t */\n\tpublic static DYNAMIC:string = \"dynamic\";\n\n\t/**\n\t * Used to specify an <code>input</code> TextField.\n\t */\n\tpublic static INPUT:string = \"input\";\n\n\t/**\n\t * Used to specify an <code>static</code> TextField.\n\t */\n\tpublic static STATIC:string = \"input\";\n}\n\nexport = TextFieldType;",
    "/**\n * The TextFormatAlign class provides values for text alignment in the\n * TextFormat class.\n */\nclass TextFormatAlign\n{\n\t/**\n\t * Constant; centers the text in the text field. Use the syntax\n\t * <code>TextFormatAlign.CENTER</code>.\n\t */\n\tpublic CENTER:string = \"center\";\n\n\t/**\n\t * Constant; justifies text within the text field. Use the syntax\n\t * <code>TextFormatAlign.JUSTIFY</code>.\n\t */\n\tpublic JUSTIFY:string = \"justify\";\n\n\t/**\n\t * Constant; aligns text to the left within the text field. Use the syntax\n\t * <code>TextFormatAlign.LEFT</code>.\n\t */\n\tpublic LEFT:string = \"left\";\n\n\t/**\n\t * Constant; aligns text to the right within the text field. Use the syntax\n\t * <code>TextFormatAlign.RIGHT</code>.\n\t */\n\tpublic RIGHT:string = \"right\";\n}\n\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n/**\n * The TextFormat class represents character formatting information. Use the\n * TextFormat class to create specific text formatting for text fields. You\n * can apply text formatting to both static and dynamic text fields. The\n * properties of the TextFormat class apply to device and embedded fonts.\n * However, for embedded fonts, bold and italic text actually require specific\n * fonts. If you want to display bold or italic text with an embedded font,\n * you need to embed the bold and italic variations of that font.\n *\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\n * TextFormat object before setting its properties. When you apply a\n * TextFormat object to a text field using the\n * <code>TextField.defaultTextFormat</code> property or the\n * <code>TextField.setTextFormat()</code> method, only its defined properties\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\n * by default because if you don't provide values for the properties, Flash\n * Player uses its own default formatting. The default formatting that Flash\n * Player uses for each property(if property's value is <code>null</code>) is\n * as follows:</p>\n *\n * <p>The default formatting for each property is also described in each\n * property description.</p>\n */\nclass TextFormat extends AssetBase implements IAsset\n{\n\tpublic static assetType:string = \"[asset TextFormat]\";\n\n\t/**\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\n\t * constants.\n\t *\n\t * @default TextFormatAlign.LEFT\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\n\t *                       flash.text.TextFormatAlign.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic align:string;\n\n\n\t/**\n\t * Indicates the block indentation in pixels. Block indentation is applied to\n\t * an entire block of text; that is, to all lines of the text. In contrast,\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\n\t * line of each paragraph. If this property is <code>null</code>, the\n\t * TextFormat object does not specify block indentation(block indentation is\n\t * 0).\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic blockIndent:number;\n\n\t/**\n\t * Specifies whether the text is boldface. The default value is\n\t * <code>null</code>, which means no boldface is used. If the value is\n\t * <code>true</code>, then the text is boldface.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\n\tpublic bold:boolean;\n\n\t/**\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\n\t * each paragraph of text is indented. To the left of the first line of each\n\t * paragraph, a bullet symbol is displayed. The default value is\n\t * <code>null</code>, which means no bulleted list is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\n\tpublic bullet:boolean;\n\n\t/**\n\t * Indicates the color of the text. A number containing three 8-bit RGB\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\n\t * default value is <code>null</code>, which means that Flash Player uses the\n\t * color black(0x000000).\n\t */\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\n\tpublic color:boolean;\n\n\n\t/**\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t * The uv-values of the colors in textureatlas.\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\n\t */\n\tpublic uv_values:Array<number>;\n\n\t/**\n\t * The name of the font for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\n\t */\n\tpublic font_name:string;\n\t/**\n\t * The name of the font-style for text in this text format, as a string.\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\n\t * The font-style can be used to get a Font-table, from a Font-object.\n\t */\n\tpublic font_style:string;\n\t/**\n\t * The font-table that provides the subgeos for the chars\n\t */\n\tpublic font_table:TesselatedFontTable;\n\n\t/**\n\t * Indicates the indentation from the left margin to the first character in\n\t * the paragraph. The default value is <code>null</code>, which indicates\n\t * that no indentation is used.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic indent:number;\n\n\t/**\n\t * Indicates whether text in this text format is italicized. The default\n\t * value is <code>null</code>, which means no italics are used.\n\t */\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\n\tpublic italic:boolean;\n\n\t/**\n\t * A Boolean value that indicates whether kerning is enabled\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\n\t * pixels between certain character pairs to improve readability, and should\n\t * be used only when necessary, such as with headings in large fonts. Kerning\n\t * is supported for embedded fonts only.\n\t *\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\n\t * New, do not support kerning.</p>\n\t *\n\t * <p>The default value is <code>null</code>, which means that kerning is not\n\t * enabled.</p>\n\t */\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\n\tpublic kerning:boolean;\n\n\t/**\n\t * An integer representing the amount of vertical space(called\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\n\t * which indicates that the amount of leading used is 0.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leading:number;\n\n\t/**\n\t * The left margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic leftMargin:number;\n\n\t/**\n\t * A number representing the amount of space that is uniformly distributed\n\t * between all characters. The value specifies the number of pixels that are\n\t * added to the advance after each character. The default value is\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\n\t * You can use decimal values such as <code>1.75</code>.\n\t */\n\tpublic letterSpacing:number;\n\n\t/**\n\t * The right margin of the paragraph, in pixels. The default value is\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\n\t */\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\n\tpublic rightMargin:number;\n\n\t/**\n\t * The size in pixels of text in this text format. The default value is\n\t * <code>null</code>, which means that a size of 12 is used.\n\t */\n\tpublic size:number;\n\n\t/**\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\n\t * stop is specified in pixels. If custom tab stops are not specified\n\t * (<code>null</code>), the default tab stop is 4(average character width).\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\n\n\t/**\n\t * Indicates the target window where the hyperlink is displayed. If the\n\t * target window is an empty string, the text is displayed in the default\n\t * target window <code>_self</code>. You can choose a custom name or one of\n\t * the following four names: <code>_self</code> specifies the current frame\n\t * in the current window, <code>_blank</code> specifies a new window,\n\t * <code>_parent</code> specifies the parent of the current frame, and\n\t * <code>_top</code> specifies the top-level frame in the current window. If\n\t * the <code>TextFormat.url</code> property is an empty string or\n\t * <code>null</code>, you can get or set this property, but the property will\n\t * have no effect.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic link_target:string;\n\n\t/**\n\t * Indicates whether the text that uses this text format is underlined\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\n\t * similar to that produced by the <code><U></code> tag, but the latter is\n\t * not true underlining, because it does not skip descenders correctly. The\n\t * default value is <code>null</code>, which indicates that underlining is\n\t * not used.\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic underline:boolean;\n\n\t/**\n\t * Indicates the target URL for the text in this text format. If the\n\t * <code>url</code> property is an empty string, the text does not have a\n\t * hyperlink. The default value is <code>null</code>, which indicates that\n\t * the text does not have a hyperlink.\n\t *\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\n\t */\n\t//todo: not used with in tesselated-font-table yet\n\tpublic url:string;\n\n\t/**\n\t * Creates a TextFormat object with the specified properties. You can then\n\t * change the properties of the TextFormat object to change the formatting of\n\t * text fields.\n\t *\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\n\t * not defined. All of the parameters are optional; any omitted parameters\n\t * are treated as <code>null</code>.</p>\n\t *\n\t * @param font        The name of a font for text as a string.\n\t * @param size        An integer that indicates the size in pixels.\n\t * @param color       The color of text using this text format. A number\n\t *                    containing three 8-bit RGB components; for example,\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\n\t * @param bold        A Boolean value that indicates whether the text is\n\t *                    boldface.\n\t * @param italic      A Boolean value that indicates whether the text is\n\t *                    italicized.\n\t * @param underline   A Boolean value that indicates whether the text is\n\t *                    underlined.\n\t * @param url         The URL to which the text in this text format\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\n\t *                    text does not have a hyperlink.\n\t * @param target      The target window where the hyperlink is displayed. If\n\t *                    the target window is an empty string, the text is\n\t *                    displayed in the default target window\n\t *                    <code>_self</code>. If the <code>url</code> parameter\n\t *                    is set to an empty string or to the value\n\t *                    <code>null</code>, you can get or set this property,\n\t *                    but the property will have no effect.\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\n\t *                    value.\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\n\t * @param indent      An integer that indicates the indentation from the left\n\t *                    margin to the first character in the paragraph.\n\t * @param leading     A number that indicates the amount of leading vertical\n\t *                    space between lines.\n\t */\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\n\t{\n\t\tsuper();\n\t\tthis.font_name = font;\n\t\tthis.size = size;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.link_target = link_target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn TextFormat.assetType;\n\t}\n}\n\nexport = TextFormat;",
    "/**\n * A class that defines the Interactive mode of a text field object.\n *\n * @see away.entities.TextField#textInteractionMode\n */\nclass TextInteractionMode\n{\n\t/**\n\t * The text field's default interaction mode is NORMAL and it varies across\n\t * platform. On Desktop, the normal mode implies that the text field is in\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\n\t * implies that the text field can only be scrolled but the text can not be\n\t * selected.\n\t */\n\tpublic static NORMAL:string = \"normal\";\n\n\t/**\n\t * On mobile platforms like Android, the text field starts in normal mode\n\t * (which implies scroll and non-selectable mode). The user can switch to\n\t * selection mode through the in-built context menu of the text field object.\n\t */\n\tpublic static SELECTION:string = \"selection\";\n}\n\nexport = TextInteractionMode;",
    "/**\n * The TextLineMetrics class contains information about the text position and\n * measurements of a line of text within a text field. All measurements are in\n * pixels. Objects of this class are returned by the \n * <code>away.entities.TextField.getLineMetrics()</code> method.\n */\nclass TextLineMetrics\n{\n\t/**\n\t * The ascent value of the text is the length from the baseline to the top of\n\t * the line height in pixels.\n\t */\n\tpublic ascent:number;\n\n\t/**\n\t * The descent value of the text is the length from the baseline to the\n\t * bottom depth of the line in pixels.\n\t */\n\tpublic descent:number;\n\n\t/**\n\t * The height value of the text of the selected lines (not necessarily the\n\t * complete text) in pixels. The height of the text line does not include the\n\t * gutter height.\n\t */\n\tpublic height:number;\n\n\t/**\n\t * The leading value is the measurement of the vertical distance between the\n\t * lines of text.\n\t */\n\tpublic leading:number;\n\n\t/**\n\t * The width value is the width of the text of the selected lines (not\n\t * necessarily the complete text) in pixels. The width of the text line is\n\t * not the same as the width of the text field. The width of the text line is\n\t * relative to the text field width, minus the gutter width of 4 pixels\n\t * (2 pixels on each side).\n\t */\n\tpublic width:number;\n\n\t/**\n\t * The x value is the left position of the first character in pixels. This\n\t * value includes the margin, indent (if any), and gutter widths.\n\t */\n\tpublic x:number;\n\n\t/**\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\n\t * information about the text metrics of a line of text in a text field.\n\t * Objects of this class are returned by the\n\t * away.entities.TextField.getLineMetrics() method.\n\t *\n\t * @param x           The left position of the first character in pixels.\n\t * @param width       The width of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param height      The height of the text of the selected lines (not\n\t *                    necessarily the complete text) in pixels.\n\t * @param ascent      The length from the baseline to the top of the line\n\t *                    height in pixels.\n\t * @param descent     The length from the baseline to the bottom depth of\n\t *                    the line in pixels.\n\t * @param leading     The measurement of the vertical distance between the\n\t *                    lines of text.\n\t */\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\n\t{\n\n\t}\n}\n\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\nclass Single2DTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\n\n\tprivate _sampler2D:Sampler2D;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn Single2DTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {Image2D}\n\t */\n\tpublic get sampler2D():Sampler2D\n\t{\n\t\treturn this._sampler2D;\n\t}\n\n\tpublic set sampler2D(value:Sampler2D)\n\t{\n\t\tif (this._sampler2D == value)\n\t\t\treturn;\n\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\n\n\t\tthis._sampler2D = value;\n\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:Sampler2D);\n\tconstructor(source:Image2D);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof Image2D)\n\t\t\tthis.sampler2D = new Sampler2D(source);\n\t\telse\n\t\t\tthis.sampler2D = source;\n\n\t}\n}\n\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\n\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\n\n\nclass SingleCubeTexture extends TextureBase\n{\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\n\n\tprivate _samplerCube:SamplerCube;\n\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn SingleCubeTexture.assetType;\n\t}\n\n\t/**\n\t *\n\t * @returns {BitmapData}\n\t */\n\tpublic get samplerCube():SamplerCube\n\t{\n\t\treturn this._samplerCube;\n\t}\n\n\tpublic set samplerCube(value:SamplerCube)\n\t{\n\t\tif (this._samplerCube == value)\n\t\t\treturn;\n\n\t\tthis._samplerCube = value;\n\n\t\tthis.invalidateContent();\n\t}\n\n\tconstructor(source:SamplerCube);\n\tconstructor(source:ImageCube);\n\tconstructor(source:any)\n\t{\n\t\tsuper();\n\n\t\tif (source instanceof ImageCube)\n\t\t\tthis.samplerCube = new SamplerCube(source);\n\t\telse\n\t\t\tthis.samplerCube = source;\n\t}\n}\n\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\n\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\n\n/**\n *\n */\nclass TextureBase extends AssetBase implements IAsset\n{\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\n\n\tpublic _width:number = 1;\n\tpublic _height:number = 1;\n\n\tget width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tget height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\t/**\n\t *\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateContent():void\n\t{\n\t\tvar len:number = this._textureVO.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._textureVO[i].invalidate();\n\t}\n\n\t/**\n\t *\n\t * @private\n\t */\n\tpublic invalidateSize():void\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\twhile (this._textureVO.length)\n\t\t\tthis._textureVO[0].dispose();\n\t}\n\n\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.push(textureVO);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\n\t{\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\n\n\t\treturn textureVO;\n\t}\n\n\tpublic _setSize(width:number, height:number)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n}\n\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.CSSEntityCollector\n */\nclass CSSEntityCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n}\n\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\n\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * @class away.traverse.CollectorBase\n */\nclass CollectorBase\n{\n\tpublic scene:Scene;\n\n\tpublic _pEntityHead:EntityListItem;\n\tpublic _pEntityListItemPool:EntityListItemPool;\n\tpublic _pCamera:Camera;\n\tprivate _customCullPlanes:Array<Plane3D>;\n\tprivate _cullPlanes:Array<Plane3D>;\n\tprivate _numCullPlanes:number = 0;\n\tpublic _pNumEntities:number = 0;\n\tpublic _pNumInteractiveEntities:number = 0;\n\n\tpublic isEntityCollector:boolean;\n\n\tconstructor()\n\t{\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get camera():Camera\n\t{\n\t\treturn this._pCamera;\n\t}\n\n\tpublic set camera(value:Camera)\n\t{\n\t\tthis._pCamera = value;\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get cullPlanes():Array<Plane3D>\n\t{\n\t\treturn this._customCullPlanes;\n\t}\n\n\tpublic set cullPlanes(value:Array<Plane3D>)\n\t{\n\t\tthis._customCullPlanes = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get entityHead():EntityListItem\n\t{\n\t\treturn this._pEntityHead;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numEntities():number\n\t{\n\t\treturn this._pNumEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numInteractiveEntities():number\n\t{\n\t\treturn this._pNumInteractiveEntities;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\n\t\tthis._pEntityHead = null;\n\t\tthis._pEntityListItemPool.freeAll();\n\t}\n\n\t/**\n\t *\n\t * @param node\n\t * @returns {boolean}\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\n\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\treturn enter;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyEntity(entity:IEntity)\n\t{\n\t\tthis._pNumEntities++;\n\n\t\tif (entity._iIsMouseEnabled())\n\t\t\tthis._pNumInteractiveEntities++;\n\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\n\t\titem.entity = entity;\n\n\t\titem.next = this._pEntityHead;\n\t\tthis._pEntityHead = item;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\t//don't do anything here\n\t}\n}\n\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\n/**\n * @class away.traverse.EntityCollector\n */\nclass EntityCollector extends CollectorBase\n{\n\tpublic _pSkybox:Skybox;\n\tpublic _pLights:Array<LightBase>;\n\tprivate _directionalLights:Array<DirectionalLight>;\n\tprivate _pointLights:Array<PointLight>;\n\tprivate _lightProbes:Array<LightProbe>;\n\n\tpublic _pNumLights:number = 0;\n\n\tprivate _numDirectionalLights:number = 0;\n\tprivate _numPointLights:number = 0;\n\tprivate _numLightProbes:number = 0;\n\n\t/**\n\t *\n\t */\n\tpublic get directionalLights():Array<DirectionalLight>\n\t{\n\t\treturn this._directionalLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lightProbes():Array<LightProbe>\n\t{\n\t\treturn this._lightProbes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get lights():Array<LightBase>\n\t{\n\t\treturn this._pLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get pointLights():Array<PointLight>\n\t{\n\t\treturn this._pointLights;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get skyBox():Skybox\n\t{\n\t\treturn this._pSkybox;\n\t}\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._pLights = new Array<LightBase>();\n\t\tthis._directionalLights = new Array<DirectionalLight>();\n\t\tthis._pointLights = new Array<PointLight>();\n\t\tthis._lightProbes = new Array<LightProbe>();\n\n\t\tthis.isEntityCollector = true;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyDirectionalLight(entity:IEntity)\n\t{\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyLightProbe(entity:IEntity)\n\t{\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applyPointLight(entity:IEntity)\n\t{\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\n\t}\n\n\t/**\n\t *\n\t * @param entity\n\t */\n\tpublic applySkybox(entity:IEntity)\n\t{\n\t\tthis._pSkybox = <Skybox> entity;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clear()\n\t{\n\t\tsuper.clear();\n\n\t\tthis._pSkybox = null;\n\n\t\tif (this._pNumLights > 0)\n\t\t\tthis._pLights.length = this._pNumLights = 0;\n\n\t\tif (this._numDirectionalLights > 0)\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\n\n\t\tif (this._numPointLights > 0)\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\n\n\t\tif (this._numLightProbes > 0)\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\n\t}\n}\n\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\n\n/**\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\n * considered intersecting with the defined ray.\n *\n * @see away.partition.Partition\n * @see away.entities.IEntity\n *\n * @class away.traverse.RaycastCollector\n */\nclass RaycastCollector extends CollectorBase\n{\n\tprivate _rayPosition:Vector3D = new Vector3D();\n\tprivate _rayDirection:Vector3D = new Vector3D();\n\n\tpublic _iCollectionMark:number = 0;\n\n\t/**\n\t * Provides the starting position of the ray.\n\t */\n\tpublic get rayPosition():Vector3D\n\t{\n\t\treturn this._rayPosition;\n\t}\n\n\tpublic set rayPosition(value:Vector3D)\n\t{\n\t\tthis._rayPosition = value;\n\t}\n\n\t/**\n\t * Provides the direction vector of the ray.\n\t */\n\tpublic get rayDirection():Vector3D\n\t{\n\t\treturn this._rayDirection;\n\t}\n\n\tpublic set rayDirection(value:Vector3D)\n\t{\n\t\tthis._rayDirection = value;\n\t}\n\n\t/**\n\t * Creates a new RaycastCollector object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\n\t *\n\t * @param node The Partition3DNode object to frustum-test.\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\n\t}\n}\n\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\n\n/**\n * @class away.traverse.ShadowCasterCollector\n */\nclass ShadowCasterCollector extends CollectorBase\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic enterNode(node:NodeBase):boolean\n\t{\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\n\n\t\tif (!enter) {\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn super.enterNode(node);\n\t}\n}\n\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\n\n/**\n * Helper class for casting assets to usable objects\n */\nclass Cast\n{\n\tprivate static _colorNames:Object;\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\n\n\tprivate static _notClasses:Object = new Object();\n\tprivate static _classes:Object = new Object();\n\n\tpublic static string(data:any):string\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (typeof(data) == 'string')\n\t\t\treturn data;\n\n\t\treturn <string> data;\n\t}\n\n\tpublic static byteArray(data:any):ByteArray\n\t{\n\t\tif (typeof(data) == 'function')\n\t\t\tdata = new data;\n\n\t\tif (data instanceof ByteArray)\n\t\t\treturn data;\n\n\t\treturn <ByteArray> data;\n\t}\n\n\t//        public static xml(data:any):XML\n\t//        {\n\t//            if (typeof(data) == 'function')\n\t//                data = new data;\n\t//\n\t//            if (data is XML)\n\t//                return data;\n\t//\n\t//            return XML(data);\n\t//        }\n\n\tprivate static isHex(str:string):boolean\n\t{\n\t\tvar length:number /*int*/ = str.length;\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic static tryColor(data:any):number /*uint*/\n\t{\n\t\tif (typeof(data) == 'number' /*uint*/)\n\t\t\treturn Math.floor(<number> data);\n\n\t\tif (typeof(data) == 'string') {\n\t\t\tif (data == \"random\")\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\n\n\t\t\tif (this._colorNames == null) {\n\t\t\t\tthis._colorNames = new Object();\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\n\t\t\t}\n\n\t\t\tif (this._colorNames[data] != null)\n\t\t\t\treturn this._colorNames[data];\n\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\n\t\t\t\treturn parseInt(\"0x\" + data);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static color(data:any):number /*uint*/\n\t{\n\t\tvar result:number /*uint*/ = this.tryColor(data);\n\n\t\tif (result == null)\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\n\n\t\treturn result;\n\t}\n\n\tpublic static tryClass(name:string):any\n\t{\n\t\tif (this._notClasses[name])\n\t\t\treturn name;\n\n\t\tvar result:any = this._classes[name];\n\n\t\tif (result != null)\n\t\t\treturn result;\n\n\t\ttry {\n\t\t\tresult = window[name];\n\t\t\tthis._classes[name] = result;\n\t\t\treturn result;\n\t\t} catch (e /*ReferenceError*/) {\n\t\t}\n\n\t\tthis._notClasses[name] = true;\n\n\t\treturn name;\n\t}\n\n\tpublic static image2D(data:any):Image2D\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Image2D)\n\t\t\treturn data;\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\n\n\t\tif (data instanceof Sampler2D)\n\t\t\treturn (<Sampler2D> data).image2D;\n\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\n\t}\n\n\tpublic static bitmapTexture(data:any):Single2DTexture\n\t{\n\t\tif (data == null)\n\t\t\treturn null;\n\n\t\tif (typeof(data) == 'string')\n\t\t\tdata = this.tryClass(data);\n\n\t\tif (typeof(data) == 'function') {\n\t\t\ttry {\n\t\t\t\tdata = new data();\n\t\t\t} catch (e /*ArgumentError*/) {\n\t\t\t\tdata = new data(0, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (data instanceof Single2DTexture)\n\t\t\treturn data;\n\n\t\ttry {\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\n\t\t\treturn new Single2DTexture(bmd);\n\t\t} catch (e /*CastError*/) {\n\t\t}\n\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\n\t}\n}\n\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nclass SubGeometryUtils\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\t\n\tprivate static _indexSwap:Array<number> = new Array<number>();\n\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float4Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar index:number;\n\n\t\tvar x1:number, x2:number, x3:number;\n\t\tvar y1:number, y2:number, y3:number;\n\t\tvar z1:number, z2:number, z3:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\t\tvar d:number;\n\n\t\twhile (i < count) {\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx1 = positions[index];\n\t\t\ty1 = positions[index + 1];\n\t\t\tz1 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx2 = positions[index];\n\t\t\ty2 = positions[index + 1];\n\t\t\tz2 = positions[index + 2];\n\t\t\tindex = indices[i++]*positionDim;\n\t\t\tx3 = positions[index];\n\t\t\ty3 = positions[index + 1];\n\t\t\tz3 = positions[index + 2];\n\t\t\tdx1 = x3 - x1;\n\t\t\tdy1 = y3 - y1;\n\t\t\tdz1 = z3 - z1;\n\t\t\tdx2 = x2 - x1;\n\t\t\tdy2 = y2 - y1;\n\t\t\tdz2 = z2 - z1;\n\t\t\tcx = dz1*dy2 - dy1*dz2;\n\t\t\tcy = dx1*dz2 - dz1*dx2;\n\t\t\tcz = dy1*dx2 - dx1*dy2;\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\n\t\t\t// length of cross product = 2*triangle area\n\n\t\t\tfaceNormals[j++] = cx;\n\t\t\tfaceNormals[j++] = cy;\n\t\t\tfaceNormals[j++] = cz;\n\t\t\tfaceNormals[j++] = d;\n\t\t}\n\n\t\toutput.set(faceNormals, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar normals:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear normal values\n\t\twhile (i < len) {\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t\tnormals[i++] = 0;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\n\t\t//collect face normals\n\t\twhile (i < len) {\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\tnormals[index] += faceNormals[f1];\n\t\t\tnormals[index + 1] += faceNormals[f2];\n\t\t\tnormals[index + 2] += faceNormals[f3];\n\t\t\tf1 += 4;\n\t\t\tf2 += 4;\n\t\t\tf3 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise normals collections\n\t\twhile (i < len) {\n\t\t\tvx = normals[i];\n\t\t\tvy = normals[i + 1];\n\t\t\tvz = normals[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\tnormals[i++] = vx*d;\n\t\t\tnormals[i++] = vy*d;\n\t\t\tnormals[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(normals);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(count + offset);\n\t\telse if (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\t\tvar uvDim:number = uvAttributes.dimensions;\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar index1:number;\n\t\tvar index2:number;\n\t\tvar index3:number;\n\t\tvar vi:number;\n\t\tvar v0:number;\n\t\tvar dv1:number;\n\t\tvar dv2:number;\n\t\tvar denom:number;\n\t\tvar x0:number, y0:number, z0:number;\n\t\tvar dx1:number, dy1:number, dz1:number;\n\t\tvar dx2:number, dy2:number, dz2:number;\n\t\tvar cx:number, cy:number, cz:number;\n\n\t\t//multiply by dimension to get index length\n\t\tcount *= indexDim;\n\n\t\twhile (i < count) {\n\t\t\tindex1 = indices[i];\n\t\t\tindex2 = indices[i + 1];\n\t\t\tindex3 = indices[i + 2];\n\n\t\t\tv0 = uvs[index1*uvDim + 1];\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\n\n\t\t\tvi = index1*positionDim;\n\t\t\tx0 = positions[vi];\n\t\t\ty0 = positions[vi + 1];\n\t\t\tz0 = positions[vi + 2];\n\t\t\tvi = index2*positionDim;\n\t\t\tdx1 = positions[vi] - x0;\n\t\t\tdy1 = positions[vi + 1] - y0;\n\t\t\tdz1 = positions[vi + 2] - z0;\n\t\t\tvi = index3*positionDim;\n\t\t\tdx2 = positions[vi] - x0;\n\t\t\tdy2 = positions[vi + 1] - y0;\n\t\t\tdz2 = positions[vi + 2] - z0;\n\n\t\t\tcx = dv2*dx1 - dv1*dx2;\n\t\t\tcy = dv2*dy1 - dv1*dy2;\n\t\t\tcz = dv2*dz1 - dv1*dz2;\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\n\n\t\t\tfaceTangents[i++] = denom*cx;\n\t\t\tfaceTangents[i++] = denom*cy;\n\t\t\tfaceTangents[i++] = denom*cz;\n\t\t}\n\n\t\toutput.set(faceTangents, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\n\t{\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\n\n\t\tif (output == null)\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\n\n\t\tvar indexDim:number = indexAttributes.dimensions;\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar tangents:Float32Array = output.get(output.count);\n\n\t\tvar i:number = 0;\n\t\tvar len:number = output.count*outputDim;\n\n\t\t//clear tangent values\n\t\twhile (i < len) {\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t\ttangents[i++] = 0;\n\t\t}\n\n\t\tvar weight:number;\n\t\tvar index:number;\n\t\tvar f1:number = 0;\n\t\tvar f2:number = 1;\n\t\tvar f3:number = 2;\n\t\tvar f4:number = 3;\n\n\t\ti = 0;\n\t\tlen = indexAttributes.count*indexDim;\n\n\t\t//collect face tangents\n\t\twhile (i < len) {\n\t\t\tweight = faceNormals[f4];\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tindex = indices[i++]*outputDim;\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\n\t\t\ttangents[index] += faceTangents[f3]*weight;\n\t\t\tf1 += 3;\n\t\t\tf2 += 3;\n\t\t\tf3 += 3;\n\t\t\tf4 += 4;\n\t\t}\n\n\t\ti = 0;\n\t\tlen = output.count*outputDim;\n\t\tvar vx:number;\n\t\tvar vy:number;\n\t\tvar vz:number;\n\t\tvar d:number;\n\n\t\t//normalise tangents collections\n\t\twhile (i < len) {\n\t\t\tvx = tangents[i];\n\t\t\tvy = tangents[i + 1];\n\t\t\tvz = tangents[i + 2];\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\n\n\t\t\ttangents[i++] = vx*d;\n\t\t\ttangents[i++] = vy*d;\n\t\t\ttangents[i++] = vz*d;\n\t\t}\n\n\t\toutput.set(tangents);\n\n\t\treturn output;\n\t}\n\n\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] = j*.5;\n\t\t\tuvs[i++] = 1.0 - (j & 1);\n\n\t\t\tif (++j == 3)\n\t\t\t\tj = 0;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\n\t{\n\t\tif (output == null)\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\n\n\t\tvar index:number = 0;\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\n\n\t\twhile (index < count*4) {\n\t\t\tif (index/4 & 1) {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t} else {\n\t\t\t\tcolors[index] = 0xFF;\n\t\t\t\tcolors[index + 1] = 0xFF;\n\t\t\t\tcolors[index + 2] = 0xFF;\n\t\t\t\tcolors[index + 3] = 0xFF;\n\t\t\t}\n\n\t\t\tindex += 4;\n\t\t}\n\n\t\toutput.set(colors, offset);\n\n\t\treturn output;\n\t}\n\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar uvs:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tuvs[i++] *= scaleU;\n\t\t\tuvs[i++] *= scaleV;\n\t\t}\n\n\t\toutput.set(uvs, offset);\n\t}\n\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tif (output.count < count + offset)\n\t\t\toutput.count = count + offset;\n\n\t\tvar outputDim:number = output.dimensions;\n\n\t\tvar positions:Float32Array = output.get(count, offset);\n\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = count*outputDim;\n\n\t\twhile (i < len) {\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t\tpositions[i++] *= scale;\n\t\t}\n\n\t\toutput.set(positions, offset);\n\t}\n\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\n\t{\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\n\t\tvar positionDim:number = positionAttributes.dimensions;\n\n\t\tvar normals:Float32Array;\n\t\tvar normalDim:number;\n\n\t\tif (normalAttributes) {\n\t\t\tnormals = normalAttributes.get(count, offset);\n\t\t\tnormalDim = normalAttributes.dimensions;\n\t\t}\n\n\t\tvar tangents:Float32Array;\n\t\tvar tangentDim:number;\n\n\t\tif (tangentAttributes) {\n\t\t\ttangents = tangentAttributes.get(count, offset);\n\t\t\ttangentDim = tangentAttributes.dimensions;\n\t\t}\n\n\t\tvar i:number;\n\t\tvar i1:number;\n\t\tvar i2:number;\n\t\tvar vector:Vector3D = new Vector3D();\n\t\tvar invTranspose:Matrix3D;\n\n\t\tif (normalAttributes || tangentAttributes) {\n\t\t\tinvTranspose = transform.clone();\n\t\t\tinvTranspose.invert();\n\t\t\tinvTranspose.transpose();\n\t\t}\n\n\t\tvar vi0:number = 0;\n\t\tvar ni0:number = 0;\n\t\tvar ti0:number = 0;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\t// bake position\n\t\t\ti1 = vi0 + 1;\n\t\t\ti2 = vi0 + 2;\n\t\t\tvector.x = positions[vi0];\n\t\t\tvector.y = positions[i1];\n\t\t\tvector.z = positions[i2];\n\t\t\tvector = transform.transformVector(vector);\n\t\t\tpositions[vi0] = vector.x;\n\t\t\tpositions[i1] = vector.y;\n\t\t\tpositions[i2] = vector.z;\n\t\t\tvi0 += positionDim;\n\n\t\t\tif\t(normals) {\n\t\t\t\t// bake normal\n\t\t\t\ti1 = ni0 + 1;\n\t\t\t\ti2 = ni0 + 2;\n\t\t\t\tvector.x = normals[ni0];\n\t\t\t\tvector.y = normals[i1];\n\t\t\t\tvector.z = normals[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\tnormals[ni0] = vector.x;\n\t\t\t\tnormals[i1] = vector.y;\n\t\t\t\tnormals[i2] = vector.z;\n\t\t\t\tni0 += normalDim;\n\t\t\t}\n\n\t\t\tif (tangents) {\n\t\t\t\t// bake tangent\n\t\t\t\ti1 = ti0 + 1;\n\t\t\t\ti2 = ti0 + 2;\n\t\t\t\tvector.x = tangents[ti0];\n\t\t\t\tvector.y = tangents[i1];\n\t\t\t\tvector.z = tangents[i2];\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\n\t\t\t\tvector.normalize();\n\t\t\t\ttangents[ti0] = vector.x;\n\t\t\t\ttangents[i1] = vector.y;\n\t\t\t\ttangents[i2] = vector.z;\n\t\t\t\tti0 += tangentDim;\n\t\t\t}\n\t\t}\n\n\t\tpositionAttributes.set(positions, offset);\n\n\t\tif (normalAttributes)\n\t\t\tnormalAttributes.set(normals, offset);\n\n\t\tif (tangentAttributes)\n\t\t\ttangentAttributes.set(tangents, offset);\n\t}\n\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\n\t{\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\n\t\tvar numIndices:number = indexAttributes.length;\n\t\t\n\t\t//reset mappings\n\t\tindexMappings.length = 0;\n\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\n\t\t\treturn buffer;\n\n\t\tvar i:number;\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\n\t\tvar splitIndices:Array<number> = new Array<number>();\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\n\t\t\n\n\t\tindexSwap.length = numIndices;\n\t\tfor (i = 0; i < numIndices; i++)\n\t\t\tindexSwap[i] = -1;\n\n\t\tvar originalIndex:number;\n\t\tvar splitIndex:number;\n\t\tvar index:number = 0;\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\n\t\t\n\t\t// Loop over all triangles\n\t\t\n\t\ti = 0;\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\n\t\t\toriginalIndex = indices[i];\n\n\t\t\tif (indexSwap[originalIndex] >= 0) {\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\n\t\t\t} else {\n\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t// needs to be copied from the long list.\n\t\t\t\tsplitIndex = index++;\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\n\t\t\t}\n\n\t\t\t// Store new index, which may have come from the swap look-up,\n\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\tsplitIndices[i++] = splitIndex;\n\t\t}\n\t\t\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\n\t\t\n\t\tindexAttributes = indexAttributes.clone(buffer);\n\t\tindexAttributes.set(splitIndices);\n\t\t\n\t\treturn buffer;\n\t}\n\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\n\t{\n\t\tif (!indexMappings.length)\n\t\t\treturn vertexBuffer;\n\n\t\tvar stride:number = vertexBuffer.stride;\n\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\n\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\n\t\tvar splitIndex:number;\n\t\tvar originalIndex:number;\n\t\tvar i:number = 0;\n\t\tvar j:number = 0;\n\t\tvar len:number = indexMappings.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tsplitIndex = i*stride;\n\t\t\toriginalIndex = indexMappings[i]*stride;\n\n\t\t\tfor (j = 0; j < stride; j++)\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\t\t}\n\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\n\t\tvertexBuffer.bufferView = splitVerts;\n\n\t\treturn vertexBuffer;\n\t}\n}\n\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Timeline.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/MovieClip.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/events/TouchEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/FrameScriptManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/managers/TouchManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/BasicPartition.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/ContainerNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/PartitionBase.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SceneGraphPartition.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/ContainerNodePool.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/adapters/IDisplayObjectAdapter",
    "awayjs-display/lib/adapters/IMovieClipAdapter",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "devisions",
    "_positions",
    "_concatenatedBuffer",
    "getView",
    "_curves",
    "count",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "getCell",
    "x",
    "y",
    "index_x",
    "Math",
    "floor",
    "minx",
    "conversionX",
    "index_y",
    "miny",
    "conversionY",
    "buildGrid",
    "positions",
    "posDim",
    "dimensions",
    "Number",
    "MAX_VALUE",
    "maxx",
    "maxy",
    "k",
    "width",
    "height",
    "maxDevisions",
    "ceil",
    "sqrt",
    "numVertices",
    "min",
    "numCells",
    "cellWidth",
    "cellHeight",
    "id0",
    "id1",
    "id2",
    "ax",
    "ay",
    "bx",
    "by",
    "cx",
    "cy",
    "cells",
    "Array",
    "left",
    "right",
    "max",
    "top",
    "bottom",
    "min_index_x",
    "min_index_y",
    "max_index_x",
    "max_index_y",
    "j",
    "index",
    "nodes",
    "push",
    "hitTestPoint",
    "z",
    "curveDim",
    "curves",
    "cell",
    "nodeCount",
    "dx",
    "dy",
    "nx",
    "ny",
    "dot",
    "curvex",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "v",
    "w",
    "uu",
    "vv",
    "az",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "autoDeriveUVs",
    "indices",
    "setIndices",
    "uvs",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "scale",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "BoundsType",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "DisplayObject",
    "_this",
    "_queuedEvents",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pIsEntity",
    "_pIsContainer",
    "_sessionID",
    "_matrix3D",
    "_inverseSceneTransform",
    "_scenePosition",
    "_explicitVisibility",
    "_explicitMaskId",
    "_pImplicitVisibility",
    "_pImplicitMaskId",
    "_pImplicitMaskIds",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_skewX",
    "_skewY",
    "_skewZ",
    "_scaleX",
    "_scaleY",
    "_scaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pos",
    "_rot",
    "_ske",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "_entityNodes",
    "_globalColorTransform",
    "_inheritColorTransform",
    "_tempVector3D",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_boundsType",
    "AXIS_ALIGNED_BOX",
    "_adapter",
    "_invalidateGlobalColorTransform",
    "_globalColorTransformDirty",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "scaleZ",
    "val",
    "_depth",
    "_setScaleZ",
    "rotationX",
    "rotationY",
    "rotationZ",
    "scaleY",
    "_height",
    "_setScaleY",
    "_pParent",
    "getChildIndex",
    "_inverseSceneTransformDirty",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_loaderInfo",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "dispatchEvent",
    "PARTITION_CHANGED",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "_elementsDirty",
    "updateElements",
    "RADIANS_TO_DEGREES",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "_width",
    "_setScaleX",
    "skewX",
    "invalidateSkew",
    "skewY",
    "skewZ",
    "_scenePositionDirty",
    "transformVector",
    "copyColumnTo",
    "_pSceneTransformDirty",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "_pUpdateImplicitMaskId",
    "_iAssignedMaskId",
    "_explicitMasks",
    "maskId",
    "_pUpdateImplicitMasks",
    "_iAssignedMasks",
    "scaleX",
    "rawData",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SKEW_CHANGED",
    "_listenToSkewChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "newInstance",
    "_iMatrix3D",
    "masks",
    "concat",
    "adapter",
    "colorTransform",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "transformBox",
    "inverseSceneTransform",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "pos",
    "globalToLocal3D",
    "position",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "shapeFlag",
    "maskFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "reset_to_init_state",
    "visible",
    "clear",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "hasEventListener",
    "translate",
    "distance",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_matrix3DDirty",
    "_pUpdateMatrix3D",
    "_pivotDirty",
    "_pUpdatePivot",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "isEntity",
    "invalidatePartition",
    "_sceneTransformChanged",
    "queueDispatch",
    "partition",
    "scene",
    "sceneChanged",
    "_iUnregisterPartition",
    "_iUnregisterEntity",
    "_iRegisterPartition",
    "_iRegisterEntity",
    "_sceneChanged",
    "_pImplicitMasks",
    "numLayers",
    "numChildren",
    "implicitChildren",
    "implicitChildIds",
    "appendTranslation",
    "_iController",
    "updateController",
    "_iIsRoot",
    "prepend",
    "_positionDirty",
    "_rotationDirty",
    "_skewDirty",
    "_scaleDirty",
    "_iAddRenderable",
    "renderable",
    "_iRemoveRenderable",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "update",
    "_iMasksConfig",
    "_iIsMouseEnabled",
    "_iSetScene",
    "_applyRenderer",
    "renderer",
    "invalidateMatrix3D",
    "_positionChanged",
    "matrixDirty",
    "_rotationChanged",
    "_skewChanged",
    "invalidateScale",
    "_scaleChanged",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "_globalColorTransformChanged",
    "elements",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/bounds/BoundsType",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "AbstractMethodError",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "Uint16Array",
    "setThickness",
    "thickness",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "awayjs-display/lib/base/Timeline",
    "FrameScriptManager",
    "Timeline",
    "numKeyFrames",
    "keyframe_indices",
    "_potentialPrototypes",
    "_labels",
    "_framescripts",
    "_framescripts_translated",
    "init",
    "frame_command_indices",
    "frame_recipe",
    "keyframe_durations",
    "keyframe_firstframes",
    "keyframe_constructframes",
    "frame_cnt",
    "ic",
    "ic2",
    "keyframe_cnt",
    "last_construct_frame",
    "duration",
    "get_framescript",
    "keyframe_index",
    "add_framescript",
    "regexIndexOf",
    "str",
    "regex",
    "startpos",
    "substring",
    "search",
    "add_script_for_postcontruct",
    "target_mc",
    "keyframe_idx",
    "scriptPass1",
    "evalScript",
    "add_script_to_queue",
    "add_script_to_queue_pass2",
    "getPotentialChildPrototype",
    "getKeyframeIndexForFrameIndex",
    "frame_index",
    "getPotentialChilds",
    "getPotentialChildInstance",
    "this_clone",
    "name",
    "registerPotentialChild",
    "jumpToLabel",
    "label",
    "key_frame_index",
    "currentFrameIndex",
    "gotoFrame",
    "frameIndex",
    "current_keyframe_idx",
    "constructedKeyFrameIndex",
    "target_keyframe_idx",
    "firstframe",
    "set_currentFrameIndex",
    "constructNextFrame",
    "break_frame_idx",
    "jump_forward",
    "jump_gap",
    "start_construct_idx",
    "target_childs_dic",
    "target_sessionIDs_dic",
    "child",
    "getChildAt",
    "getChildDepth",
    "update_indices",
    "update_cnt",
    "frame_command_idx",
    "start_index",
    "idx",
    "command_index_stream",
    "command_length_stream",
    "remove_child_stream",
    "add_child_stream",
    "target_child_sessionIDS",
    "key",
    "removeChildAt",
    "addChildAtDepth",
    "parseInt",
    "update_childs",
    "queueScript",
    "constructed_keyFrameIndex",
    "new_keyFrameIndex",
    "remove_childs_continous",
    "add_childs_continous",
    "sourceMovieClip",
    "removeChildAtDepth",
    "props_start_idx",
    "props_len",
    "props_end_index",
    "value_start_index",
    "props_type",
    "doit",
    "end_index",
    "childID",
    "update_child_stream",
    "getChildAtSessionID",
    "isBlockedByScript",
    "update_child_props_indices_stream",
    "update_child_props_length_stream",
    "property_type_stream",
    "property_index_stream",
    "new_matrix",
    "properties_stream_f32_mtx_all",
    "new_ct",
    "redMultiplier",
    "properties_stream_f32_ct",
    "greenMultiplier",
    "blueMultiplier",
    "redOffset",
    "greenOffset",
    "blueOffset",
    "alphaOffset",
    "mask_length",
    "properties_stream_int",
    "mask",
    "mouseEnabled",
    "isAsset",
    "properties_stream_strings",
    "registerScriptObject",
    "addButtonListeners",
    "isVisibilityByScript",
    "Boolean",
    "properties_stream_f32_mtx_scale_rot",
    "properties_stream_f32_mtx_pos",
    "awayjs-display/lib/managers/FrameScriptManager",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "_jointWeights",
    "_normals",
    "setNormals",
    "_tangents",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "normals",
    "tangents",
    "secondaryUVs",
    "jointsPerVertex",
    "jointIndices",
    "jointWeights",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "SPHERE",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_containerNodes",
    "_mouseChildren",
    "_depths",
    "_nextHighestDepth",
    "_children",
    "addChild",
    "addChildAt",
    "replace",
    "removeChildAtInternal",
    "getDepthIndexInternal",
    "getNextHighestDepth",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "getChildAtDepth",
    "getChildByName",
    "childIndex",
    "_nextHighestDepthDirty",
    "_updateNextHighestDepth",
    "getObjectsUnderPoint",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "setEmpty",
    "masksFlag",
    "numMasks",
    "maskHit",
    "_hitTestPointInternal",
    "_iAddContainerNode",
    "_iRemoveContainerNode",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "LoaderSession",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "_loaderSession",
    "lib",
    "getInstance",
    "disposeLoaderSession",
    "_disposeLoaderSession",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "_getLoaderSession",
    "loadData",
    "data",
    "getLoaderSession",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "_loaderSessionGarbage",
    "_gcTimeoutIID",
    "setTimeout",
    "loaderSessionGC",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "stop",
    "clearTimeout",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/LoaderSession",
    "awayjs-display/lib/containers/Scene",
    "BasicPartition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "traversePartitions",
    "traverser",
    "traverse",
    "awayjs-display/lib/partition/BasicPartition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onPartitionChangedDelegate",
    "_onPartitionChanged",
    "_onProjectionChangedDelegate",
    "_onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "_onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "_onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pMouseX",
    "_pMouseY",
    "getLocalMouseX",
    "unproject",
    "getLocalMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_pCamera",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "originX",
    "originY",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "_pControllerDirty",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "_applyColorTransform",
    "_parentColorTransform",
    "testBillboardCollision",
    "_iApplyRenderableOwner",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_tempPoint",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "tmp_maxZ",
    "tmp_minZ",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "subGeometriesCount",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/MovieClip",
    "Event",
    "MouseEvent",
    "MovieClip",
    "timeline",
    "_loop",
    "_active_session_ids",
    "_potentialInstances",
    "_currentFrameIndex",
    "_constructedKeyFrameIndex",
    "_isInit",
    "_isPlaying",
    "_isButton",
    "_enterFrame",
    "ENTER_FRAME",
    "inheritColorTransform",
    "_onMouseOver",
    "_onMouseOut",
    "_onMouseDown",
    "_onMouseUp",
    "_timeline",
    "numFrames",
    "_skipAdvance",
    "exit_frame",
    "reset",
    "freeFromScript",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_DOWN",
    "MOUSE_UP",
    "removeButtonListeners",
    "sessionID",
    "unregisterScriptObject",
    "play",
    "advanceFrame",
    "execute_queue",
    "execute_intervals",
    "skipChildren",
    "oldFrameIndex",
    "advance",
    "advanceChildren",
    "logHierarchy",
    "printHierarchyName",
    "console",
    "log",
    "awayjs-core/lib/events/Event",
    "awayjs-display/lib/events/MouseEvent",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextFieldType",
    "TextField",
    "_text",
    "STATIC",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "toString",
    "reConstruct",
    "_textFormat",
    "_textColor",
    "_textInteractionMode",
    "_textWidth",
    "_textHeight",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "additional_margin_x",
    "offset_x",
    "additional_margin_y",
    "offset_y",
    "y_offset",
    "prev_char",
    "textlines",
    "text",
    "split",
    "tl",
    "textlines2",
    "t2",
    "line_width",
    "c_cnt",
    "font_chars",
    "font_chars_scale",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "fallback_font_table",
    "this_subGeom",
    "subgeom",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "get_whitespace_width",
    "x_offset",
    "align",
    "positions2",
    "curveData2",
    "uv_values",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textWidth",
    "textHeight",
    "textFormat",
    "awayjs-display/lib/text/TextFieldType",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "_camera",
    "object",
    "VISIBLITY_UPDATED",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/events/TouchEvent",
    "TouchEvent",
    "TOUCH_END",
    "TOUCH_BEGIN",
    "TOUCH_MOVE",
    "TOUCH_OUT",
    "TOUCH_OVER",
    "awayjs-display/lib/factories/ITimelineSceneGraphFactory",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BitmapImageCube",
    "BasicMaterial",
    "Single2DTexture",
    "SingleCubeTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "_defaultColorMaterial",
    "createDefaultColorMaterial",
    "_defaultCubeTextureMaterial",
    "createDefaultCubeTextureMaterial",
    "_defaultTextureMaterial",
    "createDefaultTextureMaterial",
    "getDefaultTexture",
    "_defaultCubeTexture",
    "createDefaultCubeTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "_defaultBitmapImageCube",
    "createCheckeredBitmapImageCube",
    "draw",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-core/lib/data/BitmapImageCube",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "setInterval",
    "func",
    "_intervalID",
    "_active_intervals",
    "clearInterval",
    "mc",
    "script",
    "_queued_mcs_pass2",
    "_queued_mcs",
    "_queued_scripts",
    "_queued_scripts_pass2",
    "caller",
    "err",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "_mouseMoveEvent",
    "dispatcher",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "preventDefault",
    "bounds",
    "mouseX",
    "changedTouches",
    "mouseY",
    "getBoundingClientRect",
    "awayjs-display/lib/managers/TouchManager",
    "AwayTouchEvent",
    "TouchManager",
    "_updateDirty",
    "_touchOut",
    "_touchBegin",
    "_touchMove",
    "_touchEnd",
    "_touchOver",
    "_touchPoints",
    "_touchPointFromId",
    "_iCollidingObjectFromTouchId",
    "_previousCollidingObjectFromTouchId",
    "onTouchBeginDelegate",
    "onTouchBegin",
    "onTouchMoveDelegate",
    "onTouchMove",
    "onTouchEndDelegate",
    "onTouchEnd",
    "forceTouchMove",
    "fireTouchEvents",
    "_numTouchPoints",
    "_touchPoint",
    "_touchMoveEvent",
    "touch",
    "touchPointID",
    "TouchPoint",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "NodeBase",
    "PartitionBase",
    "_rootNode",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/PartitionBase",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/ContainerNode",
    "ContainerNode",
    "container",
    "isContainerNode",
    "_childDepths",
    "_childMasks",
    "_numChildMasks",
    "_pool",
    "_container",
    "_partition",
    "numEntities",
    "_pImplicitDebugVisible",
    "enterNode",
    "_pEntityNode",
    "_pNumChildNodes",
    "_pChildNodes",
    "isEntityCollector",
    "applyEntity",
    "_pDebugEntity",
    "findParentForNode",
    "node",
    "isContainer",
    "getItem",
    "iAddNode",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "iRemoveNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "applyDirectionalLight",
    "isCastingShadow",
    "_entity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "updateDebugEntity",
    "awayjs-display/lib/partition/IDisplayObjectNode",
    "awayjs-display/lib/partition/INode",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_explicitDebugVisible",
    "_debugChildrenVisible",
    "applyDebugEntity",
    "pop",
    "EntityNodePool",
    "_updatesMade",
    "_entityNodePool",
    "updateEntities",
    "iMarkForUpdate",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "disposeItem",
    "awayjs-display/lib/pool/EntityNodePool",
    "awayjs-display/lib/partition/PointLightNode",
    "PointLightNode",
    "pointLight",
    "_pointLight",
    "applyPointLight",
    "awayjs-display/lib/partition/SceneGraphPartition",
    "ContainerNodePool",
    "SceneGraphPartition",
    "rootContainer",
    "_containerNodePool",
    "awayjs-display/lib/pool/ContainerNodePool",
    "awayjs-display/lib/partition/SkyboxNode",
    "SkyboxNode",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "numElements",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "_view",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "bestCollisionVO",
    "updateLocalPosition",
    "getMasksCollision",
    "children",
    "layerHit",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "displayObjectContainer",
    "containerNode",
    "_classPool",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "registerClass",
    "entityNodeClass",
    "addDefaults",
    "main",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "subMeshClass",
    "classPool",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "_offset_x",
    "_offset_y",
    "get_font_chars",
    "_font_em_size",
    "set_whitespace_width",
    "_whitespace_width",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumEntities",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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mB,OACpC71E,MAAK61E,YAAY,gBAAkB,OACnC71E,MAAK61E,YAAY,QAAU,GAC3B71E,MAAK61E,YAAY,YAAc,GAC/B71E,MAAK61E,YAAY,cAAgB,GACjC71E,MAAK61E,YAAY,QAAU,GAC3B71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,eAAiB,KAClC71E,MAAK61E,YAAY,gBAAkB,OACnC71E,MAAK61E,YAAY,WAAa,OAC9B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,iBAAmB,QACpC71E,MAAK61E,YAAY,mBAAqB,OACtC71E,MAAK61E,YAAY,iBAAmB,OACpC71E,MAAK61E,YAAY,YAAc,KAC/B71E;KAAK61E,YAAY,QAAU,KAC3B71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,iBAAmB,KACpC71E,MAAK61E,YAAY,QAAU,KAC3B71E,MAAK61E,YAAY,QAAU,KAC3B71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,oBAAsB,OACvC71E,MAAK61E,YAAY,gBAAkB,OACnC71E,MAAK61E,YAAY,kBAAoB,OACrC71E,MAAK61E,YAAY,YAAc,OAC/B71E,MAAK61E,YAAY,aAAe,KAChC71E,MAAK61E,YAAY,SAAW,KAC5B71E,MAAK61E,YAAY,eAAiB,OAClC71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,QAAU,KAC3B71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,eAAiB,QAClC71E,MAAK61E,YAAY,eAAiB,QAClC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,eAAiB,KAClC71E,MAAK61E,YAAY,qBAAuB,KACxC71E,MAAK61E,YAAY,kBAAoB,OACrC71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,SAAW,OAC5B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,iBAAmB,QACpC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,QAAU,QAC3B71E,MAAK61E,YAAY,UAAY,QAC7B71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,iBAAmB,QACpC71E,MAAK61E,YAAY,kBAAoB,QACrC71E,MAAK61E,YAAY,YAAc,QAC/B71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,eAAiB,QAClC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,OAAS,QAC1B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,UAAY,QAC7B71E,MAAK61E,YAAY,eAAiB,OAClC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,QAAU,QAC3B71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,WAAa,OAC9B71E,MAAK61E,YAAY,UAAY,OAC7B71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,UAAY,QAC7B71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,eAAiB,QAClC71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,UAAY,QAC7B71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,UAAY,QAC7B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,WAAa,QAC9B71E,MAAK61E,YAAY,OAAS,QAC1B71E,MAAK61E,YAAY,YAAc,QAC/B71E,MAAK61E,YAAY,WAAa,QAC9B71E,MAAK61E,YAAY,WAAa,QAC9B71E,MAAK61E,YAAY,WAAa,QAC9B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,QAAU,QAC3B71E,MAAK61E,YAAY,iBAAmB,QACpC71E,MAAK61E,YAAY,mBAAqB,QACtC71E,MAAK61E,YAAY,UAAY,OAC7B71E,MAAK61E,YAAY,eAAiB,OAClC71E,MAAK61E,YAAY,gBAAkB,OACnC71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,UAAY,OAC7B71E,MAAK61E,YAAY,cAAgB,OACjC71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,gBAAkB,QACnC71E,MAAK61E,YAAY,UAAY,QAC7B71E,MAAK61E,YAAY,UAAY,QAC7B71E,MAAK61E,YAAY,QAAU,QAC3B71E,MAAK61E,YAAY,WAAa,QAC9B71E,MAAK61E,YAAY,YAAc,QAC/B71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,YAAc,QAC/B71E,MAAK61E,YAAY,wBAA0B,QAC3C71E,MAAK61E,YAAY,gBAAkB,QACnC71E,MAAK61E,YAAY,YAAc,QAC/B71E,MAAK61E,YAAY,eAAiB,QAClC71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,eAAiB,QAClC71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,WAAa,QAC9B71E,MAAK61E,YAAY,gBAAkB,QACnC71E,MAAK61E,YAAY,UAAY,QAC7B71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,YAAc,QAC/B71E,MAAK61E,YAAY,iBAAmB,QACpC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,QAAU,QAC3B71E,MAAK61E,YAAY,SAAW,QAC5B71E,MAAK61E,YAAY,cAAgB,QACjC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,aAAe,QAChC71E,MAAK61E,YAAY,UAAY,QAC7B71E,MAAK61E,YAAY,YAAc,QAC/B71E,MAAK61E,YAAY,QAAU,OAC3B71E,MAAK61E,YAAY,kBAAoB,OACrC71E,MAAK61E,YAAY,aAAe,OAChC71E,MAAK61E,YAAY,WAAa,OAC9B71E,MAAK61E,YAAY,iBAAmB,OACpC71E,MAAK61E,YAAY,SAAW,CAC5B71E,MAAK61E,YAAY,eAAiB,WAGnC,GAAI71E,KAAK61E,YAAYp4C,IAAS,KAC7B,MAAOz9B,MAAK61E,YAAYp4C,EAEzB,IAAeA,EAAMl+B,QAAU,GAAMS,KAAKw1E,MAAM/3C,GAC/C,MAAOlR,UAAS,KAAOkR,GAGzB,MAAO,MAGM43C,GAAAtqC,MAAd,SAAoBtN,GAEnB,GAAImnB,GAAyB5kD,KAAK21E,SAASl4C,EAE3C,IAAImnB,GAAU,KACb,KAAM,IAAIV,GAAU,wBAA0BzmB,EAE/C,OAAOmnB,GAGMywB,GAAAS,SAAd,SAAuB3rD,GAEtB,GAAInqB,KAAK+1E,YAAY5rD,GACpB,MAAOA,EAER,IAAIy6B,GAAa5kD,KAAKg2E,SAAS7rD,EAE/B,IAAIy6B,GAAU,KACb,MAAOA,EAER,KACCA,EAASqxB,OAAO9rD,EAChBnqB,MAAKg2E,SAAS7rD,GAAQy6B,CACtB,OAAOA,GACN,MAAOpmD,IAGTwB,KAAK+1E,YAAY5rD,GAAQ,IAEzB,OAAOA,GAGMkrD,GAAAtgB,QAAd,SAAsBt3B,GAErB,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOz9B,KAAK81E,SAASr4C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOj/B,GACRi/B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgB4wB,GACnB,MAAO5wB,EAER,IAAIA,YAAgB4pB,GACnB5pB,EAA0BA,EAAMgzB,SAEjC,IAAIhzB,YAAgBg1C,GACnB,MAAoBh1C,GAAMs3B,OAE3B,MAAM,IAAI7Q,GAAU,gCAAkCzmB,GAGzC43C,GAAAa,cAAd,SAA4Bz4C,GAE3B,GAAIA,GAAQ,KACX,MAAO,KAER,UAAU,IAAU,SACnBA,EAAOz9B,KAAK81E,SAASr4C,EAEtB,UAAU,IAAU,WAAY,CAC/B,IACCA,EAAO,GAAIA,GACV,MAAOj/B,GACRi/B,EAAO,GAAIA,GAAK,EAAG,IAIrB,GAAIA,YAAgB4pB,GACnB,MAAO5pB,EAER,KACC,GAAI04C,GAAcd,EAAKtgB,QAAQt3B,EAC/B,OAAO,IAAI4pB,GAAgB8uB,GAC1B,MAAO33E,IAGT,KAAM,IAAI0lD,GAAU,kCAAoCzmB,GA1S1C43C,GAAAI,UAAmB,wBAEnBJ,GAAAU,YAAqB,GAAIp1E,OACzB00E,GAAAW,SAAkB,GAAIr1E,OAyStC,OAAA00E,KAEA51E,GAAcJ,QAALg2E,IlI06nBNzmB,+BAA+BxtD,UAAU4xE,iCAAiC5xE,UAAUg1E,kCAAkCh1E,UAAU6iD,sCAAsC,sCAAsC6E,8CAA8C,gDAAgDh/C,6CAA6C,SAASvL,EAAQkB,EAAOJ,GmIruoBlX,GAAOwsE,GAAgBttE,EAAa,8CAIpC,IAAOoD,GAAgBpD,EAAa,8CACpC,IAAOmD,GAAgBnD,EAAa,8CACpC,IAAO83E,GAAgB93E,EAAa,8CACpC,IAAOilB,GAAejlB,EAAa,6CAEnC,IAAOyM,GAAQzM,EAAe,gCAE9B,IAAMsD,GAAgB,WAAtB,QAAMA,MAQSA,EAAAkxB,oBAAd,SAAkCujD,EAAkCC,EAAqCC,EAAyB9zE,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/I,GAAIW,GAAsB2tE,EAAgBz1E,IAAI6B,EAAOsF,EACrD,IAAIpE,GAAyB2yE,EAAmB11E,IAAI01E,EAAmB7zE,MAEvE,IAAI8zE,GAAU,KACbA,EAAS,GAAIH,GAAiB3zE,EAAQsF,OAClC,IAAIwuE,EAAO9zE,MAAQA,EAAQsF,EAC/BwuE,EAAO9zE,MAAQA,EAAQsF,CAExB,IAAIyuE,GAAkBH,EAAgBxyE,UACtC,IAAI4yE,GAAqBH,EAAmBzyE,UAE5C,IAAI6yE,GAA2BH,EAAO31E,IAAI6B,EAAOsF,EAGjDtF,IAAS+zE,CAET,IAAIz3E,GAAW,CACf,IAAIkH,GAAW,CACf,IAAIC,EAEJ,IAAIywE,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAWC,EAAWC,CAC1B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIryE,GAAWC,EAAWmwB,CAC1B,IAAIx1B,EAEJ,OAAOjB,EAAI0D,EAAO,CACjByD,EAAQwC,EAAQ3J,KAAK03E,CACrBE,GAAKhzE,EAAUuC,EACf4wE,GAAKnzE,EAAUuC,EAAQ,EACvB+wE,GAAKtzE,EAAUuC,EAAQ,EACvBA,GAAQwC,EAAQ3J,KAAK03E,CACrBG,GAAKjzE,EAAUuC,EACf6wE,GAAKpzE,EAAUuC,EAAQ,EACvBgxE,GAAKvzE,EAAUuC,EAAQ,EACvBA,GAAQwC,EAAQ3J,KAAK03E,CACrBI,GAAKlzE,EAAUuC,EACf8wE,GAAKrzE,EAAUuC,EAAQ,EACvBixE,GAAKxzE,EAAUuC,EAAQ,EACvBkxE,GAAMP,EAAKF,CACXU,GAAML,EAAKF,CACXQ,GAAMH,EAAKF,CACXM,GAAMX,EAAKD,CACXa,GAAMT,EAAKD,CACXW,GAAMP,EAAKD,CACX7xE,GAAKkyE,EAAIE,EAAMH,EAAII,CACnBpyE,GAAK+xE,EAAIK,EAAMH,EAAIC,CACnB/hD,GAAK6hD,EAAIE,EAAMH,EAAII,CACnBx3E,GAAImD,KAAKoB,KAAKa,EAAGA,EAAKC,EAAGA,EAAKmwB,EAAGA,EAGjCkhD,GAAYzwE,KAAOb,CACnBsxE,GAAYzwE,KAAOZ,CACnBqxE,GAAYzwE,KAAOuvB,CACnBkhD,GAAYzwE,KAAOjG,EAGpBu2E,EAAO7zE,IAAIg0E,EAAa3uE,EAExB,OAAOwuE,GAGM30E,GAAAiwB,gBAAd,SAA8BwkD,EAAkCqB,EAAuCnB,EAAyBz0E,GAE/H,GAAI4G,GAAsB2tE,EAAgBz1E,IAAIy1E,EAAgB5zE,MAC9D,IAAIi0E,GAA2BgB,EAAqB92E,IAAI82E,EAAqBj1E,MAE7E,IAAI8zE,GAAU,KACbA,EAAS,GAAI90E,GAAiBK,EAE/B,IAAI00E,GAAkBH,EAAgBxyE,UACtC,IAAI8zE,GAAmBpB,EAAO1yE,UAE9B,IAAI0uB,GAAuBgkD,EAAO31E,IAAI21E,EAAO9zE,MAE7C,IAAI1D,GAAW,CACf,IAAI+Q,GAAaymE,EAAO9zE,MAAMk1E,CAG9B,OAAO54E,EAAI+Q,EAAK,CACfyiB,EAAQxzB,KAAO,CACfwzB,GAAQxzB,KAAO,CACfwzB,GAAQxzB,KAAO,EAGhBA,EAAI,CACJ+Q,GAAMumE,EAAgB5zE,MAAM+zE,CAC5B,IAAItwE,EACJ,IAAI0xE,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAGhB,OAAO/4E,EAAI+Q,EAAK,CACf5J,EAAQwC,EAAQ3J,KAAK44E,CACrBplD,GAAQrsB,IAAUwwE,EAAYkB,EAC9BrlD,GAAQrsB,EAAQ,IAAMwwE,EAAYmB,EAClCtlD,GAAQrsB,EAAQ,IAAMwwE,EAAYoB,EAClC5xE,GAAQwC,EAAQ3J,KAAK44E,CACrBplD,GAAQrsB,IAAUwwE,EAAYkB,EAC9BrlD,GAAQrsB,EAAQ,IAAMwwE,EAAYmB,EAClCtlD,GAAQrsB,EAAQ,IAAMwwE,EAAYoB,EAClC5xE,GAAQwC,EAAQ3J,KAAK44E,CACrBplD,GAAQrsB,IAAUwwE,EAAYkB,EAC9BrlD,GAAQrsB,EAAQ,IAAMwwE,EAAYmB,EAClCtlD,GAAQrsB,EAAQ,IAAMwwE,EAAYoB,EAClCF,IAAM,CACNC,IAAM,CACNC,IAAM,EAGP/4E,EAAI,CACJ+Q,GAAMymE,EAAO9zE,MAAMk1E,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIj4E,EAGJ,OAAOjB,EAAI+Q,EAAK,CACfioE,EAAKxlD,EAAQxzB,EACbi5E,GAAKzlD,EAAQxzB,EAAI,EACjBk5E,GAAK1lD,EAAQxzB,EAAI,EACjBiB,GAAI,EAAImD,KAAKoB,KAAKwzE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErC1lD,GAAQxzB,KAAOg5E,EAAG/3E,CAClBuyB,GAAQxzB,KAAOi5E,EAAGh4E,CAClBuyB,GAAQxzB,KAAOk5E,EAAGj4E,EAGnBu2E,EAAO7zE,IAAI6vB,EAEX,OAAOgkD,GAGM30E,GAAAixB,qBAAd,SAAmCwjD,EAAkCC,EAAqC4B,EAA+B3B,EAAyB9zE,EAAcsF,EAAmBowE,GAAnB,GAAApwE,QAAA,GAAiB,CAAjBA,EAAA,EAAmB,GAAAowE,QAAA,GAA8B,CAA9BA,EAAA,MAElM,GAAIzvE,GAAsB2tE,EAAgBz1E,IAAI6B,EAAOsF,EACrD,IAAIpE,GAAyB2yE,EAAmB11E,IAAI01E,EAAmB7zE,MACvE,IAAImG,GAAmBsvE,EAAat3E,IAAIs3E,EAAaz1E,MAErD,IAAI8zE,GAAU,KACbA,EAAS,GAAI90E,GAAiBgB,EAAQsF,OAClC,IAAIwuE,EAAO9zE,MAAQA,EAAQsF,EAC/BwuE,EAAO9zE,MAAQA,EAAQsF,CAExB,IAAI0uE,GAAqBH,EAAmBzyE,UAC5C,IAAI29D,GAAe0W,EAAar0E,UAChC,IAAI2yE,GAAkBH,EAAgBxyE,UAEtC,IAAIu0E,GAA4B7B,EAAO31E,IAAI6B,EAAOsF,EAElD,IAAIhJ,GAAW,CACf,IAAIm7B,EACJ,IAAIC,EACJ,IAAIk+C,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,GAAWC,EAAWC,CAC1B,IAAIzB,GAAYC,EAAYC,CAC5B,IAAIC,GAAYC,EAAYC,CAC5B,IAAIryE,GAAWC,EAAWmwB,CAG1B/yB,IAAS+zE,CAET,OAAOz3E,EAAI0D,EAAO,CACjBy3B,EAASxxB,EAAQ3J,EACjBo7B,GAASzxB,EAAQ3J,EAAI,EACrBs5E,GAAS3vE,EAAQ3J,EAAI,EAErBw5E,GAAK3vE,EAAIsxB,EAAOsnC,EAAQ,EACxBgX,GAAM5vE,EAAIuxB,EAAOqnC,EAAQ,GAAK+W,CAC9BE,GAAM7vE,EAAIyvE,EAAO7W,EAAQ,GAAK+W,CAE9BD,GAAKp+C,EAAOu8C,CACZkC,GAAKh1E,EAAU20E,EACfM,GAAKj1E,EAAU20E,EAAK,EACpBO,GAAKl1E,EAAU20E,EAAK,EACpBA,GAAKn+C,EAAOs8C,CACZW,GAAMzzE,EAAU20E,GAAMK,CACtBtB,GAAM1zE,EAAU20E,EAAK,GAAKM,CAC1BtB,GAAM3zE,EAAU20E,EAAK,GAAKO,CAC1BP,GAAKD,EAAO5B,CACZc,GAAM5zE,EAAU20E,GAAMK,CACtBnB,GAAM7zE,EAAU20E,EAAK,GAAKM,CAC1BnB,GAAM9zE,EAAU20E,EAAK,GAAKO,CAE1BzzE,GAAKqzE,EAAIrB,EAAMoB,EAAIjB,CACnBlyE,GAAKozE,EAAIpB,EAAMmB,EAAIhB,CACnBhiD,GAAKijD,EAAInB,EAAMkB,EAAIf,CACnBiB,GAAQ,EAAEv1E,KAAKoB,KAAKa,EAAGA,EAAKC,EAAGA,EAAKmwB,EAAGA,EAEvC4iD,GAAar5E,KAAO25E,EAAMtzE,CAC1BgzE,GAAar5E,KAAO25E,EAAMrzE,CAC1B+yE,GAAar5E,KAAO25E,EAAMljD,EAG3B+gD,EAAO7zE,IAAI01E,EAAcrwE,EAEzB,OAAOwuE,GAGM30E,GAAAkwB,iBAAd,SAA+BukD,EAAkCyC,EAAwCpB,EAAuCnB,EAAyBz0E,GAExK,GAAI4G,GAAsB2tE,EAAgBz1E,IAAIy1E,EAAgB5zE,MAC9D,IAAI21E,GAA4BU,EAAsBl4E,IAAIk4E,EAAsBr2E,MAChF,IAAIi0E,GAA2BgB,EAAqB92E,IAAI82E,EAAqBj1E,MAE7E,IAAI8zE,GAAU,KACbA,EAAS,GAAI90E,GAAiBK,EAE/B,IAAI00E,GAAkBH,EAAgBxyE,UACtC,IAAI8zE,GAAmBpB,EAAO1yE,UAE9B,IAAI2uB,GAAwB+jD,EAAO31E,IAAI21E,EAAO9zE,MAE9C,IAAI1D,GAAW,CACf,IAAI+Q,GAAaymE,EAAO9zE,MAAMk1E,CAG9B,OAAO54E,EAAI+Q,EAAK,CACf0iB,EAASzzB,KAAO,CAChByzB,GAASzzB,KAAO,CAChByzB,GAASzzB,KAAO,EAGjB,GAAIg6E,EACJ,IAAI7yE,EACJ,IAAI0xE,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIC,GAAY,CAChB,IAAIkB,GAAY,CAEhBj6E,GAAI,CACJ+Q,GAAMumE,EAAgB5zE,MAAM+zE,CAG5B,OAAOz3E,EAAI+Q,EAAK,CACfipE,EAASrC,EAAYsC,EACrB9yE,GAAQwC,EAAQ3J,KAAK44E,CACrBnlD,GAAStsB,MAAYkyE,EAAaR,GAAImB,CACtCvmD,GAAStsB,MAAYkyE,EAAaP,GAAIkB,CACtCvmD,GAAStsB,IAAUkyE,EAAaN,GAAIiB,CACpC7yE,GAAQwC,EAAQ3J,KAAK44E,CACrBnlD,GAAStsB,MAAYkyE,EAAaR,GAAImB,CACtCvmD,GAAStsB,MAAYkyE,EAAaP,GAAIkB,CACtCvmD,GAAStsB,IAAUkyE,EAAaN,GAAIiB,CACpC7yE,GAAQwC,EAAQ3J,KAAK44E,CACrBnlD,GAAStsB,MAAYkyE,EAAaR,GAAImB,CACtCvmD,GAAStsB,MAAYkyE,EAAaP,GAAIkB,CACtCvmD,GAAStsB,IAAUkyE,EAAaN,GAAIiB,CACpCnB,IAAM,CACNC,IAAM,CACNC,IAAM,CACNkB,IAAM,EAGPj6E,EAAI,CACJ+Q,GAAMymE,EAAO9zE,MAAMk1E,CACnB,IAAII,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIj4E,EAGJ,OAAOjB,EAAI+Q,EAAK,CACfioE,EAAKvlD,EAASzzB,EACdi5E,GAAKxlD,EAASzzB,EAAI,EAClBk5E,GAAKzlD,EAASzzB,EAAI,EAClBiB,GAAI,EAAImD,KAAKoB,KAAKwzE,EAAGA,EAAKC,EAAGA,EAAKC,EAAGA,EAErCzlD,GAASzzB,KAAOg5E,EAAG/3E,CACnBwyB,GAASzzB,KAAOi5E,EAAGh4E,CACnBwyB,GAASzzB,KAAOk5E,EAAGj4E,EAGpBu2E,EAAO7zE,IAAI8vB,EAEX,OAAO+jD,GAIM30E,GAAA0G,YAAd,SAA0B+tE,EAAkCE,EAAyBz0E,EAAqCW,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEvI,GAAIwuE,GAAU,KACbA,EAAS,GAAI70E,GAAiBI,EAE/B,IAAI61E,GAAmBpB,EAAO1yE,UAE9B,IAAI+E,GAAmB2tE,EAAO31E,IAAI6B,EAAOsF,EAEzC,IAAIhJ,GAAW,CACf,IAAIkH,GAAW,CACf,IAAI6J,GAAarN,EAAMk1E,CAEvB,OAAO54E,EAAI+Q,EAAK,CACflH,EAAI7J,KAAOkH,EAAE,EACb2C,GAAI7J,KAAO,GAAOkH,EAAI,EAEtB,MAAMA,GAAK,EACVA,EAAI,EAGNswE,EAAO7zE,IAAIkG,EAAKb,EAEhB,OAAOwuE,GAGM30E,GAAAuiB,eAAd,SAA6BkyD,EAAkCE,EAAwBz0E,EAAqCW,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAEzI,GAAIwuE,GAAU,KACbA,EAAS,GAAIhzD,GAAgBzhB,EAE9B,IAAIoE,GAAe,CACnB,IAAI+d,GAAoB,GAAIC,YAAWzhB,EAAM,EAE7C,OAAOyD,EAAQzD,EAAM,EAAG,CACvB,GAAIyD,EAAM,EAAI,EAAG,CAChB+d,EAAO/d,GAAS,GAChB+d,GAAO/d,EAAQ,GAAK,GACpB+d,GAAO/d,EAAQ,GAAK,GACpB+d,GAAO/d,EAAQ,GAAK,QACd,CACN+d,EAAO/d,GAAS,GAChB+d,GAAO/d,EAAQ,GAAK,GACpB+d,GAAO/d,EAAQ,GAAK,GACpB+d,GAAO/d,EAAQ,GAAK,IAGrBA,GAAS,EAGVqwE,EAAO7zE,IAAIuhB,EAAQlc,EAEnB,OAAOwuE,GAGM30E,GAAAoH,SAAd,SAAuBF,EAAeC,EAAewtE,EAAyB9zE,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE3F,GAAIwuE,EAAO9zE,MAAQA,EAAQsF,EAC1BwuE,EAAO9zE,MAAQA,EAAQsF,CAExB,IAAI4vE,GAAmBpB,EAAO1yE,UAE9B,IAAI+E,GAAmB2tE,EAAO31E,IAAI6B,EAAOsF,EAEzC,IAAIhJ,GAAW,CACf,IAAIkH,GAAW,CACf,IAAI6J,GAAarN,EAAMk1E,CAEvB,OAAO54E,EAAI+Q,EAAK,CACflH,EAAI7J,MAAQ+J,CACZF,GAAI7J,MAAQgK,EAGbwtE,EAAO7zE,IAAIkG,EAAKb,GAGHnG,GAAAqH,MAAd,SAAoBA,EAAcstE,EAAyB9zE,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAExE,GAAIwuE,EAAO9zE,MAAQA,EAAQsF,EAC1BwuE,EAAO9zE,MAAQA,EAAQsF,CAExB,IAAI4vE,GAAmBpB,EAAO1yE,UAE9B,IAAIF,GAAyB4yE,EAAO31E,IAAI6B,EAAOsF,EAE/C,IAAIhJ,GAAW,CACf,IAAIkH,GAAW,CACf,IAAI6J,GAAarN,EAAMk1E,CAEvB,OAAO54E,EAAI+Q,EAAK,CACfnM,EAAU5E,MAAQkK,CAClBtF,GAAU5E,MAAQkK,CAClBtF,GAAU5E,MAAQkK,EAGnBstE,EAAO7zE,IAAIiB,EAAWoE,GAGTnG,GAAAsH,oBAAd,SAAkCC,EAAoBmtE,EAAqC2C,EAAmCC,EAAoCz2E,EAAcsF,GAAA,GAAAA,QAAA,GAAiB,CAAjBA,EAAA,EAE/K,GAAIpE,GAAyB2yE,EAAmB11E,IAAI6B,EAAOsF,EAC3D,IAAI0uE,GAAqBH,EAAmBzyE,UAE5C,IAAI0uB,EACJ,IAAI4mD,EAEJ,IAAIF,EAAkB,CACrB1mD,EAAU0mD,EAAiBr4E,IAAI6B,EAAOsF,EACtCoxE,GAAYF,EAAiBp1E,WAG9B,GAAI2uB,EACJ,IAAI4mD,EAEJ,IAAIF,EAAmB,CACtB1mD,EAAW0mD,EAAkBt4E,IAAI6B,EAAOsF,EACxCqxE,GAAaF,EAAkBr1E,WAGhC,GAAI9E,EACJ,IAAIghE,EACJ,IAAIC,EACJ,IAAIqZ,GAAkB,GAAItuE,EAC1B,IAAIuuE,EAEJ,IAAIL,GAAoBC,EAAmB,CAC1CI,EAAenwE,EAAUX,OACzB8wE,GAAaroE,QACbqoE,GAAaC,YAGd,GAAIC,GAAa,CACjB,IAAIC,GAAa,CACjB,IAAIC,GAAa,CAEjB,KAAK36E,EAAI,EAAGA,EAAI0D,IAAS1D,EAAG,CAE3BghE,EAAKyZ,EAAM,CACXxZ,GAAKwZ,EAAM,CACXH,GAAOr2E,EAAIW,EAAU61E,EACrBH,GAAOp2E,EAAIU,EAAUo8D,EACrBsZ,GAAO/yE,EAAI3C,EAAUq8D,EACrBqZ,GAASlwE,EAAU2J,gBAAgBumE,EACnC11E,GAAU61E,GAAOH,EAAOr2E,CACxBW,GAAUo8D,GAAMsZ,EAAOp2E,CACvBU,GAAUq8D,GAAMqZ,EAAO/yE,CACvBkzE,IAAO/C,CAEP,IAAIlkD,EAAS,CAEZwtC,EAAK0Z,EAAM,CACXzZ,GAAKyZ,EAAM,CACXJ,GAAOr2E,EAAIuvB,EAAQknD,EACnBJ,GAAOp2E,EAAIsvB,EAAQwtC,EACnBsZ,GAAO/yE,EAAIisB,EAAQytC,EACnBqZ,GAASC,EAAahwC,qBAAqB+vC,EAC3CA,GAAOrgE,WACPuZ,GAAQknD,GAAOJ,EAAOr2E,CACtBuvB,GAAQwtC,GAAMsZ,EAAOp2E,CACrBsvB,GAAQytC,GAAMqZ,EAAO/yE,CACrBmzE,IAAON,EAGR,GAAI3mD,EAAU,CAEbutC,EAAK2Z,EAAM,CACX1Z,GAAK0Z,EAAM,CACXL,GAAOr2E,EAAIwvB,EAASknD,EACpBL,GAAOp2E,EAAIuvB,EAASutC,EACpBsZ,GAAO/yE,EAAIksB,EAASwtC,EACpBqZ,GAASC,EAAahwC,qBAAqB+vC,EAC3CA,GAAOrgE,WACPwZ,GAASknD,GAAOL,EAAOr2E,CACvBwvB,GAASutC,GAAMsZ,EAAOp2E,CACtBuvB,GAASwtC,GAAMqZ,EAAO/yE,CACtBozE,IAAON,GAIT9C,EAAmB5zE,IAAIiB,EAAWoE,EAElC,IAAIkxE,EACHA,EAAiBv2E,IAAI6vB,EAASxqB,EAE/B,IAAImxE,EACHA,EAAkBx2E,IAAI8vB,EAAUzqB,GAKpBnG,GAAA+3E,cAAd,SAA4BtD,EAAgC7xE,EAAoBo1E,EAA6BC,GAAA,GAAAA,QAAA,GAAsB,CAAtBA,EAAA,EAE5G,GAAIx4B,GAA0Bg1B,EAAgBh1B,MAC9C,IAAIogB,GAAoB4U,EAAgB/2E,MAGxCs6E,GAAct6E,OAAS,CAGvB,IAAImiE,EAAa7/D,EAAiBk4E,eAAiBt1E,EAAc5C,EAAiBm4E,YACjF,MAAO14B,EAER,IAAItiD,EACJ,IAAI2J,GAAoC2tE,EAAgBz1E,IAAIy1E,EAAgB5zE,MAAOo3E,EACnF,IAAIG,GAA6B,GAAIz0E,MACrC,IAAI00E,GAA0Br4E,EAAiBs4E,UAG/CD,GAAU36E,OAASmiE,CACnB,KAAK1iE,EAAI,EAAGA,EAAI0iE,EAAY1iE,IAC3Bk7E,EAAUl7E,IAAM,CAEjB,IAAIo7E,EACJ,IAAIC,EACJ,IAAIl0E,GAAe,CACnB,IAAIm0E,GAAsBR,EAAYxD,EAAgBxyE,UAItD9E,GAAI,CACJ,OAAOA,EAAI0iE,EAAa4Y,GAAgBt7E,EAAI,EAAI6C,EAAiBk4E,eAAiB5zE,EAAQ,EAAItE,EAAiBm4E,YAAa,CAC3HI,EAAgBzxE,EAAQ3J,EAExB,IAAIk7E,EAAUE,IAAkB,EAAG,CAClCC,EAAaH,EAAUE,OACjB,CAGNC,EAAal0E,GACb+zE,GAAUE,GAAiBC,CAC3BR,GAAcQ,GAAcD,EAK7BH,EAAaj7E,KAAOq7E,EAGrB/4B,EAAS,GAAIuqB,GAAiByK,EAAgBr3B,KAAKq3B,EAAgBxyE,WAAYm2E,EAAa16E,OAAO+2E,EAAgBxyE,WAEnHwyE,GAAkBA,EAAgB7tE,MAAM64C,EACxCg1B,GAAgB3zE,IAAIs3E,EAEpB,OAAO34B,GAGMz/C,GAAA04E,eAAd,SAA6BC,EAA+BX,GAE3D,IAAKA,EAAct6E,OAClB,MAAOi7E,EAER,IAAIC,GAAgBD,EAAaC,MAEjC,IAAI1tC,GAAsBytC,EAAaE,UAEvC,IAAIC,GAAwB,GAAIx2D,YAAW01D,EAAct6E,OAAOk7E,EAChE,IAAIJ,EACJ,IAAID,EACJ,IAAIp7E,GAAW,CACf,IAAIkH,GAAW,CACf,IAAI6J,GAAa8pE,EAAct6E,MAC/B,KAAKP,EAAI,EAAGA,EAAI+Q,EAAK/Q,IAAK,CACzBq7E,EAAar7E,EAAEy7E,CACfL,GAAgBP,EAAc76E,GAAGy7E,CAEjC,KAAKv0E,EAAI,EAAGA,EAAIu0E,EAAQv0E,IACvBy0E,EAAWN,EAAan0E,GAAK6mC,EAASqtC,EAAgBl0E,GAGxDs0E,EAAe,GAAI3O,GAAiB4O,EAAQ1qE,EAC5CyqE,GAAaE,WAAaC,CAE1B,OAAOH,GAxjBO34E,GAAAm4E,YAAqB,KAErBn4E,GAAAk4E,cAAuB,QAEvBl4E,GAAAs4E,WAA2B,GAAI30E,MAsjB/C,OAAA3D,KAEApC,GAA0BJ,QAAjBwC,InIymoBN0qE,8CAA8CnrE,UAAUmjB,6CAA6CnjB,UAAUuI,8CAA8CvI,UAAUwI,8CAA8CxI,UAAUw5E,8CAA8Cx5E,UAAUse,gCAAgCte,YAAYy5E,yCAAyC,SAASt8E,EAAQkB,EAAOJ",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._curves = this._concatenatedBuffer? <Float2Attributes> this._concatenatedBuffer.getView(1) || new Float2Attributes(this._concatenatedBuffer) : new Float2Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\t//grid stuff - to tidy\r\n\tprivate cells:Array<Array<number>>;\r\n\t//TODO - generate this dyanamically based on num tris\r\n\tprivate devisions:number = 32;\r\n\tprivate conversionX:number;\r\n\tprivate conversionY:number;\r\n\tprivate minx:number;\r\n\tprivate maxx:number;\r\n\tprivate miny:number;\r\n\tprivate maxy:number;\r\n\r\n\tprivate getCell(x:number, y:number):number\r\n\t{\r\n\t\tvar index_x:number = Math.floor((x - this.minx) * this.conversionX);\r\n\t\tvar index_y:number = Math.floor((y - this.miny) * this.conversionY);\r\n\r\n\t\t//out of bounds\r\n\t\tif(index_x < 0 || index_x > this.devisions || index_y < 0 || index_y > this.devisions) return -1;\r\n\r\n\t\treturn  index_x + index_y * this.devisions;\r\n\t}\r\n\tprivate buildGrid():void\r\n\t{\r\n\t\t//calculate bounds, ideally via bounding box already computed\r\n\t\t//if not just loop through and generate min/max\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tthis.minx = Number.MAX_VALUE;\r\n\t\tthis.maxx = -Number.MAX_VALUE;\r\n\t\tthis.miny = Number.MAX_VALUE;\r\n\t\tthis.maxy = -Number.MAX_VALUE;\r\n\t\tfor(var k:number = 0; k < positions.length; k+=3)\r\n\t\t{\r\n\t\t\tvar x:number = positions[k];\r\n\t\t\tvar y:number = positions[k + 1];\r\n\r\n\t\t\tif(x < this.minx) this.minx = x;\r\n\t\t\tif(x > this.maxx) this.maxx = x;\r\n\t\t\tif(y < this.miny) this.miny = y;\r\n\t\t\tif(y > this.maxy) this.maxy = y;\r\n\t\t}\r\n\r\n\t\tvar width:number = this.maxx - this.minx;\r\n\t\tvar height:number = this.maxy - this.miny;\r\n\r\n\r\n\t\t//now we have bounds start creating grid cells and filling\r\n\t\tvar maxDevisions:number = 32;\r\n\t\tthis.devisions = Math.ceil(Math.sqrt(this.numVertices));\r\n\t\tthis.devisions = Math.min(this.devisions, maxDevisions);\r\n\t\tvar numCells:number = this.devisions * this.devisions;\r\n\t\tvar cellWidth:number = width/this.devisions;\r\n\t\tvar cellHeight:number = height/this.devisions;\r\n\r\n\t\tthis.conversionX = 1/cellWidth;\r\n\t\tthis.conversionY = 1/cellHeight;\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\tthis.cells = new Array<Array<number>>(numCells);\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3) {\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//subtractions to push into positive space\r\n\t\t\tvar left:number = Math.min(ax, bx, cx)-this.minx;\r\n\t\t\tvar right:number = Math.max(ax, bx, cx)-this.minx;\r\n\t\t\tvar top:number = Math.min(ay, by, cy)-this.miny;\r\n\t\t\tvar bottom:number = Math.max(ay, by, cy)-this.miny;\r\n\r\n\t\t\tvar min_index_x:number = Math.floor(left * this.conversionX);\r\n\t\t\tvar min_index_y:number = Math.floor(top * this.conversionY);\r\n\r\n\t\t\tvar max_index_x:number = Math.floor(right * this.conversionX);\r\n\t\t\tvar max_index_y:number = Math.floor(bottom * this.conversionY);\r\n\r\n\r\n\t\t\tfor (var i : number = min_index_x; i <= max_index_x; i++)\r\n\t\t\t{\r\n\t\t\t\tfor (var j : number = min_index_y; j <= max_index_y; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar index:number = i + j * this.devisions;\r\n\t\t\t\t\tvar nodes:Array<number> = this.cells[index];\r\n\t\t\t\t\tif(nodes == null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnodes = new Array<number>();\r\n\t\t\t\t\t\tthis.cells[index] = nodes;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//push in the triangle ids\r\n\t\t\t\t\tnodes.push(id0, id1, id2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean {\r\n\t\tvar posDim:number = this.positions.dimensions;\r\n\t\tvar curveDim:number = this.curves.dimensions;\r\n\r\n\t\tvar positions:Float32Array = this.positions.get(this._numVertices);\r\n\t\tvar curves:Float32Array = this.curves.get(this._numVertices);\r\n\r\n\t\tvar id0:number;\r\n\t\tvar id1:number;\r\n\t\tvar id2:number;\r\n\r\n\t\tvar ax:number;\r\n\t\tvar ay:number;\r\n\t\tvar bx:number;\r\n\t\tvar by:number;\r\n\t\tvar cx:number;\r\n\t\tvar cy:number;\r\n\r\n\t\t//hard coded min vertex count to bother using a grid for\r\n\t\tif(this.numVertices > 150){\r\n\r\n\r\n\t\t\tif (this.cells == null) {\r\n\t\t\t\tthis.buildGrid();\r\n\t\t\t}\r\n\t\t\tvar cell:number = this.getCell(x, y);\r\n\t\t\tif (cell == -1) return false;\r\n\r\n\t\t\tvar nodes:Array<number> = this.cells[cell];\r\n\t\t\tif (nodes == null) return false;\r\n\r\n\t\t\tvar nodeCount:number = nodes.length;\r\n\t\t\tfor (var k:number = 0; k < nodeCount; k += 3) {\r\n\t\t\t\tid0 = nodes[k];\r\n\t\t\t\tid1 = nodes[k + 1];\r\n\t\t\t\tid2 = nodes[k + 2];\r\n\r\n\t\t\t\tax = positions[id0 * posDim];\r\n\t\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\t\tbx = positions[id1 * posDim];\r\n\t\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\t\tcx = positions[id2 * posDim];\r\n\t\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t\t//from a to p\r\n\t\t\t\tvar dx:number = ax - x;\r\n\t\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t\t//edge normal (a-b)\r\n\t\t\t\tvar nx:number = by - ay;\r\n\t\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = bx - x;\r\n\t\t\t\tdy = by - y;\r\n\t\t\t\tnx = cy - by;\r\n\t\t\t\tny = -(cx - bx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tdx = cx - x;\r\n\t\t\t\tdy = cy - y;\r\n\t\t\t\tnx = ay - cy;\r\n\t\t\t\tny = -(ax - cx);\r\n\r\n\t\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t\t//check if not solid\r\n\t\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t\t//here be dragons\r\n\t\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//brute force\r\n\r\n\t\tfor(var k:number = 0; k < this._numVertices; k+=3)\r\n\t\t{\r\n\t\t\tid0 = k + 2;\r\n\t\t\tid1 = k + 1;\r\n\t\t\tid2 = k + 0;\r\n\r\n\t\t\tax = positions[id0 * posDim];\r\n\t\t\tay = positions[id0 * posDim + 1];\r\n\t\t\tbx = positions[id1 * posDim];\r\n\t\t\tby = positions[id1 * posDim + 1];\r\n\t\t\tcx = positions[id2 * posDim];\r\n\t\t\tcy = positions[id2 * posDim + 1];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - x;\r\n\t\t\tvar dy:number = ay - y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - x;\r\n\t\t\tdy = by - y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - x;\r\n\t\t\tdy = cy - y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = x - ax;\r\n\t\t\t\tvar v2y:number = y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\t//var u:number = 1 - v - w;\t//commented out as inlined away\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IDisplayObjectAdapter\t\t= require(\"awayjs-display/lib/adapters/IDisplayObjectAdapter\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable, IEntity\r\n{\r\n\tpublic _adapter:IDisplayObjectAdapter;\r\n\tprivate _queuedEvents:Array<Event> = new Array<Event>();\r\n\tprivate _elementsDirty:boolean;\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean;\r\n\tpublic _pIsEntity:boolean = false;\r\n\tpublic _pIsContainer:boolean = false;\r\n\tpublic _sessionID:number = -1;\r\n\r\n\tprivate _explicitPartition:PartitionBase;\r\n\tpublic _pImplicitPartition:PartitionBase;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _sceneChanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tprivate _explicitMaskId:number = -1;\r\n\tprivate _explicitMasks:Array<DisplayObject>;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tpublic _pImplicitMaskId:number = -1;\r\n\tpublic _pImplicitMasks:Array<Array<DisplayObject>>;\r\n\tpublic _pImplicitMaskIds:Array<Array<number>> = new Array<Array<number>>();\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean;\r\n\tprivate _rotationDirty:boolean;\r\n\tprivate _skewDirty:boolean;\r\n\tprivate _scaleDirty:boolean;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _skewChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToSkewChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tprivate _skewX:number = 0;\r\n\tprivate _skewY:number = 0;\r\n\tprivate _skewZ:number = 0;\r\n\tprivate _scaleX:number = 1;\r\n\tprivate _scaleY:number = 1;\r\n\tprivate _scaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _ske:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n\t//temp vector used in global to local\r\n\tprivate _tempVector3D:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IDisplayObjectAdapter\r\n\t{\r\n\t\treturn this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IDisplayObjectAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this.scaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._setScaleZ(val/this.getBox().depth);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this.rotationX;\r\n\t\tthis._eulers.y = this.rotationY;\r\n\t\tthis._eulers.z = this.rotationZ;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis.rotationX = value.x;\r\n\t\tthis.rotationY = value.y;\r\n\t\tthis.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this.scaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._setScaleY(val/this.getBox().height);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isContainer()\r\n\t{\r\n\t\treturn this._pIsContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():PartitionBase\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:PartitionBase)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\r\n\t\tthis.dispatchEvent(new DisplayObjectEvent(DisplayObjectEvent.PARTITION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tif (this._pivot.x == pivot.x && this._pivot.y == pivot.y && this._pivot.z == pivot.z)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x = pivot.x;\r\n\t\tthis._pivot.y = pivot.y;\r\n\t\tthis._pivot.z = pivot.z;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tthis._setScaleX(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tthis._setScaleY(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._scaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tthis._setScaleZ(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the horizontal skew(angle) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewX():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewX;\r\n\t}\r\n\r\n\tpublic set skewX(val:number)\r\n\t{\r\n\t\tif (this.skewX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewX = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewY():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewY;\r\n\t}\r\n\r\n\tpublic set skewY(val:number)\r\n\t{\r\n\t\tif (this.skewY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewY = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth skew(angle) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t */\r\n\tpublic get skewZ():number\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\treturn this._skewZ;\r\n\t}\r\n\r\n\tpublic set skewZ(val:number)\r\n\t{\r\n\t\tif (this.skewZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewZ = val;\r\n\r\n\t\tthis.invalidateSkew();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._scaleX, this._pivot.y*this._scaleY, this._pivot.z*this._scaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\tpublic get maskId():number\r\n\t{\r\n\t\treturn this._explicitMaskId;\r\n\t}\r\n\r\n\tpublic set maskId(value:number)\r\n\t{\r\n\t\tif (this._explicitMaskId == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMaskId = value;\r\n\r\n\t\tthis._pUpdateImplicitMaskId(this._pParent? this._pParent._iAssignedMaskId() : -1);\r\n\t}\r\n\r\n\tpublic get masks():Array<DisplayObject>\r\n\t{\r\n\t\treturn this._explicitMasks;\r\n\t}\r\n\r\n\tpublic set masks(value:Array<DisplayObject>)\r\n\t{\r\n\t\tif (this._explicitMasks == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMasks = value;\r\n\r\n\t\tif (this._explicitMasks != null && this._explicitMasks.length) {\r\n\t\t\tvar len:number = this._explicitMasks.length;\r\n\t\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t\tthis._explicitMasks[i].maskId = this._explicitMasks[i].id;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pUpdateImplicitMasks(this._pParent? this._pParent._iAssignedMasks() : null);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this.scaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._setScaleX(val/this.getBox().width);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = this._matrix3D.rawData[12] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = this._matrix3D.rawData[13] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = this._matrix3D.rawData[14] = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(4);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._ske;\r\n\t\tthis._transformComponents[3] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObject = null):DisplayObject\r\n\t{\r\n\t\tif (!newInstance)\r\n\t\t\tnewInstance = new DisplayObject();\r\n\r\n\t\tnewInstance.pivot = this.pivot;\r\n\t\tnewInstance._iMatrix3D = this._iMatrix3D\r\n\t\t//newInstance.name = this.name;\r\n\r\n\t\tnewInstance.maskId = this._explicitMaskId;\r\n\t\tnewInstance.masks = this.masks? this.masks.concat() : null;\r\n\r\n\t\tif (this._adapter)\r\n\t\t\tnewInstance.adapter = this._adapter.clone(newInstance);\r\n\r\n\t\tif (this._transform.colorTransform)\r\n\t\t\tnewInstance.transform.colorTransform = this._transform.colorTransform.clone();\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\t//scale updates if absolute dimensions are detected\r\n\t\t\tif (this._width != null)\r\n\t\t\t\tthis._setScaleX(this._width/this._pBoxBounds.width);\r\n\r\n\t\t\tif (this._height != null)\r\n\t\t\t\tthis._setScaleY(this._height/this._pBoxBounds.height);\r\n\r\n\t\t\tif (this._depth != null)\r\n\t\t\t\tthis._setScaleZ(this._depth/this._pBoxBounds.depth);\r\n\t\t}\r\n\r\n\t\tif (targetCoordinateSpace == null || targetCoordinateSpace == this)\r\n\t\t\treturn this._pBoxBounds;\r\n\r\n\t\tif (targetCoordinateSpace == this._pParent)\r\n\t\t\treturn this._iMatrix3D.transformBox(this._pBoxBounds);\r\n\t\telse\r\n\t\t\treturn targetCoordinateSpace.inverseSceneTransform.transformBox(this.sceneTransform.transformBox(this._pBoxBounds));\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid)\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.inverseSceneTransform.transformVector(this._tempVector3D);\r\n\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @param maskFlag Whether to check against the object when it is used as mask\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, maskFlag = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX = vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY = vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ = vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\tthis._tempVector3D.setTo(point.x, point.y, 0);\r\n\t\tvar pos:Vector3D = this.sceneTransform.transformVector(this._tempVector3D);\r\n\r\n\t\treturn new Point(pos.x, pos.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis.x = dx;\r\n\t\tthis.y = dy;\r\n\t\tthis.z = dz;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (dx == 0 && dy == 0 && dz == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\tpublic reset_to_init_state():void\r\n\t{\r\n\t\tthis.visible=true;\r\n\t\tif(this._iMatrix3D)\r\n\t\t\tthis._iMatrix3D.identity();\r\n\t\tif(this.colorTransform)\r\n\t\t\tthis.colorTransform.clear();\r\n\t\t//this.name=\"\";\r\n\t\tthis.masks=null;\r\n\t\tthis.maskId=-1;\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[3];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this.scaleX;\r\n\t\t\tscale.y = this.scaleY;\r\n\t\t\tscale.z = this.scaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this.scaleX, -this._pivot.y/this.scaleY, -this._pivot.z/this.scaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis.rotationX += vec.x*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationY += vec.y*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis.rotationZ += vec.z*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis.rotationX = ax;\r\n\t\tthis.rotationY = ay;\r\n\t\tthis.rotationZ = az;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SKEW_CHANGED:\r\n\t\t\t\tthis._listenToSkewChanged = false;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis.x += x*len;\r\n\t\tthis.y += y*len;\r\n\t\tthis.z += z*len;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis.x = this._pos.x;\r\n\t\tthis.y = this._pos.y;\r\n\t\tthis.z = this._pos.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():PartitionBase\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\tthis._pUpdatePivot();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 12; i++)\r\n\t\t\tthis._matrix3D.rawData[i] = val.rawData[i];\r\n\r\n\t\tthis.x = val.rawData[12];\r\n\t\tthis.y = val.rawData[13];\r\n\t\tthis.z = val.rawData[14];\r\n\r\n\t\tthis._elementsDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren && value._pImplicitMouseEnabled);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitMaskId(value._iAssignedMaskId());\r\n\t\t\tthis._pUpdateImplicitMasks(value._iAssignedMasks());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitMaskId(-1);\r\n\t\t\tthis._pUpdateImplicitMasks(null);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.queueDispatch(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:PartitionBase, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tthis._pImplicitPartition._iUnregisterEntity(this);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tthis._pImplicitPartition._iRegisterEntity(this);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tthis.queueDispatch(this._sceneChanged || (this._sceneChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this)));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMaskId(value:number)\r\n\t{\r\n\t\tthis._pImplicitMaskId = (value != -1)? value : this._explicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\tthis._pImplicitMasks = (value != null)? (this._explicitMasks != null)? value.concat([this._explicitMasks]) : value.concat() : (this._explicitMasks != null)? [this._explicitMasks] : null;\r\n\r\n\t\tthis._pImplicitMaskIds.length = 0;\r\n\r\n\t\tif (this._pImplicitMasks && this._pImplicitMasks.length) {\r\n\t\t\tvar numLayers:number = this._pImplicitMasks.length;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar implicitChildren:Array<DisplayObject>;\r\n\t\t\tvar implicitChildIds:Array<number>;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\timplicitChildren = this._pImplicitMasks[i];\r\n\t\t\t\tnumChildren = implicitChildren.length;\r\n\t\t\t\timplicitChildIds = new Array<number>();\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++)\r\n\t\t\t\t\timplicitChildIds.push(implicitChildren[j].maskId);\r\n\r\n\t\t\t\tthis._pImplicitMaskIds.push(implicitChildIds);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\t\tif (this._elementsDirty)\r\n\t\t\tthis.updateElements();\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._ske.x = this._skewX;\r\n\t\tthis._ske.y = this._skewY;\r\n\t\tthis._ske.z = this._skewZ;\r\n\r\n\t\tthis._sca.x = this._scaleX;\r\n\t\tthis._sca.y = this._scaleY;\r\n\t\tthis._sca.z = this._scaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t}\r\n\r\n\tpublic _pUpdatePivot()\r\n\t{\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._scaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._scaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._scaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.updateController();\r\n\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._skewDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis.dispatchEvent(this._queuedEvents[i]);\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMaskId():number\r\n\t{\r\n\t\treturn this._pImplicitMaskId;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iAssignedMasks():Array<Array<DisplayObject>>\r\n\t{\r\n\t\treturn this._pImplicitMasks;\r\n\t}\r\n\r\n\tpublic _iMasksConfig():Array<Array<number>>\r\n\t{\r\n\t\treturn this._pImplicitMaskIds;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled && this._explicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tif (!this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\tif (!this._pivotZero)\r\n\t\t\tthis.invalidatePivot();\r\n\r\n\t\tthis.queueDispatch(this._positionChanged || (this._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._rotationChanged || (this._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateSkew(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._skewDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._skewDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._skewChanged || (this._skewChanged = new DisplayObjectEvent(DisplayObjectEvent.SKEW_CHANGED, this)));\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale(matrixDirty:boolean = true)\r\n\t{\r\n\t\tif (matrixDirty)\r\n\t\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.queueDispatch(this._scaleChanged || (this._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this)));\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._pParent)\r\n\t\t\tthis._pParent._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\tprivate queueDispatch(event:Event)\r\n\t{\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\tprivate updateElements()\r\n\t{\r\n\t\tthis._elementsDirty = false;\r\n\r\n\t\tvar elements:Array<Vector3D> = this._matrix3D.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._skewX != vec.x || this._skewY != vec.y || this._skewZ != vec.z) {\r\n\t\t\tthis._skewX = vec.x;\r\n\t\t\tthis._skewY = vec.y;\r\n\t\t\tthis._skewZ = vec.z;\r\n\r\n\t\t\tthis.invalidateSkew(false);\r\n\t\t}\r\n\r\n\t\tvec = elements[3];\r\n\r\n\t\tthis._width = null;\r\n\t\tthis._height = null;\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._scaleX != vec.x || this._scaleY != vec.y || this._scaleZ != vec.z) {\r\n\t\t\tthis._scaleX = vec.x;\r\n\t\t\tthis._scaleY = vec.y;\r\n\t\t\tthis._scaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _setScaleX(val:number)\r\n\t{\r\n\t\tif (this.scaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleY(val:number)\r\n\t{\r\n\t\tif (this.scaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\tprivate _setScaleZ(val:number)\r\n\t{\r\n\t\tif (this.scaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import DisplayObjectContainer\t\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport MovieClip\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport ByteArray\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\nimport DisplayObject                    = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ColorTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n\r\nclass Timeline\r\n{\r\n\tpublic _labels:Object;\t\t\t// dictionary to store label => keyframeindex\r\n\tpublic _framescripts:Object;    // dictionary to store keyframeindex => ExecuteScriptCommand\r\n\tpublic _framescripts_translated:Object;    // dictionary to store keyframeindex => bool that keeps track of already converted scripts\r\n\r\n\tpublic keyframe_indices:Array<number>;     \t\t//stores 1 keyframeindex per frameindex\r\n\tpublic keyframe_firstframes:Array<number>;     \t//stores the firstframe of each keyframe\r\n\tpublic keyframe_constructframes:Array<number>;    //stores the previous fullConstruct keyframeindex\r\n\r\n\tpublic keyframe_durations:ArrayBufferView;    //only needed to calulcate other arrays\r\n\r\n\t// synched:\r\n\tpublic frame_command_indices:ArrayBufferView;\r\n\tpublic frame_recipe:ArrayBufferView;\r\n\r\n\t// synched:\r\n\tpublic command_index_stream:ArrayBufferView;\r\n\tpublic command_length_stream:ArrayBufferView;\r\n\r\n\tpublic add_child_stream:ArrayBufferView;\r\n\tpublic remove_child_stream:ArrayBufferView;\r\n\tpublic update_child_stream:ArrayBufferView;\r\n\r\n\tpublic update_child_props_length_stream:ArrayBufferView;\r\n\tpublic update_child_props_indices_stream:ArrayBufferView;\r\n\r\n\tpublic property_index_stream:ArrayBufferView;\r\n\tpublic property_type_stream:ArrayBufferView;\r\n\r\n\tpublic properties_stream_int:ArrayBufferView;\t\t// lists of ints used for property values. for now, only mask_ids are using ints\r\n\r\n\t// propertiy_values_stream:\r\n\tpublic properties_stream_f32_mtx_all:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_scale_rot:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_mtx_pos:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_f32_ct:ArrayBufferView;\t// list of floats\r\n\tpublic properties_stream_strings:Array<string>;\r\n\r\n\tprivate _potentialPrototypes:Array<DisplayObject>;\r\n\r\n\tpublic numKeyFrames:number=0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis.keyframe_indices=[];\r\n\r\n\t\tthis._potentialPrototypes=[];\r\n\t\tthis._labels={};\r\n\t\tthis._framescripts={};\r\n\t\tthis._framescripts_translated={};\r\n\t}\r\n\r\n\tpublic init():void\r\n\t{\r\n\t\tif((this.frame_command_indices==null)||(this.frame_recipe==null)||(this.keyframe_durations==null))\r\n\t\t\treturn;\r\n\t\tthis.keyframe_firstframes=[];\r\n\t\tthis.keyframe_constructframes=[];\r\n\t\tvar frame_cnt=0;\r\n\t\tvar ic=0;\r\n\t\tvar ic2=0;\r\n\t\tvar keyframe_cnt=0;\r\n\t\tvar last_construct_frame=0;\r\n\t\tfor(ic=0; ic<this.numKeyFrames; ic++){\r\n\t\t\tvar duration=this.keyframe_durations[(ic)];\r\n\r\n\t\t\tif((this.frame_recipe[ic] & 1) == 1)\r\n\t\t\t\tlast_construct_frame=keyframe_cnt;\r\n\r\n\t\t\tthis.keyframe_firstframes[keyframe_cnt]=frame_cnt;\r\n\t\t\tthis.keyframe_constructframes[keyframe_cnt++]=last_construct_frame;\r\n\r\n\t\t\tfor(ic2=0; ic2<duration; ic2++){\r\n\t\t\t\tthis.keyframe_indices[frame_cnt++]=ic;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get_framescript(keyframe_index:number):string\r\n\t{\r\n\t\tif(this._framescripts[keyframe_index]==null)\r\n\t\t\treturn \"\";\r\n\t\tif (typeof this._framescripts[keyframe_index] == \"string\")\r\n\t\t\treturn this._framescripts[keyframe_index];\r\n\t\telse{\r\n\t\t\tthrow new Error(\"Framescript is already translated to Function!!!\");\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n\tpublic add_framescript(value:string, keyframe_index:number)\r\n\t{\r\n\t\tthis._framescripts[keyframe_index] = value;\r\n\t}\r\n\r\n\tprivate regexIndexOf(str : string, regex : RegExp, startpos : number) {\r\n\t\tvar indexOf = str.substring(startpos || 0).search(regex);\r\n\t\treturn (indexOf >= 0) ? (indexOf + (startpos || 0)) : indexOf;\r\n\t}\r\n\r\n\r\n\tpublic add_script_for_postcontruct(target_mc:MovieClip, keyframe_idx:number, scriptPass1:Boolean=false) : void\r\n\t{\r\n\t\tif(this._framescripts[keyframe_idx]!=null){\r\n\t\t\tif(this._framescripts_translated[keyframe_idx]==null){\r\n\t\t\t\tthis._framescripts[keyframe_idx] = target_mc.adapter.evalScript(this._framescripts[keyframe_idx]);\r\n\t\t\t\tthis._framescripts_translated[keyframe_idx]=true;\r\n\t\t\t}\r\n\t\t\tif(scriptPass1)\r\n\t\t\t\tFrameScriptManager.add_script_to_queue(target_mc, this._framescripts[keyframe_idx]);\r\n\t\t\telse\r\n\t\t\t\tFrameScriptManager.add_script_to_queue_pass2(target_mc, this._framescripts[keyframe_idx]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get numFrames():number\r\n\t{\r\n\t\treturn this.keyframe_indices.length;\r\n\t}\r\n\r\n\r\n\tpublic getPotentialChildPrototype(id:number):DisplayObject\r\n\t{\r\n\t\treturn this._potentialPrototypes[id];\r\n\r\n\t}\r\n\tpublic getKeyframeIndexForFrameIndex(frame_index:number) : number\r\n\t{\r\n\t\treturn this.keyframe_indices[frame_index];\r\n\t}\r\n\r\n\tpublic getPotentialChilds() : Array<DisplayObject>\r\n\t{\r\n\t\treturn this._potentialPrototypes;\r\n\t}\r\n\tpublic getPotentialChildInstance(id:number) : DisplayObject\r\n\t{\r\n\t\tvar this_clone:DisplayObject=this._potentialPrototypes[id].clone();\r\n\t\tthis_clone.name=\"\";\r\n\t\treturn this_clone;\r\n\t}\r\n\r\n\tpublic registerPotentialChild(prototype:DisplayObject) : void\r\n\t{\r\n\t\tvar id = this._potentialPrototypes.length;\r\n\t\tthis._potentialPrototypes[id] = prototype;\r\n\t}\r\n\tpublic jumpToLabel(target_mc:MovieClip, label:string) : void\r\n\t{\r\n\t\tvar key_frame_index:number = this._labels[label];\r\n\t\tif(key_frame_index>=0)\r\n\t\t\ttarget_mc.currentFrameIndex=this.keyframe_firstframes[key_frame_index];\r\n\r\n\t}\r\n\r\n\r\n\tpublic gotoFrame(target_mc:MovieClip, value:number)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\r\n\t\tif (frameIndex == value) //we are already on exactly this frame.\r\n\t\t\treturn;\r\n\r\n\t\tvar current_keyframe_idx:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar target_keyframe_idx:number = this.keyframe_indices[value];\r\n\r\n\t\tvar firstframe:number = this.keyframe_firstframes[target_keyframe_idx];\r\n\r\n\t\tif (current_keyframe_idx + 1 == target_keyframe_idx) { // target_keyframe_idx is the next keyframe. we can just use constructnext for this\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, true, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (firstframe == value) //frame changed. and firstframe of keyframe. execute framescript if available\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, target_keyframe_idx, true);\r\n\r\n\t\tif (current_keyframe_idx == target_keyframe_idx) // already constructed - exit\r\n\t\t\treturn;\r\n\r\n\t\tvar break_frame_idx:number = this.keyframe_constructframes[target_keyframe_idx];\r\n\r\n\t\t//we now have 3 index to keyframes: current_keyframe_idx / target_keyframe_idx / break_frame_idx\r\n\r\n\t\tvar jump_forward:boolean = (target_keyframe_idx > current_keyframe_idx);\r\n\t\tvar jump_gap:boolean = (break_frame_idx > current_keyframe_idx);\r\n\r\n\t\t// in case we jump back or we jump a gap, we want to start constructing at BreakFrame\r\n\t\tvar start_construct_idx:number = break_frame_idx;\r\n\r\n\t\tif (jump_forward && !jump_gap) // in case we jump forward, but not jump a gap, we start at current_keyframe_idx +1\r\n\t\t\tstart_construct_idx = current_keyframe_idx + 1;\r\n\r\n\t\tvar target_childs_dic:Object = {};\r\n\t\tvar target_sessionIDs_dic:Object = {};\r\n\t\tvar i:number = target_mc.numChildren;\r\n\t\tvar len:number;\r\n\t\tvar k:number;\r\n\t\tvar child:DisplayObject;\r\n\t\tvar depth:number;\r\n\r\n\t\tif (jump_forward && start_construct_idx == target_keyframe_idx){\r\n\t\t\t// if we jump back, we dont want this shortcut, because we need to compare targetframe vs currentframe\r\n\r\n\t\t\t// shortcut: if the targetframe is the breakframe itself, we can just call constructNextFrame\r\n\t\t\t// before we do that, we need to clear the childlist\r\n/*\r\n\t\t\twhile(i--){\r\n\t\t\t\tchild = target_mc.getChildAt(i);\r\n\t\t\t\tif(child.adapter)child.adapter.freeFromScript();\r\n\t\t\t\ttarget_mc.adapter.unregisterScriptObject(child);\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t}\r\n\t\t\ttarget_mc.set_currentFrameIndex(value);\r\n\t\t\tthis.constructNextFrame(target_mc, false);\r\n\t\t\treturn;\r\n\t\t\t*/\r\n\t\t}\r\n\r\n\t\twhile (i--) {\r\n\t\t\tchild = target_mc.getChildAt(i);\r\n\t\t\tif (jump_gap) { // if we jump a gap forward, we just can remove all childs from mc. all script blockage will be gone\r\n\t\t\t\ttarget_mc.removeChild(child);\r\n\t\t\t} else if (jump_forward) { // in other cases, we want to collect the current objects to compare state of targetframe with state of currentframe\r\n\t\t\t\tdepth = target_mc.getChildDepth(child)\r\n\t\t\t\ttarget_childs_dic[depth] = child;\r\n\t\t\t\ttarget_sessionIDs_dic[depth] = child._sessionID;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  step1: only apply add/remove commands into current_childs_dic.\r\n\t\tvar update_indices:Array<number> = [];// store a list of updatecommand_indices, so we dont have to read frame_recipe again\r\n\t\tvar update_cnt = 0;\r\n\t\tfor (k = start_construct_idx; k <= target_keyframe_idx; k++) {\r\n\t\t\tvar frame_command_idx:number = this.frame_command_indices[k];\r\n\t\t\tvar frame_recipe:number = this.frame_recipe[k];\r\n\t\t\tvar start_index:number;\r\n\t\t\tvar idx:number;\r\n\r\n\t\t\tif ((frame_recipe & 2) == 2) {\r\n\t\t\t\t// remove childs\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tlen = this.command_length_stream[frame_command_idx++];\r\n\t\t\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\t\t\tdepth = this.remove_child_stream[start_index + i] - 16383;\r\n\t\t\t\t\tdelete target_childs_dic[depth];\r\n\t\t\t\t\tdelete target_sessionIDs_dic[depth];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ((frame_recipe & 4) == 4) {\r\n\t\t\t\tstart_index = this.command_index_stream[frame_command_idx];\r\n\t\t\t\tlen = this.command_length_stream[frame_command_idx++];\r\n\t\t\t\ti = len;\r\n\t\t\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t\t\t// this could be changed in exporter\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\tidx = start_index*2 + i*2;\r\n\t\t\t\t\tvar target:DisplayObject = target_mc.getPotentialChildInstance(this.add_child_stream[idx]);\r\n\r\n\t\t\t\t\tdepth = this.add_child_stream[idx + 1] - 16383;\r\n\t\t\t\t\ttarget_childs_dic[depth] = target;\r\n\t\t\t\t\ttarget_sessionIDs_dic[depth] = start_index + i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ((frame_recipe & 8) == 8)\r\n\t\t\t\tupdate_indices[update_cnt++] = frame_command_idx;// execute update command later\r\n\t\t}\r\n\t\t//  step2: construct the final frame\r\n\r\n\t\tvar target_child_sessionIDS:Object = {};\r\n\t\tfor (var key in target_sessionIDs_dic)\r\n\t\t\tif (target_sessionIDs_dic[key] != null)\r\n\t\t\t\ttarget_child_sessionIDS[target_sessionIDs_dic[key]] = key;\r\n\r\n\t\t// check what childs are alive on both frames.\r\n\t\t// childs that are not alive anymore get removed and unregistered\r\n\t\t// childs that are alive on both frames get removed from the target_child_sessionIDS + target_childs_dic\r\n\t\ti = target_mc.numChildren;\r\n\t\twhile (i--) {\r\n\t\t\tchild=target_mc.getChildAt(i);\r\n\t\t\tif (target_child_sessionIDS[child._sessionID]) {\r\n\t\t\t\ttarget_childs_dic[target_child_sessionIDS[child._sessionID]] = null;\r\n\t\t\t\ttarget_child_sessionIDS[child._sessionID] = null;\r\n\t\t\t\ttarget_sessionIDs_dic[target_child_sessionIDS[child._sessionID]] = null;\r\n\t\t\t} else {\r\n\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (var key in target_childs_dic) {\r\n\t\t\tchild = target_childs_dic[key];\r\n\t\t\tif(child) {\r\n\t\t\t\tchild._sessionID = target_sessionIDs_dic[key];\r\n\t\t\t\ttarget_mc.addChildAtDepth(child, parseInt(key));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//  pass2: apply update commands for objects on stage (only if they are not blocked by script)\r\n\t\tvar frame_command_idx:number;\r\n\t\tvar len:number = update_indices.length;\r\n\t\tfor (k = 0; k < len; k++) {\r\n\t\t\tframe_command_idx = update_indices[k];\r\n\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx]);\r\n\t\t}\r\n\r\n\t\ttarget_mc.constructedKeyFrameIndex=target_keyframe_idx;\r\n\t}\r\n\r\n\r\n\tpublic constructNextFrame(target_mc:MovieClip, queueScript:Boolean=true, scriptPass1:Boolean=false)\r\n\t{\r\n\t\tvar frameIndex:number = target_mc.currentFrameIndex;\r\n\t\tvar constructed_keyFrameIndex:number = target_mc.constructedKeyFrameIndex;\r\n\t\tvar new_keyFrameIndex:number = this.keyframe_indices[frameIndex];\r\n\r\n\t\tif((queueScript)&&(this.keyframe_firstframes[new_keyFrameIndex]==frameIndex)){\r\n\t\t\tthis.add_script_for_postcontruct(target_mc, new_keyFrameIndex, scriptPass1);\r\n\t\t}\r\n\t\tif(constructed_keyFrameIndex!=new_keyFrameIndex){\r\n\t\t\ttarget_mc.constructedKeyFrameIndex=new_keyFrameIndex;\r\n\r\n\t\t\tvar frame_command_idx=this.frame_command_indices[new_keyFrameIndex];\r\n\t\t\tvar frame_recipe=this.frame_recipe[new_keyFrameIndex];\r\n\r\n\t\t\tif((frame_recipe & 1)==1) {\r\n\t\t\t\tvar i:number = target_mc.numChildren;\r\n\t\t\t\twhile (i--) {\r\n\t\t\t\t\ttarget_mc.removeChildAt(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ((frame_recipe & 2)==2) {\r\n\t\t\t\tthis.remove_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\t\t\t}\r\n\r\n\t\t\tif((frame_recipe & 4)==4)\r\n\t\t\t\tthis.add_childs_continous(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++] );\r\n\r\n\t\t\tif((frame_recipe & 8)==8)\r\n\t\t\t\tthis.update_childs(target_mc, this.command_index_stream[frame_command_idx], this.command_length_stream[frame_command_idx++]);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tpublic remove_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tfor(var i:number = 0; i < len; i++)\r\n\t\t\tsourceMovieClip.removeChildAtDepth(this.remove_child_stream[start_index + i] - 16383);\r\n\t}\r\n\r\n\r\n\t// used to add childs when jumping between frames\r\n\tpublic add_childs_continous(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\t// apply add commands in reversed order to have script exeucted in correct order.\r\n\t\t// this could be changed in exporter\r\n\t\tvar i:number = len;\r\n\t\twhile(i--){\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getPotentialChildInstance(this.add_child_stream[start_index*2 + i*2]);\r\n\t\t\ttarget._sessionID = start_index + i;\r\n\t\t\tsourceMovieClip.addChildAtDepth(target, this.add_child_stream[start_index*2 + i*2 + 1] - 16383);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update_childs(sourceMovieClip:MovieClip, start_index:number, len:number)\r\n\t{\r\n\t\tvar props_start_idx:number;\r\n\t\tvar props_len:number;\r\n\t\tvar props_end_index:number;\r\n\t\tvar value_start_index:number;\r\n\t\tvar props_type:number;\r\n\t\tvar doit:boolean;\r\n\t\tvar end_index:number = start_index + len;\r\n\t\tfor(var i:number = start_index; i < end_index; i++) {\r\n\t\t\tvar childID:number = this.update_child_stream[i];\r\n\t\t\tvar target:DisplayObject = sourceMovieClip.getChildAtSessionID(childID);\r\n\t\t\tif (target != null) {\r\n\t\t\t\tdoit = true;\r\n\t\t\t\t// check if the child is active + not blocked by script\r\n\t\t\t\tif (target.adapter && target.adapter.isBlockedByScript())\r\n\t\t\t\t\tdoit = false;\r\n\t\t\t\tprops_start_idx = this.update_child_props_indices_stream[i];\r\n\t\t\t\tprops_len = this.update_child_props_length_stream[i];\r\n\t\t\t\tprops_end_index = props_start_idx + props_len;\r\n\t\t\t\tfor(var p:number = props_start_idx; p < props_end_index; p++) {\r\n\t\t\t\t\tprops_type = this.property_type_stream[p];\r\n\t\t\t\t\tvalue_start_index = this.property_index_stream[p];\r\n\t\t\t\t\tswitch(props_type){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 6;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_all[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_all[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:// colormatrix\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 8;\r\n\t\t\t\t\t\t\t\tvar new_ct:ColorTransform = target.colorTransform || new ColorTransform();\r\n\t\t\t\t\t\t\t\tnew_ct.redMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaMultiplier = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.redOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.greenOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.blueOffset = this.properties_stream_f32_ct[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_ct.alphaOffset = this.properties_stream_f32_ct[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget.colorTransform = new_ct;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t// mask the mc with a list of objects\r\n\t\t\t\t\t\t\t// a object could have multiple groups of masks, in case a graphic clip was merged into the timeline\r\n\t\t\t\t\t\t\t// this is not implmeented in the runtime yet\r\n\t\t\t\t\t\t\t// for now, a second mask-groupd would overwrite the first one\r\n\t\t\t\t\t\t\tvar mask_length:number=this.properties_stream_int[value_start_index++];\r\n\t\t\t\t\t\t\tvar mask:DisplayObject;\r\n\t\t\t\t\t\t\tvar masks:Array<DisplayObject> = new Array<DisplayObject>();\r\n\t\t\t\t\t\t\tfor(var m:number = 0; m < mask_length; m++){\r\n\t\t\t\t\t\t\t\tmask = sourceMovieClip.getChildAtSessionID(this.properties_stream_int[value_start_index++]);\r\n\t\t\t\t\t\t\t\tif(mask){\r\n\t\t\t\t\t\t\t\t\tmasks[m] = mask;\r\n\t\t\t\t\t\t\t\t\tmask.mouseEnabled = false;\r\n\t\t\t\t\t\t\t\t\tif(mask.isAsset(DisplayObjectContainer))\r\n\t\t\t\t\t\t\t\t\t\t(<DisplayObjectContainer> mask).mouseChildren = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttarget.masks = masks;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 4:// instance name movieclip instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 5:// instance name button instance\r\n\t\t\t\t\t\t\ttarget.name = this.properties_stream_strings[value_start_index];\r\n\t\t\t\t\t\t\t// todo: creating the buttonlistenrs later should also be done, but for icycle i dont think this will cause problems\r\n\t\t\t\t\t\t\t(<MovieClip>target).addButtonListeners();\r\n\t\t\t\t\t\t\tsourceMovieClip.adapter.registerScriptObject(target);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 6://visible\r\n\r\n\t\t\t\t\t\t\tif (target.adapter && target.adapter.isVisibilityByScript()){}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\ttarget.visible = Boolean(value_start_index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 11:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 4;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[0] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[1] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[4] = this.properties_stream_f32_mtx_scale_rot[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[5] = this.properties_stream_f32_mtx_scale_rot[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 12:// displaytransform\r\n\t\t\t\t\t\t\tif (doit) {\r\n\t\t\t\t\t\t\t\tvalue_start_index *= 2;\r\n\t\t\t\t\t\t\t\tvar new_matrix:Matrix3D = target._iMatrix3D || new Matrix3D();\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[12] = this.properties_stream_f32_mtx_pos[value_start_index++];\r\n\t\t\t\t\t\t\t\tnew_matrix.rawData[13] = this.properties_stream_f32_mtx_pos[value_start_index];\r\n\t\t\t\t\t\t\t\ttarget._iMatrix3D = new_matrix;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = Timeline;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = this._concatenatedBuffer? <Float3Attributes> this._concatenatedBuffer.getView(0) || new Float3Attributes(this._concatenatedBuffer) : new Float3Attributes();\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\r\n\tpublic hitTestPoint(x:number, y:number, z:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\t//temp disable auto derives\r\n\t\tclone.autoDeriveNormals = false;\r\n\t\tclone.autoDeriveTangents = false;\r\n\t\tclone.autoDeriveUVs = false;\r\n\r\n\t\tif (this.indices)\r\n\t\t\tclone.setIndices(this.indices.clone());\r\n\r\n\t\tif (this.normals)\r\n\t\t\tclone.setNormals(this.normals.clone());\r\n\r\n\t\tif (this.uvs)\r\n\t\t\tclone.setUVs(this.uvs.clone());\r\n\r\n\t\tif (this.tangents)\r\n\t\t\tclone.setTangents(this.tangents.clone());\r\n\r\n\t\tif (this.secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this.secondaryUVs.clone());\r\n\r\n\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\r\n\t\tif (this.jointIndices)\r\n\t\t\tclone.setJointIndices(this.jointIndices.clone());\r\n\r\n\t\tif (this.jointWeights)\r\n\t\t\tclone.setJointWeights(this.jointWeights.clone());\r\n\r\n\t\t//return auto derives to cloned values\r\n\t\tclone.autoDeriveNormals = this._autoDeriveNormals;\r\n\t\tclone.autoDeriveTangents = this._autoDeriveTangents;\r\n\t\tclone.autoDeriveUVs = this._autoDeriveUVs;\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tpublic _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _containerNodes:Array<ContainerNode> = new Array<ContainerNode>();\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _depths:Array<number> = new Array<number>();\r\n\tprivate _nextHighestDepth:number = 0;\r\n\tprivate _nextHighestDepthDirty:boolean;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent._pImplicitMouseEnabled : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsContainer = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAt(child, this._children.length);\r\n\t}\r\n\r\n\tpublic addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\t\t\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildAtInternal(child._pParent.getChildIndex(child));\r\n\r\n\t\tvar index = this.getDepthIndexInternal(depth);\r\n\r\n\t\tif (index != -1) {\r\n\t\t\tif (replace) {\r\n\t\t\t\tthis.removeChildAt(index);\r\n\t\t\t} else {\r\n\t\t\t\t//move depth of existing child up by 1\r\n\t\t\t\tthis.addChildAtDepth(this._children[index], this._depths[index] + 1, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._nextHighestDepth < depth + 1)\r\n\t\t\tthis._nextHighestDepth = depth + 1;\r\n\r\n\t\tthis._children.push(child);\r\n\t\tthis._depths.push(depth);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number):DisplayObject\r\n\t{\r\n\t\treturn this.addChildAtDepth(child, (index < this._depths.length)? this._depths[index] : this.getNextHighestDepth(), false);\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone(newInstance:DisplayObjectContainer = null):DisplayObject\r\n\t{\r\n\t\tnewInstance = <DisplayObjectContainer> super.clone(newInstance || new DisplayObjectContainer());\r\n\r\n\t\tnewInstance.partition = this.partition;\r\n\t\tnewInstance.mouseEnabled = this.mouseEnabled;\r\n\t\tnewInstance.mouseChildren = this.mouseChildren;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tnewInstance.addChild(this._children[i].clone());\r\n\r\n\t\treturn newInstance;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\t\r\n\tpublic getChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.getChildAt(this.getDepthIndexInternal(depth));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\tpublic getChildDepth(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\treturn this._depths[this.getChildIndex(child)];\r\n\t}\r\n\r\n\tpublic getNextHighestDepth()\r\n\t{\r\n\t\tif (this._nextHighestDepthDirty)\r\n\t\t\tthis._updateNextHighestDepth();\r\n\r\n\t\treturn this._nextHighestDepth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildAt(this.getChildIndex(child));\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChildAt(this.getDepthIndexInternal(depth));\r\n\t}\t\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this.removeChildAtInternal(index);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t\t\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\tthis.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2))\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number, index2:number)\r\n\t{\r\n\t\tvar depth:number = this._depths[index2];\r\n\t\tvar child:DisplayObject = this._children[index1];\r\n\r\n\t\tthis.addChildAtDepth(this._children[index2], this._depths[index1]);\r\n\t\tthis.addChildAtDepth(child, depth);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar min:number;\r\n\t\tvar max:number;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tvar box:Box;\r\n\t\tvar numChildren:number = this._children.length;\r\n\r\n\t\tif (numChildren > 0) {\r\n\t\t\tfor (var i:number = 0; i < numChildren; ++i) {\r\n\t\t\t\tbox = this._children[i].getBox(this);\r\n\r\n\t\t\t\tif (i == 0) {\r\n\t\t\t\t\tmaxX = box.width + (minX = box.x);\r\n\t\t\t\t\tmaxY = box.height + (minY = box.y);\r\n\t\t\t\t\tmaxZ = box.depth + (minZ = box.z);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = box.width + (min = box.x);\r\n\t\t\t\t\tif (min < minX)\r\n\t\t\t\t\t\tminX = min;\r\n\t\t\t\t\tif (max > maxX)\r\n\t\t\t\t\t\tmaxX = max;\r\n\r\n\t\t\t\t\tmax = box.height + (min = box.y);\r\n\t\t\t\t\tif (min < minY)\r\n\t\t\t\t\t\tminY = min;\r\n\t\t\t\t\tif (max > maxY)\r\n\t\t\t\t\t\tmaxY = max;\r\n\r\n\t\t\t\t\tmax = box.depth + (min = box.z);\r\n\t\t\t\t\tif (min < minZ)\r\n\t\t\t\t\t\tminZ = min;\r\n\t\t\t\t\tif (max > maxZ)\r\n\t\t\t\t\t\tmaxZ = max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren && this._pImplicitMouseEnabled);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMaskId(value:number)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMaskId(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMaskId(this._pImplicitMaskId);\r\n\t}\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMasks(value:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMasks(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMasks(this._pImplicitMasks);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:PartitionBase, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildAtInternal(index:number):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children.splice(index, 1)[0];\r\n\t\tvar depth:number = this._depths.splice(index, 1)[0];\r\n\r\n\t\t//update next highest depth\r\n\t\tif (this._nextHighestDepth == depth + 1)\r\n\t\t\tthis._nextHighestDepthDirty = true;\r\n\r\n\t\treturn child;\r\n\t}\r\n\t\r\n\tprivate getDepthIndexInternal(depth:number /*int*/):number\r\n\t{\r\n\t\treturn this._depths.indexOf(depth);\r\n\t}\r\n\r\n\tprivate _updateNextHighestDepth()\r\n\t{\r\n\t\tthis._nextHighestDepthDirty = false;\r\n\r\n\t\tthis._nextHighestDepth = 0;\r\n\t\tvar len:number = this._depths.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._nextHighestDepth < this._depths[i])\r\n\t\t\t\tthis._nextHighestDepth = this._depths[i];\r\n\r\n\t\tthis._nextHighestDepth += 1;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false, masksFlag:boolean = false):boolean\r\n\t{\r\n\t\tif(this._pImplicitMaskId !== -1 && !masksFlag)\r\n\t\t\treturn;\r\n\r\n\t\tif(!this._pImplicitVisibility)\r\n\t\t\treturn;\r\n\r\n\t\tvar masks:Array<DisplayObject> = this.masks;\r\n\r\n\t\tif (masks) {\r\n\t\t\tvar numMasks:number = masks.length;\r\n\t\t\tvar maskHit:boolean = false;\r\n\t\t\tfor (var i:number = 0; i < numMasks; i++) {\r\n\t\t\t\tif (masks[i].hitTestPoint(x, y, shapeFlag, true)) {\r\n\t\t\t\t\tmaskHit = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!maskHit)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this._hitTestPointInternal(x, y, shapeFlag, masksFlag)\r\n\t}\r\n\r\n\tpublic _iAddContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tthis._containerNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveContainerNode(entityNode:ContainerNode):ContainerNode\r\n\t{\r\n\t\tvar index:number = this._containerNodes.indexOf(entityNode);\r\n\r\n\t\tthis._containerNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tvar numChildren:number = this.numChildren;\r\n\t\tfor(var i:number = 0; i < numChildren; i++)\r\n\t\t\tif(this._children[i].hitTestPoint(x,y, shapeFlag, masksFlag))\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport LoaderSession\t\t\t\t= require(\"awayjs-core/lib/library/LoaderSession\");\r\nimport LoaderContext\t\t\t\t= require(\"awayjs-core/lib/library/LoaderContext\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loaderSession:LoaderSession;\r\n\tprivate _loaderSessionGarbage:LoaderSession;\r\n\tprivate _gcTimeoutIID:number;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (!this._loaderSession)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.disposeLoaderSession(this._loaderSession);\r\n\t\t}\r\n\t\t\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, LoaderSession will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().load(request, context, ns, parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:LoaderContext = null, ns:string = null, parser:ParserBase = null)\r\n\t{\r\n\t\tthis._getLoaderSession().loadData(data, '', context, ns, parser);\r\n\t}\r\n\r\n\tprivate _getLoaderSession()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tthis._loaderSession = lib.getLoaderSession();\r\n\t\t} else {\r\n\t\t\tthis._loaderSession = new LoaderSession();\r\n\t\t}\r\n\r\n\t\tthis._loaderSession.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSession.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\tthis._loaderSession._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\tthis._loaderSession._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn this._loaderSession;\r\n\t}\r\n\r\n\tprivate _disposeLoaderSession()\r\n\t{\r\n\t\t// Add loader to garbage - for a collection sweep and kill\r\n\t\tthis._loaderSessionGarbage = this._loaderSession;\r\n\t\tdelete this._loaderSession;\r\n\t\tthis._loaderSession = null;\r\n\t\tthis._gcTimeoutIID = setTimeout(() => {this.loaderSessionGC()}, 100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tLoaderSession.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tLoaderSession.enableParsers(parserClasses);\r\n\t}\r\n\t\r\n\tprivate loaderSessionGC():void\r\n\t{\r\n\t\t//remove listeners\r\n\t\tthis._loaderSessionGarbage.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\tthis._loaderSessionGarbage.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\tif (!this._useAssetLib)\r\n\t\t\tthis._loaderSessionGarbage.stop();\r\n\r\n\t\tdelete this._loaderSessionGarbage;\r\n\t\tthis._loaderSessionGarbage = null;\r\n\r\n\t\tclearTimeout(this._gcTimeoutIID);\r\n\t\tthis._gcTimeoutIID = null;\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\r\n\t\tthis._disposeLoaderSession();\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport BasicPartition\t\t\t\t= require(\"awayjs-display/lib/partition/BasicPartition\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends DisplayObjectContainer\r\n{\r\n\tprivate _expandedPartitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\tprivate _partitions:Array<PartitionBase> = new Array<PartitionBase>();\r\n\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor(partition:PartitionBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.partition = partition || new BasicPartition();\r\n\r\n\t\tthis._iSetScene(this);\r\n\t\tthis._iIsRoot = true;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:PartitionBase)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onPartitionChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onPartitionChangedDelegate = (event:DisplayObjectEvent) => this._onPartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this._onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this._onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this._onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\tpublic getLocalMouseX(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).x;\r\n\t}\r\n\r\n\tpublic getLocalMouseY(displayObject:DisplayObject):number\r\n\t{\r\n\t\treturn displayObject.inverseSceneTransform.transformVector(this.unproject(this._pMouseX, this._pMouseY, 1000)).y;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(DisplayObjectEvent.PARTITION_CHANGED, this._onPartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate _onPartitionChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterEntity(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate _onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\tpublic _pControllerDirty:boolean;\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject)\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate)\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pAutoUpdate)\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\telse\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic updateController()\r\n\t{\r\n\t\tif (this._pControllerDirty && this._pAutoUpdate) {\r\n\t\t\tthis._pControllerDirty = false;\r\n\t\t\tthis.pNotifyUpdate();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis._pControllerDirty = true;\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pControllerDirty = true;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t//temp point used in hit testing\r\n\tprivate _tempPoint:Point = new Point();\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone.maskId = this.maskId;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        for (i = 0; i < len; ++i)\r\n            clone.addChild(this.getChildAt(i).clone());\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\t\tvar tmp_maxZ:number, tmp_minZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\r\n\t\t\tif (this.numChildren) {\r\n\t\t\t\tmaxX = this._pBoxBounds.width + (minX = this._pBoxBounds.x);\r\n\t\t\t\tmaxY = this._pBoxBounds.height + (minY = this._pBoxBounds.y);\r\n\t\t\t\tmaxZ = this._pBoxBounds.depth + (minZ = this._pBoxBounds.z);\r\n\t\t\t\ttmp_maxZ = this._pBoxBounds.depth + (tmp_minZ = this._pBoxBounds.z);\r\n\t\t\t} else {\r\n\t\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\t\tif(subGeom.isAsset(CurveSubGeometry)){\r\n\t\t\t\t\tminZ = maxZ = 0;\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\ttmp_minZ = tmp_maxZ = boundingPositions[i + 2];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < tmp_minZ)\r\n\t\t\t\t\t\ttmp_minZ = p;\r\n\t\t\t\t\telse if (p > tmp_maxZ)\r\n\t\t\t\t\t\ttmp_maxZ = p;\r\n\t\t\t\t}\r\n\t\t\t\tif(!(subGeom.isAsset(CurveSubGeometry))){\r\n\t\t\t\t\tminZ = tmp_minZ;\r\n\t\t\t\t\tmaxZ = tmp_maxZ;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\r\n\tpublic _hitTestPointInternal(x:number, y:number, shapeFlag:boolean, masksFlag:boolean):boolean\r\n\t{\r\n\t\tif(super._hitTestPointInternal(x, y, shapeFlag, masksFlag))\r\n\t\t\treturn true;\r\n\r\n\t\t// from this point out, we can not return false, without checking collision of childs.\r\n\t\tthis._tempPoint.setTo(x,y);\r\n\t\tvar local:Point = this.globalToLocal(this._tempPoint);\r\n\r\n\r\n\t\tif(this._geometry) {\r\n\t\t\tif(this.getBox().contains(local.x, local.y, 0)){\r\n\t\t\t\t//early out for non-shape tests\r\n\t\t\t\tif (!shapeFlag)\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\tvar subGeometries:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\t\t\tvar subGeometriesCount:number = subGeometries.length;\r\n\t\t\t\tfor(var j:number = 0; j < subGeometriesCount; j++)\r\n\t\t\t\t\tif (subGeometries[j].hitTestPoint(local.x, local.y, 0))\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Event = require(\"awayjs-core/lib/events/Event\");\r\nimport AssetEvent = require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport ColorTransform = require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport IAsset = require(\"awayjs-core/lib/library/IAsset\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Mesh = require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Billboard = require(\"awayjs-display/lib/entities/Billboard\");\r\n\r\nimport MouseEvent = require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\nimport IMovieClipAdapter\t\t= require(\"awayjs-display/lib/adapters/IMovieClipAdapter\");\r\nimport Timeline = require(\"awayjs-display/lib/base/Timeline\");\r\nimport FrameScriptManager = require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\nclass MovieClip extends DisplayObjectContainer\r\n{\r\n    public static assetType:string = \"[asset MovieClip]\";\r\n\r\n    private _timeline:Timeline;\r\n\r\n    private _isButton:boolean;\r\n    private _onMouseOver:(event:MouseEvent) => void;\r\n    private _onMouseOut:(event:MouseEvent) => void;\r\n    private _onMouseDown:(event:MouseEvent) => void;\r\n    private _onMouseUp:(event:MouseEvent) => void;\r\n\r\n    private _time:number;// the current time inside the animation\r\n    private _currentFrameIndex:number;// the current frame\r\n    private _constructedKeyFrameIndex:number;// the current index of the current active frame\r\n\r\n    private _isPlaying:boolean;// false if paused or stopped\r\n    private _loop:boolean = true;\r\n\r\n    // not sure if needed\r\n    private _enterFrame:Event;\r\n    private _skipAdvance : boolean;\r\n    private _isInit : boolean;\r\n\r\n    private _potentialInstances:Array<DisplayObject>;\r\n    private _active_session_ids:Array<DisplayObject>;\r\n   // private _framescripts_to_execute:Array<Function>;\r\n\r\n\t/**\r\n\t * adapter is used to provide MovieClip to scripts taken from different platforms\r\n\t * setter typically managed by factory\r\n\t */\r\n\tpublic get adapter():IMovieClipAdapter\r\n\t{\r\n\t\treturn <IMovieClipAdapter> this._adapter;\r\n\t}\r\n\r\n\tpublic set adapter(value:IMovieClipAdapter)\r\n\t{\r\n\t\tthis._adapter = value;\r\n\t}\r\n\r\n    constructor(timeline:Timeline = null)\r\n    {\r\n        super();\r\n        this._active_session_ids=[];\r\n        this._potentialInstances = [];\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        this._isInit=true;\r\n        this._isPlaying = true; // auto-play\r\n        this._isButton=false;\r\n\r\n        this._time = 0;\r\n        this._enterFrame = new Event(Event.ENTER_FRAME);\r\n        this.inheritColorTransform = true;\r\n\r\n        this._onMouseOver = (event:MouseEvent) => this.currentFrameIndex = 1;\r\n        this._onMouseOut = (event:MouseEvent) => this.currentFrameIndex = 0;\r\n        this._onMouseDown = (event:MouseEvent) => this.currentFrameIndex = 2;\r\n        this._onMouseUp = (event:MouseEvent) => this.currentFrameIndex = this.currentFrameIndex == 0? 0 : 1;\r\n\r\n        this._timeline = timeline || new Timeline();\r\n    }\r\n\r\n    public get isInit():boolean\r\n    {\r\n        return this._isInit;\r\n    }\r\n    public set isInit(value:boolean)\r\n    {\r\n        this._isInit = value;\r\n    }\r\n\r\n\r\n    public get timeline():Timeline\r\n    {\r\n        return this._timeline;\r\n    }\r\n    public set timeline(value:Timeline)\r\n    {\r\n        this._timeline = value;\r\n    }\r\n    public get loop()\r\n    {\r\n        return this._loop;\r\n    }\r\n\r\n    public set loop(value:boolean)\r\n    {\r\n        this._loop = value;\r\n    }\r\n\r\n    public get numFrames() : number\r\n    {\r\n        return this._timeline.numFrames;\r\n    }\r\n\r\n    public jumpToLabel(label:string) : void\r\n    {\r\n        // the timeline.jumpTolabel will set currentFrameIndex\r\n        this._timeline.jumpToLabel(this, label);\r\n    }\r\n\r\n    public get currentFrameIndex() : number\r\n    {\r\n        return this._currentFrameIndex;\r\n    }\r\n    public get constructedKeyFrameIndex() : number\r\n    {\r\n        return this._constructedKeyFrameIndex;\r\n    }\r\n\r\n    public set constructedKeyFrameIndex(value : number)\r\n    {\r\n        this._constructedKeyFrameIndex = value;\r\n    }\r\n\r\n    public exit_frame():void\r\n    {\r\n\r\n        this._skipAdvance = false;\r\n        var i:number=this.numChildren;\r\n        while (i--){\r\n            var child:DisplayObject=this.getChildAt(i);\r\n            if(child.isAsset(MovieClip)){\r\n                (<MovieClip>child).exit_frame();\r\n            }\r\n        }\r\n    }\r\n    public reset():void\r\n    {\r\n        // time only is relevant for the root mc, as it is the only one that executes the update function\r\n        this._time = 0;\r\n\r\n        if(this.adapter)this.adapter.freeFromScript();\r\n\r\n        this._isPlaying = true;\r\n\r\n        this._currentFrameIndex = -1;\r\n        this._constructedKeyFrameIndex = -1;\r\n        var i:number=this.numChildren;\r\n        while (i--){\r\n            this.removeChildAt(i);\r\n        }\r\n\r\n        this._skipAdvance = true;\r\n        if (this._timeline.numFrames) {\r\n            this._currentFrameIndex = 0;\r\n            this._timeline.constructNextFrame(this, true, true);\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Setting the currentFrameIndex without moving the playhead for this movieclip to the new position\r\n     */\r\n    public set_currentFrameIndex(value : number) {\r\n        this._skipAdvance = true;\r\n        this._currentFrameIndex = value;\r\n    }\r\n    /*\r\n    * Setting the currentFrameIndex will move the playhead for this movieclip to the new position\r\n     */\r\n    public set currentFrameIndex(value : number)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            value = Math.floor(value);\r\n            if (value < 0)\r\n                value = 0;\r\n            else if (value >= this._timeline.numFrames)\r\n                value = this._timeline.numFrames - 1;\r\n\r\n            // on changing currentframe we do not need to set skipadvance. the advanceframe should already be happened...\r\n            this._skipAdvance = true;\r\n            //this._time = 0;\r\n\r\n            this._timeline.gotoFrame(this, value);\r\n            this._currentFrameIndex = value;\r\n        }\r\n    }\r\n\r\n    public addButtonListeners()\r\n    {\r\n        this._isButton = true;\r\n\r\n        this.stop();\r\n\r\n        this.addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.addEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n    }\r\n\r\n    public removeButtonListeners()\r\n    {\r\n        this.removeEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver);\r\n        this.removeEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut);\r\n        this.removeEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown);\r\n        this.removeEventListener(MouseEvent.MOUSE_UP, this._onMouseUp);\r\n\r\n    }\r\n\r\n    public getChildAtSessionID(sessionID:number):DisplayObject\r\n    {\r\n        return this._active_session_ids[sessionID];\r\n    }\r\n    public addChildAtDepth(child:DisplayObject, depth:number, replace:boolean = true):DisplayObject\r\n    {\r\n        //this should be implemented for all display objects\r\n        child.inheritColorTransform = true;\r\n        child.reset_to_init_state();// this takes care of transform and visibility\r\n\t\tsuper.addChildAtDepth(child, depth, replace);\r\n        if(child.isAsset(MovieClip))(<MovieClip>child).reset();\r\n        this._active_session_ids[child._sessionID]=child;\r\n        return child;\r\n    }\r\n\r\n    public removeChild(child:DisplayObject):DisplayObject\r\n    {\r\n        super.removeChild(child);\r\n        if(child.adapter)child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        this._active_session_ids[child._sessionID]=null;\r\n        return child;\r\n    }\r\n\r\n    public removeChildAtDepth(depth:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject=super.removeChildAtDepth(depth);\r\n        if(child.adapter)child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        this._active_session_ids[child._sessionID]=null;\r\n        return child;\r\n    }\r\n    public removeChildAt(index:number /*int*/):DisplayObject\r\n    {\r\n        var child:DisplayObject=super.removeChildAt(index);\r\n        if(child.adapter)child.adapter.freeFromScript();\r\n        this.adapter.unregisterScriptObject(child);\r\n        this._active_session_ids[child._sessionID]=null;\r\n        return child;\r\n    }\r\n\r\n    public get assetType():string\r\n    {\r\n        return MovieClip.assetType;\r\n    }\r\n\r\n    /**\r\n     * Starts playback of animation from current position\r\n     */\r\n    public play()\r\n    {\r\n        this._isPlaying = true;\r\n    }\r\n\r\n    /**\r\n     * should be called right before the call to away3d-render.\r\n     */\r\n    public update()\r\n    {\r\n        this.advanceFrame();\r\n        // after we advanced the scenegraph, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n        // now we want to execute the onEnter\r\n        this.dispatchEvent(this._enterFrame);\r\n        // after we executed the onEnter, we might have some script that needs executing\r\n        FrameScriptManager.execute_queue();\r\n\r\n\r\n        FrameScriptManager.execute_intervals();\r\n        FrameScriptManager.execute_queue();\r\n\r\n        this.exit_frame();\r\n    }\r\n\r\n    public getPotentialChildInstance(id:number) : DisplayObject\r\n    {\r\n        if (!this._potentialInstances[id]) {\r\n            this._potentialInstances[id] = this._timeline.getPotentialChildInstance(id);\r\n        }\r\n\r\n        return this._potentialInstances[id];\r\n    }\r\n\r\n\r\n    /**\r\n     * Stop playback of animation and hold current position\r\n     */\r\n    public stop()\r\n    {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    public clone(newInstance:MovieClip = null) : DisplayObject\r\n    {\r\n        newInstance = <MovieClip> super.clone(newInstance || new MovieClip(this._timeline));\r\n\r\n        newInstance._loop = this._loop;\r\n\r\n        return newInstance;\r\n    }\r\n\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper.iSetParent(value);\r\n\t}\r\n\r\n    public advanceFrame(skipChildren:boolean = false)\r\n    {\r\n        if(this._timeline.numFrames) {\r\n            var i;\r\n            var oldFrameIndex = this._currentFrameIndex;\r\n            var advance = (this._isPlaying && !this._skipAdvance) || oldFrameIndex == -1;\r\n            if (advance && oldFrameIndex == this._timeline.numFrames - 1 && !this._loop) {\r\n                advance = false;\r\n            }\r\n            if (advance && oldFrameIndex == 0 && this._timeline.numFrames == 1) {\r\n                this._currentFrameIndex = 0;\r\n                advance = false;\r\n            }\r\n            if (advance) {\r\n                ++this._currentFrameIndex;\r\n                if (this._currentFrameIndex == this._timeline.numFrames) {\r\n                    // looping - jump to first frame.\r\n                    this.currentFrameIndex=0;\r\n                }\r\n                else if (oldFrameIndex != this._currentFrameIndex){\r\n                    // not looping - construct next frame\r\n                    this._timeline.constructNextFrame(this);\r\n                }\r\n            }\r\n            if (!skipChildren)\r\n                this.advanceChildren();\r\n\r\n        }\r\n        this._skipAdvance = false;\r\n    }\r\n\r\n    private advanceChildren()\r\n    {\r\n        var len = this.numChildren;\r\n        for (var i = 0; i <  len; ++i) {\r\n            var child = this.getChildAt(i);\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip>child).advanceFrame();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n// DEBUG CODE:\r\n    logHierarchy(depth: number = 0):void\r\n    {\r\n        this.printHierarchyName(depth, this);\r\n\r\n        var len = this.numChildren;\r\n        for (var i = 0; i < len; i++) {\r\n            var child = this.getChildAt(i);\r\n\r\n            if (child.isAsset(MovieClip))\r\n                (<MovieClip>child).logHierarchy(depth + 1);\r\n            else\r\n                this.printHierarchyName(depth + 1, child);\r\n        }\r\n    }\r\n\r\n    printHierarchyName(depth:number, target:DisplayObject)\r\n    {\r\n        var str = \"\";\r\n        for (var i = 0; i < depth; ++i)\r\n            str += \"--\";\r\n\r\n        str += \" \" + target.name + \" = \" + target.maskId;\r\n        console.log(str);\r\n    }\r\n\r\n\r\n}\r\nexport = MovieClip;\r\n",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone.maskId = this.maskId;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\nimport TextFormatAlign\t\t\t\t= require(\"awayjs-display/lib/text/TextFormatAlign\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tvalue=value.toString();\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic _textColor:number /*int*/;\r\n\r\n\tget textColor(){\r\n\t\treturn this._textColor;\r\n\t}\r\n\tset textColor(value:number){\r\n\t\tthis._textColor=value;\r\n\t\tif(this.colorTransform==null){\r\n\t\t\tthis.colorTransform=new ColorTransform();\r\n\t\t}\r\n\t\tthis.colorTransform.color=value;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\tpublic set textWidth(value:number)\r\n\t{\r\n\t\tthis._textWidth = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\tpublic set textHeight(value:number)\r\n\t{\r\n\t\tthis._textHeight = value;\r\n\t}\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t\tthis.type = TextFieldType.STATIC;\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\r\n\t\tif(this._textFormat==null)\r\n\t\t\treturn;\r\n\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._text==\"\")\r\n\t\t\treturn;\r\n\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar additional_margin_x:number=(this._textFormat.size * this._textFormat.font_table.offset_x);\r\n\t\tvar additional_margin_y:number=(this._textFormat.size * this._textFormat.font_table.offset_y);\r\n\t\tvar y_offset:number=additional_margin_y;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tvar textlines:Array<string> = this.text.toString().split(\"\\r\");\r\n\t\tfor (var tl = 0; tl < textlines.length; tl++) {\r\n\t\t\tvar textlines2:Array<string> = textlines[tl].split(\"\\n\");\r\n\t\t\tfor (var t2 = 0; t2 < textlines2.length; t2++) {\r\n\t\t\t\tvar line_width:number = 0;\r\n\t\t\t\tvar c_cnt:number = 0;\r\n\t\t\t\tvar font_chars:Array<TesselatedFontChar> = [];\r\n\t\t\t\tvar font_chars_scale:Array<number> =[];\r\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\r\n\t\t\t\t\tchar_scale=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\r\n\t\t\t\t\tif(this_char == null) {\r\n\t\t\t\t\t\tif(this._textFormat.fallback_font_table) {\r\n\t\t\t\t\t\t\tchar_scale = this._textFormat.size / this._textFormat.fallback_font_table.get_font_em_size();\r\n\t\t\t\t\t\t\tthis_char = this._textFormat.fallback_font_table.get_subgeo_for_char(textlines2[t2].charCodeAt(i).toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tline_width += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t//x_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t\t\tline_width += this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfont_chars_scale[c_cnt]=char_scale;\r\n\t\t\t\t\tfont_chars[c_cnt++]=this_char;\r\n\t\t\t\t}\r\n\t\t\t\tvar x_offset:number=additional_margin_x;\r\n\t\t\t\tif(this._textFormat.align==\"center\"){\r\n\t\t\t\t\tx_offset=(this._textWidth-line_width)/2;\r\n\t\t\t\t}\r\n\t\t\t\telse if(this._textFormat.align==\"right\"){\r\n\t\t\t\t\tx_offset=(this._textWidth-line_width)-additional_margin_x;\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(\"this._textFormat.align=\"+this._textFormat.align);\r\n\t\t\t\t//console.log(\"this._width=\"+this._width);\r\n\t\t\t\tfor (var i = 0; i < textlines2[t2].length; i++) {\r\n\t\t\t\t\tvar this_char:TesselatedFontChar = font_chars[i];\r\n\t\t\t\t\tchar_scale = font_chars_scale[i];\r\n\t\t\t\t\tif (this_char != null) {\r\n\t\t\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\t\t\tfor (var v:number = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\t\t\tvar kerning_value:number = 0;\r\n\t\t\t\t\t\t\tif (prev_char != null) {\r\n\t\t\t\t\t\t\t\tfor (var k:number = 0; k < prev_char.kerningCharCodes.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (prev_char.kerningCharCodes[k] == this._text.charCodeAt(i)) {\r\n\t\t\t\t\t\t\t\t\t\tkerning_value = prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tx_offset += ((this_char.char_width + kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tx_offset+=this._textFormat.font_table.get_whitespace_width() * char_scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ty_offset+=this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n\t\tclone.geometry = new Geometry();\r\n\t\t//clone.material = this._material;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.boundsType = this.boundsType;\r\n\r\n\r\n\t\tclone.name = this.name;\r\n\t\tclone.castsShadows = this.castsShadows;\r\n\t\tclone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n\t\tclone.mouseEnabled = this.mouseEnabled;\r\n\t\tclone.mouseChildren = this.mouseChildren;\r\n\t\t//this is of course no proper cloning\r\n\t\t//maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n\t\tclone.extra = this.extra;\r\n\t\tclone.maskId = this.maskId;\r\n\t\tclone.masks = this.masks? this.masks.concat() : null;\r\n\r\n\t\t//var len:number = this._subMeshes.length;\r\n\t\t//for (var i:number = 0; i < len; ++i)\r\n\t\t//\tclone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n\t\tvar len = this.numChildren;\r\n\t\tvar i;\r\n\t\tfor (i = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this.getChildAt(i).clone());\r\n\r\n\t\t//if (this._animator)\r\n\t\t//\tclone.animator = this._animator.clone();\r\n\t\tclone.textWidth=this.textWidth;\r\n\t\tclone.textHeight=this.textHeight;\r\n       \tclone.textFormat = this._textFormat;\r\n        //clone.textColor = clone.textColor;\r\n       \tclone.text = this._text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SKEW_CHANGED:string = \"skewChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\nclass TouchEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:TouchEvent;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_END:string = \"touchEnd3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_BEGIN:string = \"touchBegin3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_MOVE:string = \"touchMove3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OUT:string = \"touchOut3d\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static TOUCH_OVER:string = \"touchOver3d\";\r\n\t\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\t\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\t\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\t\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\t\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\t\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\t\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\t\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\t\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\t\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\t\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\t\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\r\n\tpublic touchPointID:number;\r\n\t\r\n\t/**\r\n\t * Create a new TouchEvent object.\r\n\t * @param type The type of the TouchEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\t\t\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a copy of the TouchEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:TouchEvent = new TouchEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\t\t\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\t\t\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\t\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\t\t\r\n\t\tresult._iParentEvent = this;\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\t\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = TouchEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport BitmapImageCube\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImageCube\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultBitmapImageCube:BitmapImageCube;\r\n\tprivate static _defaultCubeTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultTextureMaterial:BasicMaterial;\r\n\tprivate static _defaultColorMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\tprivate static _defaultCubeTexture:SingleCubeTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultColorMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultColorMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultColorMaterial;\r\n\t\t}\r\n\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTextureMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTextureMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTextureMaterial;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTextureMaterial)\r\n\t\t\tDefaultMaterialManager.createDefaultTextureMaterial();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTextureMaterial;\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):TextureBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(Skybox)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultCubeTexture;\r\n\t\t}\r\n\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTexture()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImageCube)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImageCube();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTexture = new SingleCubeTexture(DefaultMaterialManager._defaultBitmapImageCube);\r\n\t\tDefaultMaterialManager._defaultCubeTexture.name = \"defaultCubeTexture\";\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImageCube()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultBitmapImage2D)\r\n\t\t\tDefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\r\n\t\tvar b = new BitmapImageCube(DefaultMaterialManager._defaultBitmapImage2D.width);\r\n\r\n\t\tfor (var i:number = 0; i < 6; i++)\r\n\t\t\tb.draw(i, DefaultMaterialManager._defaultBitmapImage2D);\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImageCube = b;\r\n\t}\r\n\r\n\tprivate static createCheckeredBitmapImage2D()\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = b;\r\n\t}\r\n\r\n\tprivate static createDefaultTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTextureMaterial.name = \"defaultTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultCubeTextureMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultCubeTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultCubeTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial = new BasicMaterial(DefaultMaterialManager._defaultCubeTexture);\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultCubeTextureMaterial.name = \"defaultCubeTextureMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultColorMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultColorMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultColorMaterial.name = \"defaultColorMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\n\r\nclass FrameScriptManager\r\n{\r\n\t// queues pass1 of scripts.\r\n\tprivate static _queued_mcs:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts:Array<Function> = [];\r\n\r\n\t// queues pass2 of scripts. this will be inserted in reversed order into pass1 queue right before something should be added to pass1\r\n\tprivate static _queued_mcs_pass2:Array<MovieClip> = [];\r\n\tprivate static _queued_scripts_pass2:Array<Function> = [];\r\n\r\n\tprivate static _active_intervals:Object = new Object(); // maps id to function\r\n\r\n\tprivate static _intervalID:number=0;\r\n\tpublic static setInterval(func:any):number\r\n\t{\r\n\t\tthis._intervalID++;\r\n\t\tthis._active_intervals[this._intervalID]=func;\r\n\t\treturn this._intervalID\r\n\t}\r\n\r\n\tpublic static clearInterval(id:number):void\r\n\t{\r\n\t\tdelete this._active_intervals[id];\r\n\t}\r\n\r\n\tpublic static execute_intervals():void\r\n\t{\r\n\t\tfor(var key in this._active_intervals){\r\n\t\t\tthis._active_intervals[key].call();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static add_script_to_queue(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\t// whenever we queue scripts of new objects, we first inject the lists of pass2\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\t\tthis._queued_mcs.push(mc);\r\n\t\tthis._queued_scripts.push(script);\r\n\t}\r\n\r\n\tpublic static add_script_to_queue_pass2(mc:MovieClip, script:Function):void\r\n\t{\r\n\t\tthis._queued_mcs_pass2.push(mc);\r\n\t\tthis._queued_scripts_pass2.push(script);\r\n\t}\r\n\r\n\tpublic static execute_queue():void\r\n\t{\r\n\t\tif(this._queued_mcs.length==0 && this._queued_mcs_pass2.length==0)\r\n\t\t\treturn;\r\n\r\n\t\tvar i=this._queued_mcs_pass2.length;\r\n\t\twhile(i--){\r\n\t\t\tthis._queued_mcs.push(this._queued_mcs_pass2[i]);\r\n\t\t\tthis._queued_scripts.push(this._queued_scripts_pass2[i]);\r\n\t\t}\r\n\t\tthis._queued_mcs_pass2=[];\r\n\t\tthis._queued_scripts_pass2=[];\r\n\r\n\t\tvar mc:MovieClip;\r\n\t\tfor (i = 0; i <this._queued_mcs.length; i++) {\r\n\t\t\t// during the loop we might add more scripts to the queue\r\n\t\t\tmc=this._queued_mcs[i];\r\n\t\t\tif(mc.scene!=null) {\r\n\t\t\t\tvar caller = mc.adapter ? mc.adapter : mc;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._queued_scripts[i].call(caller);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err) {\r\n\t\t\t\t\tconsole.log(\"Script error in \" + mc.name + \"\\n\", this._queued_scripts[i]);\r\n\t\t\t\t\tconsole.log(err.message);\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// all scripts executed. clear all\r\n\t\tthis._queued_mcs=[];\r\n\t\tthis._queued_scripts=[];\r\n\t}\r\n}\r\nexport = FrameScriptManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\nimport FrameScriptManager\t\t\t= require(\"awayjs-display/lib/managers/FrameScriptManager\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\t if (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\t// bubble event up the heirarchy until the top level parent is reached\r\n\t\t\twhile (dispatcher) {\r\n\t\t\t\tif (dispatcher._iIsMouseEnabled())\r\n\t\t\t\t\tdispatcher.dispatchEvent(event);\r\n\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t}\r\n\t\t\t// not totally sure, but i think just calling it is easier and cheaper than any options for that\r\n\t\t\t// if nothing is queued, the function will return directly anyway\r\n\t\t\tFrameScriptManager.execute_queue();\r\n\r\n\t\t}\r\n\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event)\r\n\t{\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = (event.clientX != null)? event.clientX : event.changedTouches[0].clientX;\r\n\t\tvar mouseY:number = (event.clientY != null)? event.clientY : event.changedTouches[0].clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayTouchEvent\t\t\t\t= require(\"awayjs-display/lib/events/TouchEvent\");\r\n\r\nclass TouchManager\r\n{\r\n\tprivate static _instance:TouchManager;\r\n\r\n\tprivate _updateDirty:boolean = true;\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _numTouchPoints:number;\r\n\tprivate _touchPoint:TouchPoint;\r\n\tprivate _iCollidingObject:PickingCollisionVO;\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tpublic static _iCollidingObjectFromTouchId:Object;\r\n\tpublic static _previousCollidingObjectFromTouchId:Object;\r\n\tprivate _queuedEvents:Array<AwayTouchEvent> = new Array<AwayTouchEvent>();\r\n\t\r\n\tprivate _touchPoints:Array<TouchPoint>;\r\n\tprivate _touchPointFromId:Object;\r\n\t\r\n\tprivate _touchMoveEvent:TouchEvent;\r\n\r\n\tprivate _touchOut:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OUT);\r\n\tprivate _touchBegin:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_BEGIN);\r\n\tprivate _touchMove:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_MOVE);\r\n\tprivate _touchEnd:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_END);\r\n\tprivate _touchOver:AwayTouchEvent = new AwayTouchEvent(AwayTouchEvent.TOUCH_OVER);\r\n\r\n\tprivate onTouchBeginDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchMoveDelegate:(event:TouchEvent) => void;\r\n\tprivate onTouchEndDelegate:(event:TouchEvent) => void;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\tthis._touchPoints = new Array<TouchPoint>();\r\n\t\tthis._touchPointFromId = new Object();\r\n\t\tTouchManager._iCollidingObjectFromTouchId = new Object();\r\n\t\tTouchManager._previousCollidingObjectFromTouchId = new Object();\r\n\r\n\t\tthis.onTouchBeginDelegate = (event:TouchEvent) => this.onTouchBegin(event);\r\n\t\tthis.onTouchMoveDelegate = (event:TouchEvent) => this.onTouchMove(event);\r\n\t\tthis.onTouchEndDelegate = (event:TouchEvent) => this.onTouchEnd(event);\r\n\t}\r\n\r\n\tpublic static getInstance():TouchManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new TouchManager());\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Interface.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tpublic updateCollider(forceTouchMove:boolean)\r\n\t{\r\n\t\t//if (forceTouchMove || this._updateDirty) { // If forceTouchMove is off, and no 2D Touch events dirty the update, don't update either.\r\n\t\t//\tfor (var i:number; i < this._numTouchPoints; ++i) {\r\n\t\t//\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t//\t\tthis._iCollidingObject = this._touchPicker.getViewCollision(this._touchPoint.x, this._touchPoint.y, this._view);\r\n\t\t//\t\tTouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ] = this._iCollidingObject;\r\n\t\t//\t}\r\n\t\t//}\r\n\t}\r\n\t\r\n\tpublic fireTouchEvents(forceTouchMove:boolean)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[i];\r\n\t\t\t// If colliding object has changed, queue over/out events.\r\n\t\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tthis._previousCollidingObject = TouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOut, this._touchMoveEvent, this._previousCollidingObject, this._touchPoint);\r\n\t\t\t\tif (this._iCollidingObject)\r\n\t\t\t\t\tthis.queueDispatch(this._touchOver, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t\t}\r\n\t\t\t// Fire Touch move events here if forceTouchMove is on.\r\n\t\t\tif (forceTouchMove && this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._touchMove, this._touchMoveEvent, this._iCollidingObject, this._touchPoint);\r\n\t\t}\r\n\r\n\t\tvar event:AwayTouchEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t// Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a TouchChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\t\t\t\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\t\t\t\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._updateDirty = false;\r\n\t\t\r\n\t\tfor (i = 0; i < this._numTouchPoints; ++i) {\r\n\t\t\tthis._touchPoint = this._touchPoints[ i ];\r\n\t\t\tTouchManager._previousCollidingObjectFromTouchId[ this._touchPoint.id ] = TouchManager._iCollidingObjectFromTouchId[ this._touchPoint.id ];\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"touchstart\", this.onTouchBeginDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchmove\", this.onTouchMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"touchend\", this.onTouchEndDelegate);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate queueDispatch(event:AwayTouchEvent, sourceEvent:TouchEvent, collider:PickingCollisionVO, touch:TouchPoint)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\tevent.altKey = sourceEvent.altKey;\r\n\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\tevent.screenX = touch.x;\r\n\t\tevent.screenY = touch.y;\r\n\t\tevent.touchPointID = touch.id;\r\n\t\t\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t\t// SubGeometryIndex.\r\n\t\t\tevent.subGeometryIndex = collider.index;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\t\t\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\t\r\n\t// ---------------------------------------------------------------------\r\n\t// Event handlers.\r\n\t// ---------------------------------------------------------------------\r\n\t\r\n\tprivate onTouchBegin(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\tvar touch:TouchPoint = new TouchPoint();\r\n\t\t//touch.id = event.touchPointID;\r\n\t\t//touch.x = event.stageX;\r\n\t\t//touch.y = event.stageY;\r\n\t\tthis._numTouchPoints++;\r\n\t\tthis._touchPoints.push(touch);\r\n\t\tthis._touchPointFromId[ touch.id ] = touch;\r\n\r\n\t\t//this.updateCollider(event); // ensures collision check is done with correct mouse coordinates on mobile\r\n\r\n\t\tthis._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._touchBegin, event, this._iCollidingObject, touch);\r\n\r\n\t\tthis._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchMove(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t////touch.x = event.stageX;\r\n\t\t////touch.y = event.stageY;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchMove, this._touchMoveEvent = event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n\t\r\n\tprivate onTouchEnd(event:TouchEvent)\r\n\t{\r\n\t\t\r\n\t\t//var touch:TouchPoint = this._touchPointFromId[ event.touchPointID ];\r\n\t\t//\r\n\t\t//if (!touch) return;\r\n\t\t//\r\n\t\t//this._iCollidingObject = TouchManager._iCollidingObjectFromTouchId[ touch.id ];\r\n\t\t//if (this._iCollidingObject)\r\n\t\t//\tthis.queueDispatch(this._touchEnd, event, this._iCollidingObject, touch);\r\n\t\t//\r\n\t\t//this._touchPointFromId[ touch.id ] = null;\r\n\t\t//this._numTouchPoints--;\r\n\t\t//this._touchPoints.splice(this._touchPoints.indexOf(touch), 1);\r\n\t\t//\r\n\t\t//this._updateDirty = true;\r\n\t}\r\n}\r\n\r\n\r\nexport = TouchManager;\r\n\r\nclass TouchPoint\r\n{\r\n\tpublic id:number;\r\n\tpublic x:number;\r\n\tpublic y:number;\r\n}\r\n\r\n\r\n/**\r\n * Classes for Touch Interfaces\r\n */\r\ninterface TouchEvent extends UIEvent {\r\n\ttouches: TouchList;\r\n\ttargetTouches: TouchList;\r\n\tchangedTouches: TouchList;\r\n\taltKey: boolean;\r\n\tmetaKey: boolean;\r\n\tctrlKey: boolean;\r\n\tshiftKey: boolean;\r\n\trotation: number;\r\n\tscale: number;\r\n\r\n\t// for iOS\r\n\tinitTouchEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, scale: number, rotation: number): void\r\n\r\n\t// for Android\r\n\tinitTouchEvent(touchesArg: TouchList, targetTouchesArg: TouchList, changedTouchesArg: TouchList, typeArg: string, Aview: Window, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean);\r\n}\r\n\r\ndeclare var TouchEvent: {\r\n\tprototype: TouchEvent;\r\n\tnew (): TouchEvent;\r\n}\r\n\r\ninterface TouchList {\r\n\tlength: number;\r\n\t[index: number]: Touch;\r\n\titem: (index: number) => Touch;\r\n}\r\n\r\ninterface Touch {\r\n\tidentifier: number;\r\n\ttarget: EventTarget;\r\n\tscreenX: number;\r\n\tscreenY: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tpageX: number;\r\n\tpageY: number;\r\n}\r\n\r\ninterface Window {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface Document {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ninterface HTMLElement {\r\n\tontouchstart: (ev: TouchEvent) => any;\r\n\tontouchmove: (ev: TouchEvent) => any;\r\n\tontouchend: (ev: TouchEvent) => any;\r\n\tontouchcancel: (ev: TouchEvent) => any;\r\n\taddEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n}\r\n\r\ndeclare var ontouchstart: (ev: TouchEvent) => any;\r\ndeclare var ontouchmove: (ev: TouchEvent) => any;\r\ndeclare var ontouchend: (ev: TouchEvent) => any;\r\ndeclare var ontouchcancel: (ev: TouchEvent) => any;\r\n\r\ndeclare function addEventListener(type: string, listener: (ev: TouchEvent) => any, useCapture?: boolean): void;\r\n\r\n",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass BasicPartition extends PartitionBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._rootNode = new NodeBase();\r\n\t}\r\n}\r\n\r\nexport = BasicPartition;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tconstructor(pool:EntityNodePool, camera:Camera, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CollectorBase = require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity = require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer = require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport PartitionBase\t\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase = require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode = require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport ContainerNodePool = require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\nimport INode\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\n\r\n/**\r\n * Maintains scenegraph heirarchy when collecting nodes\r\n */\r\nclass ContainerNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n    public isContainerNode:boolean = true;\r\n\r\n    public _iUpdateQueueNext:IDisplayObjectNode;\r\n\r\n    private _pool:ContainerNodePool;\r\n    private _container : DisplayObjectContainer;\r\n    private _partition:PartitionBase;\r\n    private _childDepths:Array<number> = new Array<number>();\r\n    private _childMasks:Array<INode> = new Array<INode>();\r\n    private _numChildMasks:number = 0;\r\n\r\n    public _pEntityNode:IDisplayObjectNode;\r\n\r\n    constructor(pool:ContainerNodePool, container:DisplayObjectContainer, partition:PartitionBase)\r\n    {\r\n        super();\r\n\r\n        this._pool = pool;\r\n        this._container = container;\r\n        this._partition = partition;\r\n    }\r\n\r\n    public get displayObject():DisplayObject\r\n    {\r\n        return this._container;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param traverser\r\n     */\r\n    public acceptTraverser(traverser:CollectorBase)\r\n    {\r\n        if (this.numEntities == 0 && !this._pImplicitDebugVisible)\r\n            return;\r\n\r\n        if (traverser.enterNode(this)) {\r\n            if (this._pEntityNode)\r\n                this._pEntityNode.acceptTraverser(traverser);\r\n\r\n            var i:number;\r\n            for (i = 0; i < this._numChildMasks; i++)\r\n                this._childMasks[i].acceptTraverser(traverser);\r\n\r\n            for (i = 0; i < this._pNumChildNodes; i++)\r\n                this._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n            if (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n                traverser.applyEntity(this._pDebugEntity);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @returns {away.partition.NodeBase}\r\n     */\r\n    public findParentForNode(node:IDisplayObjectNode):INode\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer)\r\n            return this._pool.getItem(<DisplayObjectContainer> node.displayObject);\r\n\r\n        return this._pool.getItem(node.displayObject.parent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iAddNode(node:IDisplayObjectNode)\r\n    {\r\n        node.parent = this;\r\n\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = node;\r\n        } else if (node.displayObject.maskId != -1) {\r\n            this._childMasks.push(node);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var depth:number = this._container.getChildDepth(node.displayObject);\r\n            var len:number = this._childDepths.length;\r\n            var index:number = len;\r\n\r\n            while (index--)\r\n                if (this._childDepths[index] < depth)\r\n                    break;\r\n\r\n            index++;\r\n\r\n            if (index < len) {\r\n                this._pChildNodes.splice(index, 0, node);\r\n                this._childDepths.splice(index, 0, depth);\r\n            } else {\r\n                this._pChildNodes.push(node);\r\n                this._childDepths.push(depth);\r\n            }\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities += numEntities;\r\n        } while ((node = <EntityNode> node.parent) != null);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @internal\r\n     */\r\n    public iRemoveNode(node:IDisplayObjectNode)\r\n    {\r\n        if (!node.isContainerNode && node.displayObject.isContainer) {\r\n            this._pEntityNode = null;\r\n        } else if (node.displayObject.maskId != -1) {\r\n            this._childMasks.splice(this._childMasks.indexOf(node), 1);\r\n            this._numChildMasks = this._childMasks.length;\r\n        } else {\r\n            var index:number = this._pChildNodes.indexOf(node);\r\n\r\n            this._pChildNodes.splice(index, 1);\r\n            this._childDepths.splice(index, 1);\r\n\r\n            this._pNumChildNodes = this._childDepths.length;\r\n        }\r\n\r\n        node._iUpdateImplicitDebugVisible(false);\r\n\r\n        var numEntities:number = node.numEntities;\r\n        node = this;\r\n\r\n        do {\r\n            node.numEntities -= numEntities;\r\n        } while ((node = <IDisplayObjectNode> node.parent) != null);\r\n    }\r\n}\r\nexport = ContainerNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static assetClass:IAssetClass = DirectionalLight;\r\n\r\n\tprivate _directionalLight:DirectionalLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:DirectionalLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase implements IDisplayObjectNode\r\n{\r\n\tpublic isContainerNode:boolean = false;\r\n\r\n\tpublic _iUpdateQueueNext:IDisplayObjectNode;\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:DisplayObject;\r\n\tprivate _partition:PartitionBase;\r\n\tpublic _bounds:BoundingVolumeBase;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:DisplayObject, partition:PartitionBase)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis.numEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get displayObject():DisplayObject\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.displayObject.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn true; // todo: hack for 2d. attention. might break stuff in 3d.\r\n\t\t//return this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(<IEntity> this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\t//this._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:LightProbe;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:LightProbe, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase implements INode\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _pChildNodes:Array<INode> = new Array<INode>();\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\tpublic numEntities:number = 0;\r\n\r\n\tpublic parent:INode;\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this.parent? this.parent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findParentForNode(node:INode):INode\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this.numEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tfor (var i:number = 0; i < this._pNumChildNodes; i++)\r\n\t\t\t\tthis._pChildNodes[i].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:INode)\r\n\t{\r\n\t\tnode.parent = this;\r\n\t\tthis.numEntities += node.numEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities += numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:INode)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node.numEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode.numEntities -= numEntities;\r\n\t\t} while ((node = node.parent) != null);\r\n\t}\r\n\r\n\tpublic _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "import DisplayObject = require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IDisplayObjectNode\t\t\t= require(\"awayjs-display/lib/partition/IDisplayObjectNode\");\r\nimport INode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/INode\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass PartitionBase\r\n{\r\n\tpublic _entityNodePool:EntityNodePool;\r\n\tpublic _rootNode:INode;\r\n\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:IDisplayObjectNode;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._entityNodePool = new EntityNodePool(this);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:IDisplayObjectNode)\r\n\t{\r\n\t\tvar t:IDisplayObjectNode;\r\n\r\n\t\tif (node.parent) {\r\n\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\tnode.parent = null;\r\n\t\t}\r\n\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:IDisplayObjectNode = this._updateQueue;\r\n\t\twhile (node) {\r\n\t\t\t//required for controllers with autoUpdate set to true and queued events\r\n\t\t\tnode.displayObject._iInternalUpdate();\r\n\t\t\tnode = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\t//reset head\r\n\t\tnode = this._updateQueue;\r\n\t\tvar targetNode:INode;\r\n\t\tvar t:IDisplayObjectNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findParentForNode(node);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node.parent)\r\n\t\t\t\t\tnode.parent.iRemoveNode(node);\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tif (displayObject.isEntity)\r\n\t\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(displayObject));\r\n\t}\r\n}\r\n\r\nexport = PartitionBase;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:PointLight;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:PointLight, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport ContainerNodePool\t\t\t= require(\"awayjs-display/lib/pool/ContainerNodePool\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass SceneGraphPartition extends PartitionBase\r\n{\r\n\tpublic _containerNodePool:ContainerNodePool;\r\n\r\n\tconstructor(rootContainer:DisplayObjectContainer)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._containerNodePool = new ContainerNodePool(this);\r\n\r\n\t\tthis._rootNode = this._containerNodePool.getItem(rootContainer);\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tsuper.traverse(traverser);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iRegisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iMarkForUpdate(this._containerNodePool.getItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper._iUnregisterEntity(displayObject);\r\n\r\n\t\tif (displayObject.isContainer)\r\n\t\t\tthis.iRemoveEntity(this._containerNodePool.disposeItem(<DisplayObjectContainer> displayObject));\r\n\t}\r\n}\r\n\r\nexport = SceneGraphPartition;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:Skybox;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:Skybox, partition:PartitionBase)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _x:number;\r\n\tprivate _y:number;\r\n\tprivate _view:View;\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._view = view;\r\n\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds && this.getMasksCollision(entity._iAssignedMasks()) ) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate getMasksCollision(masks:Array<Array<DisplayObject>>)\r\n\t{\r\n\t\t//horrible hack for 2d masks\r\n\t\tif (masks != null) {\r\n\t\t\tvar position:Vector3D = this._view.unproject(this._x, this._y, 1000);\r\n\t\t\tvar numLayers:number = masks.length;\r\n\t\t\tvar children:Array<DisplayObject>;\r\n\t\t\tvar numChildren:number;\r\n\t\t\tvar layerHit:boolean;\r\n\t\t\tfor (var i:number = 0; i < numLayers; i++) {\r\n\t\t\t\tchildren = masks[i];\r\n\t\t\t\tnumChildren = children.length;\r\n\t\t\t\tlayerHit = false;\r\n\t\t\t\tfor (var j:number = 0; j < numChildren; j++) {\r\n\t\t\t\t\tif (children[j].hitTestPoint(position.x, position.y, true, true)) {\r\n\t\t\t\t\t\tlayerHit = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!layerHit)\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\n\r\n/**\r\n * @class away.pool.ContainerNodePool\r\n */\r\nclass ContainerNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _containerNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\treturn (this._containerNodePool[displayObjectContainer.id] || (this._containerNodePool[displayObjectContainer.id] = displayObjectContainer._iAddContainerNode(new ContainerNode(this, displayObjectContainer, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObjectContainer:DisplayObjectContainer):ContainerNode\r\n\t{\r\n\t\tvar containerNode:ContainerNode = this._containerNodePool[displayObjectContainer.id];\r\n\r\n\t\tif (containerNode) {\r\n\t\t\tdisplayObjectContainer._iRemoveContainerNode(containerNode);\r\n\r\n\t\t\tdelete this._containerNodePool[displayObjectContainer.id];\r\n\t\t}\r\n\r\n\t\treturn containerNode;\r\n\t}\r\n}\r\n\r\nexport = ContainerNodePool;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IAssetClass\t\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MovieClip\t\t\t\t\t= require(\"awayjs-display/lib/entities/MovieClip\");\r\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport LineSegment\t\t\t\t\t= require(\"awayjs-display/lib/entities/LineSegment\");\r\nimport TextField\t\t\t\t\t= require(\"awayjs-display/lib/entities/TextField\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport ContainerNode\t\t\t\t= require(\"awayjs-display/lib/partition/ContainerNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport PartitionBase\t\t\t\t= require(\"awayjs-display/lib/partition/PartitionBase\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate static _classPool:Object = new Object();\r\n\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _partition:PartitionBase;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(partition:PartitionBase)\r\n\t{\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[displayObject.id] || (this._entityNodePool[displayObject.id] = displayObject._iAddEntityNode(new (EntityNodePool.getClass(displayObject))(this, displayObject, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(displayObject:DisplayObject):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[displayObject.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tdisplayObject._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tdelete this._entityNodePool[displayObject.id];\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param imageObjectClass\r\n\t */\r\n\tpublic static registerClass(entityNodeClass:IEntityNodeClass, assetClass:IAssetClass)\r\n\t{\r\n\t\tEntityNodePool._classPool[assetClass.assetType] = entityNodeClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(displayObject:DisplayObject):IEntityNodeClass\r\n\t{\r\n\t\treturn EntityNodePool._classPool[displayObject.assetType];\r\n\t}\r\n\r\n\tprivate static main = EntityNodePool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tEntityNodePool.registerClass(CameraNode, Camera);\r\n\t\tEntityNodePool.registerClass(DirectionalLightNode, DirectionalLight);\r\n\t\tEntityNodePool.registerClass(EntityNode, Mesh);\r\n\t\tEntityNodePool.registerClass(EntityNode, Billboard);\r\n\t\tEntityNodePool.registerClass(EntityNode, LineSegment);\r\n\t\tEntityNodePool.registerClass(EntityNode, TextField);\r\n\t\tEntityNodePool.registerClass(EntityNode, MovieClip);\r\n\t\tEntityNodePool.registerClass(LightProbeNode, LightProbe);\r\n\t\tEntityNodePool.registerClass(PointLightNode, PointLight);\r\n\t\tEntityNodePool.registerClass(SkyboxNode, Skybox);\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get font_styles():Array<FontTable>\r\n\t{\r\n\t\treturn this._font_styles;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tpublic _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _whitespace_width:number;\r\n\tprivate _offset_x:number;\r\n\tprivate _offset_y:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t\tthis._offset_x=0;\r\n\t\tthis._offset_y=0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tget offset_x():number {\r\n\t\treturn this._offset_x;\r\n\t}\r\n\r\n\tset offset_x(value:number){\r\n\t\tthis._offset_x=value;\r\n\t}\r\n\r\n\tget offset_y():number {\r\n\t\treturn this._offset_y;\r\n\t}\r\n\r\n\tset offset_y(value:number){\r\n\t\tthis._offset_y=value;\r\n\t}\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_whitespace_width(value:number):void\r\n\t{\r\n\t\tthis._whitespace_width=value;\r\n\t}\r\n\tpublic get_whitespace_width():number\r\n\t{\r\n\t\treturn this._whitespace_width\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>static</code> TextField.\r\n\t */\r\n\tpublic static STATIC:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic fallback_font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 3;\r\n\t\t\tf2 += 3;\r\n\t\t\tf3 += 3;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}
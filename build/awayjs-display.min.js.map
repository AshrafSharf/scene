{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-display.js",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase.ts",
    "awayjs-display/lib/base/AlignmentMode.ts",
    "awayjs-display/lib/base/CurveSubGeometry.ts",
    "awayjs-display/lib/base/CurveSubMesh.ts",
    "awayjs-display/lib/base/DisplayObject.ts",
    "awayjs-display/lib/base/Geometry.ts",
    "awayjs-display/lib/base/LightBase.ts",
    "awayjs-display/lib/base/LineSubGeometry.ts",
    "awayjs-display/lib/base/LineSubMesh.ts",
    "awayjs-display/lib/base/LoaderInfo.ts",
    "awayjs-display/lib/base/OrientationMode.ts",
    "awayjs-display/lib/base/SubGeometryBase.ts",
    "awayjs-display/lib/base/SubMeshBase.ts",
    "awayjs-display/lib/base/Transform.ts",
    "awayjs-display/lib/base/TriangleSubGeometry.ts",
    "awayjs-display/lib/base/TriangleSubMesh.ts",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox.ts",
    "awayjs-display/lib/bounds/BoundingSphere.ts",
    "awayjs-display/lib/bounds/BoundingVolumeBase.ts",
    "awayjs-display/lib/bounds/BoundsType.ts",
    "awayjs-display/lib/bounds/NullBounds.ts",
    "awayjs-display/lib/containers/DisplayObjectContainer.ts",
    "awayjs-display/lib/containers/Loader.ts",
    "awayjs-display/lib/containers/Scene.ts",
    "awayjs-display/lib/containers/View.ts",
    "awayjs-display/lib/controllers/ControllerBase.ts",
    "awayjs-display/lib/controllers/FirstPersonController.ts",
    "awayjs-display/lib/controllers/FollowController.ts",
    "awayjs-display/lib/controllers/HoverController.ts",
    "awayjs-display/lib/controllers/LookAtController.ts",
    "awayjs-display/lib/controllers/SpringController.ts",
    "awayjs-display/lib/draw/CapsStyle.ts",
    "awayjs-display/lib/draw/GradientType.ts",
    "awayjs-display/lib/draw/GraphicsPathWinding.ts",
    "awayjs-display/lib/draw/Graphics.ts",
    "awayjs-display/lib/draw/InterpolationMethod.ts",
    "awayjs-display/lib/draw/JointStyle.ts",
    "awayjs-display/lib/draw/LineScaleMode.ts",
    "awayjs-display/lib/draw/PixelSnapping.ts",
    "awayjs-display/lib/draw/SpreadMethod.ts",
    "awayjs-display/lib/draw/TriangleCulling.ts",
    "awayjs-display/lib/entities/Billboard.ts",
    "awayjs-display/lib/entities/Camera.ts",
    "awayjs-display/lib/entities/DirectionalLight.ts",
    "awayjs-display/lib/entities/LightProbe.ts",
    "awayjs-display/lib/entities/LineSegment.ts",
    "awayjs-display/lib/entities/Mesh.ts",
    "awayjs-display/lib/entities/PointLight.ts",
    "awayjs-display/lib/entities/Shape.ts",
    "awayjs-display/lib/entities/Skybox.ts",
    "awayjs-display/lib/entities/TextField.ts",
    "awayjs-display/lib/errors/CastError.ts",
    "awayjs-display/lib/events/CameraEvent.ts",
    "awayjs-display/lib/events/DisplayObjectEvent.ts",
    "awayjs-display/lib/events/GeometryEvent.ts",
    "awayjs-display/lib/events/LightEvent.ts",
    "awayjs-display/lib/events/MaterialEvent.ts",
    "awayjs-display/lib/events/MouseEvent.ts",
    "awayjs-display/lib/events/RenderableOwnerEvent.ts",
    "awayjs-display/lib/events/RendererEvent.ts",
    "awayjs-display/lib/events/ResizeEvent.ts",
    "awayjs-display/lib/events/SceneEvent.ts",
    "awayjs-display/lib/events/SubGeometryEvent.ts",
    "awayjs-display/lib/managers/DefaultMaterialManager.ts",
    "awayjs-display/lib/managers/MouseManager.ts",
    "awayjs-display/lib/materials/BasicMaterial.ts",
    "awayjs-display/lib/materials/LightSources.ts",
    "awayjs-display/lib/materials/MaterialBase.ts",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase.ts",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker.ts",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper.ts",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase.ts",
    "awayjs-display/lib/partition/CameraNode.ts",
    "awayjs-display/lib/partition/DirectionalLightNode.ts",
    "awayjs-display/lib/partition/EntityNode.ts",
    "awayjs-display/lib/partition/LightProbeNode.ts",
    "awayjs-display/lib/partition/NodeBase.ts",
    "awayjs-display/lib/partition/NullNode.ts",
    "awayjs-display/lib/partition/Partition.ts",
    "awayjs-display/lib/partition/PointLightNode.ts",
    "awayjs-display/lib/partition/SkyboxNode.ts",
    "awayjs-display/lib/pick/JSPickingCollider.ts",
    "awayjs-display/lib/pick/PickingCollisionVO.ts",
    "awayjs-display/lib/pick/RaycastPicker.ts",
    "awayjs-display/lib/pool/EntityListItemPool.ts",
    "awayjs-display/lib/pool/EntityListItem.ts",
    "awayjs-display/lib/pool/EntityNodePool.ts",
    "awayjs-display/lib/pool/SubMeshPool.ts",
    "awayjs-display/lib/prefabs/PrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab.ts",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase.ts",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab.ts",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab.ts",
    "awayjs-display/lib/sort/RenderableMergeSort.ts",
    "awayjs-display/lib/sort/RenderableNullSort.ts",
    "awayjs-display/lib/text/AntiAliasType.ts",
    "awayjs-display/lib/text/Font.ts",
    "awayjs-display/lib/text/GridFitType.ts",
    "awayjs-display/lib/text/TesselatedFontChar.ts",
    "awayjs-display/lib/text/TesselatedFontTable.ts",
    "awayjs-display/lib/text/TextFieldAutoSize.ts",
    "awayjs-display/lib/text/TextFieldType.ts",
    "awayjs-display/lib/text/TextFormatAlign.ts",
    "awayjs-display/lib/text/TextFormat.ts",
    "awayjs-display/lib/text/TextInteractionMode.ts",
    "awayjs-display/lib/text/TextLineMetrics.ts",
    "awayjs-display/lib/textures/Single2DTexture.ts",
    "awayjs-display/lib/textures/SingleCubeTexture.ts",
    "awayjs-display/lib/textures/TextureBase.ts",
    "awayjs-display/lib/traverse/CSSEntityCollector.ts",
    "awayjs-display/lib/traverse/CollectorBase.ts",
    "awayjs-display/lib/traverse/EntityCollector.ts",
    "awayjs-display/lib/traverse/RaycastCollector.ts",
    "awayjs-display/lib/traverse/ShadowCasterCollector.ts",
    "awayjs-display/lib/utils/Cast.ts",
    "awayjs-display/lib/utils/SubGeometryUtils.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "awayjs-display/lib/IRenderer",
    "module",
    "awayjs-display/lib/animators/IAnimationSet",
    "awayjs-display/lib/animators/IAnimator",
    "awayjs-display/lib/animators/nodes/AnimationNodeBase",
    "__extends",
    "this",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "prototype",
    "AssetBase",
    "AnimationNodeBase",
    "_super",
    "Object",
    "defineProperty",
    "get",
    "_pStateClass",
    "enumerable",
    "configurable",
    "dispose",
    "assetType",
    "awayjs-core/lib/library/AssetBase",
    "undefined",
    "awayjs-display/lib/base/AlignmentMode",
    "AlignmentMode",
    "REGISTRATION_POINT",
    "PIVOT_POINT",
    "awayjs-display/lib/base/CurveSubGeometry",
    "Float3Attributes",
    "Float2Attributes",
    "SubGeometryBase",
    "SubGeometryUtils",
    "CurveSubGeometry",
    "concatenatedBuffer",
    "_numVertices",
    "_uvsDirty",
    "_autoDeriveUVs",
    "_scaleU",
    "_scaleV",
    "_positions",
    "_concatenatedBuffer",
    "_curves",
    "set",
    "value",
    "setUVs",
    "_uvs",
    "getBoundingPositions",
    "setPositions",
    "values",
    "offset",
    "notifyVerticesDispose",
    "count",
    "notifyVerticesUpdate",
    "pInvalidateBounds",
    "_verticesDirty",
    "id",
    "setCurves",
    "generateUVs",
    "_pIndices",
    "clone",
    "setIndices",
    "scaleUV",
    "scaleU",
    "scaleV",
    "scaleUVs",
    "uvs",
    "scale",
    "positions",
    "applyTransformation",
    "transform",
    "_iTestCollision",
    "pickingCollider",
    "material",
    "pickingCollisionVO",
    "shortestCollisionDistance",
    "testCurveCollision",
    "awayjs-core/lib/attributes/Float2Attributes",
    "awayjs-core/lib/attributes/Float3Attributes",
    "awayjs-display/lib/base/SubGeometryBase",
    "awayjs-display/lib/utils/SubGeometryUtils",
    "awayjs-display/lib/base/CurveSubMesh",
    "SubMeshBase",
    "CurveSubMesh",
    "subGeometry",
    "parentMesh",
    "_pParentMesh",
    "_subGeometry",
    "assetClass",
    "awayjs-display/lib/base/SubMeshBase",
    "awayjs-display/lib/base/DisplayObject",
    "Box",
    "ColorTransform",
    "Sphere",
    "MathConsts",
    "Matrix3D",
    "Matrix3DUtils",
    "Point",
    "Vector3D",
    "AbstractMethodError",
    "OrientationMode",
    "Transform",
    "PickingCollisionVO",
    "DisplayObjectEvent",
    "SceneEvent",
    "DisplayObject",
    "_this",
    "_boxBoundsInvalid",
    "_sphereBoundsInvalid",
    "_pSceneTransform",
    "_pSceneTransformDirty",
    "_iMaskID",
    "_iMasks",
    "_matrix3D",
    "_matrix3DDirty",
    "_inverseSceneTransform",
    "_inverseSceneTransformDirty",
    "_scenePosition",
    "_scenePositionDirty",
    "_explicitVisibility",
    "_pImplicitVisibility",
    "_explicitMouseEnabled",
    "_pImplicitMouseEnabled",
    "_positionDirty",
    "_rotationDirty",
    "_scaleDirty",
    "_rotationX",
    "_rotationY",
    "_rotationZ",
    "_eulers",
    "_flipY",
    "_zOffset",
    "_pScaleX",
    "_pScaleY",
    "_pScaleZ",
    "_x",
    "_y",
    "_z",
    "_pivot",
    "_pivotScale",
    "_orientationMatrix",
    "_pivotZero",
    "_pivotDirty",
    "_pos",
    "_rot",
    "_sca",
    "_pIgnoreTransform",
    "_pRenderables",
    "Array",
    "_entityNodes",
    "_globalColorTransformDirty",
    "_globalColorTransform",
    "_inheritColorTransform",
    "alignmentMode",
    "castsShadows",
    "orientationMode",
    "DEFAULT",
    "_onGlobalColorTransformChangedDelegate",
    "event",
    "onGlobalColorTransformChanged",
    "_onColorTransformChangedDelegate",
    "onColorTransformChanged",
    "_transformComponents",
    "_transform",
    "identity",
    "appendScale",
    "_invalidateGlobalColorTransform",
    "_updateGlobalColorTransform",
    "_pColorTransform",
    "alphaMultiplier",
    "removeEventListener",
    "_pSetColorTransform",
    "addEventListener",
    "_boundsType",
    "_pInvalidateBounds",
    "len",
    "updateBounds",
    "getBox",
    "depth",
    "val",
    "_depth",
    "invalidateScale",
    "x",
    "RADIANS_TO_DEGREES",
    "y",
    "z",
    "DEGREES_TO_RADIANS",
    "invalidateRotation",
    "height",
    "_height",
    "_pParent",
    "getChildIndex",
    "copyFrom",
    "sceneTransform",
    "invert",
    "setTo",
    "pInvalidateSceneTransform",
    "_pIsEntity",
    "_loaderInfo",
    "_pUpdateImplicitMouseEnabled",
    "mouseChildren",
    "_mouseX",
    "_mouseY",
    "_pName",
    "_explicitPartition",
    "_pUpdateImplicitPartition",
    "_iAssignedPartition",
    "_pScene",
    "_pPickingCollider",
    "pivot",
    "invalidatePivot",
    "_root",
    "rotationX",
    "rotationY",
    "rotationZ",
    "_width",
    "transformVector",
    "copyColumnTo",
    "pUpdateSceneTransform",
    "_shaderPickingDetails",
    "_debugVisible",
    "debugVisible",
    "_pUpdateImplicitVisibility",
    "_iIsVisible",
    "width",
    "invalidatePosition",
    "type",
    "listener",
    "POSITION_CHANGED",
    "_listenToPositionChanged",
    "ROTATION_CHANGED",
    "_listenToRotationChanged",
    "SCALE_CHANGED",
    "_listenToScaleChanged",
    "SCENE_CHANGED",
    "_listenToSceneChanged",
    "SCENETRANSFORM_CHANGED",
    "_listenToSceneTransformChanged",
    "_iMatrix3D",
    "name",
    "concat",
    "parent",
    "removeChild",
    "disposeAsset",
    "getBounds",
    "targetCoordinateSpace",
    "_bounds",
    "getRect",
    "_iSourcePrefab",
    "_iValidate",
    "_pUpdateBoxBounds",
    "_pBoxBounds",
    "getSphere",
    "_pUpdateSphereBounds",
    "_pSphereBounds",
    "globalToLocal",
    "point",
    "globalToLocal3D",
    "position",
    "inverseSceneTransform",
    "hitTestObject",
    "obj",
    "objBox",
    "topLeft",
    "bottomLeft",
    "topRight",
    "bottomRight",
    "localToGlobal",
    "box",
    "left",
    "top",
    "bottom",
    "n0x",
    "n0y",
    "n1x",
    "n1y",
    "n2x",
    "n2y",
    "n3x",
    "n3y",
    "p0x",
    "p0y",
    "p1x",
    "p1y",
    "p2x",
    "p2y",
    "p3x",
    "p3y",
    "dot0",
    "dot1",
    "dot2",
    "dot3",
    "right",
    "hitTestPoint",
    "shapeFlag",
    "lookAt",
    "target",
    "upAxis",
    "yAxis",
    "zAxis",
    "xAxis",
    "raw",
    "Y_AXIS",
    "normalize",
    "subtract",
    "crossProduct",
    "RAW_DATA_CONTAINER",
    "m",
    "copyRawDataFrom",
    "vec",
    "decompose",
    "localToGlobal3D",
    "moveTo",
    "dx",
    "dy",
    "dz",
    "movePivot",
    "pitch",
    "angle",
    "rotate",
    "X_AXIS",
    "getRenderSceneTransform",
    "camera",
    "CAMERA_PLANE",
    "comps",
    "scenePosition",
    "recompose",
    "prependTranslation",
    "roll",
    "Z_AXIS",
    "axis",
    "prependRotation",
    "rotateTo",
    "ax",
    "ay",
    "az",
    "hasEventListener",
    "translate",
    "distance",
    "Math",
    "sqrt",
    "translateLocal",
    "yaw",
    "_pImplicitPartition",
    "_pUpdateMatrix3D",
    "elements",
    "_pPickingCollisionVO",
    "iSetParent",
    "GLOBAL_COLOR_TRANSFORM_CHANGED",
    "isEntity",
    "invalidatePartition",
    "notifySceneTransformChange",
    "partition",
    "scene",
    "sceneChanged",
    "dispatchEvent",
    "REMOVED_FROM_SCENE",
    "_iUnregisterPartition",
    "_pUnregisterEntity",
    "_iRegisterPartition",
    "_pRegisterEntity",
    "ADDED_TO_SCENE",
    "notifySceneChange",
    "appendTranslation",
    "_iIsRoot",
    "prepend",
    "_iAddRenderable",
    "renderable",
    "push",
    "_iRemoveRenderable",
    "index",
    "indexOf",
    "splice",
    "findClosest",
    "_iInternalUpdate",
    "_iController",
    "update",
    "_iIsMouseEnabled",
    "_iSetScene",
    "notifyPositionChanged",
    "_positionChanged",
    "notifyRotationChanged",
    "_rotationChanged",
    "notifyScaleChanged",
    "_scaleChanged",
    "_scenechanged",
    "_sceneTransformChanged",
    "invalidateMatrix3D",
    "_iAddEntityNode",
    "entityNode",
    "_iRemoveEntityNode",
    "globalColorTransform",
    "clear",
    "_globalColorTransformChanged",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-core/lib/geom/Box",
    "awayjs-core/lib/geom/ColorTransform",
    "awayjs-core/lib/geom/MathConsts",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Sphere",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-display/lib/base/OrientationMode",
    "awayjs-display/lib/base/Transform",
    "awayjs-display/lib/events/DisplayObjectEvent",
    "awayjs-display/lib/events/SceneEvent",
    "awayjs-display/lib/pick/PickingCollisionVO",
    "awayjs-display/lib/base/Geometry",
    "GeometryEvent",
    "Geometry",
    "_subGeometries",
    "addSubGeometry",
    "parentGeometry",
    "SUB_GEOMETRY_ADDED",
    "iInvalidateBounds",
    "removeSubGeometry",
    "SUB_GEOMETRY_REMOVED",
    "numSubGeoms",
    "subGeom",
    "BOUNDS_INVALID",
    "awayjs-display/lib/events/GeometryEvent",
    "awayjs-display/lib/base/IBitmapDrawable",
    "awayjs-display/lib/base/IRenderOwner",
    "awayjs-display/lib/base/IRenderableOwner",
    "awayjs-display/lib/base/ISubMeshClass",
    "awayjs-display/lib/base/ISubMesh",
    "awayjs-display/lib/base/LightBase",
    "DisplayObjectContainer",
    "LightEvent",
    "LightBase",
    "_color",
    "_colorR",
    "_colorG",
    "_colorB",
    "_ambientColor",
    "_ambient",
    "_iAmbientR",
    "_iAmbientG",
    "_iAmbientB",
    "_specular",
    "_iSpecularR",
    "_iSpecularG",
    "_iSpecularB",
    "_diffuse",
    "_iDiffuseR",
    "_iDiffuseG",
    "_iDiffuseB",
    "_castsShadows",
    "_shadowMapper",
    "pCreateShadowMapper",
    "light",
    "CASTS_SHADOW_CHANGE",
    "updateSpecular",
    "updateDiffuse",
    "updateAmbient",
    "iGetObjectProjectionMatrix",
    "entity",
    "awayjs-display/lib/containers/DisplayObjectContainer",
    "awayjs-display/lib/events/LightEvent",
    "awayjs-display/lib/base/LineSubGeometry",
    "AttributesView",
    "Byte4Attributes",
    "Float1Attributes",
    "LineSubGeometry",
    "Float32Array",
    "_thickness",
    "_colors",
    "setColors",
    "j",
    "indices",
    "Uint16Array",
    "setThickness",
    "thickness",
    "floor",
    "colors",
    "Uint8Array",
    "generateColors",
    "testLineCollision",
    "awayjs-core/lib/attributes/AttributesView",
    "awayjs-core/lib/attributes/Byte4Attributes",
    "awayjs-core/lib/attributes/Float1Attributes",
    "awayjs-display/lib/base/LineSubMesh",
    "LineSubMesh",
    "awayjs-display/lib/base/LoaderInfo",
    "EventDispatcher",
    "LoaderInfo",
    "apply",
    "arguments",
    "_bytes",
    "_bytesLoaded",
    "_bytesTotal",
    "_content",
    "_contentType",
    "_loader",
    "_url",
    "awayjs-core/lib/events/EventDispatcher",
    "CAMERA_POSITION",
    "Short3Attributes",
    "SubGeometryEvent",
    "_subGeometryVO",
    "_numElements",
    "_verticesUpdated",
    "invalidate",
    "notifyIndicesDispose",
    "notifyIndicesUpdate",
    "_indicesUpdated",
    "INDICES_UPDATED",
    "INDICES_DISPOSED",
    "attributesView",
    "VERTICES_UPDATED",
    "VERTICES_DISPOSED",
    "_iAddSubGeometryVO",
    "subGeometryVO",
    "_iRemoveSubGeometryVO",
    "awayjs-core/lib/attributes/Short3Attributes",
    "awayjs-display/lib/events/SubGeometryEvent",
    "_iIndex",
    "_renderables",
    "animator",
    "_material",
    "iRemoveOwner",
    "iAddOwner",
    "_uvTransform",
    "uvTransform",
    "_colorTransform",
    "_iInvalidateRenderableGeometry",
    "invalidateGeometry",
    "_iGetExplicitMaterial",
    "displayObject",
    "_position",
    "_displayObject",
    "director",
    "getForward",
    "negate",
    "_concatenatedColorTransform",
    "_concatenatedMatrix",
    "getUp",
    "getRight",
    "_pixelBounds",
    "scaleX",
    "scaleY",
    "scaleZ",
    "getRelativeMatrix3D",
    "relativeTo",
    "moveForward",
    "moveBackward",
    "moveLeft",
    "moveRight",
    "moveUp",
    "moveDown",
    "awayjs-display/lib/base/TriangleSubGeometry",
    "TriangleSubGeometry",
    "_faceNormalsDirty",
    "_faceTangentsDirty",
    "_autoDeriveNormals",
    "_autoDeriveTangents",
    "_useCondensedIndices",
    "_jointsPerVertex",
    "_jointIndices",
    "dimensions",
    "_jointWeights",
    "_normals",
    "_tangents",
    "setNormals",
    "setTangents",
    "updateFaceNormals",
    "_faceNormals",
    "updateFaceTangents",
    "_faceTangents",
    "_secondaryUVs",
    "_condensedIndexLookUp",
    "generateNormals",
    "generateTangents",
    "setSecondaryUVs",
    "setJointIndices",
    "oldIndex",
    "newIndex",
    "dic",
    "setJointWeights",
    "jointsPerVertex",
    "normals",
    "tangents",
    "generateFaceTangents",
    "generateFaceNormals",
    "testTriangleCollision",
    "awayjs-display/lib/base/TriangleSubMesh",
    "TriangleSubMesh",
    "awayjs-display/lib/bounds/AxisAlignedBoundingBox",
    "PlaneClassification",
    "BoundingVolumeBase",
    "PrimitiveCubePrefab",
    "AxisAlignedBoundingBox",
    "_centerX",
    "_centerY",
    "_centerZ",
    "_halfExtentsX",
    "_halfExtentsY",
    "_halfExtentsZ",
    "nullify",
    "isInFrustum",
    "planes",
    "numPlanes",
    "_pInvalidated",
    "_pUpdate",
    "plane",
    "c",
    "flippedExtentX",
    "flippedExtentY",
    "flippedExtentZ",
    "projDist",
    "rayIntersection",
    "direction",
    "targetNormal",
    "_box",
    "classifyToPlane",
    "centerDistance",
    "boundOffset",
    "FRONT",
    "BACK",
    "INTERSECT",
    "_pEntity",
    "matrix",
    "hx",
    "hy",
    "hz",
    "cx",
    "cy",
    "cz",
    "copyRawDataTo",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "abs",
    "_prefab",
    "_pBoundsPrimitive",
    "matrix3D",
    "_pCreateBoundsPrimitive",
    "geometryType",
    "getNewObject",
    "awayjs-core/lib/geom/PlaneClassification",
    "awayjs-display/lib/bounds/BoundingVolumeBase",
    "awayjs-display/lib/prefabs/PrimitiveCubePrefab",
    "awayjs-display/lib/bounds/BoundingSphere",
    "PrimitiveSpherePrefab",
    "BoundingSphere",
    "_radius",
    "_sphere",
    "dd",
    "rr",
    "radius",
    "rx",
    "ry",
    "rz",
    "awayjs-display/lib/prefabs/PrimitiveSpherePrefab",
    "awayjs-display/lib/bounds/BoundsType",
    "BoundsType",
    "SPHERE",
    "AXIS_ALIGNED_BOX",
    "NULL",
    "awayjs-display/lib/bounds/NullBounds",
    "NullBounds",
    "alwaysIn",
    "_alwaysIn",
    "ArgumentError",
    "RangeError",
    "_mouseChildren",
    "_children",
    "addChild",
    "child",
    "removeChildInternal",
    "addChildAt",
    "addChildren",
    "childarray",
    "_i",
    "contains",
    "disposeWithChildren",
    "numChildren",
    "getChildAt",
    "getChildByName",
    "childIndex",
    "getObjectsUnderPoint",
    "removeChildAt",
    "removeChildren",
    "beginIndex",
    "endIndex",
    "setChildIndex",
    "swapChildren",
    "child1",
    "child2",
    "swapChildrenAt",
    "index1",
    "index2",
    "childHit",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-core/lib/errors/Error",
    "awayjs-core/lib/errors/RangeError",
    "awayjs-display/lib/containers/Loader",
    "AssetLibraryBundle",
    "AssetLoader",
    "AssetEvent",
    "IOErrorEvent",
    "LoaderEvent",
    "ParserEvent",
    "Loader",
    "useAssetLibrary",
    "assetLibraryId",
    "_loadingSessions",
    "_useAssetLib",
    "_assetLibId",
    "_onResourceCompleteDelegate",
    "onResourceComplete",
    "_onAssetCompleteDelegate",
    "onAssetComplete",
    "_onTextureSizeErrorDelegate",
    "onTextureSizeError",
    "_onLoadErrorDelegate",
    "onLoadError",
    "_onParseErrorDelegate",
    "onParseError",
    "_contentLoaderInfo",
    "close",
    "lib",
    "getInstance",
    "stopAllLoadingSessions",
    "removeListeners",
    "stop",
    "load",
    "request",
    "context",
    "ns",
    "parser",
    "token",
    "loader",
    "RESOURCE_COMPLETE",
    "TEXTURE_SIZE_ERROR",
    "ASSET_COMPLETE",
    "_iLoader",
    "_iAddErrorHandler",
    "_iAddParseErrorHandler",
    "loadData",
    "data",
    "unload",
    "enableParser",
    "parserClass",
    "enableParsers",
    "parserClasses",
    "dispatcher",
    "IO_ERROR",
    "PARSE_ERROR",
    "content",
    "awayjs-core/lib/events/AssetEvent",
    "awayjs-core/lib/events/IOErrorEvent",
    "awayjs-core/lib/events/LoaderEvent",
    "awayjs-core/lib/events/ParserEvent",
    "awayjs-core/lib/library/AssetLibraryBundle",
    "awayjs-core/lib/library/AssetLoader",
    "awayjs-display/lib/containers/Scene",
    "NodeBase",
    "Partition",
    "Scene",
    "_expandedPartitions",
    "_partitions",
    "_iCollectionMark",
    "_partition",
    "_iSceneGraphRoot",
    "traversePartitions",
    "traverser",
    "traverse",
    "PARTITION_CHANGED",
    "awayjs-display/lib/partition/NodeBase",
    "awayjs-display/lib/partition/Partition",
    "awayjs-display/lib/containers/View",
    "getTimer",
    "RaycastPicker",
    "Camera",
    "CameraEvent",
    "RendererEvent",
    "MouseManager",
    "View",
    "renderer",
    "_time",
    "_deltaTime",
    "_backgroundColor",
    "_backgroundAlpha",
    "_viewportDirty",
    "_scissorDirty",
    "_mousePicker",
    "_onScenePartitionChangedDelegate",
    "onScenePartitionChanged",
    "_onProjectionChangedDelegate",
    "onProjectionChanged",
    "_onViewportUpdatedDelegate",
    "onViewportUpdated",
    "_onScissorUpdatedDelegate",
    "onScissorUpdated",
    "document",
    "body",
    "style",
    "margin",
    "_htmlElement",
    "createElement",
    "appendChild",
    "_mouseManager",
    "registerView",
    "_pCamera",
    "_iRegisterCamera",
    "_pMouseX",
    "_pMouseY",
    "_pRenderer",
    "VIEWPORT_UPDATED",
    "SCISSOR_UPDATED",
    "_pEntityCollector",
    "_iCreateEntityCollector",
    "_iBackgroundR",
    "_iBackgroundG",
    "_iBackgroundB",
    "_iBackgroundAlpha",
    "shareContext",
    "_shareContext",
    "PROJECTION_CHANGED",
    "_aspectRatio",
    "projection",
    "_iAspectRatio",
    "visibility",
    "render",
    "pUpdateTime",
    "_iUpdateScissorRect",
    "scissorRect",
    "_iUpdateViewport",
    "viewPort",
    "forceMouseMove",
    "_iActiveDiv",
    "_iUpdateDirty",
    "_iCollidingObject",
    "mousePicker",
    "getViewCollision",
    "fireMouseEvents",
    "time",
    "unregisterView",
    "project",
    "point3d",
    "v",
    "originX",
    "originY",
    "unproject",
    "sX",
    "sY",
    "sZ",
    "getRay",
    "updateCollider",
    "collidingObject",
    "layeredView",
    "rayEntryDistance",
    "awayjs-core/lib/utils/getTimer",
    "awayjs-display/lib/entities/Camera",
    "awayjs-display/lib/events/CameraEvent",
    "awayjs-display/lib/events/RendererEvent",
    "awayjs-display/lib/managers/MouseManager",
    "awayjs-display/lib/pick/RaycastPicker",
    "awayjs-display/lib/controllers/ControllerBase",
    "ControllerBase",
    "targetObject",
    "_pAutoUpdate",
    "pNotifyUpdate",
    "_pTargetObject",
    "interpolate",
    "awayjs-display/lib/controllers/FirstPersonController",
    "FirstPersonController",
    "panAngle",
    "tiltAngle",
    "minTiltAngle",
    "maxTiltAngle",
    "steps",
    "wrapPanAngle",
    "_iCurrentPanAngle",
    "_iCurrentTiltAngle",
    "_panAngle",
    "_tiltAngle",
    "_minTiltAngle",
    "_maxTiltAngle",
    "_steps",
    "_walkIncrement",
    "_strafeIncrement",
    "_wrapPanAngle",
    "fly",
    "max",
    "min",
    "sin",
    "cos",
    "incrementWalk",
    "incrementStrafe",
    "awayjs-display/lib/controllers/FollowController",
    "HoverController",
    "FollowController",
    "lookAtObject",
    "_pLookAtObject",
    "awayjs-display/lib/controllers/HoverController",
    "LookAtController",
    "minPanAngle",
    "maxPanAngle",
    "yFactor",
    "_distance",
    "_minPanAngle",
    "Infinity",
    "_maxPanAngle",
    "_yFactor",
    "_upAxis",
    "pos",
    "lookAtPosition",
    "_pOrigin",
    "_pLookAtPosition",
    "awayjs-display/lib/controllers/LookAtController",
    "_onLookAtObjectChangedDelegate",
    "onLookAtObjectChanged",
    "awayjs-display/lib/controllers/SpringController",
    "SpringController",
    "stiffness",
    "mass",
    "damping",
    "positionOffset",
    "_velocity",
    "_dv",
    "_stretch",
    "_force",
    "_acceleration",
    "_desiredPosition",
    "offs",
    "deltaTransformVector",
    "add",
    "scaleBy",
    "incrementBy",
    "awayjs-display/lib/draw/CapsStyle",
    "CapsStyle",
    "ROUND",
    "NONE",
    "SQUARE",
    "awayjs-display/lib/draw/GradientType",
    "GradientType",
    "LINEAR",
    "RADIAL",
    "awayjs-display/lib/draw/GraphicsPathWinding",
    "GraphicsPathWinding",
    "EVEN_ODD",
    "NON_ZERO",
    "awayjs-display/lib/draw/Graphics",
    "Graphics",
    "beginBitmapFill",
    "bitmap",
    "repeat",
    "smooth",
    "beginFill",
    "color",
    "alpha",
    "beginGradientFill",
    "alphas",
    "ratios",
    "spreadMethod",
    "interpolationMethod",
    "focalPointRatio",
    "sourceGraphics",
    "cubicCurveTo",
    "controlX1",
    "controlY1",
    "controlX2",
    "controlY2",
    "anchorX",
    "anchorY",
    "curveTo",
    "controlX",
    "controlY",
    "drawCircle",
    "drawEllipse",
    "drawGraphicsData",
    "graphicsData",
    "drawPath",
    "commands",
    "winding",
    "drawRect",
    "drawRoundRect",
    "ellipseWidth",
    "ellipseHeight",
    "NaN",
    "drawTriangles",
    "vertices",
    "uvtData",
    "culling",
    "endFill",
    "lineBitmapStyle",
    "lineGradientStyle",
    "lineStyle",
    "pixelHinting",
    "scaleMode",
    "caps",
    "joints",
    "miterLimit",
    "lineTo",
    "awayjs-display/lib/draw/IGraphicsData",
    "awayjs-display/lib/draw/InterpolationMethod",
    "InterpolationMethod",
    "LINEAR_RGB",
    "RGB",
    "awayjs-display/lib/draw/JointStyle",
    "JointStyle",
    "BEVEL",
    "MITER",
    "awayjs-display/lib/draw/LineScaleMode",
    "LineScaleMode",
    "HORIZONTAL",
    "NORMAL",
    "VERTICAL",
    "awayjs-display/lib/draw/PixelSnapping",
    "PixelSnapping",
    "ALWAYS",
    "AUTO",
    "NEVER",
    "awayjs-display/lib/draw/SpreadMethod",
    "SpreadMethod",
    "PAD",
    "REFLECT",
    "REPEAT",
    "awayjs-display/lib/draw/TriangleCulling",
    "TriangleCulling",
    "NEGATIVE",
    "POSITIVE",
    "awayjs-display/lib/entities/Billboard",
    "Rectangle",
    "MaterialEvent",
    "Billboard",
    "pixelSnapping",
    "smoothing",
    "onSizeChangedDelegate",
    "onSizeChanged",
    "_billboardWidth",
    "_billboardHeight",
    "_billboardRect",
    "frameRect",
    "_animator",
    "SIZE_CHANGED",
    "colorTransform",
    "_applyColorTransform",
    "_parentColorTransform",
    "redMultiplier",
    "blueMultiplier",
    "greenMultiplier",
    "alphaOffset",
    "redOffset",
    "blueOffset",
    "greenOffset",
    "testBillboardCollision",
    "_applyRenderer",
    "_iApplyRenderableOwner",
    "_iRegisterEntity",
    "_iUnregisterEntity",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-display/lib/events/MaterialEvent",
    "Plane3D",
    "ProjectionEvent",
    "PerspectiveProjection",
    "_viewProjection",
    "_viewProjectionDirty",
    "_frustumPlanesDirty",
    "_onProjectionMatrixChangedDelegate",
    "onProjectionMatrixChanged",
    "_projection",
    "MATRIX_CHANGED",
    "_frustumPlanes",
    "updateFrustum",
    "c11",
    "c12",
    "c13",
    "c14",
    "c21",
    "c22",
    "c23",
    "c24",
    "c31",
    "c32",
    "c33",
    "c34",
    "c41",
    "c42",
    "c43",
    "c44",
    "invLen",
    "viewProjection",
    "append",
    "nX",
    "nY",
    "_iUnregisterCamera",
    "awayjs-core/lib/events/ProjectionEvent",
    "awayjs-core/lib/geom/Plane3D",
    "awayjs-core/lib/projections/PerspectiveProjection",
    "awayjs-display/lib/entities/DirectionalLight",
    "DirectionalShadowMapper",
    "DirectionalLight",
    "xDir",
    "yDir",
    "zDir",
    "_pAabbPoints",
    "_sceneDirection",
    "_direction",
    "_tmpLookAt",
    "_projAABBPoints",
    "transformVectors",
    "xMin",
    "xMax",
    "yMin",
    "yMax",
    "zMin",
    "zMax",
    "invXRange",
    "invYRange",
    "invZRange",
    "_iRegisterDirectionalLight",
    "_iUnregisterDirectionalLight",
    "minX",
    "minY",
    "minZ",
    "maxX",
    "maxY",
    "maxZ",
    "awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper",
    "awayjs-display/lib/entities/IEntity",
    "awayjs-display/lib/entities/LightProbe",
    "LightProbe",
    "diffuseMap",
    "specularMap",
    "_diffuseMap",
    "_specularMap",
    "_iRegisterLightProbe",
    "_iUnregisterLightProbe",
    "awayjs-display/lib/entities/LineSegment",
    "LineSegment",
    "startPosition",
    "endPosition",
    "_startPosition",
    "_endPosition",
    "_halfThickness",
    "notifyRenderableUpdate",
    "halfWidth",
    "halfHeight",
    "halfDepth",
    "awayjs-display/lib/entities/Mesh",
    "SubMeshPool",
    "Mesh",
    "geometry",
    "_shareAnimationGeometry",
    "_subMeshes",
    "_onGeometryBoundsInvalidDelegate",
    "onGeometryBoundsInvalid",
    "_onSubGeometryAddedDelegate",
    "onSubGeometryAdded",
    "_onSubGeometryRemovedDelegate",
    "onSubGeometryRemoved",
    "removeOwner",
    "subMesh",
    "addOwner",
    "_geometry",
    "subGeoms",
    "subGeometries",
    "addSubMesh",
    "bakeTransformations",
    "disposeWithAnimatorAndChildren",
    "_iCopyToMesh",
    "boundsType",
    "shareAnimationGeometry",
    "mouseEnabled",
    "extra",
    "getSubMeshFromSubGeometry",
    "boundingPositions",
    "setEmpty",
    "centerX",
    "centerY",
    "centerZ",
    "maxRadiusSquared",
    "radiusSquared",
    "distanceX",
    "distanceY",
    "distanceZ",
    "SubMeshClass",
    "getClass",
    "renderableOwner",
    "subMeshes",
    "_iInvalidateRenderableGeometries",
    "local",
    "hit",
    "sub",
    "curve",
    "hittestMesh",
    "px",
    "py",
    "posDim",
    "curveDim",
    "curves",
    "k",
    "id0",
    "id1",
    "id2",
    "bx",
    "by",
    "curvex",
    "nx",
    "ny",
    "dot",
    "v0x",
    "v0y",
    "v1x",
    "v1y",
    "v2x",
    "v2y",
    "den",
    "w",
    "uu",
    "vv",
    "awayjs-display/lib/pool/SubMeshPool",
    "awayjs-display/lib/entities/PointLight",
    "CubeMapShadowMapper",
    "PointLight",
    "_pRadius",
    "_pFallOff",
    "_pFallOffFactor",
    "iFallOffFactor",
    "v1",
    "front",
    "v2",
    "back",
    "d1",
    "d2",
    "rawData",
    "_iRegisterPointLight",
    "_iUnregisterPointLight",
    "awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper",
    "awayjs-display/lib/entities/Shape",
    "Shape",
    "_graphics",
    "awayjs-display/lib/entities/Skybox",
    "BlendMode",
    "Skybox",
    "cubeMap",
    "_pAlphaThreshold",
    "_pBlendMode",
    "_renders",
    "_mipmap",
    "_smooth",
    "_owners",
    "_pIinvalidatePasses",
    "_pLightPicker",
    "_animationSet",
    "_pInvalidateRender",
    "invalidateRender",
    "invalidatePasses",
    "_cubeMap",
    "_iAddRender",
    "_iRemoveRender",
    "_iRegisterSkybox",
    "_iUnregisterSkybox",
    "awayjs-core/lib/data/BlendMode",
    "awayjs-display/lib/entities/TextField",
    "TextField",
    "_text",
    "_bottomScrollV",
    "_caretIndex",
    "_length",
    "maxScrollH",
    "_maxScrollH",
    "maxScrollV",
    "_maxScrollV",
    "_numLines",
    "_selectionBeginIndex",
    "_selectionEndIndex",
    "reConstruct",
    "_textFormat",
    "_textHeight",
    "_textInteractionMode",
    "_textWidth",
    "char_scale",
    "size",
    "font_table",
    "get_font_em_size",
    "tri_idx_offset",
    "tri_cnt",
    "x_offset",
    "y_offset",
    "prev_char",
    "text",
    "this_char",
    "get_subgeo_for_char",
    "charCodeAt",
    "toString",
    "this_subGeom",
    "subgeom",
    "indices2",
    "numElements",
    "positions2",
    "numVertices",
    "curveData2",
    "uv_values",
    "kerning_value",
    "kerningCharCodes",
    "kerningValues",
    "char_width",
    "letterSpacing",
    "attributesBuffer",
    "buffer",
    "curve_sub_geom",
    "appendText",
    "newText",
    "closeParagraph",
    "getCharBoundaries",
    "charIndex",
    "_charBoundaries",
    "getCharIndexAtPoint",
    "_charIndexAtPoint",
    "getFirstCharInParagraph",
    "_firstCharInParagraph",
    "getImageReference",
    "_imageReference",
    "getLineIndexAtPoint",
    "_lineIndexAtPoint",
    "getLineIndexOfChar",
    "_lineIndexOfChar",
    "getLineLength",
    "lineIndex",
    "_lineLength",
    "getLineMetrics",
    "_lineMetrics",
    "getLineOffset",
    "_lineOffset",
    "getLineText",
    "_lineText",
    "getParagraphLength",
    "_paragraphLength",
    "getTextFormat",
    "replaceSelectedText",
    "replaceText",
    "setSelection",
    "setTextFormat",
    "format",
    "isFontCompatible",
    "fontName",
    "fontStyle",
    "_iCopyToTextField",
    "textFormat",
    "textColor",
    "awayjs-display/lib/errors/CastError",
    "CastError",
    "message",
    "Event",
    "_camera",
    "awayjs-core/lib/events/Event",
    "object",
    "VISIBLITY_UPDATED",
    "awayjs-display/lib/events/MouseEvent",
    "MouseEvent",
    "_iAllowedToPropagate",
    "doesBubble",
    "stopPropagation",
    "_iParentEvent",
    "stopImmediatePropagation",
    "result",
    "screenX",
    "screenY",
    "view",
    "uv",
    "localPosition",
    "localNormal",
    "subGeometryIndex",
    "delta",
    "ctrlKey",
    "shiftKey",
    "sceneNormal",
    "MOUSE_OVER",
    "MOUSE_OUT",
    "MOUSE_UP",
    "MOUSE_DOWN",
    "MOUSE_MOVE",
    "CLICK",
    "DOUBLE_CLICK",
    "MOUSE_WHEEL",
    "awayjs-display/lib/events/RenderableOwnerEvent",
    "RenderableOwnerEvent",
    "renderOwner",
    "_renderOwner",
    "RENDER_OWNER_UPDATED",
    "awayjs-display/lib/events/ResizeEvent",
    "ResizeEvent",
    "oldHeight",
    "oldWidth",
    "_oldHeight",
    "_oldWidth",
    "RESIZE",
    "_attributesView",
    "awayjs-display/lib/managers/DefaultMaterialManager",
    "BitmapImage2D",
    "BasicMaterial",
    "Single2DTexture",
    "DefaultMaterialManager",
    "getDefaultMaterial",
    "isAsset",
    "_defaultLineMaterial",
    "createDefaultLineMaterial",
    "_defaultTriangleMaterial",
    "createDefaultTriangleMaterial",
    "getDefaultTexture",
    "_defaultTexture",
    "createDefaultTexture",
    "_defaultBitmapImage2D",
    "createCheckeredBitmapImage2D",
    "setPixel",
    "mipmap",
    "awayjs-core/lib/data/BitmapImage2D",
    "awayjs-display/lib/materials/BasicMaterial",
    "awayjs-display/lib/textures/Single2DTexture",
    "AwayMouseEvent",
    "_viewLookup",
    "_nullVector",
    "_queuedEvents",
    "_mouseUp",
    "_mouseClick",
    "_mouseOut",
    "_mouseDown",
    "_mouseMove",
    "_mouseOver",
    "_mouseWheel",
    "_mouseDoubleClick",
    "onClickDelegate",
    "onClick",
    "onDoubleClickDelegate",
    "onDoubleClick",
    "onMouseDownDelegate",
    "onMouseDown",
    "onMouseMoveDelegate",
    "onMouseMove",
    "onMouseUpDelegate",
    "onMouseUp",
    "onMouseWheelDelegate",
    "onMouseWheel",
    "onMouseOverDelegate",
    "onMouseOver",
    "onMouseOutDelegate",
    "onMouseOut",
    "_instance",
    "_previousCollidingObject",
    "queueDispatch",
    "_mouseMoveEvent",
    "htmlElement",
    "slice",
    "sourceEvent",
    "collider",
    "altKey",
    "clientX",
    "clientY",
    "updateColliders",
    "bounds",
    "mouseX",
    "mouseY",
    "getBoundingClientRect",
    "Image2D",
    "MaterialBase",
    "TextureBase",
    "textureColor",
    "smoothAlpha",
    "_preserveAlpha",
    "texture",
    "Number",
    "awayjs-core/lib/data/Image2D",
    "awayjs-display/lib/materials/MaterialBase",
    "awayjs-display/lib/textures/TextureBase",
    "awayjs-display/lib/materials/LightSources",
    "LightSources",
    "LIGHTS",
    "PROBES",
    "ALL",
    "_pUseColorTransform",
    "_alphaBlending",
    "_alpha",
    "_pAnimateUVs",
    "_enableLightFallOff",
    "_specularLightSources",
    "_diffuseLightSources",
    "_iMaterialId",
    "_iBaseScreenPassIndex",
    "_bothSides",
    "_repeat",
    "_pHeight",
    "_pWidth",
    "_onLightChangeDelegate",
    "onLightsChange",
    "alphaPremultiplied",
    "_frameRect",
    "CHANGE",
    "_pInvalidatePasses",
    "_pTexture",
    "single2DTexture",
    "sampler2D",
    "rect",
    "_pNotifySizeChanged",
    "_alphaPremultiplied",
    "owner",
    "animationSet",
    "invalidateAnimation",
    "_sizeChanged",
    "awayjs-display/lib/materials/lightpickers/LightPickerBase",
    "LightPickerBase",
    "_pNumPointLights",
    "_pNumDirectionalLights",
    "_pNumCastingPointLights",
    "_pNumCastingDirectionalLights",
    "_pNumLightProbes",
    "_pPointLights",
    "_pDirectionalLights",
    "_pCastingPointLights",
    "_pCastingDirectionalLights",
    "_pLightProbes",
    "_pLightProbeWeights",
    "_pAllPickedLights",
    "collectLights",
    "updateProbeWeights",
    "objectPos",
    "sourceEntity",
    "lightPos",
    "total",
    "awayjs-display/lib/materials/lightpickers/StaticLightPicker",
    "StaticLightPicker",
    "lights",
    "_onCastShadowChangeDelegate",
    "onCastShadowChange",
    "_lights",
    "numPointLights",
    "numDirectionalLights",
    "numCastingPointLights",
    "numCastingDirectionalLights",
    "numLightProbes",
    "clearListeners",
    "ceil",
    "updatePointCasting",
    "updateDirectionalCasting",
    "dl",
    "pl",
    "awayjs-display/lib/materials/shadowmappers/CascadeShadowMapper",
    "FreeMatrixProjection",
    "CascadeShadowMapper",
    "numCascades",
    "_pScissorRectsInvalid",
    "_numCascades",
    "_changeDispatcher",
    "init",
    "getSplitRatio",
    "_splitRatios",
    "setSplitRatio",
    "getDepthProjections",
    "_depthCameras",
    "_nearPlaneDistances",
    "_texOffsetsX",
    "_texOffsetsY",
    "_pScissorRects",
    "_depthLenses",
    "_pSetDepthMapSize",
    "invalidateScissorRects",
    "pDrawDepthMap",
    "updateScissorRects",
    "_pCasterCollector",
    "cullPlanes",
    "_pCullPlanes",
    "_pOverallDepthCamera",
    "_iRenderCascades",
    "image2D",
    "half",
    "_pDepthMapSize",
    "pUpdateDepthProjection",
    "viewCamera",
    "projectionNear",
    "near",
    "projectionRange",
    "far",
    "pUpdateProjectionFromFrustumCorners",
    "frustumCorners",
    "_pMatrix",
    "_pOverallDepthProjection",
    "pUpdateCullPlanes",
    "updateProjectionPartition",
    "splitRatio",
    "texOffsetX",
    "texOffsetY",
    "xN",
    "yN",
    "zN",
    "xF",
    "yF",
    "zF",
    "POSITIVE_INFINITY",
    "NEGATIVE_INFINITY",
    "_pLocalFrustum",
    "h",
    "_pSnap",
    "snap2",
    "awayjs-core/lib/projections/FreeMatrixProjection",
    "ImageCube",
    "ShadowMapperBase",
    "SingleCubeTexture",
    "_needsRender",
    "initCameras",
    "_projections",
    "addCamera",
    "cam",
    "fieldOfView",
    "pCreateDepthTexture",
    "maxDistance",
    "_pLight",
    "_iRender",
    "samplerCube",
    "imageCube",
    "awayjs-core/lib/data/ImageCube",
    "awayjs-display/lib/materials/shadowmappers/ShadowMapperBase",
    "awayjs-display/lib/textures/SingleCubeTexture",
    "_pLightOffset",
    "_pMaxZ",
    "_pMinZ",
    "iSetDepthMap",
    "depthMap",
    "_depthMap",
    "_explicitDepthMap",
    "lightFrustumPlanes",
    "frustumPlanes",
    "viewFrustumPlanes",
    "dir",
    "sceneDirection",
    "dirX",
    "dirY",
    "dirZ",
    "corners",
    "awayjs-display/lib/materials/shadowmappers/NearDirectionalShadowMapper",
    "NearDirectionalShadowMapper",
    "coverageRatio",
    "_coverageRatio",
    "ShadowCasterCollector",
    "_autoUpdateShadows",
    "pCreateCasterCollector",
    "updateShadows",
    "_iShadowsInvalid",
    "iRenderDepthMap",
    "entityCollector",
    "awayjs-display/lib/traverse/ShadowCasterCollector",
    "awayjs-display/lib/partition/CameraNode",
    "EntityNode",
    "CameraNode",
    "pool",
    "acceptTraverser",
    "awayjs-display/lib/partition/EntityNode",
    "awayjs-display/lib/partition/DirectionalLightNode",
    "DirectionalLightNode",
    "directionalLight",
    "_directionalLight",
    "enterNode",
    "applyDirectionalLight",
    "isCastingShadow",
    "_pool",
    "_entity",
    "_iNumEntities",
    "removeFromParent",
    "_iParent",
    "iRemoveNode",
    "applyEntity",
    "_pImplicitDebugVisible",
    "isEntityCollector",
    "_pDebugEntity",
    "isIntersectingRay",
    "rayPosition",
    "rayDirection",
    "_iPickingCollisionVO",
    "localRayPosition",
    "localRayDirection",
    "rayOriginIsInsideBounds",
    "_pCreateDebugEntity",
    "boundsPrimitive",
    "iMarkForUpdate",
    "updateDebugEntity",
    "awayjs-display/lib/partition/LightProbeNode",
    "LightProbeNode",
    "lightProbe",
    "_lightProbe",
    "applyLightProbe",
    "_pNumChildNodes",
    "_pChildNodes",
    "_explicitDebugVisible",
    "_iUpdateImplicitDebugVisible",
    "debugChildrenVisible",
    "_debugChildrenVisible",
    "findPartitionForEntity",
    "_pNumEntities",
    "applyDebugEntity",
    "iAddNode",
    "node",
    "numEntities",
    "pop",
    "awayjs-display/lib/partition/NullNode",
    "NullNode",
    "PointLightNode",
    "SkyboxNode",
    "EntityNodePool",
    "rootNode",
    "_updatesMade",
    "_rootNode",
    "_cameraNodePool",
    "_directionalLightNodePool",
    "_entityNodePool",
    "_lightProbeNodePool",
    "_pointLightNodePool",
    "_skyboxNodePool",
    "updateEntities",
    "_updateQueue",
    "_iUpdateQueueNext",
    "iRemoveEntity",
    "targetNode",
    "getItem",
    "pointLight",
    "skybox",
    "disposeItem",
    "awayjs-display/lib/partition/PointLightNode",
    "awayjs-display/lib/partition/SkyboxNode",
    "awayjs-display/lib/pool/EntityNodePool",
    "_pointLight",
    "applyPointLight",
    "skyBox",
    "_skyBox",
    "applySkybox",
    "awayjs-display/lib/pick/IPicker",
    "awayjs-display/lib/pick/IPickingCollider",
    "awayjs-display/lib/pick/JSPickingCollider",
    "JSPickingCollider",
    "findClosestCollision",
    "_findClosestCollision",
    "billboard",
    "triangleSubGeometry",
    "i0",
    "i1",
    "i2",
    "nz",
    "coeff",
    "p0z",
    "p1z",
    "p2z",
    "s0x",
    "s0y",
    "s0z",
    "s1x",
    "s1y",
    "s1z",
    "nl",
    "nDotV",
    "D",
    "disToPlane",
    "Q1Q2",
    "Q1Q1",
    "Q2Q2",
    "RQ1",
    "RQ2",
    "collisionTriangleIndex",
    "bothSides",
    "uvDim",
    "numIndices",
    "_getCollisionUV",
    "curveSubGeometry",
    "normal",
    "dotProduct",
    "collisionCurveIndex",
    "lineSubGeometry",
    "uvData",
    "triangleIndex",
    "uIndex",
    "uv0",
    "uv1",
    "uv2",
    "RaycastCollector",
    "_ignoredEntities",
    "_onlyMouseEnabled",
    "_numEntities",
    "_raycastCollector",
    "_entities",
    "getSceneCollision",
    "entityHead",
    "isIgnored",
    "next",
    "getPickingCollisionVO",
    "setIgnoreList",
    "entities",
    "sortOnNearT",
    "entity1",
    "entity2",
    "collector",
    "sort",
    "MAX_VALUE",
    "bestCollisionVO",
    "updateLocalPosition",
    "collisionPos",
    "rayDir",
    "rayPos",
    "awayjs-display/lib/traverse/RaycastCollector",
    "awayjs-display/lib/pool/EntityListItemPool",
    "EntityListItem",
    "EntityListItemPool",
    "_index",
    "_poolSize",
    "item",
    "freeAll",
    "awayjs-display/lib/pool/EntityListItem",
    "entityNodeClass",
    "_entityNodeClass",
    "awayjs-display/lib/pool/IEntityNodeClass",
    "awayjs-display/lib/pool/IRenderable",
    "awayjs-display/lib/pool/IRender",
    "awayjs-display/lib/pool/ITextureVO",
    "registerClass",
    "subMeshClass",
    "classPool",
    "addDefaults",
    "main",
    "awayjs-display/lib/prefabs/PrefabBase",
    "PrefabBase",
    "_pObjects",
    "_pCreateObject",
    "awayjs-display/lib/prefabs/PrimitiveCapsulePrefab",
    "PrimitivePrefabBase",
    "PrimitiveCapsulePrefab",
    "segmentsW",
    "segmentsH",
    "yUp",
    "_segmentsW",
    "_segmentsH",
    "_yUp",
    "_pInvalidateGeometry",
    "_pInvalidateUVs",
    "_pBuildGeometry",
    "triIndex",
    "startIndex",
    "comp1",
    "comp2",
    "t1",
    "t2",
    "triangleGeometry",
    "horangle",
    "PI",
    "ringradius",
    "verangle",
    "normLen",
    "tanLen",
    "_pBuildUVs",
    "awayjs-display/lib/prefabs/PrimitivePrefabBase",
    "awayjs-display/lib/prefabs/PrimitiveConePrefab",
    "PrimitiveCylinderPrefab",
    "PrimitiveConePrefab",
    "closed",
    "_pBottomRadius",
    "awayjs-display/lib/prefabs/PrimitiveCylinderPrefab",
    "segmentsD",
    "tile6",
    "_segmentsD",
    "_tile6",
    "tl",
    "tr",
    "bl",
    "br",
    "inc",
    "vidx",
    "fidx",
    "hw",
    "hh",
    "hd",
    "dw",
    "dh",
    "outer_pos",
    "lineGeometry",
    "numSegments",
    "u_tile_dim",
    "v_tile_dim",
    "u_tile_step",
    "v_tile_step",
    "tl0u",
    "tl0v",
    "tl1u",
    "tl1v",
    "du",
    "dv",
    "topRadius",
    "bottomRadius",
    "topClosed",
    "bottomClosed",
    "surfaceClosed",
    "_topRadius",
    "_pSegmentsW",
    "_pSegmentsH",
    "_topClosed",
    "_bottomClosed",
    "_surfaceClosed",
    "setSegmentsW",
    "setSegmentsH",
    "revolutionAngle",
    "dr",
    "latNormElev",
    "latNormBase",
    "nextVertexIndex",
    "centerVertexIndex",
    "revolutionAngleDelta",
    "na0",
    "na1",
    "naComp1",
    "naComp2",
    "addx",
    "awayjs-display/lib/prefabs/PrimitivePlanePrefab",
    "PrimitivePlanePrefab",
    "doubleSided",
    "_doubleSided",
    "base",
    "tw",
    "xi",
    "yi",
    "mult",
    "awayjs-display/lib/prefabs/PrimitivePolygonPrefab",
    "PrimitivePolygonPrefab",
    "sides",
    "AttributesBuffer",
    "_geomDirty",
    "_uvDirty",
    "_geometryTypeDirty",
    "_geometryType",
    "invalidateGeometryType",
    "updateGeometryType",
    "autoDeriveNormals",
    "autoDeriveTangents",
    "autoDeriveUVs",
    "updateGeometry",
    "updateUVs",
    "mesh",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "awayjs-display/lib/prefabs/PrimitiveTorusPrefab",
    "PrimitiveTorusPrefab",
    "tubeRadius",
    "segmentsR",
    "segmentsT",
    "_tubeRadius",
    "_segmentsR",
    "_segmentsT",
    "revolutionAngleR",
    "revolutionAngleT",
    "revolutionAngleDeltaR",
    "revolutionAngleDeltaT",
    "n1",
    "n2",
    "awayjs-display/lib/sort/IEntitySorter",
    "awayjs-display/lib/sort/RenderableMergeSort",
    "RenderableMergeSort",
    "sortBlendedRenderables",
    "head",
    "headB",
    "fast",
    "slow",
    "curr",
    "zIndex",
    "sortOpaqueRenderables",
    "cmp",
    "aid",
    "renderOrderId",
    "bid",
    "ma",
    "renderId",
    "mb",
    "awayjs-display/lib/sort/RenderableNullSort",
    "RenderableNullSort",
    "awayjs-display/lib/text/AntiAliasType",
    "AntiAliasType",
    "ADVANCED",
    "awayjs-display/lib/text/Font",
    "FontTable",
    "Font",
    "_font_styles",
    "get_font_table",
    "style_name",
    "font_style",
    "awayjs-display/lib/text/TesselatedFontTable",
    "awayjs-display/lib/text/GridFitType",
    "GridFitType",
    "PIXEL",
    "SUBPIXEL",
    "awayjs-display/lib/text/TesselatedFontChar",
    "TesselatedFontChar",
    "TesselatedFontTable",
    "_font_chars",
    "_font_chars_dic",
    "get_font_chars",
    "_font_em_size",
    "set_font_em_size",
    "font_em_size",
    "char",
    "set_subgeo_for_char",
    "subgeo",
    "tesselated_font_char",
    "awayjs-display/lib/text/TextFieldAutoSize",
    "TextFieldAutoSize",
    "CENTER",
    "LEFT",
    "RIGHT",
    "awayjs-display/lib/text/TextFieldType",
    "TextFieldType",
    "DYNAMIC",
    "INPUT",
    "awayjs-display/lib/text/TextFormatAlign",
    "TextFormatAlign",
    "JUSTIFY",
    "awayjs-display/lib/text/TextFormat",
    "TextFormat",
    "font",
    "bold",
    "italic",
    "underline",
    "url",
    "link_target",
    "align",
    "leftMargin",
    "rightMargin",
    "indent",
    "leading",
    "tabStops",
    "font_name",
    "awayjs-display/lib/text/TextInteractionMode",
    "TextInteractionMode",
    "SELECTION",
    "awayjs-display/lib/text/TextLineMetrics",
    "TextLineMetrics",
    "ascent",
    "descent",
    "Sampler2D",
    "ImageUtils",
    "source",
    "_sampler2D",
    "isImage2DValid",
    "_setSize",
    "invalidateContent",
    "awayjs-core/lib/data/Sampler2D",
    "awayjs-core/lib/utils/ImageUtils",
    "SamplerCube",
    "_samplerCube",
    "awayjs-core/lib/data/SamplerCube",
    "_textureVO",
    "invalidateSize",
    "_iAddTextureVO",
    "textureVO",
    "_iRemoveTextureVO",
    "awayjs-display/lib/traverse/CSSEntityCollector",
    "CollectorBase",
    "CSSEntityCollector",
    "awayjs-display/lib/traverse/CollectorBase",
    "_numCullPlanes",
    "_pNumInteractiveEntities",
    "_pEntityListItemPool",
    "_cullPlanes",
    "_customCullPlanes",
    "_pEntityHead",
    "enter",
    "awayjs-display/lib/traverse/EntityCollector",
    "EntityCollector",
    "_pNumLights",
    "_numDirectionalLights",
    "_numPointLights",
    "_numLightProbes",
    "_pLights",
    "_directionalLights",
    "_pointLights",
    "_lightProbes",
    "_pSkybox",
    "_rayPosition",
    "_rayDirection",
    "awayjs-display/lib/utils/Cast",
    "ByteArray",
    "Cast",
    "string",
    "byteArray",
    "isHex",
    "str",
    "_hexChars",
    "charAt",
    "tryColor",
    "random",
    "_colorNames",
    "parseInt",
    "tryClass",
    "_notClasses",
    "_classes",
    "window",
    "bitmapTexture",
    "bmd",
    "awayjs-core/lib/utils/ByteArray",
    "Float4Attributes",
    "indexAttributes",
    "positionAttributes",
    "output",
    "indexDim",
    "positionDim",
    "faceNormals",
    "x1",
    "x2",
    "x3",
    "y1",
    "y2",
    "y3",
    "z1",
    "z2",
    "z3",
    "dx1",
    "dy1",
    "dz1",
    "dx2",
    "dy2",
    "dz2",
    "faceNormalAttributes",
    "outputDim",
    "f1",
    "f2",
    "f3",
    "vx",
    "vy",
    "vz",
    "uvAttributes",
    "useFaceWeights",
    "faceTangents",
    "index3",
    "vi",
    "v0",
    "dv1",
    "dv2",
    "denom",
    "x0",
    "y0",
    "z0",
    "faceTangentAttributes",
    "weight",
    "f4",
    "normalAttributes",
    "tangentAttributes",
    "normalDim",
    "tangentDim",
    "vector",
    "invTranspose",
    "transpose",
    "vi0",
    "ni0",
    "ti0",
    "getSubIndices",
    "indexMappings",
    "indexOffset",
    "LIMIT_INDICES",
    "LIMIT_VERTS",
    "splitIndices",
    "indexSwap",
    "_indexSwap",
    "originalIndex",
    "splitIndex",
    "offsetLength",
    "getSubVertices",
    "vertexBuffer",
    "stride",
    "bufferView",
    "splitVerts",
    "awayjs-core/lib/attributes/Float4Attributes",
    "awayjs-display/lib/vos/ISubGeometryVO"
  ],
  "mappings": "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",
  "file": "awayjs-display.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    null,
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n/**\r\n * Provides an abstract base class for nodes in an animation blend tree.\r\n */\r\nclass AnimationNodeBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset AnimationNodeBase]\";\r\n\r\n\tpublic _pStateClass:any;\r\n\r\n\tpublic get stateClass():any\r\n\t{\r\n\t\treturn this._pStateClass;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>AnimationNodeBase</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn AnimationNodeBase.assetType;\r\n\t}\r\n}\r\n\r\nexport = AnimationNodeBase;",
    "/**\r\n *\r\n */\r\nclass AlignmentMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REGISTRATION_POINT:string = \"registrationPoint\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PIVOT_POINT:string = \"pivot\";\r\n}\r\n\r\nexport = AlignmentMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.CurveSubGeometry\r\n */\r\nclass CurveSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _uvsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _curves:Float2Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _scaleU:number = 1;\r\n\tprivate _scaleV:number = 1;\r\n\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubGeometry.assetType;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis._uvsDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get curves():Float2Attributes\r\n\t{\r\n\t\treturn this._curves;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (this._uvsDirty)\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setCurves(array:Array<number>, offset?:number);\r\n\tpublic setCurves(float32Array:Float32Array, offset?:number);\r\n\tpublic setCurves(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setCurves(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._curves)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._curves.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._curves);\r\n\t\t\tthis._curves = new Float2Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._curves);\r\n\r\n\t\tthis._verticesDirty[this._curves.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tthis._curves.dispose();\r\n\t\tthis._curves = null;\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():CurveSubGeometry\r\n\t{\r\n\t\tvar clone:CurveSubGeometry = new CurveSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\r\n\t\tclone.setCurves(this._curves.clone());\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, null, null, this.positions.count);\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testCurveCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = CurveSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport CurveSubGeometry\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * CurveSubMesh wraps a CurveSubGeometry as a scene graph instantiation. A CurveSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.CurveSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.CurveSubMesh\r\n */\r\nclass CurveSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset CurveSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = CurveSubGeometry;\r\n\r\n\tprivate _subGeometry:CurveSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn CurveSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t */\r\n\tpublic get subGeometry():CurveSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new CurveSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this CurveSubMesh.\r\n\t * @param parentMesh The Mesh object to which this CurveSubMesh belongs.\r\n\t * @param material An optional material used to render this CurveSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:CurveSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = CurveSubMesh;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport MathConsts\t\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport ControllerBase\t\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport AlignmentMode\t\t\t\t= require(\"awayjs-display/lib/base/AlignmentMode\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\nimport OrientationMode\t\t\t\t= require(\"awayjs-display/lib/base/OrientationMode\");\r\nimport IBitmapDrawable\t\t\t\t= require(\"awayjs-display/lib/base/IBitmapDrawable\");\r\nimport Transform\t\t\t\t\t= require(\"awayjs-display/lib/base/Transform\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DisplayObjectEvent\t\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport PrefabBase\t\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n * The DisplayObject class is the base class for all objects that can be\r\n * placed on the display list. The display list manages all objects displayed\r\n * in flash. Use the DisplayObjectContainer class to arrange the\r\n * display objects in the display list. DisplayObjectContainer objects can\r\n * have child display objects, while other display objects, such as Shape and\r\n * TextField objects, are \"leaf\" nodes that have only parents and siblings, no\r\n * children.\r\n *\r\n * <p>The DisplayObject class supports basic functionality like the <i>x</i>\r\n * and <i>y</i> position of an object, as well as more advanced properties of\r\n * the object such as its transformation matrix. </p>\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception. </p>\r\n *\r\n * <p>All display objects inherit from the DisplayObject class.</p>\r\n *\r\n * <p>The DisplayObject class itself does not include any APIs for rendering\r\n * content onscreen. For that reason, if you want create a custom subclass of\r\n * the DisplayObject class, you will want to extend one of its subclasses that\r\n * do have APIs for rendering content onscreen, such as the Shape, Sprite,\r\n * Bitmap, SimpleButton, TextField, or MovieClip class.</p>\r\n *\r\n * <p>The DisplayObject class contains several broadcast events. Normally, the\r\n * target of any particular event is a specific DisplayObject instance. For\r\n * example, the target of an <code>added</code> event is the specific\r\n * DisplayObject instance that was added to the display list. Having a single\r\n * target restricts the placement of event listeners to that target and in\r\n * some cases the target's ancestors on the display list. With broadcast\r\n * events, however, the target is not a specific DisplayObject instance, but\r\n * rather all DisplayObject instances, including those that are not on the\r\n * display list. This means that you can add a listener to any DisplayObject\r\n * instance to listen for broadcast events. In addition to the broadcast\r\n * events listed in the DisplayObject class's Events table, the DisplayObject\r\n * class also inherits two broadcast events from the EventDispatcher class:\r\n * <code>activate</code> and <code>deactivate</code>.</p>\r\n *\r\n * <p>Some properties previously used in the ActionScript 1.0 and 2.0\r\n * MovieClip, TextField, and Button classes(such as <code>_alpha</code>,\r\n * <code>_height</code>, <code>_name</code>, <code>_width</code>,\r\n * <code>_x</code>, <code>_y</code>, and others) have equivalents in the\r\n * ActionScript 3.0 DisplayObject class that are renamed so that they no\r\n * longer begin with the underscore(_) character.</p>\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n * \r\n * @event added            Dispatched when a display object is added to the\r\n *                         display list. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event addedToScene     Dispatched when a display object is added to the on\r\n *                         scene display list, either directly or through the\r\n *                         addition of a sub tree in which the display object\r\n *                         is contained. The following methods trigger this\r\n *                         event:\r\n *                         <code>DisplayObjectContainer.addChild()</code>,\r\n *                         <code>DisplayObjectContainer.addChildAt()</code>.\r\n * @event enterFrame       [broadcast event] Dispatched when the playhead is\r\n *                         entering a new frame. If the playhead is not\r\n *                         moving, or if there is only one frame, this event\r\n *                         is dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event exitFrame        [broadcast event] Dispatched when the playhead is\r\n *                         exiting the current frame. All frame scripts have\r\n *                         been run. If the playhead is not moving, or if\r\n *                         there is only one frame, this event is dispatched\r\n *                         continuously in conjunction with the frame rate.\r\n *                         This event is a broadcast event, which means that\r\n *                         it is dispatched by all display objects with a\r\n *                         listener registered for this event.\r\n * @event frameConstructed [broadcast event] Dispatched after the constructors\r\n *                         of frame display objects have run but before frame\r\n *                         scripts have run. If the playhead is not moving, or\r\n *                         if there is only one frame, this event is\r\n *                         dispatched continuously in conjunction with the\r\n *                         frame rate. This event is a broadcast event, which\r\n *                         means that it is dispatched by all display objects\r\n *                         with a listener registered for this event.\r\n * @event removed          Dispatched when a display object is about to be\r\n *                         removed from the display list. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event removedFromScene Dispatched when a display object is about to be\r\n *                         removed from the display list, either directly or\r\n *                         through the removal of a sub tree in which the\r\n *                         display object is contained. Two methods of the\r\n *                         DisplayObjectContainer class generate this event:\r\n *                         <code>removeChild()</code> and\r\n *                         <code>removeChildAt()</code>.\r\n *\r\n *                         <p>The following methods of a\r\n *                         DisplayObjectContainer object also generate this\r\n *                         event if an object must be removed to make room for\r\n *                         the new object: <code>addChild()</code>,\r\n *                         <code>addChildAt()</code>, and\r\n *                         <code>setChildIndex()</code>. </p>\r\n * @event render           [broadcast event] Dispatched when the display list\r\n *                         is about to be updated and rendered. This event\r\n *                         provides the last opportunity for objects listening\r\n *                         for this event to make changes before the display\r\n *                         list is rendered. You must call the\r\n *                         <code>invalidate()</code> method of the Scene\r\n *                         object each time you want a <code>render</code>\r\n *                         event to be dispatched. <code>Render</code> events\r\n *                         are dispatched to an object only if there is mutual\r\n *                         trust between it and the object that called\r\n *                         <code>Scene.invalidate()</code>. This event is a\r\n *                         broadcast event, which means that it is dispatched\r\n *                         by all display objects with a listener registered\r\n *                         for this event.\r\n *\r\n *                         <p><b>Note: </b>This event is not dispatched if the\r\n *                         display is not rendering. This is the case when the\r\n *                         content is either minimized or obscured. </p>\r\n */\r\nclass DisplayObject extends AssetBase implements IBitmapDrawable\r\n{\r\n\tprivate _loaderInfo:LoaderInfo;\r\n\tprivate _mouseX:number;\r\n\tprivate _mouseY:number;\r\n\tprivate _root:DisplayObjectContainer;\r\n\tprivate _bounds:Rectangle;\r\n\tpublic _pBoxBounds:Box;\r\n\tprivate _boxBoundsInvalid:boolean = true;\r\n\tpublic _pSphereBounds:Sphere;\r\n\tprivate _sphereBoundsInvalid:boolean = true;\r\n\tprivate _debugVisible:boolean;\r\n\tpublic _pName:string;\r\n\r\n\tpublic _pScene:Scene;\r\n\tpublic _pParent:DisplayObjectContainer;\r\n\tpublic _pSceneTransform:Matrix3D = new Matrix3D();\r\n\tpublic _pSceneTransformDirty:boolean = true;\r\n\tpublic _pIsEntity:boolean;\r\n    public _iMaskID:number = -1;\r\n    public _iMasks:DisplayObject[] = null;\r\n\r\n\tprivate _explicitPartition:Partition;\r\n\tpublic _pImplicitPartition:Partition;\r\n\r\n\tprivate _sceneTransformChanged:DisplayObjectEvent;\r\n\tprivate _scenechanged:DisplayObjectEvent;\r\n\tprivate _transform:Transform;\r\n\tprivate _matrix3D:Matrix3D = new Matrix3D();\r\n\tprivate _matrix3DDirty:boolean = true;\r\n    public _pColorTransform:ColorTransform;\r\n\r\n\tprivate _inverseSceneTransform:Matrix3D = new Matrix3D();\r\n\tprivate _inverseSceneTransformDirty:boolean = true;\r\n\tprivate _scenePosition:Vector3D = new Vector3D();\r\n\tprivate _scenePositionDirty:boolean = true;\r\n\tprivate _explicitVisibility:boolean = true;\r\n\tpublic _pImplicitVisibility:boolean = true;\r\n\tprivate _explicitMouseEnabled:boolean = true;\r\n\tpublic _pImplicitMouseEnabled:boolean = true;\r\n\tprivate _listenToSceneTransformChanged:boolean;\r\n\tprivate _listenToSceneChanged:boolean;\r\n\r\n\tprivate _positionDirty:boolean = true;\r\n\tprivate _rotationDirty:boolean = true;\r\n\tprivate _scaleDirty:boolean = true;\r\n\r\n\tprivate _positionChanged:DisplayObjectEvent;\r\n\tprivate _rotationChanged:DisplayObjectEvent;\r\n\tprivate _scaleChanged:DisplayObjectEvent;\r\n\r\n\tprivate _rotationX:number = 0;\r\n\tprivate _rotationY:number = 0;\r\n\tprivate _rotationZ:number = 0;\r\n\tprivate _eulers:Vector3D = new Vector3D();\r\n\tprivate _flipY:Matrix3D = new Matrix3D();\r\n\r\n\tprivate _listenToPositionChanged:boolean;\r\n\tprivate _listenToRotationChanged:boolean;\r\n\tprivate _listenToScaleChanged:boolean;\r\n\tprivate _zOffset:number = 0;\r\n\r\n\tpublic _width:number;\r\n\tpublic _height:number;\r\n\tpublic _depth:number;\r\n\r\n\tpublic _pScaleX:number = 1;\r\n\tpublic _pScaleY:number = 1;\r\n\tpublic _pScaleZ:number = 1;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _pivot:Vector3D = new Vector3D();\r\n\tprivate _pivotScale:Vector3D = new Vector3D();\r\n\tprivate _orientationMatrix:Matrix3D = new Matrix3D();\r\n\tprivate _pivotZero:boolean = true;\r\n\tprivate _pivotDirty:boolean = true;\r\n\tprivate _pos:Vector3D = new Vector3D();\r\n\tprivate _rot:Vector3D = new Vector3D();\r\n\tprivate _sca:Vector3D = new Vector3D();\r\n\tprivate _transformComponents:Array<Vector3D>;\r\n\r\n\tpublic _pIgnoreTransform:boolean = false;\r\n\r\n\tprivate _shaderPickingDetails:boolean;\r\n\r\n\tpublic _pPickingCollisionVO:PickingCollisionVO;\r\n\r\n\tpublic _boundsType:string;\r\n\r\n\tpublic _pPickingCollider:IPickingCollider;\r\n\r\n\tpublic _pRenderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _entityNodes:Array<EntityNode> = new Array<EntityNode>();\r\n\r\n\tpublic _iSourcePrefab:PrefabBase;\r\n\r\n    private _globalColorTransformChanged:DisplayObjectEvent;\r\n    private _globalColorTransformDirty:boolean = false;\r\n    private _globalColorTransform:ColorTransform = new ColorTransform();\r\n    private _onGlobalColorTransformChangedDelegate:(event:DisplayObjectEvent) => void;\r\n    private _onColorTransformChangedDelegate:(event:Event) => void;\r\n    private _inheritColorTransform:boolean = false;\r\n\r\n    public get inheritColorTransform():boolean\r\n    {\r\n        return this._inheritColorTransform;\r\n    }\r\n\r\n    public set inheritColorTransform(value:boolean)\r\n    {\r\n        this._inheritColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n\r\n    public get globalColorTransform():ColorTransform\r\n    {\r\n        if (this._globalColorTransformDirty)\r\n            this._updateGlobalColorTransform();\r\n\r\n        return this._globalColorTransform;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic alignmentMode:string = AlignmentMode.REGISTRATION_POINT;\r\n\r\n\t/**\r\n\t * Indicates the alpha transparency value of the object specified. Valid\r\n\t * values are 0(fully transparent) to 1(fully opaque). The default value is\r\n\t * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,\r\n\t * even though they are invisible.\r\n\t */\r\n\tpublic get alpha():number\r\n    {\r\n        return this._pColorTransform.alphaMultiplier;\r\n    }\r\n\r\n    public set alpha(value:number)\r\n    {\r\n        this._pColorTransform.alphaMultiplier = value;\r\n    }\r\n\r\n    public get colorTransform()\r\n    {\r\n        return this._pColorTransform;\r\n    }\r\n\r\n    public set colorTransform(value:ColorTransform)\r\n    {\r\n        // TS compiler freaking out over Event.CHANGE, using literal strings for now\r\n        if (this._pColorTransform)\r\n            this._pColorTransform.removeEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n\r\n\r\n        this._pSetColorTransform(value);\r\n\r\n        if (value)\r\n            value.addEventListener(\"change\", this._onColorTransformChangedDelegate);\r\n    }\r\n\r\n\t/**\r\n\t * A value from the BlendMode class that specifies which blend mode to use. A\r\n\t * bitmap can be drawn internally in two ways. If you have a blend mode\r\n\t * enabled or an external clipping mask, the bitmap is drawn by adding a\r\n\t * bitmap-filled square shape to the vector render. If you attempt to set\r\n\t * this property to an invalid value, Flash runtimes set the value to\r\n\t * <code>BlendMode.NORMAL</code>.\r\n\t *\r\n\t * <p>The <code>blendMode</code> property affects each pixel of the display\r\n\t * object. Each pixel is composed of three constituent colors(red, green,\r\n\t * and blue), and each constituent color has a value between 0x00 and 0xFF.\r\n\t * Flash Player or Adobe AIR compares each constituent color of one pixel in\r\n\t * the movie clip with the corresponding color of the pixel in the\r\n\t * background. For example, if <code>blendMode</code> is set to\r\n\t * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red\r\n\t * value of the display object with the red value of the background, and uses\r\n\t * the lighter of the two as the value for the red component of the displayed\r\n\t * color.</p>\r\n\t *\r\n\t * <p>The following table describes the <code>blendMode</code> settings. The\r\n\t * BlendMode class defines string values you can use. The illustrations in\r\n\t * the table show <code>blendMode</code> values applied to a circular display\r\n\t * object(2) superimposed on another display object(1).</p>\r\n\t */\r\n\tpublic blendMode:BlendMode;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get boundsType():string\r\n\t{\r\n\t\treturn this._boundsType;\r\n\t}\r\n\r\n\tpublic set boundsType(value:string)\r\n\t{\r\n\t\tif (this._boundsType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._boundsType = value;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].updateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * If set to <code>true</code>, NME will use the software renderer to cache\r\n\t * an internal bitmap representation of the display object. For native targets,\r\n\t * this is often much slower than the default hardware renderer. When you\r\n\t * are using the Flash target, this caching may increase performance for display\r\n\t * objects that contain complex vector content.\r\n\t *\r\n\t * <p>All vector data for a display object that has a cached bitmap is drawn\r\n\t * to the bitmap instead of the main display. If\r\n\t * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is\r\n\t * then copied to the main display as unstretched, unrotated pixels snapped\r\n\t * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent\r\n\t * object. If the bounds of the bitmap change, the bitmap is recreated\r\n\t * instead of being stretched.</p>\r\n\t *\r\n\t * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the\r\n\t * object is drawn to the off-screen bitmap using that matrix and the\r\n\t * stretched and/or rotated results of that rendering are used to draw the\r\n\t * object to the main display.</p>\r\n\t *\r\n\t * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>\r\n\t * property is set to <code>true</code>.</p>\r\n\t *\r\n\t * <p>After you set the <code>cacheAsBitmap</code> property to\r\n\t * <code>true</code>, the rendering does not change, however the display\r\n\t * object performs pixel snapping automatically. The animation speed can be\r\n\t * significantly faster depending on the complexity of the vector content.\r\n\t * </p>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is automatically set to\r\n\t * <code>true</code> whenever you apply a filter to a display object(when\r\n\t * its <code>filter</code> array is not empty), and if a display object has a\r\n\t * filter applied to it, <code>cacheAsBitmap</code> is reported as\r\n\t * <code>true</code> for that display object, even if you set the property to\r\n\t * <code>false</code>. If you clear all filters for a display object, the\r\n\t * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>\r\n\t *\r\n\t * <p>A display object does not use a bitmap even if the\r\n\t * <code>cacheAsBitmap</code> property is set to <code>true</code> and\r\n\t * instead renders from vector data in the following cases:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum\r\n\t * size for a bitmap image is 8,191 pixels in width or height, and the total\r\n\t * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image\r\n\t * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9\r\n\t * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels\r\n\t * in width.</li>\r\n\t *   <li>The bitmap fails to allocate(out of memory error). </li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>The <code>cacheAsBitmap</code> property is best used with movie clips\r\n\t * that have mostly static content and that do not scale and rotate\r\n\t * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to\r\n\t * performance increases when the movie clip is translated(when its <i>x</i>\r\n\t * and <i>y</i> position is changed).</p>\r\n\t */\r\n\tpublic cacheAsBitmap:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic castsShadows:boolean = true;\r\n\r\n\t/**\r\n\t * Indicates the depth of the display object, in pixels. The depth is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>depth</code> property, the <code>scaleZ</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a depth of 0, even if you try to\r\n\t * set <code>depth</code> to a different value.</p>\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this.getBox().depth*this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set depth(val:number)\r\n\t{\r\n\t\tif (this._depth == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._depth = val;\r\n\r\n\t\tthis._pScaleZ = val/this.getBox().depth;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object as a <code>Vector3D</code> object containing euler angles for rotation around x, y and z axis.\r\n\t */\r\n\tpublic get eulers():Vector3D\r\n\t{\r\n\t\tthis._eulers.x = this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.y = this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t\tthis._eulers.z = this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\r\n\t\treturn this._eulers;\r\n\t}\r\n\r\n\tpublic set eulers(value:Vector3D)\r\n\t{\r\n\t\tthis._rotationX = value.x*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = value.y*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = value.z*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * An object that can contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * An indexed array that contains each filter object currently associated\r\n\t * with the display object. The flash.filters package contains several\r\n\t * classes that define specific filters you can use.\r\n\t *\r\n\t * <p>Filters can be applied in Flash Professional at design time, or at run\r\n\t * time by using ActionScript code. To apply a filter by using ActionScript,\r\n\t * you must make a temporary copy of the entire <code>filters</code> array,\r\n\t * modify the temporary array, then assign the value of the temporary array\r\n\t * back to the <code>filters</code> array. You cannot directly add a new\r\n\t * filter object to the <code>filters</code> array.</p>\r\n\t *\r\n\t * <p>To add a filter by using ActionScript, perform the following steps\r\n\t * (assume that the target display object is named\r\n\t * <code>myDisplayObject</code>):</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Create a new filter object by using the constructor method of your\r\n\t * chosen filter class.</li>\r\n\t *   <li>Assign the value of the <code>myDisplayObject.filters</code> array\r\n\t * to a temporary array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Add the new filter object to the <code>myFilters</code> temporary\r\n\t * array.</li>\r\n\t *   <li>Assign the value of the temporary array to the\r\n\t * <code>myDisplayObject.filters</code> array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>If the <code>filters</code> array is undefined, you do not need to use\r\n\t * a temporary array. Instead, you can directly assign an array literal that\r\n\t * contains one or more filter objects that you create. The first example in\r\n\t * the Examples section adds a drop shadow filter by using code that handles\r\n\t * both defined and undefined <code>filters</code> arrays.</p>\r\n\t *\r\n\t * <p>To modify an existing filter object, you must use the technique of\r\n\t * modifying a copy of the <code>filters</code> array:</p>\r\n\t *\r\n\t * <ol>\r\n\t *   <li>Assign the value of the <code>filters</code> array to a temporary\r\n\t * array, such as one named <code>myFilters</code>.</li>\r\n\t *   <li>Modify the property by using the temporary array,\r\n\t * <code>myFilters</code>. For example, to set the quality property of the\r\n\t * first filter in the array, you could use the following code:\r\n\t * <code>myFilters[0].quality = 1;</code></li>\r\n\t *   <li>Assign the value of the temporary array to the <code>filters</code>\r\n\t * array.</li>\r\n\t * </ol>\r\n\t *\r\n\t * <p>At load time, if a display object has an associated filter, it is\r\n\t * marked to cache itself as a transparent bitmap. From this point forward,\r\n\t * as long as the display object has a valid filter list, the player caches\r\n\t * the display object as a bitmap. This source bitmap is used as a source\r\n\t * image for the filter effects. Each display object usually has two bitmaps:\r\n\t * one with the original unfiltered source display object and another for the\r\n\t * final image after filtering. The final image is used when rendering. As\r\n\t * long as the display object does not change, the final image does not need\r\n\t * updating.</p>\r\n\t *\r\n\t * <p>The flash.filters package includes classes for filters. For example, to\r\n\t * create a DropShadow filter, you would write:</p>\r\n\t *\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel4</code> output).\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader doesn't specify any image input or\r\n\t *                       the first input is not an <code>image4</code> input.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter\r\n\t *                       and the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a\r\n\t *                       ByteArray or Vector.<Number> instance as a shader\r\n\t *                       input, and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput object, or the specified values\r\n\t *                       don't match the amount of data in the input data.\r\n\t *                       See the <code>ShaderInput.input</code> property for\r\n\t *                       more information.\r\n\t */\r\n//\t\tpublic filters:Array<Dynamic>;\r\n\r\n\t/**\r\n\t * Indicates the height of the display object, in pixels. The height is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>height</code> property, the <code>scaleY</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content (such as an empty sprite) has a height of 0, even if you try to\r\n\t * set <code>height</code> to a different value.</p>\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this.getBox().height*this._pScaleY;\r\n\t}\r\n\r\n\tpublic set height(val:number)\r\n\t{\r\n\t\tif (this._height == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = val;\r\n\r\n\t\tthis._pScaleY = val/this.getBox().height;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance container index of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByIndex()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * <p>If the DisplayObject has no parent container, index defaults to 0.</p>\r\n\t */\r\n\tpublic get index():number\r\n\t{\r\n\t\tif (this._pParent)\r\n\t\t\treturn this._pParent.getChildIndex(this);\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get inverseSceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._inverseSceneTransformDirty) {\r\n\t\t\tthis._inverseSceneTransform.copyFrom(this.sceneTransform);\r\n\t\t\tthis._inverseSceneTransform.invert();\r\n\t\t\tthis._inverseSceneTransformDirty = false;\r\n\t\t}\r\n\t\treturn this._inverseSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get ignoreTransform():boolean\r\n\t{\r\n\t\treturn this._pIgnoreTransform;\r\n\t}\r\n\r\n\tpublic set ignoreTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pIgnoreTransform == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pIgnoreTransform = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._pSceneTransform.identity();\r\n\t\t\tthis._scenePosition.setTo(0, 0, 0);\r\n\t\t}\r\n\r\n\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get isEntity()\r\n\t{\r\n\t\treturn this._pIsEntity;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object containing information about loading the file\r\n\t * to which this display object belongs. The <code>loaderInfo</code> property\r\n\t * is defined only for the root display object of a SWF file or for a loaded\r\n\t * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the\r\n\t * <code>loaderInfo</code> object associated with the SWF file that contains\r\n\t * a display object named <code>myDisplayObject</code>, use\r\n\t * <code>myDisplayObject.root.loaderInfo</code>.\r\n\t *\r\n\t * <p>A large SWF file can monitor its download by calling\r\n\t * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,\r\n\t * func)</code>.</p>\r\n\t */\r\n\tpublic get loaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._loaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * The calling display object is masked by the specified <code>mask</code>\r\n\t * object. To ensure that masking works when the Stage is scaled, the\r\n\t * <code>mask</code> display object must be in an active part of the display\r\n\t * list. The <code>mask</code> object itself is not drawn. Set\r\n\t * <code>mask</code> to <code>null</code> to remove the mask.\r\n\t *\r\n\t * <p>To be able to scale a mask object, it must be on the display list. To\r\n\t * be able to drag a mask Sprite object(by calling its\r\n\t * <code>startDrag()</code> method), it must be on the display list. To call\r\n\t * the <code>startDrag()</code> method for a mask sprite based on a\r\n\t * <code>mouseDown</code> event being dispatched by the sprite, set the\r\n\t * sprite's <code>buttonMode</code> property to <code>true</code>.</p>\r\n\t *\r\n\t * <p>When display objects are cached by setting the\r\n\t * <code>cacheAsBitmap</code> property to <code>true</code> an the\r\n\t * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the\r\n\t * mask and the display object being masked must be part of the same cached\r\n\t * bitmap. Thus, if the display object is cached, then the mask must be a\r\n\t * child of the display object. If an ancestor of the display object on the\r\n\t * display list is cached, then the mask must be a child of that ancestor or\r\n\t * one of its descendents. If more than one ancestor of the masked object is\r\n\t * cached, then the mask must be a descendent of the cached container closest\r\n\t * to the masked object in the display list.</p>\r\n\t *\r\n\t * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask\r\n\t * more than one calling display object. When the <code>mask</code> is\r\n\t * assigned to a second display object, it is removed as the mask of the\r\n\t * first object, and that object's <code>mask</code> property becomes\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic mask:DisplayObject;\r\n\r\n\t/**\r\n\t * Specifies whether this object receives mouse, or other user input,\r\n\t * messages. The default value is <code>true</code>, which means that by\r\n\t * default any InteractiveObject instance that is on the display list\r\n\t * receives mouse events or other user input events. If\r\n\t * <code>mouseEnabled</code> is set to <code>false</code>, the instance does\r\n\t * not receive any mouse events(or other user input events like keyboard\r\n\t * events). Any children of this instance on the display list are not\r\n\t * affected. To change the <code>mouseEnabled</code> behavior for all\r\n\t * children of an object on the display list, use\r\n\t * <code>flash.display.DisplayObjectContainer.mouseChildren</code>.\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseEnabled():boolean\r\n\t{\r\n\t\treturn this._explicitMouseEnabled;\r\n\t}\r\n\r\n\tpublic set mouseEnabled(value:boolean)\r\n\t{\r\n\t\tif (this._explicitMouseEnabled == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitMouseEnabled = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates the x coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._mouseX;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y coordinate of the mouse or user input device position, in\r\n\t * pixels.\r\n\t *\r\n\t * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y\r\n\t * coordinate will reflect the non-rotated object.</p>\r\n\t */\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._mouseY;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the instance name of the DisplayObject. The object can be\r\n\t * identified in the child list of its parent display object container by\r\n\t * calling the <code>getChildByName()</code> method of the display object\r\n\t * container.\r\n\t *\r\n\t * @throws IllegalOperationError If you are attempting to set this property\r\n\t *                               on an object that was placed on the timeline\r\n\t *                               in the Flash authoring tool.\r\n\t */\r\n\tpublic get name() :string\r\n    {\r\n        return this._pName;\r\n    }\r\n\r\n    public set name(value : string)\r\n    {\r\n        this._pName = value;\r\n    }\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic orientationMode:string = OrientationMode.DEFAULT;\r\n\r\n\t/**\r\n\t * Indicates the DisplayObjectContainer object that contains this display\r\n\t * object. Use the <code>parent</code> property to specify a relative path to\r\n\t * display objects that are above the current display object in the display\r\n\t * list hierarchy.\r\n\t *\r\n\t * <p>You can use <code>parent</code> to move up multiple levels in the\r\n\t * display list as in the following:</p>\r\n\t *\r\n\t * @throws SecurityError The parent display object belongs to a security\r\n\t *                       sandbox to which you do not have access. You can\r\n\t *                       avoid this situation by having the parent movie call\r\n\t *                       the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic get parent():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._pParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._explicitPartition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tif (this._explicitPartition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitPartition = value;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, this._pScene);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pickingCollider():IPickingCollider\r\n\t{\r\n\t\treturn this._pPickingCollider;\r\n\t}\r\n\r\n\tpublic set pickingCollider(value:IPickingCollider)\r\n\t{\r\n\t\tthis._pPickingCollider = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the local point around which the object rotates.\r\n\t */\r\n\tpublic get pivot():Vector3D\r\n\t{\r\n\t\treturn this._pivot;\r\n\t}\r\n\r\n\r\n\tpublic set pivot(pivot:Vector3D)\r\n\t{\r\n\t\tthis._pivot = pivot.clone();\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * For a display object in a loaded SWF file, the <code>root</code> property\r\n\t * is the top-most display object in the portion of the display list's tree\r\n\t * structure represented by that SWF file. For a Bitmap object representing a\r\n\t * loaded image file, the <code>root</code> property is the Bitmap object\r\n\t * itself. For the instance of the main class of the first SWF file loaded,\r\n\t * the <code>root</code> property is the display object itself. The\r\n\t * <code>root</code> property of the Scene object is the Scene object itself.\r\n\t * The <code>root</code> property is set to <code>null</code> for any display\r\n\t * object that has not been added to the display list, unless it has been\r\n\t * added to a display object container that is off the display list but that\r\n\t * is a child of the top-most display object in a loaded SWF file.\r\n\t *\r\n\t * <p>For example, if you create a new Sprite object by calling the\r\n\t * <code>Sprite()</code> constructor method, its <code>root</code> property\r\n\t * is <code>null</code> until you add it to the display list(or to a display\r\n\t * object container that is off the display list but that is a child of the\r\n\t * top-most display object in a SWF file).</p>\r\n\t *\r\n\t * <p>For a loaded SWF file, even though the Loader object used to load the\r\n\t * file may not be on the display list, the top-most display object in the\r\n\t * SWF file has its <code>root</code> property set to itself. The Loader\r\n\t * object does not have its <code>root</code> property set until it is added\r\n\t * as a child of a display object for which the <code>root</code> property is\r\n\t * set.</p>\r\n\t */\r\n\tpublic get root():DisplayObjectContainer\r\n\t{\r\n\t\treturn this._root;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the rotation of the DisplayObject instance, in degrees, from its\r\n\t * original orientation. Values from 0 to 180 represent clockwise rotation;\r\n\t * values from 0 to -180 represent counterclockwise rotation. Values outside\r\n\t * this range are added to or subtracted from 360 to obtain a value within\r\n\t * the range. For example, the statement <code>my_video.rotation = 450</code>\r\n\t * is the same as <code> my_video.rotation = 90</code>.\r\n\t */\r\n\tpublic rotation:number; //TODO\r\n\r\n\t/**\r\n\t * Indicates the x-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationX():number\r\n\t{\r\n\t\treturn this._rotationX*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationX(val:number)\r\n\t{\r\n\t\tif (this.rotationX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationX = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the y-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationY():number\r\n\t{\r\n\t\treturn this._rotationY*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationY(val:number)\r\n\t{\r\n\t\tif (this.rotationY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationY = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z-axis rotation of the DisplayObject instance, in degrees,\r\n\t * from its original orientation relative to the 3D parent container. Values\r\n\t * from 0 to 180 represent clockwise rotation; values from 0 to -180\r\n\t * represent counterclockwise rotation. Values outside this range are added\r\n\t * to or subtracted from 360 to obtain a value within the range.\r\n\t */\r\n\tpublic get rotationZ():number\r\n\t{\r\n\t\treturn this._rotationZ*MathConsts.RADIANS_TO_DEGREES;\r\n\t}\r\n\r\n\tpublic set rotationZ(val:number)\r\n\t{\r\n\t\tif (this.rotationZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationZ = val*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * The current scaling grid that is in effect. If set to <code>null</code>,\r\n\t * the entire display object is scaled normally when any scale transformation\r\n\t * is applied.\r\n\t *\r\n\t * <p>When you define the <code>scale9Grid</code> property, the display\r\n\t * object is divided into a grid with nine regions based on the\r\n\t * <code>scale9Grid</code> rectangle, which defines the center region of the\r\n\t * grid. The eight other regions of the grid are the following areas: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The upper-left corner outside of the rectangle</li>\r\n\t *   <li>The area above the rectangle </li>\r\n\t *   <li>The upper-right corner outside of the rectangle</li>\r\n\t *   <li>The area to the left of the rectangle</li>\r\n\t *   <li>The area to the right of the rectangle</li>\r\n\t *   <li>The lower-left corner outside of the rectangle</li>\r\n\t *   <li>The area below the rectangle</li>\r\n\t *   <li>The lower-right corner outside of the rectangle</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>You can think of the eight regions outside of the center(defined by\r\n\t * the rectangle) as being like a picture frame that has special rules\r\n\t * applied to it when scaled.</p>\r\n\t *\r\n\t * <p>When the <code>scale9Grid</code> property is set and a display object\r\n\t * is scaled, all text and gradients are scaled normally; however, for other\r\n\t * types of objects the following rules apply:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>Content in the center region is scaled normally. </li>\r\n\t *   <li>Content in the corners is not scaled. </li>\r\n\t *   <li>Content in the top and bottom regions is scaled horizontally only.\r\n\t * Content in the left and right regions is scaled vertically only.</li>\r\n\t *   <li>All fills(including bitmaps, video, and gradients) are stretched to\r\n\t * fit their shapes.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>If a display object is rotated, all subsequent scaling is normal(and\r\n\t * the <code>scale9Grid</code> property is ignored).</p>\r\n\t *\r\n\t * <p>For example, consider the following display object and a rectangle that\r\n\t * is applied as the display object's <code>scale9Grid</code>:</p>\r\n\t *\r\n\t * <p>A common use for setting <code>scale9Grid</code> is to set up a display\r\n\t * object to be used as a component, in which edge regions retain the same\r\n\t * width when the component is scaled.</p>\r\n\t *\r\n\t * @throws ArgumentError If you pass an invalid argument to the method.\r\n\t */\r\n\tpublic scale9Grid:Rectangle;\r\n\r\n\t/**\r\n\t * Indicates the horizontal scale(percentage) of the object as applied from\r\n\t * the registration point. The default registration point is(0,0). 1.0\r\n\t * equals 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleX():number\r\n\t{\r\n\t\treturn this._pScaleX;\r\n\t}\r\n\r\n\tpublic set scaleX(val:number)\r\n\t{\r\n\t\t//remove absolute width\r\n\t\tthis._width = null;\r\n\r\n\t\tif (this._pScaleX == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleX = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the vertical scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code> and\r\n\t * <code>y</code> property values, which are defined in whole pixels. </p>\r\n\t */\r\n\tpublic get scaleY():number\r\n\t{\r\n\t\treturn this._pScaleY;\r\n\t}\r\n\r\n\tpublic set scaleY(val:number)\r\n\t{\r\n\t\t//remove absolute height\r\n\t\tthis._height = null;\r\n\r\n\t\tif (this._pScaleY == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleY = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the depth scale(percentage) of an object as applied from the\r\n\t * registration point of the object. The default registration point is(0,0).\r\n\t * 1.0 is 100% scale.\r\n\t *\r\n\t * <p>Scaling the local coordinate system changes the <code>x</code>,\r\n\t * <code>y</code> and <code>z</code> property values, which are defined in\r\n\t * whole pixels. </p>\r\n\t */\r\n\tpublic get scaleZ():number\r\n\t{\r\n\t\treturn this._pScaleZ;\r\n\t}\r\n\r\n\tpublic set scaleZ(val:number)\r\n\t{\r\n\t\t//remove absolute depth\r\n\t\tthis._depth = null;\r\n\r\n\t\tif (this._pScaleZ == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pScaleZ = val;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\tif (this._scenePositionDirty) {\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT) {\r\n\t\t\t\tthis._scenePosition = this.sceneTransform.transformVector(this._pivotScale);\r\n\t\t\t\t//this._scenePosition.decrementBy(new Vector3D(this._pivot.x*this._pScaleX, this._pivot.y*this._pScaleY, this._pivot.z*this._pScaleZ));\r\n\t\t\t} else {\r\n\t\t\t\tthis.sceneTransform.copyColumnTo(3, this._scenePosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._scenePositionDirty = false;\r\n\t\t}\r\n\t\treturn this._scenePosition;\r\n\t}\r\n\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._pSceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The scroll rectangle bounds of the display object. The display object is\r\n\t * cropped to the size defined by the rectangle, and it scrolls within the\r\n\t * rectangle when you change the <code>x</code> and <code>y</code> properties\r\n\t * of the <code>scrollRect</code> object.\r\n\t *\r\n\t * <p>The properties of the <code>scrollRect</code> Rectangle object use the\r\n\t * display object's coordinate space and are scaled just like the overall\r\n\t * display object. The corner bounds of the cropped window on the scrolling\r\n\t * display object are the origin of the display object(0,0) and the point\r\n\t * defined by the width and height of the rectangle. They are not centered\r\n\t * around the origin, but use the origin to define the upper-left corner of\r\n\t * the area. A scrolled display object always scrolls in whole pixel\r\n\t * increments. </p>\r\n\t *\r\n\t * <p>You can scroll an object left and right by setting the <code>x</code>\r\n\t * property of the <code>scrollRect</code> Rectangle object. You can scroll\r\n\t * an object up and down by setting the <code>y</code> property of the\r\n\t * <code>scrollRect</code> Rectangle object. If the display object is rotated\r\n\t * 90° and you scroll it left and right, the display object actually scrolls\r\n\t * up and down.</p>\r\n\t */\r\n\tpublic scrollRect:Rectangle;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shaderPickingDetails():boolean\r\n\t{\r\n\t\treturn this._shaderPickingDetails;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._debugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (value == this._debugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugVisible = value;\r\n\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].debugVisible = this._debugVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * An object with properties pertaining to a display object's matrix, color\r\n\t * transform, and pixel bounds. The specific properties  -  matrix,\r\n\t * colorTransform, and three read-only properties\r\n\t * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,\r\n\t * and <code>pixelBounds</code>)  -  are described in the entry for the\r\n\t * Transform class.\r\n\t *\r\n\t * <p>Each of the transform object's properties is itself an object. This\r\n\t * concept is important because the only way to set new values for the matrix\r\n\t * or colorTransform objects is to create a new object and copy that object\r\n\t * into the transform.matrix or transform.colorTransform property.</p>\r\n\t *\r\n\t * <p>For example, to increase the <code>tx</code> value of a display\r\n\t * object's matrix, you must make a copy of the entire matrix object, then\r\n\t * copy the new object into the matrix property of the transform object:</p>\r\n\t * <pre xml:space=\"preserve\"><code> public myMatrix:Matrix =\r\n\t * myDisplayObject.transform.matrix; myMatrix.tx += 10;\r\n\t * myDisplayObject.transform.matrix = myMatrix; </code></pre>\r\n\t *\r\n\t * <p>You cannot directly set the <code>tx</code> property. The following\r\n\t * code has no effect on <code>myDisplayObject</code>: </p>\r\n\t * <pre xml:space=\"preserve\"><code> myDisplayObject.transform.matrix.tx +=\r\n\t * 10; </code></pre>\r\n\t *\r\n\t * <p>You can also copy an entire transform object and assign it to another\r\n\t * display object's transform property. For example, the following code\r\n\t * copies the entire transform object from <code>myOldDisplayObj</code> to\r\n\t * <code>myNewDisplayObj</code>:</p>\r\n\t * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>\r\n\t *\r\n\t * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the\r\n\t * same values for its matrix, color transform, and pixel bounds as the old\r\n\t * display object, <code>myOldDisplayObj</code>.</p>\r\n\t *\r\n\t * <p>Note that AIR for TV devices use hardware acceleration, if it is\r\n\t * available, for color transforms.</p>\r\n\t */\r\n\tpublic get transform():Transform\r\n\t{\r\n\t\treturn this._transform;\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the display object is visible. Display objects that are not\r\n\t * visible are disabled. For example, if <code>visible=false</code> for an\r\n\t * InteractiveObject instance, it cannot be clicked.\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn this._explicitVisibility;\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitVisibility == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitVisibility = value;\r\n\r\n\t\tthis._pUpdateImplicitVisibility(this._pParent? this._pParent._iIsVisible() : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the width of the display object, in pixels. The width is\r\n\t * calculated based on the bounds of the content of the display object. When\r\n\t * you set the <code>width</code> property, the <code>scaleX</code> property\r\n\t * is adjusted accordingly, as shown in the following code:\r\n\t *\r\n\t * <p>Except for TextField and Video objects, a display object with no\r\n\t * content(such as an empty sprite) has a width of 0, even if you try to set\r\n\t * <code>width</code> to a different value.</p>\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this.getBox().width*this._pScaleX;\r\n\t}\r\n\r\n\tpublic set width(val:number)\r\n\t{\r\n\t\tif (this._width == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = val;\r\n\r\n\t\tthis._pScaleX = val/this.getBox().width;\r\n\r\n\t\tthis.invalidateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>x</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\tpublic set x(val:number)\r\n\t{\r\n\t\tif (this._x == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the <i>y</i> coordinate of the DisplayObject instance relative\r\n\t * to the local coordinates of the parent DisplayObjectContainer. If the\r\n\t * object is inside a DisplayObjectContainer that has transformations, it is\r\n\t * in the local coordinate system of the enclosing DisplayObjectContainer.\r\n\t * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the\r\n\t * DisplayObjectContainer's children inherit a coordinate system that is\r\n\t * rotated 90° counterclockwise. The object's coordinates refer to the\r\n\t * registration point position.\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\tpublic set y(val:number)\r\n\t{\r\n\t\tif (this._y == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._y = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the z coordinate position along the z-axis of the DisplayObject\r\n\t * instance relative to the 3D parent container. The z property is used for\r\n\t * 3D coordinates, not screen or pixel coordinates.\r\n\t *\r\n\t * <p>When you set a <code>z</code> property for a display object to\r\n\t * something other than the default value of <code>0</code>, a corresponding\r\n\t * Matrix3D object is automatically created. for adjusting a display object's\r\n\t * position and orientation in three dimensions. When working with the\r\n\t * z-axis, the existing behavior of x and y properties changes from screen or\r\n\t * pixel coordinates to positions relative to the 3D parent container.</p>\r\n\t *\r\n\t * <p>For example, a child of the <code>_root</code> at position x = 100, y =\r\n\t * 100, z = 200 is not drawn at pixel location(100,100). The child is drawn\r\n\t * wherever the 3D projection calculation puts it. The calculation is:</p>\r\n\t *\r\n\t * <p><code>(x~~cameraFocalLength/cameraRelativeZPosition,\r\n\t * y~~cameraFocalLength/cameraRelativeZPosition)</code></p>\r\n\t */\r\n\tpublic get z():number\r\n\t{\r\n\t\treturn this._z;\r\n\t}\r\n\r\n\tpublic set z(val:number)\r\n\t{\r\n\t\tif (this._z == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._z = val;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get zOffset():number\r\n\t{\r\n\t\treturn this._zOffset;\r\n\t}\r\n\r\n\tpublic set zOffset(value:number)\r\n\t{\r\n\t\tthis._zOffset = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>DisplayObject</code> instance.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\t// Cached vector of transformation components used when\r\n\t\t// recomposing the transform matrix in updateTransform()\r\n\r\n        this._onGlobalColorTransformChangedDelegate = (event:DisplayObjectEvent) => this.onGlobalColorTransformChanged(event);\r\n        this._onColorTransformChangedDelegate = (event:Event) => this.onColorTransformChanged(event);\r\n\t\tthis._transformComponents = new Array<Vector3D>(3);\r\n\r\n\t\tthis._transformComponents[0] = this._pos;\r\n\t\tthis._transformComponents[1] = this._rot;\r\n\t\tthis._transformComponents[2] = this._sca;\r\n\r\n\t\t//creation of associated transform object\r\n\t\tthis._transform = new Transform(this);\r\n\r\n\t\tthis._matrix3D.identity();\r\n\r\n\t\tthis._flipY.appendScale(1, -1, 1);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.addEventListener(type, listener);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENE_CHANGED:\r\n\t\t\t\tthis._listenToSceneChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase DisplayObjectEvent.SCENETRANSFORM_CHANGED:\r\n\t\t\t\tthis._listenToSceneTransformChanged = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObject = new DisplayObject();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n        clone._iMaskID = this._iMaskID;\r\n        clone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tif (this.parent)\r\n\t\t\tthis.parent.removeChild(this);\r\n\r\n\t\twhile (this._pRenderables.length)\r\n\t\t\tthis._pRenderables[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic disposeAsset()\r\n\t{\r\n\t\tthis.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the area of the display object relative\r\n\t * to the coordinate system of the <code>targetCoordinateSpace</code> object.\r\n\t * Consider the following code, which shows how the rectangle returned can\r\n\t * vary depending on the <code>targetCoordinateSpace</code> parameter that\r\n\t * you pass to the method:\r\n\t *\r\n\t * <p><b>Note:</b> Use the <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to display coordinates, or display coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * <p>The <code>getBounds()</code> method is similar to the\r\n\t * <code>getRect()</code> method; however, the Rectangle returned by the\r\n\t * <code>getBounds()</code> method includes any strokes on shapes, whereas\r\n\t * the Rectangle returned by the <code>getRect()</code> method does not. For\r\n\t * an example, see the description of the <code>getRect()</code> method.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getBounds(targetCoordinateSpace:DisplayObject):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that defines the boundary of the display object, based\r\n\t * on the coordinate system defined by the <code>targetCoordinateSpace</code>\r\n\t * parameter, excluding any strokes on shapes. The values that the\r\n\t * <code>getRect()</code> method returns are the same or smaller than those\r\n\t * returned by the <code>getBounds()</code> method.\r\n\t *\r\n\t * <p><b>Note:</b> Use <code>localToGlobal()</code> and\r\n\t * <code>globalToLocal()</code> methods to convert the display object's local\r\n\t * coordinates to Scene coordinates, or Scene coordinates to local\r\n\t * coordinates, respectively.</p>\r\n\t *\r\n\t * @param targetCoordinateSpace The display object that defines the\r\n\t *                              coordinate system to use.\r\n\t * @return The rectangle that defines the area of the display object relative\r\n\t *         to the <code>targetCoordinateSpace</code> object's coordinate\r\n\t *         system.\r\n\t */\r\n\tpublic getRect(targetCoordinateSpace:DisplayObject = null):Rectangle\r\n\t{\r\n\t\treturn this._bounds; //TODO\r\n\t}\r\n\r\n\tpublic getBox(targetCoordinateSpace:DisplayObject = null):Box\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//TODO targetCoordinateSpace\r\n\t\tif (this._boxBoundsInvalid) {\r\n\t\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\t\tif (this._width != null) {\r\n\t\t\t\tthis._pScaleX = this._width/this._pBoxBounds.width;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._height != null) {\r\n\t\t\t\tthis._pScaleY = this._height/this._pBoxBounds.height;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (this._depth != null) {\r\n\t\t\t\tthis._pScaleZ = this._depth/this._pBoxBounds.depth;\r\n\t\t\t\tthis.invalidateScale();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pBoxBounds;\r\n\t}\r\n\r\n\tpublic getSphere(targetCoordinateSpace:DisplayObject = null):Sphere\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tif (this._sphereBoundsInvalid) {\r\n\t\t\tthis._pUpdateSphereBounds();\r\n\t\t}\r\n\r\n\r\n\t\treturn this._pSphereBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the Scene(global) coordinates\r\n\t * to the display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent global coordinates\r\n\t * because they relate to the origin(0,0) of the main display area. Then\r\n\t * pass the Point instance as the parameter to the\r\n\t * <code>globalToLocal()</code> method. The method returns a new Point object\r\n\t * with <i>x</i> and <i>y</i> values that relate to the origin of the display\r\n\t * object instead of the origin of the Scene.</p>\r\n\t *\r\n\t * @param point An object created with the Point class. The Point object\r\n\t *              specifies the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the display object.\r\n\t */\r\n\tpublic globalToLocal(point:Point):Point\r\n\t{\r\n\t\treturn point; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a two-dimensional point from the Scene(global) coordinates to a\r\n\t * three-dimensional display object's(local) coordinates.\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Vector3D class. The x,\r\n\t * y and z values that you assign to the Vector3D object represent global\r\n\t * coordinates because they are relative to the origin(0,0,0) of the scene. Then\r\n\t * pass the Vector3D object to the <code>globalToLocal3D()</code> method as the\r\n\t * <code>position</code> parameter.\r\n\t * The method returns three-dimensional coordinates as a Vector3D object\r\n\t * containing <code>x</code>, <code>y</code>, and <code>z</code> values that\r\n\t * are relative to the origin of the three-dimensional display object.</p>\r\n\t *\r\n\t * @param point A Vector3D object representing global x, y and z coordinates in\r\n\t *              the scene.\r\n\t * @return A Vector3D object with coordinates relative to the three-dimensional\r\n\t *         display object.\r\n\t */\r\n\tpublic globalToLocal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.inverseSceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the bounding box of the display object to see if it overlaps or\r\n\t * intersects with the bounding box of the <code>obj</code> display object.\r\n\t *\r\n\t * @param obj The display object to test against.\r\n\t * @return <code>true</code> if the bounding boxes of the display objects\r\n\t *         intersect; <code>false</code> if not.\r\n\t */\r\n\tpublic hitTestObject(obj:DisplayObject):boolean\r\n\t{\r\n\t\tvar objBox:Box = obj.getBox();\r\n\t\tif(!objBox) return false;\r\n\t\tvar topLeft:Point = new Point(objBox.x,objBox.y);\r\n\t\tvar bottomLeft:Point = new Point(objBox.x,objBox.y-objBox.height);\r\n\t\tvar topRight:Point = new Point(objBox.x+objBox.width,objBox.y);\r\n\t\tvar bottomRight:Point = new Point(objBox.x+objBox.width,objBox.y-objBox.height);\r\n\r\n\t\ttopLeft = this.globalToLocal(obj.localToGlobal(topLeft));\r\n\t\tbottomLeft = this.globalToLocal(obj.localToGlobal(bottomLeft));\r\n\t\ttopRight = this.globalToLocal(obj.localToGlobal(topRight));\r\n\t\tbottomRight = this.globalToLocal(obj.localToGlobal(bottomRight));\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tif(!box) return false;\r\n\r\n\t\t//first check all points against targer box\r\n\t\tif(topLeft.x <= box.left && topLeft.x <= box.left && topLeft.y <= box.top && topLeft.y >= box.bottom) return true;\r\n\t\tif(bottomLeft.x <= box.left && bottomLeft.x <= box.left && bottomLeft.y <= box.top && bottomLeft.y >= box.bottom) return true;\r\n\t\tif(topRight.x <= box.left && topRight.x <= box.left && topRight.y <= box.top && topRight.y >= box.bottom) return true;\r\n\t\tif(bottomRight.x <= box.left && bottomRight.x <= box.left && bottomRight.y <= box.top && bottomRight.y >= box.bottom) return true;\r\n\r\n\t\t//now test against obj box\r\n\t\tvar n0x:number = topRight.y - topLeft.y;\r\n\t\tvar n0y:number = -(topRight.x - topLeft.x);\r\n\r\n\t\tvar n1x:number = bottomRight.y - topRight.y;\r\n\t\tvar n1y:number = -(bottomRight.x - topRight.x);\r\n\r\n\t\tvar n2x:number = bottomLeft.y - bottomRight.y;\r\n\t\tvar n2y:number = -(bottomLeft.x - bottomRight.x);\r\n\r\n\t\tvar n3x:number = topLeft.y - bottomLeft.y;\r\n\t\tvar n3y:number = -(topLeft.x - bottomLeft.x);\r\n\r\n\t\tvar p0x:number = box.left - topLeft.x;\r\n\t\tvar p0y:number = box.top - topLeft.y;\r\n\t\tvar p1x:number = box.left - topRight.x;\r\n\t\tvar p1y:number = box.top - topRight.y;\r\n\t\tvar p2x:number = box.left - bottomRight.x;\r\n\t\tvar p2y:number = box.top - bottomRight.y;\r\n\t\tvar p3x:number = box.left - bottomLeft.x;\r\n\t\tvar p3y:number = box.top - bottomLeft.y;\r\n\r\n\t\tvar dot0:number = (n0x*p0x)+(n0y*p0y);\r\n\t\tvar dot1:number = (n1x*p1x)+(n1y*p1y);\r\n\t\tvar dot2:number = (n2x*p2x)+(n2y*p2y);\r\n\t\tvar dot3:number = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.top - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.top - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.top - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.top - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if topRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.left - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.left - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.left - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.left - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomLeft is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\tp0x = box.right - topLeft.x;\r\n\t\tp0y = box.bottom - topLeft.y;\r\n\t\tp1x = box.right - topRight.x;\r\n\t\tp1y = box.bottom - topRight.y;\r\n\t\tp2x = box.right - bottomRight.x;\r\n\t\tp2y = box.bottom - bottomRight.y;\r\n\t\tp3x = box.right - bottomLeft.x;\r\n\t\tp3y = box.bottom - bottomLeft.y;\r\n\r\n\t\tdot0 = (n0x*p0x)+(n0y*p0y);\r\n\t\tdot1 = (n1x*p1x)+(n1y*p1y);\r\n\t\tdot2 = (n2x*p2x)+(n2y*p2y);\r\n\t\tdot3 = (n3x*p3x)+(n3y*p3y);\r\n\r\n\t\t//check if bottomRight is contained\r\n\t\tif(dot0 < 0 && dot1 < 0 && dot2 < 0 && dot3 < 0) return true;\r\n\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around to face a point defined relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @param    target        The vector defining the point to be looked at\r\n\t * @param    upAxis        An optional vector used to define the desired up orientation of the 3d object after rotation has occurred\r\n\t */\r\n\tpublic lookAt(target:Vector3D, upAxis:Vector3D = null)\r\n\t{\r\n\r\n\t\tvar yAxis:Vector3D;\r\n\t\tvar zAxis:Vector3D;\r\n\t\tvar xAxis:Vector3D;\r\n\t\tvar raw:Array<number>;\r\n\r\n\t\tif (upAxis == null)\r\n\t\t\tupAxis = Vector3D.Y_AXIS;\r\n\t\telse\r\n\t\t\tupAxis.normalize();\r\n\r\n\t\tzAxis = target.subtract(this._iMatrix3D.position);\r\n\t\tzAxis.normalize();\r\n\r\n\t\txAxis = upAxis.crossProduct(zAxis);\r\n\t\txAxis.normalize();\r\n\r\n\t\tif (xAxis.length < 0.05) {\r\n\t\t\txAxis.x = upAxis.y;\r\n\t\t\txAxis.y = upAxis.x;\r\n\t\t\txAxis.z = 0;\r\n\t\t\txAxis.normalize();\r\n\t\t}\r\n\r\n\t\tyAxis = zAxis.crossProduct(xAxis);\r\n\r\n\t\traw = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\traw[0] = xAxis.x;\r\n\t\traw[1] = xAxis.y;\r\n\t\traw[2] = xAxis.z;\r\n\t\traw[3] = 0;\r\n\r\n\t\traw[4] = yAxis.x;\r\n\t\traw[5] = yAxis.y;\r\n\t\traw[6] = yAxis.z;\r\n\t\traw[7] = 0;\r\n\r\n\t\traw[8] = zAxis.x;\r\n\t\traw[9] = zAxis.y;\r\n\t\traw[10] = zAxis.z;\r\n\t\traw[11] = 0;\r\n\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.copyRawDataFrom(raw);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX = vec.x;\r\n\t\tthis._rotationY = vec.y;\r\n\t\tthis._rotationZ = vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the <code>point</code> object from the display object's(local)\r\n\t * coordinates to the Scene(global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i> and <i>y</i>\r\n\t * coordinates from values that are relative to the origin(0,0) of a\r\n\t * specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Point instance that you created as the parameter to\r\n\t * the <code>localToGlobal()</code> method. The method returns a new Point\r\n\t * object with <i>x</i> and <i>y</i> values that relate to the origin of the\r\n\t * Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param point The name or identifier of a point created with the Point\r\n\t *              class, specifying the <i>x</i> and <i>y</i> coordinates as\r\n\t *              properties.\r\n\t * @return A Point object with coordinates relative to the Scene.\r\n\t */\r\n\tpublic localToGlobal(point:Point):Point\r\n\t{\r\n\t\treturn new Point(); //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a three-dimensional point of the three-dimensional display\r\n\t * object's(local) coordinates to a three-dimensional point in the Scene\r\n\t * (global) coordinates.\r\n\t *\r\n\t * <p>This method allows you to convert any given <i>x</i>, <i>y</i> and\r\n\t * <i>z</i> coordinates from values that are relative to the origin(0,0,0) of\r\n\t * a specific display object(local coordinates) to values that are relative to\r\n\t * the origin of the Scene(global coordinates).</p>\r\n\t *\r\n\t * <p>To use this method, first create an instance of the Point class. The\r\n\t * <i>x</i> and <i>y</i> values that you assign represent local coordinates\r\n\t * because they relate to the origin of the display object.</p>\r\n\t *\r\n\t * <p>You then pass the Vector3D instance that you created as the parameter to\r\n\t * the <code>localToGlobal3D()</code> method. The method returns a new\r\n\t * Vector3D object with <i>x</i>, <i>y</i> and <i>z</i> values that relate to\r\n\t * the origin of the Scene instead of the origin of the display object.</p>\r\n\t *\r\n\t * @param position A Vector3D object containing either a three-dimensional\r\n\t *                position or the coordinates of the three-dimensional\r\n\t *                display object.\r\n\t * @return A Vector3D object representing a three-dimensional position in\r\n\t *         the Scene.\r\n\t */\r\n\tpublic localToGlobal3D(position:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(position);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object directly to a point in space\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\r\n\tpublic moveTo(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._x == dx && this._y == dy && this._z == dz)\r\n\t\t\treturn;\r\n\r\n\t\tthis._x = dx;\r\n\t\tthis._y = dy;\r\n\t\tthis._z = dz;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the local point around which the object rotates.\r\n\t *\r\n\t * @param    dx        The amount of movement along the local x axis.\r\n\t * @param    dy        The amount of movement along the local y axis.\r\n\t * @param    dz        The amount of movement along the local z axis.\r\n\t */\r\n\tpublic movePivot(dx:number, dy:number, dz:number)\r\n\t{\r\n\t\tif (this._pivot == null)\r\n\t\t\tthis._pivot = new Vector3D();\r\n\r\n\t\tthis._pivot.x += dx;\r\n\t\tthis._pivot.y += dy;\r\n\t\tthis._pivot.z += dz;\r\n\r\n\t\tthis.invalidatePivot();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local x-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic pitch(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.X_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\tif (this.orientationMode == OrientationMode.CAMERA_PLANE) {\r\n\t\t\tvar comps:Array<Vector3D> = camera.sceneTransform.decompose();\r\n\t\t\tvar scale:Vector3D = comps[2];\r\n\t\t\tcomps[0] = this.scenePosition;\r\n\t\t\tscale.x = this._pScaleX;\r\n\t\t\tscale.y = this._pScaleY;\r\n\t\t\tscale.z = this._pScaleZ;\r\n\t\t\tthis._orientationMatrix.recompose(comps);\r\n\r\n\t\t\t//add in case of pivot\r\n\t\t\tif (!this._pivotZero && this.alignmentMode == AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._orientationMatrix.prependTranslation(-this._pivot.x/this._pScaleX, -this._pivot.y/this._pScaleY, -this._pivot.z/this._pScaleZ);\r\n\r\n\t\t\treturn this._orientationMatrix;\r\n\t\t}\r\n\r\n\t\treturn this.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local z-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic roll(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Z_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around an axis by a defined angle\r\n\t *\r\n\t * @param    axis        The vector defining the axis of rotation\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic rotate(axis:Vector3D, angle:number)\r\n\t{\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\t\tm.prependRotation(angle, axis);\r\n\r\n\t\tvar vec:Vector3D = m.decompose()[1];\r\n\r\n\t\tthis._rotationX += vec.x;\r\n\t\tthis._rotationY += vec.y;\r\n\t\tthis._rotationZ += vec.z;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object directly to a euler angle\r\n\t *\r\n\t * @param    ax        The angle in degrees of the rotation around the x axis.\r\n\t * @param    ay        The angle in degrees of the rotation around the y axis.\r\n\t * @param    az        The angle in degrees of the rotation around the z axis.\r\n\t */\r\n\tpublic rotateTo(ax:number, ay:number, az:number)\r\n\t{\r\n\t\tthis._rotationX = ax*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationY = ay*MathConsts.DEGREES_TO_RADIANS;\r\n\t\tthis._rotationZ = az*MathConsts.DEGREES_TO_RADIANS;\r\n\r\n\t\tthis.invalidateRotation();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tsuper.removeEventListener(type, listener);\r\n\r\n\t\tif (this.hasEventListener(type, listener))\r\n\t\t\treturn;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase DisplayObjectEvent.POSITION_CHANGED:\r\n\t\t\t\tthis._listenToPositionChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.ROTATION_CHANGED:\r\n\t\t\t\tthis._listenToRotationChanged = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DisplayObjectEvent.SCALE_CHANGED:\r\n\t\t\t\tthis._listenToScaleChanged = false;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translate(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._x += x*len;\r\n\t\tthis._y += y*len;\r\n\t\tthis._z += z*len;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object along a vector by a defined length\r\n\t *\r\n\t * @param    axis        The vector defining the axis of movement\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic translateLocal(axis:Vector3D, distance:number)\r\n\t{\r\n\t\tvar x:number = axis.x, y:number = axis.y, z:number = axis.z;\r\n\t\tvar len:number = distance/Math.sqrt(x*x + y*y + z*z);\r\n\r\n\t\tthis._iMatrix3D.prependTranslation(x*len, y*len, z*len);\r\n\r\n\t\tthis._matrix3D.copyColumnTo(3, this._pos);\r\n\r\n\t\tthis._x = this._pos.x;\r\n\t\tthis._y = this._pos.y;\r\n\t\tthis._z = this._pos.z;\r\n\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3d object around it's local y-axis\r\n\t *\r\n\t * @param    angle        The amount of rotation in degrees\r\n\t */\r\n\tpublic yaw(angle:number)\r\n\t{\r\n\t\tthis.rotate(Vector3D.Y_AXIS, angle);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iController:ControllerBase;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iAssignedPartition():Partition\r\n\t{\r\n\t\treturn this._pImplicitPartition;\r\n\t}\r\n\r\n\t/**\r\n\t * The transformation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic get _iMatrix3D():Matrix3D\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\tthis._pUpdateMatrix3D();\r\n\r\n\t\treturn this._matrix3D;\r\n\t}\r\n\r\n\tpublic set _iMatrix3D(val:Matrix3D)\r\n\t{\r\n\r\n\t\t// TODO: From AS3 - Do we still need this in JS ?\r\n\t\t//ridiculous matrix error\r\n\t\t/*\r\n\t\tif (!val.rawData[0]) {\r\n\r\n\t\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\t\tval.copyRawDataTo(raw);\r\n\t\t\traw[0] = this._smallestNumber;\r\n\t\t\tval.copyRawDataFrom(raw);\r\n\t\t}\r\n\t\t//*/\r\n\t\tvar elements:Array<Vector3D> = val.decompose();\r\n\t\tvar vec:Vector3D;\r\n\r\n\t\tvec = elements[0];\r\n\r\n\t\tif (this._x != vec.x || this._y != vec.y || this._z != vec.z) {\r\n\t\t\tthis._x = vec.x;\r\n\t\t\tthis._y = vec.y;\r\n\t\t\tthis._z = vec.z;\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\r\n\t\tvec = elements[1];\r\n\r\n\t\tif (this._rotationX != vec.x || this._rotationY != vec.y || this._rotationZ != vec.z) {\r\n\t\t\tthis._rotationX = vec.x;\r\n\t\t\tthis._rotationY = vec.y;\r\n\t\t\tthis._rotationZ = vec.z;\r\n\r\n\t\t\tthis.invalidateRotation();\r\n\t\t}\r\n\r\n\t\tvec = elements[2];\r\n\r\n\t\tif (this._pScaleX != vec.x || this._pScaleY != vec.y || this._pScaleZ != vec.z) {\r\n\t\t\tthis._pScaleX = vec.x;\r\n\t\t\tthis._pScaleY = vec.y;\r\n\t\t\tthis._pScaleZ = vec.z;\r\n\r\n\t\t\tthis.invalidateScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic get _iPickingCollisionVO():PickingCollisionVO\r\n\t{\r\n\t\tif (!this._pPickingCollisionVO)\r\n\t\t\tthis._pPickingCollisionVO = new PickingCollisionVO(this);\r\n\r\n\t\treturn this._pPickingCollisionVO;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic iSetParent(value:DisplayObjectContainer)\r\n\t{\r\n        if (this._pParent) {\r\n            this._pParent.removeEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n        }\r\n\r\n\t\tthis._pParent = value;\r\n\r\n        if (value) {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(value.mouseChildren);\r\n\t\t\tthis._pUpdateImplicitVisibility(value._iIsVisible());\r\n\t\t\tthis._pUpdateImplicitPartition(value._iAssignedPartition, value._pScene);\r\n            value.addEventListener(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this._onGlobalColorTransformChangedDelegate);\r\n\t\t} else {\r\n\t\t\tthis._pUpdateImplicitMouseEnabled(true);\r\n\t\t\tthis._pUpdateImplicitVisibility(true);\r\n\t\t\tthis._pUpdateImplicitPartition(null, null);\r\n\t\t}\r\n\r\n        this._invalidateGlobalColorTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tthis._pSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._inverseSceneTransformDirty = !this._pIgnoreTransform;\r\n\t\tthis._scenePositionDirty = !this._pIgnoreTransform;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\r\n\t\tif (this._listenToSceneTransformChanged)\r\n\t\t\tthis.notifySceneTransformChange();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitMouseEnabled = this._explicitMouseEnabled && value;\r\n\r\n\t\t// If there is a parent and this child does not have a picking collider, use its parent's picking collider.\r\n\t\tif (this._pImplicitMouseEnabled && this._pParent && !this._pPickingCollider)\r\n\t\t\tthis._pPickingCollider =  this._pParent._pPickingCollider;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(partition:Partition, scene:Scene)\r\n\t{\r\n\t\tvar sceneChanged:boolean = this._pScene != scene;\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.REMOVED_FROM_SCENE, this));\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//unregister partition from current scene\r\n\t\t\tthis._pScene._iUnregisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//unregister entity from current partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pUnregisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\t// assign parent implicit partition if no explicit one is given\r\n\t\tthis._pImplicitPartition = this._explicitPartition || partition;\r\n\r\n\t\t//assign scene\r\n\t\tif (sceneChanged)\r\n\t\t\tthis._pScene = scene;\r\n\r\n\t\tif (this._pScene && this._pImplicitPartition) {\r\n\t\t\t//register partition with scene\r\n\t\t\tthis._pScene._iRegisterPartition(this._pImplicitPartition);\r\n\r\n\t\t\t//register entity with new partition\r\n\t\t\tif (this._pIsEntity)\r\n\t\t\t\tthis._pRegisterEntity(this._pImplicitPartition);\r\n\t\t}\r\n\r\n\t\tif (sceneChanged && this._pScene)\r\n\t\t\tthis._pScene.dispatchEvent(new SceneEvent(SceneEvent.ADDED_TO_SCENE, this));\r\n\r\n\t\tif (sceneChanged) {\r\n\t\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\t\tthis.pInvalidateSceneTransform();\r\n\r\n\t\t\tif (this._listenToSceneChanged)\r\n\t\t\t\tthis.notifySceneChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tthis._pImplicitVisibility = this._explicitVisibility && value;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateMatrix3D()\r\n\t{\r\n\r\n\t\tthis._pos.x = this._x;\r\n\t\tthis._pos.y = this._y;\r\n\t\tthis._pos.z = this._z;\r\n\r\n\t\tthis._rot.x = this._rotationX;\r\n\t\tthis._rot.y = this._rotationY;\r\n\t\tthis._rot.z = this._rotationZ;\r\n\r\n\t\tthis._sca.x = this._pScaleX;\r\n\t\tthis._sca.y = this._pScaleY;\r\n\t\tthis._sca.z = this._pScaleZ;\r\n\r\n\t\tthis._matrix3D.recompose(this._transformComponents);\r\n\r\n\t\tif (!this._pivotZero) {\r\n\t\t\tthis._pivotScale.x = this._pivot.x/this._pScaleX;\r\n\t\t\tthis._pivotScale.y = this._pivot.y/this._pScaleY;\r\n\t\t\tthis._pivotScale.z = this._pivot.z/this._pScaleZ;\r\n\t\t\tthis._matrix3D.prependTranslation(-this._pivotScale.x, -this._pivotScale.y, -this._pivotScale.z);\r\n\t\t\tif (this.alignmentMode != AlignmentMode.PIVOT_POINT)\r\n\t\t\t\tthis._matrix3D.appendTranslation(this._pivot.x, this._pivot.y, this._pivot.z);\r\n\t\t}\r\n\r\n\t\tthis._matrix3DDirty = false;\r\n\t\tthis._positionDirty = false;\r\n\t\tthis._rotationDirty = false;\r\n\t\tthis._scaleDirty = false;\r\n\t\tthis._pivotDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tif (this._pParent && !this._pParent._iIsRoot) {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._pParent.sceneTransform);\r\n\t\t\tthis._pSceneTransform.prepend(this._iMatrix3D);\r\n\t\t} else {\r\n\t\t\tthis._pSceneTransform.copyFrom(this._iMatrix3D);\r\n\t\t}\r\n\r\n\t\tthis._pSceneTransformDirty = false;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._pRenderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._pRenderables.indexOf(renderable);\r\n\r\n\t\tthis._pRenderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic _iInternalUpdate()\r\n\t{\r\n\t\tif (this._iController)\r\n\t\t\tthis._iController.update();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsVisible():boolean\r\n\t{\r\n\t\treturn this._pImplicitVisibility;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iIsMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._pImplicitMouseEnabled;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iSetScene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pUpdateImplicitPartition(this._pParent? this._pParent._iAssignedPartition : null, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyPositionChanged()\r\n\t{\r\n\t\tif (!this._positionChanged)\r\n\t\t\tthis._positionChanged = new DisplayObjectEvent(DisplayObjectEvent.POSITION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._positionChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRotationChanged()\r\n\t{\r\n\t\tif (!this._rotationChanged)\r\n\t\t\tthis._rotationChanged = new DisplayObjectEvent(DisplayObjectEvent.ROTATION_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._rotationChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyScaleChanged()\r\n\t{\r\n\t\tif (!this._scaleChanged)\r\n\t\t\tthis._scaleChanged = new DisplayObjectEvent(DisplayObjectEvent.SCALE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scaleChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneChange()\r\n\t{\r\n\t\tif (!this._scenechanged)\r\n\t\t\tthis._scenechanged = new DisplayObjectEvent(DisplayObjectEvent.SCENE_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._scenechanged);\r\n}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifySceneTransformChange()\r\n\t{\r\n\t\tif (!this._sceneTransformChanged)\r\n\t\t\tthis._sceneTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this);\r\n\r\n\t\tthis.dispatchEvent(this._sceneTransformChanged);\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the 3D transformation matrix, causing it to be updated upon the next request\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate invalidateMatrix3D():void\r\n\t{\r\n\t\tif (this._matrix3DDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._matrix3DDirty = true;\r\n\r\n\t\tif (!this._pSceneTransformDirty && !this._pIgnoreTransform)\r\n\t\t\tthis.pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tvar len:number = this._entityNodes.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._entityNodes[i].invalidatePartition();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePivot()\r\n\t{\r\n\t\tthis._pivotZero = (this._pivot.x == 0) && (this._pivot.y == 0) && (this._pivot.z == 0);\r\n\r\n\t\tif (this._pivotDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pivotDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidatePosition()\r\n\t{\r\n\t\tif (this._positionDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._positionDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToPositionChanged)\r\n\t\t\tthis.notifyPositionChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateRotation()\r\n\t{\r\n\t\tif (this._rotationDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._rotationDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToRotationChanged)\r\n\t\t\tthis.notifyRotationChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate invalidateScale()\r\n\t{\r\n\t\tif (this._scaleDirty)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleDirty = true;\r\n\r\n\t\tthis.invalidateMatrix3D();\r\n\r\n\t\tif (this._listenToScaleChanged)\r\n\t\t\tthis.notifyScaleChanged();\r\n\t}\r\n\r\n\r\n\tpublic _iAddEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tthis._entityNodes.push(entityNode);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveEntityNode(entityNode:EntityNode):EntityNode\r\n\t{\r\n\t\tvar index:number = this._entityNodes.indexOf(entityNode);\r\n\r\n\t\tthis._entityNodes.splice(index, 1);\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pInvalidateBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = true;\r\n\t\tthis._sphereBoundsInvalid = true;\r\n\r\n\t\tif (this.isEntity)\r\n\t\t\tthis.invalidatePartition();\r\n\t}\r\n\t\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tthis._boxBoundsInvalid = false;\r\n\t\t\r\n\t\tif (this._pBoxBounds == null)\r\n\t\t\tthis._pBoxBounds = new Box();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tthis._sphereBoundsInvalid = false;\r\n\r\n\t\tif (this._pSphereBounds == null)\r\n\t\t\tthis._pSphereBounds = new Sphere();\r\n\t}\r\n\r\n    _updateGlobalColorTransform()\r\n    {\r\n        if (this._inheritColorTransform && this._pParent) {\r\n            this._globalColorTransform.copyFrom(this._pParent.globalColorTransform);\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.prepend(this._pColorTransform);\r\n        } else {\r\n            if (this._pColorTransform)\r\n                this._globalColorTransform.copyFrom(this._pColorTransform);\r\n            else\r\n                this._globalColorTransform.clear();\r\n        }\r\n\r\n        this._globalColorTransformDirty = false;\r\n    }\r\n\r\n    // this method is to bypass that TypeScript can't call super setters.\r\n    _pSetColorTransform(value:ColorTransform)\r\n    {\r\n        this._pColorTransform = value;\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    _invalidateGlobalColorTransform()\r\n    {\r\n        this._globalColorTransformDirty = true;\r\n\r\n        if (!this._globalColorTransformChanged)\r\n            this._globalColorTransformChanged = new DisplayObjectEvent(DisplayObjectEvent.GLOBAL_COLOR_TRANSFORM_CHANGED, this);\r\n\r\n        this.dispatchEvent(this._globalColorTransformChanged);\r\n    }\r\n\r\n    private onGlobalColorTransformChanged(event:DisplayObjectEvent)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n\r\n    private onColorTransformChanged(event:Event)\r\n    {\r\n        this._invalidateGlobalColorTransform();\r\n    }\r\n}\r\n\r\nexport = DisplayObject;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport GeometryEvent\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\n\r\n/**\r\n *\r\n * Geometry is a collection of SubGeometries, each of which contain the actual geometrical data such as vertices,\r\n * normals, uvs, etc. It also contains a reference to an animation class, which defines how the geometry moves.\r\n * A Geometry object is assigned to a Mesh, a scene graph occurence of the geometry, which in turn assigns\r\n * the SubGeometries to its respective TriangleSubMesh objects.\r\n *\r\n *\r\n *\r\n * @see away.core.base.SubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class Geometry\r\n */\r\nclass Geometry extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Geometry]\";\r\n\r\n\tprivate _subGeometries:Array<SubGeometryBase>;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Geometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of TriangleSubGeometry objects, each of which contain geometrical data such as vertices, normals, etc.\r\n\t */\r\n\tpublic get subGeometries():Array<SubGeometryBase>\r\n\t{\r\n\t\treturn this._subGeometries;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Geometry object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._subGeometries = new Array<SubGeometryBase>();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tvar len:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subGeometries[i].applyTransformation(transform);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new TriangleSubGeometry object to the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be added.\r\n\t */\r\n\tpublic addSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.push(subGeometry);\r\n\r\n\t\tsubGeometry.parentGeometry = this;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_ADDED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_ADDED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a new TriangleSubGeometry object from the list.\r\n\t * @param subGeometry The TriangleSubGeometry object to be removed.\r\n\t */\r\n\tpublic removeSubGeometry(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tthis._subGeometries.splice(this._subGeometries.indexOf(subGeometry), 1);\r\n\r\n\t\tsubGeometry.parentGeometry = null;\r\n\r\n\t\tif (this.hasEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.SUB_GEOMETRY_REMOVED, subGeometry));\r\n\r\n\t\tthis.iInvalidateBounds(subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the geometry.\r\n\t * @return An exact duplicate of the current Geometry object.\r\n\t */\r\n\tpublic clone():Geometry\r\n\t{\r\n\t\tvar clone:Geometry = new Geometry();\r\n\t\tvar len:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addSubGeometry(this._subGeometries[i].clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scale(scale);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all resources used by the Geometry object, including SubGeometries.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i) {\r\n\t\t\tvar subGeom:SubGeometryBase = this._subGeometries[0];\r\n\t\t\tthis.removeSubGeometry(subGeom);\r\n\t\t\tsubGeom.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the uv coordinates (tiling)\r\n\t * @param scaleU The amount by which to scale on the u axis. Default is 1;\r\n\t * @param scaleV The amount by which to scale on the v axis. Default is 1;\r\n\t */\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tvar numSubGeoms:number = this._subGeometries.length;\r\n\r\n\t\tfor (var i:number = 0; i < numSubGeoms; ++i)\r\n\t\t\tthis._subGeometries[i].scaleUV(scaleU, scaleV);\r\n\t}\r\n\r\n\tpublic iInvalidateBounds(subGeom:SubGeometryBase)\r\n\t{\r\n\t\tif (this.hasEventListener(GeometryEvent.BOUNDS_INVALID))\r\n\t\t\tthis.dispatchEvent(new GeometryEvent(GeometryEvent.BOUNDS_INVALID, subGeom));\r\n\t}\r\n}\r\n\r\nexport = Geometry;",
    "import Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObjectContainer\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightEvent\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport ShadowMapperBase\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\n\r\nclass LightBase extends DisplayObjectContainer\r\n{\r\n\tpublic static assetType:string = \"[asset Light]\";\r\n\r\n\tprivate _color:number = 0xffffff;\r\n\tprivate _colorR:number = 1;\r\n\tprivate _colorG:number = 1;\r\n\tprivate _colorB:number = 1;\r\n\r\n\tprivate _ambientColor:number = 0xffffff;\r\n\tprivate _ambient:number = 0;\r\n\tpublic _iAmbientR:number = 0;\r\n\tpublic _iAmbientG:number = 0;\r\n\tpublic _iAmbientB:number = 0;\r\n\r\n\tprivate _specular:number = 1;\r\n\tpublic _iSpecularR:number = 1;\r\n\tpublic _iSpecularG:number = 1;\r\n\tpublic _iSpecularB:number = 1;\r\n\r\n\tprivate _diffuse:number = 1;\r\n\tpublic _iDiffuseR:number = 1;\r\n\tpublic _iDiffuseG:number = 1;\r\n\tpublic _iDiffuseB:number = 1;\r\n\r\n\tprivate _castsShadows:boolean = false;\r\n\r\n\tprivate _shadowMapper:ShadowMapperBase;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tif (this._castsShadows == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._castsShadows = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (this._shadowMapper == null)\r\n\t\t\t\tthis._shadowMapper = this.pCreateShadowMapper();\r\n\r\n\t\t\tthis._shadowMapper.light = this;\r\n\t\t} else {\r\n\t\t\tthis._shadowMapper.dispose();\r\n\t\t\tthis._shadowMapper = null;\r\n\t\t}\r\n\t\t//*/\r\n\t\tthis.dispatchEvent(new LightEvent(LightEvent.CASTS_SHADOW_CHANGE));\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():ShadowMapperBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic get specular():number\r\n\t{\r\n\t\treturn this._specular;\r\n\t}\r\n\r\n\tpublic set specular(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._specular = value;\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get diffuse():number\r\n\t{\r\n\t\treturn this._diffuse;\r\n\t}\r\n\r\n\tpublic set diffuse(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._diffuse = value;\r\n\t\tthis.updateDiffuse();\r\n\t}\r\n\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tthis._color = value;\r\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff;\r\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff;\r\n\t\tthis._colorB = (this._color & 0xff)/0xff;\r\n\r\n\t\tthis.updateDiffuse();\r\n\t\tthis.updateSpecular();\r\n\t}\r\n\r\n\tpublic get ambient():number\r\n\t{\r\n\t\treturn this._ambient;\r\n\t}\r\n\r\n\tpublic set ambient(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tthis._ambient = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tpublic get ambientColor():number\r\n\t{\r\n\t\treturn this._ambientColor;\r\n\t}\r\n\r\n\tpublic set ambientColor(value:number)\r\n\t{\r\n\t\tthis._ambientColor = value;\r\n\t\tthis.updateAmbient();\r\n\t}\r\n\r\n\tprivate updateAmbient()\r\n\t{\r\n\t\tthis._iAmbientR = ((this._ambientColor >> 16) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientG = ((this._ambientColor >> 8) & 0xff)/0xff*this._ambient;\r\n\t\tthis._iAmbientB = (this._ambientColor & 0xff)/0xff*this._ambient;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightBase.assetType;\r\n\t}\r\n\r\n\tprivate updateSpecular()\r\n\t{\r\n\t\tthis._iSpecularR = this._colorR*this._specular;\r\n\t\tthis._iSpecularG = this._colorG*this._specular;\r\n\t\tthis._iSpecularB = this._colorB*this._specular;\r\n\t}\r\n\r\n\tprivate updateDiffuse()\r\n\t{\r\n\t\tthis._iDiffuseR = this._colorR*this._diffuse;\r\n\t\tthis._iDiffuseG = this._colorG*this._diffuse;\r\n\t\tthis._iDiffuseB = this._colorB*this._diffuse;\r\n\t}\r\n\r\n\tpublic get shadowMapper():ShadowMapperBase\r\n\t{\r\n\t\treturn this._shadowMapper;\r\n\t}\r\n\r\n\tpublic set shadowMapper(value:ShadowMapperBase)\r\n\t{\r\n\t\tthis._shadowMapper = value;\r\n\t\tthis._shadowMapper.light = this;\r\n\t}\r\n}\r\n\r\nexport = LightBase;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Byte4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class LineSubGeometry\r\n */\r\nclass LineSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\r\n\tprivate _positions:AttributesView;\r\n\tprivate _thickness:Float1Attributes;\r\n\tprivate _colors:Byte4Attributes;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubGeometry.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():AttributesView\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():Float1Attributes\r\n\t{\r\n\t\treturn this._thickness;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colors():Byte4Attributes\r\n\t{\r\n\t\tif (!this._colors)\r\n\t\t\tthis.setColors(this._colors);\r\n\r\n\t\treturn this._colors;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of vertices in the LineSubGeometry.\r\n\t */\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\t\t\r\n\t\tthis._positions = new AttributesView(Float32Array, 6, concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn <Float32Array> this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(attributesView:AttributesView, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar positions:Float32Array = new Float32Array(values.length*4);\r\n\t\t\tvar indices:Uint16Array = new Uint16Array(values.length);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tif (index/6 & 1) {\r\n\t\t\t\t\tpositions[index] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 5];\r\n\t\t\t\t\tpositions[index + 3] = values[i];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpositions[index] = values[i];\r\n\t\t\t\t\tpositions[index + 1] = values[i + 1];\r\n\t\t\t\t\tpositions[index + 2] = values[i + 2];\r\n\t\t\t\t\tpositions[index + 3] = values[i + 3];\r\n\t\t\t\t\tpositions[index + 4] = values[i + 4];\r\n\t\t\t\t\tpositions[index + 5] = values[i + 5];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex += 6;\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tvar o:number = index/6 - 4;\r\n\t\t\t\t\tindices.set([o, o + 1, o + 2, o + 3, o + 2, o + 1], i);\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti += 6;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis._positions.set(positions, offset*4);\r\n\r\n\t\t\tthis.setIndices(indices, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new AttributesView(Float32Array, 6, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the thickness.\r\n\t */\r\n\tpublic setThickness(array:Array<number>, offset?:number);\r\n\tpublic setThickness(float32Array:Float32Array, offset?:number);\r\n\tpublic setThickness(float1Attributes:Float1Attributes, offset?:number);\r\n\tpublic setThickness(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Float1Attributes) {\r\n\t\t\tthis._thickness = <Float1Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._thickness)\r\n\t\t\t\tthis._thickness = new Float1Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tvar i:number = 0;\r\n\t\t\tvar j:number = 0;\r\n\t\t\tvar index:number = 0;\r\n\t\t\tvar thickness:Float32Array = new Float32Array(values.length*4);\r\n\r\n\t\t\twhile (i < values.length) {\r\n\t\t\t\tthickness[index] = (Math.floor(0.5*index + 0.5) & 1)? -values[i] : values[i];\r\n\r\n\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tthis._thickness.set(thickness, offset*4);\r\n\t\t} else if (this._thickness) {\r\n\t\t\tthis._thickness.dispose();\r\n\t\t\tthis._thickness = null;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._thickness);\r\n\r\n\t\tthis._verticesDirty[this._thickness.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setColors(array:Array<number>, offset?:number);\r\n\tpublic setColors(float32Array:Float32Array, offset?:number);\r\n\tpublic setColors(uint8Array:Uint8Array, offset?:number);\r\n\tpublic setColors(byte4Attributes:Byte4Attributes, offset?:number);\r\n\tpublic setColors(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values) {\r\n\t\t\tif (values == this._colors)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Byte4Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._colors);\r\n\t\t\t\tthis._colors = <Byte4Attributes> values;\r\n\t\t\t} else {\r\n\t\t\t\tif (!this._colors)\r\n\t\t\t\t\tthis._colors = new Byte4Attributes(this._concatenatedBuffer);\r\n\r\n\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar j:number = 0;\r\n\t\t\t\tvar index:number = 0;\r\n\t\t\t\tvar colors:Uint8Array = new Uint8Array(values.length*4);\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\tif (index/4 & 1) {\r\n\t\t\t\t\t\tcolors[index] = values[i + 4];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 5];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 6];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 7];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolors[index] = values[i];\r\n\t\t\t\t\t\tcolors[index + 1] = values[i + 1];\r\n\t\t\t\t\t\tcolors[index + 2] = values[i + 2];\r\n\t\t\t\t\t\tcolors[index + 3] = values[i + 3];\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (++j == 4) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\ti += 8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._colors.set(values, offset*4);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//auto-derive colors\r\n\t\t\tthis._colors = SubGeometryUtils.generateColors(this._pIndices, this._colors, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._colors);\r\n\r\n\t\tthis._verticesDirty[this._colors.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions = null;\r\n\t\tthis._thickness = null;\r\n\t\tthis._colors = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():LineSubGeometry\r\n\t{\r\n\t\tvar clone:LineSubGeometry = new LineSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\t\tclone.setThickness(this._thickness.clone());\r\n\t\tclone.setColors(this._colors.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testLineCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = LineSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * LineSubMesh wraps a LineSubGeometry as a scene graph instantiation. A LineSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.LineSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.LineSubMesh\r\n */\r\nclass LineSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset LineSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = LineSubGeometry;\r\n\r\n\tprivate _subGeometry:LineSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t */\r\n\tpublic get subGeometry():LineSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new LineSubMesh object\r\n\t * @param subGeometry The LineSubGeometry object which provides the geometry data for this LineSubMesh.\r\n\t * @param parentMesh The Mesh object to which this LineSubMesh belongs.\r\n\t * @param material An optional material used to render this LineSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:LineSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = LineSubMesh;",
    "import EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport Loader\t\t\t\t\t= require(\"awayjs-display/lib/containers/Loader\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The LoaderInfo class provides information about a loaded SWF file or a\r\n * loaded image file(JPEG, GIF, or PNG). LoaderInfo objects are available for\r\n * any display object. The information provided includes load progress, the\r\n * URLs of the loader and loaded content, the number of bytes total for the\r\n * media, and the nominal height and width of the media.\r\n *\r\n * <p>You can access LoaderInfo objects in two ways: </p>\r\n *\r\n * <ul>\r\n *   <li>The <code>contentLoaderInfo</code> property of a flash.display.Loader\r\n * object -  The <code>contentLoaderInfo</code> property is always available\r\n * for any Loader object. For a Loader object that has not called the\r\n * <code>load()</code> or <code>loadBytes()</code> method, or that has not\r\n * sufficiently loaded, attempting to access many of the properties of the\r\n * <code>contentLoaderInfo</code> property throws an error.</li>\r\n *   <li>The <code>loaderInfo</code> property of a display object. </li>\r\n * </ul>\r\n *\r\n * <p>The <code>contentLoaderInfo</code> property of a Loader object provides\r\n * information about the content that the Loader object is loading, whereas\r\n * the <code>loaderInfo</code> property of a DisplayObject provides\r\n * information about the root SWF file for that display object. </p>\r\n *\r\n * <p>When you use a Loader object to load a display object(such as a SWF\r\n * file or a bitmap), the <code>loaderInfo</code> property of the display\r\n * object is the same as the <code>contentLoaderInfo</code> property of the\r\n * Loader object(<code>DisplayObject.loaderInfo =\r\n * Loader.contentLoaderInfo</code>). Because the instance of the main class of\r\n * the SWF file has no Loader object, the <code>loaderInfo</code> property is\r\n * the only way to access the LoaderInfo for the instance of the main class of\r\n * the SWF file.</p>\r\n *\r\n * <p>The following diagram shows the different uses of the LoaderInfo\r\n * object - for the instance of the main class of the SWF file, for the\r\n * <code>contentLoaderInfo</code> property of a Loader object, and for the\r\n * <code>loaderInfo</code> property of a loaded object:</p>\r\n *\r\n * <p>When a loading operation is not complete, some properties of the\r\n * <code>contentLoaderInfo</code> property of a Loader object are not\r\n * available. You can obtain some properties, such as\r\n * <code>bytesLoaded</code>, <code>bytesTotal</code>, <code>url</code>,\r\n * <code>loaderURL</code>, and <code>applicationDomain</code>. When the\r\n * <code>loaderInfo</code> object dispatches the <code>init</code> event, you\r\n * can access all properties of the <code>loaderInfo</code> object and the\r\n * loaded image or SWF file.</p>\r\n *\r\n * <p><b>Note:</b> All properties of LoaderInfo objects are read-only.</p>\r\n *\r\n * <p>The <code>EventDispatcher.dispatchEvent()</code> method is not\r\n * applicable to LoaderInfo objects. If you call <code>dispatchEvent()</code>\r\n * on a LoaderInfo object, an IllegalOperationError exception is thrown.</p>\r\n * \r\n * @event complete   Dispatched when data has loaded successfully. In other\r\n *                   words, it is dispatched when all the content has been\r\n *                   downloaded and the loading has finished. The\r\n *                   <code>complete</code> event is always dispatched after\r\n *                   the <code>init</code> event. The <code>init</code> event\r\n *                   is dispatched when the object is ready to access, though\r\n *                   the content may still be downloading.\r\n * @event httpStatus Dispatched when a network request is made over HTTP and\r\n *                   an HTTP status code can be detected.\r\n * @event init       Dispatched when the properties and methods of a loaded\r\n *                   SWF file are accessible and ready for use. The content,\r\n *                   however, can still be downloading. A LoaderInfo object\r\n *                   dispatches the <code>init</code> event when the following\r\n *                   conditions exist:\r\n *                   <ul>\r\n *                     <li>All properties and methods associated with the\r\n *                   loaded object and those associated with the LoaderInfo\r\n *                   object are accessible.</li>\r\n *                     <li>The constructors for all child objects have\r\n *                   completed.</li>\r\n *                     <li>All ActionScript code in the first frame of the\r\n *                   loaded SWF's main timeline has been executed.</li>\r\n *                   </ul>\r\n *\r\n *                   <p>For example, an <code>Event.INIT</code> is dispatched\r\n *                   when the first frame of a movie or animation is loaded.\r\n *                   The movie is then accessible and can be added to the\r\n *                   display list. The complete movie, however, can take\r\n *                   longer to download. The <code>Event.COMPLETE</code> is\r\n *                   only dispatched once the full movie is loaded.</p>\r\n *\r\n *                   <p>The <code>init</code> event always precedes the\r\n *                   <code>complete</code> event.</p>\r\n * @event ioError    Dispatched when an input or output error occurs that\r\n *                   causes a load operation to fail.\r\n * @event open       Dispatched when a load operation starts.\r\n * @event progress   Dispatched when data is received as the download\r\n *                   operation progresses.\r\n * @event unload     Dispatched by a LoaderInfo object whenever a loaded\r\n *                   object is removed by using the <code>unload()</code>\r\n *                   method of the Loader object, or when a second load is\r\n *                   performed by the same Loader object and the original\r\n *                   content is removed prior to the load beginning.\r\n */\r\nclass LoaderInfo extends EventDispatcher\r\n{\r\n\tprivate _bytes:ByteArray;\r\n\tprivate _bytesLoaded:number;\r\n\tprivate _bytesTotal:number;\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentType:string;\r\n\tprivate _loader:Loader;\r\n\tprivate _url:string;\r\n\t/**\r\n\t * The bytes associated with a LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get bytes():ByteArray\r\n\t{\r\n\t\treturn this._bytes;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of bytes that are loaded for the media. When this number equals\r\n\t * the value of <code>bytesTotal</code>, all of the bytes are loaded.\r\n\t */\r\n\tpublic get bytesLoaded():number /*int*/\r\n\t{\r\n\t\treturn this._bytesLoaded;\r\n\t}\r\n\r\n\t/**\r\n\t * The number of compressed bytes in the entire media file.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, <code>bytesTotal</code>\r\n\t * is 0. After the first <code>progress</code> event from the Loader object,\r\n\t * <code>bytesTotal</code> reflects the actual number of bytes to be\r\n\t * downloaded.</p>\r\n\t */\r\n\tpublic get bytesTotal():number /*int*/\r\n\t{\r\n\t\treturn this._bytesTotal;\r\n\t}\r\n\r\n\t/**\r\n\t * The loaded object associated with this LoaderInfo object.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the loaded object due to security\r\n\t *                       restrictions. This situation can occur, for\r\n\t *                       instance, when a Loader object attempts to access\r\n\t *                       the <code>contentLoaderInfo.content</code> property\r\n\t *                       and it is not granted security permission to access\r\n\t *                       the loaded content.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * The MIME type of the loaded file. The value is <code>null</code> if not\r\n\t * enough of the file has loaded in order to determine the type. The\r\n\t * following list gives the possible values:\r\n\t * <ul>\r\n\t *   <li><code>\"application/x-shockwave-flash\"</code></li>\r\n\t *   <li><code>\"image/jpeg\"</code></li>\r\n\t *   <li><code>\"image/gif\"</code></li>\r\n\t *   <li><code>\"image/png\"</code></li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get contentType():string\r\n\t{\r\n\t\treturn this._contentType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Loader object associated with this LoaderInfo object. If this\r\n\t * LoaderInfo object is the <code>loaderInfo</code> property of the instance\r\n\t * of the main class of the SWF file, no Loader object is associated.\r\n\t * \r\n\t * @throws SecurityError If the object accessing this API is prevented from\r\n\t *                       accessing the Loader object because of security\r\n\t *                       restrictions. This can occur, for instance, when a\r\n\t *                       loaded SWF file attempts to access its\r\n\t *                       <code>loaderInfo.loader</code> property and it is\r\n\t *                       not granted security permission to access the\r\n\t *                       loading SWF file.\r\n\t *\r\n\t *                       <p>For more information related to security, see the\r\n\t *                       Flash Player Developer Center Topic: <a\r\n\t *                       href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                       scope=\"external\">Security</a>.</p>\r\n\t */\r\n\tpublic get loader():Loader\r\n\t{\r\n\t\treturn this._loader;\r\n\t}\r\n\r\n\t/**\r\n\t * The URL of the media being loaded.\r\n\t *\r\n\t * <p>Before the first <code>progress</code> event is dispatched by this\r\n\t * LoaderInfo object's corresponding Loader object, the value of the\r\n\t * <code>url</code> property might reflect only the initial URL specified in\r\n\t * the call to the <code>load()</code> method of the Loader object. After the\r\n\t * first <code>progress</code> event, the <code>url</code> property reflects\r\n\t * the media's final URL, after any redirects and relative URLs are\r\n\t * resolved.</p>\r\n\t *\r\n\t * <p>In some cases, the value of the <code>url</code> property is truncated;\r\n\t * see the <code>isURLInaccessible</code> property for details.</p>\r\n\t */\r\n\tpublic get url():string\r\n\t{\r\n\t\treturn this._url;\r\n\t}\r\n}\r\n\r\nexport = LoaderInfo;",
    "class OrientationMode\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static DEFAULT:string = \"default\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_PLANE:string = \"cameraPlane\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static CAMERA_POSITION:string = \"cameraPosition\";\r\n}\r\n\r\nexport = OrientationMode;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport ISubGeometryVO\t\t\t\t= require(\"awayjs-display/lib/vos/ISubGeometryVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass SubGeometryBase extends AssetBase\r\n{\r\n\tprivate _subGeometryVO:Array<ISubGeometryVO> = new Array<ISubGeometryVO>();\r\n\t\r\n\tpublic _pIndices:Short3Attributes;\r\n\r\n\tprivate _numElements:number = 0;\r\n\r\n\tpublic _concatenatedBuffer:AttributesBuffer;\r\n\r\n\tprivate _indicesUpdated:SubGeometryEvent;\r\n\r\n\tpublic _verticesDirty:Object = new Object();\r\n\tpublic _verticesUpdated:Object = new Object();\r\n\r\n\tpublic get concatenatedBuffer():AttributesBuffer\r\n\t{\r\n\t\treturn this._concatenatedBuffer;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw index data that define the faces.\r\n\t */\r\n\tpublic get indices():Short3Attributes\r\n\t{\r\n\t\treturn this._pIndices;\r\n\t}\r\n\r\n\t/**\r\n\t * The total amount of triangles in the TriangleSubGeometry.\r\n\t */\r\n\tpublic get numElements():number\r\n\t{\r\n\t\treturn this._numElements;\r\n\t}\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._concatenatedBuffer = concatenatedBuffer;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidate():void\r\n\t{\r\n\t\tvar len:number = this._subGeometryVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._subGeometryVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._subGeometryVO.length)\r\n\t\t\tthis._subGeometryVO[0].dispose();\r\n\r\n\t\tthis._pIndices.dispose();\r\n\t\tthis._pIndices = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values instanceof Short3Attributes) {\r\n\t\t\tif (this._pIndices)\r\n\t\t\t\tthis.notifyIndicesDispose();\r\n\r\n\t\t\tthis._pIndices = <Short3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._pIndices)\r\n\t\t\t\tthis._pIndices = new Short3Attributes();\r\n\r\n\t\t\tthis._pIndices.set(values, offset);\r\n\t\t} else if (this._pIndices) {\r\n\t\t\tthis._pIndices.dispose();\r\n\t\t\tthis._pIndices = null;\r\n\r\n\t\t\tthis.notifyIndicesDispose();\r\n\t\t}\r\n\r\n\t\tif (this._pIndices) {\r\n\t\t\tthis._numElements = this._pIndices.count;\r\n\r\n\t\t\tthis.notifyIndicesUpdate();\r\n\t\t} else {\r\n\t\t\tthis._numElements = 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateBounds()\r\n\t{\r\n\t\tif (this.parentGeometry)\r\n\t\t\tthis.parentGeometry.iInvalidateBounds(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The Geometry object that 'owns' this TriangleSubGeometry object.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic parentGeometry:Geometry;\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():SubGeometryBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tprivate notifyIndicesUpdate()\r\n\t{\r\n\t\tif (!this._indicesUpdated)\r\n\t\t\tthis._indicesUpdated = new SubGeometryEvent(SubGeometryEvent.INDICES_UPDATED, this._pIndices);\r\n\r\n\t\tthis.dispatchEvent(this._indicesUpdated);\r\n\t}\r\n\r\n\tprivate notifyIndicesDispose()\r\n\t{\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.INDICES_DISPOSED, this._pIndices));\r\n\t}\r\n\r\n\tpublic notifyVerticesUpdate(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView || this._verticesDirty[attributesView.id])\r\n\t\t\treturn;\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = true;\r\n\r\n\t\tif (!this._verticesUpdated[attributesView.id])\r\n\t\t\tthis._verticesUpdated[attributesView.id] = new SubGeometryEvent(SubGeometryEvent.VERTICES_UPDATED, attributesView);\r\n\r\n\t\tthis.dispatchEvent(this._verticesUpdated[attributesView.id]);\r\n\t}\r\n\r\n\r\n\tpublic notifyVerticesDispose(attributesView:AttributesView)\r\n\t{\r\n\t\tif (!attributesView)\r\n\t\t\treturn;\r\n\r\n\t\tattributesView.dispose();\r\n\r\n\t\tthis.dispatchEvent(new SubGeometryEvent(SubGeometryEvent.VERTICES_DISPOSED, attributesView));\r\n\r\n\t\tthis._verticesDirty[attributesView.id] = null;\r\n\t\tthis._verticesUpdated[attributesView.id] = null;\r\n\t}\r\n\r\n\tpublic _iAddSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.push(subGeometryVO);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iRemoveSubGeometryVO(subGeometryVO:ISubGeometryVO):ISubGeometryVO\r\n\t{\r\n\t\tthis._subGeometryVO.splice(this._subGeometryVO.indexOf(subGeometryVO), 1);\r\n\r\n\t\treturn subGeometryVO;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = SubGeometryBase;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass SubMeshBase extends AssetBase\r\n{\r\n\tpublic _pParentMesh:Mesh;\r\n\tpublic _uvTransform:UVTransform;\r\n\tpublic _colorTransform:ColorTransform;\r\n\r\n\tpublic _iIndex:number = 0;\r\n\r\n\tpublic _material:MaterialBase;\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * The animator object that provides the state for the TriangleSubMesh's animation.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._pParentMesh.animator;\r\n\t}\r\n\r\n\t/**\r\n\t * The material used to render the current TriangleSubMesh. If set to null, its parent Mesh's material will be used instead.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material || this._pParentMesh.material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * The scene transform object that transforms from model to world space.\r\n\t */\r\n\tpublic get sceneTransform():Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.sceneTransform;\r\n\t}\r\n\r\n\t/**\r\n\t * The entity that that initially provided the IRenderable to the render pipeline (ie: the owning Mesh object).\r\n\t */\r\n\tpublic get parentMesh():Mesh\r\n\t{\r\n\t\treturn this._pParentMesh;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform || this._pParentMesh.uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform || this._pParentMesh.globalColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t * Creates a new SubMeshBase object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis.material = null;\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param camera\r\n\t * @returns {away.geom.Matrix3D}\r\n\t */\r\n\tpublic getRenderSceneTransform(camera:Camera):Matrix3D\r\n\t{\r\n\t\treturn this._pParentMesh.getRenderSceneTransform(camera);\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometry()\r\n\t{\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _iGetExplicitMaterial():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n}\r\n\r\nexport = SubMeshBase;",
    "import ColorTransform\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PerspectiveProjection\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * The Transform class provides access to color adjustment properties and two-\r\n * or three-dimensional transformation objects that can be applied to a\r\n * display object. During the transformation, the color or the orientation and\r\n * position of a display object is adjusted(offset) from the current values\r\n * or coordinates to new values or coordinates. The Transform class also\r\n * collects data about color and two-dimensional matrix transformations that\r\n * are applied to a display object and all of its parent objects. You can\r\n * access these combined transformations through the\r\n * <code>concatenatedColorTransform</code> and <code>concatenatedMatrix</code>\r\n * properties.\r\n *\r\n * <p>To apply color transformations: create a ColorTransform object, set the\r\n * color adjustments using the object's methods and properties, and then\r\n * assign the <code>colorTransformation</code> property of the\r\n * <code>transform</code> property of the display object to the new\r\n * ColorTransformation object.</p>\r\n *\r\n * <p>To apply two-dimensional transformations: create a Matrix object, set\r\n * the matrix's two-dimensional transformation, and then assign the\r\n * <code>transform.matrix</code> property of the display object to the new\r\n * Matrix object.</p>\r\n *\r\n * <p>To apply three-dimensional transformations: start with a\r\n * three-dimensional display object. A three-dimensional display object has a\r\n * <code>z</code> property value other than zero. You do not need to create\r\n * the Matrix3D object. For all three-dimensional objects, a Matrix3D object\r\n * is created automatically when you assign a <code>z</code> value to a\r\n * display object. You can access the display object's Matrix3D object through\r\n * the display object's <code>transform</code> property. Using the methods of\r\n * the Matrix3D class, you can add to or modify the existing transformation\r\n * settings. Also, you can create a custom Matrix3D object, set the custom\r\n * Matrix3D object's transformation elements, and then assign the new Matrix3D\r\n * object to the display object using the <code>transform.matrix</code>\r\n * property.</p>\r\n *\r\n * <p>To modify a perspective projection of the stage or root object: use the\r\n * <code>transform.matrix</code> property of the root display object to gain\r\n * access to the PerspectiveProjection object. Or, apply different perspective\r\n * projection properties to a display object by setting the perspective\r\n * projection properties of the display object's parent. The child display\r\n * object inherits the new properties. Specifically, create a\r\n * PerspectiveProjection object and set its properties, then assign the\r\n * PerspectiveProjection object to the <code>perspectiveProjection</code>\r\n * property of the parent display object's <code>transform</code> property.\r\n * The specified projection transformation then applies to all the display\r\n * object's three-dimensional children.</p>\r\n *\r\n * <p>Since both PerspectiveProjection and Matrix3D objects perform\r\n * perspective transformations, do not assign both to a display object at the\r\n * same time. Use the PerspectiveProjection object for focal length and\r\n * projection center changes. For more control over the perspective\r\n * transformation, create a perspective projection Matrix3D object.</p>\r\n */\r\nclass Transform\r\n{\r\n\tprivate _displayObject:DisplayObject;\r\n\tprivate _concatenatedColorTransform:ColorTransform;\r\n\tprivate _concatenatedMatrix:Matrix;\r\n\tprivate _pixelBounds:Rectangle;\r\n\tpublic _position:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A ColorTransform object containing values that universally adjust the\r\n\t * colors in the display object.\r\n\t * \r\n\t * @throws TypeError The colorTransform is null when being set\r\n\t */\r\n\tpublic colorTransform:ColorTransform;\r\n\r\n\t/**\r\n\t * A ColorTransform object representing the combined color transformations\r\n\t * applied to the display object and all of its parent objects, back to the\r\n\t * root level. If different color transformations have been applied at\r\n\t * different levels, all of those transformations are concatenated into one\r\n\t * ColorTransform object for this property.\r\n\t */\r\n\tpublic get concatenatedColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._concatenatedColorTransform; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object representing the combined transformation matrixes of the\r\n\t * display object and all of its parent objects, back to the root level. If\r\n\t * different transformation matrixes have been applied at different levels,\r\n\t * all of those matrixes are concatenated into one matrix for this property.\r\n\t * Also, for resizeable SWF content running in the browser, this property\r\n\t * factors in the difference between stage coordinates and window coordinates\r\n\t * due to window resizing. Thus, the property converts local coordinates to\r\n\t * window coordinates, which may not be the same coordinate space as that of\r\n\t * the Stage.\r\n\t */\r\n\tpublic get concatenatedMatrix():Matrix\r\n\t{\r\n\t\treturn this._concatenatedMatrix; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get downVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get forwardVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getForward(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get leftVector():Vector3D\r\n\t{\r\n\t\tvar director:Vector3D = Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t\tdirector.negate();\r\n\r\n\t\treturn director;\r\n\t}\r\n\r\n\t/**\r\n\t * A Matrix object containing values that alter the scaling, rotation, and\r\n\t * translation of the display object.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t * \r\n\t * @throws TypeError The matrix is null when being set\r\n\t */\r\n\tpublic matrix:Matrix;\r\n\r\n\t/**\r\n\t * Provides access to the Matrix3D object of a three-dimensional display\r\n\t * object. The Matrix3D object represents a transformation matrix that\r\n\t * determines the display object's position and orientation. A Matrix3D\r\n\t * object can also perform perspective projection.\r\n\t *\r\n\t * <p>If the <code>matrix</code> property is set to a value(not\r\n\t * <code>null</code>), the <code>matrix3D</code> property is\r\n\t * <code>null</code>. And if the <code>matrix3D</code> property is set to a\r\n\t * value(not <code>null</code>), the <code>matrix</code> property is\r\n\t * <code>null</code>.</p>\r\n\t */\r\n\tpublic get matrix3D():Matrix3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D;\r\n\t}\r\n\r\n\tpublic set matrix3D(val:Matrix3D)\r\n\t{\r\n\t\tthis._displayObject._iMatrix3D = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides access to the PerspectiveProjection object of a three-dimensional\r\n\t * display object. The PerspectiveProjection object can be used to modify the\r\n\t * perspective transformation of the stage or to assign a perspective\r\n\t * transformation to all the three-dimensional children of a display object.\r\n\t *\r\n\t * <p>Based on the field of view and aspect ratio(dimensions) of the stage,\r\n\t * a default PerspectiveProjection object is assigned to the root object.</p>\r\n\t */\r\n\tpublic perspectiveProjection:PerspectiveProjection;\r\n\r\n\t/**\r\n\t * A Rectangle object that defines the bounding rectangle of the display\r\n\t * object on the stage.\r\n\t */\r\n\tpublic get pixelBounds():Rectangle\r\n\t{\r\n\t\treturn this._pixelBounds;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the position of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get position():Vector3D\r\n\t{\r\n\t\treturn this._displayObject._iMatrix3D.position\r\n\t}\r\n\r\n\tpublic set position(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.x = value.x;\r\n\t\tthis._displayObject.y = value.y;\r\n\t\tthis._displayObject.z = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get rightVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getRight(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the rotation of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get rotation():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.rotationX, this._displayObject.rotationY, this._displayObject.rotationZ);\r\n\t}\r\n\r\n\tpublic set rotation(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.rotationX = value.x;\r\n\t\tthis._displayObject.rotationY = value.y;\r\n\t\tthis._displayObject.rotationZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the scale of the 3d object, relative to the local coordinates of the parent <code>ObjectContainer3D</code>.\r\n\t */\r\n\tpublic get scale():Vector3D\r\n\t{\r\n\t\treturn new Vector3D(this._displayObject.scaleX, this._displayObject.scaleY, this._displayObject.scaleZ);\r\n\t}\r\n\r\n\tpublic set scale(value:Vector3D)\r\n\t{\r\n\t\tthis._displayObject.scaleX = value.x;\r\n\t\tthis._displayObject.scaleY = value.y;\r\n\t\tthis._displayObject.scaleZ = value.z;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get upVector():Vector3D\r\n\t{\r\n\t\treturn Matrix3DUtils.getUp(this._displayObject._iMatrix3D);\r\n\t}\r\n\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis._displayObject = displayObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Matrix3D object, which can transform the space of a specified\r\n\t * display object in relation to the current display object's space. You can\r\n\t * use the <code>getRelativeMatrix3D()</code> method to move one\r\n\t * three-dimensional display object relative to another three-dimensional\r\n\t * display object.\r\n\t * \r\n\t * @param relativeTo The display object relative to which the transformation\r\n\t *                   occurs. To get a Matrix3D object relative to the stage,\r\n\t *                   set the parameter to the <code>root</code> or\r\n\t *                   <code>stage</code> object. To get the world-relative\r\n\t *                   matrix of the display object, set the parameter to a\r\n\t *                   display object that has a perspective transformation\r\n\t *                   applied to it.\r\n\t * @return A Matrix3D object that can be used to transform the space from the\r\n\t *         <code>relativeTo</code> display object to the current display\r\n\t *         object space.\r\n\t */\r\n\tpublic getRelativeMatrix3D(relativeTo:DisplayObject):Matrix3D\r\n\t{\r\n\t\treturn new Matrix3D(); //TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveForward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local z axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveBackward(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Z_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\r\n\tpublic moveLeft(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, -distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local x axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveRight(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.X_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object forwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveUp(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, distance);\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the 3d object backwards along it's local y axis\r\n\t *\r\n\t * @param    distance    The length of the movement\r\n\t */\r\n\tpublic moveDown(distance:number)\r\n\t{\r\n\t\tthis._displayObject.translateLocal(Vector3D.Y_AXIS, -distance);\r\n\t}\r\n}\r\n\r\nexport = Transform;\r\n",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float4Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float1Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float1Attributes\");\r\nimport Short3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\n\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SubGeometryUtils\t\t\t\t= require(\"awayjs-display/lib/utils/SubGeometryUtils\");\r\nimport IPickingCollider\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\n\r\n/**\r\n * @class away.base.TriangleSubGeometry\r\n */\r\nclass TriangleSubGeometry extends SubGeometryBase\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubGeometry]\";\r\n\r\n\tprivate _numVertices:number = 0;\r\n\tprivate _faceNormalsDirty:boolean = true;\r\n\tprivate _faceTangentsDirty:boolean = true;\r\n\r\n\tprivate _positions:Float3Attributes;\r\n\tprivate _normals:Float3Attributes;\r\n\tprivate _tangents:Float3Attributes;\r\n\tprivate _uvs:Float2Attributes;\r\n\tprivate _secondaryUVs:Float2Attributes;\r\n\tprivate _jointIndices:AttributesView;\r\n\tprivate _jointWeights:AttributesView;\r\n\r\n\tprivate _useCondensedIndices:boolean;\r\n\tprivate _condensedIndexLookUp:Array<number>;\r\n\r\n\tprivate _jointsPerVertex:number;\r\n\r\n\tprivate _autoDeriveNormals:boolean = true;\r\n\tprivate _autoDeriveTangents:boolean = true;\r\n\tprivate _autoDeriveUVs:boolean = false;\r\n\r\n\tprivate _faceNormals:Float4Attributes;\r\n\tprivate _faceTangents:Float3Attributes;\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubGeometry.assetType;\r\n\t}\r\n\r\n\r\n\tpublic get numVertices():number\r\n\t{\r\n\t\treturn this._numVertices;\r\n\t}\r\n\r\n\t/**\r\n\t * Offers the option of enabling GPU accelerated animation on skeletons larger than 32 joints\r\n\t * by condensing the number of joint index values required per mesh. Only applicable to\r\n\t * skeleton animations that utilise more than one mesh object. Defaults to false.\r\n\t */\r\n\tpublic get useCondensedIndices():boolean\r\n\t{\r\n\t\treturn this._useCondensedIndices;\r\n\t}\r\n\r\n\tpublic set useCondensedIndices(value:boolean)\r\n\t{\r\n\t\tif (this._useCondensedIndices == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._useCondensedIndices = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointsPerVertex():number\r\n\t{\r\n\t\treturn this._jointsPerVertex;\r\n\t}\r\n\r\n\tpublic set jointsPerVertex(value:number)\r\n\t{\r\n\t\tif (this._jointsPerVertex == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._jointsPerVertex = value;\r\n\r\n\t\tif (this._jointIndices)\r\n\t\t\tthis._jointIndices.dimensions = this._jointsPerVertex;\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tthis._jointWeights.dimensions = this._jointsPerVertex;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether a UV buffer should be automatically generated to contain dummy UV coordinates.\r\n\t * Set to true if a geometry lacks UV data but uses a material that requires it, or leave as false\r\n\t * in cases where UV data is explicitly defined or the material does not require UV data.\r\n\t */\r\n\tpublic get autoDeriveUVs():boolean\r\n\t{\r\n\t\treturn this._autoDeriveUVs;\r\n\t}\r\n\r\n\tpublic set autoDeriveUVs(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveUVs = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex normals should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveNormals():boolean\r\n\t{\r\n\t\treturn this._autoDeriveNormals;\r\n\t}\r\n\r\n\tpublic set autoDeriveNormals(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveNormals == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveNormals = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\t}\r\n\r\n\t/**\r\n\t * True if the vertex tangents should be derived from the geometry, false if the vertex normals are set\r\n\t * explicitly.\r\n\t */\r\n\tpublic get autoDeriveTangents():boolean\r\n\t{\r\n\t\treturn this._autoDeriveTangents;\r\n\t}\r\n\r\n\tpublic set autoDeriveTangents(value:boolean)\r\n\t{\r\n\t\tif (this._autoDeriveTangents == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._autoDeriveTangents = value;\r\n\r\n\t\tif (value)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get positions():Float3Attributes\r\n\t{\r\n\t\treturn this._positions;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get normals():Float3Attributes\r\n\t{\r\n\t\tif (!this._normals || this._verticesDirty[this._normals.id])\r\n\t\t\tthis.setNormals(this._normals);\r\n\r\n\t\treturn this._normals;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get tangents():Float3Attributes\r\n\t{\r\n\t\tif (!this._tangents || this._verticesDirty[this._tangents.id])\r\n\t\t\tthis.setTangents(this._tangents);\r\n\r\n\t\treturn this._tangents;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face normals, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceNormals():Float4Attributes\r\n\t{\r\n\t\tif (this._faceNormalsDirty)\r\n\t\t\tthis.updateFaceNormals();\r\n\r\n\t\treturn this._faceNormals;\r\n\t}\r\n\r\n\t/**\r\n\t * The raw data of the face tangets, in the same order as the faces are listed in the index list.\r\n\t */\r\n\tpublic get faceTangents():Float3Attributes\r\n\t{\r\n\t\tif (this._faceTangentsDirty)\r\n\t\t\tthis.updateFaceTangents();\r\n\r\n\t\treturn this._faceTangents;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvs():Float2Attributes\r\n\t{\r\n\t\tif (!this._uvs || this._verticesDirty[this._uvs.id])\r\n\t\t\tthis.setUVs(this._uvs);\r\n\r\n\t\treturn this._uvs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get secondaryUVs():Float2Attributes\r\n\t{\r\n\t\treturn this._secondaryUVs;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointIndices():AttributesView\r\n\t{\r\n\t\treturn this._jointIndices;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get jointWeights():AttributesView\r\n\t{\r\n\t\treturn this._jointWeights;\r\n\t}\r\n\r\n\tpublic get condensedIndexLookUp():Array<number>\r\n\t{\r\n\t\treturn this._condensedIndexLookUp;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor(concatenatedBuffer:AttributesBuffer = null)\r\n\t{\r\n\t\tsuper(concatenatedBuffer);\r\n\r\n\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t}\r\n\r\n\tpublic getBoundingPositions():Float32Array\r\n\t{\r\n\t\treturn this._positions.get(this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic setPositions(array:Array<number>, offset?:number);\r\n\tpublic setPositions(float32Array:Float32Array, offset?:number);\r\n\tpublic setPositions(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setPositions(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._positions)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float3Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = <Float3Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tthis._positions.set(values, offset);\r\n\t\t} else {\r\n\t\t\tthis.notifyVerticesDispose(this._positions);\r\n\t\t\tthis._positions = new Float3Attributes(this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis._numVertices = this._positions.count;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis.pInvalidateBounds();\r\n\r\n\t\tthis.notifyVerticesUpdate(this._positions);\r\n\r\n\t\tthis._verticesDirty[this._positions.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex normals based on the geometry.\r\n\t */\r\n\tpublic setNormals(array:Array<number>, offset?:number);\r\n\tpublic setNormals(float32Array:Float32Array, offset?:number);\r\n\tpublic setNormals(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setNormals(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveNormals) {\r\n\t\t\tif (values == this._normals)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._normals)\r\n\t\t\t\t\tthis._normals = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._normals.set(values, offset);\r\n\t\t\t} else if (this._normals) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._normals);\r\n\t\t\t\tthis._normals = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._normals = SubGeometryUtils.generateNormals(this._pIndices, this._faceNormals, this._normals, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tthis._verticesDirty[this._normals.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the vertex tangents based on the geometry.\r\n\t */\r\n\tpublic setTangents(array:Array<number>, offset?:number);\r\n\tpublic setTangents(float32Array:Float32Array, offset?:number);\r\n\tpublic setTangents(float3Attributes:Float3Attributes, offset?:number);\r\n\tpublic setTangents(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveTangents) {\r\n\t\t\tif (values == this._tangents)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float3Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = <Float3Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._tangents)\r\n\t\t\t\t\tthis._tangents = new Float3Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._tangents.set(values, offset);\r\n\t\t\t} else if (this._tangents) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._tangents);\r\n\t\t\t\tthis._tangents = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._faceTangentsDirty)\r\n\t\t\t\tthis.updateFaceTangents();\r\n\r\n\t\t\tif (this._faceNormalsDirty)\r\n\t\t\t\tthis.updateFaceNormals();\r\n\r\n\t\t\tthis._tangents = SubGeometryUtils.generateTangents(this._pIndices, this._faceTangents, this._faceNormals, this._tangents, this._concatenatedBuffer);\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis._verticesDirty[this._tangents.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uvs based on the geometry.\r\n\t */\r\n\tpublic setUVs(array:Array<number>, offset?:number);\r\n\tpublic setUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (!this._autoDeriveUVs) {\r\n\t\t\tif (values == this._uvs)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (values instanceof Float2Attributes) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = <Float2Attributes> values;\r\n\t\t\t} else if (values) {\r\n\t\t\t\tif (!this._uvs)\r\n\t\t\t\t\tthis._uvs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\t\tthis._uvs.set(values, offset);\r\n\t\t\t} else if (this._uvs) {\r\n\t\t\t\tthis.notifyVerticesDispose(this._uvs);\r\n\t\t\t\tthis._uvs = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._uvs = SubGeometryUtils.generateUVs(this._pIndices, this._uvs, this._concatenatedBuffer, this._numVertices);\r\n\t\t}\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\r\n\t\tthis._verticesDirty[this._uvs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the secondary uvs based on the geometry.\r\n\t */\r\n\tpublic setSecondaryUVs(array:Array<number>, offset?:number);\r\n\tpublic setSecondaryUVs(float32Array:Float32Array, offset?:number);\r\n\tpublic setSecondaryUVs(float2Attributes:Float2Attributes, offset?:number);\r\n\tpublic setSecondaryUVs(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._secondaryUVs)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof Float2Attributes) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = <Float2Attributes> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._secondaryUVs)\r\n\t\t\t\tthis._secondaryUVs = new Float2Attributes(this._concatenatedBuffer);\r\n\r\n\t\t\tthis._secondaryUVs.set(values, offset);\r\n\t\t} else if (this._secondaryUVs) {\r\n\t\t\tthis.notifyVerticesDispose(this._secondaryUVs);\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._secondaryUVs);\r\n\r\n\t\tthis._verticesDirty[this._secondaryUVs.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint indices\r\n\t */\r\n\tpublic setJointIndices(array:Array<number>, offset?:number);\r\n\tpublic setJointIndices(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointIndices(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointIndices)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointIndices)\r\n\t\t\t\tthis._jointIndices = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tif (this._useCondensedIndices) {\r\n\t\t\t\tvar i:number = 0;\r\n\t\t\t\tvar oldIndex:number;\r\n\t\t\t\tvar newIndex:number = 0;\r\n\t\t\t\tvar dic:Object = new Object();\r\n\r\n\t\t\t\tthis._condensedIndexLookUp = new Array<number>();\r\n\r\n\t\t\t\twhile (i < values.length) {\r\n\t\t\t\t\toldIndex = values[i];\r\n\r\n\t\t\t\t\t// if we encounter a new index, assign it a new condensed index\r\n\t\t\t\t\tif (dic[oldIndex] == undefined) {\r\n\t\t\t\t\t\tdic[oldIndex] = newIndex;\r\n\t\t\t\t\t\tthis._condensedIndexLookUp[newIndex++] = oldIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//reset value to dictionary lookup\r\n\t\t\t\t\tvalues[i++] = dic[oldIndex];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._jointIndices.set(values, offset);\r\n\r\n\t\t} else if (this._jointIndices) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointIndices);\r\n\t\t\tthis._jointIndices = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointIndices);\r\n\r\n\t\tthis._verticesDirty[this._jointIndices.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the joint weights.\r\n\t */\r\n\tpublic setJointWeights(array:Array<number>, offset?:number);\r\n\tpublic setJointWeights(float32Array:Float32Array, offset?:number);\r\n\tpublic setJointWeights(attributesView:AttributesView, offset?:number);\r\n\tpublic setJointWeights(values:any, offset:number = 0)\r\n\t{\r\n\t\tif (values == this._jointWeights)\r\n\t\t\treturn;\r\n\r\n\t\tif (values instanceof AttributesView) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = <AttributesView> values;\r\n\t\t} else if (values) {\r\n\t\t\tif (!this._jointWeights)\r\n\t\t\t\tthis._jointWeights = new AttributesView(Float32Array, this._jointsPerVertex, this._concatenatedBuffer);\r\n\r\n\t\t\tthis._jointWeights.set(values, offset);\r\n\r\n\t\t} else if (this._jointWeights) {\r\n\t\t\tthis.notifyVerticesDispose(this._jointWeights);\r\n\t\t\tthis._jointWeights = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.notifyVerticesUpdate(this._jointWeights);\r\n\r\n\t\tthis._verticesDirty[this._jointWeights.id] = false;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis._positions.dispose();\r\n\t\tthis._positions = null;\r\n\r\n\t\tif (this._normals) {\r\n\t\t\tthis._normals.dispose();\r\n\t\t\tthis._normals = null;\r\n\t\t}\r\n\r\n\t\tif (this._tangents) {\r\n\t\t\tthis._tangents.dispose();\r\n\t\t\tthis._tangents = null;\r\n\t\t}\r\n\r\n\t\tif (this._uvs) {\r\n\t\t\tthis._uvs.dispose();\r\n\t\t\tthis._uvs = null;\r\n\t\t}\r\n\r\n\t\tif (this._secondaryUVs) {\r\n\t\t\tthis._secondaryUVs.dispose();\r\n\t\t\tthis._secondaryUVs = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tthis._jointIndices.dispose();\r\n\t\t\tthis._jointIndices = null;\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights) {\r\n\t\t\tthis._jointWeights.dispose();\r\n\t\t\tthis._jointWeights = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceNormals) {\r\n\t\t\tthis._faceNormals.dispose();\r\n\t\t\tthis._faceNormals = null;\r\n\t\t}\r\n\r\n\t\tif (this._faceTangents) {\r\n\t\t\tthis._faceTangents.dispose();\r\n\t\t\tthis._faceTangents = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the face indices of the TriangleSubGeometry.\r\n\t *\r\n\t * @param indices The face indices to upload.\r\n\t */\r\n\tpublic setIndices(array:Array<number>, offset?:number);\r\n\tpublic setIndices(uint16Array:Uint16Array, offset?:number);\r\n\tpublic setIndices(short3Attributes:Short3Attributes, offset?:number);\r\n\tpublic setIndices(values:any, offset:number = 0)\r\n\t{\r\n\t\tsuper.setIndices(values, offset);\r\n\r\n\t\tthis._faceNormalsDirty = true;\r\n\t\tthis._faceTangentsDirty = true;\r\n\r\n\t\tif (this._autoDeriveNormals)\r\n\t\t\tthis.notifyVerticesUpdate(this._normals);\r\n\r\n\t\tif (this._autoDeriveTangents)\r\n\t\t\tthis.notifyVerticesUpdate(this._tangents);\r\n\r\n\t\tif (this._autoDeriveUVs)\r\n\t\t\tthis.notifyVerticesUpdate(this._uvs);\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the current object\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():TriangleSubGeometry\r\n\t{\r\n\t\tvar clone:TriangleSubGeometry = new TriangleSubGeometry(this._concatenatedBuffer? this._concatenatedBuffer.clone() : null);\r\n\r\n\t\tclone.setIndices(this._pIndices.clone());\r\n\r\n\t\tclone.setPositions(this._positions.clone());\r\n\r\n\t\tclone.setNormals((this._normals && !this._autoDeriveNormals)? this._normals.clone() : null);\r\n\r\n\t\tclone.setUVs((this._uvs && !this._autoDeriveUVs)? this._uvs.clone() : null);\r\n\r\n\t\tclone.setTangents((this._tangents && !this._autoDeriveTangents)? this._tangents.clone() : null);\r\n\r\n\t\tif (this._secondaryUVs)\r\n\t\t\tclone.setSecondaryUVs(this._secondaryUVs.clone());\r\n\r\n\t\tif (this._jointIndices) {\r\n\t\t\tclone.jointsPerVertex = this._jointsPerVertex;\r\n\t\t\tclone.setJointIndices(this._jointIndices.clone());\r\n\t\t}\r\n\r\n\t\tif (this._jointWeights)\r\n\t\t\tclone.setJointWeights(this._jointWeights.clone());\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tpublic scaleUV(scaleU:number = 1, scaleV:number = 1)\r\n\t{\r\n\t\tSubGeometryUtils.scaleUVs(scaleU, scaleV, this.uvs, this.uvs.count);\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry.\r\n\t * @param scale The amount by which to scale.\r\n\t */\r\n\tpublic scale(scale:number)\r\n\t{\r\n\t\tSubGeometryUtils.scale(scale, this.positions, this._numVertices);\r\n\t}\r\n\r\n\tpublic applyTransformation(transform:Matrix3D)\r\n\t{\r\n\t\tSubGeometryUtils.applyTransformation(transform, this.positions, this.normals, this.tangents, this._numVertices);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the tangents for each face.\r\n\t */\r\n\tprivate updateFaceTangents()\r\n\t{\r\n\t\tthis._faceTangents = SubGeometryUtils.generateFaceTangents(this._pIndices, this._positions, this.uvs, this._faceTangents, this._pIndices.count);\r\n\r\n\t\tthis._faceTangentsDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the normals for each face.\r\n\t */\r\n\tprivate updateFaceNormals()\r\n\t{\r\n\t\tthis._faceNormals = SubGeometryUtils.generateFaceNormals(this._pIndices, this._positions, this._faceNormals, this._pIndices.count);\r\n\r\n\t\tthis._faceNormalsDirty = false;\r\n\t}\r\n\r\n\tpublic _iTestCollision(pickingCollider:IPickingCollider, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn pickingCollider.testTriangleCollision(this, material, pickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n}\r\n\r\nexport = TriangleSubGeometry;",
    "import IAssetClass\t\t\t\t= require(\"awayjs-core/lib/library/IAssetClass\");\r\n\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport ISubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport SubMeshBase\t\t\t\t= require(\"awayjs-display/lib/base/SubMeshBase\");\r\nimport SubMeshPool\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * TriangleSubMesh wraps a TriangleSubGeometry as a scene graph instantiation. A TriangleSubMesh is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.TriangleSubMesh\r\n */\r\nclass TriangleSubMesh extends SubMeshBase implements ISubMesh\r\n{\r\n\tpublic static assetType:string = \"[asset TriangleSubMesh]\";\r\n\r\n\tpublic static assetClass:IAssetClass = TriangleSubGeometry;\r\n\r\n\tprivate _subGeometry:TriangleSubGeometry;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TriangleSubMesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t */\r\n\tpublic get subGeometry():TriangleSubGeometry\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new TriangleSubMesh object\r\n\t * @param subGeometry The TriangleSubGeometry object which provides the geometry data for this TriangleSubMesh.\r\n\t * @param parentMesh The Mesh object to which this TriangleSubMesh belongs.\r\n\t * @param material An optional material used to render this TriangleSubMesh.\r\n\t */\r\n\tconstructor(subGeometry:TriangleSubGeometry, parentMesh:Mesh, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pParentMesh = parentMesh;\r\n\t\tthis._subGeometry = subGeometry;\r\n\t\tthis.material = material;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n\r\nexport = TriangleSubMesh;",
    "import Box\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveCubePrefab\t\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveCubePrefab\");\r\n\r\n\r\n/**\r\n * AxisAlignedBoundingBox represents a bounding box volume that has its planes aligned to the local coordinate axes of the bounded object.\r\n * This is useful for most meshes.\r\n */\r\nclass AxisAlignedBoundingBox extends BoundingVolumeBase\r\n{\r\n\tprivate _box:Box;\r\n\tprivate _x:number = 0;\r\n\tprivate _y:number = 0;\r\n\tprivate _z:number = 0;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\tprivate _depth:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _halfExtentsX:number = 0;\r\n\tprivate _halfExtentsY:number = 0;\r\n\tprivate _halfExtentsZ:number = 0;\r\n\tprivate _prefab:PrimitiveCubePrefab;\r\n\r\n\t/**\r\n\t * Creates a new <code>AxisAlignedBoundingBox</code> object.\r\n\t */\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._x = this._y = this._z = 0;\r\n\t\tthis._width = this._height = this._depth = 0;\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._halfExtentsX = this._halfExtentsY = this._halfExtentsZ = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar a:number = plane.a;\r\n\t\t\tvar b:number = plane.b;\r\n\t\t\tvar c:number = plane.c;\r\n\t\t\tvar flippedExtentX:number = a < 0? -this._halfExtentsX : this._halfExtentsX;\r\n\t\t\tvar flippedExtentY:number = b < 0? -this._halfExtentsY : this._halfExtentsY;\r\n\t\t\tvar flippedExtentZ:number = c < 0? -this._halfExtentsZ : this._halfExtentsZ;\r\n\t\t\tvar projDist:number = a*(this._centerX + flippedExtentX) + b*(this._centerY + flippedExtentY) + c*(this._centerZ + flippedExtentZ) - plane.d;\r\n\r\n\t\t\tif (projDist < 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._box.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar centerDistance:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar boundOffset:number = a*this._halfExtentsX + b*this._halfExtentsY + c*this._halfExtentsZ;\r\n\r\n\t\treturn centerDistance > boundOffset? PlaneClassification.FRONT : centerDistance < -boundOffset? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._box = this._pEntity.getBox();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\t\tvar hx:number = this._box.width/2;\r\n\t\tvar hy:number = this._box.height/2;\r\n\t\tvar hz:number = this._box.depth/2;\r\n\t\tvar cx:number = this._box.x + hx;\r\n\t\tvar cy:number = this._box.y + hy;\r\n\t\tvar cz:number = this._box.z + hz;\r\n\t\tvar raw:number[] = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tthis._halfExtentsX = Math.abs(hx*m11 + hy*m12 + hz*m13);\r\n\t\tthis._halfExtentsY = Math.abs(hx*m21 + hy*m22 + hz*m23);\r\n\t\tthis._halfExtentsZ = Math.abs(hx*m31 + hy*m32 + hz*m33);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.width = this._box.width;\r\n\t\t\tthis._prefab.height = this._box.height;\r\n\t\t\tthis._prefab.depth = this._box.depth;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\r\n\t\tthis._width = this._halfExtentsX*2;\r\n\t\tthis._height = this._halfExtentsY*2;\r\n\t\tthis._depth = this._halfExtentsZ*2;\r\n\r\n\t\tthis._x = this._centerX - this._halfExtentsX;\r\n\t\tthis._y = this._centerY - this._halfExtentsY;\r\n\t\tthis._z = this._centerZ - this._halfExtentsZ;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveCubePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = AxisAlignedBoundingBox;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Sphere\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Sphere\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PrimitiveSpherePrefab\t\t= require(\"awayjs-display/lib/prefabs/PrimitiveSpherePrefab\");\r\n\r\nclass BoundingSphere extends BoundingVolumeBase\r\n{\r\n\tprivate _sphere:Sphere;\r\n\tprivate _radius:number = 0;\r\n\tprivate _centerX:number = 0;\r\n\tprivate _centerY:number = 0;\r\n\tprivate _centerZ:number = 0;\r\n\tprivate _prefab:PrimitiveSpherePrefab;\r\n\r\n\tconstructor(entity:IEntity)\r\n\t{\r\n\t\tsuper(entity);\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthis._centerX = this._centerY = this._centerZ = 0;\r\n\t\tthis._radius = 0;\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\tfor (var i:number = 0; i < numPlanes; ++i) {\r\n\t\t\tvar plane:Plane3D = planes[i];\r\n\t\t\tvar flippedExtentX:number = plane.a < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentY:number = plane.b < 0? -this._radius : this._radius;\r\n\t\t\tvar flippedExtentZ:number = plane.c < 0? -this._radius : this._radius;\r\n\t\t\tvar projDist:number = plane.a*( this._centerX + flippedExtentX ) + plane.b*( this._centerY + flippedExtentY) + plane.c*( this._centerZ + flippedExtentZ ) - plane.d;\r\n\t\t\tif (projDist < 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\tif(this._pInvalidated)\r\n\t\t\tthis._pUpdate();\r\n\r\n\t\treturn this._sphere.rayIntersection(position, direction, targetNormal);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tvar a:number = plane.a;\r\n\t\tvar b:number = plane.b;\r\n\t\tvar c:number = plane.c;\r\n\t\tvar dd:number = a*this._centerX + b*this._centerY + c*this._centerZ - plane.d;\r\n\r\n\t\tif (a < 0)\r\n\t\t\ta = -a;\r\n\r\n\t\tif (b < 0)\r\n\t\t\tb = -b;\r\n\r\n\t\tif (c < 0)\r\n\t\t\tc = -c;\r\n\r\n\t\tvar rr:Number = (a + b + c)*this._radius;\r\n\r\n\t\treturn dd > rr? PlaneClassification.FRONT : dd < -rr? PlaneClassification.BACK : PlaneClassification.INTERSECT;\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tsuper._pUpdate();\r\n\r\n\t\tthis._sphere = this._pEntity.getSphere();\r\n\t\tvar matrix:Matrix3D = this._pEntity.sceneTransform;\r\n\r\n\t\tvar cx:number = this._sphere.x;\r\n\t\tvar cy:number = this._sphere.y;\r\n\t\tvar cz:number = this._sphere.z;\r\n\t\tvar r:number = this._sphere.radius;\r\n\r\n\t\tvar raw:Array<number> = new Array<number>(16);\r\n\t\tmatrix.copyRawDataTo(raw);\r\n\r\n\t\tvar m11:number = raw[0], m12:number = raw[4], m13:number = raw[8], m14:number = raw[12];\r\n\t\tvar m21:number = raw[1], m22:number = raw[5], m23:number = raw[9], m24:number = raw[13];\r\n\t\tvar m31:number = raw[2], m32:number = raw[6], m33:number = raw[10], m34:number = raw[14];\r\n\r\n\t\tthis._centerX = cx*m11 + cy*m12 + cz*m13 + m14;\r\n\t\tthis._centerY = cx*m21 + cy*m22 + cz*m23 + m24;\r\n\t\tthis._centerZ = cx*m31 + cy*m32 + cz*m33 + m34;\r\n\r\n\t\tvar rx:number = m11 + m12 + m13;\r\n\t\tvar ry:number = m21 + m22 + m23;\r\n\t\tvar rz:number = m31 + m32 + m33;\r\n\t\tthis._radius = r*Math.sqrt((rx*rx + ry*ry + rz*rz)/3);\r\n\r\n\t\tif (this._prefab) {\r\n\t\t\tthis._prefab.radius = r;\r\n\t\t\tthis._pBoundsPrimitive.x = cx;\r\n\t\t\tthis._pBoundsPrimitive.y = cy;\r\n\t\t\tthis._pBoundsPrimitive.z = cz;\r\n\t\t\tthis._pBoundsPrimitive.transform.matrix3D = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthis._prefab = new PrimitiveSpherePrefab();\r\n\t\tthis._prefab.geometryType = \"lineSubGeometry\";\r\n\r\n\t\treturn <Mesh> this._prefab.getNewObject();\r\n\t}\r\n}\r\n\r\nexport = BoundingSphere;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\n\r\nclass BoundingVolumeBase\r\n{\r\n\tpublic _pEntity:IEntity;\r\n\tpublic _pBoundsPrimitive:Mesh;\r\n\tpublic _pInvalidated:boolean = true;\r\n\r\n\tconstructor(entity)\r\n\t{\r\n\t\tthis._pEntity = entity;\r\n\t}\r\n\r\n\tpublic get boundsPrimitive():IEntity\r\n\t{\r\n\t\tif (this._pBoundsPrimitive == null) {\r\n\t\t\tthis._pBoundsPrimitive = this._pCreateBoundsPrimitive();\r\n\r\n\t\t\tthis._pUpdate();\r\n\t\t}\r\n\r\n\t\treturn this._pBoundsPrimitive;\r\n\t}\r\n\r\n\tpublic nullify()\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic rayIntersection(position:Vector3D, direction:Vector3D, targetNormal:Vector3D):number\r\n\t{\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pUpdate()\r\n\t{\r\n\t\tthis._pInvalidated = false;\r\n\t}\r\n\r\n\tpublic invalidate()\r\n\t{\r\n\t\tthis._pInvalidated = true;\r\n\t}\r\n\r\n\tpublic _pCreateBoundsPrimitive():Mesh\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = BoundingVolumeBase;",
    "/**\r\n *\r\n */\r\nclass BoundsType\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static SPHERE:string = \"sphere\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static AXIS_ALIGNED_BOX:string = \"axisAlignedBox\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static NULL:string = \"null\";\r\n}\r\n\r\nexport = BoundsType;",
    "import PlaneClassification\t\t\t= require(\"awayjs-core/lib/geom/PlaneClassification\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\n\r\n\r\nclass NullBounds extends BoundingVolumeBase\r\n{\r\n\tprivate _alwaysIn:boolean;\r\n\r\n\tconstructor(alwaysIn:boolean = true)\r\n\t{\r\n\t\tsuper(null);\r\n\r\n\t\tthis._alwaysIn = alwaysIn;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():BoundingVolumeBase\r\n\t{\r\n\t\treturn new NullBounds(this._alwaysIn);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn this._alwaysIn;\r\n\t}\r\n\r\n\tpublic classifyToPlane(plane:Plane3D):number\r\n\t{\r\n\t\treturn PlaneClassification.INTERSECT;\r\n\t}\r\n}\r\n\r\nexport = NullBounds;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport RangeError\t\t\t\t\t= require(\"awayjs-core/lib/errors/RangeError\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\n\r\n/**\r\n * The DisplayObjectContainer class is the base class for all objects that can\r\n * serve as display object containers on the display list. The display list\r\n * manages all objects displayed in the Flash runtimes. Use the\r\n * DisplayObjectContainer class to arrange the display objects in the display\r\n * list. Each DisplayObjectContainer object has its own child list for\r\n * organizing the z-order of the objects. The z-order is the front-to-back\r\n * order that determines which object is drawn in front, which is behind, and\r\n * so on.\r\n *\r\n * <p>DisplayObject is an abstract base class; therefore, you cannot call\r\n * DisplayObject directly. Invoking <code>new DisplayObject()</code> throws an\r\n * <code>ArgumentError</code> exception.</p>\r\n * The DisplayObjectContainer class is an abstract base class for all objects\r\n * that can contain child objects. It cannot be instantiated directly; calling\r\n * the <code>new DisplayObjectContainer()</code> constructor throws an\r\n * <code>ArgumentError</code> exception.\r\n *\r\n * <p>For more information, see the \"Display Programming\" chapter of the\r\n * <i>ActionScript 3.0 Developer's Guide</i>.</p>\r\n */\r\nclass DisplayObjectContainer extends DisplayObject implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset DisplayObjectContainer]\";\r\n\r\n\tprivate _mouseChildren:boolean = true;\r\n\tprivate _children:Array<DisplayObject> = new Array<DisplayObject>();\r\n\tpublic _iIsRoot:boolean;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn DisplayObjectContainer.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the children of the object are mouse, or user\r\n\t * input device, enabled. If an object is enabled, a user can interact with\r\n\t * it by using a mouse or user input device. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p>This property is useful when you create a button with an instance of\r\n\t * the Sprite class(instead of using the SimpleButton class). When you use a\r\n\t * Sprite instance to create a button, you can choose to decorate the button\r\n\t * by using the <code>addChild()</code> method to add additional Sprite\r\n\t * instances. This process can cause unexpected behavior with mouse events\r\n\t * because the Sprite instances you add as children can become the target\r\n\t * object of a mouse event when you expect the parent instance to be the\r\n\t * target object. To ensure that the parent instance serves as the target\r\n\t * objects for mouse events, you can set the <code>mouseChildren</code>\r\n\t * property of the parent instance to <code>false</code>.</p>\r\n\t *\r\n\t * <p> No event is dispatched by setting this property. You must use the\r\n\t * <code>addEventListener()</code> method to create interactive\r\n\t * functionality.</p>\r\n\t */\r\n\tpublic get mouseChildren():boolean\r\n\t{\r\n\t\treturn this._mouseChildren;\r\n\t}\r\n\r\n\tpublic set mouseChildren(value:boolean)\r\n\t{\r\n\t\tif (this._mouseChildren == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mouseChildren = value;\r\n\r\n\t\tthis._pUpdateImplicitMouseEnabled(this._pParent? this._pParent.mouseChildren : true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of children of this object.\r\n\t */\r\n\tpublic get numChildren():number /*int*/\r\n\t{\r\n\t\treturn this._children.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the children of the object are tab enabled. Enables or\r\n\t * disables tabbing for the children of the object. The default is\r\n\t * <code>true</code>.\r\n\t *\r\n\t * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with\r\n\t * Flex. Instead, use the\r\n\t * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>\r\n\t *\r\n\t * @throws IllegalOperationError Calling this property of the Stage object\r\n\t *                               throws an exception. The Stage object does\r\n\t *                               not implement this property.\r\n\t */\r\n\tpublic tabChildren:boolean;\r\n\r\n\t/**\r\n\t * Calling the <code>new DisplayObjectContainer()</code> constructor throws\r\n\t * an <code>ArgumentError</code> exception. You <i>can</i>, however, call\r\n\t * constructors for the following subclasses of DisplayObjectContainer:\r\n\t * <ul>\r\n\t *   <li><code>new Loader()</code></li>\r\n\t *   <li><code>new Sprite()</code></li>\r\n\t *   <li><code>new MovieClip()</code></li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added to the front(top) of all other children in\r\n\t * this DisplayObjectContainer instance.(To add a child to a specific index\r\n\t * position, use the <code>addChildAt()</code> method.)\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause\r\n\t * problems with a published SWF file, including security problems and\r\n\t * conflicts with other loaded SWF files. There is only one Stage within a\r\n\t * Flash runtime instance, no matter how many SWF files you load into the\r\n\t * runtime. So, generally, objects should not be added to the Stage,\r\n\t * directly, at all. The only object the Stage should contain is the root\r\n\t * object. Create a DisplayObjectContainer to contain all of the items on the\r\n\t * display list. Then, if necessary, add that DisplayObjectContainer instance\r\n\t * to the Stage.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null.\");\r\n\r\n\t\t//if child already has a parent, remove it.\r\n\t\tif (child._pParent)\r\n\t\t\tchild._pParent.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(this);\r\n\r\n\t\tthis._children.push(child);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a child DisplayObject instance to this DisplayObjectContainer\r\n\t * instance. The child is added at the index position specified. An index of\r\n\t * 0 represents the back(bottom) of the display list for this\r\n\t * DisplayObjectContainer object.\r\n\t *\r\n\t * <p>For example, the following example shows three display objects, labeled\r\n\t * a, b, and c, at index positions 0, 2, and 1, respectively:</p>\r\n\t *\r\n\t * <p>If you add a child object that already has a different display object\r\n\t * container as a parent, the object is removed from the child list of the\r\n\t * other display object container. </p>\r\n\t *\r\n\t * @param child The DisplayObject instance to add as a child of this\r\n\t *              DisplayObjectContainer instance.\r\n\t * @param index The index position to which the child is added. If you\r\n\t *              specify a currently occupied index position, the child object\r\n\t *              that exists at that position and all higher positions are\r\n\t *              moved up one position in the child list.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child is the same as the parent. Also\r\n\t *                       throws if the caller is a child(or grandchild etc.)\r\n\t *                       of the child being added.\r\n\t * @throws RangeError    Throws if the index position does not exist in the\r\n\t *                       child list.\r\n\t * @event added Dispatched when a display object is added to the display\r\n\t *              list.\r\n\t */\r\n\tpublic addChildAt(child:DisplayObject, index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn child;\r\n\t}\r\n\r\n\tpublic addChildren(...childarray:Array<DisplayObject>)\r\n\t{\r\n\t\tvar len:number = childarray.length;\r\n\t\tfor (var i:number = 0; i <  len; i++)\r\n\t\t\tthis.addChild(childarray[i]);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:DisplayObjectContainer = new DisplayObjectContainer();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.partition = this.partition;\r\n\t\tclone.name = name;\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tclone.addChild(this._children[i].clone());\r\n\r\n\t\t// todo: implement for all subtypes\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether the specified display object is a child of the\r\n\t * DisplayObjectContainer instance or the instance itself. The search\r\n\t * includes the entire display list including this DisplayObjectContainer\r\n\t * instance. Grandchildren, great-grandchildren, and so on each return\r\n\t * <code>true</code>.\r\n\t *\r\n\t * @param child The child object to test.\r\n\t * @return <code>true</code> if the <code>child</code> object is a child of\r\n\t *         the DisplayObjectContainer or the container itself; otherwise\r\n\t *         <code>false</code>.\r\n\t */\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._children.indexOf(child) >= 0;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic disposeWithChildren()\r\n\t{\r\n\t\tthis.dispose();\r\n\r\n\t\twhile (this.numChildren > 0)\r\n\t\t\tthis.getChildAt(0).dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object instance that exists at the specified\r\n\t * index.\r\n\t *\r\n\t * @param index The index position of the child object.\r\n\t * @return The child display object at the specified index position.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic getChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\tvar child:DisplayObject = this._children[index];\r\n\r\n\t\tif (child == null)\r\n\t\t\tthrow new RangeError(\"Index does not exist in the child list of the caller\");\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the child display object that exists with the specified name. If\r\n\t * more that one child display object has the specified name, the method\r\n\t * returns the first object in the child list.\r\n\t *\r\n\t * <p>The <code>getChildAt()</code> method is faster than the\r\n\t * <code>getChildByName()</code> method. The <code>getChildAt()</code> method\r\n\t * accesses a child from a cached array, whereas the\r\n\t * <code>getChildByName()</code> method has to traverse a linked list to\r\n\t * access a child.</p>\r\n\t *\r\n\t * @param name The name of the child to return.\r\n\t * @return The child display object with the specified name.\r\n\t */\r\n\tpublic getChildByName(name:string):DisplayObject\r\n\t{\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tif (this._children[i].name == name)\r\n\t\t\t\treturn this._children[i];\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index position of a <code>child</code> DisplayObject instance.\r\n\t *\r\n\t * @param child The DisplayObject instance to identify.\r\n\t * @return The index position of the child display object to identify.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic getChildIndex(child:DisplayObject):number /*int*/\r\n\t{\r\n\t\tvar childIndex:number = this._children.indexOf(child);\r\n\r\n\t\tif (childIndex == -1)\r\n\t\t\tthrow new ArgumentError(\"Child parameter is not a child of the caller\");\r\n\r\n\t\treturn childIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects that lie under the specified point and are\r\n\t * children(or grandchildren, and so on) of this DisplayObjectContainer\r\n\t * instance. Any child objects that are inaccessible for security reasons are\r\n\t * omitted from the returned array. To determine whether this security\r\n\t * restriction affects the returned array, call the\r\n\t * <code>areInaccessibleObjectsUnderPoint()</code> method.\r\n\t *\r\n\t * <p>The <code>point</code> parameter is in the coordinate space of the\r\n\t * Stage, which may differ from the coordinate space of the display object\r\n\t * container(unless the display object container is the Stage). You can use\r\n\t * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>\r\n\t * methods to convert points between these coordinate spaces.</p>\r\n\t *\r\n\t * @param point The point under which to look.\r\n\t * @return An array of objects that lie under the specified point and are\r\n\t *         children(or grandchildren, and so on) of this\r\n\t *         DisplayObjectContainer instance.\r\n\t */\r\n\tpublic getObjectsUnderPoint(point:Point):Array<DisplayObject>\r\n\t{\r\n\t\treturn new Array<DisplayObject>();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified <code>child</code> DisplayObject instance from the\r\n\t * child list of the DisplayObjectContainer instance. The <code>parent</code>\r\n\t * property of the removed child is set to <code>null</code> , and the object\r\n\t * is garbage collected if no other references to the child exist. The index\r\n\t * positions of any display objects above the child in the\r\n\t * DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param child The DisplayObject instance to remove.\r\n\t * @return The DisplayObject instance that you pass in the <code>child</code>\r\n\t *         parameter.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t */\r\n\tpublic removeChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tif (child == null)\r\n\t\t\tthrow new Error(\"Parameter child cannot be null\");\r\n\r\n\t\tthis.removeChildInternal(child);\r\n\r\n\t\tchild.iSetParent(null);\r\n\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child DisplayObject from the specified <code>index</code>\r\n\t * position in the child list of the DisplayObjectContainer. The\r\n\t * <code>parent</code> property of the removed child is set to\r\n\t * <code>null</code>, and the object is garbage collected if no other\r\n\t * references to the child exist. The index positions of any display objects\r\n\t * above the child in the DisplayObjectContainer are decreased by 1.\r\n\t *\r\n\t * <p>The garbage collector reallocates unused memory space. When a variable\r\n\t * or object is no longer actively referenced or stored somewhere, the\r\n\t * garbage collector sweeps through and wipes out the memory space it used to\r\n\t * occupy if no other references to it exist.</p>\r\n\t *\r\n\t * @param index The child index of the DisplayObject to remove.\r\n\t * @return The DisplayObject instance that was removed.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t * @throws SecurityError This child display object belongs to a sandbox to\r\n\t *                       which the calling object does not have access. You\r\n\t *                       can avoid this situation by having the child movie\r\n\t *                       call the <code>Security.allowDomain()</code> method.\r\n\t */\r\n\tpublic removeChildAt(index:number /*int*/):DisplayObject\r\n\t{\r\n\t\treturn this.removeChild(this._children[index]);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all <code>child</code> DisplayObject instances from the child list\r\n\t * of the DisplayObjectContainer instance. The <code>parent</code> property\r\n\t * of the removed children is set to <code>null</code>, and the objects are\r\n\t * garbage collected if no other references to the children exist.\r\n\t *\r\n\t * The garbage collector reallocates unused memory space. When a variable or\r\n\t * object is no longer actively referenced or stored somewhere, the garbage\r\n\t * collector sweeps through and wipes out the memory space it used to occupy\r\n\t * if no other references to it exist.\r\n\t *\r\n\t * @param beginIndex The beginning position. A value smaller than 0 throws a RangeError.\r\n\t * @param endIndex The ending position. A value smaller than 0 throws a RangeError.\r\n\t * @throws RangeError    Throws if the beginIndex or endIndex positions do\r\n\t *                       not exist in the child list.\r\n\t */\r\n\tpublic removeChildren(beginIndex:number /*int*/ = 0, endIndex:number /*int*/ = 2147483647)\r\n\t{\r\n\t\tif (beginIndex < 0)\r\n\t\t\tthrow new RangeError(\"beginIndex is out of range of the child list\");\r\n\r\n\t\tif (endIndex > this._children.length)\r\n\t\t\tthrow new RangeError(\"endIndex is out of range of the child list\");\r\n\r\n\t\tfor(var i:number /*uint*/ = beginIndex; i < endIndex; i++)\r\n\t\t\tthis.removeChild(this._children[i]);\r\n\t}\r\n\r\n\t/**\r\n\t * Changes the position of an existing child in the display object container.\r\n\t * This affects the layering of child objects. For example, the following\r\n\t * example shows three display objects, labeled a, b, and c, at index\r\n\t * positions 0, 1, and 2, respectively:\r\n\t *\r\n\t * <p>When you use the <code>setChildIndex()</code> method and specify an\r\n\t * index position that is already occupied, the only positions that change\r\n\t * are those in between the display object's former and new position. All\r\n\t * others will stay the same. If a child is moved to an index LOWER than its\r\n\t * current index, all children in between will INCREASE by 1 for their index\r\n\t * reference. If a child is moved to an index HIGHER than its current index,\r\n\t * all children in between will DECREASE by 1 for their index reference. For\r\n\t * example, if the display object container in the previous example is named\r\n\t * <code>container</code>, you can swap the position of the display objects\r\n\t * labeled a and b by calling the following code:</p>\r\n\t *\r\n\t * <p>This code results in the following arrangement of objects:</p>\r\n\t *\r\n\t * @param child The child DisplayObject instance for which you want to change\r\n\t *              the index number.\r\n\t * @param index The resulting index number for the <code>child</code> display\r\n\t *              object.\r\n\t * @throws ArgumentError Throws if the child parameter is not a child of this\r\n\t *                       object.\r\n\t * @throws RangeError    Throws if the index does not exist in the child\r\n\t *                       list.\r\n\t */\r\n\tpublic setChildIndex(child:DisplayObject, index:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order (front-to-back order) of the two specified child\r\n\t * objects. All other child objects in the display object container remain in\r\n\t * the same index positions.\r\n\t *\r\n\t * @param child1 The first child object.\r\n\t * @param child2 The second child object.\r\n\t * @throws ArgumentError Throws if either child parameter is not a child of\r\n\t *                       this object.\r\n\t */\r\n\tpublic swapChildren(child1:DisplayObject, child2:DisplayObject)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps the z-order(front-to-back order) of the child objects at the two\r\n\t * specified index positions in the child list. All other child objects in\r\n\t * the display object container remain in the same index positions.\r\n\t *\r\n\t * @param index1 The index position of the first child object.\r\n\t * @param index2 The index position of the second child object.\r\n\t * @throws RangeError If either index does not exist in the child list.\r\n\t */\r\n\tpublic swapChildrenAt(index1:number /*int*/, index2:number /*int*/)\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i].pInvalidateSceneTransform();\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitMouseEnabled(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitMouseEnabled(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitMouseEnabled(this._mouseChildren);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitVisibility(value:boolean)\r\n\t{\r\n\t\tsuper._pUpdateImplicitVisibility(value);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitVisibility(this._pImplicitVisibility);\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateImplicitPartition(value:Partition, scene:Scene)\r\n\t{\r\n\t\tsuper._pUpdateImplicitPartition(value, scene);\r\n\r\n\t\tvar len:number = this._children.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._children[i]._pUpdateImplicitPartition(this._pImplicitPartition, scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t *\r\n\t * @param child\r\n\t */\r\n\tprivate removeChildInternal(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\tthis._children.splice(this.getChildIndex(child), 1);\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\tfor(var i:number = 0; i < this.numChildren; i++)\r\n\t\t{\r\n\t\t\tvar child:DisplayObject = this.getChildAt(i);\r\n\t\t\tvar childHit:boolean = child.hitTestPoint(x,y, shapeFlag);\r\n\t\t\tif(childHit) return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\nexport = DisplayObjectContainer;",
    "import AssetLibraryBundle\t\t\t= require(\"awayjs-core/lib/library/AssetLibraryBundle\");\r\nimport AssetLoader\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoader\");\r\nimport AssetLoaderContext\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderContext\");\r\nimport AssetLoaderToken\t\t\t\t= require(\"awayjs-core/lib/library/AssetLoaderToken\");\r\nimport URLRequest\t\t\t\t\t= require(\"awayjs-core/lib/net/URLRequest\");\r\nimport AssetEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/AssetEvent\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IOErrorEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/IOErrorEvent\");\r\nimport LoaderEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/LoaderEvent\");\r\nimport ParserEvent\t\t\t\t\t= require(\"awayjs-core/lib/events/ParserEvent\");\r\nimport ParserBase\t\t\t\t\t= require(\"awayjs-core/lib/parsers/ParserBase\");\r\n\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LoaderInfo\t\t\t\t\t= require(\"awayjs-display/lib/base/LoaderInfo\");\r\n\r\n/**\r\n * The Loader class is used to load SWF files or image(JPG, PNG, or GIF)\r\n * files. Use the <code>load()</code> method to initiate loading. The loaded\r\n * display object is added as a child of the Loader object.\r\n *\r\n * <p>Use the URLLoader class to load text or binary data.</p>\r\n *\r\n * <p>The Loader class overrides the following methods that it inherits,\r\n * because a Loader object can only have one child display object - the\r\n * display object that it loads. Calling the following methods throws an\r\n * exception: <code>addChild()</code>, <code>addChildAt()</code>,\r\n * <code>removeChild()</code>, <code>removeChildAt()</code>, and\r\n * <code>setChildIndex()</code>. To remove a loaded display object, you must\r\n * remove the <i>Loader</i> object from its parent DisplayObjectContainer\r\n * child array. </p>\r\n *\r\n * <p><b>Note:</b> The ActionScript 2.0 MovieClipLoader and LoadVars classes\r\n * are not used in ActionScript 3.0. The Loader and URLLoader classes replace\r\n * them.</p>\r\n *\r\n * <p>When you use the Loader class, consider the Flash Player and Adobe AIR\r\n * security model: </p>\r\n *\r\n * <ul>\r\n *   <li>You can load content from any accessible source. </li>\r\n *   <li>Loading is not allowed if the calling SWF file is in a network\r\n * sandbox and the file to be loaded is local. </li>\r\n *   <li>If the loaded content is a SWF file written with ActionScript 3.0, it\r\n * cannot be cross-scripted by a SWF file in another security sandbox unless\r\n * that cross-scripting arrangement was approved through a call to the\r\n * <code>System.allowDomain()</code> or the\r\n * <code>System.allowInsecureDomain()</code> method in the loaded content\r\n * file.</li>\r\n *   <li>If the loaded content is an AVM1 SWF file(written using ActionScript\r\n * 1.0 or 2.0), it cannot be cross-scripted by an AVM2 SWF file(written using\r\n * ActionScript 3.0). However, you can communicate between the two SWF files\r\n * by using the LocalConnection class.</li>\r\n *   <li>If the loaded content is an image, its data cannot be accessed by a\r\n * SWF file outside of the security sandbox, unless the domain of that SWF\r\n * file was included in a URL policy file at the origin domain of the\r\n * image.</li>\r\n *   <li>Movie clips in the local-with-file-system sandbox cannot script movie\r\n * clips in the local-with-networking sandbox, and the reverse is also\r\n * prevented. </li>\r\n *   <li>You cannot connect to commonly reserved ports. For a complete list of\r\n * blocked ports, see \"Restricting Networking APIs\" in the <i>ActionScript 3.0\r\n * Developer's Guide</i>. </li>\r\n * </ul>\r\n *\r\n * <p>However, in AIR, content in the <code>application</code> security\r\n * sandbox(content installed with the AIR application) are not restricted by\r\n * these security limitations.</p>\r\n *\r\n * <p>For more information related to security, see the Flash Player Developer\r\n * Center Topic: <a href=\"http://www.adobe.com/go/devnet_security_en\"\r\n * scope=\"external\">Security</a>.</p>\r\n *\r\n * <p>When loading a SWF file from an untrusted source(such as a domain other\r\n * than that of the Loader object's root SWF file), you may want to define a\r\n * mask for the Loader object, to prevent the loaded content(which is a child\r\n * of the Loader object) from drawing to portions of the Stage outside of that\r\n * mask, as shown in the following code:</p>\r\n */\r\nclass Loader extends DisplayObjectContainer\r\n{\r\n\t/**\r\n\t * Dispatched when any asset finishes parsing. Also see specific events for each\r\n\t * individual asset type (meshes, materials et c.)\r\n\t *\r\n\t * @eventType AssetEvent\r\n\t */\r\n\t//[Event(name=\"assetComplete\", type=\"AssetEvent\")]\r\n\r\n\r\n\t/**\r\n\t * Dispatched when a full resource (including dependencies) finishes loading.\r\n\t *\r\n\t * @eventType LoaderEvent\r\n\t */\r\n\t//[Event(name=\"resourceComplete\", type=\"LoaderEvent\")]\r\n\r\n\tprivate _loadingSessions:Array<AssetLoader>;\r\n\tprivate _useAssetLib:boolean;\r\n\tprivate _assetLibId:string;\r\n\tprivate _onResourceCompleteDelegate:Function;\r\n\tprivate _onAssetCompleteDelegate:Function;\r\n\tprivate _onTextureSizeErrorDelegate:(event:AssetEvent) => void;\r\n\tprivate _onLoadErrorDelegate:(event:IOErrorEvent) => boolean;\r\n\tprivate _onParseErrorDelegate:(event:ParserEvent) => boolean;\r\n\r\n\tprivate _content:DisplayObject;\r\n\tprivate _contentLoaderInfo:LoaderInfo;\r\n\r\n\t/**\r\n\t * Contains the root display object of the SWF file or image(JPG, PNG, or\r\n\t * GIF) file that was loaded by using the <code>load()</code> or\r\n\t * <code>loadBytes()</code> methods.\r\n\t *\r\n\t * @throws SecurityError The loaded SWF file or image file belongs to a\r\n\t *                       security sandbox to which you do not have access.\r\n\t *                       For a loaded SWF file, you can avoid this situation\r\n\t *                       by having the file call the\r\n\t *                       <code>Security.allowDomain()</code> method or by\r\n\t *                       having the loading file specify a\r\n\t *                       <code>loaderContext</code> parameter with its\r\n\t *                       <code>securityDomain</code> property set to\r\n\t *                       <code>SecurityDomain.currentDomain</code> when you\r\n\t *                       call the <code>load()</code> or\r\n\t *                       <code>loadBytes()</code> method.\r\n\t */\r\n\tpublic get content():DisplayObject\r\n\t{\r\n\t\treturn this._content;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a LoaderInfo object corresponding to the object being loaded.\r\n\t * LoaderInfo objects are shared between the Loader object and the loaded\r\n\t * content object. The LoaderInfo object supplies loading progress\r\n\t * information and statistics about the loaded file.\r\n\t *\r\n\t * <p>Events related to the load are dispatched by the LoaderInfo object\r\n\t * referenced by the <code>contentLoaderInfo</code> property of the Loader\r\n\t * object. The <code>contentLoaderInfo</code> property is set to a valid\r\n\t * LoaderInfo object, even before the content is loaded, so that you can add\r\n\t * event listeners to the object prior to the load.</p>\r\n\t *\r\n\t * <p>To detect uncaught errors that happen in a loaded SWF, use the\r\n\t * <code>Loader.uncaughtErrorEvents</code> property, not the\r\n\t * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>\r\n\t */\r\n\tpublic get contentLoaderInfo():LoaderInfo\r\n\t{\r\n\t\treturn this._contentLoaderInfo;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Loader object that you can use to load files, such as SWF, JPEG,\r\n\t * GIF, or PNG files. Call the <code>load()</code> method to load the asset\r\n\t * as a child of the Loader instance. You can then add the Loader object to\r\n\t * the display list(for instance, by using the <code>addChild()</code>\r\n\t * method of a DisplayObjectContainer instance). The asset appears on the\r\n\t * Stage as it loads.\r\n\t *\r\n\t * <p>You can also use a Loader instance \"offlist,\" that is without adding it\r\n\t * to a display object container on the display list. In this mode, the\r\n\t * Loader instance might be used to load a SWF file that contains additional\r\n\t * modules of an application. </p>\r\n\t *\r\n\t * <p>To detect when the SWF file is finished loading, you can use the events\r\n\t * of the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object. At that\r\n\t * point, the code in the module SWF file can be executed to initialize and\r\n\t * start the module. In the offlist mode, a Loader instance might also be\r\n\t * used to load a SWF file that contains components or media assets. Again,\r\n\t * you can use the LoaderInfo object event notifications to detect when the\r\n\t * components are finished loading. At that point, the application can start\r\n\t * using the components and media assets in the library of the SWF file by\r\n\t * instantiating the ActionScript 3.0 classes that represent those components\r\n\t * and assets.</p>\r\n\t *\r\n\t * <p>To determine the status of a Loader object, monitor the following\r\n\t * events that the LoaderInfo object associated with the\r\n\t * <code>contentLoaderInfo</code> property of the Loader object:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The <code>open</code> event is dispatched when loading begins.</li>\r\n\t *   <li>The <code>ioError</code> or <code>securityError</code> event is\r\n\t * dispatched if the file cannot be loaded or if an error occured during the\r\n\t * load process. </li>\r\n\t *   <li>The <code>progress</code> event fires continuously while the file is\r\n\t * being loaded.</li>\r\n\t *   <li>The <code>complete</code> event is dispatched when a file completes\r\n\t * downloading, but before the loaded movie clip's methods and properties are\r\n\t * available. </li>\r\n\t *   <li>The <code>init</code> event is dispatched after the properties and\r\n\t * methods of the loaded SWF file are accessible, so you can begin\r\n\t * manipulating the loaded SWF file. This event is dispatched before the\r\n\t * <code>complete</code> handler. In streaming SWF files, the\r\n\t * <code>init</code> event can occur significantly earlier than the\r\n\t * <code>complete</code> event. For most purposes, use the <code>init</code>\r\n\t * handler.</li>\r\n\t * </ul>\r\n\t */\r\n\tconstructor(useAssetLibrary:boolean = true, assetLibraryId:string = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._loadingSessions = new Array<AssetLoader>();\r\n\t\tthis._useAssetLib = useAssetLibrary;\r\n\t\tthis._assetLibId = assetLibraryId;\r\n\r\n\t\tthis._onResourceCompleteDelegate = (event:LoaderEvent) => this.onResourceComplete(event);\r\n\t\tthis._onAssetCompleteDelegate = (event:AssetEvent) => this.onAssetComplete(event);\r\n\t\tthis._onTextureSizeErrorDelegate = (event:AssetEvent) => this.onTextureSizeError(event);\r\n\t\tthis._onLoadErrorDelegate = (event:IOErrorEvent) => this.onLoadError(event);\r\n\t\tthis._onParseErrorDelegate = (event:ParserEvent) => this.onParseError(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels a <code>load()</code> method operation that is currently in\r\n\t * progress for the Loader instance.\r\n\t *\r\n\t */\r\n\tpublic close()\r\n\t{\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\tlib.stopAllLoadingSessions();\r\n\t\t\tthis._loadingSessions = null;\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar i:number /*int*/;\r\n\t\tvar length:number /*int*/ = this._loadingSessions.length;\r\n\t\tfor (i = 0; i < length; i++) {\r\n\t\t\tthis.removeListeners(this._loadingSessions[i]);\r\n\t\t\tthis._loadingSessions[i].stop();\r\n\t\t\tthis._loadingSessions[i] = null;\r\n\t\t}\r\n\t\tthis._loadingSessions = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an\r\n\t * object that is a child of this Loader object. If you load an animated GIF\r\n\t * file, only the first frame is displayed. As the Loader object can contain\r\n\t * only a single child, issuing a subsequent <code>load()</code> request\r\n\t * terminates the previous request, if still pending, and commences a new\r\n\t * load.\r\n\t *\r\n\t * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a\r\n\t * loaded image is 8,191 pixels in width or height, and the total number of\r\n\t * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191\r\n\t * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and\r\n\t * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height\r\n\t * and 2,880 pixels in width.</p>\r\n\t *\r\n\t * <p>A SWF file or image loaded into a Loader object inherits the position,\r\n\t * rotation, and scale properties of the parent display objects of the Loader\r\n\t * object. </p>\r\n\t *\r\n\t * <p>Use the <code>unload()</code> method to remove movies or images loaded\r\n\t * with this method, or to cancel a load operation that is in progress.</p>\r\n\t *\r\n\t * <p>You can prevent a SWF file from using this method by setting the\r\n\t * <code>allowNetworking</code> parameter of the the <code>object</code> and\r\n\t * <code>embed</code> tags in the HTML page that contains the SWF\r\n\t * content.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for\r\n\t * example \"multipart/form-data\") that contains an upload(indicated by a\r\n\t * \"filename\" parameter in a \"content-disposition\" header within the POST\r\n\t * body), the POST operation is subject to the security rules applied to\r\n\t * uploads:</p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The POST operation must be performed in response to a user-initiated\r\n\t * action, such as a mouse click or key press.</li>\r\n\t *   <li>If the POST operation is cross-domain(the POST target is not on the\r\n\t * same server as the SWF file that is sending the POST request), the target\r\n\t * server must provide a URL policy file that permits cross-domain\r\n\t * access.</li>\r\n\t * </ul>\r\n\t *\r\n\t * <p>Also, for any multipart Content-Type, the syntax must be valid\r\n\t * (according to the RFC2046 standard). If the syntax appears to be invalid,\r\n\t * the POST operation is subject to the security rules applied to\r\n\t * uploads.</p>\r\n\t *\r\n\t * <p>For more information related to security, see the Flash Player\r\n\t * Developer Center Topic: <a\r\n\t * href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t * scope=\"external\">Security</a>.</p>\r\n\t *\r\n\t * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG\r\n\t *                file to be loaded. A relative path must be relative to the\r\n\t *                main SWF file. Absolute URLs must include the protocol\r\n\t *                reference, such as http:// or file:///. Filenames cannot\r\n\t *                include disk drive specifications.\r\n\t * @param context A LoaderContext object, which has properties that define\r\n\t *                the following:\r\n\t *                <ul>\r\n\t *                  <li>Whether or not to check for the existence of a policy\r\n\t *                file upon loading the object</li>\r\n\t *                  <li>The ApplicationDomain for the loaded object</li>\r\n\t *                  <li>The SecurityDomain for the loaded object</li>\r\n\t *                  <li>The ImageDecodingPolicy for the loaded image\r\n\t *                object</li>\r\n\t *                </ul>\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the loaded content remains in\r\n\t *                its own security domain.</p>\r\n\t *\r\n\t *                <p>For complete details, see the description of the\r\n\t *                properties in the <a\r\n\t *                href=\"../system/LoaderContext.html\">LoaderContext</a>\r\n\t *                class.</p>\r\n\t * @param ns      An optional namespace string under which the file is to be\r\n\t *                loaded, allowing the differentiation of two resources with\r\n\t *                identical assets.\r\n\t * @param parser  An optional parser object for translating the loaded data\r\n\t *                into a usable resource. If not provided, AssetLoader will\r\n\t *                attempt to auto-detect the file type.\r\n\t * @throws IOError               The <code>digest</code> property of the\r\n\t *                               <code>request</code> object is not\r\n\t *                               <code>null</code>. You should only set the\r\n\t *                               <code>digest</code> property of a URLRequest\r\n\t *                               object when calling the\r\n\t *                               <code>URLLoader.load()</code> method when\r\n\t *                               loading a SWZ file(an Adobe platform\r\n\t *                               component).\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         The value of\r\n\t *                               <code>LoaderContext.securityDomain</code>\r\n\t *                               must be either <code>null</code> or\r\n\t *                               <code>SecurityDomain.currentDomain</code>.\r\n\t *                               This reflects the fact that you can only\r\n\t *                               place the loaded media in its natural\r\n\t *                               security sandbox or your own(the latter\r\n\t *                               requires a policy file).\r\n\t * @throws SecurityError         Local SWF files may not set\r\n\t *                               LoaderContext.securityDomain to anything\r\n\t *                               other than <code>null</code>. It is not\r\n\t *                               permitted to import non-local media into a\r\n\t *                               local sandbox, or to place other local media\r\n\t *                               in anything other than its natural sandbox.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @throws SecurityError         If the <code>applicationDomain</code> or\r\n\t *                               <code>securityDomain</code> properties of\r\n\t *                               the <code>context</code> parameter are from\r\n\t *                               a disallowed domain.\r\n\t * @throws SecurityError         If a local SWF file is attempting to use the\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the file has completed loading. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a network request is made over HTTP and\r\n\t *                      Flash Player can detect the HTTP status code.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      SWF file are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when an input or output error occurs that\r\n\t *                      causes a load operation to fail.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the loading operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is received while load operation\r\n\t *                      progresses.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if a SWF file in the local-with-filesystem\r\n\t *                      sandbox attempts to load content in the\r\n\t *                      local-with-networking sandbox, or vice versa.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic load(request:URLRequest, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.load(request, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.load(request, context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads from binary data stored in a ByteArray object.\r\n\t *\r\n\t * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for\r\n\t * the \"init\" event before accessing the properties of a loaded object.</p>\r\n\t *\r\n\t * <p>When you use this method, consider the Flash Player security model,\r\n\t * which is described in the Loader class description. </p>\r\n\t *\r\n\t * @param bytes   A ByteArray object. The contents of the ByteArray can be\r\n\t *                any of the file formats supported by the Loader class: SWF,\r\n\t *                GIF, JPEG, or PNG.\r\n\t * @param context A LoaderContext object. Only the\r\n\t *                <code>applicationDomain</code> property of the\r\n\t *                LoaderContext object applies; the\r\n\t *                <code>checkPolicyFile</code> and\r\n\t *                <code>securityDomain</code> properties of the LoaderContext\r\n\t *                object do not apply.\r\n\t *\r\n\t *                <p>If the <code>context</code> parameter is not specified\r\n\t *                or refers to a null object, the content is loaded into the\r\n\t *                current security domain -  a process referred to as \"import\r\n\t *                loading\" in Flash Player security documentation.\r\n\t *                Specifically, if the loading SWF file trusts the remote SWF\r\n\t *                by incorporating the remote SWF into its code, then the\r\n\t *                loading SWF can import it directly into its own security\r\n\t *                domain.</p>\r\n\t *\r\n\t *                <p>For more information related to security, see the Flash\r\n\t *                Player Developer Center Topic: <a\r\n\t *                href=\"http://www.adobe.com/go/devnet_security_en\"\r\n\t *                scope=\"external\">Security</a>.</p>\r\n\t * @throws ArgumentError         If the <code>length</code> property of the\r\n\t *                               ByteArray object is not greater than 0.\r\n\t * @throws IllegalOperationError If the <code>checkPolicyFile</code> or\r\n\t *                               <code>securityDomain</code> property of the\r\n\t *                               <code>context</code> parameter are non-null.\r\n\t * @throws IllegalOperationError If the <code>requestedContentParent</code>\r\n\t *                               property of the <code>context</code>\r\n\t *                               parameter is a <code>Loader</code>.\r\n\t * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>\r\n\t *                               parameter is set to non-null and has some\r\n\t *                               values which are not Strings.\r\n\t * @throws SecurityError         If the provided\r\n\t *                               <code>applicationDomain</code> property of\r\n\t *                               the <code>context</code> property is from a\r\n\t *                               disallowed domain.\r\n\t * @throws SecurityError         You cannot connect to commonly reserved\r\n\t *                               ports. For a complete list of blocked ports,\r\n\t *                               see \"Restricting Networking APIs\" in the\r\n\t *                               <i>ActionScript 3.0 Developer's Guide</i>.\r\n\t * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and it is not possible to\r\n\t *                      add the loaded content as a child to the specified\r\n\t *                      DisplayObjectContainer. This could happen if the\r\n\t *                      loaded content is a\r\n\t *                      <code>flash.display.AVM1Movie</code> or if the\r\n\t *                      <code>addChild()</code> call to the\r\n\t *                      requestedContentParent throws an error.\r\n\t * @event complete      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation is complete. The\r\n\t *                      <code>complete</code> event is always dispatched\r\n\t *                      after the <code>init</code> event.\r\n\t * @event init          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the properties and methods of the loaded\r\n\t *                      data are accessible. The <code>init</code> event\r\n\t *                      always precedes the <code>complete</code> event.\r\n\t * @event ioError       Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the runtime cannot parse the data in the\r\n\t *                      byte array.\r\n\t * @event open          Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when the operation starts.\r\n\t * @event progress      Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object as data is transfered in memory.\r\n\t * @event securityError Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object if the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      property has been specified and the security sandbox\r\n\t *                      of the\r\n\t *                      <code>LoaderContext.requestedContentParent</code>\r\n\t *                      does not have access to the loaded SWF.\r\n\t * @event unload        Dispatched by the <code>contentLoaderInfo</code>\r\n\t *                      object when a loaded object is removed.\r\n\t */\r\n\tpublic loadData(data:any, context:AssetLoaderContext = null, ns:string = null, parser:ParserBase = null):AssetLoaderToken\r\n\t{\r\n\t\tvar token:AssetLoaderToken;\r\n\r\n\t\tif (this._useAssetLib) {\r\n\t\t\tvar lib:AssetLibraryBundle;\r\n\t\t\tlib = AssetLibraryBundle.getInstance(this._assetLibId);\r\n\t\t\ttoken = lib.loadData(data, context, ns, parser);\r\n\t\t} else {\r\n\t\t\tvar loader:AssetLoader = new AssetLoader();\r\n\t\t\tthis._loadingSessions.push(loader);\r\n\t\t\ttoken = loader.loadData(data, '', context, ns, parser);\r\n\t\t}\r\n\r\n\t\ttoken.addEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.TEXTURE_SIZE_ERROR, this._onTextureSizeErrorDelegate);\r\n\t\ttoken.addEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\r\n\t\t// Error are handled separately (see documentation for addErrorHandler)\r\n\t\ttoken._iLoader._iAddErrorHandler(this._onLoadErrorDelegate);\r\n\t\ttoken._iLoader._iAddParseErrorHandler(this._onParseErrorDelegate);\r\n\r\n\t\treturn token;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a child of this Loader object that was loaded by using the\r\n\t * <code>load()</code> method. The <code>property</code> of the associated\r\n\t * LoaderInfo object is reset to <code>null</code>. The child is not\r\n\t * necessarily destroyed because other objects might have references to it;\r\n\t * however, it is no longer a child of the Loader object.\r\n\t *\r\n\t * <p>As a best practice, before you unload a child SWF file, you should\r\n\t * explicitly close any streams in the child SWF file's objects, such as\r\n\t * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,\r\n\t * audio in the child SWF file might continue to play, even though the child\r\n\t * SWF file was unloaded. To close streams in the child SWF file, add an\r\n\t * event listener to the child that listens for the <code>unload</code>\r\n\t * event. When the parent calls <code>Loader.unload()</code>, the\r\n\t * <code>unload</code> event is dispatched to the child. The following code\r\n\t * shows how you might do this:</p>\r\n\t * <pre xml:space=\"preserve\"> public closeAllStreams(evt:Event) {\r\n\t * myNetStream.close(); mySound.close(); myNetConnection.close();\r\n\t * myLocalConnection.close(); }\r\n\t * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,\r\n\t * closeAllStreams);</pre>\r\n\t *\r\n\t */\r\n\tpublic unload()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a specific parser.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClass The parser class to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParser(parserClass:Object)\r\n\t{\r\n\t\tAssetLoader.enableParser(parserClass);\r\n\t}\r\n\r\n\t/**\r\n\t * Enables a list of parsers.\r\n\t * When no specific parser is set for a loading/parsing opperation,\r\n\t * loader3d can autoselect the correct parser to use.\r\n\t * A parser must have been enabled, to be considered when autoselecting the parser.\r\n\t *\r\n\t * @param parserClasses A Vector of parser classes to enable.\r\n\t * @see away.parsers.Parsers\r\n\t */\r\n\tpublic static enableParsers(parserClasses:Array<Object>)\r\n\t{\r\n\t\tAssetLoader.enableParsers(parserClasses);\r\n\t}\r\n\r\n\r\n\tprivate removeListeners(dispatcher:EventDispatcher)\r\n\t{\r\n\t\tdispatcher.removeEventListener(LoaderEvent.RESOURCE_COMPLETE, this._onResourceCompleteDelegate);\r\n\t\tdispatcher.removeEventListener(AssetEvent.ASSET_COMPLETE, this._onAssetCompleteDelegate);\r\n\t}\r\n\r\n\tprivate onAssetComplete(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when an error occurs during loading\r\n\t */\r\n\tprivate onLoadError(event:IOErrorEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(IOErrorEvent.IO_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a an error occurs during parsing\r\n\t */\r\n\tprivate onParseError(event:ParserEvent):boolean\r\n\t{\r\n\t\tif (this.hasEventListener(ParserEvent.PARSE_ERROR)) {\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextureSizeError(event:AssetEvent)\r\n\t{\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the resource and all of its dependencies was retrieved.\r\n\t */\r\n\tprivate onResourceComplete(event:LoaderEvent)\r\n\t{\r\n\t\tthis._content = <DisplayObject> event.content;\r\n\r\n\t\tif (this._content)\r\n\t\t\tthis.addChild(this._content);\r\n\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n}\r\n\r\nexport = Loader;",
    "import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\nclass Scene extends EventDispatcher\r\n{\r\n\tprivate _expandedPartitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partitions:Array<Partition> = new Array<Partition>();\r\n\tprivate _partition:Partition;\r\n\r\n\tpublic _iSceneGraphRoot:DisplayObjectContainer;\r\n\tpublic _iCollectionMark = 0;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._partition = new Partition(new NodeBase());\r\n\r\n\t\tthis._iSceneGraphRoot = new DisplayObjectContainer();\r\n\r\n\t\tthis._iSceneGraphRoot._iSetScene(this);\r\n\t\tthis._iSceneGraphRoot._iIsRoot = true;\r\n\t\tthis._iSceneGraphRoot.partition = this._partition;\r\n\t}\r\n\r\n\tpublic traversePartitions(traverser:CollectorBase)\r\n\t{\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = this._partitions.length;\r\n\r\n\t\ttraverser.scene = this;\r\n\r\n\t\tthis._iCollectionMark++;\r\n\r\n\t\twhile (i < len)\r\n\t\t\tthis._partitions[i++].traverse(traverser);\r\n\t}\r\n\r\n\tpublic get partition():Partition\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.partition;\r\n\t}\r\n\r\n\tpublic set partition(value:Partition)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.partition = value;\r\n\r\n\t\tthis.dispatchEvent(new SceneEvent(SceneEvent.PARTITION_CHANGED, this._iSceneGraphRoot));\r\n\t}\r\n\r\n\tpublic contains(child:DisplayObject):boolean\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.contains(child);\r\n\t}\r\n\r\n\tpublic addChild(child:DisplayObject):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.addChild(child);\r\n\t}\r\n\r\n\tpublic removeChild(child:DisplayObject)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChild(child);\r\n\t}\r\n\r\n\tpublic removeChildAt(index:number)\r\n\t{\r\n\t\tthis._iSceneGraphRoot.removeChildAt(index);\r\n\t}\r\n\r\n\r\n\tpublic getChildAt(index:number):DisplayObject\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.getChildAt(index);\r\n\t}\r\n\r\n\tpublic get numChildren():number\r\n\t{\r\n\t\treturn this._iSceneGraphRoot.numChildren;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.push(partition);\r\n\r\n\t\t//ensure duplicates are not found in partitions array\r\n\t\tif (this._partitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.push(partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPartition(partition:Partition)\r\n\t{\r\n\t\tthis._expandedPartitions.splice(this._expandedPartitions.indexOf(partition), 1);\r\n\r\n\t\t//if no more partition references found, remove from partitions array\r\n\t\tif (this._expandedPartitions.indexOf(partition) == -1)\r\n\t\t\tthis._partitions.splice(this._partitions.indexOf(partition), 1);\r\n\t}\r\n}\r\n\r\nexport = Scene;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport RaycastPicker\t\t\t\t= require(\"awayjs-display/lib/pick/RaycastPicker\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\nimport SceneEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/SceneEvent\");\r\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\r\nimport MouseManager\t\t\t\t\t= require(\"awayjs-display/lib/managers/MouseManager\");\r\n\r\nclass View\r\n{\r\n\r\n\t/*\r\n\t *************************************************************************************************************************\r\n\t * Development Notes\r\n\t *************************************************************************************************************************\r\n\t *\r\n\t * ShareContext     - this is not being used at the moment integration with other frameworks is not yet implemented or tested\r\n\t *                    and ( _localPos / _globalPos ) position of viewport are the same for the moment\r\n\t *\r\n\t * Background\r\n\t *                  - this is currently not being included in our tests and is currently disabled\r\n\t *\r\n\t **************************************************************************************************************************\r\n\t */\r\n\r\n\t// Protected\r\n\tpublic _pScene:Scene;\r\n\tpublic _pCamera:Camera;\r\n\tpublic _pEntityCollector:CollectorBase;\r\n\tpublic _pRenderer:IRenderer;\r\n\r\n\t// Private\r\n\tprivate _aspectRatio:number;\r\n\tprivate _width:number = 0;\r\n\tprivate _height:number = 0;\r\n\r\n\tprivate _time:number = 0;\r\n\tprivate _deltaTime:number = 0;\r\n\tprivate _backgroundColor:number = 0x000000;\r\n\tprivate _backgroundAlpha:number = 1;\r\n\r\n\tprivate _viewportDirty:boolean = true;\r\n\tprivate _scissorDirty:boolean = true;\r\n\r\n\tprivate _onScenePartitionChangedDelegate:(event:SceneEvent) => void;\r\n\tprivate _onProjectionChangedDelegate:(event:CameraEvent) => void;\r\n\tprivate _onViewportUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _onScissorUpdatedDelegate:(event:RendererEvent) => void;\r\n\tprivate _mouseManager:MouseManager;\r\n\tprivate _mousePicker:IPicker = new RaycastPicker();\r\n\r\n\tprivate _htmlElement:HTMLDivElement;\r\n\tprivate _shareContext:boolean;\r\n\tpublic _pMouseX:number;\r\n\tpublic _pMouseY:number;\r\n\r\n\t/*\r\n\t ***********************************************************************\r\n\t * Disabled / Not yet implemented\r\n\t ***********************************************************************\r\n\t *\r\n\t * private _background:away.textures.Texture2DBase;\r\n\t *\r\n\t * public _pTouch3DManager:away.managers.Touch3DManager;\r\n\t *\r\n\t */\r\n\tconstructor(renderer:IRenderer, scene:Scene = null, camera:Camera = null)\r\n\t{\r\n\t\tthis._onScenePartitionChangedDelegate = (event:SceneEvent) => this.onScenePartitionChanged(event);\r\n\t\tthis._onProjectionChangedDelegate = (event:CameraEvent) => this.onProjectionChanged(event);\r\n\t\tthis._onViewportUpdatedDelegate = (event:RendererEvent) => this.onViewportUpdated(event);\r\n\t\tthis._onScissorUpdatedDelegate = (event:RendererEvent) => this.onScissorUpdated(event);\r\n\r\n\t\tthis.scene = scene || new Scene();\r\n\t\tthis.camera = camera || new Camera();\r\n\t\tthis.renderer = renderer;\r\n\r\n\t\t//make sure document border is zero\r\n\t\tdocument.body.style.margin = \"0px\";\r\n\r\n\t\tthis._htmlElement = document.createElement(\"div\");\r\n\t\tthis._htmlElement.style.position = \"absolute\";\r\n\r\n\t\tdocument.body.appendChild(this._htmlElement);\r\n\r\n\t\tthis._mouseManager = MouseManager.getInstance();\r\n\t\tthis._mouseManager.registerView(this);\r\n\r\n//\t\t\tif (this._shareContext)\r\n//\t\t\t\tthis._mouse3DManager.addViewLayer(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param e\r\n\t */\r\n\tprivate onScenePartitionChanged(event:SceneEvent)\r\n\t{\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\tpublic layeredView:boolean; //TODO: something to enable this correctly\r\n\r\n\tpublic get mouseX():number\r\n\t{\r\n\t\treturn this._pMouseX;\r\n\t}\r\n\r\n\tpublic get mouseY():number\r\n\t{\r\n\t\treturn this._pMouseY;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get htmlElement():HTMLDivElement\r\n\t{\r\n\t\treturn this._htmlElement;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get renderer():IRenderer\r\n\t{\r\n\t\treturn this._pRenderer;\r\n\t}\r\n\r\n\tpublic set renderer(value:IRenderer)\r\n\t{\r\n\t\tif (this._pRenderer == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pRenderer) {\r\n\t\t\tthis._pRenderer.dispose();\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\t\tthis._pRenderer.removeEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\t\t}\r\n\r\n\t\tthis._pRenderer = value;\r\n\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\r\n\t\tthis._pRenderer.addEventListener(RendererEvent.SCISSOR_UPDATED, this._onScissorUpdatedDelegate);\r\n\r\n\t\t//reset entity collector\r\n\t\tthis._pEntityCollector = this._pRenderer._iCreateEntityCollector();\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\t//reset back buffer\r\n\t\tthis._pRenderer._iBackgroundR = ((this._backgroundColor >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((this._backgroundColor >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (this._backgroundColor & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha;\r\n\t\tthis._pRenderer.width = this._width;\r\n\t\tthis._pRenderer.height = this._height;\r\n\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get shareContext():boolean\r\n\t{\r\n\t\treturn this._shareContext;\r\n\t}\r\n\r\n\tpublic set shareContext(value:boolean)\r\n\t{\r\n\t\tif (this._shareContext == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._shareContext = value;\r\n\r\n\t\tif (this._pRenderer)\r\n\t\t\tthis._pRenderer.shareContext = this._shareContext;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get backgroundColor():number\r\n\t{\r\n\t\treturn this._backgroundColor;\r\n\t}\r\n\r\n\tpublic set backgroundColor(value:number)\r\n\t{\r\n\t\tif (this._backgroundColor == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._backgroundColor = value;\r\n\r\n\t\tthis._pRenderer._iBackgroundR = ((value >> 16) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundG = ((value >> 8) & 0xff)/0xff;\r\n\t\tthis._pRenderer._iBackgroundB = (value & 0xff)/0xff;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get backgroundAlpha():number\r\n\t{\r\n\t\treturn this._backgroundAlpha;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set backgroundAlpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._backgroundAlpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer._iBackgroundAlpha = this._backgroundAlpha = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Camera3D}\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\t/**\r\n\t * Set camera that's used to render the scene for this viewport\r\n\t */\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tif (this._pCamera == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pCamera.removeEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\r\n\t\tthis._pCamera = value;\r\n\r\n\t\tif (this._pEntityCollector)\r\n\t\t\tthis._pEntityCollector.camera = this._pCamera;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\r\n\t\tthis._pCamera.addEventListener(CameraEvent.PROJECTION_CHANGED, this._onProjectionChangedDelegate);\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {away.containers.Scene3D}\r\n\t */\r\n\tpublic get scene():Scene\r\n\t{\r\n\t\treturn this._pScene;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the scene that's used to render for this viewport\r\n\t */\r\n\tpublic set scene(value:Scene)\r\n\t{\r\n\t\tif (this._pScene == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pScene)\r\n\t\t\tthis._pScene.removeEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tthis._pScene = value;\r\n\r\n\t\tthis._pScene.addEventListener(SceneEvent.PARTITION_CHANGED, this._onScenePartitionChangedDelegate);\r\n\r\n\t\tif (this._pCamera)\r\n\t\t\tthis._pScene.partition._iRegisterCamera(this._pCamera);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get deltaTime():number\r\n\t{\r\n\t\treturn this._deltaTime;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tif (this._width == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._width = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.width = value;\r\n\t\tthis._htmlElement.style.width = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tif (this._height == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._height = value;\r\n\t\tthis._aspectRatio = this._width/this._height;\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\t\tthis._pRenderer.height = value;\r\n\t\tthis._htmlElement.style.height = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get mousePicker():IPicker\r\n\t{\r\n\t\treturn this._mousePicker;\r\n\t}\r\n\r\n\tpublic set mousePicker(value:IPicker)\r\n\t{\r\n\t\tif (this._mousePicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (value == null)\r\n\t\t\tthis._mousePicker = new RaycastPicker();\r\n\t\telse\r\n\t\t\tthis._mousePicker = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get x():number\r\n\t{\r\n\t\treturn this._pRenderer.x;\r\n\t}\r\n\r\n\tpublic set x(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.x == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.x == value;\r\n\t\tthis._htmlElement.style.left = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get y():number\r\n\t{\r\n\t\treturn this._pRenderer.y;\r\n\t}\r\n\r\n\tpublic set y(value:number)\r\n\t{\r\n\t\tif (this._pRenderer.y == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pRenderer.y == value;\r\n\t\tthis._htmlElement.style.top = value + \"px\";\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get visible():boolean\r\n\t{\r\n\t\treturn (this._htmlElement.style.visibility == \"visible\");\r\n\t}\r\n\r\n\tpublic set visible(value:boolean)\r\n\t{\r\n\t\tthis._htmlElement.style.visibility = value? \"visible\" : \"hidden\";\r\n\t\t//TODO transfer visible property to associated context (if one exists)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tpublic get renderedFacesCount():number\r\n\t{\r\n\t\treturn 0; //TODO\r\n\t\t//return this._pEntityCollector._pNumTriangles;//numTriangles;\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the view.\r\n\t */\r\n\tpublic render()\r\n\t{\r\n\t\tthis.pUpdateTime();\r\n\r\n\t\t//update view and size data\r\n\t\tthis._pCamera.projection._iAspectRatio = this._aspectRatio;\r\n\r\n\t\tif (this._scissorDirty) {\r\n\t\t\tthis._scissorDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateScissorRect(this._pRenderer.scissorRect.x, this._pRenderer.scissorRect.y, this._pRenderer.scissorRect.width, this._pRenderer.scissorRect.height);\r\n\t\t}\r\n\r\n\t\tif (this._viewportDirty) {\r\n\t\t\tthis._viewportDirty = false;\r\n\t\t\tthis._pCamera.projection._iUpdateViewport(this._pRenderer.viewPort.x, this._pRenderer.viewPort.y, this._pRenderer.viewPort.width, this._pRenderer.viewPort.height);\r\n\t\t}\r\n\r\n\t\t// update picking\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this.forceMouseMove && this._htmlElement == this._mouseManager._iActiveDiv && !this._mouseManager._iUpdateDirty)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tthis._mouseManager.fireMouseEvents(this.forceMouseMove);\r\n\t\t\t//_touch3DManager.fireTouchEvents();\r\n\t\t}\r\n\t\t//_touch3DManager.updateCollider();\r\n\r\n\t\t//clear entity collector ready for collection\r\n\t\tthis._pEntityCollector.clear();\r\n\r\n\t\t// collect stuff to render\r\n\t\tthis._pScene.traversePartitions(this._pEntityCollector);\r\n\r\n\t\t//render the contents of the entity collector\r\n\t\tthis._pRenderer.render(this._pEntityCollector);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic pUpdateTime():void\r\n\t{\r\n\t\tvar time:number = getTimer();\r\n\r\n\t\tif (this._time == 0)\r\n\t\t\tthis._time = time;\r\n\r\n\t\tthis._deltaTime = time - this._time;\r\n\t\tthis._time = time;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pRenderer.dispose();\r\n\r\n\t\t// TODO: imeplement mouseManager / touch3DManager\r\n\t\tthis._mouseManager.unregisterView(this);\r\n\r\n\t\t//this._touch3DManager.disableTouchListeners(this);\r\n\t\t//this._touch3DManager.dispose();\r\n\r\n\t\tthis._mouseManager = null;\r\n\t\t//this._touch3DManager = null;\r\n\r\n\t\tthis._pRenderer = null;\r\n\t\tthis._pEntityCollector = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get iEntityCollector():CollectorBase\r\n\t{\r\n\t\treturn this._pEntityCollector;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onProjectionChanged(event:CameraEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onViewportUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._viewportDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tprivate onScissorUpdated(event:RendererEvent)\r\n\t{\r\n\t\tthis._scissorDirty = true;\r\n\t}\r\n\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\tvar v:Vector3D = this._pCamera.project(point3d);\r\n\t\tv.x = v.x*this._pRenderer.viewPort.width/2 + this._width*this._pCamera.projection.originX;\r\n\t\tv.y = v.y*this._pRenderer.viewPort.height/2 + this._height*this._pCamera.projection.originY;\r\n\r\n\t\treturn v;\r\n\t}\r\n\r\n\tpublic unproject(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.unproject(2*(sX - this._width*this._pCamera.projection.originX)/this._pRenderer.viewPort.width, 2*(sY - this._height*this._pCamera.projection.originY)/this._pRenderer.viewPort.height, sZ);\r\n\r\n\t}\r\n\r\n\tpublic getRay(sX:number, sY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this._pCamera.getRay((sX*2 - this._width)/this._width, (sY*2 - this._height)/this._height, sZ);\r\n\t}\r\n\r\n\t/* TODO: implement Touch3DManager\r\n\t public get touchPicker():IPicker\r\n\t {\r\n\t return this._touch3DManager.touchPicker;\r\n\t }\r\n\t */\r\n\t/* TODO: implement Touch3DManager\r\n\t public set touchPicker( value:IPicker)\r\n\t {\r\n\t this._touch3DManager.touchPicker = value;\r\n\t }\r\n\t */\r\n\r\n\tpublic forceMouseMove:boolean;\r\n\r\n\t/*TODO: implement Background\r\n\t public get background():away.textures.Texture2DBase\r\n\t {\r\n\t return this._background;\r\n\t }\r\n\t */\r\n\t/*TODO: implement Background\r\n\t public set background( value:away.textures.Texture2DBase )\r\n\t {\r\n\t this._background = value;\r\n\t this._renderer.background = _background;\r\n\t }\r\n\t */\r\n\r\n\t// TODO: required dependency stageGL\r\n\tpublic updateCollider()\r\n\t{\r\n\t\tif (!this._shareContext) {\r\n\t\t\tif (this._htmlElement == this._mouseManager._iActiveDiv)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\t\t} else {\r\n\t\t\tvar collidingObject:PickingCollisionVO = this.mousePicker.getViewCollision(this._pMouseX, this._pMouseY, this);\r\n\r\n\t\t\tif (this.layeredView || this._mouseManager._iCollidingObject == null || collidingObject.rayEntryDistance < this._mouseManager._iCollidingObject.rayEntryDistance)\r\n\t\t\t\tthis._mouseManager._iCollidingObject = collidingObject;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = View;",
    "import AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass ControllerBase\r\n{\r\n\r\n\tpublic _pAutoUpdate:boolean = true;\r\n\tpublic _pTargetObject:DisplayObject;\r\n\r\n\tconstructor(targetObject:DisplayObject = null)\r\n\t{\r\n\t\tthis.targetObject = targetObject;\r\n\t}\r\n\r\n\tpublic pNotifyUpdate()\r\n\t{\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject.invalidatePartition();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get targetObject():DisplayObject\r\n\t{\r\n\t\treturn this._pTargetObject;\r\n\t}\r\n\r\n\tpublic set targetObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pTargetObject == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = null;\r\n\t\t}\r\n\t\tthis._pTargetObject = val;\r\n\r\n\t\tif (this._pTargetObject && this._pAutoUpdate) {\r\n\t\t\tthis._pTargetObject._iController = this;\r\n\t\t}\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get autoUpdate():boolean\r\n\t{\r\n\t\treturn this._pAutoUpdate;\r\n\t}\r\n\r\n\tpublic set autoUpdate(val:boolean)\r\n\t{\r\n\t\tif (this._pAutoUpdate == val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pAutoUpdate = val;\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pTargetObject) {\r\n\t\t\t\tthis._pTargetObject._iController = this;\r\n\t\t\t} else {\r\n\t\t\t\tthis._pTargetObject._iController = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = ControllerBase;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\n\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FirstPersonController extends ControllerBase\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic  _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _walkIncrement:number = 0;\r\n\tprivate _strafeIncrement:number = 0;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\r\n\tpublic fly:boolean = false;\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, minTiltAngle:number = -90, maxTiltAngle:number = 90, steps:number = 8, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.targetObject.rotationX = this._iCurrentTiltAngle;\r\n\t\tthis.targetObject.rotationY = this._iCurrentPanAngle;\r\n\r\n\t\tif (this._walkIncrement) {\r\n\t\t\tif (this.fly) {\r\n\t\t\t\tthis.targetObject.transform.moveForward(this._walkIncrement);\r\n\t\t\t} else {\r\n\t\t\t\tthis.targetObject.x += this._walkIncrement*Math.sin(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t\tthis.targetObject.z += this._walkIncrement*Math.cos(this._panAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\t\t}\r\n\t\t\tthis._walkIncrement = 0;\r\n\t\t}\r\n\r\n\t\tif (this._strafeIncrement) {\r\n\t\t\tthis.targetObject.transform.moveRight(this._strafeIncrement);\r\n\t\t\tthis._strafeIncrement = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic incrementWalk(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._walkIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic incrementStrafe(val:number)\r\n\t{\r\n\t\tif (val == 0)\r\n\t\t\treturn;\r\n\r\n\t\tthis._strafeIncrement += val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n}\r\n\r\nexport = FirstPersonController;",
    "import DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport HoverController\t\t\t= require(\"awayjs-display/lib/controllers/HoverController\");\r\n\r\n/**\r\n * Controller used to follow behind an object on the XZ plane, with an optional\r\n * elevation (tiltAngle).\r\n *\r\n * @see    away3d.containers.View3D\r\n */\r\nclass FollowController extends HoverController\r\n{\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, tiltAngle:number = 45, distance:number = 700)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject, 0, tiltAngle, distance);\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tinterpolate = interpolate; // unused: prevents warning\r\n\r\n\t\tif (!this.lookAtObject)\r\n\t\t\treturn;\r\n\r\n\t\tthis.panAngle = this._pLookAtObject.rotationY - 180;\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = FollowController;",
    "import MathConsts\t\t\t\t= require(\"awayjs-core/lib/geom/MathConsts\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Extended camera used to hover round a specified target object.\r\n *\r\n * @see    away.containers.View\r\n */\r\nclass HoverController extends LookAtController\r\n{\r\n\tpublic _iCurrentPanAngle:number = 0;\r\n\tpublic _iCurrentTiltAngle:number = 90;\r\n\r\n\tprivate _panAngle:number = 0;\r\n\tprivate _tiltAngle:number = 90;\r\n\tprivate _distance:number = 1000;\r\n\tprivate _minPanAngle:number = -Infinity;\r\n\tprivate _maxPanAngle:number = Infinity;\r\n\tprivate _minTiltAngle:number = -90;\r\n\tprivate _maxTiltAngle:number = 90;\r\n\tprivate _steps:number = 8;\r\n\tprivate _yFactor:number = 2;\r\n\tprivate _wrapPanAngle:boolean = false;\r\n\tprivate _upAxis:Vector3D = new Vector3D();\r\n\r\n\t/**\r\n\t * Fractional step taken each time the <code>hover()</code> method is called. Defaults to 8.\r\n\t *\r\n\t * Affects the speed at which the <code>tiltAngle</code> and <code>panAngle</code> resolve to their targets.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get steps():number\r\n\t{\r\n\t\treturn this._steps;\r\n\t}\r\n\r\n\tpublic set steps(val:number)\r\n\t{\r\n\t\tval = (val < 1)? 1 : val;\r\n\r\n\t\tif (this._steps == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._steps = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the camera in degrees around the y axis. Defaults to 0.\r\n\t */\r\n\tpublic get panAngle():number\r\n\t{\r\n\t\treturn this._panAngle;\r\n\t}\r\n\r\n\tpublic set panAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, val));\r\n\r\n\t\tif (this._panAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._panAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Elevation angle of the camera in degrees. Defaults to 90.\r\n\t */\r\n\tpublic get tiltAngle():number\r\n\t{\r\n\t\treturn this._tiltAngle;\r\n\t}\r\n\r\n\tpublic set tiltAngle(val:number)\r\n\t{\r\n\t\tval = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, val));\r\n\r\n\t\tif (this._tiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._tiltAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between the camera and the specified target. Defaults to 1000.\r\n\t */\r\n\tpublic get distance():number\r\n\t{\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\tpublic set distance(val:number)\r\n\t{\r\n\t\tif (this._distance == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._distance = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>panAngle</code>. Defaults to -Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get minPanAngle():number\r\n\t{\r\n\t\treturn this._minPanAngle;\r\n\t}\r\n\r\n\tpublic set minPanAngle(val:number)\r\n\t{\r\n\t\tif (this._minPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>panAngle</code>. Defaults to Infinity.\r\n\t *\r\n\t * @see    #panAngle\r\n\t */\r\n\tpublic get maxPanAngle():number\r\n\t{\r\n\t\treturn this._maxPanAngle;\r\n\t}\r\n\r\n\tpublic set maxPanAngle(val:number)\r\n\t{\r\n\t\tif (this._maxPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxPanAngle = val;\r\n\r\n\t\tthis.panAngle = Math.max(this._minPanAngle, Math.min(this._maxPanAngle, this._panAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum bounds for the <code>tiltAngle</code>. Defaults to -90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get minTiltAngle():number\r\n\t{\r\n\t\treturn this._minTiltAngle;\r\n\t}\r\n\r\n\tpublic set minTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._minTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._minTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum bounds for the <code>tiltAngle</code>. Defaults to 90.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t */\r\n\tpublic get maxTiltAngle():number\r\n\t{\r\n\t\treturn this._maxTiltAngle;\r\n\t}\r\n\r\n\tpublic set maxTiltAngle(val:number)\r\n\t{\r\n\t\tif (this._maxTiltAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._maxTiltAngle = val;\r\n\r\n\t\tthis.tiltAngle = Math.max(this._minTiltAngle, Math.min(this._maxTiltAngle, this._tiltAngle));\r\n\t}\r\n\r\n\t/**\r\n\t * Fractional difference in distance between the horizontal camera orientation and vertical camera orientation. Defaults to 2.\r\n\t *\r\n\t * @see    #distance\r\n\t */\r\n\tpublic get yFactor():number\r\n\t{\r\n\t\treturn this._yFactor;\r\n\t}\r\n\r\n\tpublic set yFactor(val:number)\r\n\t{\r\n\t\tif (this._yFactor == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._yFactor = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the value of the pan angle wraps when over 360 degrees or under 0 degrees. Defaults to false.\r\n\t */\r\n\tpublic get wrapPanAngle():boolean\r\n\t{\r\n\t\treturn this._wrapPanAngle;\r\n\t}\r\n\r\n\tpublic set wrapPanAngle(val:boolean)\r\n\t{\r\n\t\tif (this._wrapPanAngle == val)\r\n\t\t\treturn;\r\n\r\n\t\tthis._wrapPanAngle = val;\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>HoverController</code> object.\r\n\t */\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, panAngle:number = 0, tiltAngle:number = 90, distance:number = 1000, minTiltAngle:number = -90, maxTiltAngle:number = 90, minPanAngle:number = null, maxPanAngle:number = null, steps:number = 8, yFactor:number = 2, wrapPanAngle:boolean = false)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.panAngle = panAngle;\r\n\t\tthis.tiltAngle = tiltAngle;\r\n\t\tthis.minPanAngle = ( minPanAngle != null )? minPanAngle : -Infinity;\r\n\t\tthis.maxPanAngle = ( maxPanAngle != null )? maxPanAngle : Infinity;\r\n\t\tthis.minTiltAngle = minTiltAngle;\r\n\t\tthis.maxTiltAngle = maxTiltAngle;\r\n\t\tthis.steps = steps;\r\n\t\tthis.yFactor = yFactor;\r\n\t\tthis.wrapPanAngle = wrapPanAngle;\r\n\r\n\t\t//values passed in contrustor are applied immediately\r\n\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current tilt angle and pan angle values.\r\n\t *\r\n\t * Values are calculated using the defined <code>tiltAngle</code>, <code>panAngle</code> and <code>steps</code> variables.\r\n\t *\r\n\t * @param interpolate   If the update to a target pan- or tiltAngle is interpolated. Default is true.\r\n\t *\r\n\t * @see    #tiltAngle\r\n\t * @see    #panAngle\r\n\t * @see    #steps\r\n\t */\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._tiltAngle != this._iCurrentTiltAngle || this._panAngle != this._iCurrentPanAngle) {\r\n\r\n\t\t\tthis.pNotifyUpdate();\r\n\r\n\t\t\tif (this._wrapPanAngle) {\r\n\t\t\t\tif (this._panAngle < 0) {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 + 360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360 + 360;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._iCurrentPanAngle += this._panAngle%360 - this._panAngle;\r\n\t\t\t\t\tthis._panAngle = this._panAngle%360;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle < -180)\r\n\t\t\t\t\tthis._iCurrentPanAngle -= 360;\r\n\r\n\t\t\t\twhile (this._panAngle - this._iCurrentPanAngle > 180)\r\n\t\t\t\t\tthis._iCurrentPanAngle += 360;\r\n\t\t\t}\r\n\r\n\t\t\tif (interpolate) {\r\n\t\t\t\tthis._iCurrentTiltAngle += (this._tiltAngle - this._iCurrentTiltAngle)/(this.steps + 1);\r\n\t\t\t\tthis._iCurrentPanAngle += (this._panAngle - this._iCurrentPanAngle)/(this.steps + 1);\r\n\t\t\t} else {\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t}\r\n\r\n\t\t\t//snap coords if angle differences are close\r\n\t\t\tif ((Math.abs(this.tiltAngle - this._iCurrentTiltAngle) < 0.01) && (Math.abs(this._panAngle - this._iCurrentPanAngle) < 0.01)) {\r\n\t\t\t\tthis._iCurrentTiltAngle = this._tiltAngle;\r\n\t\t\t\tthis._iCurrentPanAngle = this._panAngle;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar pos:Vector3D = (this.lookAtObject)? this.lookAtObject.transform.position : (this.lookAtPosition)? this.lookAtPosition : this._pOrigin;\r\n\t\tthis.targetObject.x = pos.x + this.distance*Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis.targetObject.y = pos.y + this.distance*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS)*this.yFactor;\r\n\t\tthis.targetObject.z = pos.z + this.distance*Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tthis._upAxis.x = -Math.sin(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.y = Math.cos(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\t\tthis._upAxis.z = -Math.cos(this._iCurrentPanAngle*MathConsts.DEGREES_TO_RADIANS)*Math.sin(this._iCurrentTiltAngle*MathConsts.DEGREES_TO_RADIANS);\r\n\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition, this._upAxis);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position, this._upAxis);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = HoverController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ControllerBase\t\t\t= require(\"awayjs-display/lib/controllers/ControllerBase\");\r\nimport DisplayObjectEvent\t\t= require(\"awayjs-display/lib/events/DisplayObjectEvent\");\r\n\r\nclass LookAtController extends ControllerBase\r\n{\r\n\tpublic _pLookAtPosition:Vector3D;\r\n\tpublic _pLookAtObject:DisplayObject;\r\n\tpublic _pOrigin:Vector3D = new Vector3D(0.0, 0.0, 0.0);\r\n\r\n\tprivate _onLookAtObjectChangedDelegate:(event:DisplayObjectEvent) => void;\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null)\r\n\t{\r\n\t\tsuper(targetObject);\r\n\r\n\t\tthis._onLookAtObjectChangedDelegate = (event:DisplayObjectEvent) => this.onLookAtObjectChanged(event);\r\n\r\n\t\tif (lookAtObject)\r\n\t\t\tthis.lookAtObject = lookAtObject;\r\n\t\telse\r\n\t\t\tthis.lookAtPosition = new Vector3D();\r\n\t}\r\n\r\n\tpublic get lookAtPosition():Vector3D\r\n\t{\r\n\t\treturn this._pLookAtPosition;\r\n\t}\r\n\r\n\tpublic set lookAtPosition(val:Vector3D)\r\n\t{\r\n\t\tif (this._pLookAtObject) {\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\t\t\tthis._pLookAtObject = null;\r\n\t\t}\r\n\r\n\t\tthis._pLookAtPosition = val;\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\tpublic get lookAtObject():DisplayObject\r\n\t{\r\n\t\treturn this._pLookAtObject;\r\n\t}\r\n\r\n\tpublic set lookAtObject(val:DisplayObject)\r\n\t{\r\n\t\tif (this._pLookAtPosition)\r\n\t\t\tthis._pLookAtPosition = null;\r\n\r\n\t\tif (this._pLookAtObject == val)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.removeEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis._pLookAtObject = val;\r\n\r\n\t\tif (this._pLookAtObject)\r\n\t\t\tthis._pLookAtObject.addEventListener(DisplayObjectEvent.SCENETRANSFORM_CHANGED, this._onLookAtObjectChangedDelegate);\r\n\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tif (this._pTargetObject) {\r\n\t\t\tif (this._pLookAtPosition)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtPosition);\r\n\t\t\telse if (this._pLookAtObject)\r\n\t\t\t\tthis._pTargetObject.lookAt(this._pLookAtObject.scene? this._pLookAtObject.scenePosition : this._pLookAtObject.transform.position);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLookAtObjectChanged(event:DisplayObjectEvent)\r\n\t{\r\n\t\tthis.pNotifyUpdate();\r\n\t}\r\n}\r\n\r\nexport = LookAtController;",
    "import Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport LookAtController\t\t\t= require(\"awayjs-display/lib/controllers/LookAtController\");\r\n\r\n/**\r\n * Uses spring physics to animate the target object towards a position that is\r\n * defined as the lookAtTarget object's position plus the vector defined by the\r\n * positionOffset property.\r\n */\r\nclass SpringController extends LookAtController\r\n{\r\n\tprivate _velocity:Vector3D;\r\n\tprivate _dv:Vector3D;\r\n\tprivate _stretch:Vector3D;\r\n\tprivate _force:Vector3D;\r\n\tprivate _acceleration:Vector3D;\r\n\tprivate _desiredPosition:Vector3D;\r\n\r\n\t/**\r\n\t * Stiffness of the spring, how hard is it to extend. The higher it is, the more \"fixed\" the cam will be.\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic stiffness:number;\r\n\r\n\t/**\r\n\t * Damping is the spring internal friction, or how much it resists the \"boinggggg\" effect. Too high and you'll lose it!\r\n\t * A number between 1 and 20 is recommended.\r\n\t */\r\n\tpublic damping:number;\r\n\r\n\t/**\r\n\t * Mass of the camera, if over 120 and it'll be very heavy to move.\r\n\t */\r\n\tpublic mass:number;\r\n\r\n\t/**\r\n\t * Offset of spring center from target in target object space, ie: Where the camera should ideally be in the target object space.\r\n\t */\r\n\tpublic positionOffset:Vector3D = new Vector3D(0, 500, -1000);\r\n\r\n\tconstructor(targetObject:DisplayObject = null, lookAtObject:DisplayObject = null, stiffness:number = 1, mass:number = 40, damping:number = 4)\r\n\t{\r\n\t\tsuper(targetObject, lookAtObject);\r\n\r\n\t\tthis.stiffness = stiffness;\r\n\t\tthis.damping = damping;\r\n\t\tthis.mass = mass;\r\n\r\n\t\tthis._velocity = new Vector3D();\r\n\t\tthis._dv = new Vector3D();\r\n\t\tthis._stretch = new Vector3D();\r\n\t\tthis._force = new Vector3D();\r\n\t\tthis._acceleration = new Vector3D();\r\n\t\tthis._desiredPosition = new Vector3D();\r\n\r\n\t}\r\n\r\n\tpublic update(interpolate:boolean = true)\r\n\t{\r\n\t\tvar offs:Vector3D;\r\n\r\n\t\tif (!this._pLookAtObject || !this._pTargetObject)\r\n\t\t\treturn;\r\n\r\n\t\toffs = this._pLookAtObject.transform.matrix3D.deltaTransformVector(this.positionOffset);\r\n\t\tthis._desiredPosition.x = this._pLookAtObject.x + offs.x;\r\n\t\tthis._desiredPosition.y = this._pLookAtObject.y + offs.y;\r\n\t\tthis._desiredPosition.z = this._pLookAtObject.z + offs.z;\r\n\r\n\t\tthis._stretch = this._pTargetObject.transform.position.add(this._desiredPosition);\r\n\t\tthis._stretch.scaleBy(-this.stiffness);\r\n\r\n\t\tthis._dv.copyFrom(this._velocity);\r\n\t\tthis._dv.scaleBy(this.damping);\r\n\r\n\t\tthis._force.x = this._stretch.x - this._dv.x;\r\n\t\tthis._force.y = this._stretch.y - this._dv.y;\r\n\t\tthis._force.z = this._stretch.z - this._dv.z;\r\n\r\n\t\tthis._acceleration.copyFrom(this._force);\r\n\t\tthis._acceleration.scaleBy(1/this.mass);\r\n\r\n\t\tthis._velocity.incrementBy(this._acceleration);\r\n\r\n\t\tthis._pTargetObject.transform.position = this._pTargetObject.transform.position.add(this._velocity);\r\n\r\n\t\tsuper.update();\r\n\t}\r\n}\r\n\r\nexport = SpringController;",
    "/**\r\n * The CapsStyle class is an enumeration of constant values that specify the\r\n * caps style to use in drawing lines. The constants are provided for use as\r\n * values in the <code>caps</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. You can specify the\r\n * following three types of caps:\r\n */\r\nclass CapsStyle\r\n{\r\n\t/**\r\n\t * Used to specify round caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n\r\n\t/**\r\n\t * Used to specify no caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Used to specify square caps in the <code>caps</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static SQUARE:string = \"square\";\r\n}\r\n\r\nexport = CapsStyle;",
    "/**\r\n * The GradientType class provides values for the <code>type</code> parameter\r\n * in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the flash.display.Graphics\r\n * class.\r\n */\r\nclass GradientType\r\n{\r\n\t/**\r\n\t * Value used to specify a linear gradient fill.\r\n\t */\r\n\tpublic static LINEAR:string = \"linear\";\r\n\r\n\t/**\r\n\t * Value used to specify a radial gradient fill.\r\n\t */\r\n\tpublic static RADIAL:string = \"radial\";\r\n}\r\n\r\nexport = GradientType;",
    "/**\r\n * The GraphicsPathWinding class provides values for the\r\n * <code>flash.display.GraphicsPath.winding</code> property and the\r\n * <code>flash.display.Graphics.drawPath()</code> method to determine the\r\n * direction to draw a path. A clockwise path is positively wound, and a\r\n * counter-clockwise path is negatively wound:\r\n *\r\n * <p> When paths intersect or overlap, the winding direction determines the\r\n * rules for filling the areas created by the intersection or overlap:</p>\r\n */\r\nclass GraphicsPathWinding\r\n{\r\n\tpublic static EVEN_ODD:string = \"evenOdd\";\r\n\tpublic static NON_ZERO:string = \"nonZero\";\r\n}\r\n\r\nexport = GraphicsPathWinding;",
    "import BitmapImage2D\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\nimport Matrix\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\r\n\r\nimport CapsStyle\t\t\t\t= require(\"awayjs-display/lib/draw/CapsStyle\");\r\nimport GradientType\t\t\t\t= require(\"awayjs-display/lib/draw/GradientType\");\r\nimport GraphicsPathWinding\t\t= require(\"awayjs-display/lib/draw/GraphicsPathWinding\");\r\nimport IGraphicsData\t\t\t= require(\"awayjs-display/lib/draw/IGraphicsData\");\r\nimport InterpolationMethod\t\t= require(\"awayjs-display/lib/draw/InterpolationMethod\");\r\nimport JointStyle\t\t\t\t= require(\"awayjs-display/lib/draw/JointStyle\");\r\nimport LineScaleMode\t\t\t= require(\"awayjs-display/lib/draw/LineScaleMode\");\r\nimport TriangleCulling\t\t\t= require(\"awayjs-display/lib/draw/TriangleCulling\");\r\nimport SpreadMethod\t\t\t\t= require(\"awayjs-display/lib/draw/SpreadMethod\");\r\n\r\n/**\r\n * The Graphics class contains a set of methods that you can use to create a\r\n * vector shape. Display objects that support drawing include Sprite and Shape\r\n * objects. Each of these classes includes a <code>graphics</code> property\r\n * that is a Graphics object. The following are among those helper functions\r\n * provided for ease of use: <code>drawRect()</code>,\r\n * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and\r\n * <code>drawEllipse()</code>.\r\n *\r\n * <p>You cannot create a Graphics object directly from ActionScript code. If\r\n * you call <code>new Graphics()</code>, an exception is thrown.</p>\r\n *\r\n * <p>The Graphics class is final; it cannot be subclassed.</p>\r\n */\r\nclass Graphics\r\n{\r\n\t/**\r\n\t * Fills a drawing area with a bitmap image. The bitmap can be repeated or\r\n\t * tiled to fill the area. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param bitmap A transparent or opaque bitmap image that contains the bits\r\n\t *               to be displayed.\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the bitmap. For\r\n\t *               example, you can use the following matrix to rotate a bitmap\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t * @param repeat If <code>true</code>, the bitmap image repeats in a tiled\r\n\t *               pattern. If <code>false</code>, the bitmap image does not\r\n\t *               repeat, and the edges of the bitmap are used for any fill\r\n\t *               area that extends beyond the bitmap.\r\n\t *\r\n\t *               <p>For example, consider the following bitmap(a 20 x\r\n\t *               20-pixel checkerboard pattern):</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>true</code>(as\r\n\t *               in the following example), the bitmap fill repeats the\r\n\t *               bitmap:</p>\r\n\t *\r\n\t *               <p>When <code>repeat</code> is set to <code>false</code>,\r\n\t *               the bitmap fill uses the edge pixels for the fill area\r\n\t *               outside the bitmap:</p>\r\n\t * @param smooth If <code>false</code>, upscaled bitmap images are rendered\r\n\t *               by using a nearest-neighbor algorithm and look pixelated. If\r\n\t *               <code>true</code>, upscaled bitmap images are rendered by\r\n\t *               using a bilinear algorithm. Rendering by using the nearest\r\n\t *               neighbor algorithm is faster.\r\n\t */\r\n\tpublic beginBitmapFill(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a simple one-color fill that subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use\r\n\t * when drawing. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * @param color The color of the fill(0xRRGGBB).\r\n\t * @param alpha The alpha value of the fill(0.0 to 1.0).\r\n\t */\r\n\tpublic beginFill(color:number /*int*/, alpha:number = 1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient fill used by subsequent calls to other Graphics\r\n\t * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for\r\n\t * the object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use:\r\n\t *                            <code>GradientType.LINEAR</code> or\r\n\t *                            <code>GradientType.RADIAL</code>.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>beginGradientFill()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use, either:\r\n\t *                            <code>SpreadMethod.PAD</code>,\r\n\t *                            <code>SpreadMethod.REFLECT</code>, or\r\n\t *                            <code>SpreadMethod.REPEAT</code>.\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors:</p>\r\n\t *\r\n\t *                            <p>This example uses\r\n\t *                            <code>SpreadMethod.PAD</code> for the spread\r\n\t *                            method, and the gradient fill looks like the\r\n\t *                            following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REFLECT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t *\r\n\t *                            <p>If you use <code>SpreadMethod.REPEAT</code>\r\n\t *                            for the spread method, the gradient fill looks\r\n\t *                            like the following:</p>\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use:\r\n\t *                            <code>InterpolationMethod.LINEAR_RGB</code> or\r\n\t *                            <code>InterpolationMethod.RGB</code>\r\n\t *\r\n\t *                            <p>For example, consider a simple linear\r\n\t *                            gradient between two colors(with the\r\n\t *                            <code>spreadMethod</code> parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows: </p>\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. 0 means that the\r\n\t *                            focal point is in the center. 1 means that the\r\n\t *                            focal point is at one border of the gradient\r\n\t *                            circle. -1 means that the focal point is at the\r\n\t *                            other border of the gradient circle. A value\r\n\t *                            less than -1 or greater than 1 is rounded to -1\r\n\t *                            or 1. For example, the following example shows\r\n\t *                            a <code>focalPointRatio</code> set to 0.75:\r\n\t * @throws ArgumentError If the <code>type</code> parameter is not valid.\r\n\t */\r\n\tpublic beginGradientFill(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number /*int*/>, matrix:Matrix = null, spreadMethod:string = \"pad\", interpolationMethod:string = \"rgb\", focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader fill used by subsequent calls to other Graphics methods\r\n\t * (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the\r\n\t * object. The fill remains in effect until you call the\r\n\t * <code>beginFill()</code>, <code>beginBitmapFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>\r\n\t * method. Calling the <code>clear()</code> method clears the fill.\r\n\t *\r\n\t * <p>The application renders the fill whenever three or more points are\r\n\t * drawn, or when the <code>endFill()</code> method is called.</p>\r\n\t *\r\n\t * <p>Shader fills are not supported under GPU rendering; filled areas will\r\n\t * be colored cyan.</p>\r\n\t *\r\n\t * @param shader The shader to use for the fill. This Shader instance is not\r\n\t *               required to specify an image input. However, if an image\r\n\t *               input is specified in the shader, the input must be provided\r\n\t *               manually. To specify the input, set the <code>input</code>\r\n\t *               property of the corresponding ShaderInput property of the\r\n\t *               <code>Shader.data</code> property.\r\n\t *\r\n\t *               <p>When you pass a Shader instance as an argument the shader\r\n\t *               is copied internally. The drawing fill operation uses that\r\n\t *               internal copy, not a reference to the original shader. Any\r\n\t *               changes made to the shader, such as changing a parameter\r\n\t *               value, input, or bytecode, are not applied to the copied\r\n\t *               shader that's used for the fill.</p>\r\n\t * @param matrix A matrix object(of the flash.geom.Matrix class), which you\r\n\t *               can use to define transformations on the shader. For\r\n\t *               example, you can use the following matrix to rotate a shader\r\n\t *               by 45 degrees(pi/4 radians):\r\n\t *\r\n\t *               <p>The coordinates received in the shader are based on the\r\n\t *               matrix that is specified for the <code>matrix</code>\r\n\t *               parameter. For a default(<code>null</code>) matrix, the\r\n\t *               coordinates in the shader are local pixel coordinates which\r\n\t *               can be used to sample an input.</p>\r\n\t * @throws ArgumentError When the shader output type is not compatible with\r\n\t *                       this operation(the shader must specify a\r\n\t *                       <code>pixel3</code> or <code>pixel4</code> output).\r\n\t * @throws ArgumentError When the shader specifies an image input that isn't\r\n\t *                       provided.\r\n\t * @throws ArgumentError When a ByteArray or Vector.<Number> instance is used\r\n\t *                       as an input and the <code>width</code> and\r\n\t *                       <code>height</code> properties aren't specified for\r\n\t *                       the ShaderInput, or the specified values don't match\r\n\t *                       the amount of data in the input object. See the\r\n\t *                       <code>ShaderInput.input</code> property for more\r\n\t *                       information.\r\n\t */\r\n//\t\tpublic beginShaderFill(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Clears the graphics that were drawn to this Graphics object, and resets\r\n\t * fill and line style settings.\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all of drawing commands from the source Graphics object into the\r\n\t * calling Graphics object.\r\n\t *\r\n\t * @param sourceGraphics The Graphics object from which to copy the drawing\r\n\t *                       commands.\r\n\t */\r\n\tpublic copyFrom(sourceGraphics:Graphics)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a cubic Bezier curve from the current drawing position to the\r\n\t * specified anchor point. Cubic Bezier curves consist of two anchor points\r\n\t * and two control points. The curve interpolates the two anchor points and\r\n\t * curves toward the two control points.\r\n\t *\r\n\t * The four points you use to draw a cubic Bezier curve with the\r\n\t * <code>cubicCurveTo()</code> method are as follows:\r\n\t *\r\n\t * <ul>\r\n\t *   <li>The current drawing position is the first anchor point. </li>\r\n\t *   <li>The anchorX and anchorY parameters specify the second anchor point.\r\n\t *   </li>\r\n\t *   <li>The <code>controlX1</code> and <code>controlY1</code> parameters\r\n\t *   specify the first control point.</li>\r\n\t *   <li>The <code>controlX2</code> and <code>controlY2</code> parameters\r\n\t *   specify the second control point.</li>\r\n\t * </ul>\r\n\t *\r\n\t * If you call the <code>cubicCurveTo()</code> method before calling the\r\n\t * <code>moveTo()</code> method, your curve starts at position (0, 0).\r\n\t *\r\n\t * If the <code>cubicCurveTo()</code> method succeeds, the Flash runtime sets\r\n\t * the current drawing position to (<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the <code>cubicCurveTo()</code> method fails,\r\n\t * the current drawing position remains unchanged.\r\n\t *\r\n\t * If your movie clip contains content created with the Flash drawing tools,\r\n\t * the results of calls to the <code>cubicCurveTo()</code> method are drawn\r\n\t * underneath that content.\r\n\t *\r\n\t * @param controlX1 Specifies the horizontal position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY1 Specifies the vertical position of the first control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlX2 Specifies the horizontal position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param controlY2 Specifies the vertical position of the second control\r\n\t *                  point relative to the registration point of the parent\r\n\t *                  display object.\r\n\t * @param anchorX   Specifies the horizontal position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t * @param anchorY   Specifies the vertical position of the anchor point\r\n\t *                  relative to the registration point of the parent display\r\n\t *                  object.\r\n\t */\r\n\tpublic cubicCurveTo(controlX1:number, controlY1:number, controlX2:number, controlY2:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a curve using the current line style from the current drawing\r\n\t * position to(anchorX, anchorY) and using the control point that\r\n\t * (<code>controlX</code>, <code>controlY</code>) specifies. The current\r\n\t * drawing position is then set to(<code>anchorX</code>,\r\n\t * <code>anchorY</code>). If the movie clip in which you are drawing contains\r\n\t * content created with the Flash drawing tools, calls to the\r\n\t * <code>curveTo()</code> method are drawn underneath this content. If you\r\n\t * call the <code>curveTo()</code> method before any calls to the\r\n\t * <code>moveTo()</code> method, the default of the current drawing position\r\n\t * is(0, 0). If any of the parameters are missing, this method fails and the\r\n\t * current drawing position is not changed.\r\n\t *\r\n\t * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves\r\n\t * consist of two anchor points and one control point. The curve interpolates\r\n\t * the two anchor points and curves toward the control point. </p>\r\n\t *\r\n\t * @param controlX A number that specifies the horizontal position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param controlY A number that specifies the vertical position of the\r\n\t *                 control point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t * @param anchorX  A number that specifies the horizontal position of the\r\n\t *                 next anchor point relative to the registration point of\r\n\t *                 the parent display object.\r\n\t * @param anchorY  A number that specifies the vertical position of the next\r\n\t *                 anchor point relative to the registration point of the\r\n\t *                 parent display object.\r\n\t */\r\n\tpublic curveTo(controlX:number, controlY:number, anchorX:number, anchorY:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a circle. Set the line style, fill, or both before you call the\r\n\t * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param y      The <i>y</i> location of the center of the circle relative\r\n\t *               to the registration point of the parent display object(in\r\n\t *               pixels).\r\n\t * @param radius The radius of the circle(in pixels).\r\n\t */\r\n\tpublic drawCircle(x:number, y:number, radius:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an ellipse. Set the line style, fill, or both before you call the\r\n\t * <code>drawEllipse()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x      The <i>x</i> location of the top-left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param y      The <i>y</i> location of the top left of the bounding-box of\r\n\t *               the ellipse relative to the registration point of the parent\r\n\t *               display object(in pixels).\r\n\t * @param width  The width of the ellipse(in pixels).\r\n\t * @param height The height of the ellipse(in pixels).\r\n\t */\r\n\tpublic drawEllipse(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of IGraphicsData instances for drawing. This method\r\n\t * accepts a Vector containing objects including paths, fills, and strokes\r\n\t * that implement the IGraphicsData interface. A Vector of IGraphicsData\r\n\t * instances can refer to a part of a shape, or a complex fully defined set\r\n\t * of data for rendering a complete shape.\r\n\t *\r\n\t * <p> Graphics paths can contain other graphics paths. If the\r\n\t * <code>graphicsData</code> Vector includes a path, that path and all its\r\n\t * sub-paths are rendered during this operation. </p>\r\n\t *\r\n\t */\r\n\tpublic drawGraphicsData(graphicsData:Array<IGraphicsData>)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Submits a series of commands for drawing. The <code>drawPath()</code>\r\n\t * method uses vector arrays to consolidate individual <code>moveTo()</code>,\r\n\t * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a\r\n\t * single call. The <code>drawPath()</code> method parameters combine drawing\r\n\t * commands with x- and y-coordinate value pairs and a drawing direction. The\r\n\t * drawing commands are values from the GraphicsPathCommand class. The x- and\r\n\t * y-coordinate value pairs are Numbers in an array where each pair defines a\r\n\t * coordinate location. The drawing direction is a value from the\r\n\t * GraphicsPathWinding class.\r\n\t *\r\n\t * <p> Generally, drawings render faster with <code>drawPath()</code> than\r\n\t * with a series of individual <code>lineTo()</code> and\r\n\t * <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method uses a uses a floating computation\r\n\t * so rotation and scaling of shapes is more accurate and gives better\r\n\t * results. However, curves submitted using the <code>drawPath()</code>\r\n\t * method can have small sub-pixel alignment errors when used in conjunction\r\n\t * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>\r\n\t *\r\n\t * <p> The <code>drawPath()</code> method also uses slightly different rules\r\n\t * for filling and drawing lines. They are: </p>\r\n\t *\r\n\t * <ul>\r\n\t *   <li>When a fill is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>A sub-path of less than 3 points is not rendered.(But note that the\r\n\t * stroke rendering will still occur, consistent with the rules for strokes\r\n\t * below.)</li>\r\n\t *   <li>A sub-path that isn't closed(the end point is not equal to the\r\n\t * begin point) is implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t *   <li>When a stroke is applied to rendering a path:\r\n\t * <ul>\r\n\t *   <li>The sub-paths can be composed of any number of points.</li>\r\n\t *   <li>The sub-path is never implicitly closed.</li>\r\n\t * </ul>\r\n\t * </li>\r\n\t * </ul>\r\n\t *\r\n\t * @param winding Specifies the winding rule using a value defined in the\r\n\t *                GraphicsPathWinding class.\r\n\t */\r\n\tpublic drawPath(commands:Array<number /*int*/>, data:Array<number>, winding:GraphicsPathWinding)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rectangle. Set the line style, fill, or both before you call the\r\n\t * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,\r\n\t * <code>lineGradientStyle()</code>, <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method.\r\n\t *\r\n\t * @param x      A number indicating the horizontal position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param y      A number indicating the vertical position relative to the\r\n\t *               registration point of the parent display object(in pixels).\r\n\t * @param width  The width of the rectangle(in pixels).\r\n\t * @param height The height of the rectangle(in pixels).\r\n\t * @throws ArgumentError If the <code>width</code> or <code>height</code>\r\n\t *                       parameters are not a number\r\n\t *                      (<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRect(x:number, y:number, width:number, height:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a rounded rectangle. Set the line style, fill, or both before you\r\n\t * call the <code>drawRoundRect()</code> method, by calling the\r\n\t * <code>linestyle()</code>, <code>lineGradientStyle()</code>,\r\n\t * <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method.\r\n\t *\r\n\t * @param x             A number indicating the horizontal position relative\r\n\t *                      to the registration point of the parent display\r\n\t *                      object(in pixels).\r\n\t * @param y             A number indicating the vertical position relative to\r\n\t *                      the registration point of the parent display object\r\n\t *                     (in pixels).\r\n\t * @param width         The width of the round rectangle(in pixels).\r\n\t * @param height        The height of the round rectangle(in pixels).\r\n\t * @param ellipseWidth  The width of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels).\r\n\t * @param ellipseHeight The height of the ellipse used to draw the rounded\r\n\t *                      corners(in pixels). Optional; if no value is\r\n\t *                      specified, the default value matches that provided\r\n\t *                      for the <code>ellipseWidth</code> parameter.\r\n\t * @throws ArgumentError If the <code>width</code>, <code>height</code>,\r\n\t *                       <code>ellipseWidth</code> or\r\n\t *                       <code>ellipseHeight</code> parameters are not a\r\n\t *                       number(<code>Number.NaN</code>).\r\n\t */\r\n\tpublic drawRoundRect(x:number, y:number, width:number, height:number, ellipseWidth:number, ellipseHeight:number = NaN)\r\n\t{\r\n\r\n\t}\r\n\r\n\t//public drawRoundRectComplex(x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void;\r\n\r\n\t/**\r\n\t * Renders a set of triangles, typically to distort bitmaps and give them a\r\n\t * three-dimensional appearance. The <code>drawTriangles()</code> method maps\r\n\t * either the current fill, or a bitmap fill, to the triangle faces using a\r\n\t * set of(u,v) coordinates.\r\n\t *\r\n\t * <p> Any type of fill can be used, but if the fill has a transform matrix\r\n\t * that transform matrix is ignored. </p>\r\n\t *\r\n\t * <p> A <code>uvtData</code> parameter improves texture mapping when a\r\n\t * bitmap fill is used. </p>\r\n\t *\r\n\t * @param culling Specifies whether to render triangles that face in a\r\n\t *                specified direction. This parameter prevents the rendering\r\n\t *                of triangles that cannot be seen in the current view. This\r\n\t *                parameter can be set to any value defined by the\r\n\t *                TriangleCulling class.\r\n\t */\r\n\tpublic drawTriangles(vertices:Array<number>, indices:Array<number /*int*/> = null, uvtData:Array<number> = null, culling:TriangleCulling = null)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a fill to the lines and curves that were added since the last call\r\n\t * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or\r\n\t * <code>beginBitmapFill()</code> method. Flash uses the fill that was\r\n\t * specified in the previous call to the <code>beginFill()</code>,\r\n\t * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>\r\n\t * method. If the current drawing position does not equal the previous\r\n\t * position specified in a <code>moveTo()</code> method and a fill is\r\n\t * defined, the path is closed with a line and then filled.\r\n\t *\r\n\t */\r\n\tpublic endFill()\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a bitmap to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The bitmap line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineBitmapStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param bitmap The bitmap to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t * @param repeat Whether to repeat the bitmap in a tiled fashion.\r\n\t * @param smooth Whether smoothing should be applied to the bitmap.\r\n\t */\r\n\tpublic lineBitmapStyle(bitmap:BitmapImage2D, matrix:Matrix = null, repeat:boolean = true, smooth:boolean = false)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a gradient to use for the stroke when drawing lines.\r\n\t *\r\n\t * <p>The gradient line style is used for subsequent calls to Graphics\r\n\t * methods such as the <code>lineTo()</code> methods or the\r\n\t * <code>drawCircle()</code> method. The line style remains in effect until\r\n\t * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>\r\n\t * methods, or the <code>lineGradientStyle()</code> method again with\r\n\t * different parameters. </p>\r\n\t *\r\n\t * <p>You can call the <code>lineGradientStyle()</code> method in the middle\r\n\t * of drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineGradientStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param type                A value from the GradientType class that\r\n\t *                            specifies which gradient type to use, either\r\n\t *                            GradientType.LINEAR or GradientType.RADIAL.\r\n\t * @param colors              An array of RGB hexadecimal color values used\r\n\t *                            in the gradient; for example, red is 0xFF0000,\r\n\t *                            blue is 0x0000FF, and so on. You can specify\r\n\t *                            up to 15 colors. For each color, specify a\r\n\t *                            corresponding value in the alphas and ratios\r\n\t *                            parameters.\r\n\t * @param alphas              An array of alpha values for the corresponding\r\n\t *                            colors in the colors array; valid values are 0\r\n\t *                            to 1. If the value is less than 0, the default\r\n\t *                            is 0. If the value is greater than 1, the\r\n\t *                            default is 1.\r\n\t * @param ratios              An array of color distribution ratios; valid\r\n\t *                            values are 0-255. This value defines the\r\n\t *                            percentage of the width where the color is\r\n\t *                            sampled at 100%. The value 0 represents the\r\n\t *                            left position in the gradient box, and 255\r\n\t *                            represents the right position in the gradient\r\n\t *                            box.\r\n\t * @param matrix              A transformation matrix as defined by the\r\n\t *                            flash.geom.Matrix class. The flash.geom.Matrix\r\n\t *                            class includes a\r\n\t *                            <code>createGradientBox()</code> method, which\r\n\t *                            lets you conveniently set up the matrix for use\r\n\t *                            with the <code>lineGradientStyle()</code>\r\n\t *                            method.\r\n\t * @param spreadMethod        A value from the SpreadMethod class that\r\n\t *                            specifies which spread method to use:\r\n\t * @param interpolationMethod A value from the InterpolationMethod class that\r\n\t *                            specifies which value to use. For example,\r\n\t *                            consider a simple linear gradient between two\r\n\t *                            colors(with the <code>spreadMethod</code>\r\n\t *                            parameter set to\r\n\t *                            <code>SpreadMethod.REFLECT</code>). The\r\n\t *                            different interpolation methods affect the\r\n\t *                            appearance as follows:\r\n\t * @param focalPointRatio     A number that controls the location of the\r\n\t *                            focal point of the gradient. The value 0 means\r\n\t *                            the focal point is in the center. The value 1\r\n\t *                            means the focal point is at one border of the\r\n\t *                            gradient circle. The value -1 means that the\r\n\t *                            focal point is at the other border of the\r\n\t *                            gradient circle. Values less than -1 or greater\r\n\t *                            than 1 are rounded to -1 or 1. The following\r\n\t *                            image shows a gradient with a\r\n\t *                            <code>focalPointRatio</code> of -0.75:\r\n\t */\r\n\tpublic lineGradientStyle(type:GradientType, colors:Array<number /*int*/>, alphas:Array<number>, ratios:Array<number>, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:number = 0)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies a shader to use for the line stroke when drawing lines.\r\n\t *\r\n\t * <p>The shader line style is used for subsequent calls to Graphics methods\r\n\t * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or\r\n\t * the <code>lineBitmapStyle()</code> method again with different parameters.\r\n\t * </p>\r\n\t *\r\n\t * <p>You can call the <code>lineShaderStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within a path. </p>\r\n\t *\r\n\t * <p>Call the <code>lineStyle()</code> method before you call the\r\n\t * <code>lineShaderStyle()</code> method to enable a stroke, or else the\r\n\t * value of the line style is <code>undefined</code>.</p>\r\n\t *\r\n\t * <p>Calls to the <code>clear()</code> method set the line style back to\r\n\t * <code>undefined</code>. </p>\r\n\t *\r\n\t * @param shader The shader to use for the line stroke.\r\n\t * @param matrix An optional transformation matrix as defined by the\r\n\t *               flash.geom.Matrix class. The matrix can be used to scale or\r\n\t *               otherwise manipulate the bitmap before applying it to the\r\n\t *               line style.\r\n\t */\r\n//\t\tpublic lineShaderStyle(shader:Shader, matrix:Matrix = null)\r\n//\t\t{\r\n//\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Specifies a line style used for subsequent calls to Graphics methods such\r\n\t * as the <code>lineTo()</code> method or the <code>drawCircle()</code>\r\n\t * method. The line style remains in effect until you call the\r\n\t * <code>lineGradientStyle()</code> method, the\r\n\t * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>\r\n\t * method with different parameters.\r\n\t *\r\n\t * <p>You can call the <code>lineStyle()</code> method in the middle of\r\n\t * drawing a path to specify different styles for different line segments\r\n\t * within the path.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line\r\n\t * style back to <code>undefined</code>.</p>\r\n\t *\r\n\t * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters\r\n\t * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>\r\n\t *\r\n\t * @param thickness    An integer that indicates the thickness of the line in\r\n\t *                     points; valid values are 0-255. If a number is not\r\n\t *                     specified, or if the parameter is undefined, a line is\r\n\t *                     not drawn. If a value of less than 0 is passed, the\r\n\t *                     default is 0. The value 0 indicates hairline\r\n\t *                     thickness; the maximum thickness is 255. If a value\r\n\t *                     greater than 255 is passed, the default is 255.\r\n\t * @param color        A hexadecimal color value of the line; for example,\r\n\t *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a\r\n\t *                     value is not indicated, the default is 0x000000\r\n\t *                    (black). Optional.\r\n\t * @param alpha        A number that indicates the alpha value of the color\r\n\t *                     of the line; valid values are 0 to 1. If a value is\r\n\t *                     not indicated, the default is 1(solid). If the value\r\n\t *                     is less than 0, the default is 0. If the value is\r\n\t *                     greater than 1, the default is 1.\r\n\t * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that\r\n\t *                     specifies whether to hint strokes to full pixels. This\r\n\t *                     affects both the position of anchors of a curve and\r\n\t *                     the line stroke size itself. With\r\n\t *                     <code>pixelHinting</code> set to <code>true</code>,\r\n\t *                     line widths are adjusted to full pixel widths. With\r\n\t *                     <code>pixelHinting</code> set to <code>false</code>,\r\n\t *                     disjoints can appear for curves and straight lines.\r\n\t *                     For example, the following illustrations show how\r\n\t *                     Flash Player or Adobe AIR renders two rounded\r\n\t *                     rectangles that are identical, except that the\r\n\t *                     <code>pixelHinting</code> parameter used in the\r\n\t *                     <code>lineStyle()</code> method is set differently\r\n\t *                    (the images are scaled by 200%, to emphasize the\r\n\t *                     difference):\r\n\t *\r\n\t *                     <p>If a value is not supplied, the line does not use\r\n\t *                     pixel hinting.</p>\r\n\t * @param scaleMode   (Not supported in Flash Lite 4) A value from the\r\n\t *                     LineScaleMode class that specifies which scale mode to\r\n\t *                     use:\r\n\t *                     <ul>\r\n\t *                       <li> <code>LineScaleMode.NORMAL</code> - Always\r\n\t *                     scale the line thickness when the object is scaled\r\n\t *                    (the default). </li>\r\n\t *                       <li> <code>LineScaleMode.NONE</code> - Never scale\r\n\t *                     the line thickness. </li>\r\n\t *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     vertically <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.VERTICAL</code>. The circle on the\r\n\t *                     left is scaled vertically only, and the circle on the\r\n\t *                     right is scaled both vertically and horizontally:\r\n\t *                     </li>\r\n\t *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not\r\n\t *                     scale the line thickness if the object is scaled\r\n\t *                     horizontally <i>only</i>. For example, consider the\r\n\t *                     following circles, drawn with a one-pixel line, and\r\n\t *                     each with the <code>scaleMode</code> parameter set to\r\n\t *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on\r\n\t *                     the left is scaled horizontally only, and the circle\r\n\t *                     on the right is scaled both vertically and\r\n\t *                     horizontally:   </li>\r\n\t *                     </ul>\r\n\t * @param caps        (Not supported in Flash Lite 4) A value from the\r\n\t *                     CapsStyle class that specifies the type of caps at the\r\n\t *                     end of lines. Valid values are:\r\n\t *                     <code>CapsStyle.NONE</code>,\r\n\t *                     <code>CapsStyle.ROUND</code>, and\r\n\t *                     <code>CapsStyle.SQUARE</code>. If a value is not\r\n\t *                     indicated, Flash uses round caps.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>capsStyle</code> settings. For each\r\n\t *                     setting, the illustration shows a blue line with a\r\n\t *                     thickness of 30(for which the <code>capsStyle</code>\r\n\t *                     applies), and a superimposed black line with a\r\n\t *                     thickness of 1(for which no <code>capsStyle</code>\r\n\t *                     applies): </p>\r\n\t * @param joints      (Not supported in Flash Lite 4) A value from the\r\n\t *                     JointStyle class that specifies the type of joint\r\n\t *                     appearance used at angles. Valid values are:\r\n\t *                     <code>JointStyle.BEVEL</code>,\r\n\t *                     <code>JointStyle.MITER</code>, and\r\n\t *                     <code>JointStyle.ROUND</code>. If a value is not\r\n\t *                     indicated, Flash uses round joints.\r\n\t *\r\n\t *                     <p>For example, the following illustrations show the\r\n\t *                     different <code>joints</code> settings. For each\r\n\t *                     setting, the illustration shows an angled blue line\r\n\t *                     with a thickness of 30(for which the\r\n\t *                     <code>jointStyle</code> applies), and a superimposed\r\n\t *                     angled black line with a thickness of 1(for which no\r\n\t *                     <code>jointStyle</code> applies): </p>\r\n\t *\r\n\t *                     <p><b>Note:</b> For <code>joints</code> set to\r\n\t *                     <code>JointStyle.MITER</code>, you can use the\r\n\t *                     <code>miterLimit</code> parameter to limit the length\r\n\t *                     of the miter.</p>\r\n\t * @param miterLimit  (Not supported in Flash Lite 4) A number that\r\n\t *                     indicates the limit at which a miter is cut off. Valid\r\n\t *                     values range from 1 to 255(and values outside that\r\n\t *                     range are rounded to 1 or 255). This value is only\r\n\t *                     used if the <code>jointStyle</code> is set to\r\n\t *                     <code>\"miter\"</code>. The <code>miterLimit</code>\r\n\t *                     value represents the length that a miter can extend\r\n\t *                     beyond the point at which the lines meet to form a\r\n\t *                     joint. The value expresses a factor of the line\r\n\t *                     <code>thickness</code>. For example, with a\r\n\t *                     <code>miterLimit</code> factor of 2.5 and a\r\n\t *                     <code>thickness</code> of 10 pixels, the miter is cut\r\n\t *                     off at 25 pixels.\r\n\t *\r\n\t *                     <p>For example, consider the following angled lines,\r\n\t *                     each drawn with a <code>thickness</code> of 20, but\r\n\t *                     with <code>miterLimit</code> set to 1, 2, and 4.\r\n\t *                     Superimposed are black reference lines showing the\r\n\t *                     meeting points of the joints:</p>\r\n\t *\r\n\t *                     <p>Notice that a given <code>miterLimit</code> value\r\n\t *                     has a specific maximum angle for which the miter is\r\n\t *                     cut off. The following table lists some examples:</p>\r\n\t */\r\n\tpublic lineStyle(thickness:number = 0, color:number /*int*/ = 0, alpha:number = 1, pixelHinting:boolean = false, scaleMode:LineScaleMode = null, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:number = 3)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws a line using the current line style from the current drawing\r\n\t * position to(<code>x</code>, <code>y</code>); the current drawing position\r\n\t * is then set to(<code>x</code>, <code>y</code>). If the display object in\r\n\t * which you are drawing contains content that was created with the Flash\r\n\t * drawing tools, calls to the <code>lineTo()</code> method are drawn\r\n\t * underneath the content. If you call <code>lineTo()</code> before any calls\r\n\t * to the <code>moveTo()</code> method, the default position for the current\r\n\t * drawing is(<i>0, 0</i>). If any of the parameters are missing, this\r\n\t * method fails and the current drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic lineTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the current drawing position to(<code>x</code>, <code>y</code>). If\r\n\t * any of the parameters are missing, this method fails and the current\r\n\t * drawing position is not changed.\r\n\t *\r\n\t * @param x A number that indicates the horizontal position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t * @param y A number that indicates the vertical position relative to the\r\n\t *          registration point of the parent display object(in pixels).\r\n\t */\r\n\tpublic moveTo(x:number, y:number)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = Graphics;",
    "/**\r\n * The InterpolationMethod class provides values for the\r\n * <code>interpolationMethod</code> parameter in the\r\n * <code>Graphics.beginGradientFill()</code> and\r\n * <code>Graphics.lineGradientStyle()</code> methods. This parameter\r\n * determines the RGB space to use when rendering the gradient.\r\n */\r\nclass InterpolationMethod\r\n{\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static LINEAR_RGB:string = \"linearRGB\";\r\n\r\n\t/**\r\n\t * Specifies that the RGB interpolation method should be used. This means\r\n\t * that the gradient is rendered with exponential sRGB(standard RGB) space.\r\n\t * The sRGB space is a W3C-endorsed standard that defines a non-linear\r\n\t * conversion between red, green, and blue component values and the actual\r\n\t * intensity of the visible component color.\r\n\t *\r\n\t * <p>For example, consider a simple linear gradient between two colors(with\r\n\t * the <code>spreadMethod</code> parameter set to\r\n\t * <code>SpreadMethod.REFLECT</code>). The different interpolation methods\r\n\t * affect the appearance as follows: </p>\r\n\t */\r\n\tpublic static RGB:string = \"rgb\";\r\n}\r\n\r\nexport = InterpolationMethod;",
    "/**\r\n * The JointStyle class is an enumeration of constant values that specify the\r\n * joint style to use in drawing lines. These constants are provided for use\r\n * as values in the <code>joints</code> parameter of the\r\n * <code>flash.display.Graphics.lineStyle()</code> method. The method supports\r\n * three types of joints: miter, round, and bevel, as the following example\r\n * shows:\r\n */\r\nclass JointStyle\r\n{\r\n\t/**\r\n\t * Specifies beveled joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static BEVEL:string = \"bevel\";\r\n\r\n\t/**\r\n\t * Specifies mitered joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static MITER:string = \"miter\";\r\n\r\n\t/**\r\n\t * Specifies round joints in the <code>joints</code> parameter of the\r\n\t * <code>flash.display.Graphics.lineStyle()</code> method.\r\n\t */\r\n\tpublic static ROUND:string = \"round\";\r\n}\r\n\r\nexport = JointStyle;",
    "/**\r\n * The LineScaleMode class provides values for the <code>scaleMode</code>\r\n * parameter in the <code>Graphics.lineStyle()</code> method.\r\n */\r\nclass LineScaleMode\r\n{\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> vertically. For example, consider the following circles, drawn\r\n\t * with a one-pixel line, and each with the <code>scaleMode</code> parameter\r\n\t * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is\r\n\t * scaled only vertically, and the circle on the right is scaled both\r\n\t * vertically and horizontally.\r\n\t */\r\n\tpublic static HORIZONTAL:string = \"horizontal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line never scales.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line always scales\r\n\t * when the object is scaled(the default).\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * With this setting used as the <code>scaleMode</code> parameter of the\r\n\t * <code>lineStyle()</code> method, the thickness of the line scales\r\n\t * <i>only</i> horizontally. For example, consider the following circles,\r\n\t * drawn with a one-pixel line, and each with the <code>scaleMode</code>\r\n\t * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the\r\n\t * left is scaled only horizontally, and the circle on the right is scaled\r\n\t * both vertically and horizontally.\r\n\t */\r\n\tpublic static VERTICAL:string = \"vertical\";\r\n}\r\n\r\nexport = LineScaleMode;",
    "/**\r\n * The PixelSnapping class is an enumeration of constant values for setting\r\n * the pixel snapping options by using the <code>pixelSnapping</code> property\r\n * of a Bitmap object.\r\n */\r\nclass PixelSnapping\r\n{\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is always snapped to the\r\n\t * nearest pixel, independent of any transformation.\r\n\t */\r\n\tpublic static ALWAYS:string = \"always\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that the bitmap image is snapped to the nearest\r\n\t * pixel if it is drawn with no rotation or skew and it is drawn at a scale\r\n\t * factor of 99.9% to 100.1%. If these conditions are satisfied, the image is\r\n\t * drawn at 100% scale, snapped to the nearest pixel. Internally, this\r\n\t * setting allows the image to be drawn as fast as possible by using the\r\n\t * vector renderer.\r\n\t */\r\n\tpublic static AUTO:string = \"auto\";\r\n\r\n\t/**\r\n\t * A constant value used in the <code>pixelSnapping</code> property of a\r\n\t * Bitmap object to specify that no pixel snapping occurs.\r\n\t */\r\n\tpublic static NEVER:string = \"never\";\r\n}\r\n\r\nexport = PixelSnapping;",
    "/**\r\n * The SpreadMethod class provides values for the <code>spreadMethod</code>\r\n * parameter in the <code>beginGradientFill()</code> and\r\n * <code>lineGradientStyle()</code> methods of the Graphics class.\r\n *\r\n * <p>The following example shows the same gradient fill using various spread\r\n * methods:</p>\r\n */\r\nclass SpreadMethod\r\n{\r\n\t/**\r\n\t * Specifies that the gradient use the <i>pad</i> spread method.\r\n\t */\r\n\tpublic static PAD:string = \"pad\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>reflect</i> spread method.\r\n\t */\r\n\tpublic static REFLECT:string = \"reflect\";\r\n\r\n\t/**\r\n\t * Specifies that the gradient use the <i>repeat</i> spread method.\r\n\t */\r\n\tpublic static REPEAT:string = \"repeat\";\r\n}\r\n\r\nexport = SpreadMethod;",
    "/**\r\n * Defines codes for culling algorithms that determine which triangles not to\r\n * render when drawing triangle paths.\r\n *\r\n * <p> The terms <code>POSITIVE</code> and <code>NEGATIVE</code> refer to the\r\n * sign of a triangle's normal along the z-axis. The normal is a 3D vector\r\n * that is perpendicular to the surface of the triangle. </p>\r\n *\r\n * <p> A triangle whose vertices 0, 1, and 2 are arranged in a clockwise order\r\n * has a positive normal value. That is, its normal points in a positive\r\n * z-axis direction, away from the current view point. When the\r\n * <code>TriangleCulling.POSITIVE</code> algorithm is used, triangles with\r\n * positive normals are not rendered. Another term for this is backface\r\n * culling. </p>\r\n *\r\n * <p> A triangle whose vertices are arranged in a counter-clockwise order has\r\n * a negative normal value. That is, its normal points in a negative z-axis\r\n * direction, toward the current view point. When the\r\n * <code>TriangleCulling.NEGATIVE</code> algorithm is used, triangles with\r\n * negative normals will not be rendered. </p>\r\n */\r\nclass TriangleCulling\r\n{\r\n\t/**\r\n\t * Specifies culling of all triangles facing toward the current view point.\r\n\t */\r\n\tpublic static NEGATIVE:string = \"negative\";\r\n\r\n\t/**\r\n\t * Specifies no culling. All triangles in the path are rendered.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies culling of all triangles facing away from the current view\r\n\t * point. This is also known as backface culling.\r\n\t */\r\n\tpublic static POSITIVE:string = \"positive\";\r\n}\r\n\r\nexport = TriangleCulling;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * The Billboard class represents display objects that represent bitmap images.\r\n * These can be images that you load with the <code>flash.Assets</code> or\r\n * <code>flash.display.Loader</code> classes, or they can be images that you\r\n * create with the <code>Billboard()</code> constructor.\r\n *\r\n * <p>The <code>Billboard()</code> constructor allows you to create a Billboard\r\n * object that contains a reference to a Image2D object. After you create a\r\n * Billboard object, use the <code>addChild()</code> or <code>addChildAt()</code>\r\n * method of the parent DisplayObjectContainer instance to place the bitmap on\r\n * the display list.</p>\r\n *\r\n * <p>A Billboard object can share its Image2D reference among several Billboard\r\n * objects, independent of translation or rotation properties. Because you can\r\n * create multiple Billboard objects that reference the same Image2D object,\r\n * multiple display objects can use the same complex Image2D object without\r\n * incurring the memory overhead of a Image2D object for each display\r\n * object instance.</p>\r\n *\r\n * <p>A Image2D object can be drawn to the screen by a Billboard object in one\r\n * of two ways: by using the default hardware renderer with a single hardware surface,\r\n * or by using the slower software renderer when 3D acceleration is not available.</p>\r\n *\r\n * <p>If you would prefer to perform a batch rendering command, rather than using a\r\n * single surface for each Billboard object, you can also draw to the screen using the\r\n * <code>drawTiles()</code> or <code>drawTriangles()</code> methods which are\r\n * available to <code>flash.display.Tilesheet</code> and <code>flash.display.Graphics\r\n * objects.</code></p>\r\n *\r\n * <p><b>Note:</b> The Billboard class is not a subclass of the InteractiveObject\r\n * class, so it cannot dispatch mouse events. However, you can use the\r\n * <code>addEventListener()</code> method of the display object container that\r\n * contains the Billboard object.</p>\r\n */\r\n\r\nclass Billboard extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Billboard]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _billboardWidth:number;\r\n\tprivate _billboardHeight:number;\r\n\tprivate _billboardRect:Rectangle;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _parentColorTransform:ColorTransform;\r\n\r\n\tprivate onSizeChangedDelegate:(event:MaterialEvent) => void;\r\n\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Billboard.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The Image2D object being referenced.\r\n\t */\r\n\tpublic image2D:Image2D; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardRect():Rectangle\r\n\t{\r\n\t\treturn this._billboardRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardHeight():number\r\n\t{\r\n\t\treturn this._billboardHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get billboardWidth():number\r\n\t{\r\n\t\treturn this._billboardWidth;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iRemoveOwner(this);\r\n\t\t\tthis._material.removeEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this._material) {\r\n\t\t\tthis._material.iAddOwner(this);\r\n\t\t\tthis._material.addEventListener(MaterialEvent.SIZE_CHANGED, this.onSizeChangedDelegate);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls whether or not the Billboard object is snapped to the nearest pixel.\r\n\t * This value is ignored in the native and HTML5 targets.\r\n\t * The PixelSnapping class includes possible values:\r\n\t * <ul>\r\n\t *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>\r\n\t *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to\r\n\t * the nearest pixel, independent of transformation.</li>\r\n\t *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the\r\n\t * nearest pixel if it is drawn with no rotation or skew and it is drawn at a\r\n\t * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the\r\n\t * bitmap image is drawn at 100% scale, snapped to the nearest pixel.\r\n\t * When targeting Flash Player, this value allows the image to be drawn as fast\r\n\t * as possible using the internal vector renderer.</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic pixelSnapping:string; //TODO\r\n\r\n\t/**\r\n\t * Controls whether or not the bitmap is smoothed when scaled. If\r\n\t * <code>true</code>, the bitmap is smoothed when scaled. If\r\n\t * <code>false</code>, the bitmap is not smoothed when scaled.\r\n\t */\r\n\tpublic smoothing:boolean; //TODO\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\t// outputs the concaneted color-transform\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// set this on the inheritet colorTransform\r\n\t\tthis.transform.colorTransform = value;\r\n\t\t// new calculate the concaneted transform\r\n\t\tthis._applyColorTransform();\r\n\r\n\t}\r\n\r\n\tpublic get parentColorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._parentColorTransform;\r\n\t}\r\n\r\n\tpublic set parentColorTransform(value:ColorTransform)\r\n\t{\r\n\t\t// we will never modify the parentColorTransform directly, so save to set as reference (?)\r\n\t\tthis._parentColorTransform = value;\r\n\t\tthis._applyColorTransform();\r\n\t}\r\n\r\n\tprivate _applyColorTransform()\r\n\t{\r\n\t\tthis._colorTransform=new ColorTransform();\r\n\t\tif ((this._parentColorTransform)&&(this.transform.colorTransform)){\r\n\t\t\t// if this mc has a parent-colortransform applied, we need to concanete the transforms.\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier * this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier * this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier * this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier * this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset + this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset + this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset + this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset + this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this.transform.colorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this.transform.colorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this.transform.colorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this.transform.colorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this.transform.colorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this.transform.colorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this.transform.colorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this.transform.colorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this.transform.colorTransform.greenOffset;\r\n\t\t}\r\n\t\telse if (this._parentColorTransform){\r\n\t\t\tthis._colorTransform.alphaMultiplier   = this._parentColorTransform.alphaMultiplier;\r\n\t\t\tthis._colorTransform.redMultiplier     = this._parentColorTransform.redMultiplier;\r\n\t\t\tthis._colorTransform.blueMultiplier    = this._parentColorTransform.blueMultiplier;\r\n\t\t\tthis._colorTransform.greenMultiplier   = this._parentColorTransform.greenMultiplier;\r\n\t\t\tthis._colorTransform.alphaOffset       = this._parentColorTransform.alphaOffset;\r\n\t\t\tthis._colorTransform.redOffset         = this._parentColorTransform.redOffset;\r\n\t\t\tthis._colorTransform.blueOffset        = this._parentColorTransform.blueOffset;\r\n\t\t\tthis._colorTransform.greenOffset       = this._parentColorTransform.greenOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(material:MaterialBase, pixelSnapping:string = \"auto\", smoothing:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.onSizeChangedDelegate = (event:MaterialEvent) => this.onSizeChanged(event);\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t\tthis._billboardHeight = material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\r\n\t\tthis._billboardWidth = material.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.width = this._billboardRect.width;\r\n\t\tthis._pBoxBounds.height = this._billboardRect.height;\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Billboard = new Billboard(this.material);\r\n\t\treturn clone;\r\n\t}\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\treturn this._pPickingCollider.testBillboardCollision(this, this.material, this._pPickingCollisionVO, shortestCollisionDistance);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate onSizeChanged(event:MaterialEvent)\r\n\t{\r\n\t\tthis._billboardWidth = this._material.width;\r\n\t\tthis._billboardHeight = this._material.height;\r\n\r\n\t\tthis._billboardRect = this._material.frameRect || new Rectangle(0, 0, this._billboardWidth, this._billboardHeight);\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = Billboard;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport ProjectionEvent\t\t\t\t= require(\"awayjs-core/lib/events/ProjectionEvent\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CameraEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/CameraEvent\");\r\n\r\n\r\nclass Camera extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Camera]\";\r\n\r\n\tprivate _viewProjection:Matrix3D = new Matrix3D();\r\n\tprivate _viewProjectionDirty:Boolean = true;\r\n\tprivate _projection:IProjection;\r\n\tprivate _frustumPlanes:Array<Plane3D>;\r\n\tprivate _frustumPlanesDirty:Boolean = true;\r\n\tprivate _onProjectionMatrixChangedDelegate:(event:ProjectionEvent) => void;\r\n\r\n\tconstructor(projection:IProjection = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._onProjectionMatrixChangedDelegate = (event:ProjectionEvent) => this.onProjectionMatrixChanged(event);\r\n\r\n\t\tthis._projection = projection || new PerspectiveProjection();\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\r\n\t\tthis._frustumPlanes = [];\r\n\r\n\t\tfor (var i:number = 0; i < 6; ++i)\r\n\t\t\tthis._frustumPlanes[i] = new Plane3D();\r\n\r\n\t\tthis.z = -1000;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Camera.assetType;\r\n\t}\r\n\r\n\tprivate onProjectionMatrixChanged(event:ProjectionEvent)\r\n\t{\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t\tthis.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic get frustumPlanes():Array<Plane3D>\r\n\t{\r\n\t\tif (this._frustumPlanesDirty)\r\n\t\t\tthis.updateFrustum();\r\n\r\n\t\treturn this._frustumPlanes;\r\n\t}\r\n\r\n\tprivate updateFrustum()\r\n\t{\r\n\t\tvar a:number, b:number, c:number;\r\n\t\t//var d : Number;\r\n\t\tvar c11:number, c12:number, c13:number, c14:number;\r\n\t\tvar c21:number, c22:number, c23:number, c24:number;\r\n\t\tvar c31:number, c32:number, c33:number, c34:number;\r\n\t\tvar c41:number, c42:number, c43:number, c44:number;\r\n\t\tvar p:Plane3D;\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\t;//new Array(16 );away.utils.Matrix3DUtils.RAW_DATA_CONTAINER;//[];\r\n\t\tvar invLen:number;\r\n\t\tthis.viewProjection.copyRawDataTo(raw);\r\n\r\n\t\tc11 = raw[0];\r\n\t\tc12 = raw[4];\r\n\t\tc13 = raw[8];\r\n\t\tc14 = raw[12];\r\n\t\tc21 = raw[1];\r\n\t\tc22 = raw[5];\r\n\t\tc23 = raw[9];\r\n\t\tc24 = raw[13];\r\n\t\tc31 = raw[2];\r\n\t\tc32 = raw[6];\r\n\t\tc33 = raw[10];\r\n\t\tc34 = raw[14];\r\n\t\tc41 = raw[3];\r\n\t\tc42 = raw[7];\r\n\t\tc43 = raw[11];\r\n\t\tc44 = raw[15];\r\n\r\n\t\t// left plane\r\n\t\tp = this._frustumPlanes[0];\r\n\t\ta = c41 + c11;\r\n\t\tb = c42 + c12;\r\n\t\tc = c43 + c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c14)*invLen;\r\n\r\n\t\t// right plane\r\n\t\tp = this._frustumPlanes[1];\r\n\t\ta = c41 - c11;\r\n\t\tb = c42 - c12;\r\n\t\tc = c43 - c13;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c14 - c44)*invLen;\r\n\r\n\t\t// bottom\r\n\t\tp = this._frustumPlanes[2];\r\n\t\ta = c41 + c21;\r\n\t\tb = c42 + c22;\r\n\t\tc = c43 + c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -(c44 + c24)*invLen;\r\n\r\n\t\t// top\r\n\t\tp = this._frustumPlanes[3];\r\n\t\ta = c41 - c21;\r\n\t\tb = c42 - c22;\r\n\t\tc = c43 - c23;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c24 - c44)*invLen;\r\n\r\n\t\t// near\r\n\t\tp = this._frustumPlanes[4];\r\n\t\ta = c31;\r\n\t\tb = c32;\r\n\t\tc = c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = -c34*invLen;\r\n\r\n\t\t// far\r\n\t\tp = this._frustumPlanes[5];\r\n\t\ta = c41 - c31;\r\n\t\tb = c42 - c32;\r\n\t\tc = c43 - c33;\r\n\t\tinvLen = 1/Math.sqrt(a*a + b*b + c*c);\r\n\t\tp.a = a*invLen;\r\n\t\tp.b = b*invLen;\r\n\t\tp.c = c*invLen;\r\n\t\tp.d = (c34 - c44)*invLen;\r\n\r\n\t\tthis._frustumPlanesDirty = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic pInvalidateSceneTransform()\r\n\t{\r\n\t\tsuper.pInvalidateSceneTransform();\r\n\r\n\t\tthis._viewProjectionDirty = true;\r\n\t\tthis._frustumPlanesDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get projection():IProjection\r\n\t{\r\n\t\treturn this._projection;\r\n\t}\r\n\r\n\tpublic set projection(value:IProjection)\r\n\t{\r\n\t\tif (this._projection == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!value)\r\n\t\t\tthrow new Error(\"Projection cannot be null!\");\r\n\r\n\t\tthis._projection.removeEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis._projection = value;\r\n\t\tthis._projection.addEventListener(ProjectionEvent.MATRIX_CHANGED, this._onProjectionMatrixChangedDelegate);\r\n\t\tthis.dispatchEvent(new CameraEvent(CameraEvent.PROJECTION_CHANGED, this));\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get viewProjection():Matrix3D\r\n\t{\r\n\t\tif (this._viewProjectionDirty) {\r\n\t\t\tthis._viewProjection.copyFrom(this.inverseSceneTransform);\r\n\t\t\tthis._viewProjection.append(this._projection.matrix);\r\n\t\t\tthis._viewProjectionDirty = false;\r\n\t\t}\r\n\r\n\t\treturn this._viewProjection;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the ray in scene space from the camera to the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, -1 corresponds to the left edge of the viewport, 1 to the right.\r\n\t * @param nY The normalised y coordinate in screen space, -1 corresponds to the top edge of the viewport, 1 to the bottom.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The ray from the camera to the scene space position of the given screen coordinates.\r\n\t */\r\n\tpublic getRay(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.deltaTransformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the normalised position in screen space of the given scene position.\r\n\t *\r\n\t * @param point3d the position vector of the scene coordinates to be projected.\r\n\t * @return The normalised screen position of the given scene coordinates.\r\n\t */\r\n\tpublic project(point3d:Vector3D):Vector3D\r\n\t{\r\n\t\treturn this._projection.project(this.inverseSceneTransform.transformVector(point3d));\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the scene position of the given normalized coordinates in screen space.\r\n\t *\r\n\t * @param nX The normalised x coordinate in screen space, minus the originX offset of the projection property.\r\n\t * @param nY The normalised y coordinate in screen space, minus the originY offset of the projection property.\r\n\t * @param sZ The z coordinate in screen space, representing the distance into the screen.\r\n\t * @return The scene position of the given screen coordinates.\r\n\t */\r\n\tpublic unproject(nX:number, nY:number, sZ:number):Vector3D\r\n\t{\r\n\t\treturn this.sceneTransform.transformVector(this._projection.unproject(nX, nY, sZ));\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterCamera(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterCamera(this);\r\n\t}\r\n}\r\n\r\nexport = Camera;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass DirectionalLight extends LightBase implements IEntity\r\n{\r\n\tprivate _direction:Vector3D;\r\n\tprivate _tmpLookAt:Vector3D;\r\n\tprivate _sceneDirection:Vector3D;\r\n\tprivate _pAabbPoints:Array<number> = new Array<number>(24);\r\n\tprivate _projAABBPoints:Array<number>;\r\n\r\n\tconstructor(xDir:number = 0, yDir:number = -1, zDir:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.direction = new Vector3D(xDir, yDir, zDir);\r\n\r\n\t\tthis._sceneDirection = new Vector3D();\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get sceneDirection():Vector3D\r\n\t{\r\n\t\tif (this._pSceneTransformDirty)\r\n\t\t\tthis.pUpdateSceneTransform();\r\n\r\n\t\treturn this._sceneDirection;\r\n\t}\r\n\r\n\tpublic get direction():Vector3D\r\n\t{\r\n\t\treturn this._direction;\r\n\t}\r\n\r\n\tpublic set direction(value:Vector3D)\r\n\t{\r\n\t\tthis._direction = value;\r\n\r\n\t\tif (!this._tmpLookAt)\r\n\t\t\tthis._tmpLookAt = new Vector3D();\r\n\r\n\t\tthis._tmpLookAt.x = this.x + this._direction.x;\r\n\t\tthis._tmpLookAt.y = this.y + this._direction.y;\r\n\t\tthis._tmpLookAt.z = this.z + this._direction.z;\r\n\r\n\t\tthis.lookAt(this._tmpLookAt);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateSceneTransform()\r\n\t{\r\n\t\tsuper.pUpdateSceneTransform();\r\n\t\tthis.sceneTransform.copyColumnTo(2, this._sceneDirection);\r\n\t\tthis._sceneDirection.normalize();\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateShadowMapper():DirectionalShadowMapper\r\n\t{\r\n\t\treturn new DirectionalShadowMapper();\r\n\t}\r\n\r\n\t//override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tif (!this._projAABBPoints)\r\n\t\t\tthis._projAABBPoints = [];\r\n\r\n\t\tm.transformVectors(this._pAabbPoints, this._projAABBPoints);\r\n\r\n\t\tvar xMin:number = Infinity, xMax:number = -Infinity;\r\n\t\tvar yMin:number = Infinity, yMax:number = -Infinity;\r\n\t\tvar zMin:number = Infinity, zMax:number = -Infinity;\r\n\t\tvar d:number;\r\n\t\tfor (var i:number = 0; i < 24;) {\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < xMin)\r\n\t\t\t\txMin = d;\r\n\r\n\t\t\tif (d > xMax)\r\n\t\t\t\txMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < yMin)\r\n\t\t\t\tyMin = d;\r\n\r\n\t\t\tif (d > yMax)\r\n\t\t\t\tyMax = d;\r\n\r\n\t\t\td = this._projAABBPoints[i++];\r\n\r\n\t\t\tif (d < zMin)\r\n\t\t\t\tzMin = d;\r\n\r\n\t\t\tif (d > zMax)\r\n\t\t\t\tzMax = d;\r\n\t\t}\r\n\r\n\t\tvar invXRange:number = 1/(xMax - xMin);\r\n\t\tvar invYRange:number = 1/(yMax - yMin);\r\n\t\tvar invZRange:number = 1/(zMax - zMin);\r\n\t\traw[0] = 2*invXRange;\r\n\t\traw[5] = 2*invYRange;\r\n\t\traw[10] = invZRange;\r\n\t\traw[12] = -(xMax + xMin)*invXRange;\r\n\t\traw[13] = -(yMax + yMin)*invYRange;\r\n\t\traw[14] = -zMin*invZRange;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\t\traw[15] = 1;\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterDirectionalLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterDirectionalLight(this);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\t//update points\r\n\t\tvar minX:number = this._pBoxBounds.x;\r\n\t\tvar minY:number = this._pBoxBounds.y - this._pBoxBounds.height;\r\n\t\tvar minZ:number = this._pBoxBounds.z;\r\n\t\tvar maxX:number = this._pBoxBounds.x + this._pBoxBounds.width;\r\n\t\tvar maxY:number = this._pBoxBounds.y;\r\n\t\tvar maxZ:number = this._pBoxBounds.z + this._pBoxBounds.depth;\r\n\r\n\t\tthis._pAabbPoints[0] = minX;\r\n\t\tthis._pAabbPoints[1] = minY;\r\n\t\tthis._pAabbPoints[2] = minZ;\r\n\t\tthis._pAabbPoints[3] = maxX;\r\n\t\tthis._pAabbPoints[4] = minY;\r\n\t\tthis._pAabbPoints[5] = minZ;\r\n\t\tthis._pAabbPoints[6] = minX;\r\n\t\tthis._pAabbPoints[7] = maxY;\r\n\t\tthis._pAabbPoints[8] = minZ;\r\n\t\tthis._pAabbPoints[9] = maxX;\r\n\t\tthis._pAabbPoints[10] = maxY;\r\n\t\tthis._pAabbPoints[11] = minZ;\r\n\t\tthis._pAabbPoints[12] = minX;\r\n\t\tthis._pAabbPoints[13] = minY;\r\n\t\tthis._pAabbPoints[14] = maxZ;\r\n\t\tthis._pAabbPoints[15] = maxX;\r\n\t\tthis._pAabbPoints[16] = minY;\r\n\t\tthis._pAabbPoints[17] = maxZ;\r\n\t\tthis._pAabbPoints[18] = minX;\r\n\t\tthis._pAabbPoints[19] = maxY;\r\n\t\tthis._pAabbPoints[20] = maxZ;\r\n\t\tthis._pAabbPoints[21] = maxX;\r\n\t\tthis._pAabbPoints[22] = maxY;\r\n\t\tthis._pAabbPoints[23] = maxZ;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLight;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\nclass LightProbe extends LightBase implements IEntity\r\n{\r\n\tprivate _diffuseMap:ImageCube;\r\n\tprivate _specularMap:ImageCube;\r\n\r\n\tconstructor(diffuseMap:ImageCube, specularMap:ImageCube = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._diffuseMap = diffuseMap;\r\n\t\tthis._specularMap = specularMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get diffuseMap():ImageCube\r\n\t{\r\n\t\treturn this._diffuseMap;\r\n\t}\r\n\r\n\tpublic set diffuseMap(value:ImageCube)\r\n\t{\r\n\t\tthis._diffuseMap = value;\r\n\t}\r\n\r\n\tpublic get specularMap():ImageCube\r\n\t{\r\n\t\treturn this._specularMap;\r\n\t}\r\n\r\n\tpublic set specularMap(value:ImageCube)\r\n\t{\r\n\t\tthis._specularMap = value;\r\n\t}\r\n\r\n\t//@override\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tthrow new Error(\"Object projection matrices are not supported for LightProbe objects!\");\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterLightProbe(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterLightProbe(this);\r\n\t}\r\n}\r\n\r\nexport = LightProbe;",
    "﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A Line Segment primitive.\r\n */\r\nclass LineSegment extends DisplayObject implements IEntity, IRenderableOwner\r\n{\r\n\tpublic static assetType:string = \"[asset LineSegment]\";\r\n\r\n\tprivate _animator:IAnimator;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\r\n\tpublic _startPosition:Vector3D;\r\n\tpublic _endPosition:Vector3D;\r\n\tpublic _halfThickness:number;\r\n\r\n\t/**\r\n\t * Defines the animator of the line segment. Act on the line segment's geometry. Defaults to null\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LineSegment.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get startPostion():Vector3D\r\n\t{\r\n\t\treturn this._startPosition;\r\n\t}\r\n\r\n\tpublic set startPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._startPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._startPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get endPosition():Vector3D\r\n\t{\r\n\t\treturn this._endPosition;\r\n\t}\r\n\r\n\tpublic set endPosition(value:Vector3D)\r\n\t{\r\n\t\tif (this._endPosition == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._endPosition = value;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iRemoveOwner(this);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tif (this.material)\r\n\t\t\tthis.material.iAddOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get thickness():number\r\n\t{\r\n\t\treturn this._halfThickness*2;\r\n\t}\r\n\r\n\tpublic set thickness(value:number)\r\n\t{\r\n\t\tif (this._halfThickness == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._halfThickness = value*0.5;\r\n\r\n\t\tthis.notifyRenderableUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a line segment\r\n\t *\r\n\t * @param startPosition Start position of the line segment\r\n\t * @param endPosition Ending position of the line segment\r\n\t * @param thickness Thickness of the line\r\n\t */\r\n\tconstructor(material:MaterialBase, startPosition:Vector3D, endPosition:Vector3D, thickness:number = 1)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis._startPosition = startPosition;\r\n\t\tthis._endPosition = endPosition;\r\n\t\tthis._halfThickness = thickness*0.5;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._startPosition = null;\r\n\t\tthis._endPosition = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tthis._pBoxBounds.x = Math.min(this._startPosition.x, this._endPosition.x);\r\n\t\tthis._pBoxBounds.y = Math.min(this._startPosition.y, this._endPosition.y);\r\n\t\tthis._pBoxBounds.z = Math.min(this._startPosition.z, this._endPosition.z);\r\n\t\tthis._pBoxBounds.width = Math.abs(this._startPosition.x - this._endPosition.x);\r\n\t\tthis._pBoxBounds.height = Math.abs(this._startPosition.y - this._endPosition.y);\r\n\t\tthis._pBoxBounds.depth = Math.abs(this._startPosition.z - this._endPosition.z);\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pUpdateBoxBounds();\r\n\r\n\t\tvar halfWidth:number = (this._endPosition.x - this._startPosition.x)/2;\r\n\t\tvar halfHeight:number = (this._endPosition.y - this._startPosition.y)/2;\r\n\t\tvar halfDepth:number = (this._endPosition.z - this._startPosition.z)/2;\r\n\t\tthis._pSphereBounds.x = this._startPosition.x + halfWidth;\r\n\t\tthis._pSphereBounds.y = this._startPosition.y + halfHeight;\r\n\t\tthis._pSphereBounds.z = this._startPosition.z + halfDepth;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(halfWidth*halfWidth + halfHeight*halfHeight + halfDepth*halfDepth);\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tprivate notifyRenderableUpdate()\r\n\t{\r\n\t\tvar len:number = this._pRenderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._pRenderables[i].invalidateGeometry(); //TODO improve performance by only using one geometry for all line segments\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\trenderer._iApplyRenderableOwner(this);\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n}\r\n\r\nexport = LineSegment;",
    "﻿import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport ISubMesh\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport GeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/GeometryEvent\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport DisplayObjectContainer\t\t= require(\"awayjs-display/lib/containers/DisplayObjectContainer\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport SubMeshPool\t\t\t\t\t= require(\"awayjs-display/lib/pool/SubMeshPool\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * Mesh is an instance of a Geometry, augmenting it with a presence in the scene graph, a material, and an animation\r\n * state. It consists out of SubMeshes, which in turn correspond to SubGeometries. SubMeshes allow different parts\r\n * of the geometry to be assigned different materials.\r\n */\r\nclass Mesh extends DisplayObjectContainer implements IEntity\r\n{\r\n\tpublic static assetType:string = \"[asset Mesh]\";\r\n\r\n\tprivate _uvTransform:UVTransform;\r\n\r\n\tprivate _subMeshes:Array<ISubMesh>;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _material:MaterialBase;\r\n\tprivate _animator:IAnimator;\r\n\tprivate _castsShadows:boolean = true;\r\n\tprivate _shareAnimationGeometry:boolean = true;\r\n\r\n\tprivate _onGeometryBoundsInvalidDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryAddedDelegate:(event:GeometryEvent) => void;\r\n\tprivate _onSubGeometryRemovedDelegate:(event:GeometryEvent) => void;\r\n\r\n\t/**\r\n\t * Defines the animator of the mesh. Act on the mesh's geometry.  Default value is <code>null</code>.\r\n\t */\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\tpublic set animator(value:IAnimator)\r\n\t{\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.removeOwner(this);\r\n\r\n\t\tthis._animator = value;\r\n\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\t// cause material to be unregistered and registered again to work with the new animation type (if possible)\r\n\t\t\tif (subMesh.material) {\r\n\t\t\t\tsubMesh.material.iRemoveOwner(subMesh);\r\n\t\t\t\tsubMesh.material.iAddOwner(subMesh);\r\n\t\t\t}\r\n\r\n\t\t\t//invalidate any existing renderables in case they need to pull new geometry\r\n\t\t\tsubMesh._iInvalidateRenderableGeometry();\r\n\t\t}\r\n\r\n\t\tif (this._animator)\r\n\t\t\tthis._animator.addOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Mesh.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Mesh can cast shadows. Default value is <code>true</code>.\r\n\t */\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn this._castsShadows;\r\n\t}\r\n\r\n\tpublic set castsShadows(value:boolean)\r\n\t{\r\n\t\tthis._castsShadows = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The geometry used by the mesh that provides it with its shape.\r\n\t */\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\tpublic set geometry(value:Geometry)\r\n\t{\r\n\t\tvar i:number;\r\n\r\n\t\tif (this._geometry) {\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.removeEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tfor (i = 0; i < this._subMeshes.length; ++i)\r\n\t\t\t\tthis._subMeshes[i].dispose();\r\n\r\n\t\t\tthis._subMeshes.length = 0;\r\n\t\t}\r\n\r\n\t\tthis._geometry = value;\r\n\r\n\t\tif (this._geometry) {\r\n\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.BOUNDS_INVALID, this._onGeometryBoundsInvalidDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_ADDED, this._onSubGeometryAddedDelegate);\r\n\t\t\tthis._geometry.addEventListener(GeometryEvent.SUB_GEOMETRY_REMOVED, this._onSubGeometryRemovedDelegate);\r\n\r\n\t\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\r\n\t\t\tfor (i = 0; i < subGeoms.length; ++i)\r\n\t\t\t\tthis.addSubMesh(subGeoms[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the Mesh.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tvar i:number;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iRemoveOwner(subMesh);\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tif (this._material && (subMesh = this._subMeshes[i]).material == this._material)\r\n\t\t\t\tthis._material.iAddOwner(subMesh);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the mesh share the same animation geometry.\r\n\t */\r\n\tpublic get shareAnimationGeometry():boolean\r\n\t{\r\n\t\treturn this._shareAnimationGeometry;\r\n\t}\r\n\r\n\tpublic set shareAnimationGeometry(value:boolean)\r\n\t{\r\n\t\tthis._shareAnimationGeometry = value;\r\n\t}\r\n\r\n\t/**\r\n\t * The SubMeshes out of which the Mesh consists. Every SubMesh can be assigned a material to override the Mesh's\r\n\t * material.\r\n\t */\r\n\tpublic get subMeshes():Array<ISubMesh>\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\treturn this._subMeshes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._pColorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tsuper._pSetColorTransform(value);\r\n\t}\r\n\t/**\r\n\t * Create a new Mesh object.\r\n\t *\r\n\t * @param geometry                    The geometry used by the mesh that provides it with its shape.\r\n\t * @param material    [optional]        The material with which to render the Mesh.\r\n\t */\r\n\tconstructor(geometry:Geometry, material:MaterialBase = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._subMeshes = new Array<ISubMesh>();\r\n\r\n\t\tthis._onGeometryBoundsInvalidDelegate = (event:GeometryEvent) => this.onGeometryBoundsInvalid(event);\r\n\t\tthis._onSubGeometryAddedDelegate = (event:GeometryEvent) => this.onSubGeometryAdded(event);\r\n\t\tthis._onSubGeometryRemovedDelegate = (event:GeometryEvent) => this.onSubGeometryRemoved(event);\r\n\r\n\t\t//this should never happen, but if people insist on trying to create their meshes before they have geometry to fill it, it becomes necessary\r\n\t\tthis.geometry = geometry || new Geometry();\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.AXIS_ALIGNED_BOX;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic bakeTransformations()\r\n\t{\r\n\t\tthis.geometry.applyTransformation(this._iMatrix3D);\r\n\t\tthis._iMatrix3D.identity();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tsuper.dispose();\r\n\r\n\t\tthis.material = null;\r\n\t\tthis.geometry = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes mesh including the animator and children. This is a merely a convenience method.\r\n\t * @return\r\n\t */\r\n\tpublic disposeWithAnimatorAndChildren()\r\n\t{\r\n\t\tthis.disposeWithChildren();\r\n\r\n\t\t if (this._animator)\r\n\t\t\tthis._animator.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Clones this Mesh instance along with all it's children, while re-using the same\r\n\t * material, geometry and animation set. The returned result will be a copy of this mesh,\r\n\t * containing copies of all of it's children.\r\n\t *\r\n\t * Properties that are re-used (i.e. not cloned) by the new copy include name,\r\n\t * geometry, and material. Properties that are cloned or created anew for the copy\r\n\t * include subMeshes, children of the mesh, and the animator.\r\n\t *\r\n\t * If you want to copy just the mesh, reusing it's geometry and material while not\r\n\t * cloning it's children, the simplest way is to create a new mesh manually:\r\n\t *\r\n\t * <code>\r\n\t * var clone : Mesh = new Mesh(original.geometry, original.material);\r\n\t * </code>\r\n\t */\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Mesh = new Mesh(null, null);\r\n\r\n        this._iCopyToMesh(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n    public _iCopyToMesh(clone:Mesh):void\r\n    {\r\n        clone.geometry = this._geometry;\r\n        clone.material = this._material;\r\n        clone._iMatrix3D = this._iMatrix3D;\r\n        clone.pivot = this.pivot;\r\n        clone.partition = this.partition;\r\n        clone.boundsType = this.boundsType;\r\n\r\n\r\n        clone.name = this.name;\r\n        clone.castsShadows = this.castsShadows;\r\n        clone.shareAnimationGeometry = this.shareAnimationGeometry;\r\n        clone.mouseEnabled = this.mouseEnabled;\r\n        clone.mouseChildren = this.mouseChildren;\r\n        //this is of course no proper cloning\r\n        //maybe use this instead?: http://blog.another-d-mention.ro/programming/how-to-clone-duplicate-an-object-in-actionscript-3/\r\n        clone.extra = this.extra;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\r\n        var len:number = this._subMeshes.length;\r\n        for (var i:number = 0; i < len; ++i)\r\n            clone._subMeshes[i].material = this._subMeshes[i]._iGetExplicitMaterial();\r\n\r\n\r\n        len = this.numChildren;\r\n        var obj:any;\r\n\r\n        for (i = 0; i < len; ++i) {\r\n            obj = this.getChildAt(i).clone();\r\n            clone.addChild(<DisplayObjectContainer> obj);\r\n        }\r\n\r\n        if (this._animator)\r\n            clone.animator = this._animator.clone();\r\n    }\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param subGeometry\r\n\t * @returns {SubMeshBase}\r\n\t */\r\n\tpublic getSubMeshFromSubGeometry(subGeometry:SubGeometryBase):ISubMesh\r\n\t{\r\n\t\treturn this._subMeshes[this._geometry.subGeometries.indexOf(subGeometry)];\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pUpdateBoxBounds()\r\n\t{\r\n\t\tsuper._pUpdateBoxBounds();\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar minX:number, minY:number, minZ:number;\r\n\t\tvar maxX:number, maxY:number, maxZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tminX = maxX = boundingPositions[i];\r\n\t\t\tminY = maxY = boundingPositions[i + 1];\r\n\t\t\tminZ = maxZ = boundingPositions[i + 2];\r\n\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i+=3) {\r\n\t\t\t\t\tp = boundingPositions[i];\r\n\t\t\t\t\tif (p < minX)\r\n\t\t\t\t\t\tminX = p;\r\n\t\t\t\t\telse if (p > maxX)\r\n\t\t\t\t\t\tmaxX = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 1];\r\n\r\n\t\t\t\t\tif (p < minY)\r\n\t\t\t\t\t\tminY = p;\r\n\t\t\t\t\telse if (p > maxY)\r\n\t\t\t\t\t\tmaxY = p;\r\n\r\n\t\t\t\t\tp = boundingPositions[i + 2];\r\n\r\n\t\t\t\t\tif (p < minZ)\r\n\t\t\t\t\t\tminZ = p;\r\n\t\t\t\t\telse if (p > maxZ)\r\n\t\t\t\t\t\tmaxZ = p;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pBoxBounds.width = maxX - (this._pBoxBounds.x = minX);\r\n\t\t\tthis._pBoxBounds.height = maxY - (this._pBoxBounds.y = minY);\r\n\t\t\tthis._pBoxBounds.depth = maxZ - (this._pBoxBounds.z = minZ);\r\n\t\t} else {\r\n\t\t\tthis._pBoxBounds.setEmpty();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tvar box:Box = this.getBox();\r\n\t\tvar centerX:number = box.x + box.width/2;\r\n\t\tvar centerY:number = box.y + box.height/2;\r\n\t\tvar centerZ:number = box.z + box.depth/2;\r\n\r\n\t\tvar i:number, j:number, p:number, len:number;\r\n\t\tvar subGeoms:Array<SubGeometryBase> = this._geometry.subGeometries;\r\n\t\tvar subGeom:SubGeometryBase;\r\n\t\tvar boundingPositions:Float32Array;\r\n\t\tvar numSubGeoms:number = subGeoms.length;\r\n\t\tvar maxRadiusSquared:number = 0;\r\n\t\tvar radiusSquared:number;\r\n\t\tvar distanceX:number;\r\n\t\tvar distanceY:number;\r\n\t\tvar distanceZ:number;\r\n\r\n\t\tif (numSubGeoms > 0) {\r\n\t\t\ti = 0;\r\n\t\t\tsubGeom = subGeoms[0];\r\n\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\tfor (j = 0; j < numSubGeoms; j++) {\r\n\t\t\t\tsubGeom = subGeoms[j];\r\n\t\t\t\tboundingPositions = subGeom.getBoundingPositions();\r\n\t\t\t\tlen = boundingPositions.length;\r\n\r\n\t\t\t\tfor (i = 0; i < len; i += 3) {\r\n\t\t\t\t\tdistanceX = boundingPositions[i] - centerX;\r\n\t\t\t\t\tdistanceY = boundingPositions[i + 1] - centerY;\r\n\t\t\t\t\tdistanceZ = boundingPositions[i + 2] - centerZ;\r\n\t\t\t\t\tradiusSquared = distanceX*distanceX + distanceY*distanceY + distanceZ*distanceZ;\r\n\r\n\t\t\t\t\tif (maxRadiusSquared < radiusSquared)\r\n\t\t\t\t\t\tmaxRadiusSquared = radiusSquared;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._pSphereBounds.x = centerX;\r\n\t\tthis._pSphereBounds.y = centerY;\r\n\t\tthis._pSphereBounds.z = centerZ;\r\n\t\tthis._pSphereBounds.radius = Math.sqrt(maxRadiusSquared);\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onGeometryBoundsInvalid(event:GeometryEvent)\r\n\t{\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was added to the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryAdded(event:GeometryEvent)\r\n\t{\r\n\t\tthis.addSubMesh(event.subGeometry);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a SubGeometry was removed from the Geometry.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tprivate onSubGeometryRemoved(event:GeometryEvent)\r\n\t{\r\n\t\tvar subMesh:ISubMesh;\r\n\t\tvar subGeom:SubGeometryBase = event.subGeometry;\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tvar i:number;\r\n\r\n\t\t// Important! This has to be done here, and not delayed until the\r\n\t\t// next render loop, since this may be caused by the geometry being\r\n\t\t// rebuilt IN THE RENDER LOOP. Invalidating and waiting will delay\r\n\t\t// it until the NEXT RENDER FRAME which is probably not desirable.\r\n\t\tfor (i = 0; i < len; ++i) {\r\n\r\n\t\t\tsubMesh = this._subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry == subGeom) {\r\n\t\t\t\tsubMesh.dispose();\r\n\r\n\t\t\t\tthis._subMeshes.splice(i, 1);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t--len;\r\n\t\tfor (; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iIndex = i;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a SubMeshBase wrapping a SubGeometry.\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tprivate addSubMesh(subGeometry:SubGeometryBase)\r\n\t{\r\n\t\tvar SubMeshClass:ISubMeshClass = SubMeshPool.getClass(subGeometry);\r\n\r\n\t\tvar subMesh:ISubMesh = new SubMeshClass(subGeometry, this, null);\r\n\t\tvar len:number = this._subMeshes.length;\r\n\r\n\t\tsubMesh._iIndex = len;\r\n\r\n\t\tthis._subMeshes[len] = subMesh;\r\n\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param shortestCollisionDistance\r\n\t * @param findClosest\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _iTestCollision(shortestCollisionDistance:number, findClosest:boolean):boolean\r\n\t{\r\n\t\tthis._pPickingCollisionVO.renderableOwner = null;\r\n\r\n\t\tvar subMesh:ISubMesh;\r\n\r\n\t\tvar len:number = this.subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tsubMesh = this.subMeshes[i];\r\n\r\n\t\t\tif (subMesh.subGeometry._iTestCollision(this._pPickingCollider, subMesh.material, this._pPickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t\t\tshortestCollisionDistance = this._pPickingCollisionVO.rayEntryDistance;\r\n\r\n\t\t\t\tthis._pPickingCollisionVO.renderableOwner = subMesh;\r\n\r\n\t\t\t\tif (!findClosest)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._pPickingCollisionVO.renderableOwner != null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param renderer\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t// Since this getter is invoked every iteration of the render loop, and\r\n\t\t// the prefab construct could affect the sub-meshes, the prefab is\r\n\t\t// validated here to give it a chance to rebuild.\r\n\t\tif (this._iSourcePrefab)\r\n\t\t\tthis._iSourcePrefab._iValidate();\r\n\r\n\t\tvar len:number /*uint*/ = this._subMeshes.length;\r\n\t\tfor (var i:number /*uint*/ = 0; i < len; i++)\r\n\t\t\trenderer._iApplyRenderableOwner(this._subMeshes[i]);\r\n\t}\r\n\r\n\tpublic _iInvalidateRenderableGeometries()\r\n\t{\r\n\t\tvar len:number = this._subMeshes.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._subMeshes[i]._iInvalidateRenderableGeometry();\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterEntity(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterEntity(this);\r\n\t}\r\n\t/**\r\n\t * Evaluates the display object to see if it overlaps or intersects with the\r\n\t * point specified by the <code>x</code> and <code>y</code> parameters. The\r\n\t * <code>x</code> and <code>y</code> parameters specify a point in the\r\n\t * coordinate space of the Scene, not the display object container that\r\n\t * contains the display object(unless that display object container is the\r\n\t * Scene).\r\n\t *\r\n\t * @param x         The <i>x</i> coordinate to test against this object.\r\n\t * @param y         The <i>y</i> coordinate to test against this object.\r\n\t * @param shapeFlag Whether to check against the actual pixels of the object\r\n\t *                 (<code>true</code>) or the bounding box\r\n\t *                 (<code>false</code>).\r\n\t * @return <code>true</code> if the display object overlaps or intersects\r\n\t *         with the specified point; <code>false</code> otherwise.\r\n\t */\r\n\tpublic hitTestPoint(x:number, y:number, shapeFlag:boolean = false):boolean\r\n\t{\r\n\t\t//thought I would need the global hit point converted into local space, but not sure how to hook it in\r\n\t\tvar local:Point = this.globalToLocal(new Point(x,y));\r\n\r\n\t\tvar hit:boolean = false;\r\n\r\n\t\tif(this.geometry)\r\n\t\t{\r\n\t\t\tvar box:Box = this.getBox();\r\n\t\t\tif(box.left > local.x || box.right < local.x || box.top  > local.y ||  box.bottom < local.y) return false;\r\n\r\n\r\n\t\t\tfor(var j:number = 0; j < this.geometry.subGeometries.length; j++)\r\n\t\t\t{\r\n\t\t\t\tvar sub:SubGeometryBase = this.geometry.subGeometries[j];\r\n\t\t\t\tvar curve:CurveSubGeometry = <CurveSubGeometry>sub;\r\n\t\t\t\tif(curve) hit = this.hittestMesh(local.x, local.y, curve);\r\n\t\t\t\tif(hit) return true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\thit = super.hitTestPoint(x, y, shapeFlag);\r\n\t\tif(hit) return true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\tprivate hittestMesh(px:number, py:number, sub:CurveSubGeometry):boolean\r\n\t{\r\n\t\tvar posDim:number = sub.positions.dimensions;\r\n\t\tvar curveDim:number = sub.curves.dimensions;\r\n\t\tvar indices:Uint16Array = sub.indices.get(sub.indices.count);\r\n\t\tvar positions:Float32Array = sub.positions.get(sub.positions.count);\r\n\t\tvar curves:Float32Array = sub.curves.get(sub.curves.count);\r\n\r\n\t\tfor(var k:number = 0; k < sub.indices.length; k+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[k];\r\n\t\t\tvar id1:number = indices[k + 1] * posDim;\r\n\t\t\tvar id2:number = indices[k + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - px;\r\n\t\t\tvar dy:number = ay - py;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = bx - px;\r\n\t\t\tdy = by - py;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\tdx = cx - px;\r\n\t\t\tdy = cy - py;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0) continue;\r\n\r\n\t\t\t//check if nmot solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = px - ax;\r\n\t\t\t\tvar v2y:number = py - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\t//here be dragons\r\n\t\t\t\tvar uu:number = 0.5 * v + w;\r\n\t\t\t\tvar vv:number = w;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif (d > 0 && az == -1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else if (d < 0 && az == 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = Mesh;",
    "import Box\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Box\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport CubeMapShadowMapper\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/CubeMapShadowMapper\");\r\n\r\nclass PointLight extends LightBase implements IEntity\r\n{\r\n\tpublic _pRadius:number = 90000;\r\n\tpublic _pFallOff:number = 100000;\r\n\tpublic _pFallOffFactor:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\r\n\t\tthis._pFallOffFactor = 1/(this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.SPHERE;\r\n\t}\r\n\r\n\tpublic pCreateShadowMapper():CubeMapShadowMapper\r\n\t{\r\n\t\treturn new CubeMapShadowMapper();\r\n\t}\r\n\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pRadius = value;\r\n\r\n\t\tif (this._pRadius < 0) {\r\n\t\t\tthis._pRadius = 0;\r\n\t\t} else if (this._pRadius > this._pFallOff) {\r\n\t\t\tthis._pFallOff = this._pRadius;\r\n\t\t\tthis._pInvalidateBounds();\r\n\t\t}\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius );\r\n\t}\r\n\r\n\tpublic iFallOffFactor():number\r\n\t{\r\n\t\treturn this._pFallOffFactor;\r\n\t}\r\n\r\n\tpublic get fallOff():number\r\n\t{\r\n\t\treturn this._pFallOff;\r\n\t}\r\n\r\n\tpublic set fallOff(value:number)\r\n\t{\r\n\t\tthis._pFallOff = value;\r\n\r\n\t\tif (this._pFallOff < 0)\r\n\t\t\tthis._pFallOff = 0;\r\n\r\n\t\tif (this._pFallOff < this._pRadius)\r\n\t\t\tthis._pRadius = this._pFallOff;\r\n\r\n\t\tthis._pFallOffFactor = 1/( this._pFallOff*this._pFallOff - this._pRadius*this._pRadius);\r\n\t\tthis._pInvalidateBounds();\r\n\t}\r\n\r\n\tpublic _pUpdateSphereBounds()\r\n\t{\r\n\t\tsuper._pUpdateSphereBounds();\r\n\r\n\t\tthis._pSphereBounds.radius = this._pFallOff;\r\n\t}\r\n\r\n\tpublic iGetObjectProjectionMatrix(entity:IEntity, camera:Camera, target:Matrix3D = null):Matrix3D\r\n\t{\r\n\t\tvar raw:number[] = new Array<number>(16);\r\n\t\tvar m:Matrix3D = new Matrix3D();\r\n\r\n\t\t// todo: do not use lookAt on Light\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this._pParent.inverseSceneTransform);\r\n\t\tthis.lookAt(m.position);\r\n\r\n\t\tm.copyFrom(entity.getRenderSceneTransform(camera));\r\n\t\tm.append(this.inverseSceneTransform);\r\n\r\n\t\tvar box:Box = entity.getBox();\r\n\t\tvar v1:Vector3D = m.deltaTransformVector(new Vector3D(box.left, box.bottom, box.front));\r\n\t\tvar v2:Vector3D = m.deltaTransformVector(new Vector3D(box.right, box.top, box.back));\r\n\t\tvar d1:number = v1.x*v1.x + v1.y*v1.y + v1.z*v1.z;\r\n\t\tvar d2:number = v2.x*v2.x + v2.y*v2.y + v2.z*v2.z;\r\n\t\tvar d:number = Math.sqrt(d1 > d2? d1 : d2);\r\n\t\tvar zMin:number;\r\n\t\tvar zMax:number;\r\n\r\n\t\tvar z:number = m.rawData[14];\r\n\t\tzMin = z - d;\r\n\t\tzMax = z + d;\r\n\r\n\t\traw[5] = raw[0] = zMin/d;\r\n\t\traw[10] = zMax/(zMax - zMin);\r\n\t\traw[11] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[12] = raw[13] = raw[15] = 0;\r\n\t\traw[14] = -zMin*raw[10];\r\n\r\n\t\tif (!target)\r\n\t\t\ttarget = new Matrix3D();\r\n\r\n\t\ttarget.copyRawDataFrom(raw);\r\n\t\ttarget.prepend(m);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//nothing to do here\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterPointLight(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterPointLight(this);\r\n\t}\r\n}\r\n\r\nexport = PointLight;",
    "import DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Graphics\t\t\t\t\t\t= require(\"awayjs-display/lib/draw/Graphics\");\r\n\r\n/**\r\n * This class is used to create lightweight shapes using the ActionScript\r\n * drawing application program interface(API). The Shape class includes a\r\n * <code>graphics</code> property, which lets you access methods from the\r\n * Graphics class.\r\n *\r\n * <p>The Sprite class also includes a <code>graphics</code>property, and it\r\n * includes other features not available to the Shape class. For example, a\r\n * Sprite object is a display object container, whereas a Shape object is not\r\n * (and cannot contain child display objects). For this reason, Shape objects\r\n * consume less memory than Sprite objects that contain the same graphics.\r\n * However, a Sprite object supports user input events, while a Shape object\r\n * does not.</p>\r\n */\r\nclass Shape extends DisplayObject\r\n{\r\n\tprivate _graphics:Graphics;\r\n\r\n\t/**\r\n\t * Specifies the Graphics object belonging to this Shape object, where vector\r\n\t * drawing commands can occur.\r\n\t */\r\n\tget graphics():Graphics\r\n\t{\r\n\t\treturn this._graphics;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Shape object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic clone():DisplayObject\r\n\t{\r\n\t\tvar clone:Shape = new Shape();\r\n\t\tclone.pivot = this.pivot;\r\n\t\tclone._iMatrix3D = this._iMatrix3D;\r\n\t\tclone.name = name;\r\n\t\tclone._iMaskID = this._iMaskID;\r\n\t\tclone._iMasks = this._iMasks? this._iMasks.concat() : null;\r\n\t\tclone._graphics = this._graphics;\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\nexport = Shape;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport UVTransform\t\t\t\t\t= require(\"awayjs-core/lib/geom/UVTransform\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\n/**\r\n * A Skybox class is used to render a sky in the scene. It's always considered static and 'at infinity', and as\r\n * such it's always centered at the camera's position and sized to exactly fit within the camera's frustum, ensuring\r\n * the sky box is always as large as possible without being clipped.\r\n */\r\nclass Skybox extends DisplayObject implements IEntity, IRenderableOwner, IRenderOwner\r\n{\r\n\tpublic static assetType:string = \"[asset Skybox]\";\r\n\r\n\tprivate _cubeMap:SingleCubeTexture;\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tprivate _animationSet:IAnimationSet;\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\tprivate _renderables:Array<IRenderable> = new Array<IRenderable>();\r\n\tprivate _uvTransform:UVTransform;\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\tprivate _mipmap:boolean = false;\r\n\tprivate _smooth:boolean = true;\r\n\r\n\tprivate _animator:IAnimator;\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use mipmapping. Defaults to false.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the Skybox texture should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pIinvalidatePasses();\r\n\t}\r\n\t\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pIinvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\tpublic get animator():IAnimator\r\n\t{\r\n\t\treturn this._animator;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get uvTransform():UVTransform\r\n\t{\r\n\t\treturn this._uvTransform;\r\n\t}\r\n\r\n\tpublic set uvTransform(value:UVTransform)\r\n\t{\r\n\t\tthis._uvTransform = value;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;// || this._pParentMesh._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\t}\r\n\t/**\r\n\t* The cube texture to use as the skybox.\r\n\t*/\r\n\tpublic get cubeMap():SingleCubeTexture\r\n\t{\r\n\t\treturn this._cubeMap;\r\n\t}\r\n\r\n\tpublic set cubeMap(value:SingleCubeTexture)\r\n\t{\r\n\t\t//if (value && this._cubeMap && (value.format != this._cubeMap.format))\r\n\t\tif (value && this._cubeMap)\r\n\t\t\tthis._pInvalidateRender();\r\n\r\n\t\tthis._cubeMap = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new Skybox object.\r\n\t *\r\n\t * @param material\tThe material with which to render the Skybox.\r\n\t */\r\n\tconstructor(cubeMap:SingleCubeTexture = null)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pIsEntity = true;\r\n\t\tthis._owners = new Array<IRenderableOwner>(this);\r\n\r\n\t\tthis.cubeMap = cubeMap;\r\n\r\n\t\t//default bounds type\r\n\t\tthis._boundsType = BoundsType.NULL;\r\n\t}\r\n\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Skybox.assetType;\r\n\t}\r\n\r\n\tpublic get castsShadows():boolean\r\n\t{\r\n\t\treturn false; //TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\r\n\t\tvar len:number = this._renderables.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renderables[i].dispose();\r\n\r\n\t\tthis._renderables = new Array<IRenderable>();\r\n\t}\r\n\r\n\tpublic _applyRenderer(renderer:IRenderer)\r\n\t{\r\n\t\t//skybox do not get collected in the standard entity list\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iAddRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tthis._renderables.push(renderable);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\r\n\tpublic _iRemoveRenderable(renderable:IRenderable):IRenderable\r\n\t{\r\n\t\tvar index:number = this._renderables.indexOf(renderable);\r\n\r\n\t\tthis._renderables.splice(index, 1);\r\n\r\n\t\treturn renderable;\r\n\t}\r\n\r\n\tpublic _pRegisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iRegisterSkybox(this);\r\n\t}\r\n\r\n\tpublic _pUnregisterEntity(partition:Partition)\r\n\t{\r\n\t\tpartition._iUnregisterSkybox(this);\r\n\t}\r\n}\r\n\r\nexport = Skybox;",
    "import AttributesBuffer\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Float3Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float2Attributes\t\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport AntiAliasType\t\t\t\t= require(\"awayjs-display/lib/text/AntiAliasType\");\r\nimport GridFitType\t\t\t\t\t= require(\"awayjs-display/lib/text/GridFitType\");\r\nimport TextFieldAutoSize\t\t\t= require(\"awayjs-display/lib/text/TextFieldAutoSize\");\r\nimport TextFieldType\t\t\t\t= require(\"awayjs-display/lib/text/TextFieldType\");\r\nimport TextFormat\t\t\t\t\t= require(\"awayjs-display/lib/text/TextFormat\");\r\nimport TextInteractionMode\t\t\t= require(\"awayjs-display/lib/text/TextInteractionMode\");\r\nimport TextLineMetrics\t\t\t\t= require(\"awayjs-display/lib/text/TextLineMetrics\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport Geometry\t\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * The TextField class is used to create display objects for text display and\r\n * input. <ph outputclass=\"flexonly\">You can use the TextField class to\r\n * perform low-level text rendering. However, in Flex, you typically use the\r\n * Label, Text, TextArea, and TextInput controls to process text. <ph\r\n * outputclass=\"flashonly\">You can give a text field an instance name in the\r\n * Property inspector and use the methods and properties of the TextField\r\n * class to manipulate it with ActionScript. TextField instance names are\r\n * displayed in the Movie Explorer and in the Insert Target Path dialog box in\r\n * the Actions panel.\r\n *\r\n * <p>To create a text field dynamically, use the <code>TextField()</code>\r\n * constructor.</p>\r\n *\r\n * <p>The methods of the TextField class let you set, select, and manipulate\r\n * text in a dynamic or input text field that you create during authoring or\r\n * at runtime. </p>\r\n *\r\n * <p>ActionScript provides several ways to format your text at runtime. The\r\n * TextFormat class lets you set character and paragraph formatting for\r\n * TextField objects. You can apply Cascading Style Sheets(CSS) styles to\r\n * text fields by using the <code>TextField.styleSheet</code> property and the\r\n * StyleSheet class. You can use CSS to style built-in HTML tags, define new\r\n * formatting tags, or apply styles. You can assign HTML formatted text, which\r\n * optionally uses CSS styles, directly to a text field. HTML text that you\r\n * assign to a text field can contain embedded media(movie clips, SWF files,\r\n * GIF files, PNG files, and JPEG files). The text wraps around the embedded\r\n * media in the same way that a web browser wraps text around media embedded\r\n * in an HTML document. </p>\r\n *\r\n * <p>Flash Player supports a subset of HTML tags that you can use to format\r\n * text. See the list of supported HTML tags in the description of the\r\n * <code>htmlText</code> property.</p>\r\n * \r\n * @event change                    Dispatched after a control value is\r\n *                                  modified, unlike the\r\n *                                  <code>textInput</code> event, which is\r\n *                                  dispatched before the value is modified.\r\n *                                  Unlike the W3C DOM Event Model version of\r\n *                                  the <code>change</code> event, which\r\n *                                  dispatches the event only after the\r\n *                                  control loses focus, the ActionScript 3.0\r\n *                                  version of the <code>change</code> event\r\n *                                  is dispatched any time the control\r\n *                                  changes. For example, if a user types text\r\n *                                  into a text field, a <code>change</code>\r\n *                                  event is dispatched after every keystroke.\r\n * @event link                      Dispatched when a user clicks a hyperlink\r\n *                                  in an HTML-enabled text field, where the\r\n *                                  URL begins with \"event:\". The remainder of\r\n *                                  the URL after \"event:\" is placed in the\r\n *                                  text property of the LINK event.\r\n *\r\n *                                  <p><b>Note:</b> The default behavior,\r\n *                                  adding the text to the text field, occurs\r\n *                                  only when Flash Player generates the\r\n *                                  event, which in this case happens when a\r\n *                                  user attempts to input text. You cannot\r\n *                                  put text into a text field by sending it\r\n *                                  <code>textInput</code> events.</p>\r\n * @event scroll                    Dispatched by a TextField object\r\n *                                  <i>after</i> the user scrolls.\r\n * @event textInput                 Flash Player dispatches the\r\n *                                  <code>textInput</code> event when a user\r\n *                                  enters one or more characters of text.\r\n *                                  Various text input methods can generate\r\n *                                  this event, including standard keyboards,\r\n *                                  input method editors(IMEs), voice or\r\n *                                  speech recognition systems, and even the\r\n *                                  act of pasting plain text with no\r\n *                                  formatting or style information.\r\n * @event textInteractionModeChange Flash Player dispatches the\r\n *                                  <code>textInteractionModeChange</code>\r\n *                                  event when a user changes the interaction\r\n *                                  mode of a text field. for example on\r\n *                                  Android, one can toggle from NORMAL mode\r\n *                                  to SELECTION mode using context menu\r\n *                                  options\r\n */\r\nclass TextField extends Mesh\r\n{\r\n\tpublic static assetType:string = \"[asset TextField]\";\r\n\r\n\tprivate _bottomScrollV:number;\r\n\tprivate _caretIndex:number;\r\n\tprivate _length:number;\r\n\tprivate _maxScrollH:number;\r\n\tprivate _maxScrollV:number;\r\n\tprivate _numLines:number;\r\n\tprivate _selectionBeginIndex:number;\r\n\tprivate _selectionEndIndex:number;\r\n\tprivate _text:string = \"\";\r\n\tprivate _textHeight:number;\r\n\tprivate _textInteractionMode:TextInteractionMode;\r\n\tprivate _textWidth:number;\r\n\r\n\tprivate _charBoundaries:Rectangle;\r\n\tprivate _charIndexAtPoint:number;\r\n\tprivate _firstCharInParagraph:number;\r\n\tprivate _imageReference:DisplayObject\r\n\tprivate _lineIndexAtPoint:number;\r\n\tprivate _lineIndexOfChar:number;\r\n\tprivate _lineLength:number;\r\n\tprivate _lineMetrics:TextLineMetrics;\r\n\tprivate _lineOffset:number;\r\n\tprivate _lineText:string;\r\n\tprivate _paragraphLength:number;\r\n\tprivate _textFormat:TextFormat;\r\n\r\n\t/**\r\n\t * When set to <code>true</code> and the text field is not in focus, Flash\r\n\t * Player highlights the selection in the text field in gray. When set to\r\n\t * <code>false</code> and the text field is not in focus, Flash Player does\r\n\t * not highlight the selection in the text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic alwaysShowSelection:boolean\r\n\r\n\t/**\r\n\t * The type of anti-aliasing used for this text field. Use\r\n\t * <code>flash.text.AntiAliasType</code> constants for this property. You can\r\n\t * control this setting only if the font is embedded(with the\r\n\t * <code>embedFonts</code> property set to <code>true</code>). The default\r\n\t * setting is <code>flash.text.AntiAliasType.NORMAL</code>.\r\n\t *\r\n\t * <p>To set values for this property, use the following string values:</p>\r\n\t */\r\n\tpublic antiAliasType:AntiAliasType;\r\n\r\n\t/**\r\n\t * Controls automatic sizing and alignment of text fields. Acceptable values\r\n\t * for the <code>TextFieldAutoSize</code> constants:\r\n\t * <code>TextFieldAutoSize.NONE</code>(the default),\r\n\t * <code>TextFieldAutoSize.LEFT</code>, <code>TextFieldAutoSize.RIGHT</code>,\r\n\t * and <code>TextFieldAutoSize.CENTER</code>.\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.NONE</code>\r\n\t * (the default) no resizing occurs.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to <code>TextFieldAutoSize.LEFT</code>,\r\n\t * the text is treated as left-justified text, meaning that the left margin\r\n\t * of the text field remains fixed and any resizing of a single line of the\r\n\t * text field is on the right margin. If the text includes a line break(for\r\n\t * example, <code>\"\\n\"</code> or <code>\"\\r\"</code>), the bottom is also\r\n\t * resized to fit the next line of text. If <code>wordWrap</code> is also set\r\n\t * to <code>true</code>, only the bottom of the text field is resized and the\r\n\t * right side remains fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.RIGHT</code>, the text is treated as\r\n\t * right-justified text, meaning that the right margin of the text field\r\n\t * remains fixed and any resizing of a single line of the text field is on\r\n\t * the left margin. If the text includes a line break(for example,\r\n\t * <code>\"\\n\" or \"\\r\")</code>, the bottom is also resized to fit the next\r\n\t * line of text. If <code>wordWrap</code> is also set to <code>true</code>,\r\n\t * only the bottom of the text field is resized and the left side remains\r\n\t * fixed.</p>\r\n\t *\r\n\t * <p>If <code>autoSize</code> is set to\r\n\t * <code>TextFieldAutoSize.CENTER</code>, the text is treated as\r\n\t * center-justified text, meaning that any resizing of a single line of the\r\n\t * text field is equally distributed to both the right and left margins. If\r\n\t * the text includes a line break(for example, <code>\"\\n\"</code> or\r\n\t * <code>\"\\r\"</code>), the bottom is also resized to fit the next line of\r\n\t * text. If <code>wordWrap</code> is also set to <code>true</code>, only the\r\n\t * bottom of the text field is resized and the left and right sides remain\r\n\t * fixed.</p>\r\n\t * \r\n\t * @throws ArgumentError The <code>autoSize</code> specified is not a member\r\n\t *                       of flash.text.TextFieldAutoSize.\r\n\t */\r\n\tpublic autoSize:TextFieldAutoSize;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextField.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a background fill. If\r\n\t * <code>true</code>, the text field has a background fill. If\r\n\t * <code>false</code>, the text field has no background fill. Use the\r\n\t * <code>backgroundColor</code> property to set the background color of a\r\n\t * text field.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic background:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field background. The default value is\r\n\t * <code>0xFFFFFF</code>(white). This property can be retrieved or set, even\r\n\t * if there currently is no background, but the color is visible only if the\r\n\t * text field has the <code>background</code> property set to\r\n\t * <code>true</code>.\r\n\t */\r\n\tpublic backgroundColor:number /*int*/;\r\n\r\n\t/**\r\n\t * Specifies whether the text field has a border. If <code>true</code>, the\r\n\t * text field has a border. If <code>false</code>, the text field has no\r\n\t * border. Use the <code>borderColor</code> property to set the border color.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic border:boolean;\r\n\r\n\t/**\r\n\t * The color of the text field border. The default value is\r\n\t * <code>0x000000</code>(black). This property can be retrieved or set, even\r\n\t * if there currently is no border, but the color is visible only if the text\r\n\t * field has the <code>border</code> property set to <code>true</code>.\r\n\t */\r\n\tpublic borderColor:number /*int*/;\r\n\r\n\t/**\r\n\t * An integer(1-based index) that indicates the bottommost line that is\r\n\t * currently visible in the specified text field. Think of the text field as\r\n\t * a window onto a block of text. The <code>scrollV</code> property is the\r\n\t * 1-based index of the topmost visible line in the window.\r\n\t *\r\n\t * <p>All the text between the lines indicated by <code>scrollV</code> and\r\n\t * <code>bottomScrollV</code> is currently visible in the text field.</p>\r\n\t */\r\n\tpublic get bottomScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._bottomScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * The index of the insertion point(caret) position. If no insertion point\r\n\t * is displayed, the value is the position the insertion point would be if\r\n\t * you restored focus to the field(typically where the insertion point last\r\n\t * was, or 0 if the field has not had focus).\r\n\t *\r\n\t * <p>Selection span indexes are zero-based(for example, the first position\r\n\t * is 0, the second position is 1, and so on).</p>\r\n\t */\r\n\tpublic get caretIndex():number /*int*/\r\n\t{\r\n\t\treturn this._caretIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that specifies whether extra white space(spaces, line\r\n\t * breaks, and so on) in a text field with HTML text is removed. The default\r\n\t * value is <code>false</code>. The <code>condenseWhite</code> property only\r\n\t * affects text set with the <code>htmlText</code> property, not the\r\n\t * <code>text</code> property. If you set text with the <code>text</code>\r\n\t * property, <code>condenseWhite</code> is ignored.\r\n\t *\r\n\t * <p>If <code>condenseWhite</code> is set to <code>true</code>, use standard\r\n\t * HTML commands such as <code><BR></code> and <code><P></code> to place line\r\n\t * breaks in the text field.</p>\r\n\t *\r\n\t * <p>Set the <code>condenseWhite</code> property before setting the\r\n\t * <code>htmlText</code> property.</p>\r\n\t */\r\n\tpublic condenseWhite:boolean;\r\n\r\n\t/**\r\n\t * Specifies the format applied to newly inserted text, such as text entered\r\n\t * by a user or text inserted with the <code>replaceSelectedText()</code>\r\n\t * method.\r\n\t *\r\n\t * <p><b>Note:</b> When selecting characters to be replaced with\r\n\t * <code>setSelection()</code> and <code>replaceSelectedText()</code>, the\r\n\t * <code>defaultTextFormat</code> will be applied only if the text has been\r\n\t * selected up to and including the last character. Here is an example:</p>\r\n\t * <pre xml:space=\"preserve\"> public my_txt:TextField new TextField();\r\n\t * my_txt.text = \"Flash Macintosh version\"; public my_fmt:TextFormat = new\r\n\t * TextFormat(); my_fmt.color = 0xFF0000; my_txt.defaultTextFormat = my_fmt;\r\n\t * my_txt.setSelection(6,15); // partial text selected - defaultTextFormat\r\n\t * not applied my_txt.setSelection(6,23); // text selected to end -\r\n\t * defaultTextFormat applied my_txt.replaceSelectedText(\"Windows version\");\r\n\t * </pre>\r\n\t *\r\n\t * <p>When you access the <code>defaultTextFormat</code> property, the\r\n\t * returned TextFormat object has all of its properties defined. No property\r\n\t * is <code>null</code>.</p>\r\n\t *\r\n\t * <p><b>Note:</b> You can't set this property if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic defaultTextFormat:TextFormat;\r\n\r\n\t/**\r\n\t * Specifies whether the text field is a password text field. If the value of\r\n\t * this property is <code>true</code>, the text field is treated as a\r\n\t * password text field and hides the input characters using asterisks instead\r\n\t * of the actual characters. If <code>false</code>, the text field is not\r\n\t * treated as a password text field. When password mode is enabled, the Cut\r\n\t * and Copy commands and their corresponding keyboard shortcuts will not\r\n\t * function. This security mechanism prevents an unscrupulous user from using\r\n\t * the shortcuts to discover a password on an unattended computer.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic displayAsPassword:boolean;\r\n\r\n\t/**\r\n\t * Specifies whether to render by using embedded font outlines. If\r\n\t * <code>false</code>, Flash Player renders the text field by using device\r\n\t * fonts.\r\n\t *\r\n\t * <p>If you set the <code>embedFonts</code> property to <code>true</code>\r\n\t * for a text field, you must specify a font for that text by using the\r\n\t * <code>font</code> property of a TextFormat object applied to the text\r\n\t * field. If the specified font is not embedded in the SWF file, the text is\r\n\t * not displayed.</p>\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic embedFonts:boolean;\r\n\r\n\t/**\r\n\t * The type of grid fitting used for this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The type of grid fitting used determines whether Flash Player forces\r\n\t * strong horizontal and vertical lines to fit to a pixel or subpixel grid,\r\n\t * or not at all.</p>\r\n\t *\r\n\t * <p>For the <code>flash.text.GridFitType</code> property, you can use the\r\n\t * following string values:</p>\r\n\t * \r\n\t * @default pixel\r\n\t */\r\n\tpublic gridFitType:GridFitType;\r\n\r\n\t/**\r\n\t * Contains the HTML representation of the text field contents.\r\n\t *\r\n\t * <p>Flash Player supports the following HTML tags:</p>\r\n\t *\r\n\t * <p>Flash Player and AIR also support explicit character codes, such as\r\n\t * &#38;(ASCII ampersand) and &#x20AC;(Unicode € symbol). </p>\r\n\t */\r\n\tpublic htmlText:string;\r\n\r\n\t/**\r\n\t * The number of characters in a text field. A character such as tab\r\n\t * (<code>\\t</code>) counts as one character.\r\n\t */\r\n\tpublic get length():number /*int*/\r\n\t{\r\n\t\treturn this._length;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum number of characters that the text field can contain, as\r\n\t * entered by a user. A script can insert more text than\r\n\t * <code>maxChars</code> allows; the <code>maxChars</code> property indicates\r\n\t * only how much text a user can enter. If the value of this property is\r\n\t * <code>0</code>, a user can enter an unlimited amount of text.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic maxChars:number /*int*/;\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollH</code>.\r\n\t */\r\n\tpublic maxScrollH():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollH;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum value of <code>scrollV</code>.\r\n\t */\r\n\tpublic maxScrollV():number /*int*/\r\n\t{\r\n\t\treturn this._maxScrollV;\r\n\t}\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether Flash Player automatically scrolls\r\n\t * multiline text fields when the user clicks a text field and rolls the\r\n\t * mouse wheel. By default, this value is <code>true</code>. This property is\r\n\t * useful if you want to prevent mouse wheel scrolling of text fields, or\r\n\t * implement your own text field scrolling.\r\n\t */\r\n\tpublic mouseWheelEnabled:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether field is a multiline text field. If the value is\r\n\t * <code>true</code>, the text field is multiline; if the value is\r\n\t * <code>false</code>, the text field is a single-line text field. In a field\r\n\t * of type <code>TextFieldType.INPUT</code>, the <code>multiline</code> value\r\n\t * determines whether the <code>Enter</code> key creates a new line(a value\r\n\t * of <code>false</code>, and the <code>Enter</code> key is ignored). If you\r\n\t * paste text into a <code>TextField</code> with a <code>multiline</code>\r\n\t * value of <code>false</code>, newlines are stripped out of the text.\r\n\t * \r\n\t * @default false\r\n\t */\r\n\tpublic multiline:boolean;\r\n\r\n\t/**\r\n\t * Defines the number of text lines in a multiline text field. If\r\n\t * <code>wordWrap</code> property is set to <code>true</code>, the number of\r\n\t * lines increases when text wraps.\r\n\t */\r\n\tpublic get numLines():number /*int*/\r\n\t{\r\n\t\treturn this._numLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates the set of characters that a user can enter into the text field.\r\n\t * If the value of the <code>restrict</code> property is <code>null</code>,\r\n\t * you can enter any character. If the value of the <code>restrict</code>\r\n\t * property is an empty string, you cannot enter any character. If the value\r\n\t * of the <code>restrict</code> property is a string of characters, you can\r\n\t * enter only characters in the string into the text field. The string is\r\n\t * scanned from left to right. You can specify a range by using the hyphen\r\n\t * (-) character. Only user interaction is restricted; a script can put any\r\n\t * text into the text field. <ph outputclass=\"flashonly\">This property does\r\n\t * not synchronize with the Embed font options in the Property inspector.\r\n\t *\r\n\t * <p>If the string begins with a caret(^) character, all characters are\r\n\t * initially accepted and succeeding characters in the string are excluded\r\n\t * from the set of accepted characters. If the string does not begin with a\r\n\t * caret(^) character, no characters are initially accepted and succeeding\r\n\t * characters in the string are included in the set of accepted\r\n\t * characters.</p>\r\n\t *\r\n\t * <p>The following example allows only uppercase characters, spaces, and\r\n\t * numbers to be entered into a text field:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z 0-9\"; </pre>\r\n\t *\r\n\t * <p>The following example includes all characters, but excludes lowercase\r\n\t * letters:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"^a-z\"; </pre>\r\n\t *\r\n\t * <p>You can use a backslash to enter a ^ or - verbatim. The accepted\r\n\t * backslash sequences are \\-, \\^ or \\\\. The backslash must be an actual\r\n\t * character in the string, so when specified in ActionScript, a double\r\n\t * backslash must be used. For example, the following code includes only the\r\n\t * dash(-) and caret(^):</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\\\-\\\\^\"; </pre>\r\n\t *\r\n\t * <p>The ^ can be used anywhere in the string to toggle between including\r\n\t * characters and excluding characters. The following code includes only\r\n\t * uppercase letters, but excludes the uppercase letter Q:</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"A-Z^Q\"; </pre>\r\n\t *\r\n\t * <p>You can use the <code>\\u</code> escape sequence to construct\r\n\t * <code>restrict</code> strings. The following code includes only the\r\n\t * characters from ASCII 32(space) to ASCII 126(tilde).</p>\r\n\t * <pre xml:space=\"preserve\"> my_txt.restrict = \"\\u0020-\\u007E\"; </pre>\r\n\t * \r\n\t * @default null\r\n\t */\r\n\tpublic restrict:string;\r\n\r\n\t/**\r\n\t * The current horizontal scrolling position. If the <code>scrollH</code>\r\n\t * property is 0, the text is not horizontally scrolled. This property value\r\n\t * is an integer that represents the horizontal position in pixels.\r\n\t *\r\n\t * <p>The units of horizontal scrolling are pixels, whereas the units of\r\n\t * vertical scrolling are lines. Horizontal scrolling is measured in pixels\r\n\t * because most fonts you typically use are proportionally spaced; that is,\r\n\t * the characters can have different widths. Flash Player performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if a line uses multiple fonts, the\r\n\t * height of the line adjusts to fit the largest font in use.</p>\r\n\t *\r\n\t * <p><b>Note: </b>The <code>scrollH</code> property is zero-based, not\r\n\t * 1-based like the <code>scrollV</code> vertical scrolling property.</p>\r\n\t */\r\n\tpublic scrollH:number;\r\n\r\n\t/**\r\n\t * The vertical position of text in a text field. The <code>scrollV</code>\r\n\t * property is useful for directing users to a specific paragraph in a long\r\n\t * passage, or creating scrolling text fields.\r\n\t *\r\n\t * <p>The units of vertical scrolling are lines, whereas the units of\r\n\t * horizontal scrolling are pixels. If the first line displayed is the first\r\n\t * line in the text field, scrollV is set to 1(not 0). Horizontal scrolling\r\n\t * is measured in pixels because most fonts are proportionally spaced; that\r\n\t * is, the characters can have different widths. Flash performs vertical\r\n\t * scrolling by line because users usually want to see a complete line of\r\n\t * text rather than a partial line. Even if there are multiple fonts on a\r\n\t * line, the height of the line adjusts to fit the largest font in use.</p>\r\n\t */\r\n\tpublic scrollV:number;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field is selectable. The\r\n\t * value <code>true</code> indicates that the text is selectable. The\r\n\t * <code>selectable</code> property controls whether a text field is\r\n\t * selectable, not whether a text field is editable. A dynamic text field can\r\n\t * be selectable even if it is not editable. If a dynamic text field is not\r\n\t * selectable, the user cannot select its text.\r\n\t *\r\n\t * <p>If <code>selectable</code> is set to <code>false</code>, the text in\r\n\t * the text field does not respond to selection commands from the mouse or\r\n\t * keyboard, and the text cannot be copied with the Copy command. If\r\n\t * <code>selectable</code> is set to <code>true</code>, the text in the text\r\n\t * field can be selected with the mouse or keyboard, and the text can be\r\n\t * copied with the Copy command. You can select text this way even if the\r\n\t * text field is a dynamic text field instead of an input text field. </p>\r\n\t * \r\n\t * @default true\r\n\t */\r\n\tpublic selectable:boolean;\r\n\r\n\t/**\r\n\t * The zero-based character index value of the first character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionBeginIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionBeginIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The zero-based character index value of the last character in the current\r\n\t * selection. For example, the first character is 0, the second character is\r\n\t * 1, and so on. If no text is selected, this property is the value of\r\n\t * <code>caretIndex</code>.\r\n\t */\r\n\tpublic get selectionEndIndex():number /*int*/\r\n\t{\r\n\t\treturn this._selectionEndIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * The sharpness of the glyph edges in this text field. This property applies\r\n\t * only if the <code>flash.text.AntiAliasType</code> property of the text\r\n\t * field is set to <code>flash.text.AntiAliasType.ADVANCED</code>. The range\r\n\t * for <code>sharpness</code> is a number from -400 to 400. If you attempt to\r\n\t * set <code>sharpness</code> to a value outside that range, Flash sets the\r\n\t * property to the nearest value in the range(either -400 or 400).\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic sharpness:number;\r\n\r\n\t/**\r\n\t * Attaches a style sheet to the text field. For information on creating\r\n\t * style sheets, see the StyleSheet class and the <i>ActionScript 3.0\r\n\t * Developer's Guide</i>.\r\n\t *\r\n\t * <p>You can change the style sheet associated with a text field at any\r\n\t * time. If you change the style sheet in use, the text field is redrawn with\r\n\t * the new style sheet. You can set the style sheet to <code>null</code> or\r\n\t * <code>undefined</code> to remove the style sheet. If the style sheet in\r\n\t * use is removed, the text field is redrawn without a style sheet. </p>\r\n\t *\r\n\t * <p><b>Note:</b> If the style sheet is removed, the contents of both\r\n\t * <code>TextField.text</code> and <code> TextField.htmlText</code> change to\r\n\t * incorporate the formatting previously applied by the style sheet. To\r\n\t * preserve the original <code>TextField.htmlText</code> contents without the\r\n\t * formatting, save the value in a variable before removing the style\r\n\t * sheet.</p>\r\n\t */\r\n\tpublic styleSheet:StyleSheet;\r\n\r\n\t/**\r\n\t * A string that is the current text in the text field. Lines are separated\r\n\t * by the carriage return character(<code>'\\r'</code>, ASCII 13). This\r\n\t * property contains unformatted text in the text field, without HTML tags.\r\n\t *\r\n\t * <p>To get the text in HTML form, use the <code>htmlText</code>\r\n\t * property.</p>\r\n\t */\r\n\tpublic get text():string\r\n\t{\r\n\t\treturn this._text;\r\n\t}\r\n\r\n\tpublic set text(value:string)\r\n\t{\r\n\t\tif (this._text == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._text = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\tpublic get textFormat():TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\tpublic set textFormat(value:TextFormat)\r\n\t{\r\n\t\tif (this._textFormat == value)\r\n\t\t\treturn;\r\n\t\tthis._textFormat = value;\r\n\t\tthis.reConstruct();\r\n\t}\r\n\r\n\t/**\r\n\t * The color of the text in a text field, in hexadecimal format. The\r\n\t * hexadecimal color system uses six digits to represent color values. Each\r\n\t * digit has 16 possible values or characters. The characters range from 0-9\r\n\t * and then A-F. For example, black is <code>0x000000</code>; white is\r\n\t * <code>0xFFFFFF</code>.\r\n\t * \r\n\t * @default 0(0x000000)\r\n\t */\r\n\tpublic textColor:number /*int*/;\r\n\r\n\t/**\r\n\t * The height of the text in pixels.\r\n\t */\r\n\tpublic get textHeight():number\r\n\t{\r\n\t\treturn this._textHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * The interaction mode property, Default value is\r\n\t * TextInteractionMode.NORMAL. On mobile platforms, the normal mode implies\r\n\t * that the text can be scrolled but not selected. One can switch to the\r\n\t * selectable mode through the in-built context menu on the text field. On\r\n\t * Desktop, the normal mode implies that the text is in scrollable as well as\r\n\t * selection mode.\r\n\t */\r\n\tpublic get textInteractionMode():TextInteractionMode\r\n\t{\r\n\t\treturn this._textInteractionMode;\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the text in pixels.\r\n\t */\r\n\tpublic get textWidth():number\r\n\t{\r\n\t\treturn this._textWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * The thickness of the glyph edges in this text field. This property applies\r\n\t * only when <code>AntiAliasType</code> is set to\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t *\r\n\t * <p>The range for <code>thickness</code> is a number from -200 to 200. If\r\n\t * you attempt to set <code>thickness</code> to a value outside that range,\r\n\t * the property is set to the nearest value in the range(either -200 or\r\n\t * 200).</p>\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\tpublic thickness:number;\r\n\r\n\t/**\r\n\t * The type of the text field. Either one of the following TextFieldType\r\n\t * constants: <code>TextFieldType.DYNAMIC</code>, which specifies a dynamic\r\n\t * text field, which a user cannot edit, or <code>TextFieldType.INPUT</code>,\r\n\t * which specifies an input text field, which a user can edit.\r\n\t * \r\n\t * @default dynamic\r\n\t * @throws ArgumentError The <code>type</code> specified is not a member of\r\n\t *                       flash.text.TextFieldType.\r\n\t */\r\n\tpublic type:TextFieldType;\r\n\r\n\t/**\r\n\t * Specifies whether to copy and paste the text formatting along with the\r\n\t * text. When set to <code>true</code>, Flash Player copies and pastes\r\n\t * formatting(such as alignment, bold, and italics) when you copy and paste\r\n\t * between text fields. Both the origin and destination text fields for the\r\n\t * copy and paste procedure must have <code>useRichTextClipboard</code> set\r\n\t * to <code>true</code>. The default value is <code>false</code>.\r\n\t */\r\n\tpublic useRichTextClipboard:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether the text field has word wrap. If\r\n\t * the value of <code>wordWrap</code> is <code>true</code>, the text field\r\n\t * has word wrap; if the value is <code>false</code>, the text field does not\r\n\t * have word wrap. The default value is <code>false</code>.\r\n\t */\r\n\tpublic wordWrap:boolean;\r\n\r\n\t/**\r\n\t * Creates a new TextField instance. After you create the TextField instance,\r\n\t * call the <code>addChild()</code> or <code>addChildAt()</code> method of\r\n\t * the parent DisplayObjectContainer object to add the TextField instance to\r\n\t * the display list.\r\n\t *\r\n\t * <p>The default size for a text field is 100 x 100 pixels.</p>\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper(new Geometry());\r\n\t}\r\n\r\n\t/**\r\n\t * Reconstructs the Geometry for this Text-field.\r\n\t */\r\n\tpublic reConstruct() {\r\n\r\n\t\tfor (var i:number=this.geometry.subGeometries.length-1; i>=0; i--)\r\n\t\t\tthis.geometry.removeSubGeometry(this.geometry.subGeometries[i]);\r\n\r\n\t\tif(this._textFormat==null){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(this._text==\"\"){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar indices:Array<number> = new Array<number>();\r\n\t\tvar vertices:Array<number> = new Array<number>();\r\n\r\n\t\tvar char_scale:number=this._textFormat.size/this._textFormat.font_table.get_font_em_size();\r\n\t\tvar tri_idx_offset:number=0;\r\n\t\tvar tri_cnt:number=0;\r\n\t\tvar x_offset:number=0;\r\n\t\tvar y_offset:number=0;\r\n\t\tvar prev_char:TesselatedFontChar = null;\r\n\t\tvar j:number = 0;\r\n\t\tvar k:number = 0;\r\n\t\tfor (var i = 0; i < this.text.length; i++) {\r\n\r\n\t\t\tvar this_char:TesselatedFontChar = <TesselatedFontChar> this._textFormat.font_table.get_subgeo_for_char(this._text.charCodeAt(i).toString());\r\n\t\t\tif(this_char!= null) {\r\n\t\t\t\tvar this_subGeom:CurveSubGeometry = this_char.subgeom;\r\n\t\t\t\tif (this_subGeom != null) {\r\n\t\t\t\t\ttri_cnt = 0;\r\n\t\t\t\t\tvar indices2:Uint16Array = this_subGeom.indices.get(this_subGeom.numElements);\r\n\t\t\t\t\tvar positions2:Float32Array = this_subGeom.positions.get(this_subGeom.numVertices);\r\n\t\t\t\t\tvar curveData2:Float32Array = this_subGeom.curves.get(this_subGeom.numVertices);\r\n\t\t\t\t\tfor (var v = 0; v < indices2.length; v++) {\r\n\t\t\t\t\t\tindices[k++] = indices2[v] + tri_idx_offset;\r\n\t\t\t\t\t\ttri_cnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttri_idx_offset += tri_cnt;\r\n\t\t\t\t\tfor (v = 0; v < this_subGeom.numVertices; v++) {\r\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3] * char_scale) + x_offset;\r\n\t\t\t\t\t\tvertices[j++] = (positions2[v * 3 + 1] * char_scale) + y_offset;\r\n\t\t\t\t\t\tvertices[j++] = positions2[v * 3 + 2];\r\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2];\r\n\t\t\t\t\t\tvertices[j++] = curveData2[v * 2 + 1];\r\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[0];\r\n\t\t\t\t\t\tvertices[j++] = this._textFormat.uv_values[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// find kerning value that has been set for this char_code on previous char (if non exists, kerning_value will stay 0)\r\n\t\t\t\t\tvar kerning_value:number=0;\r\n\t\t\t\t\tif(prev_char!=null){\r\n\t\t\t\t\t\tfor(var k:number=0; k<prev_char.kerningCharCodes.length;k++){\r\n\t\t\t\t\t\t\tif(prev_char.kerningCharCodes[k]==this._text.charCodeAt(i)){\r\n\t\t\t\t\t\t\t\tkerning_value=prev_char.kerningValues[k];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tx_offset += ((this_char.char_width+kerning_value) * char_scale) + this._textFormat.letterSpacing;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if no char-geometry was found, we insert a \"space\"\r\n\t\t\t\tx_offset += this._textFormat.font_table.get_font_em_size() * char_scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar attributesView:AttributesView = new AttributesView(Float32Array, 7);\r\n\t\tattributesView.set(vertices);\r\n\t\tvar attributesBuffer:AttributesBuffer = attributesView.buffer;\r\n\t\tattributesView.dispose();\r\n\t\tvar curve_sub_geom:CurveSubGeometry = new CurveSubGeometry(attributesBuffer);\r\n\t\tcurve_sub_geom.setIndices(indices);\r\n\t\tcurve_sub_geom.setPositions(new Float3Attributes(attributesBuffer));\r\n\t\tcurve_sub_geom.setCurves(new Float2Attributes(attributesBuffer));\r\n\t\tcurve_sub_geom.setUVs(new Float2Attributes(attributesBuffer));\r\n\t\tthis.geometry.addSubGeometry(curve_sub_geom);\r\n\t\tthis.subMeshes[0].material=this._textFormat.material;\r\n\t}\r\n\t/**\r\n\t * Appends the string specified by the <code>newText</code> parameter to the\r\n\t * end of the text of the text field. This method is more efficient than an\r\n\t * addition assignment(<code>+=</code>) on a <code>text</code> property\r\n\t * (such as <code>someTextField.text += moreText</code>), particularly for a\r\n\t * text field that contains a significant amount of content.\r\n\t *\r\n\t * @param newText The string to append to the existing text.\r\n\t */\r\n\tpublic appendText(newText:string) {\r\n\t\tthis._text+=newText;\r\n\t}\r\n\r\n\t/**\r\n\t * *tells the Textfield that a paragraph is defined completly.\r\n\t * e.g. the textfield will start a new line for future added text.\r\n\t */\r\n\tpublic closeParagraph()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a rectangle that is the bounding box of the character.\r\n\t * \r\n\t * @param charIndex The zero-based index value for the character(for\r\n\t *                  example, the first position is 0, the second position is\r\n\t *                  1, and so on).\r\n\t * @return A rectangle with <code>x</code> and <code>y</code> minimum and\r\n\t *         maximum values defining the bounding box of the character.\r\n\t */\r\n\tpublic getCharBoundaries(charIndex:number):Rectangle\r\n\t{\r\n\t\treturn this._charBoundaries;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the character at the point specified\r\n\t * by the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the character.\r\n\t * @param y The <i>y</i> coordinate of the character.\r\n\t * @return The zero-based index value of the character(for example, the\r\n\t *         first position is 0, the second position is 1, and so on). Returns\r\n\t *         -1 if the point is not over any character.\r\n\t */\r\n\tpublic getCharIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._charIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the index of the first character in the\r\n\t * same paragraph.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the first character in the same\r\n\t *         paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getFirstCharInParagraph(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._firstCharInParagraph;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a DisplayObject reference for the given <code>id</code>, for an\r\n\t * image or SWF file that has been added to an HTML-formatted text field by\r\n\t * using an <code><img></code> tag. The <code><img></code> tag is in the\r\n\t * following format:\r\n\t *\r\n\t * <p><pre xml:space=\"preserve\"><code> <img src = 'filename.jpg' id =\r\n\t * 'instanceName' ></code></pre></p>\r\n\t * \r\n\t * @param id The <code>id</code> to match(in the <code>id</code> attribute\r\n\t *           of the <code><img></code> tag).\r\n\t * @return The display object corresponding to the image or SWF file with the\r\n\t *         matching <code>id</code> attribute in the <code><img></code> tag\r\n\t *         of the text field. For media loaded from an external source, this\r\n\t *         object is a Loader object, and, once loaded, the media object is a\r\n\t *         child of that Loader object. For media embedded in the SWF file,\r\n\t *         it is the loaded object. If no <code><img></code> tag with the\r\n\t *         matching <code>id</code> exists, the method returns\r\n\t *         <code>null</code>.\r\n\t */\r\n\tpublic getImageReference(id:string):DisplayObject\r\n\t{\r\n\t\treturn this._imageReference;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line at the point specified by\r\n\t * the <code>x</code> and <code>y</code> parameters.\r\n\t * \r\n\t * @param x The <i>x</i> coordinate of the line.\r\n\t * @param y The <i>y</i> coordinate of the line.\r\n\t * @return The zero-based index value of the line(for example, the first\r\n\t *         line is 0, the second line is 1, and so on). Returns -1 if the\r\n\t *         point is not over any line.\r\n\t */\r\n\tpublic getLineIndexAtPoint(x:number, y:number):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexAtPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the zero-based index value of the line containing the character\r\n\t * specified by the <code>charIndex</code> parameter.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return The zero-based index value of the line.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getLineIndexOfChar(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineIndexOfChar;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of characters in a specific text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want the length.\r\n\t * @return The number of characters in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineLength(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns metrics information about a given text line.\r\n\t * \r\n\t * @param lineIndex The line number for which you want metrics information.\r\n\t * @return A TextLineMetrics object.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineMetrics(lineIndex:number /*int*/):TextLineMetrics\r\n\t{\r\n\t\treturn this._lineMetrics;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the character index of the first character in the line that the\r\n\t * <code>lineIndex</code> parameter specifies.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The zero-based index value of the first character in the line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineOffset(lineIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._lineOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the text of the line specified by the <code>lineIndex</code>\r\n\t * parameter.\r\n\t * \r\n\t * @param lineIndex The zero-based index value of the line(for example, the\r\n\t *                  first line is 0, the second line is 1, and so on).\r\n\t * @return The text string contained in the specified line.\r\n\t * @throws RangeError The line number specified is out of range.\r\n\t */\r\n\tpublic getLineText(lineIndex:number /*int*/):string\r\n\t{\r\n\t\treturn this._lineText;\r\n\t}\r\n\r\n\t/**\r\n\t * Given a character index, returns the length of the paragraph containing\r\n\t * the given character. The length is relative to the first character in the\r\n\t * paragraph(as returned by <code>getFirstCharInParagraph()</code>), not to\r\n\t * the character index passed in.\r\n\t * \r\n\t * @param charIndex The zero-based index value of the character(for example,\r\n\t *                  the first character is 0, the second character is 1, and\r\n\t *                  so on).\r\n\t * @return Returns the number of characters in the paragraph.\r\n\t * @throws RangeError The character index specified is out of range.\r\n\t */\r\n\tpublic getParagraphLength(charIndex:number /*int*/):number /*int*/\r\n\t{\r\n\t\treturn this._paragraphLength;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TextFormat object that contains formatting information for the\r\n\t * range of text that the <code>beginIndex</code> and <code>endIndex</code>\r\n\t * parameters specify. Only properties that are common to the entire text\r\n\t * specified are set in the resulting TextFormat object. Any property that is\r\n\t * <i>mixed</i>, meaning that it has different values at different points in\r\n\t * the text, has a value of <code>null</code>.\r\n\t *\r\n\t * <p>If you do not specify values for these parameters, this method is\r\n\t * applied to all the text in the text field. </p>\r\n\t *\r\n\t * <p>The following table describes three possible usages:</p>\r\n\t * \r\n\t * @return The TextFormat object that represents the formatting properties\r\n\t *         for the specified text.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic getTextFormat(beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1):TextFormat\r\n\t{\r\n\t\treturn this._textFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the current selection with the contents of the <code>value</code>\r\n\t * parameter. The text is inserted at the position of the current selection,\r\n\t * using the current default character format and default paragraph format.\r\n\t * The text is not treated as HTML.\r\n\t *\r\n\t * <p>You can use the <code>replaceSelectedText()</code> method to insert and\r\n\t * delete text without disrupting the character and paragraph formatting of\r\n\t * the rest of the text.</p>\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param value The string to replace the currently selected text.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceSelectedText(value:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the range of characters that the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters specify with the contents of the\r\n\t * <code>newText</code> parameter. As designed, the text from\r\n\t * <code>beginIndex</code> to <code>endIndex-1</code> is replaced.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t * \r\n\t * @param beginIndex The zero-based index value for the start position of the\r\n\t *                   replacement range.\r\n\t * @param endIndex   The zero-based index position of the first character\r\n\t *                   after the desired text span.\r\n\t * @param newText    The text to use to replace the specified range of\r\n\t *                   characters.\r\n\t * @throws Error This method cannot be used on a text field with a style\r\n\t *               sheet.\r\n\t */\r\n\tpublic replaceText(beginIndex:number /*int*/, endIndex:number /*int*/, newText:string)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets as selected the text designated by the index values of the first and\r\n\t * last characters, which are specified with the <code>beginIndex</code> and\r\n\t * <code>endIndex</code> parameters. If the two parameter values are the\r\n\t * same, this method sets the insertion point, as if you set the\r\n\t * <code>caretIndex</code> property.\r\n\t * \r\n\t * @param beginIndex The zero-based index value of the first character in the\r\n\t *                   selection(for example, the first character is 0, the\r\n\t *                   second character is 1, and so on).\r\n\t * @param endIndex   The zero-based index value of the last character in the\r\n\t *                   selection.\r\n\t */\r\n\tpublic setSelection(beginIndex:number /*int*/, endIndex:number /*int*/)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the text formatting that the <code>format</code> parameter\r\n\t * specifies to the specified text in a text field. The value of\r\n\t * <code>format</code> must be a TextFormat object that specifies the desired\r\n\t * text formatting changes. Only the non-null properties of\r\n\t * <code>format</code> are applied to the text field. Any property of\r\n\t * <code>format</code> that is set to <code>null</code> is not applied. By\r\n\t * default, all of the properties of a newly created TextFormat object are\r\n\t * set to <code>null</code>.\r\n\t *\r\n\t * <p><b>Note:</b> This method does not work if a style sheet is applied to\r\n\t * the text field.</p>\r\n\t *\r\n\t * <p>The <code>setTextFormat()</code> method changes the text formatting\r\n\t * applied to a range of characters or to the entire body of text in a text\r\n\t * field. To apply the properties of format to all text in the text field, do\r\n\t * not specify values for <code>beginIndex</code> and <code>endIndex</code>.\r\n\t * To apply the properties of the format to a range of text, specify values\r\n\t * for the <code>beginIndex</code> and the <code>endIndex</code> parameters.\r\n\t * You can use the <code>length</code> property to determine the index\r\n\t * values.</p>\r\n\t *\r\n\t * <p>The two types of formatting information in a TextFormat object are\r\n\t * character level formatting and paragraph level formatting. Each character\r\n\t * in a text field can have its own character formatting settings, such as\r\n\t * font name, font size, bold, and italic.</p>\r\n\t *\r\n\t * <p>For paragraphs, the first character of the paragraph is examined for\r\n\t * the paragraph formatting settings for the entire paragraph. Examples of\r\n\t * paragraph formatting settings are left margin, right margin, and\r\n\t * indentation.</p>\r\n\t *\r\n\t * <p>Any text inserted manually by the user, or replaced by the\r\n\t * <code>replaceSelectedText()</code> method, receives the default text field\r\n\t * formatting for new text, and not the formatting specified for the text\r\n\t * insertion point. To set the default formatting for new text, use\r\n\t * <code>defaultTextFormat</code>.</p>\r\n\t * \r\n\t * @param format A TextFormat object that contains character and paragraph\r\n\t *               formatting information.\r\n\t * @throws Error      This method cannot be used on a text field with a style\r\n\t *                    sheet.\r\n\t * @throws RangeError The <code>beginIndex</code> or <code>endIndex</code>\r\n\t *                    specified is out of range.\r\n\t */\r\n\tpublic setTextFormat(format:TextFormat, beginIndex:number /*int*/ = -1, endIndex:number /*int*/ = -1)\r\n\t{\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if an embedded font is available with the specified\r\n\t * <code>fontName</code> and <code>fontStyle</code> where\r\n\t * <code>Font.fontType</code> is <code>flash.text.FontType.EMBEDDED</code>.\r\n\t * Starting with Flash Player 10, two kinds of embedded fonts can appear in a\r\n\t * SWF file. Normal embedded fonts are only used with TextField objects. CFF\r\n\t * embedded fonts are only used with the flash.text.engine classes. The two\r\n\t * types are distinguished by the <code>fontType</code> property of the\r\n\t * <code>Font</code> class, as returned by the <code>enumerateFonts()</code>\r\n\t * function.\r\n\t *\r\n\t * <p>TextField cannot use a font of type <code>EMBEDDED_CFF</code>. If\r\n\t * <code>embedFonts</code> is set to <code>true</code> and the only font\r\n\t * available at run time with the specified name and style is of type\r\n\t * <code>EMBEDDED_CFF</code>, Flash Player fails to render the text, as if no\r\n\t * embedded font were available with the specified name and style.</p>\r\n\t *\r\n\t * <p>If both <code>EMBEDDED</code> and <code>EMBEDDED_CFF</code> fonts are\r\n\t * available with the same name and style, the <code>EMBEDDED</code> font is\r\n\t * selected and text renders with the <code>EMBEDDED</code> font.</p>\r\n\t * \r\n\t * @param fontName  The name of the embedded font to check.\r\n\t * @param fontStyle Specifies the font style to check. Use\r\n\t *                  <code>flash.text.FontStyle</code>\r\n\t * @return <code>true</code> if a compatible embedded font is available,\r\n\t *         otherwise <code>false</code>.\r\n\t * @throws ArgumentError The <code>fontStyle</code> specified is not a member\r\n\t *                       of <code>flash.text.FontStyle</code>.\r\n\t */\r\n\tpublic static isFontCompatible(fontName:string, fontStyle:string):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n    public clone() : DisplayObject\r\n    {\r\n        var clone = new TextField();\r\n        this._iCopyToTextField(clone);\r\n        return clone;\r\n    }\r\n\r\n    public _iCopyToTextField(clone:TextField):void\r\n    {\r\n        this._iCopyToMesh(clone);\r\n        clone.textFormat = clone.textFormat;\r\n        clone.textColor = clone.textColor;\r\n        clone.text = clone.text;\r\n    }\r\n}\r\n\r\nexport = TextField;",
    "import Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\n\r\nclass CastError extends Error\r\n{\r\n\tconstructor(message:string)\r\n\t{\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport = CastError;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport Camera\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\n\r\n/**\r\n * @class away.events.CameraEvent\r\n */\r\nclass CameraEvent extends Event\r\n{\r\n\tpublic static PROJECTION_CHANGED:string = \"projectionChanged\";\r\n\r\n\tprivate _camera:Camera;\r\n\r\n\tconstructor(type:string, camera:Camera)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._camera = camera;\r\n\t}\r\n\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._camera;\r\n\t}\r\n}\r\n\r\nexport = CameraEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass DisplayObjectEvent extends Event\r\n{\r\n\tpublic static VISIBLITY_UPDATED:string = \"visiblityUpdated\";\r\n\tpublic static SCENETRANSFORM_CHANGED:string = \"scenetransformChanged\";\r\n\tpublic static SCENE_CHANGED:string = \"sceneChanged\";\r\n\tpublic static POSITION_CHANGED:string = \"positionChanged\";\r\n\tpublic static ROTATION_CHANGED:string = \"rotationChanged\";\r\n\tpublic static SCALE_CHANGED:string = \"scaleChanged\";\r\n    public static GLOBAL_COLOR_TRANSFORM_CHANGED:string = \"globalColorTransformChanged\";\r\n\r\n\tpublic object:DisplayObject;\r\n\r\n\tconstructor(type:string, object:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\t\tthis.object = object;\r\n\t}\r\n}\r\n\r\nexport = DisplayObjectEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\n\r\n\r\n/**\r\n* Dispatched to notify changes in a geometry object's state.\r\n*\r\n* @class away.events.GeometryEvent\r\n* @see away3d.core.base.Geometry\r\n*/\r\nclass GeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was added to the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_ADDED:string = \"subGeometryAdded\";\r\n\r\n\t/**\r\n\t * Dispatched when a TriangleSubGeometry was removed from the dispatching Geometry.\r\n\t */\r\n\tpublic static SUB_GEOMETRY_REMOVED:string = \"subGeometryRemoved\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static BOUNDS_INVALID:string = \"boundsInvalid\";\r\n\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param subGeometry An optional TriangleSubGeometry object that is the subject of this event.\r\n\t */\r\n\tconstructor(type:string, subGeometry:SubGeometryBase = null)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._subGeometry = subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The TriangleSubGeometry object that is the subject of this event, if appropriate.\r\n\t */\r\n\tpublic get subGeometry():SubGeometryBase\r\n\t{\r\n\t\treturn this._subGeometry;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new GeometryEvent(this.type, this._subGeometry);\r\n\t}\r\n}\r\n\r\nexport = GeometryEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass LightEvent extends Event\r\n{\r\n\r\n\tpublic static CASTS_SHADOW_CHANGE:string = \"castsShadowChange\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new LightEvent(this.type);\r\n\t}\r\n}\r\n\r\nexport = LightEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass MaterialEvent extends Event\r\n{\r\n\tpublic static SIZE_CHANGED:string = \"sizeChanged\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = MaterialEvent;",
    "import Point\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport View\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n/**\r\n * A MouseEvent is dispatched when a mouse event occurs over a mouseEnabled object in View.\r\n * TODO: we don't have screenZ data, tho this should be easy to implement\r\n */\r\nclass MouseEvent extends Event\r\n{\r\n\t// Private.\r\n\tpublic _iAllowedToPropagate:boolean = true;\r\n\tpublic _iParentEvent:MouseEvent;\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOver3d event object.\r\n\t */\r\n\tpublic static MOUSE_OVER:string = \"mouseOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseOut3d event object.\r\n\t */\r\n\tpublic static MOUSE_OUT:string = \"mouseOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseUp3d event object.\r\n\t */\r\n\tpublic static MOUSE_UP:string = \"mouseUp3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseDown3d event object.\r\n\t */\r\n\tpublic static MOUSE_DOWN:string = \"mouseDown3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseMove3d event object.\r\n\t */\r\n\tpublic static MOUSE_MOVE:string = \"mouseMove3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOver3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OVER : string = \"rollOver3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a rollOut3d event object.\r\n\t */\r\n//\t\tpublic static ROLL_OUT : string = \"rollOut3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a click3d event object.\r\n\t */\r\n\tpublic static CLICK:string = \"click3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a doubleClick3d event object.\r\n\t */\r\n\tpublic static DOUBLE_CLICK:string = \"doubleClick3d\";\r\n\r\n\t/**\r\n\t * Defines the value of the type property of a mouseWheel3d event object.\r\n\t */\r\n\tpublic static MOUSE_WHEEL:string = \"mouseWheel3d\";\r\n\r\n\t/**\r\n\t * The horizontal coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenX:number;\r\n\r\n\t/**\r\n\t * The vertical coordinate at which the event occurred in view coordinates.\r\n\t */\r\n\tpublic screenY:number;\r\n\r\n\t/**\r\n\t * The view object inside which the event took place.\r\n\t */\r\n\tpublic view:View;\r\n\r\n\t/**\r\n\t * The 3d object inside which the event took place.\r\n\t */\r\n\tpublic object:DisplayObject;\r\n\r\n\t/**\r\n\t * The renderable owner inside which the event took place.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * The material of the 3d element inside which the event took place.\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv coordinate inside the draw primitive where the event took place.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took place.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The position in object space where the event took place\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The normal in object space where the event took place\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * Indicates whether the Control key is active (true) or inactive (false).\r\n\t */\r\n\tpublic ctrlKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Alt key is active (true) or inactive (false).\r\n\t */\r\n\tpublic altKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates whether the Shift key is active (true) or inactive (false).\r\n\t */\r\n\tpublic shiftKey:boolean;\r\n\r\n\t/**\r\n\t * Indicates how many lines should be scrolled for each unit the user rotates the mouse wheel.\r\n\t */\r\n\tpublic delta:number;\r\n\r\n\t/**\r\n\t * Create a new MouseEvent object.\r\n\t * @param type The type of the MouseEvent.\r\n\t */\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get bubbles():boolean\r\n\t{\r\n\t\tvar doesBubble:boolean = this._iAllowedToPropagate;\r\n\t\tthis._iAllowedToPropagate = true;\r\n\r\n\t\t// Don't bubble if propagation has been stopped.\r\n\t\treturn doesBubble;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopPropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic stopImmediatePropagation()\r\n\t{\r\n\t\tthis._iAllowedToPropagate = false;\r\n\r\n\t\tif (this._iParentEvent)\r\n\t\t\tthis._iParentEvent.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a copy of the MouseEvent object and sets the value of each property to match that of the original.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\tvar result:MouseEvent = new MouseEvent(this.type);\r\n\r\n\t\t/* TODO: Debug / test - look into isDefaultPrevented\r\n\t\t if (isDefaultPrevented())\r\n\t\t result.preventDefault();\r\n\t\t */\r\n\r\n\t\tresult.screenX = this.screenX;\r\n\t\tresult.screenY = this.screenY;\r\n\r\n\t\tresult.view = this.view;\r\n\t\tresult.object = this.object;\r\n\t\tresult.renderableOwner = this.renderableOwner;\r\n\t\tresult.material = this.material;\r\n\t\tresult.uv = this.uv;\r\n\t\tresult.localPosition = this.localPosition;\r\n\t\tresult.localNormal = this.localNormal;\r\n\t\tresult.index = this.index;\r\n\t\tresult.subGeometryIndex = this.subGeometryIndex;\r\n\t\tresult.delta = this.delta;\r\n\r\n\t\tresult.ctrlKey = this.ctrlKey;\r\n\t\tresult.shiftKey = this.shiftKey;\r\n\r\n\t\tresult._iParentEvent = this;\r\n\t\tresult._iAllowedToPropagate = this._iAllowedToPropagate;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * The position in scene space where the event took place\r\n\t */\r\n\tpublic get scenePosition():Vector3D\r\n\t{\r\n\t\treturn this.object.sceneTransform.transformVector(this.localPosition);\r\n\t}\r\n\r\n\t/**\r\n\t * The normal in scene space where the event took place\r\n\t */\r\n\tpublic get sceneNormal():Vector3D\r\n\t{\r\n\t\tvar sceneNormal:Vector3D = this.object.sceneTransform.deltaTransformVector(this.localNormal);\r\n\t\tsceneNormal.normalize();\r\n\r\n\t\treturn sceneNormal;\r\n\t}\r\n}\r\n\r\nexport = MouseEvent;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport IRenderOwner\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.RenderableOwnerEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass RenderableOwnerEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a Renderable owners's render object owner has been updated.\r\n\t */\r\n\tpublic static RENDER_OWNER_UPDATED:string = \"renderOwnerUpdated\";\r\n\r\n\tprivate _renderOwner:IRenderOwner;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param dataType An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, renderOwner:IRenderOwner)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._renderOwner = renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * The renderobject owner of the renderable owner.\r\n\t */\r\n\tpublic get renderOwner():IRenderOwner\r\n\t{\r\n\t\treturn this._renderOwner;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new RenderableOwnerEvent(this.type, this._renderOwner);\r\n\t}\r\n}\r\n\r\nexport = RenderableOwnerEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass RendererEvent extends Event\r\n{\r\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\r\n\tpublic static SCISSOR_UPDATED:string = \"scissorUpdated\";\r\n\r\n\tconstructor(type:string)\r\n\t{\r\n\t\tsuper(type);\r\n\t}\r\n}\r\n\r\nexport = RendererEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nclass ResizeEvent extends Event\r\n{\r\n\tpublic static RESIZE:string = \"resize\";\r\n\r\n\tprivate _oldHeight:number;\r\n\tprivate _oldWidth:number;\r\n\r\n\tconstructor(type:string, oldHeight:number = NaN, oldWidth:number = NaN)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._oldHeight = oldHeight;\r\n\t\tthis._oldWidth = oldWidth;\r\n\t}\r\n\r\n\tpublic get oldHeight():number\r\n\t{\r\n\t\treturn this._oldHeight;\r\n\t}\r\n\r\n\tpublic get oldWidth():number\r\n\t{\r\n\t\treturn this._oldWidth;\r\n\t}\r\n}\r\n\r\nexport = ResizeEvent;",
    "import Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\nclass SceneEvent extends Event\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static ADDED_TO_SCENE:string = \"addedToScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static REMOVED_FROM_SCENE:string = \"removedFromScene\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic static PARTITION_CHANGED:string = \"partitionChanged\";\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\tconstructor(type:string, displayObject:DisplayObject)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n}\r\n\r\nexport = SceneEvent;",
    "import AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\n/**\r\n * Dispatched to notify changes in a sub geometry object's state.\r\n *\r\n * @class away.events.SubGeometryEvent\r\n * @see away.core.base.Geometry\r\n */\r\nclass SubGeometryEvent extends Event\r\n{\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been updated.\r\n\t */\r\n\tpublic static INDICES_UPDATED:string = \"indicesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's index data has been disposed.\r\n\t */\r\n\tpublic static INDICES_DISPOSED:string = \"indicesDisposed\";\r\n\t\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been updated.\r\n\t */\r\n\tpublic static VERTICES_UPDATED:string = \"verticesUpdated\";\r\n\r\n\t/**\r\n\t * Dispatched when a SubGeometry's vertex data has been disposed.\r\n\t */\r\n\tpublic static VERTICES_DISPOSED:string = \"verticesDisposed\";\r\n\r\n\t\r\n\tprivate _attributesView:AttributesView;\r\n\r\n\t/**\r\n\t * Create a new GeometryEvent\r\n\t * @param type The event type.\r\n\t * @param attributesView An optional data type of the vertex data being updated.\r\n\t */\r\n\tconstructor(type:string, attributesView:AttributesView)\r\n\t{\r\n\t\tsuper(type);\r\n\r\n\t\tthis._attributesView = attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * The attributes view of the vertex data.\r\n\t */\r\n\tpublic get attributesView():AttributesView\r\n\t{\r\n\t\treturn this._attributesView;\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the event.\r\n\t *\r\n\t * @return An exact duplicate of the current object.\r\n\t */\r\n\tpublic clone():Event\r\n\t{\r\n\t\treturn new SubGeometryEvent(this.type, this._attributesView);\r\n\t}\r\n}\r\n\r\nexport = SubGeometryEvent;",
    "import BitmapImage2D\t\t\t\t= require(\"awayjs-core/lib/data/BitmapImage2D\");\r\n\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport BasicMaterial\t\t\t\t= require(\"awayjs-display/lib/materials/BasicMaterial\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DefaultMaterialManager\r\n{\r\n\tprivate static _defaultBitmapImage2D:BitmapImage2D;\r\n\tprivate static _defaultTriangleMaterial:BasicMaterial;\r\n\tprivate static _defaultLineMaterial:BasicMaterial;\r\n\tprivate static _defaultTexture:Single2DTexture;\r\n\r\n\tpublic static getDefaultMaterial(renderableOwner:IRenderableOwner = null):MaterialBase\r\n\t{\r\n\t\tif (renderableOwner != null && renderableOwner.isAsset(LineSubMesh)) {\r\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\r\n\t\t} else {\r\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\r\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\r\n\r\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getDefaultTexture(renderableOwner:IRenderableOwner = null):Single2DTexture\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\treturn DefaultMaterialManager._defaultTexture;\r\n\t}\r\n\r\n\tprivate static createDefaultTexture()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultBitmapImage2D = DefaultMaterialManager.createCheckeredBitmapImage2D();\r\n\t\tDefaultMaterialManager._defaultTexture = new Single2DTexture(DefaultMaterialManager._defaultBitmapImage2D);\r\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\r\n\t}\r\n\r\n\tpublic static createCheckeredBitmapImage2D():BitmapImage2D\r\n\t{\r\n\t\tvar b:BitmapImage2D = new BitmapImage2D(8, 8, false, 0x000000);\r\n\r\n\t\t//create chekerboard\r\n\t\tvar i:number, j:number;\r\n\t\tfor (i = 0; i < 8; i++) {\r\n\t\t\tfor (j = 0; j < 8; j++) {\r\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\r\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn b;\r\n\t}\r\n\r\n\tprivate static createDefaultTriangleMaterial()\r\n\t{\r\n\t\tif (!DefaultMaterialManager._defaultTexture)\r\n\t\t\tDefaultMaterialManager.createDefaultTexture();\r\n\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new BasicMaterial(DefaultMaterialManager._defaultTexture);\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\r\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\r\n\t}\r\n\r\n\tprivate static createDefaultLineMaterial()\r\n\t{\r\n\t\tDefaultMaterialManager._defaultLineMaterial = new BasicMaterial();\r\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultLineMaterial\";\r\n\t}\r\n}\r\n\r\nexport = DefaultMaterialManager;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport AwayMouseEvent\t\t\t\t= require(\"awayjs-display/lib/events/MouseEvent\");\r\n\r\n/**\r\n * MouseManager enforces a singleton pattern and is not intended to be instanced.\r\n * it provides a manager class for detecting mouse hits on scene objects and sending out mouse events.\r\n */\r\nclass MouseManager\r\n{\r\n\tprivate static _instance:MouseManager;\r\n\r\n\tprivate _viewLookup:Array<View> = new Array<View>();\r\n\r\n\tpublic _iActiveDiv:HTMLDivElement;\r\n\tpublic _iUpdateDirty:boolean;\r\n\tpublic _iCollidingObject:PickingCollisionVO;\r\n\t\r\n\tprivate _nullVector:Vector3D = new Vector3D();\r\n\tprivate _previousCollidingObject:PickingCollisionVO;\r\n\tprivate _queuedEvents:Array<AwayMouseEvent> = new Array<AwayMouseEvent>();\r\n\r\n\tprivate _mouseMoveEvent:MouseEvent;\r\n\r\n\tprivate _mouseUp:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_UP);\r\n\tprivate _mouseClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.CLICK);\r\n\tprivate _mouseOut:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OUT);\r\n\tprivate _mouseDown:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_DOWN);\r\n\tprivate _mouseMove:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_MOVE);\r\n\tprivate _mouseOver:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_OVER);\r\n\tprivate _mouseWheel:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.MOUSE_WHEEL);\r\n\tprivate _mouseDoubleClick:AwayMouseEvent = new AwayMouseEvent(AwayMouseEvent.DOUBLE_CLICK);\r\n\r\n\tprivate onClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onDoubleClickDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseDownDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseMoveDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseUpDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseWheelDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOverDelegate:(event:MouseEvent) => void;\r\n\tprivate onMouseOutDelegate:(event:MouseEvent) => void;\r\n\r\n\t/**\r\n\t * Creates a new <code>MouseManager</code> object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis.onClickDelegate = (event:MouseEvent) => this.onClick(event);\r\n\t\tthis.onDoubleClickDelegate = (event:MouseEvent) => this.onDoubleClick(event);\r\n\t\tthis.onMouseDownDelegate = (event:MouseEvent) => this.onMouseDown(event);\r\n\t\tthis.onMouseMoveDelegate = (event:MouseEvent) => this.onMouseMove(event);\r\n\t\tthis.onMouseUpDelegate = (event:MouseEvent) => this.onMouseUp(event);\r\n\t\tthis.onMouseWheelDelegate = (event:MouseEvent) => this.onMouseWheel(event);\r\n\t\tthis.onMouseOverDelegate = (event:MouseEvent) => this.onMouseOver(event);\r\n\t\tthis.onMouseOutDelegate = (event:MouseEvent) => this.onMouseOut(event);\r\n\t}\r\n\r\n\tpublic static getInstance():MouseManager\r\n\t{\r\n\t\tif (this._instance)\r\n\t\t\treturn this._instance;\r\n\r\n\t\treturn (this._instance = new MouseManager());\r\n\t}\r\n\r\n\tpublic fireMouseEvents(forceMouseMove:boolean)\r\n\t{\r\n\t\t // If colliding object has changed, queue over/out events.\r\n\t\tif (this._iCollidingObject != this._previousCollidingObject) {\r\n\t\t\tif (this._previousCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOut, this._mouseMoveEvent, this._previousCollidingObject);\r\n\r\n\t\t\tif (this._iCollidingObject)\r\n\t\t\t\tthis.queueDispatch(this._mouseOver, this._mouseMoveEvent);\r\n\t\t}\r\n\r\n\t\t // Fire mouse move events here if forceMouseMove is on.\r\n\t\tif (forceMouseMove && this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseMove, this._mouseMoveEvent);\r\n\r\n\t\tvar event:AwayMouseEvent;\r\n\t\tvar dispatcher:DisplayObject;\r\n\r\n\t\t // Dispatch all queued events.\r\n\t\tvar len:number = this._queuedEvents.length;\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\t// Only dispatch from first implicitly enabled object ( one that is not a child of a mouseChildren = false hierarchy ).\r\n\t\t\tevent = this._queuedEvents[i];\r\n\t\t\tdispatcher = event.object;\r\n\r\n\t\t\twhile (dispatcher && !dispatcher._iIsMouseEnabled())\r\n\t\t\t\tdispatcher = dispatcher.parent;\r\n\r\n\t\t\tif (dispatcher)\r\n\t\t\t\tdispatcher.dispatchEvent(event);\r\n\t\t}\r\n\r\n\t\tthis._queuedEvents.length = 0;\r\n\r\n\t\tthis._previousCollidingObject = this._iCollidingObject;\r\n\r\n\t\tthis._iUpdateDirty = false;\r\n\t}\r\n\r\n//\t\tpublic addViewLayer(view:View)\r\n//\t\t{\r\n//\t\t\tvar stg:Stage = view.stage;\r\n//\r\n//\t\t\t// Add instance to mouse3dmanager to fire mouse events for multiple views\r\n//\t\t\tif (!view.stageGL.mouse3DManager)\r\n//\t\t\t\tview.stageGL.mouse3DManager = this;\r\n//\r\n//\t\t\tif (!hasKey(view))\r\n//\t\t\t\t_view3Ds[view] = 0;\r\n//\r\n//\t\t\t_childDepth = 0;\r\n//\t\t\ttraverseDisplayObjects(stg);\r\n//\t\t\t_viewCount = _childDepth;\r\n//\t\t}\r\n\r\n\tpublic registerView(view:View)\r\n\t{\r\n\t\tview.htmlElement.addEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.addEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.push(view);\r\n\t}\r\n\r\n\tpublic unregisterView(view:View)\r\n\t{\r\n\t\tview.htmlElement.removeEventListener(\"click\", this.onClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousemove\", this.onMouseMoveDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseup\", this.onMouseUpDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mousewheel\", this.onMouseWheelDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseover\", this.onMouseOverDelegate);\r\n\t\tview.htmlElement.removeEventListener(\"mouseout\", this.onMouseOutDelegate);\r\n\r\n\t\tthis._viewLookup.slice(this._viewLookup.indexOf(view), 1);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Private.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate queueDispatch(event:AwayMouseEvent, sourceEvent:MouseEvent, collider:PickingCollisionVO = null)\r\n\t{\r\n\t\t// 2D properties.\r\n\t\tif (sourceEvent) {\r\n\t\t\tevent.ctrlKey = sourceEvent.ctrlKey;\r\n\t\t\tevent.altKey = sourceEvent.altKey;\r\n\t\t\tevent.shiftKey = sourceEvent.shiftKey;\r\n\t\t\tevent.screenX = sourceEvent.clientX;\r\n\t\t\tevent.screenY = sourceEvent.clientY;\r\n\t\t}\r\n\r\n\t\tif (collider == null)\r\n\t\t\tcollider = this._iCollidingObject;\r\n\r\n\t\t// 3D properties.\r\n\t\tif (collider) {\r\n\t\t\t// Object.\r\n\t\t\tevent.object = collider.displayObject;\r\n\t\t\tevent.renderableOwner = collider.renderableOwner;\r\n\t\t\t// UV.\r\n\t\t\tevent.uv = collider.uv;\r\n\t\t\t// Position.\r\n\t\t\tevent.localPosition = collider.localPosition? collider.localPosition.clone() : null;\r\n\t\t\t// Normal.\r\n\t\t\tevent.localNormal = collider.localNormal? collider.localNormal.clone() : null;\r\n\t\t\t// Face index.\r\n\t\t\tevent.index = collider.index;\r\n\t\t} else {\r\n\t\t\t// Set all to null.\r\n\t\t\tevent.uv = null;\r\n\t\t\tevent.object = null;\r\n\t\t\tevent.localPosition = this._nullVector;\r\n\t\t\tevent.localNormal = this._nullVector;\r\n\t\t\tevent.index = 0;\r\n\t\t\tevent.subGeometryIndex = 0;\r\n\t\t}\r\n\r\n\t\t// Store event to be dispatched later.\r\n\t\tthis._queuedEvents.push(event);\r\n\t}\r\n\r\n\t// ---------------------------------------------------------------------\r\n\t// Listeners.\r\n\t// ---------------------------------------------------------------------\r\n\r\n\tprivate onMouseMove(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseMove, this._mouseMoveEvent = event);\r\n\t}\r\n\r\n\tprivate onMouseOut(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = null;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseOut, event);\r\n\t}\r\n\r\n\tprivate onMouseOver(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch( this._mouseOver, event);\r\n\t}\r\n\r\n\tprivate onClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseClick, event);\r\n\t}\r\n\r\n\tprivate onDoubleClick(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDoubleClick, event);\r\n\t}\r\n\r\n\tprivate onMouseDown(event:MouseEvent)\r\n\t{\r\n\t\tthis._iActiveDiv = <HTMLDivElement> event.target;\r\n\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseDown, event);\r\n\t}\r\n\r\n\tprivate onMouseUp(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseUp , event);\r\n\t}\r\n\r\n\tprivate onMouseWheel(event:MouseEvent)\r\n\t{\r\n\t\tthis.updateColliders(event);\r\n\r\n\t\tif (this._iCollidingObject)\r\n\t\t\tthis.queueDispatch(this._mouseWheel, event);\r\n\t}\r\n\r\n\r\n\tprivate updateColliders(event:MouseEvent)\r\n\t{\r\n\t\tif (this._iUpdateDirty)\r\n\t\t\treturn;\r\n\r\n\t\tvar view:View;\r\n\t\tvar bounds:ClientRect;\r\n\t\tvar mouseX:number = event.clientX;\r\n\t\tvar mouseY:number = event.clientY;\r\n\t\tvar len:number = this._viewLookup.length;\r\n\t\tfor (var i:number = 0; i < len; i++) {\r\n\t\t\tview = this._viewLookup[i];\r\n\t\t\tbounds = view.htmlElement.getBoundingClientRect();\r\n\t\t\tif (mouseX < bounds.left || mouseX > bounds.right || mouseY < bounds.top || mouseY > bounds.bottom) {\r\n\t\t\t\tview._pMouseX = null;\r\n\t\t\t\tview._pMouseY = null;\r\n\t\t\t} else {\r\n\t\t\t\tview._pMouseX = mouseX + bounds.left;\r\n\t\t\t\tview._pMouseY = mouseY + bounds.top;\r\n\t\t\t\tview.updateCollider();\r\n\r\n\t\t\t\tif (view.layeredView && this._iCollidingObject)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._iUpdateDirty = true;\r\n\t}\r\n}\r\n\r\nexport = MouseManager;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\n\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n/**\r\n * BasicMaterial forms an abstract base class for the default shaded materials provided by Stage,\r\n * using material methods to define their appearance.\r\n */\r\nclass BasicMaterial extends MaterialBase\r\n{\r\n\tpublic static assetType:string = \"[materials BasicMaterial]\";\r\n\r\n    private _preserveAlpha:boolean = false;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn BasicMaterial.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new BasicMaterial object.\r\n\t *\r\n\t * @param texture The texture used for the material's albedo color.\r\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\r\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\r\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\r\n\t */\r\n\tconstructor(texture?:Image2D, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(texture?:TextureBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\r\n\tconstructor(color?:number, alpha?:number);\r\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (textureColor instanceof Image2D)\r\n\t\t\ttextureColor = new Single2DTexture(textureColor);\r\n\r\n\t\tif (textureColor instanceof TextureBase) {\r\n\t\t\tthis.texture = <TextureBase> textureColor;\r\n\r\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\r\n\t\t\tthis.repeat = repeat;\r\n\t\t\tthis.mipmap = mipmap;\r\n\t\t} else {\r\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\r\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\r\n\t\t}\r\n\t}\r\n    /**\r\n     * Indicates whether alpha should be preserved - defaults to false\r\n     */\r\n    public get preserveAlpha():boolean\r\n    {\r\n        return this._preserveAlpha;\r\n    }\r\n    public set preserveAlpha(value:boolean)\r\n    {\r\n        if (this._preserveAlpha == value)\r\n            return;\r\n        this._preserveAlpha = value;\r\n        this._pInvalidateRender();\r\n    }\r\n}\r\n\r\nexport = BasicMaterial;",
    "/**\r\n * Enumeration class for defining which lighting types affect the specific material\r\n * lighting component (diffuse and specular). This can be useful if, for example, you\r\n * want to use light probes for diffuse global lighting, but want specular reflections from\r\n * traditional light sources without those affecting the diffuse light.\r\n *\r\n * @see away.materials.ColorMaterial.diffuseLightSources\r\n * @see away.materials.ColorMaterial.specularLightSources\r\n * @see away.materials.TextureMaterial.diffuseLightSources\r\n * @see away.materials.TextureMaterial.specularLightSources\r\n */\r\nclass LightSources\r\n{\r\n\t/**\r\n\t * Defines normal lights are to be used as the source for the lighting\r\n\t * component.\r\n\t */\r\n\tpublic static LIGHTS:number = 0x01;\r\n\r\n\t/**\r\n\t * Defines that global lighting probes are to be used as the source for the\r\n\t * lighting component.\r\n\t */\r\n\tpublic static PROBES:number = 0x02;\r\n\r\n\t/**\r\n\t * Defines that both normal and global lighting probes  are to be used as the\r\n\t * source for the lighting component. This is equivalent to LightSources.LIGHTS | LightSources.PROBES.\r\n\t */\r\n\tpublic static ALL:number = 0x03;\r\n}\r\n\r\nexport = LightSources;",
    "import BlendMode\t\t\t\t\t= require(\"awayjs-core/lib/data/BlendMode\");\r\nimport ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\r\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\r\nimport IRenderOwner\t\t\t\t\t= require(\"awayjs-display/lib/base/IRenderOwner\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\nimport IRender\t\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRender\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport MaterialEvent\t\t\t\t= require(\"awayjs-display/lib/events/MaterialEvent\");\r\nimport RenderableOwnerEvent\t\t\t= require(\"awayjs-display/lib/events/RenderableOwnerEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n\r\n/**\r\n * MaterialBase forms an abstract base class for any material.\r\n * A material consists of several passes, each of which constitutes at least one render call. Several passes could\r\n * be used for special effects (render lighting for many lights in several passes, render an outline in a separate\r\n * pass) or to provide additional render-to-texture passes (rendering diffuse light to texture for texture-space\r\n * subsurface scattering, or rendering a depth map for specialized self-shadowing).\r\n *\r\n * Away3D provides default materials trough SinglePassMaterialBase and TriangleMaterial, which use modular\r\n * methods to build the shader code. MaterialBase can be extended to build specific and high-performant custom\r\n * shaders, or entire new material frameworks.\r\n */\r\nclass MaterialBase extends AssetBase implements IRenderOwner\r\n{\r\n\tprivate _colorTransform:ColorTransform;\r\n\tprivate _pUseColorTransform:boolean = false;\r\n\tprivate _frameRect:Rectangle;\r\n\tprivate _alphaBlending:boolean = false;\r\n\tprivate _alpha:number = 1;\r\n\t\r\n\tprivate _sizeChanged:MaterialEvent;\r\n\tprivate _renders:Array<IRender> = new Array<IRender>();\r\n\r\n\tpublic _pAlphaThreshold:number = 0;\r\n\tpublic _pAnimateUVs:boolean = false;\r\n\tprivate _enableLightFallOff:boolean = true;\r\n\tprivate _specularLightSources:number = 0x01;\r\n\tprivate _diffuseLightSources:number = 0x03;\r\n\r\n\t/**\r\n\t * An object to contain any extra data.\r\n\t */\r\n\tpublic extra:Object;\r\n\r\n\t/**\r\n\t * A value that can be used by materials that only work with a given type of renderer. The renderer can test the\r\n\t * classification to choose which render path to use. For example, a deferred material could set this value so\r\n\t * that the deferred renderer knows not to take the forward rendering path.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iClassification:string;\r\n\r\n\r\n\t/**\r\n\t * An id for this material used to sort the renderables by shader program, which reduces Program state changes.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _iMaterialId:number = 0;\r\n\r\n\tpublic _iBaseScreenPassIndex:number = 0;\r\n\r\n\tprivate _bothSides:boolean = false; // update\r\n\tprivate _animationSet:IAnimationSet;\r\n\r\n\t/**\r\n\t * A list of material owners, renderables or custom Entities.\r\n\t */\r\n\tprivate _owners:Array<IRenderableOwner>;\r\n\r\n\tprivate _alphaPremultiplied:boolean;\r\n\r\n\tpublic _pBlendMode:string = BlendMode.NORMAL;\r\n\r\n\tprivate _mipmap:boolean = true;\r\n\tprivate _smooth:boolean = true;\r\n\tprivate _repeat:boolean = false;\r\n\tprivate _color:number = 0xFFFFFF;\r\n\tpublic _pTexture:TextureBase;\r\n\r\n\tpublic _pLightPicker:LightPickerBase;\r\n\r\n\tpublic _pHeight:number = 1;\r\n\tpublic _pWidth:number = 1;\r\n\r\n\tprivate _onLightChangeDelegate:(event:Event) => void;\r\n\r\n\t/**\r\n\t * Creates a new MaterialBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._iMaterialId = Number(this.id);\r\n\r\n\t\tthis._owners = new Array<IRenderableOwner>();\r\n\r\n\t\tthis._onLightChangeDelegate = (event:Event) => this.onLightsChange(event);\r\n\r\n\t\tthis.alphaPremultiplied = false; //TODO: work out why this is different for WebGL\r\n\t}\r\n\r\n\t/**\r\n\t * The alpha of the surface.\r\n\t */\r\n\tpublic get alpha():number\r\n\t{\r\n\t\treturn this._alpha;\r\n\t}\r\n\r\n\tpublic set alpha(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1;\r\n\t\telse if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tif (this._alpha == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alpha = value;\r\n\r\n\t\tif (this._colorTransform == null)\r\n\t\t\tthis._colorTransform = new ColorTransform();\r\n\r\n\t\tthis._colorTransform.alphaMultiplier = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\r\n\t */\r\n\tpublic get colorTransform():ColorTransform\r\n\t{\r\n\t\treturn this._colorTransform;\r\n\t}\r\n\r\n\tpublic set colorTransform(value:ColorTransform)\r\n\t{\r\n\t\tthis._colorTransform = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\r\n\t * example when using textures of foliage, consider using alphaThreshold instead.\r\n\t */\r\n\tpublic get alphaBlending():boolean\r\n\t{\r\n\t\treturn this._alphaBlending;\r\n\t}\r\n\r\n\tpublic set alphaBlending(value:boolean)\r\n\t{\r\n\t\tif (this._alphaBlending == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaBlending = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic get frameRect():Rectangle\r\n\t{\r\n\t\treturn this._frameRect;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._pHeight;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get animationSet():IAnimationSet\r\n\t{\r\n\t\treturn this._animationSet;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\r\n\t *\r\n\t * @see LightPickerBase\r\n\t * @see StaticLightPicker\r\n\t */\r\n\tpublic get lightPicker():LightPickerBase\r\n\t{\r\n\t\treturn this._pLightPicker;\r\n\t}\r\n\r\n\tpublic set lightPicker(value:LightPickerBase)\r\n\t{\r\n\t\tif (this._pLightPicker == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pLightPicker = value;\r\n\r\n\t\tif (this._pLightPicker)\r\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightChangeDelegate);\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use mipmapping. Defaults to true.\r\n\t */\r\n\tpublic get mipmap():boolean\r\n\t{\r\n\t\treturn this._mipmap;\r\n\t}\r\n\r\n\tpublic set mipmap(value:boolean)\r\n\t{\r\n\t\tif (this._mipmap == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._mipmap = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should use smoothing. Defaults to true.\r\n\t */\r\n\tpublic get smooth():boolean\r\n\t{\r\n\t\treturn this._smooth;\r\n\t}\r\n\r\n\tpublic set smooth(value:boolean)\r\n\t{\r\n\t\tif (this._smooth == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._smooth = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether or not any used textures should be tiled. If set to false, texture samples are clamped to\r\n\t * the texture's borders when the uv coordinates are outside the [0, 1] interval. Defaults to false.\r\n\t */\r\n\tpublic get repeat():boolean\r\n\t{\r\n\t\treturn this._repeat;\r\n\t}\r\n\r\n\tpublic set repeat(value:boolean)\r\n\t{\r\n\t\tif (this._repeat == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._repeat = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The diffuse reflectivity color of the surface.\r\n\t */\r\n\tpublic get color():number\r\n\t{\r\n\t\treturn this._color;\r\n\t}\r\n\r\n\tpublic set color(value:number)\r\n\t{\r\n\t\tif (this._color == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._color = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The texture object to use for the albedo colour.\r\n\t */\r\n\tpublic get texture():TextureBase\r\n\t{\r\n\t\treturn this._pTexture;\r\n\t}\r\n\r\n\tpublic set texture(value:TextureBase)\r\n\t{\r\n\t\tif (this._pTexture == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pTexture = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\r\n\t\tif (this._pTexture.isAsset(Single2DTexture)) {\r\n\t\t\tvar single2DTexture:Single2DTexture = <Single2DTexture> this._pTexture;\r\n\t\t\tthis._frameRect = single2DTexture.sampler2D.frameRect;\r\n\r\n\t\t\tthis._pHeight = single2DTexture.sampler2D.rect.height;\r\n\t\t\tthis._pWidth = single2DTexture.sampler2D.rect.width;\r\n\t\t} else {\r\n\t\t\tthis._frameRect = null;\r\n\t\t\tthis._pHeight = 1;\r\n\t\t\tthis._pWidth = 1;\r\n\t\t}\r\n\r\n\r\n\t\tthis._pNotifySizeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get animateUVs():boolean\r\n\t{\r\n\t\treturn this._pAnimateUVs;\r\n\t}\r\n\r\n\tpublic set animateUVs(value:boolean)\r\n\t{\r\n\t\tif (this._pAnimateUVs == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAnimateUVs = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies whether or not the UV coordinates should be animated using a transformation matrix.\r\n\t */\r\n\tpublic get useColorTransform():boolean\r\n\t{\r\n\t\treturn this._pUseColorTransform;\r\n\t}\r\n\r\n\tpublic set useColorTransform(value:boolean)\r\n\t{\r\n\t\tif (this._pUseColorTransform == value)\r\n\t\t\treturn;\r\n\t\tthis._pUseColorTransform = value;\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not to use fallOff and radius properties for lights. This can be used to improve performance and\r\n\t * compatibility for constrained mode.\r\n\t */\r\n\tpublic get enableLightFallOff():boolean\r\n\t{\r\n\t\treturn this._enableLightFallOff;\r\n\t}\r\n\r\n\tpublic set enableLightFallOff(value:boolean)\r\n\t{\r\n\t\tif (this._enableLightFallOff == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._enableLightFallOff = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for diffuse reflections. This allows choosing between regular lights\r\n\t * and/or light probes for diffuse reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get diffuseLightSources():number\r\n\t{\r\n\t\treturn this._diffuseLightSources;\r\n\t}\r\n\r\n\tpublic set diffuseLightSources(value:number)\r\n\t{\r\n\t\tif (this._diffuseLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._diffuseLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Define which light source types to use for specular reflections. This allows choosing between regular lights\r\n\t * and/or light probes for specular reflections.\r\n\t *\r\n\t * @see away3d.materials.LightSources\r\n\t */\r\n\tpublic get specularLightSources():number\r\n\t{\r\n\t\treturn this._specularLightSources;\r\n\t}\r\n\r\n\tpublic set specularLightSources(value:number)\r\n\t{\r\n\t\tif (this._specularLightSources == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._specularLightSources = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up resources owned by the material, including passes. Textures are not owned by the material since they\r\n\t * could be used by other materials and will not be disposed.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar len:number;\r\n\r\n\t\tlen = this._renders.length;\r\n\t\tfor (i = 0; i < len; i++)\r\n\t\t\tthis._renders[i].dispose();\r\n\r\n\t\tthis._renders = new Array<IRender>();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether or not the material should cull triangles facing away from the camera.\r\n\t */\r\n\tpublic get bothSides():boolean\r\n\t{\r\n\t\treturn this._bothSides;\r\n\t}\r\n\r\n\tpublic set bothSides(value:boolean)\r\n\t{\r\n\t\tif (this._bothSides = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._bothSides = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\r\n\t * <ul>\r\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\r\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\r\n\t * <li>BlendMode.MULTIPLY</li>\r\n\t * <li>BlendMode.ADD</li>\r\n\t * <li>BlendMode.ALPHA</li>\r\n\t * </ul>\r\n\t */\r\n\tpublic get blendMode():string\r\n\t{\r\n\t\treturn this._pBlendMode;\r\n\t}\r\n\r\n\tpublic set blendMode(value:string)\r\n\t{\r\n\t\tif (this._pBlendMode == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pBlendMode = value;\r\n\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether visible textures (or other pixels) used by this material have\r\n\t * already been premultiplied. Toggle this if you are seeing black halos around your\r\n\t * blended alpha edges.\r\n\t */\r\n\tpublic get alphaPremultiplied():boolean\r\n\t{\r\n\t\treturn this._alphaPremultiplied;\r\n\t}\r\n\r\n\tpublic set alphaPremultiplied(value:boolean)\r\n\t{\r\n\t\tif (this._alphaPremultiplied == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._alphaPremultiplied = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t * The minimum alpha value for which pixels should be drawn. This is used for transparency that is either\r\n\t * invisible or entirely opaque, often used with textures for foliage, etc.\r\n\t * Recommended values are 0 to disable alpha, or 0.5 to create smooth edges. Default value is 0 (disabled).\r\n\t */\r\n\tpublic get alphaThreshold():number\r\n\t{\r\n\t\treturn this._pAlphaThreshold;\r\n\t}\r\n\r\n\tpublic set alphaThreshold(value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (this._pAlphaThreshold == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pAlphaThreshold = value;\r\n\r\n\t\tthis._pInvalidatePasses();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._pWidth;\r\n\t}\r\n\r\n\t//\r\n\t// MATERIAL MANAGEMENT\r\n\t//\r\n\t/**\r\n\t * Mark an IRenderableOwner as owner of this material.\r\n\t * Assures we're not using the same material across renderables with different animations, since the\r\n\t * Programs depend on animation. This method needs to be called when a material is assigned.\r\n\t *\r\n\t * @param owner The IRenderableOwner that had this material assigned\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iAddOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.push(owner);\r\n\r\n\t\tvar animationSet:IAnimationSet;\r\n\t\tvar animator:IAnimator = <IAnimator> owner.animator;\r\n\r\n\t\tif (animator)\r\n\t\t\tanimationSet = <IAnimationSet> animator.animationSet;\r\n\r\n\t\tif (owner.animator) {\r\n\t\t\tif (this._animationSet && animationSet != this._animationSet) {\r\n\t\t\t\tthrow new Error(\"A Material instance cannot be shared across material owners with different animation sets\");\r\n\t\t\t} else {\r\n\t\t\t\tif (this._animationSet != animationSet) {\r\n\r\n\t\t\t\t\tthis._animationSet = animationSet;\r\n\r\n\t\t\t\t\tthis.invalidateAnimation();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an IRenderableOwner as owner.\r\n\t * @param owner\r\n\t *\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveOwner(owner:IRenderableOwner)\r\n\t{\r\n\t\tthis._owners.splice(this._owners.indexOf(owner), 1);\r\n\r\n\t\tif (this._owners.length == 0) {\r\n\t\t\tthis._animationSet = null;\r\n\r\n\t\t\tthis.invalidateAnimation();\r\n\t\t}\r\n\r\n\t\towner.dispatchEvent(new RenderableOwnerEvent(RenderableOwnerEvent.RENDER_OWNER_UPDATED, this));\r\n\t}\r\n\r\n\t/**\r\n\t * A list of the IRenderableOwners that use this material\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic get iOwners():Array<IRenderableOwner>\r\n\t{\r\n\t\treturn this._owners;\r\n\t}\r\n\r\n\t/**\r\n\t * Marks the shader programs for all passes as invalid, so they will be recompiled before the next use.\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic _pInvalidatePasses()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidatePasses();\r\n\t}\r\n\r\n\tprivate invalidateAnimation()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateAnimation();\r\n\t}\r\n\t\r\n\tpublic _pInvalidateRender()\r\n\t{\r\n\t\tvar len:number = this._renders.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._renders[i].invalidateRender();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the light picker's configuration changed.\r\n\t */\r\n\tprivate onLightsChange(event:Event)\r\n\t{\r\n\t\tthis._pInvalidateRender();\r\n\t}\r\n\r\n\tpublic _pNotifySizeChanged()\r\n\t{\r\n\t\tif (!this._sizeChanged)\r\n\t\t\tthis._sizeChanged = new MaterialEvent(MaterialEvent.SIZE_CHANGED);\r\n\r\n\t\tthis.dispatchEvent(this._sizeChanged);\r\n\t}\r\n\r\n\tpublic _iAddRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.push(render);\r\n\r\n\t\treturn render;\r\n\t}\r\n\r\n\tpublic _iRemoveRender(render:IRender):IRender\r\n\t{\r\n\t\tthis._renders.splice(this._renders.indexOf(render), 1);\r\n\r\n\t\treturn render;\r\n\t}\r\n}\r\n\r\nexport = MaterialBase;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\n\r\n/**\r\n * LightPickerBase provides an abstract base clase for light picker classes. These classes are responsible for\r\n * feeding materials with relevant lights. Usually, StaticLightPicker can be used, but LightPickerBase can be\r\n * extended to provide more application-specific dynamic selection of lights.\r\n *\r\n * @see StaticLightPicker\r\n */\r\nclass LightPickerBase extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset LightPicker]\";\r\n\r\n\tpublic _pNumPointLights:number = 0;\r\n\tpublic _pNumDirectionalLights:number = 0;\r\n\tpublic _pNumCastingPointLights:number = 0;\r\n\tpublic _pNumCastingDirectionalLights:number = 0;\r\n\tpublic _pNumLightProbes:number = 0;\r\n\r\n\tpublic _pAllPickedLights:Array<LightBase>;\r\n\tpublic _pPointLights:Array<PointLight>;\r\n\tpublic _pCastingPointLights:Array<PointLight>;\r\n\tpublic _pDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pCastingDirectionalLights:Array<DirectionalLight>;\r\n\tpublic _pLightProbes:Array<LightProbe>;\r\n\tpublic _pLightProbeWeights:Array<number>;\r\n\r\n\t/**\r\n\t * Creates a new LightPickerBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes resources used by the light picker.\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn LightPickerBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that will be provided.\r\n\t */\r\n\tpublic get numDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of point lights that will be provided.\r\n\t */\r\n\tpublic get numPointLights():number\r\n\t{\r\n\t\treturn this._pNumPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of directional lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingDirectionalLights():number\r\n\t{\r\n\t\treturn this._pNumCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The amount of point lights that cast shadows.\r\n\t */\r\n\tpublic get numCastingPointLights():number\r\n\t{\r\n\t\treturn this._pNumCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The maximum amount of light probes that will be provided.\r\n\t */\r\n\tpublic get numLightProbes():number\r\n\t{\r\n\t\treturn this._pNumLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights to be used for shading.\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights to be used for shading.\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected point lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingPointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pCastingPointLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected directional lights that cast shadows to be used for shading.\r\n\t */\r\n\tpublic get castingDirectionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._pCastingDirectionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t * The collected light probes to be used for shading.\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._pLightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t * The weights for each light probe, defining their influence on the object.\r\n\t */\r\n\tpublic get lightProbeWeights():Array<number>\r\n\t{\r\n\t\treturn this._pLightProbeWeights;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of all the collected lights.\r\n\t */\r\n\tpublic get allPickedLights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pAllPickedLights;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates set of lights for a given renderable and EntityCollector. Always call super.collectLights() after custom overridden code.\r\n\t */\r\n\tpublic collectLights(renderable:IRenderable)\r\n\t{\r\n\t\tthis.updateProbeWeights(renderable);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the weights for the light probes, based on the renderable's position relative to them.\r\n\t * @param renderable The renderble for which to calculate the light probes' influence.\r\n\t */\r\n\tprivate updateProbeWeights(renderable:IRenderable)\r\n\t{\r\n\t\t// todo: this will cause the same calculations to occur per TriangleSubMesh. See if this can be improved.\r\n\t\tvar objectPos:Vector3D = renderable.sourceEntity.scenePosition;\r\n\t\tvar lightPos:Vector3D;\r\n\r\n\t\tvar rx:number = objectPos.x, ry:number = objectPos.y, rz:number = objectPos.z;\r\n\t\tvar dx:number, dy:number, dz:number;\r\n\t\tvar w:number, total:number = 0;\r\n\t\tvar i:number;\r\n\r\n\t\t// calculates weights for probes\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i) {\r\n\r\n\t\t\tlightPos = this._pLightProbes[i].scenePosition;\r\n\t\t\tdx = rx - lightPos.x;\r\n\t\t\tdy = ry - lightPos.y;\r\n\t\t\tdz = rz - lightPos.z;\r\n\t\t\t// weight is inversely proportional to square of distance\r\n\t\t\tw = dx*dx + dy*dy + dz*dz;\r\n\r\n\t\t\t// just... huge if at the same spot\r\n\t\t\tw = w > .00001? 1/w : 50000000;\r\n\t\t\tthis._pLightProbeWeights[i] = w;\r\n\t\t\ttotal += w;\r\n\t\t}\r\n\r\n\t\t// normalize\r\n\t\ttotal = 1/total;\r\n\r\n\t\tfor (i = 0; i < this._pNumLightProbes; ++i)\r\n\t\t\tthis._pLightProbeWeights[i] *= total;\r\n\t}\r\n}\r\n\r\nexport = LightPickerBase;",
    "import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\n\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport LightEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/LightEvent\");\r\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\r\n\r\n/**\r\n * StaticLightPicker is a light picker that provides a static set of lights. The lights can be reassigned, but\r\n * if the configuration changes (number of directional lights, point lights, etc), a material recompilation may\r\n * occur.\r\n */\r\nclass StaticLightPicker extends LightPickerBase\r\n{\r\n\tprivate _lights:Array<any>;\r\n\tprivate _onCastShadowChangeDelegate:Function;\r\n\r\n\t/**\r\n\t * Creates a new StaticLightPicker object.\r\n\t * @param lights The lights to be used for shading.\r\n\t */\r\n\tconstructor(lights)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._onCastShadowChangeDelegate = (event:LightEvent) => this.onCastShadowChange(event);\r\n\r\n\t\tthis.lights = lights;\r\n\t}\r\n\r\n\t/**\r\n\t * The lights used for shading.\r\n\t */\r\n\tpublic get lights()\r\n\t{\r\n\t\treturn this._lights;\r\n\t}\r\n\r\n\tpublic set lights(value:Array<any>)\r\n\t{\r\n\t\tvar numPointLights:number = 0;\r\n\t\tvar numDirectionalLights:number = 0;\r\n\t\tvar numCastingPointLights:number = 0;\r\n\t\tvar numCastingDirectionalLights:number = 0;\r\n\t\tvar numLightProbes:number = 0;\r\n\t\tvar light:LightBase;\r\n\r\n\t\tif (this._lights)\r\n\t\t\tthis.clearListeners();\r\n\r\n\t\tthis._lights = value;\r\n\t\tthis._pAllPickedLights = value;\r\n\t\tthis._pPointLights = new Array<PointLight>();\r\n\t\tthis._pCastingPointLights = new Array<PointLight>();\r\n\t\tthis._pDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pCastingDirectionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pLightProbes = new Array<LightProbe>();\r\n\r\n\t\tvar len:number = value.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tlight = value[i];\r\n\t\t\tlight.addEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\r\n\t\t\tif (light instanceof PointLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingPointLights[numCastingPointLights++] = <PointLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pPointLights[numPointLights++] = <PointLight> light;\r\n\r\n\t\t\t} else if (light instanceof DirectionalLight) {\r\n\t\t\t\tif (light.castsShadows)\r\n\t\t\t\t\tthis._pCastingDirectionalLights[numCastingDirectionalLights++] = <DirectionalLight> light;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._pDirectionalLights[numDirectionalLights++] = <DirectionalLight> light;\r\n\r\n\t\t\t} else if (light instanceof LightProbe) {\r\n\t\t\t\tthis._pLightProbes[numLightProbes++] = <LightProbe> light;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pNumDirectionalLights == numDirectionalLights && this._pNumPointLights == numPointLights && this._pNumLightProbes == numLightProbes && this._pNumCastingPointLights == numCastingPointLights && this._pNumCastingDirectionalLights == numCastingDirectionalLights)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pNumDirectionalLights = numDirectionalLights;\r\n\t\tthis._pNumCastingDirectionalLights = numCastingDirectionalLights;\r\n\t\tthis._pNumPointLights = numPointLights;\r\n\t\tthis._pNumCastingPointLights = numCastingPointLights;\r\n\t\tthis._pNumLightProbes = numLightProbes;\r\n\r\n\t\t// MUST HAVE MULTIPLE OF 4 ELEMENTS!\r\n\t\tthis._pLightProbeWeights = new Array<number>(Math.ceil(numLightProbes/4)*4);\r\n\r\n\t\t// notify material lights have changed\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove configuration change listeners on the lights.\r\n\t */\r\n\tprivate clearListeners()\r\n\t{\r\n\t\tvar len:number = this._lights.length;\r\n\t\tfor (var i:number = 0; i < len; ++i)\r\n\t\t\tthis._lights[i].removeEventListener(LightEvent.CASTS_SHADOW_CHANGE, this._onCastShadowChangeDelegate);\r\n\t}\r\n\r\n\t/**\r\n\t * Notifies the material of a configuration change.\r\n\t */\r\n\tprivate onCastShadowChange(event:LightEvent)\r\n\t{\r\n\t\t// TODO: Assign to special caster collections, just append it to the lights in SinglePass\r\n\t\t// But keep seperated in multipass\r\n\r\n\t\tvar light:LightBase = <LightBase> event.target;\r\n\r\n\t\tif (light instanceof PointLight)\r\n\t\t\tthis.updatePointCasting(<PointLight> light);\r\n\t\telse if (light instanceof DirectionalLight)\r\n\t\t\tthis.updateDirectionalCasting(<DirectionalLight> light);\r\n\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a directional light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updateDirectionalCasting(light:DirectionalLight)\r\n\t{\r\n\t\tvar dl:DirectionalLight = <DirectionalLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumDirectionalLights;\r\n\t\t\t++this._pNumCastingDirectionalLights;\r\n\r\n\r\n\t\t\tthis._pDirectionalLights.splice(this._pDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pCastingDirectionalLights.push(light);\r\n\r\n\t\t} else {\r\n\t\t\t++this._pNumDirectionalLights;\r\n\t\t\t--this._pNumCastingDirectionalLights;\r\n\r\n\t\t\tthis._pCastingDirectionalLights.splice(this._pCastingDirectionalLights.indexOf(dl), 1);\r\n\t\t\tthis._pDirectionalLights.push(light);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called when a point light's shadow casting configuration changes.\r\n\t */\r\n\tprivate updatePointCasting(light:PointLight)\r\n\t{\r\n\t\tvar pl:PointLight = <PointLight> light;\r\n\r\n\t\tif (light.castsShadows) {\r\n\t\t\t--this._pNumPointLights;\r\n\t\t\t++this._pNumCastingPointLights;\r\n\t\t\tthis._pPointLights.splice(this._pPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pCastingPointLights.push(light);\r\n\t\t} else {\r\n\t\t\t++this._pNumPointLights;\r\n\t\t\t--this._pNumCastingPointLights;\r\n\r\n\t\t\tthis._pCastingPointLights.splice(this._pCastingPointLights.indexOf(pl), 1);\r\n\t\t\tthis._pPointLights.push(light);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = StaticLightPicker;",
    "import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\r\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\r\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\r\nimport IEventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/IEventDispatcher\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\nimport IProjection\t\t\t\t\t= require(\"awayjs-core/lib/projections/IProjection\");\r\n\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass CascadeShadowMapper extends DirectionalShadowMapper implements IEventDispatcher\r\n{\r\n\tpublic _pScissorRects:Rectangle[];\r\n\tprivate _pScissorRectsInvalid:boolean = true;\r\n\tprivate _splitRatios:number[];\r\n\r\n\tprivate _numCascades:number /*int*/;\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _depthLenses:Array<FreeMatrixProjection>;\r\n\r\n\tprivate _texOffsetsX:Array<number>;\r\n\tprivate _texOffsetsY:Array<number>;\r\n\r\n\tprivate _changeDispatcher:EventDispatcher;\r\n\tprivate _nearPlaneDistances:number[];\r\n\r\n\tconstructor(numCascades:number /*uint*/ = 3)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (numCascades < 1 || numCascades > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = numCascades;\r\n\t\tthis._changeDispatcher = new EventDispatcher(this);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tpublic getSplitRatio(index:number /*uint*/):number\r\n\t{\r\n\t\treturn this._splitRatios[index];\r\n\t}\r\n\r\n\tpublic setSplitRatio(index:number /*uint*/, value:number)\r\n\t{\r\n\t\tif (value < 0)\r\n\t\t\tvalue = 0;\r\n\t\telse if (value > 1)\r\n\t\t\tvalue = 1;\r\n\r\n\t\tif (index >= this._numCascades)\r\n\t\t\tthrow new Error(\"index must be smaller than the number of cascades!\");\r\n\r\n\t\tthis._splitRatios[index] = value;\r\n\t}\r\n\r\n\tpublic getDepthProjections(partition:number /*uint*/):Matrix3D\r\n\t{\r\n\t\treturn this._depthCameras[partition].viewProjection;\r\n\t}\r\n\r\n\tprivate init()\r\n\t{\r\n\t\tthis._splitRatios = new Array<number>(this._numCascades);\r\n\t\tthis._nearPlaneDistances = new Array<number>(this._numCascades);\r\n\r\n\t\tvar s:number = 1;\r\n\t\tfor (var i:number /*int*/ = this._numCascades - 1; i >= 0; --i) {\r\n\t\t\tthis._splitRatios[i] = s;\r\n\t\t\ts *= .4;\r\n\t\t}\r\n\r\n\t\tthis._texOffsetsX = Array<number>(-1, 1, -1, 1);\r\n\t\tthis._texOffsetsY = Array<number>(1, 1, -1, -1);\r\n\t\tthis._pScissorRects = new Array<Rectangle>(4);\r\n\t\tthis._depthLenses = new Array<FreeMatrixProjection>();\r\n\t\tthis._depthCameras = new Array<Camera>();\r\n\r\n\t\tfor (i = 0; i < this._numCascades; ++i) {\r\n\t\t\tthis._depthLenses[i] = new FreeMatrixProjection();\r\n\t\t\tthis._depthCameras[i] = new Camera(this._depthLenses[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value:number /*uint*/)\r\n\t{\r\n\t\tsuper._pSetDepthMapSize(value);\r\n\r\n\t\tthis.invalidateScissorRects();\r\n\t}\r\n\r\n\tprivate invalidateScissorRects()\r\n\t{\r\n\t\tthis._pScissorRectsInvalid = true;\r\n\t}\r\n\r\n\tpublic get numCascades():number /*int*/\r\n\t{\r\n\t\treturn this._numCascades;\r\n\t}\r\n\r\n\tpublic set numCascades(value:number /*int*/)\r\n\t{\r\n\t\tif (value == this._numCascades)\r\n\t\t\treturn;\r\n\r\n\t\tif (value < 1 || value > 4)\r\n\t\t\tthrow new Error(\"numCascades must be an integer between 1 and 4\");\r\n\r\n\t\tthis._numCascades = value;\r\n\t\tthis.invalidateScissorRects();\r\n\t\tthis.init();\r\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tif (this._pScissorRectsInvalid)\r\n\t\t\tthis.updateScissorRects();\r\n\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\r\n\t\trenderer._iRenderCascades(this._pCasterCollector, target.sampler2D.image2D, this._numCascades, this._pScissorRects, this._depthCameras);\r\n\t}\r\n\r\n\tprivate updateScissorRects()\r\n\t{\r\n\t\tvar half:number = this._pDepthMapSize*.5;\r\n\r\n\t\tthis._pScissorRects[0] = new Rectangle(0, 0, half, half);\r\n\t\tthis._pScissorRects[1] = new Rectangle(half, 0, half, half);\r\n\t\tthis._pScissorRects[2] = new Rectangle(0, half, half, half);\r\n\t\tthis._pScissorRects[3] = new Rectangle(half, half, half, half);\r\n\r\n\t\tthis._pScissorRectsInvalid = false;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar matrix:Matrix3D;\r\n\t\tvar projection:IProjection = viewCamera.projection;\r\n\t\tvar projectionNear:number = projection.near;\r\n\t\tvar projectionRange:number = projection.far - projectionNear;\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pMatrix.appendScale(.96, .96, 1);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < this._numCascades; ++i) {\r\n\t\t\tmatrix = this._depthLenses[i].matrix;\r\n\r\n\t\t\tthis._nearPlaneDistances[i] = projectionNear + this._splitRatios[i]*projectionRange;\r\n\t\t\tthis._depthCameras[i].transform.matrix3D = this._pOverallDepthCamera.transform.matrix3D;\r\n\r\n\t\t\tthis.updateProjectionPartition(matrix, this._splitRatios[i], this._texOffsetsX[i], this._texOffsetsY[i]);\r\n\r\n\t\t\tthis._depthLenses[i].matrix = matrix;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateProjectionPartition(matrix:Matrix3D, splitRatio:number, texOffsetX:number, texOffsetY:number)\r\n\t{\r\n\t\tvar raw:Array<number> = Matrix3DUtils.RAW_DATA_CONTAINER;\r\n\t\tvar xN:number, yN:number, zN:number;\r\n\t\tvar xF:number, yF:number, zF:number;\r\n\t\tvar minX:number = Number.POSITIVE_INFINITY, minY:number = Number.POSITIVE_INFINITY, minZ:number;\r\n\t\tvar maxX:number = Number.NEGATIVE_INFINITY, maxY:number = Number.NEGATIVE_INFINITY, maxZ:number = Number.NEGATIVE_INFINITY;\r\n\t\tvar i:number /*uint*/ = 0;\r\n\r\n\t\twhile (i < 12) {\r\n\t\t\txN = this._pLocalFrustum[i];\r\n\t\t\tyN = this._pLocalFrustum[i + 1];\r\n\t\t\tzN = this._pLocalFrustum[i + 2];\r\n\t\t\txF = xN + (this._pLocalFrustum[i + 12] - xN)*splitRatio;\r\n\t\t\tyF = yN + (this._pLocalFrustum[i + 13] - yN)*splitRatio;\r\n\t\t\tzF = zN + (this._pLocalFrustum[i + 14] - zN)*splitRatio;\r\n\t\t\tif (xN < minX)\r\n\t\t\t\tminX = xN;\r\n\t\t\tif (xN > maxX)\r\n\t\t\t\tmaxX = xN;\r\n\t\t\tif (yN < minY)\r\n\t\t\t\tminY = yN;\r\n\t\t\tif (yN > maxY)\r\n\t\t\t\tmaxY = yN;\r\n\t\t\tif (zN > maxZ)\r\n\t\t\t\tmaxZ = zN;\r\n\t\t\tif (xF < minX)\r\n\t\t\t\tminX = xF;\r\n\t\t\tif (xF > maxX)\r\n\t\t\t\tmaxX = xF;\r\n\t\t\tif (yF < minY)\r\n\t\t\t\tminY = yF;\r\n\t\t\tif (yF > maxY)\r\n\t\t\t\tmaxY = yF;\r\n\t\t\tif (zF > maxZ)\r\n\t\t\t\tmaxZ = zF;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tminZ = 1;\r\n\r\n\t\tvar w:number = (maxX - minX);\r\n\t\tvar h:number = (maxY - minY);\r\n\t\tvar d:number = 1/(maxZ - minZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 1)*snap2;\r\n\t\th = Math.floor(h/snap2 + 1)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -minZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t\tmatrix.appendScale(.96, .96, 1);\r\n\t\tmatrix.appendTranslation(texOffsetX, texOffsetY, 0);\r\n\t\tmatrix.appendScale(.5, .5, 1);\r\n\t}\r\n\r\n\tpublic addEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.addEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic removeEventListener(type:string, listener:Function)\r\n\t{\r\n\t\tthis._changeDispatcher.removeEventListener(type, listener);\r\n\t}\r\n\r\n\tpublic dispatchEvent(event:Event)\r\n\t{\r\n\t\treturn this._changeDispatcher.dispatchEvent(event);\r\n\t}\r\n\r\n\tpublic hasEventListener(type:string):boolean\r\n\t{\r\n\t\treturn this._changeDispatcher.hasEventListener(type);\r\n\t}\r\n\r\n\tget _iNearPlaneDistances():Array<number>\r\n\t{\r\n\t\treturn this._nearPlaneDistances;\r\n\t}\r\n}\r\n\r\nexport = CascadeShadowMapper;",
    "import ImageCube\t\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport PartialImplementationError\t= require(\"awayjs-core/lib/errors/PartialImplementationError\");\r\nimport PerspectiveProjection\t\t= require(\"awayjs-core/lib/projections/PerspectiveProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport SingleCubeTexture\t\t\t= require(\"awayjs-display/lib/textures/SingleCubeTexture\");\r\n\r\nclass CubeMapShadowMapper extends ShadowMapperBase\r\n{\r\n\tprivate _depthCameras:Array<Camera>;\r\n\tprivate _projections:Array<PerspectiveProjection>;\r\n\tprivate _needsRender:Array<boolean>;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pDepthMapSize = 512;\r\n\t\tthis._needsRender = new Array();\r\n\t\tthis.initCameras();\r\n\t}\r\n\r\n\tprivate initCameras()\r\n\t{\r\n\t\tthis._depthCameras = new Array();\r\n\t\tthis._projections = new Array();\r\n\r\n\t\t// posX, negX, posY, negY, posZ, negZ\r\n\t\tthis.addCamera(0, 90, 0);\r\n\t\tthis.addCamera(0, -90, 0);\r\n\t\tthis.addCamera(-90, 0, 0);\r\n\t\tthis.addCamera(90, 0, 0);\r\n\t\tthis.addCamera(0, 0, 0);\r\n\t\tthis.addCamera(0, 180, 0);\r\n\t}\r\n\r\n\tprivate addCamera(rotationX:number, rotationY:number, rotationZ:number)\r\n\t{\r\n\t\tvar cam:Camera = new Camera();\r\n\t\tcam.rotationX = rotationX;\r\n\t\tcam.rotationY = rotationY;\r\n\t\tcam.rotationZ = rotationZ;\r\n\t\tcam.projection.near = .01;\r\n\r\n\t\tvar projection:PerspectiveProjection = <PerspectiveProjection> cam.projection;\r\n\t\tprojection.fieldOfView = 90;\r\n\t\tthis._projections.push(projection);\r\n\t\tcam.projection._iAspectRatio = 1;\r\n\t\tthis._depthCameras.push(cam);\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pCreateDepthTexture():SingleCubeTexture\r\n\t{\r\n\t\t return new SingleCubeTexture(new ImageCube(this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar light:PointLight = <PointLight>(this._pLight);\r\n\t\tvar maxDistance:number = light._pFallOff;\r\n\t\tvar pos:Vector3D = this._pLight.scenePosition;\r\n\r\n\t\t// todo: faces outside frustum which are pointing away from camera need not be rendered!\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tthis._projections[i].far = maxDistance;\r\n\t\t\tthis._depthCameras[i].transform.position = pos;\r\n\t\t\tthis._needsRender[i] = true;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:SingleCubeTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tif (this._needsRender[i]) {\r\n\t\t\t\tthis._pCasterCollector.camera = this._depthCameras[i];\r\n\t\t\t\tthis._pCasterCollector.clear();\r\n\t\t\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\t\t\trenderer._iRender(this._pCasterCollector, target.samplerCube.imageCube, null, i)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = CubeMapShadowMapper;",
    "import Image2D\t\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport FreeMatrixProjection\t\t\t= require(\"awayjs-core/lib/projections/FreeMatrixProjection\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\r\nimport Single2DTexture\t\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\nclass DirectionalShadowMapper extends ShadowMapperBase\r\n{\r\n\tpublic _pOverallDepthCamera:Camera;\r\n\tpublic _pLocalFrustum:Array<number>;\r\n\r\n\tpublic _pLightOffset:number = 10000;\r\n\tpublic _pMatrix:Matrix3D;\r\n\tpublic _pOverallDepthProjection:FreeMatrixProjection;\r\n\tpublic _pSnap:number = 64;\r\n\r\n\tpublic _pCullPlanes:Array<Plane3D>;\r\n\tpublic _pMinZ:number;\r\n\tpublic _pMaxZ:number;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pCullPlanes = [];\r\n\t\tthis._pOverallDepthProjection = new FreeMatrixProjection();\r\n\t\tthis._pOverallDepthCamera = new Camera(this._pOverallDepthProjection);\r\n\t\tthis._pLocalFrustum = [];\r\n\t\tthis._pMatrix = new Matrix3D();\r\n\t}\r\n\r\n\tpublic get snap():number\r\n\t{\r\n\t\treturn this._pSnap;\r\n\t}\r\n\r\n\tpublic set snap(value:number)\r\n\t{\r\n\t\tthis._pSnap = value;\r\n\t}\r\n\r\n\tpublic get lightOffset():number\r\n\t{\r\n\t\treturn this._pLightOffset;\r\n\t}\r\n\r\n\tpublic set lightOffset(value:number)\r\n\t{\r\n\t\tthis._pLightOffset = value;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get iDepthProjection():Matrix3D\r\n\t{\r\n\t\treturn this._pOverallDepthCamera.viewProjection;\r\n\t}\r\n\r\n\t//@arcane\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._pMaxZ - this._pMinZ;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:Single2DTexture)\r\n\t{\r\n\t\tif (this._depthMap == depthMap)\r\n\t\t\treturn;\r\n\r\n\t\tsuper.iSetDepthMap(depthMap);\r\n\r\n\t\tif (this._depthMap) {\r\n\t\t\tthis._explicitDepthMap = true;\r\n\t\t\tthis._pDepthMapSize = depthMap.width;\r\n\t\t} else {\r\n\t\t\tthis._explicitDepthMap = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():Single2DTexture\r\n\t{\r\n\t\treturn new Single2DTexture(new Image2D(this._pDepthMapSize, this._pDepthMapSize));\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pDrawDepthMap(target:Single2DTexture, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthis._pCasterCollector.camera = this._pOverallDepthCamera;\r\n\t\tthis._pCasterCollector.cullPlanes = this._pCullPlanes;\r\n\t\tthis._pCasterCollector.clear();\r\n\t\tscene.traversePartitions(this._pCasterCollector);\r\n\t\trenderer._iRender(this._pCasterCollector, target.sampler2D.image2D);\r\n\t}\r\n\r\n\t//@protected\r\n\tpublic pUpdateCullPlanes(viewCamera:Camera)\r\n\t{\r\n\t\tvar lightFrustumPlanes:Array<Plane3D> = this._pOverallDepthCamera.frustumPlanes;\r\n\t\tvar viewFrustumPlanes:Array<Plane3D> = viewCamera.frustumPlanes;\r\n\t\tthis._pCullPlanes.length = 4;\r\n\r\n\t\tthis._pCullPlanes[0] = lightFrustumPlanes[0];\r\n\t\tthis._pCullPlanes[1] = lightFrustumPlanes[1];\r\n\t\tthis._pCullPlanes[2] = lightFrustumPlanes[2];\r\n\t\tthis._pCullPlanes[3] = lightFrustumPlanes[3];\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tvar dir:Vector3D = light.sceneDirection;\r\n\t\tvar dirX:number = dir.x;\r\n\t\tvar dirY:number = dir.y;\r\n\t\tvar dirZ:number = dir.z;\r\n\t\tvar j:number = 4;\r\n\t\tfor (var i:number = 0; i < 6; ++i) {\r\n\t\t\tvar plane:Plane3D = viewFrustumPlanes[i];\r\n\t\t\tif (plane.a*dirX + plane.b*dirY + plane.c*dirZ < 0)\r\n\t\t\t\tthis._pCullPlanes[j++] = plane;\r\n\t\t}\r\n\t}\r\n\r\n\t//@override\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, viewCamera.projection.frustumCorners, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t\tthis.pUpdateCullPlanes(viewCamera);\r\n\t}\r\n\r\n\tpublic pUpdateProjectionFromFrustumCorners(viewCamera:Camera, corners:Array<number>, matrix:Matrix3D)\r\n\t{\r\n\t\tvar raw:Array<number> = new Array<number>();\r\n\t\tvar dir:Vector3D;\r\n\t\tvar x:number, y:number, z:number;\r\n\t\tvar minX:number, minY:number;\r\n\t\tvar maxX:number, maxY:number;\r\n\t\tvar i:number;\r\n\r\n\t\tvar light:DirectionalLight = <DirectionalLight> this._pLight;\r\n\t\tdir = light.sceneDirection;\r\n\t\tthis._pOverallDepthCamera.transform.matrix3D = this._pLight.sceneTransform;\r\n\t\tx = Math.floor((viewCamera.x - dir.x*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\ty = Math.floor((viewCamera.y - dir.y*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tz = Math.floor((viewCamera.z - dir.z*this._pLightOffset)/this._pSnap)*this._pSnap;\r\n\t\tthis._pOverallDepthCamera.x = x;\r\n\t\tthis._pOverallDepthCamera.y = y;\r\n\t\tthis._pOverallDepthCamera.z = z;\r\n\r\n\t\tthis._pMatrix.copyFrom(this._pOverallDepthCamera.inverseSceneTransform);\r\n\t\tthis._pMatrix.prepend(viewCamera.sceneTransform);\r\n\t\tthis._pMatrix.transformVectors(corners, this._pLocalFrustum);\r\n\r\n\t\tminX = maxX = this._pLocalFrustum[0];\r\n\t\tminY = maxY = this._pLocalFrustum[1];\r\n\t\tthis._pMaxZ = this._pLocalFrustum[2];\r\n\r\n\t\ti = 3;\r\n\t\twhile (i < 24) {\r\n\t\t\tx = this._pLocalFrustum[i];\r\n\t\t\ty = this._pLocalFrustum[i + 1];\r\n\t\t\tz = this._pLocalFrustum[i + 2];\r\n\t\t\tif (x < minX)\r\n\t\t\t\tminX = x;\r\n\t\t\tif (x > maxX)\r\n\t\t\t\tmaxX = x;\r\n\t\t\tif (y < minY)\r\n\t\t\t\tminY = y;\r\n\t\t\tif (y > maxY)\r\n\t\t\t\tmaxY = y;\r\n\t\t\tif (z > this._pMaxZ)\r\n\t\t\t\tthis._pMaxZ = z;\r\n\t\t\ti += 3;\r\n\t\t}\r\n\r\n\t\tthis._pMinZ = 1;\r\n\r\n\t\tvar w:number = maxX - minX;\r\n\t\tvar h:number = maxY - minY;\r\n\t\tvar d:number = 1/(this._pMaxZ - this._pMinZ);\r\n\r\n\t\tif (minX < 0)\r\n\t\t\tminX -= this._pSnap; // because int() rounds up for < 0\r\n\r\n\t\tif (minY < 0)\r\n\t\t\tminY -= this._pSnap;\r\n\r\n\t\tminX = Math.floor(minX/this._pSnap)*this._pSnap;\r\n\t\tminY = Math.floor(minY/this._pSnap)*this._pSnap;\r\n\r\n\t\tvar snap2:number = 2*this._pSnap;\r\n\t\tw = Math.floor(w/snap2 + 2)*snap2;\r\n\t\th = Math.floor(h/snap2 + 2)*snap2;\r\n\r\n\t\tmaxX = minX + w;\r\n\t\tmaxY = minY + h;\r\n\r\n\t\tw = 1/w;\r\n\t\th = 1/h;\r\n\r\n\t\traw[0] = 2*w;\r\n\t\traw[5] = 2*h;\r\n\t\traw[10] = d;\r\n\t\traw[12] = -(maxX + minX)*w;\r\n\t\traw[13] = -(maxY + minY)*h;\r\n\t\traw[14] = -this._pMinZ*d;\r\n\t\traw[15] = 1;\r\n\t\traw[1] = raw[2] = raw[3] = raw[4] = raw[6] = raw[7] = raw[8] = raw[9] = raw[11] = 0;\r\n\r\n\t\tmatrix.copyRawDataFrom(raw);\r\n\t}\r\n}\r\n\r\nexport = DirectionalShadowMapper;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\r\n\r\nclass NearDirectionalShadowMapper extends DirectionalShadowMapper\r\n{\r\n\tprivate _coverageRatio:number;\r\n\r\n\tconstructor(coverageRatio:number = .5)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.coverageRatio = coverageRatio;\r\n\t}\r\n\r\n\t/**\r\n\t * A value between 0 and 1 to indicate the ratio of the view frustum that needs to be covered by the shadow map.\r\n\t */\r\n\tpublic get coverageRatio():number\r\n\t{\r\n\t\treturn this._coverageRatio;\r\n\t}\r\n\r\n\tpublic set coverageRatio(value:number)\r\n\t{\r\n\t\tif (value > 1)\r\n\t\t\tvalue = 1; else if (value < 0)\r\n\t\t\tvalue = 0;\r\n\r\n\t\tthis._coverageRatio = value;\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tvar corners:Array<number> = viewCamera.projection.frustumCorners;\r\n\r\n\t\tfor (var i:number /*int*/ = 0; i < 12; ++i) {\r\n\t\t\tvar v:number = corners[i];\r\n\t\t\tthis._pLocalFrustum[i] = v;\r\n\t\t\tthis._pLocalFrustum[i + 12] = v + (corners[i + 12] - v)*this._coverageRatio;\r\n\t\t}\r\n\r\n\t\tthis.pUpdateProjectionFromFrustumCorners(viewCamera, this._pLocalFrustum, this._pMatrix);\r\n\t\tthis._pOverallDepthProjection.matrix = this._pMatrix;\r\n\t}\r\n}\r\n\r\nexport = NearDirectionalShadowMapper;",
    "import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/IRenderer\");\r\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\r\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport TextureBase\t\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass ShadowMapperBase\r\n{\r\n\r\n\tpublic _pCasterCollector:ShadowCasterCollector;\r\n\r\n\tpublic _depthMap:TextureBase;\r\n\tpublic _pDepthMapSize:number = 2048;\r\n\tpublic _pLight:LightBase;\r\n\tpublic _explicitDepthMap:boolean;\r\n\tprivate _autoUpdateShadows:boolean = true;\r\n\tpublic _iShadowsInvalid:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pCasterCollector = this.pCreateCasterCollector();\r\n\t}\r\n\r\n\tpublic pCreateCasterCollector()\r\n\t{\r\n\t\treturn new ShadowCasterCollector();\r\n\t}\r\n\r\n\tpublic get autoUpdateShadows():boolean\r\n\t{\r\n\t\treturn this._autoUpdateShadows;\r\n\t}\r\n\r\n\tpublic set autoUpdateShadows(value:boolean)\r\n\t{\r\n\t\tthis._autoUpdateShadows = value;\r\n\t}\r\n\r\n\tpublic updateShadows()\r\n\t{\r\n\t\tthis._iShadowsInvalid = true;\r\n\t}\r\n\r\n\tpublic iSetDepthMap(depthMap:TextureBase)\r\n\t{\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = depthMap;\r\n\t}\r\n\r\n\tpublic get light():LightBase\r\n\t{\r\n\t\treturn this._pLight;\r\n\t}\r\n\r\n\tpublic set light(value:LightBase)\r\n\t{\r\n\t\tthis._pLight = value;\r\n\t}\r\n\r\n\tpublic get depthMap():TextureBase\r\n\t{\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\treturn this._depthMap;\r\n\t}\r\n\r\n\tpublic get depthMapSize():number\r\n\t{\r\n\t\treturn this._pDepthMapSize;\r\n\t}\r\n\r\n\tpublic set depthMapSize(value:number)\r\n\t{\r\n\t\tif (value == this._pDepthMapSize)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pSetDepthMapSize(value);\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pCasterCollector = null;\r\n\r\n\t\tif (this._depthMap && !this._explicitDepthMap)\r\n\t\t\tthis._depthMap.dispose();\r\n\r\n\t\tthis._depthMap = null;\r\n\t}\r\n\r\n\tpublic pCreateDepthTexture():TextureBase\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic iRenderDepthMap(entityCollector:EntityCollector, renderer:IRenderer)\r\n\t{\r\n\t\tthis._iShadowsInvalid = false;\r\n\r\n\t\tthis.pUpdateDepthProjection(entityCollector.camera);\r\n\r\n\t\tif (!this._depthMap)\r\n\t\t\tthis._depthMap = this.pCreateDepthTexture();\r\n\r\n\t\tthis.pDrawDepthMap(this._depthMap, entityCollector.scene, renderer);\r\n\t}\r\n\r\n\tpublic pUpdateDepthProjection(viewCamera:Camera)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic pDrawDepthMap(target:TextureBase, scene:Scene, renderer:IRenderer)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _pSetDepthMapSize(value)\r\n\t{\r\n\t\tthis._pDepthMapSize = value;\r\n\r\n\t\tif (this._explicitDepthMap) {\r\n\t\t\tthrow Error(\"Cannot set depth map size for the current renderer.\");\r\n\t\t} else if (this._depthMap) {\r\n\t\t\tthis._depthMap.dispose();\r\n\t\t\tthis._depthMap = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = ShadowMapperBase;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.CameraNode\r\n */\r\nclass CameraNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"cameraNode\";\r\n\r\n\tconstructor(pool:EntityNodePool, camera:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, camera, partition);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\t// todo: dead end for now, if it has a debug mesh, then sure accept that\r\n\t}\r\n}\r\n\r\nexport = CameraNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.DirectionalLightNode\r\n */\r\nclass DirectionalLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"directionalLightNode\";\r\n\r\n\tprivate _directionalLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param directionalLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, directionalLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, directionalLight, partition);\r\n\r\n\t\tthis._directionalLight = directionalLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyDirectionalLight(this._directionalLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = DirectionalLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport AxisAlignedBoundingBox\t\t= require(\"awayjs-display/lib/bounds/AxisAlignedBoundingBox\");\r\nimport BoundingSphere\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundingSphere\");\r\nimport BoundingVolumeBase\t\t\t= require(\"awayjs-display/lib/bounds/BoundingVolumeBase\");\r\nimport BoundsType\t\t\t\t\t= require(\"awayjs-display/lib/bounds/BoundsType\");\r\nimport NullBounds\t\t\t\t\t= require(\"awayjs-display/lib/bounds/NullBounds\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.EntityNode\r\n */\r\nclass EntityNode extends NodeBase\r\n{\r\n\tpublic static id:string = \"entityNode\";\r\n\r\n\tprivate _pool:EntityNodePool;\r\n\tprivate _entity:IEntity;\r\n\tprivate _partition:Partition;\r\n\tprivate _bounds:BoundingVolumeBase;\r\n\tpublic _iUpdateQueueNext:EntityNode;\r\n\r\n\tconstructor(pool:EntityNodePool, entity:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._pool = pool;\r\n\t\tthis._entity = entity;\r\n\t\tthis._partition = partition;\r\n\t\tthis._iNumEntities = 1;\r\n\r\n\t\tthis.updateBounds();\r\n\r\n\t\tthis.debugVisible = this._entity.debugVisible;\r\n\t}\r\n\r\n\tpublic get entity():IEntity\r\n\t{\r\n\t\treturn this._entity;\r\n\t}\r\n\r\n\tpublic removeFromParent():void\r\n\t{\r\n\t\tif (this._iParent)\r\n\t\t\tthis._iParent.iRemoveNode(this);\r\n\r\n\t\tthis._iParent = null;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn this.entity.castsShadows;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\treturn this._bounds.isInFrustum(planes, numPlanes);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\ttraverser.applyEntity(this._entity);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\tif (!this._entity._iIsVisible())\r\n\t\t\treturn false;\r\n\r\n\t\tvar pickingCollisionVO:PickingCollisionVO = this._entity._iPickingCollisionVO;\r\n\t\tpickingCollisionVO.localRayPosition = this._entity.inverseSceneTransform.transformVector(rayPosition);\r\n\t\tpickingCollisionVO.localRayDirection = this._entity.inverseSceneTransform.deltaTransformVector(rayDirection);\r\n\r\n\t\tif (!pickingCollisionVO.localNormal)\r\n\t\t\tpickingCollisionVO.localNormal = new Vector3D();\r\n\r\n\t\tvar rayEntryDistance:number = this._bounds.rayIntersection(pickingCollisionVO.localRayPosition, pickingCollisionVO.localRayDirection, pickingCollisionVO.localNormal);\r\n\r\n\t\tif (rayEntryDistance < 0)\r\n\t\t\treturn false;\r\n\r\n\t\tpickingCollisionVO.rayEntryDistance = rayEntryDistance;\r\n\t\tpickingCollisionVO.rayPosition = rayPosition;\r\n\t\tpickingCollisionVO.rayDirection = rayDirection;\r\n\t\tpickingCollisionVO.rayOriginIsInsideBounds = rayEntryDistance == 0;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\treturn this._bounds.boundsPrimitive;\r\n\t}\r\n\r\n\tpublic invalidatePartition()\r\n\t{\r\n\t\tthis._bounds.invalidate();\r\n\r\n\t\tthis._partition.iMarkForUpdate(this);\r\n\t}\r\n\r\n\tpublic updateBounds()\r\n\t{\r\n\t\tif (this._entity.boundsType == BoundsType.AXIS_ALIGNED_BOX)\r\n\t\t\tthis._bounds = new AxisAlignedBoundingBox(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.SPHERE)\r\n\t\t\tthis._bounds = new BoundingSphere(this._entity);\r\n\t\telse if (this._entity.boundsType == BoundsType.NULL)\r\n\t\t\tthis._bounds = new NullBounds();\r\n\r\n\t\tthis.updateDebugEntity();\r\n\t}\r\n}\r\n\r\nexport = EntityNode;",
    "import EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.LightProbeNode\r\n */\r\nclass LightProbeNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"lightProbeNode\";\r\n\r\n\tprivate _lightProbe:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param lightProbe\r\n\t */\r\n\tconstructor(pool:EntityNodePool, lightProbe:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, lightProbe, partition);\r\n\r\n\t\tthis._lightProbe = lightProbe;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyLightProbe(this._lightProbe);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = LightProbeNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.partition.NodeBase\r\n */\r\nclass NodeBase\r\n{\r\n\tprivate _debugChildrenVisible:boolean;\r\n\tprivate _explicitDebugVisible:boolean;\r\n\tpublic _pImplicitDebugVisible:boolean;\r\n\tpublic _iParent:NodeBase;\r\n\tpublic _pChildNodes:Array<NodeBase>;\r\n\tpublic _pNumChildNodes:number = 0;\r\n\r\n\tpublic _pDebugEntity:IEntity;\r\n\r\n\tpublic _iNumEntities:number = 0;\r\n\tpublic _iCollectionMark:number;// = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get debugVisible():boolean\r\n\t{\r\n\t\treturn this._explicitDebugVisible;\r\n\t}\r\n\r\n\tpublic set debugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._explicitDebugVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._explicitDebugVisible = value;\r\n\r\n\t\tthis._iUpdateImplicitDebugVisible(this._iParent? this._iParent.debugChildrenVisible : false);\r\n\r\n\t}\r\n\r\n\tpublic get debugChildrenVisible():boolean\r\n\t{\r\n\t\treturn this._debugChildrenVisible;\r\n\t}\r\n\r\n\tpublic set debugChildrenVisible(value:boolean)\r\n\t{\r\n\t\tif (this._debugChildrenVisible == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._debugChildrenVisible = value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get parent():NodeBase\r\n\t{\r\n\t\treturn this._iParent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic get _pNumEntities():number\r\n\t{\r\n\t\treturn this._iNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pChildNodes = new Array<NodeBase>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t * @internal\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param rayPosition\r\n\t * @param rayDirection\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isIntersectingRay(rayPosition:Vector3D, rayDirection:Vector3D):boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t * @returns {away.partition.NodeBase}\r\n\t */\r\n\tpublic findPartitionForEntity(entity:IEntity):NodeBase\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param traverser\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pNumEntities == 0 && !this._pImplicitDebugVisible)\r\n\t\t\treturn;\r\n\r\n\t\tif (traverser.enterNode(this)) {\r\n\t\t\tvar i:number = 0;\r\n\r\n\t\t\twhile (i < this._pNumChildNodes)\r\n\t\t\t\tthis._pChildNodes[i++].acceptTraverser(traverser);\r\n\r\n\t\t\tif (this._pImplicitDebugVisible && traverser.isEntityCollector)\r\n\t\t\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @protected\r\n\t */\r\n\tpublic applyDebugEntity(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._pDebugEntity == null)\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\r\n\t\ttraverser.applyEntity(this._pDebugEntity);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iAddNode(node:NodeBase)\r\n\t{\r\n\t\tnode._iParent = this;\r\n\t\tthis._iNumEntities += node._pNumEntities;\r\n\t\tthis._pChildNodes[ this._pNumChildNodes++ ] = node;\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(this.debugChildrenVisible);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._iNumEntities += numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @internal\r\n\t */\r\n\tpublic iRemoveNode(node:NodeBase)\r\n\t{\r\n\t\tvar index:number = this._pChildNodes.indexOf(node);\r\n\t\tthis._pChildNodes[index] = this._pChildNodes[--this._pNumChildNodes];\r\n\t\tthis._pChildNodes.pop();\r\n\r\n\t\tnode._iUpdateImplicitDebugVisible(false);\r\n\r\n\t\tvar numEntities:number = node._pNumEntities;\r\n\t\tnode = this;\r\n\r\n\t\tdo {\r\n\t\t\tnode._pNumEntities -= numEntities;\r\n\t\t} while ((node = node._iParent) != null);\r\n\t}\r\n\r\n\tprivate _iUpdateImplicitDebugVisible(value:boolean)\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible == this._explicitDebugVisible || value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._pImplicitDebugVisible = this._explicitDebugVisible || value;\r\n\r\n\t\tfor (var i:number = 0; i < this._pNumChildNodes; ++i)\r\n\t\t\tthis._pChildNodes[i]._iUpdateImplicitDebugVisible(this._debugChildrenVisible);\r\n\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t} else {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tpublic updateDebugEntity()\r\n\t{\r\n\t\tif (this._pImplicitDebugVisible) {\r\n\t\t\t//this._pDebugEntity.dispose();\r\n\t\t\tthis._pDebugEntity = this._pCreateDebugEntity();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _pCreateDebugEntity():IEntity\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n}\r\n\r\nexport = NodeBase;",
    "/**\r\n * @class away.partition.NullNode\r\n */\r\nclass NullNode\r\n{\r\n\tconstructor()\r\n\t{\r\n\t}\r\n}\r\n\r\nexport = NullNode;",
    "import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\nimport CameraNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/CameraNode\");\r\nimport DirectionalLightNode\t\t\t= require(\"awayjs-display/lib/partition/DirectionalLightNode\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport LightProbeNode\t\t\t\t= require(\"awayjs-display/lib/partition/LightProbeNode\");\r\nimport PointLightNode\t\t\t\t= require(\"awayjs-display/lib/partition/PointLightNode\");\r\nimport SkyboxNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/SkyboxNode\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport NullNode\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NullNode\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.partition.Partition\r\n */\r\nclass Partition\r\n{\r\n\tprivate _cameraNodePool:EntityNodePool;\r\n\tprivate _directionalLightNodePool:EntityNodePool;\r\n\tprivate _entityNodePool:EntityNodePool;\r\n\tprivate _lightProbeNodePool:EntityNodePool;\r\n\tprivate _pointLightNodePool:EntityNodePool;\r\n\tprivate _skyboxNodePool:EntityNodePool;\r\n\r\n\tpublic _rootNode:NodeBase;\r\n\tprivate _updatesMade:Boolean = false;\r\n\tprivate _updateQueue:EntityNode;\r\n\r\n\tconstructor(rootNode:NodeBase)\r\n\t{\r\n\t\tthis._rootNode = rootNode || <NodeBase> new NullNode();\r\n\r\n\t\tthis._cameraNodePool = new EntityNodePool(CameraNode, this);\r\n\t\tthis._directionalLightNodePool = new EntityNodePool(DirectionalLightNode, this);\r\n\t\tthis._entityNodePool = new EntityNodePool(EntityNode, this);\r\n\t\tthis._lightProbeNodePool = new EntityNodePool(LightProbeNode, this);\r\n\t\tthis._pointLightNodePool = new EntityNodePool(PointLightNode, this);\r\n\t\tthis._skyboxNodePool = new EntityNodePool(SkyboxNode, this);\r\n\t}\r\n\r\n\tpublic get rootNode():NodeBase\r\n\t{\r\n\t\treturn this._rootNode;\r\n\t}\r\n\r\n\tpublic traverse(traverser:CollectorBase)\r\n\t{\r\n\t\tif (this._updatesMade)\r\n\t\t\tthis.updateEntities();\r\n\r\n\t\tthis._rootNode.acceptTraverser(traverser);\r\n\t}\r\n\r\n\tpublic iMarkForUpdate(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode = this._updateQueue;\r\n\r\n\t\twhile (t) {\r\n\t\t\tif (node == t)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tt = t._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = this._updateQueue;\r\n\r\n\t\tthis._updateQueue = node;\r\n\t\tthis._updatesMade = true;\r\n\t}\r\n\r\n\tpublic iRemoveEntity(node:EntityNode)\r\n\t{\r\n\t\tvar t:EntityNode;\r\n\r\n\t\tnode.removeFromParent();\r\n\r\n\t\tif (node == this._updateQueue) {\r\n\t\t\tthis._updateQueue = node._iUpdateQueueNext;\r\n\t\t} else {\r\n\t\t\tt = this._updateQueue;\r\n\t\t\twhile (t && t._iUpdateQueueNext != node)\r\n\t\t\t\tt = t._iUpdateQueueNext;\r\n\r\n\t\t\tif (t)\r\n\t\t\t\tt._iUpdateQueueNext = node._iUpdateQueueNext;\r\n\t\t}\r\n\r\n\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\tif (!this._updateQueue)\r\n\t\t\tthis._updatesMade = false;\r\n\t}\r\n\r\n\tprivate updateEntities()\r\n\t{\r\n\t\tvar node:EntityNode = this._updateQueue;\r\n\t\tvar targetNode:NodeBase;\r\n\t\tvar t:EntityNode;\r\n\t\tthis._updateQueue = null;\r\n\t\tthis._updatesMade = false;\r\n\r\n\t\tdo {\r\n\t\t\ttargetNode = this._rootNode.findPartitionForEntity(node.entity);\r\n\r\n\t\t\tif (node.parent != targetNode) {\r\n\t\t\t\tif (node)\r\n\t\t\t\t\tnode.removeFromParent();\r\n\r\n\t\t\t\ttargetNode.iAddNode(node);\r\n\t\t\t}\r\n\r\n\t\t\tt = node._iUpdateQueueNext;\r\n\t\t\tnode._iUpdateQueueNext = null;\r\n\r\n\t\t\t//required for controllers with autoUpdate set to true\r\n\t\t\tnode.entity._iInternalUpdate();\r\n\r\n\t\t} while ((node = t) != null);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._cameraNodePool.getItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._directionalLightNodePool.getItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._entityNodePool.getItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._lightProbeNodePool.getItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._pointLightNodePool.getItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iRegisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iMarkForUpdate(this._skyboxNodePool.getItem(skybox));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterCamera(camera:Camera)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._cameraNodePool.disposeItem(camera));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterDirectionalLight(directionalLight:DirectionalLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._directionalLightNodePool.disposeItem(directionalLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterEntity(entity:IEntity)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._entityNodePool.disposeItem(entity));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterLightProbe(lightProbe:LightProbe)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._lightProbeNodePool.disposeItem(lightProbe));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterPointLight(pointLight:PointLight)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._pointLightNodePool.disposeItem(pointLight));\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tpublic _iUnregisterSkybox(skybox:Skybox)\r\n\t{\r\n\t\tthis.iRemoveEntity(this._skyboxNodePool.disposeItem(skybox));\r\n\t}\r\n}\r\n\r\nexport = Partition;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * @class away.partition.PointLightNode\r\n */\r\nclass PointLightNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"pointLightNode\";\r\n\r\n\tprivate _pointLight:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t * @param pointLight\r\n\t */\r\n\tconstructor(pool:EntityNodePool, pointLight:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, pointLight, partition);\r\n\r\n\t\tthis._pointLight = pointLight;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(this))\r\n\t\t\ttraverser.applyPointLight(this._pointLight);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isCastingShadow():boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport = PointLightNode;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNodePool\t\t\t\t= require(\"awayjs-display/lib/pool/EntityNodePool\");\r\n\r\n/**\r\n * SkyboxNode is a space partitioning leaf node that contains a Skybox object.\r\n *\r\n * @class away.partition.SkyboxNode\r\n */\r\nclass SkyboxNode extends EntityNode\r\n{\r\n\tpublic static id:string = \"skyboxNode\";\r\n\r\n\tprivate _skyBox:IEntity;\r\n\r\n\t/**\r\n\t * Creates a new SkyboxNode object.\r\n\t * @param skyBox The Skybox to be contained in the node.\r\n\t */\r\n\tconstructor(pool:EntityNodePool, skyBox:IEntity, partition:Partition)\r\n\t{\r\n\t\tsuper(pool, skyBox, partition);\r\n\r\n\t\tthis._skyBox = skyBox;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic acceptTraverser(traverser:CollectorBase)\r\n\t{\r\n\t\tif (traverser.enterNode(<NodeBase> this))\r\n\t\t\ttraverser.applySkybox(this._skyBox);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param planes\r\n\t * @param numPlanes\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic isInFrustum(planes:Array<Plane3D>, numPlanes:number):boolean\r\n\t{\r\n\t\tif (!this._skyBox._iIsVisible)\r\n\t\t\treturn false;\r\n\r\n\t\t//a skybox is always in view unless its visibility is set to false\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport = SkyboxNode;",
    "import Vector3D\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\nimport Point\t\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\n\r\nimport ISubMesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/base/ISubMesh\");\r\nimport CurveSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport LineSubGeometry\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport Billboard\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\r\nimport PickingCollisionVO\t\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport IPickingCollider\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPickingCollider\");\r\nimport MaterialBase\t\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n\r\n\r\n/**\r\n * Pure JS picking collider for display objects. Used with the <code>RaycastPicker</code> picking object.\r\n *\r\n * @see away.base.DisplayObject#pickingCollider\r\n * @see away.pick.RaycastPicker\r\n *\r\n * @class away.pick.JSPickingCollider\r\n */\r\nclass JSPickingCollider implements IPickingCollider\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\r\n\t/**\r\n\t * Creates a new <code>JSPickingCollider</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picking collider searches for the closest collision along the ray. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Tests a <code>Billboard</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param billboard The billboard instance to be tested.\r\n\t * @param pickingCollisionVO The collision object used to store the collision results\r\n\t * @param shortestCollisionDistance The current value of the shortest distance to a detected collision along the ray.\r\n\t * @param findClosest\r\n\t */\r\n\tpublic testBillboardCollision(billboard:Billboard, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number)\r\n\t{\r\n\t\tpickingCollisionVO.renderableOwner = null;\r\n\r\n\t\t//if (this._testSubMeshCollision(<RenderableBase> this._renderablePool.getItem(billboard), pickingCollisionVO, shortestCollisionDistance)) {\r\n\t\t//\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t//\r\n\t\t//\tpickingCollisionVO.renderableOwner = billboard;\r\n\t\t//\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>TriangleSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testTriangleCollision(triangleSubGeometry:TriangleSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar t:number;\r\n\t\tvar i0:number, i1:number, i2:number;\r\n\t\tvar rx:number, ry:number, rz:number;\r\n\t\tvar nx:number, ny:number, nz:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar coeff:number, u:number, v:number, w:number;\r\n\t\tvar p0x:number, p0y:number, p0z:number;\r\n\t\tvar p1x:number, p1y:number, p1z:number;\r\n\t\tvar p2x:number, p2y:number, p2z:number;\r\n\t\tvar s0x:number, s0y:number, s0z:number;\r\n\t\tvar s1x:number, s1y:number, s1z:number;\r\n\t\tvar nl:number, nDotV:number, D:number, disToPlane:number;\r\n\t\tvar Q1Q2:number, Q1Q1:number, Q2Q2:number, RQ1:number, RQ2:number;\r\n\t\tvar indices:Uint16Array = triangleSubGeometry.indices.get(triangleSubGeometry.numElements);\r\n\t\tvar collisionTriangleIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\t\tvar positions:Float32Array = triangleSubGeometry.positions.get(triangleSubGeometry.numVertices);\r\n\t\tvar posDim:number = triangleSubGeometry.positions.dimensions;\r\n\t\tvar uvs:Float32Array = triangleSubGeometry.uvs.get(triangleSubGeometry.numVertices);\r\n\t\tvar uvDim:number = triangleSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\t\tfor (var index:number = 0; index < numIndices; index += 3) { // sweep all triangles\r\n\t\t\t// evaluate triangle indices\r\n\t\t\ti0 = indices[index]*posDim;\r\n\t\t\ti1 = indices[index + 1]*posDim;\r\n\t\t\ti2 = indices[index + 2]*posDim;\r\n\r\n\t\t\t// evaluate triangle positions\r\n\t\t\tp0x = positions[i0];\r\n\t\t\tp0y = positions[i0 + 1];\r\n\t\t\tp0z = positions[i0 + 2];\r\n\t\t\tp1x = positions[i1];\r\n\t\t\tp1y = positions[i1 + 1];\r\n\t\t\tp1z = positions[i1 + 2];\r\n\t\t\tp2x = positions[i2];\r\n\t\t\tp2y = positions[i2 + 1];\r\n\t\t\tp2z = positions[i2 + 2];\r\n\r\n\t\t\t// evaluate sides and triangle normal\r\n\t\t\ts0x = p1x - p0x; // s0 = p1 - p0\r\n\t\t\ts0y = p1y - p0y;\r\n\t\t\ts0z = p1z - p0z;\r\n\t\t\ts1x = p2x - p0x; // s1 = p2 - p0\r\n\t\t\ts1y = p2y - p0y;\r\n\t\t\ts1z = p2z - p0z;\r\n\t\t\tnx = s0y*s1z - s0z*s1y; // n = s0 x s1\r\n\t\t\tny = s0z*s1x - s0x*s1z;\r\n\t\t\tnz = s0x*s1y - s0y*s1x;\r\n\t\t\tnl = 1/Math.sqrt(nx*nx + ny*ny + nz*nz); // normalize n\r\n\t\t\tnx *= nl;\r\n\t\t\tny *= nl;\r\n\t\t\tnz *= nl;\r\n\r\n\t\t\t// -- plane intersection test --\r\n\t\t\tnDotV = nx*rayDirection.x + ny* +rayDirection.y + nz*rayDirection.z; // rayDirection . normal\r\n\t\t\tif (( !bothSides && nDotV < 0.0 ) || ( bothSides && nDotV != 0.0 )) { // an intersection must exist\r\n\t\t\t\t// find collision t\r\n\t\t\t\tD = -( nx*p0x + ny*p0y + nz*p0z );\r\n\t\t\t\tdisToPlane = -( nx*rayPosition.x + ny*rayPosition.y + nz*rayPosition.z + D );\r\n\t\t\t\tt = disToPlane/nDotV;\r\n\t\t\t\t// find collision point\r\n\t\t\t\tcx = rayPosition.x + t*rayDirection.x;\r\n\t\t\t\tcy = rayPosition.y + t*rayDirection.y;\r\n\t\t\t\tcz = rayPosition.z + t*rayDirection.z;\r\n\t\t\t\t// collision point inside triangle? ( using barycentric coordinates )\r\n\t\t\t\tQ1Q2 = s0x*s1x + s0y*s1y + s0z*s1z;\r\n\t\t\t\tQ1Q1 = s0x*s0x + s0y*s0y + s0z*s0z;\r\n\t\t\t\tQ2Q2 = s1x*s1x + s1y*s1y + s1z*s1z;\r\n\t\t\t\trx = cx - p0x;\r\n\t\t\t\try = cy - p0y;\r\n\t\t\t\trz = cz - p0z;\r\n\t\t\t\tRQ1 = rx*s0x + ry*s0y + rz*s0z;\r\n\t\t\t\tRQ2 = rx*s1x + ry*s1y + rz*s1z;\r\n\t\t\t\tcoeff = 1/(Q1Q1*Q2Q2 - Q1Q2*Q1Q2);\r\n\t\t\t\tv = coeff*(Q2Q2*RQ1 - Q1Q2*RQ2);\r\n\t\t\t\tw = coeff*(-Q1Q2*RQ1 + Q1Q1*RQ2);\r\n\t\t\t\tif (v < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (w < 0)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tu = 1 - v - w;\r\n\t\t\t\tif (!( u < 0 ) && t > 0 && t < shortestCollisionDistance) { // all tests passed\r\n\t\t\t\t\tshortestCollisionDistance = t;\r\n\t\t\t\t\tcollisionTriangleIndex = index/3;\r\n\t\t\t\t\tpickingCollisionVO.rayEntryDistance = t;\r\n\t\t\t\t\tpickingCollisionVO.localPosition = new Vector3D(cx, cy, cz);\r\n\t\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(nx, ny, nz);\r\n\t\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\t\tpickingCollisionVO.index = index;\r\n//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (collisionTriangleIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>CurveSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testCurveCollision(curveSubGeometry:CurveSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\tvar rayPosition:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar rayDirection:Vector3D = pickingCollisionVO.localRayDirection;\r\n\r\n\t\t//project ray onto x/y plane to generate useful test points from mouse coordinates\r\n\t\t//this will only work while all points lie on the x/y plane\r\n\t\tvar plane:Vector3D = new Vector3D(0,0,-1,0);\r\n\r\n\t\tvar result:Vector3D = new Vector3D();\r\n\t\tvar distance:number = plane.x * rayPosition.x + plane.y * rayPosition.y + plane.z * rayPosition.z + plane.w;//distance(position);\r\n\t\tresult.x = rayPosition.x - ( plane.x*distance);\r\n\t\tresult.y = rayPosition.y - ( plane.y*distance);\r\n\t\tresult.z = rayPosition.z - ( plane.z*distance);\r\n\t\tvar normal:Vector3D = new Vector3D(plane.x,plane.y,plane.z);\r\n\t\tvar t:number = -(rayPosition.dotProduct(normal))/(rayDirection.dotProduct(normal));\r\n\t\trayDirection.scaleBy(t);\r\n\t\tvar p:Vector3D = rayPosition.add(rayDirection);\r\n\r\n\t\tvar indices:Uint16Array = curveSubGeometry.indices.get(curveSubGeometry.numElements);\r\n\t\tvar collisionCurveIndex:number = -1;\r\n\t\tvar bothSides:boolean = material.bothSides;\r\n\r\n\r\n\t\tvar positions:Float32Array = curveSubGeometry.positions.get(curveSubGeometry.numVertices);\r\n\t\tvar posDim:number = curveSubGeometry.positions.dimensions;\r\n\t\tvar curves:Float32Array = curveSubGeometry.curves.get(curveSubGeometry.numVertices);\r\n\t\tvar curveDim:number = curveSubGeometry.curves.dimensions;\r\n\t\tvar uvs:Float32Array = curveSubGeometry.uvs.get(curveSubGeometry.numVertices);\r\n\t\tvar uvDim:number = curveSubGeometry.uvs.dimensions;\r\n\t\tvar numIndices:number = indices.length;\r\n\r\n\r\n\t\tfor(var index:number = 0; index < numIndices; index+=3)\r\n\t\t{\r\n\t\t\tvar id0:number = indices[index];\r\n\t\t\tvar id1:number = indices[index + 1] * posDim;\r\n\t\t\tvar id2:number = indices[index + 2] * posDim;\r\n\r\n\t\t\tvar ax:number = positions[id0 * posDim];\r\n\t\t\tvar ay:number = positions[id0 * posDim + 1];\r\n\t\t\tvar bx:number = positions[id1];\r\n\t\t\tvar by:number = positions[id1 + 1];\r\n\t\t\tvar cx:number = positions[id2];\r\n\t\t\tvar cy:number = positions[id2 + 1];\r\n\r\n\t\t\tvar curvex:number = curves[id0 * curveDim];\r\n\t\t\tvar az:number = positions[id0 * posDim + 2];\r\n\r\n\t\t\t//console.log(ax, ay, bx, by, cx, cy);\r\n\r\n\t\t\t//from a to p\r\n\t\t\tvar dx:number = ax - p.x;\r\n\t\t\tvar dy:number = ay - p.y;\r\n\r\n\t\t\t//edge normal (a-b)\r\n\t\t\tvar nx:number = by - ay;\r\n\t\t\tvar ny:number = -(bx - ax);\r\n\r\n\t\t\t//console.log(ax,ay,bx,by,cx,cy);\r\n\r\n\t\t\tvar dot:number = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot a\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = bx - p.x;\r\n\t\t\tdy = by - p.y;\r\n\t\t\tnx = cy - by;\r\n\t\t\tny = -(cx - bx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot b\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tdx = cx - p.x;\r\n\t\t\tdy = cy - p.y;\r\n\t\t\tnx = ay - cy;\r\n\t\t\tny = -(ax - cx);\r\n\r\n\t\t\tdot = (dx * nx) + (dy * ny);\r\n\t\t\t//console.log(\"dot c\",dot);\r\n\t\t\tif (dot > 0)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t//check if not solid\r\n\t\t\tif (curvex != 2) {\r\n\r\n\t\t\t\tvar v0x:number = bx - ax;\r\n\t\t\t\tvar v0y:number = by - ay;\r\n\t\t\t\tvar v1x:number = cx - ax;\r\n\t\t\t\tvar v1y:number = cy - ay;\r\n\t\t\t\tvar v2x:number = p.x - ax;\r\n\t\t\t\tvar v2y:number = p.y - ay;\r\n\r\n\t\t\t\tvar den:number = v0x * v1y - v1x * v0y;\r\n\t\t\t\tvar v:number = (v2x * v1y - v1x * v2y) / den;\r\n\t\t\t\tvar w:number = (v0x * v2y - v2x * v0y) / den;\r\n\t\t\t\tvar u:number = 1 - v - w;\r\n\r\n\t\t\t\tvar uu:number = 0.5 * v + w;// (0 * u) + (0.5 * v) + (1 * w);// (lerp(0, 0.5, v) + lerp(0.5, 1, w) + lerp(1, 0, u)) / 1.5;\r\n\t\t\t\tvar vv:number = w;// (0 * u) + (0 * v) + (1 * w);// (lerp(0, 1, w) + lerp(1, 0, u)) / 1;\r\n\r\n\t\t\t\tvar d:number = uu * uu - vv;\r\n\r\n\t\t\t\tif ((d > 0 && az == -1) || (d < 0 && az == 1))\r\n\t\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t//TODO optimize away this pointless check as the distance is always the same\r\n\t\t\t//also this stuff should only be calculated right before the return and not for each hit\r\n\t\t\tif (distance < shortestCollisionDistance) {\r\n\t\t\t\tshortestCollisionDistance = distance;\r\n\t\t\t\tcollisionCurveIndex = index/3;\r\n\t\t\t\tpickingCollisionVO.rayEntryDistance = distance;\r\n\t\t\t\tpickingCollisionVO.localPosition = p;\r\n\t\t\t\tpickingCollisionVO.localNormal = new Vector3D(0, 0, 1);\r\n\t\t\t\tpickingCollisionVO.uv = this._getCollisionUV(indices, uvs, index, v, w, u, uvDim);\r\n\t\t\t\tpickingCollisionVO.index = index;\r\n\t\t\t\t//\t\t\t\t\t\tpickingCollisionVO.subGeometryIndex = this.pGetMeshSubMeshIndex(renderable);\r\n\r\n\t\t\t\t// if not looking for best hit, first found will do...\r\n\t\t\t\tif (!this._findClosestCollision)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (collisionCurveIndex >= 0)\r\n\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tests a <code>LineSubGeometry</code> object for a collision with the picking ray.\r\n\t *\r\n\t * @param triangleSubGeometry\r\n\t * @param material\r\n\t * @param pickingCollisionVO\r\n\t * @param shortestCollisionDistance\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic testLineCollision(lineSubGeometry:LineSubGeometry, material:MaterialBase, pickingCollisionVO:PickingCollisionVO, shortestCollisionDistance:number):boolean\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprivate _getCollisionUV(indices:Uint16Array, uvData:Float32Array, triangleIndex:number, v:number, w:number, u:number, uvDim:number):Point // PROTECTED\r\n\t{\r\n\t\tvar uv:Point = new Point();\r\n\t\tvar uIndex:number = indices[triangleIndex]*uvDim;\r\n\t\tvar uv0:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 1]*uvDim;\r\n\t\tvar uv1:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuIndex = indices[triangleIndex + 2]*uvDim;\r\n\t\tvar uv2:Vector3D = new Vector3D(uvData[uIndex], uvData[uIndex + 1]);\r\n\t\tuv.x = u*uv0.x + v*uv1.x + w*uv2.x;\r\n\t\tuv.y = u*uv0.y + v*uv1.y + w*uv2.y;\r\n\t\treturn uv;\r\n\t}\r\n}\r\n\r\nexport = JSPickingCollider;",
    "import Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\r\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport DisplayObject\t\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport IRenderableOwner\t\t\t\t= require(\"awayjs-display/lib/base/IRenderableOwner\");\r\n\r\n/**\r\n * Value object for a picking collision returned by a picking collider. Created as unique objects on display objects\r\n *\r\n * @see away.base.DisplayObject#pickingCollisionVO\r\n * @see away.core.pick.IPickingCollider\r\n *\r\n * @class away.pick.PickingCollisionVO\r\n */\r\nclass PickingCollisionVO\r\n{\r\n\t/**\r\n\t * The display object to which this collision object belongs.\r\n\t */\r\n\tpublic displayObject:DisplayObject;\r\n\r\n\t/**\r\n\t * The local position of the collision on the entity's surface.\r\n\t */\r\n\tpublic localPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The local normal vector at the position of the collision.\r\n\t */\r\n\tpublic localNormal:Vector3D;\r\n\r\n\t/**\r\n\t * The uv coordinate at the position of the collision.\r\n\t */\r\n\tpublic uv:Point;\r\n\r\n\t/**\r\n\t * The index of the face where the event took pl ace.\r\n\t */\r\n\tpublic index:number;\r\n\r\n\t/**\r\n\t * The index of the subGeometry where the event took place.\r\n\t */\r\n//\t\tpublic subGeometryIndex:number;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in local coordinates.\r\n\t */\r\n\tpublic localRayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * The starting position of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayPosition:Vector3D;\r\n\r\n\t/**\r\n\t * The direction of the colliding ray in scene coordinates.\r\n\t */\r\n\tpublic rayDirection:Vector3D;\r\n\r\n\t/**\r\n\t * Determines if the ray position is contained within the entity bounds.\r\n\t *\r\n\t * @see away3d.entities.Entity#bounds\r\n\t */\r\n\tpublic rayOriginIsInsideBounds:boolean;\r\n\r\n\t/**\r\n\t * The distance along the ray from the starting position to the calculated intersection entry point with the entity.\r\n\t */\r\n\tpublic rayEntryDistance:number;\r\n\r\n\t/**\r\n\t * The material ownwer associated with a collision.\r\n\t */\r\n\tpublic renderableOwner:IRenderableOwner;\r\n\r\n\t/**\r\n\t * Creates a new <code>PickingCollisionVO</code> object.\r\n\t *\r\n\t * @param entity The entity to which this collision object belongs.\r\n\t */\r\n\tconstructor(displayObject:DisplayObject)\r\n\t{\r\n\t\tthis.displayObject = displayObject;\r\n\t}\r\n\r\n}\r\n\r\nexport = PickingCollisionVO;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport View\t\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/View\");\r\nimport IPicker\t\t\t\t\t\t= require(\"awayjs-display/lib/pick/IPicker\");\r\nimport PickingCollisionVO\t\t\t= require(\"awayjs-display/lib/pick/PickingCollisionVO\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport RaycastCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/RaycastCollector\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * Picks a 3d object from a view or scene by 3D raycast calculations.\r\n * Performs an initial coarse boundary calculation to return a subset of entities whose bounding volumes intersect with the specified ray,\r\n * then triggers an optional picking collider on individual entity objects to further determine the precise values of the picking ray collision.\r\n *\r\n * @class away.pick.RaycastPicker\r\n */\r\nclass RaycastPicker implements IPicker\r\n{\r\n\tprivate _findClosestCollision:boolean;\r\n\tprivate _raycastCollector:RaycastCollector;\r\n\tprivate _ignoredEntities = [];\r\n\tprivate _onlyMouseEnabled:boolean = true;\r\n\r\n\tprivate _entities:Array<IEntity>;\r\n\tprivate _numEntities:number = 0;\r\n\tprivate _hasCollisions:boolean;\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic get onlyMouseEnabled():boolean\r\n\t{\r\n\t\treturn this._onlyMouseEnabled;\r\n\t}\r\n\r\n\tpublic set onlyMouseEnabled(value:boolean)\r\n\t{\r\n\t\tthis._onlyMouseEnabled = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>RaycastPicker</code> object.\r\n\t *\r\n\t * @param findClosestCollision Determines whether the picker searches for the closest bounds collision along the ray,\r\n\t * or simply returns the first collision encountered. Defaults to false.\r\n\t */\r\n\tconstructor(findClosestCollision:boolean = false)\r\n\t{\r\n\t\tthis._raycastCollector = new RaycastCollector();\r\n\r\n\t\tthis._findClosestCollision = findClosestCollision;\r\n\t\tthis._entities = new Array<IEntity>();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getViewCollision(x:number, y:number, view:View):PickingCollisionVO\r\n\t{\r\n\t\t//update ray\r\n\t\tvar rayPosition:Vector3D = view.unproject(x, y, 0);\r\n\t\tvar rayDirection:Vector3D = view.unproject(x, y, 1).subtract(rayPosition);\r\n\r\n\t\treturn this.getSceneCollision(rayPosition, rayDirection, view.scene);\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic getSceneCollision(rayPosition:Vector3D, rayDirection:Vector3D, scene:Scene):PickingCollisionVO\r\n\t{\r\n\t\t//clear collector\r\n\t\tthis._raycastCollector.clear();\r\n\r\n\t\t//setup ray vectors\r\n\t\tthis._raycastCollector.rayPosition = rayPosition;\r\n\t\tthis._raycastCollector.rayDirection = rayDirection;\r\n\r\n\t\t// collect entities to test\r\n\t\tscene.traversePartitions(this._raycastCollector);\r\n\r\n\t\tthis._numEntities = 0;\r\n\t\tvar node:EntityListItem = this._raycastCollector.entityHead;\r\n\t\tvar entity:IEntity;\r\n\r\n\t\twhile (node) {\r\n\t\t\tif (!this.isIgnored(entity = node.entity))\r\n\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n\r\n\t\t\tnode = node.next;\r\n\t\t}\r\n\r\n\t\t//early out if no collisions detected\r\n\t\tif (!this._numEntities)\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n\t}\r\n\r\n//\t\tpublic getEntityCollision(position:Vector3D, direction:Vector3D, entities:Array<IEntity>):PickingCollisionVO\r\n//\t\t{\r\n//\t\t\tthis._numEntities = 0;\r\n//\r\n//\t\t\tvar entity:IEntity;\r\n//\t\t\tvar l:number = entities.length;\r\n//\r\n//\t\t\tfor (var c:number = 0; c < l; c++) {\r\n//\t\t\t\tentity = entities[c];\r\n//\r\n//\t\t\t\tif (entity.isIntersectingRay(position, direction))\r\n//\t\t\t\t\tthis._entities[this._numEntities++] = entity;\r\n//\t\t\t}\r\n//\r\n//\t\t\treturn this.getPickingCollisionVO(this._raycastCollector);\r\n//\t\t}\r\n\r\n\tpublic setIgnoreList(entities)\r\n\t{\r\n\t\tthis._ignoredEntities = entities;\r\n\t}\r\n\r\n\tprivate isIgnored(entity:IEntity):boolean\r\n\t{\r\n\t\tif (this._onlyMouseEnabled && !entity._iIsMouseEnabled())\r\n\t\t\treturn true;\r\n\r\n\t\tvar len:number = this._ignoredEntities.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tif (this._ignoredEntities[i] == entity)\r\n\t\t\t\treturn true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate sortOnNearT(entity1:IEntity, entity2:IEntity):number\r\n\t{\r\n\t\treturn entity1._iPickingCollisionVO.rayEntryDistance > entity2._iPickingCollisionVO.rayEntryDistance? 1 : -1;\r\n\t}\r\n\r\n\tprivate getPickingCollisionVO(collector:CollectorBase):PickingCollisionVO\r\n\t{\r\n\t\t// trim before sorting\r\n\t\tthis._entities.length = this._numEntities;\r\n\r\n\t\t// Sort entities from closest to furthest.\r\n\t\tthis._entities = this._entities.sort(this.sortOnNearT); // TODO - test sort filter in JS\r\n\r\n\t\t// ---------------------------------------------------------------------\r\n\t\t// Evaluate triangle collisions when needed.\r\n\t\t// Replaces collision data provided by bounds collider with more precise data.\r\n\t\t// ---------------------------------------------------------------------\r\n\r\n\t\tvar shortestCollisionDistance:number = Number.MAX_VALUE;\r\n\t\tvar bestCollisionVO:PickingCollisionVO;\r\n\t\tvar pickingCollisionVO:PickingCollisionVO;\r\n\t\tvar entity:IEntity;\r\n\t\tvar i:number;\r\n\r\n\t\tfor (i = 0; i < this._numEntities; ++i) {\r\n\t\t\tentity = this._entities[i];\r\n\t\t\tpickingCollisionVO = entity._iPickingCollisionVO;\r\n\t\t\tif (entity.pickingCollider) {\r\n\t\t\t\t// If a collision exists, update the collision data and stop all checks.\r\n\t\t\t\tif ((bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) && entity._iTestCollision(shortestCollisionDistance, this._findClosestCollision)) {\r\n\t\t\t\t\tshortestCollisionDistance = pickingCollisionVO.rayEntryDistance;\r\n\t\t\t\t\tbestCollisionVO = pickingCollisionVO;\r\n\t\t\t\t\tif (!this._findClosestCollision) {\r\n\t\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (bestCollisionVO == null || pickingCollisionVO.rayEntryDistance < bestCollisionVO.rayEntryDistance) { // A bounds collision with no triangle collider stops all checks.\r\n\t\t\t\t// Note: a bounds collision with a ray origin inside its bounds is ONLY ever used\r\n\t\t\t\t// to enable the detection of a corresponsding triangle collision.\r\n\t\t\t\t// Therefore, bounds collisions with a ray origin inside its bounds can be ignored\r\n\t\t\t\t// if it has been established that there is NO triangle collider to test\r\n\t\t\t\tif (!pickingCollisionVO.rayOriginIsInsideBounds) {\r\n\t\t\t\t\tthis.updateLocalPosition(pickingCollisionVO);\r\n\t\t\t\t\treturn pickingCollisionVO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bestCollisionVO;\r\n\t}\r\n\r\n\tprivate updateLocalPosition(pickingCollisionVO:PickingCollisionVO)\r\n\t{\r\n\t\tvar collisionPos:Vector3D = ( pickingCollisionVO.localPosition == null )? (pickingCollisionVO.localPosition = new Vector3D()) : pickingCollisionVO.localPosition;\r\n\r\n\t\tvar rayDir:Vector3D = pickingCollisionVO.localRayDirection;\r\n\t\tvar rayPos:Vector3D = pickingCollisionVO.localRayPosition;\r\n\t\tvar t:number = pickingCollisionVO.rayEntryDistance;\r\n\t\tcollisionPos.x = rayPos.x + t*rayDir.x;\r\n\t\tcollisionPos.y = rayPos.y + t*rayDir.y;\r\n\t\tcollisionPos.z = rayPos.z + t*rayDir.z;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\t//TODO\r\n\t}\r\n}\r\n\r\nexport = RaycastPicker;",
    "import EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\n\r\n/**\r\n * @class away.pool.EntityListItemPool\r\n */\r\nclass EntityListItemPool\r\n{\r\n\tprivate _pool:Array<EntityListItem>;\r\n\tprivate _index:number = 0;\r\n\tprivate _poolSize:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pool = new Array<EntityListItem>();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic getItem():EntityListItem\r\n\t{\r\n\t\tvar item:EntityListItem;\r\n\t\tif (this._index == this._poolSize) {\r\n\t\t\titem = new EntityListItem();\r\n\t\t\tthis._pool[this._index++] = item;\r\n\t\t\t++this._poolSize;\r\n\t\t} else {\r\n\t\t\titem = this._pool[this._index++];\r\n\t\t}\r\n\t\treturn item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic freeAll()\r\n\t{\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic dispose()\r\n\t{\r\n\t\tthis._pool.length = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityListItemPool;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.pool.EntityListItem\r\n */\r\nclass EntityListItem\r\n{\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic entity:IEntity;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic next:EntityListItem;\r\n}\r\n\r\nexport = EntityListItem;",
    "import IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport EntityNode\t\t\t\t\t= require(\"awayjs-display/lib/partition/EntityNode\");\r\nimport Partition\t\t\t\t\t= require(\"awayjs-display/lib/partition/Partition\");\r\nimport IEntityNodeClass\t\t\t\t= require(\"awayjs-display/lib/pool/IEntityNodeClass\");\r\n\r\n/**\r\n * @class away.pool.EntityNodePool\r\n */\r\nclass EntityNodePool\r\n{\r\n\tprivate _entityNodePool:Object = new Object();\r\n\tprivate _entityNodeClass:IEntityNodeClass;\r\n\tprivate _partition:Partition;\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entityNodeClass\r\n\t */\r\n\tconstructor(entityNodeClass:IEntityNodeClass, partition:Partition)\r\n\t{\r\n\t\tthis._entityNodeClass = entityNodeClass;\r\n\t\tthis._partition = partition;\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t * @returns EntityNode\r\n\t */\r\n\tpublic getItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\treturn (this._entityNodePool[entity.id] || (this._entityNodePool[entity.id] = entity._iAddEntityNode(new this._entityNodeClass(this, entity, this._partition))));\r\n\t}\r\n\r\n\t/**\r\n\t * //TODO\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic disposeItem(entity:IEntity):EntityNode\r\n\t{\r\n\t\tvar entityNode:EntityNode = this._entityNodePool[entity.id];\r\n\r\n\t\tif (entityNode) {\r\n\t\t\tentity._iRemoveEntityNode(entityNode);\r\n\r\n\t\t\tthis._entityNodePool[entity.id] = null;\r\n\t\t}\r\n\r\n\t\treturn entityNode;\r\n\t}\r\n}\r\n\r\nexport = EntityNodePool;",
    "import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\nimport ISubMeshClass\t\t\t\t= require(\"awayjs-display/lib/base/ISubMeshClass\");\r\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\r\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\r\nimport CurveSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubMesh\");\r\n\r\n/**\r\n * @class away.pool.SubMeshPool\r\n */\r\nclass SubMeshPool\r\n{\r\n\tprivate static classPool:Object = new Object();\r\n\r\n\t/**\r\n\t *\r\n\t * @param subMeshClass\r\n\t */\r\n\tpublic static registerClass(subMeshClass:ISubMeshClass)\r\n\t{\r\n\t\tSubMeshPool.classPool[subMeshClass.assetClass.assetType] = subMeshClass;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param subGeometry\r\n\t */\r\n\tpublic static getClass(subGeometry:SubGeometryBase):ISubMeshClass\r\n\t{\r\n\t\treturn SubMeshPool.classPool[subGeometry.assetType];\r\n\t}\r\n\r\n\tprivate static main = SubMeshPool.addDefaults();\r\n\r\n\tprivate static addDefaults()\r\n\t{\r\n\t\tSubMeshPool.registerClass(LineSubMesh);\r\n\t\tSubMeshPool.registerClass(TriangleSubMesh);\r\n\t\tSubMeshPool.registerClass(CurveSubMesh);\r\n\t}\r\n}\r\n\r\nexport = SubMeshPool;",
    "import AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\n\r\n/**\r\n * PrefabBase is an abstract base class for prefabs, which are prebuilt display objects that allow easy cloning and updating\r\n */\r\nclass PrefabBase extends AssetBase\r\n{\r\n\tpublic _pObjects:Array<DisplayObject> = new Array<DisplayObject>();\r\n\r\n//\t\tpublic _pBatchObjects:Array<BatchObject> = new Array<BatchObject>();\r\n\r\n\t/**\r\n\t * Creates a new PrefabBase object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a display object generated from this prefab\r\n\t */\r\n\tpublic getNewObject():DisplayObject\r\n\t{\r\n\t\tvar object:DisplayObject = this._pCreateObject();\r\n\r\n\t\tthis._pObjects.push(object);\r\n\r\n\t\treturn object;\r\n\t}\r\n\r\n//\t\tpublic getNewBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar object:BatchObject = this._pCreateBatchObject();\r\n//\r\n//\t\t\tthis._pBatchObjects.push(object);\r\n//\r\n//\t\t\treturn object;\r\n//\t\t}\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\t// To be overridden when necessary\r\n\t}\r\n}\r\n\r\nexport = PrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Capsule primitive mesh.\r\n */\r\nclass PrimitiveCapsulePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _height:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the capsule.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the capsule.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = (value%2 == 0)? value + 1 : value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Capsule object.\r\n\t * @param radius The radius of the capsule.\r\n\t * @param height The height of the capsule.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the capsule. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the capsule. Defaults to 15. Must be uneven value.\r\n\t * @param yUp Defines whether the capsule poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 15, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._height = height;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = (segmentsH%2 == 0)? segmentsH + 1 : segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar triIndex:number = 0;\r\n\t\tvar index:number = 0;\r\n\t\tvar startIndex:number;\r\n\t\tvar comp1:number, comp2:number, t1:number, t2:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsH + 1)*(this._segmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of closure\r\n\t\t\tnumIndices = (this._segmentsH - 1)*this._segmentsW*6; // each level has segmentH quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tstartIndex = index;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar offset:number = j > this._segmentsH/2? this._height/2 : -this._height/2;\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\r\n\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[index] = (normals[startIndex] + (x*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 1] = (normals[startIndex + 1] + ( comp1*normLen))*.5;\r\n\t\t\t\t\t\tnormals[index + 2] = (normals[startIndex + 2] + (comp2*normLen))*.5;\r\n\t\t\t\t\t\ttangents[index] = (tangents[startIndex] + (tanLen > .007? -y/tanLen : 1))*.5;\r\n\t\t\t\t\t\ttangents[index + 1] = (tangents[startIndex + 1] + t1)*.5;\r\n\t\t\t\t\t\ttangents[index + 2] = (tangents[startIndex + 2] + t2)*.5;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// vertex\r\n\t\t\t\t\t\tpositions[index] = x;\r\n\t\t\t\t\t\tpositions[index + 1] = (this._yUp)? comp1 - offset : comp1;\r\n\t\t\t\t\t\tpositions[index + 2] = (this._yUp)? comp2 : comp2 + offset;\r\n\t\t\t\t\t\t// normal\r\n\t\t\t\t\t\tnormals[index] = x*normLen;\r\n\t\t\t\t\t\tnormals[index + 1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[index + 2] = comp2*normLen;\r\n\t\t\t\t\t\t// tangent\r\n\t\t\t\t\t\ttangents[index] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[index + 1] = t1;\r\n\t\t\t\t\t\ttangents[index + 2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\t\t\t\t\t\t\tpositions[index] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[index + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[index + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = b;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = a;\r\n\t\t\t\t\t\t\tindices[triIndex++] = c;\r\n\t\t\t\t\t\t\tindices[triIndex++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCapsulePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV Cone primitive mesh.\r\n */\r\nclass PrimitiveConePrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cone.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cone object.\r\n\t * @param radius The radius of the bottom end of the cone\r\n\t * @param height The height of the cone\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cone. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cone. Defaults to 1.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, closed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(0, radius, height, segmentsW, segmentsH, false, closed, true, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitiveConePrefab;",
    "﻿import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cube primitive prefab.\r\n */\r\nclass PrimitiveCubePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _depth:number;\r\n\tprivate _tile6:boolean;\r\n\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _segmentsD:number;\r\n\r\n\t/**\r\n\t * Creates a new Cube object.\r\n\t * @param width The size of the cube along its X-axis.\r\n\t * @param height The size of the cube along its Y-axis.\r\n\t * @param depth The size of the cube along its Z-axis.\r\n\t * @param segmentsW The number of segments that make up the cube along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the cube along the Y-axis.\r\n\t * @param segmentsD The number of segments that make up the cube along the Z-axis.\r\n\t * @param tile6 The type of uv mapping to use. When true, a texture will be subdivided in a 2x3 grid, each used for a single face. When false, the entire image is mapped on each face.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, depth:number = 100, segmentsW:number = 1, segmentsH:number = 1, segmentsD:number = 1, tile6:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._depth = depth;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._segmentsD = segmentsD;\r\n\t\tthis._tile6 = tile6;\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its X-axis.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Y-axis.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The size of the cube along its Z-axis.\r\n\t */\r\n\tpublic get depth():number\r\n\t{\r\n\t\treturn this._depth;\r\n\t}\r\n\r\n\tpublic set depth(value:number)\r\n\t{\r\n\t\tthis._depth = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The type of uv mapping to use. When false, the entire image is mapped on each face.\r\n\t * When true, a texture will be subdivided in a 3x2 grid, each used for a single face.\r\n\t * Reading the tiles from left to right, top to bottom they represent the faces of the\r\n\t * cube in the following order: bottom, top, back, left, front, right. This creates\r\n\t * several shared edges (between the top, front, left and right faces) which simplifies\r\n\t * texture painting.\r\n\t */\r\n\tpublic get tile6():boolean\r\n\t{\r\n\t\treturn this._tile6;\r\n\t}\r\n\r\n\tpublic set tile6(value:boolean)\r\n\t{\r\n\t\tthis._tile6 = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Y-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the cube along the Z-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsD():number\r\n\t{\r\n\t\treturn this._segmentsD;\r\n\t}\r\n\r\n\tpublic set segmentsD(value:number)\r\n\t{\r\n\t\tthis._segmentsD = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\t\t\r\n\t\tvar tl:number, tr:number, bl:number, br:number;\r\n\t\tvar i:number, j:number, inc:number = 0;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\t\tvar hw:number, hh:number, hd:number; // halves\r\n\t\tvar dw:number, dh:number, dd:number; // deltas\r\n\r\n\t\tvar outer_pos:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\t// half cube dimensions\r\n\t\thw = this._width/2;\r\n\t\thh = this._height/2;\r\n\t\thd = this._depth/2;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tnumIndices = ((this._segmentsW*this._segmentsH + this._segmentsW*this._segmentsD + this._segmentsH*this._segmentsD)*12);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// Segment dimensions\r\n\t\t\tdw = this._width/this._segmentsW;\r\n\t\t\tdh = this._height/this._segmentsH;\r\n\t\t\tdd = this._depth/this._segmentsD;\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// front\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// back\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx + 2] = hd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\tnormals[vidx + 2] = 1;\r\n\t\t\t\t\ttangents[vidx] = -1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsH + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\touter_pos = -hw + i*dw;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\t// top\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// bottom\r\n\t\t\t\t\tpositions[vidx] = outer_pos;\r\n\t\t\t\t\tpositions[vidx + 1] = -hh;\r\n\t\t\t\t\tpositions[vidx + 2] = -hd + j*dd;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = -1;\r\n\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsD + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tinc += 2*(this._segmentsW + 1)*(this._segmentsD + 1);\r\n\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\touter_pos = hd - i*dd;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\t// left\r\n\t\t\t\t\tpositions[vidx] = -hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = -1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = -1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// right\r\n\t\t\t\t\tpositions[vidx] = hw;\r\n\t\t\t\t\tpositions[vidx+1] = -hh + j*dh;\r\n\t\t\t\t\tpositions[vidx+2] = outer_pos;\r\n\t\t\t\t\tnormals[vidx] = 1;\r\n\t\t\t\t\tnormals[vidx+1] = 0;\r\n\t\t\t\t\tnormals[vidx+2] = 0;\r\n\t\t\t\t\ttangents[vidx] = 0;\r\n\t\t\t\t\ttangents[vidx+1] = 0;\r\n\t\t\t\t\ttangents[vidx+2] = 1;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i && j) {\r\n\t\t\t\t\t\ttl = inc + 2*((i - 1)*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\ttr = inc + 2*(i*(this._segmentsH + 1) + (j - 1));\r\n\t\t\t\t\t\tbl = tl + 2;\r\n\t\t\t\t\t\tbr = tr + 2;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = bl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tl;\r\n\t\t\t\t\t\tindices[fidx++] = br;\r\n\t\t\t\t\t\tindices[fidx++] = tr;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = br + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tr + 1;\r\n\t\t\t\t\t\tindices[fidx++] = bl + 1;\r\n\t\t\t\t\t\tindices[fidx++] = tl + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*4 +  this._segmentsW*4 + this._segmentsD*4;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\t\t\t\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t//front/back face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t//left/right face\r\n\t\t\tfor (i = 0; i < this._segmentsH; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = i*this._height/this._segmentsH - hh\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh - i*this._height/this._segmentsH;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//top/bottom face\r\n\t\t\tfor (i = 0; i < this._segmentsD; ++i) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd - i*this._depth/this._segmentsD;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = i*this._depth/this._segmentsD - hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < this._segmentsW; ++i) {\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = hw - i*this._width/this._segmentsW;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = -hd;\r\n\r\n\t\t\t\tpositions[vidx++] = i*this._width/this._segmentsW - hw;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\t\t\t\tpositions[vidx++] = hd;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number, index:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tvar u_tile_dim:number, v_tile_dim:number;\r\n\t\tvar u_tile_step:number, v_tile_step:number;\r\n\t\tvar tl0u:number, tl0v:number;\r\n\t\tvar tl1u:number, tl1v:number;\r\n\t\tvar du:number, dv:number;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ((this._segmentsW + 1)*(this._segmentsH + 1) + (this._segmentsW + 1)*(this._segmentsD + 1) + (this._segmentsH + 1)*(this._segmentsD + 1))*2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._tile6) {\r\n\t\t\t\tu_tile_dim = u_tile_step = 1/3;\r\n\t\t\t\tv_tile_dim = v_tile_step = 1/2;\r\n\t\t\t} else {\r\n\t\t\t\tu_tile_dim = v_tile_dim = 1;\r\n\t\t\t\tu_tile_step = v_tile_step = 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Create planes two and two, the same way that they were\r\n\t\t\t// constructed in the buildGeometry() function. First calculate\r\n\t\t\t// the top-left UV coordinate for both planes, and then loop\r\n\t\t\t// over the points, calculating the UVs from these numbers.\r\n\r\n\t\t\t// When tile6 is true, the layout is as follows:\r\n\t\t\t//       .-----.-----.-----. (1,1)\r\n\t\t\t//       | Bot |  T  | Bak |\r\n\t\t\t//       |-----+-----+-----|\r\n\t\t\t//       |  L  |  F  |  R  |\r\n\t\t\t// (0,0)'-----'-----'-----'\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t\t// FRONT / BACK\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TOP / BOTTOM\r\n\t\t\ttl0u = 1*u_tile_step;\r\n\t\t\ttl0v = 0*v_tile_step;\r\n\t\t\ttl1u = 0*u_tile_step;\r\n\t\t\ttl1v = 0*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsW;\r\n\t\t\tdv = v_tile_dim/this._segmentsD;\r\n\t\t\tfor (i = 0; i <= this._segmentsW; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsD; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + j*dv)*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// LEFT / RIGHT\r\n\t\t\ttl0u = 0*u_tile_step;\r\n\t\t\ttl0v = 1*v_tile_step;\r\n\t\t\ttl1u = 2*u_tile_step;\r\n\t\t\ttl1v = 1*v_tile_step;\r\n\t\t\tdu = u_tile_dim/this._segmentsD;\r\n\t\t\tdv = v_tile_dim/this._segmentsH;\r\n\t\t\tfor (i = 0; i <= this._segmentsD; i++) {\r\n\t\t\t\tfor (j = 0; j <= this._segmentsH; j++) {\r\n\t\t\t\t\tuvs[index++] = ( tl0u + i*du)*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl0v + (v_tile_dim - j*dv))*this._scaleV;\r\n\r\n\t\t\t\t\tuvs[index++] = ( tl1u + (u_tile_dim - i*du))*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( tl1v + (v_tile_dim - j*dv))*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCubePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Cylinder primitive mesh.\r\n */\r\nclass PrimitiveCylinderPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tpublic _pBottomRadius:number;\r\n\tpublic _pSegmentsW:number;\r\n\tpublic _pSegmentsH:number;\r\n\r\n\tprivate _topRadius:number;\r\n\tprivate _height:number;\r\n\r\n\tprivate _topClosed:boolean;\r\n\tprivate _bottomClosed:boolean;\r\n\tprivate _surfaceClosed:boolean;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get topRadius():number\r\n\t{\r\n\t\treturn this._topRadius;\r\n\t}\r\n\r\n\tpublic set topRadius(value:number)\r\n\t{\r\n\t\tthis._topRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the bottom end of the cylinder.\r\n\t */\r\n\tpublic get bottomRadius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set bottomRadius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the top end of the cylinder.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\tpublic setSegmentsW(value:number)\r\n\t{\r\n\t\tthis._pSegmentsW = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis.setSegmentsH(value)\r\n\r\n\t}\r\n\r\n\tpublic setSegmentsH(value:number)\r\n\t{\r\n\t\tthis._pSegmentsH = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the top end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get topClosed():boolean\r\n\t{\r\n\t\treturn this._topClosed;\r\n\t}\r\n\r\n\tpublic set topClosed(value:boolean)\r\n\t{\r\n\t\tthis._topClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t */\r\n\tpublic get bottomClosed():boolean\r\n\t{\r\n\t\treturn this._bottomClosed;\r\n\t}\r\n\r\n\tpublic set bottomClosed(value:boolean)\r\n\t{\r\n\t\tthis._bottomClosed = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the cylinder poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Cylinder object.\r\n\t * @param topRadius The radius of the top end of the cylinder.\r\n\t * @param bottomRadius The radius of the bottom end of the cylinder\r\n\t * @param height The radius of the bottom end of the cylinder\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the cylinder. Defaults to 16.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the cylinder. Defaults to 1.\r\n\t * @param topClosed Defines whether the top end of the cylinder is closed (true) or open.\r\n\t * @param bottomClosed Defines whether the bottom end of the cylinder is closed (true) or open.\r\n\t * @param yUp Defines whether the cone poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(topRadius:number = 50, bottomRadius:number = 50, height:number = 100, segmentsW:number = 16, segmentsH:number = 1, topClosed:boolean = true, bottomClosed:boolean = true, surfaceClosed:boolean = true, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._topRadius = topRadius;\r\n\t\tthis._pBottomRadius = bottomRadius;\r\n\t\tthis._height = height;\r\n\t\tthis._pSegmentsW = segmentsW;\r\n\t\tthis._pSegmentsH = segmentsH;\r\n\t\tthis._topClosed = topClosed;\r\n\t\tthis._bottomClosed = bottomClosed;\r\n\t\tthis._surfaceClosed = surfaceClosed;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar z:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\r\n\t\tvar radius:number;\r\n\t\tvar revolutionAngle:number;\r\n\r\n\t\tvar dr:number;\r\n\t\tvar latNormElev:number;\r\n\t\tvar latNormBase:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar startIndex:number = 0;\r\n\t\tvar nextVertexIndex:number = 0;\r\n\t\tvar centerVertexIndex:number = 0;\r\n\r\n\t\tvar t1:number;\r\n\t\tvar t2:number;\r\n\r\n\t\t// reset utility variables\r\n\t\tthis._numVertices = 0;\r\n\r\n\t\t// evaluate revolution steps\r\n\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tthis._numVertices += (this._pSegmentsH + 1)*(this._pSegmentsW + 1); // segmentsH + 1 because of closure, segmentsW + 1 because of UV unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsH*this._pSegmentsW*6; // each level has segmentW quads, each of 2 triangles\r\n\t\t\t}\r\n\t\t\tif (this._topClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1); // segmentsW + 1 because of unwrapping\r\n\t\t\t\tnumIndices += this._pSegmentsW*3; // one triangle for each segment\r\n\t\t\t}\r\n\t\t\tif (this._bottomClosed) {\r\n\t\t\t\tthis._numVertices += 2*(this._pSegmentsW + 1);\r\n\t\t\t\tnumIndices += this._pSegmentsW*3;\r\n\t\t\t}\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed && this._topRadius > 0) {\r\n\r\n\t\t\t\tz = -0.5*this._height;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = 1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = -1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._topRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._topRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed && this._pBottomRadius > 0) {\r\n\r\n\t\t\t\tz = 0.5*this._height;\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tcenterVertexIndex = nextVertexIndex;\r\n\r\n\t\t\t\t// central vertex\r\n\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\tt1 = -1;\r\n\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\tcomp2 = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\tt2 = 1;\r\n\t\t\t\t\tcomp1 = 0;\r\n\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tpositions[vidx] = 0;\r\n\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextVertexIndex += 1;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = this._pBottomRadius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = this._pBottomRadius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex + 3];\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 4];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 5];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\t\t\t\t\tnormals[vidx + 1] = t1;\r\n\t\t\t\t\tnormals[vidx + 2] = t2;\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t// add triangle\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex - 1;\r\n\t\t\t\t\t\tindices[fidx++] = nextVertexIndex;\r\n\t\t\t\t\t\tindices[fidx++] = centerVertexIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The normals on the lateral surface all have the same incline, i.e.\r\n\t\t\t// the \"elevation\" component (Y or Z depending on yUp) is constant.\r\n\t\t\t// Same principle goes for the \"base\" of these vectors, which will be\r\n\t\t\t// calculated such that a vector [base,elev] will be a unit vector.\r\n\t\t\tdr = (this._pBottomRadius - this._topRadius);\r\n\t\t\tlatNormElev = dr/this._height;\r\n\t\t\tlatNormBase = (latNormElev == 0)? 1 : this._height/dr;\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tvar a:number;\r\n\t\t\t\tvar b:number;\r\n\t\t\t\tvar c:number;\r\n\t\t\t\tvar d:number;\r\n\t\t\t\tvar na0:number, na1:number, naComp1:number, naComp2:number;\r\n\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\t\t\t\t\t\tna0 = latNormBase*Math.cos(revolutionAngle);\r\n\t\t\t\t\t\tna1 = latNormBase*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\t\tt2 = -na0;\r\n\t\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t\t\tnaComp1 = latNormElev;\r\n\t\t\t\t\t\t\tnaComp2 = na1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tt1 = -na0;\r\n\t\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t\t\tnaComp1 = na1;\r\n\t\t\t\t\t\t\tnaComp2 = latNormElev;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i == this._pSegmentsW) {\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = latNormElev;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx] = na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t\t\tnormals[vidx] = na0;\r\n\t\t\t\t\t\t\tnormals[vidx + 1] = naComp1;\r\n\t\t\t\t\t\t\tnormals[vidx + 2] = naComp2;\r\n\t\t\t\t\t\t\ttangents[vidx] = -na1;\r\n\t\t\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t\t// close triangle\r\n\t\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\t\tc = b - this._pSegmentsW - 1; // previous of last level\r\n\t\t\t\t\t\t\td = a - this._pSegmentsW - 1; // current of last level\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._pSegmentsH*this._pSegmentsW*2 + this._pSegmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\t\t\tvar _radius = 50;\r\n\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\r\n\t\t\t\tradius = this._topRadius - ((j/this._pSegmentsH)*(this._topRadius - this._pBottomRadius));\r\n\t\t\t\tz = -(this._height/2) + (j/this._pSegmentsH*this._height);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = radius*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = radius*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._pSegmentsW-i) + 12*i) : 3 - this._pSegmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._pSegmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar x:number;\r\n\t\tvar y:number;\r\n\t\tvar revolutionAngle:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDelta:number = 2*Math.PI/this._pSegmentsW;\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// top\r\n\t\t\tif (this._topClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5* -Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// bottom\r\n\t\t\tif (this._bottomClosed) {\r\n\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleU; // central vertex\r\n\t\t\t\tuvs[index++] = 0.5*this._scaleV;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\r\n\t\t\t\t\trevolutionAngle = i*revolutionAngleDelta;\r\n\t\t\t\t\tx = 0.5 + 0.5*Math.cos(revolutionAngle);\r\n\t\t\t\t\ty = 0.5 + 0.5*Math.sin(revolutionAngle);\r\n\r\n\t\t\t\t\tuvs[index++] = x*this._scaleU; // revolution vertex\r\n\t\t\t\t\tuvs[index++] = y*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// lateral surface\r\n\t\t\tif (this._surfaceClosed) {\r\n\t\t\t\tfor (j = 0; j <= this._pSegmentsH; ++j) {\r\n\t\t\t\t\tfor (i = 0; i <= this._pSegmentsW; ++i) {\r\n\t\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\t\tuvs[index++] = ( i/this._pSegmentsW )*this._scaleU;\r\n\t\t\t\t\t\tuvs[index++] = ( j/this._pSegmentsH )*this._scaleV;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveCylinderPrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A Plane primitive mesh.\r\n */\r\nclass PrimitivePlanePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _width:number;\r\n\tprivate _height:number;\r\n\tprivate _doubleSided:boolean;\r\n\r\n\t/**\r\n\t * Creates a new Plane object.\r\n\t * @param width The width of the plane.\r\n\t * @param height The height of the plane.\r\n\t * @param segmentsW The number of segments that make up the plane along the X-axis.\r\n\t * @param segmentsH The number of segments that make up the plane along the Y or Z-axis.\r\n\t * @param yUp Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false).\r\n\t * @param doubleSided Defines whether the plane will be visible from both sides, with correct vertex normals.\r\n\t */\r\n\tconstructor(width:number = 100, height:number = 100, segmentsW:number = 1, segmentsH:number = 1, yUp:boolean = true, doubleSided:boolean = false)\r\n\t{\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t\tthis._doubleSided = doubleSided;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the X-axis. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The number of segments that make up the plane along the Y or Z-axis, depending on whether yUp is true or\r\n\t * false, respectively. Defaults to 1.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *  Defines whether the normal vector of the plane should point along the Y-axis (true) or Z-axis (false). Defaults to true.\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the plane will be visible from both sides, with correct vertex normals (as opposed to bothSides on Material). Defaults to false.\r\n\t */\r\n\tpublic get doubleSided():boolean\r\n\t{\r\n\t\treturn this._doubleSided;\r\n\t}\r\n\r\n\tpublic set doubleSided(value:boolean)\r\n\t{\r\n\t\tthis._doubleSided = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the plane.\r\n\t */\r\n\tpublic get width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tpublic set width(value:number)\r\n\t{\r\n\t\tthis._width = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the plane.\r\n\t */\r\n\tpublic get height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\tpublic set height(value:number)\r\n\t{\r\n\t\tthis._height = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar x:number, y:number;\r\n\t\tvar numIndices:number;\r\n\t\tvar base:number;\r\n\t\tvar tw:number = this._segmentsW + 1;\r\n\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar xi:number;\r\n\t\tvar yi:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tvar numVertices:number = (this._segmentsH + 1)*tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar normals:Float32Array;\r\n\t\t\tvar tangents:Float32Array;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tnumIndices = this._segmentsH*this._segmentsW*6;\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumIndices *= 2;\r\n\r\n\t\t\tif (triangleGeometry.indices != null && numIndices == triangleGeometry.indices.length) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tx = (xi/this._segmentsW - .5)*this._width;\r\n\t\t\t\t\ty = (yi/this._segmentsH - .5)*this._height;\r\n\r\n\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tpositions[vidx + 1] = 0;\r\n\t\t\t\t\t\tpositions[vidx + 2] = y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx + 1] = y;\r\n\t\t\t\t\t\tpositions[vidx + 2] = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = 0;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 1;\r\n\t\t\t\t\t\tnormals[vidx + 2] = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnormals[vidx + 1] = 0;\r\n\t\t\t\t\t\tnormals[vidx + 2] = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttangents[vidx] = 1;\r\n\t\t\t\t\ttangents[vidx + 1] = 0;\r\n\t\t\t\t\ttangents[vidx + 2] = 0;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// add vertex with same position, but with inverted normal & tangent\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\tfor (var i:number = vidx; i < vidx + 3; ++i) {\r\n\t\t\t\t\t\t\tpositions[i] = positions[i - 3];\r\n\t\t\t\t\t\t\tnormals[i] = -normals[i - 3];\r\n\t\t\t\t\t\t\ttangents[i] = -tangents[i - 3];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (xi != this._segmentsW && yi != this._segmentsH) {\r\n\r\n\t\t\t\t\t\tbase = xi + yi*tw;\r\n\t\t\t\t\t\tvar mult:number = this._doubleSided? 2 : 1;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = base*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult;\r\n\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult;\r\n\r\n\t\t\t\t\t\tif (this._doubleSided) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = (base + tw + 1)*mult + 1;\r\n\t\t\t\t\t\t\tindices[fidx++] = base*mult + 1;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = (this._segmentsH + 1) + tw;\r\n\t\t\tvar positions:Float32Array;\r\n\t\t\tvar thickness:Float32Array;\r\n\r\n\t\t\tvar hw:number = this._width/2;\r\n\t\t\tvar hh:number = this._height/2;\r\n\r\n\t\t\tpositions = new Float32Array(numSegments*6);\r\n\t\t\tthickness = new Float32Array(numSegments);\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfor (yi = 0; yi <= this._segmentsH; ++yi) {\r\n\t\t\t\tpositions[vidx++] = -hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tpositions[vidx++] = hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = yi*this._height - hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor (xi = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = -hh;\r\n\r\n\t\t\t\tpositions[vidx++] = xi*this._width - hw;\r\n\t\t\t\tpositions[vidx++] = 0;\r\n\t\t\t\tpositions[vidx++] = hh;\r\n\r\n\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar uvs:Float32Array;\r\n\t\tvar numVertices:number;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = ( this._segmentsH + 1 )*( this._segmentsW + 1 );\r\n\r\n\t\t\tif (this._doubleSided)\r\n\t\t\t\tnumVertices *= 2;\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (triangleGeometry.uvs && numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t\tthis._pInvalidateGeometry()\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\tfor (var yi:number = 0; yi <= this._segmentsH; ++yi) {\r\n\r\n\t\t\t\tfor (var xi:number = 0; xi <= this._segmentsW; ++xi) {\r\n\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\tuvs[index + 1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\tindex += 2;\r\n\r\n\t\t\t\t\tif (this._doubleSided) {\r\n\t\t\t\t\t\tuvs[index] = (xi/this._segmentsW)*this._scaleU;\r\n\t\t\t\t\t\tuvs[index+1] = (1 - yi/this._segmentsH)*this._scaleV;\r\n\t\t\t\t\t\tindex += 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitivePlanePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport PrimitiveCylinderPrefab\t= require(\"awayjs-display/lib/prefabs/PrimitiveCylinderPrefab\");\r\n\r\n/**\r\n * A UV RegularPolygon primitive mesh.\r\n */\r\nclass PrimitivePolygonPrefab extends PrimitiveCylinderPrefab implements IAsset\r\n{\r\n\r\n\t/**\r\n\t * The radius of the regular polygon.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._pBottomRadius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._pBottomRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The number of sides of the regular polygon.\r\n\t */\r\n\tpublic get sides():number\r\n\t{\r\n\t\treturn this._pSegmentsW;\r\n\t}\r\n\r\n\tpublic set sides(value:number)\r\n\t{\r\n\t\tthis.setSegmentsW(value);\r\n\t}\r\n\r\n\t/**\r\n\t * The number of subdivisions from the edge to the center of the regular polygon.\r\n\t */\r\n\tpublic get subdivisions():number\r\n\t{\r\n\t\treturn this._pSegmentsH;\r\n\t}\r\n\r\n\tpublic set subdivisions(value:number)\r\n\t{\r\n\t\tthis.setSegmentsH(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RegularPolygon disc object.\r\n\t * @param radius The radius of the regular polygon\r\n\t * @param sides Defines the number of sides of the regular polygon.\r\n\t * @param yUp Defines whether the regular polygon should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 100, sides:number = 16, yUp:boolean = true)\r\n\t{\r\n\t\tsuper(radius, 0, 0, sides, 1, true, false, false, yUp);\r\n\t}\r\n}\r\n\r\nexport = PrimitivePolygonPrefab;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AbstractMethodError\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\r\n\r\nimport DisplayObject\t\t\t= require(\"awayjs-display/lib/base/DisplayObject\");\r\nimport Geometry\t\t\t\t\t= require(\"awayjs-display/lib/base/Geometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport Mesh\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\r\nimport MaterialBase\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport PrefabBase\t\t\t\t= require(\"awayjs-display/lib/prefabs/PrefabBase\");\r\n\r\n/**\r\n * PrimitivePrefabBase is an abstract base class for polytope prefabs, which are simple pre-built geometric shapes\r\n */\r\nclass PrimitivePrefabBase extends PrefabBase\r\n{\r\n\tpublic static assetType:string = \"[asset PrimitivePrefab]\";\r\n\r\n\tpublic _geomDirty:boolean = true;\r\n\tpublic _uvDirty:boolean = true;\r\n\tpublic _scaleU:number = 1;\r\n\tpublic _scaleV:number = 1;\r\n\r\n\tprivate _material:MaterialBase;\r\n\tprivate _geometry:Geometry;\r\n\tprivate _subGeometry:SubGeometryBase;\r\n\tprivate _geometryType:string;\r\n\tprivate _geometryTypeDirty:boolean = true;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn PrimitivePrefabBase.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tpublic get geometryType():string\r\n\t{\r\n\t\treturn this._geometryType;\r\n\t}\r\n\t\r\n\tpublic set geometryType(value:string)\r\n\t{\r\n\t\tif (this._geometryType == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._geometryType = value;\r\n\t\t\r\n\t\tthis.invalidateGeometryType();\r\n\t}\r\n\r\n\tpublic get geometry():Geometry\r\n\t{\r\n\t\tthis._iValidate();\r\n\r\n\t\treturn this._geometry;\r\n\t}\r\n\r\n\t/**\r\n\t * The material with which to render the primitive.\r\n\t */\r\n\tpublic get material():MaterialBase\r\n\t{\r\n\t\treturn this._material;\r\n\t}\r\n\r\n\tpublic set material(value:MaterialBase)\r\n\t{\r\n\t\tif (value == this._material)\r\n\t\t\treturn;\r\n\r\n\t\tthis._material = value;\r\n\r\n\t\tvar len:number = this._pObjects.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\t(<Mesh> this._pObjects[i]).material = this._material;\r\n\t}\r\n\r\n\tpublic get scaleU():number\r\n\t{\r\n\t\treturn this._scaleU;\r\n\t}\r\n\r\n\tpublic set scaleU(value:number)\r\n\t{\r\n\t\tif (this._scaleU = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleU = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\tpublic get scaleV():number\r\n\t{\r\n\t\treturn this._scaleV;\r\n\t}\r\n\r\n\tpublic set scaleV(value:number)\r\n\t{\r\n\t\tif (this._scaleV = value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._scaleV = value;\r\n\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new PrimitivePrefabBase object.\r\n\t *\r\n\t * @param material The material with which to render the object\r\n\t */\r\n\tconstructor(material:MaterialBase = null, geometryType:string = \"triangleSubGeometry\")\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._geometry = new Geometry();\r\n\t\tthis._material = material;\r\n\t\tthis._geometryType = geometryType;\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's geometry when invalid. This method should not be called directly. The calling should\r\n\t * be triggered by the invalidateGeometry method (and in turn by updateGeometry).\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Builds the primitive's uv coordinates when invalid. This method should not be called directly. The calling\r\n\t * should be triggered by the invalidateUVs method (and in turn by updateUVs).\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tthrow new AbstractMethodError();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's geometry type, causing it to be updated when requested.\r\n\t */\r\n\tpublic invalidateGeometryType()\r\n\t{\r\n\t\tthis._geometryTypeDirty = true;\r\n\t\tthis._geomDirty = true;\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Invalidates the primitive's geometry, causing it to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateGeometry()\r\n\t{\r\n\t\tthis._geomDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the primitive's uv coordinates, causing them to be updated when requested.\r\n\t */\r\n\tpublic _pInvalidateUVs()\r\n\t{\r\n\t\tthis._uvDirty = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the subgeometry when invalid.\r\n\t */\r\n\tprivate updateGeometryType()\r\n\t{\r\n\t\t//remove any existing sub geometry\r\n\t\tif (this._subGeometry)\r\n\t\t\tthis._geometry.removeSubGeometry(this._subGeometry);\r\n\r\n\t\tif (this._geometryType == \"triangleSubGeometry\") {\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = new TriangleSubGeometry(new AttributesBuffer());\r\n\t\t\ttriangleGeometry.autoDeriveNormals = false;\r\n\t\t\ttriangleGeometry.autoDeriveTangents = false;\r\n\t\t\ttriangleGeometry.autoDeriveUVs = false;\r\n\t\t\tthis._geometry.addSubGeometry(triangleGeometry);\r\n\t\t\tthis._subGeometry = triangleGeometry;\r\n\t\t} else if (this._geometryType == \"lineSubGeometry\") {\r\n\t\t\tthis._geometry.addSubGeometry(this._subGeometry = new LineSubGeometry(new AttributesBuffer()));\r\n\t\t}\r\n\r\n\t\tthis._geometryTypeDirty = false;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Updates the geometry when invalid.\r\n\t */\r\n\tprivate updateGeometry()\r\n\t{\r\n\t\tthis._pBuildGeometry(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._geomDirty = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the uv coordinates when invalid.\r\n\t */\r\n\tprivate updateUVs()\r\n\t{\r\n\t\tthis._pBuildUVs(this._subGeometry, this._geometryType);\r\n\r\n\t\tthis._uvDirty = false;\r\n\t}\r\n\r\n\tpublic _iValidate()\r\n\t{\r\n\t\tif (this._geometryTypeDirty)\r\n\t\t\tthis.updateGeometryType();\r\n\t\t\r\n\t\tif (this._geomDirty)\r\n\t\t\tthis.updateGeometry();\r\n\r\n\t\tif (this._uvDirty)\r\n\t\t\tthis.updateUVs();\r\n\t}\r\n\r\n\r\n\tpublic _pCreateObject():DisplayObject\r\n\t{\r\n\t\tvar mesh:Mesh = new Mesh(this._geometry, this._material);\r\n\t\tmesh._iSourcePrefab = this;\r\n\r\n\t\treturn mesh;\r\n\t}\r\n\r\n\r\n//\t\tpublic _pCreateBatchObject():BatchObject\r\n//\t\t{\r\n//\t\t\tvar batch:BatchObject = new BatchObject(this._geometry, this._material);\r\n//\t\t\tbatch._iSourcePrefab = this;\r\n//\r\n//\t\t\treturn batch;\r\n//\t\t}\r\n}\r\n\r\nexport = PrimitivePrefabBase;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport LineSubGeometry\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Sphere primitive mesh.\r\n */\r\nclass PrimitiveSpherePrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _segmentsW:number;\r\n\tprivate _segmentsH:number;\r\n\tprivate _yUp:boolean;\r\n\r\n\t/**\r\n\t * The radius of the sphere.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the sphere. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsW():number\r\n\t{\r\n\t\treturn this._segmentsW;\r\n\t}\r\n\r\n\tpublic set segmentsW(value:number)\r\n\t{\r\n\t\tthis._segmentsW = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the sphere. Defaults to 12.\r\n\t */\r\n\tpublic get segmentsH():number\r\n\t{\r\n\t\treturn this._segmentsH;\r\n\t}\r\n\r\n\tpublic set segmentsH(value:number)\r\n\t{\r\n\t\tthis._segmentsH = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new Sphere object.\r\n\t *\r\n\t * @param radius The radius of the sphere.\r\n\t * @param segmentsW Defines the number of horizontal segments that make up the sphere.\r\n\t * @param segmentsH Defines the number of vertical segments that make up the sphere.\r\n\t * @param yUp Defines whether the sphere poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, segmentsW:number = 16, segmentsH:number = 12, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._segmentsW = segmentsW;\r\n\t\tthis._segmentsH = segmentsH;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number;\r\n\t\tvar j:number;\r\n\t\tvar vidx:number, fidx:number; // indices\r\n\r\n\t\tvar comp1:number;\r\n\t\tvar comp2:number;\r\n\t\tvar numVertices:number;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.indices != null) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array((this._segmentsH - 1)*this._segmentsW*6);\r\n\t\t\t\tpositions = new Float32Array(numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tvar startIndex:number;\r\n\t\t\tvar t1:number;\r\n\t\t\tvar t2:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tstartIndex = vidx;\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\t\t\t\t\tvar normLen:number = 1/Math.sqrt(x*x + y*y + z*z);\r\n\t\t\t\t\tvar tanLen:number = Math.sqrt(y*y + x*x);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tt1 = tanLen > .007? x/tanLen : 0;\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\tpositions[vidx+1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx+2] = positions[startIndex + 2];\r\n\t\t\t\t\t\tnormals[vidx] = normals[startIndex] + (x*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+1] = normals[startIndex + 1] + ( comp1*normLen)*.5;\r\n\t\t\t\t\t\tnormals[vidx+2] = normals[startIndex + 2] + (comp2*normLen)*.5;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx+1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx+2] = comp2;\r\n\t\t\t\t\t\tnormals[vidx] = x*normLen;\r\n\t\t\t\t\t\tnormals[vidx+1] = comp1*normLen;\r\n\t\t\t\t\t\tnormals[vidx+2] = comp2*normLen;\r\n\t\t\t\t\t\ttangents[vidx] = tanLen > .007? -y/tanLen : 1;\r\n\t\t\t\t\t\ttangents[vidx+1] = t1;\r\n\t\t\t\t\t\ttangents[vidx+2] = t2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\r\n\t\t\t\t\t\tvar a:number = (this._segmentsW + 1)*j + i;\r\n\t\t\t\t\t\tvar b:number = (this._segmentsW + 1)*j + i - 1;\r\n\t\t\t\t\t\tvar c:number = (this._segmentsW + 1)*(j - 1) + i - 1;\r\n\t\t\t\t\t\tvar d:number = (this._segmentsW + 1)*(j - 1) + i;\r\n\r\n\t\t\t\t\t\tif (j == this._segmentsH) {\r\n\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[startIndex];\r\n\t\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\r\n\t\t\t\t\t\t} else if (j == 1) {\r\n\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\r\n\t\t\tvar lineGeometry:LineSubGeometry = <LineSubGeometry> target;\r\n\r\n\t\t\tvar numSegments:number = this._segmentsH*this._segmentsW*2 + this._segmentsW;\r\n\t\t\tvar positions:Float32Array = new Float32Array(numSegments*6);\r\n\t\t\tvar thickness:Float32Array = new Float32Array(numSegments);\r\n\r\n\t\t\tvidx = 0;\r\n\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\r\n\t\t\t\tvar horangle:number = Math.PI*j/this._segmentsH;\r\n\t\t\t\tvar z:number = -this._radius*Math.cos(horangle);\r\n\t\t\t\tvar ringradius:number = this._radius*Math.sin(horangle);\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tvar verangle:number = 2*Math.PI*i/this._segmentsW;\r\n\t\t\t\t\tvar x:number = ringradius*Math.cos(verangle);\r\n\t\t\t\t\tvar y:number = ringradius*Math.sin(verangle);\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\r\n\t\t\t\t\t\t//vertical lines\r\n\t\t\t\t\t\tif (j > 0) {\r\n\t\t\t\t\t\t\tvar addx:number = (j == 1)? 3 - (6*(this._segmentsW-i) + 12*i) : 3 - this._segmentsW*12;\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\t\t\t\t\t\t\tpositions[vidx] = positions[vidx++ + addx];\r\n\r\n\t\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\r\n\t\t\t\t\t\t\tthickness[fidx++] = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//horizonal lines\r\n\t\t\t\t\tif (i < this._segmentsW) {\r\n\t\t\t\t\t\tpositions[vidx++] = x;\r\n\t\t\t\t\t\tpositions[vidx++] = comp1;\r\n\t\t\t\t\t\tpositions[vidx++] = comp2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\tlineGeometry.setPositions(positions);\r\n\t\t\tlineGeometry.setThickness(thickness);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar i:number, j:number;\r\n\t\tvar numVertices:number = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tnumVertices = (this._segmentsH + 1)*(this._segmentsW + 1);\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\tif (numVertices == triangleGeometry.numVertices && triangleGeometry.uvs != null) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\tvar index:number = 0;\r\n\t\t\tfor (j = 0; j <= this._segmentsH; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsW; ++i) {\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsW )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsH )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveSpherePrefab;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport SubGeometryBase\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport TriangleSubGeometry\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\r\nimport PrimitivePrefabBase\t\t= require(\"awayjs-display/lib/prefabs/PrimitivePrefabBase\");\r\n\r\n/**\r\n * A UV Cylinder primitive mesh.\r\n */\r\nclass PrimitiveTorusPrefab extends PrimitivePrefabBase implements IAsset\r\n{\r\n\tprivate _radius:number;\r\n\tprivate _tubeRadius:number;\r\n\tprivate _segmentsR:number;\r\n\tprivate _segmentsT:number;\r\n\tprivate _yUp:boolean;\r\n\tprivate _numVertices:number = 0;\r\n\r\n\t/**\r\n\t * The radius of the torus.\r\n\t */\r\n\tpublic get radius():number\r\n\t{\r\n\t\treturn this._radius;\r\n\t}\r\n\r\n\tpublic set radius(value:number)\r\n\t{\r\n\t\tthis._radius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * The radius of the inner tube of the torus.\r\n\t */\r\n\tpublic get tubeRadius():number\r\n\t{\r\n\t\treturn this._tubeRadius;\r\n\t}\r\n\r\n\tpublic set tubeRadius(value:number)\r\n\t{\r\n\t\tthis._tubeRadius = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of horizontal segments that make up the torus. Defaults to 16.\r\n\t */\r\n\tpublic get segmentsR():number\r\n\t{\r\n\t\treturn this._segmentsR;\r\n\t}\r\n\r\n\tpublic set segmentsR(value:number)\r\n\t{\r\n\t\tthis._segmentsR = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the number of vertical segments that make up the torus. Defaults to 8.\r\n\t */\r\n\tpublic get segmentsT():number\r\n\t{\r\n\t\treturn this._segmentsT;\r\n\t}\r\n\r\n\tpublic set segmentsT(value:number)\r\n\t{\r\n\t\tthis._segmentsT = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t\tthis._pInvalidateUVs();\r\n\t}\r\n\r\n\t/**\r\n\t * Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tpublic get yUp():boolean\r\n\t{\r\n\t\treturn this._yUp;\r\n\t}\r\n\r\n\tpublic set yUp(value:boolean)\r\n\t{\r\n\t\tthis._yUp = value;\r\n\t\tthis._pInvalidateGeometry();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new <code>Torus</code> object.\r\n\t * @param radius The radius of the torus.\r\n\t * @param tuebRadius The radius of the inner tube of the torus.\r\n\t * @param segmentsR Defines the number of horizontal segments that make up the torus.\r\n\t * @param segmentsT Defines the number of vertical segments that make up the torus.\r\n\t * @param yUp Defines whether the torus poles should lay on the Y-axis (true) or on the Z-axis (false).\r\n\t */\r\n\tconstructor(radius:number = 50, tubeRadius:number = 50, segmentsR:number = 16, segmentsT:number = 8, yUp:boolean = true)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._radius = radius;\r\n\t\tthis._tubeRadius = tubeRadius;\r\n\t\tthis._segmentsR = segmentsR;\r\n\t\tthis._segmentsT = segmentsT;\r\n\t\tthis._yUp = yUp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildGeometry(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\t\tvar indices:Uint16Array;\r\n\t\tvar positions:Float32Array;\r\n\t\tvar normals:Float32Array;\r\n\t\tvar tangents:Float32Array;\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar x:number, y:number, z:number, nx:number, ny:number, nz:number, revolutionAngleR:number, revolutionAngleT:number;\r\n\t\tvar vidx:number;\r\n\t\tvar fidx:number;\r\n\t\tvar numIndices:number = 0;\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// evaluate target number of vertices, triangles and indices\r\n\t\t\tthis._numVertices = (this._segmentsT + 1)*(this._segmentsR + 1); // segmentsT + 1 because of closure, segmentsR + 1 because of closure\r\n\t\t\tnumIndices = this._segmentsT*this._segmentsR*6; // each level has segmentR quads, each of 2 triangles\r\n\r\n\t\t\t// need to initialize raw arrays or can be reused?\r\n\t\t\tif (this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tindices = triangleGeometry.indices.get(triangleGeometry.numElements);\r\n\t\t\t\tpositions = triangleGeometry.positions.get(this._numVertices);\r\n\t\t\t\tnormals = triangleGeometry.normals.get(this._numVertices);\r\n\t\t\t\ttangents = triangleGeometry.tangents.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tindices = new Uint16Array(numIndices);\r\n\t\t\t\tpositions = new Float32Array(this._numVertices*3);\r\n\t\t\t\tnormals = new Float32Array(this._numVertices*3);\r\n\t\t\t\ttangents = new Float32Array(this._numVertices*3);\r\n\r\n\t\t\t\tthis._pInvalidateUVs();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvidx = 0;\r\n\t\t\tfidx = 0;\r\n\r\n\t\t\t// evaluate revolution steps\r\n\t\t\tvar revolutionAngleDeltaR:number = 2*Math.PI/this._segmentsR;\r\n\t\t\tvar revolutionAngleDeltaT:number = 2*Math.PI/this._segmentsT;\r\n\r\n\t\t\tvar comp1:number, comp2:number;\r\n\t\t\tvar t1:number, t2:number, n1:number, n2:number;\r\n\t\t\tvar startIndex:number = 0;\r\n\t\t\tvar nextVertexIndex:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tvar a:number, b:number, c:number, d:number, length:number;\r\n\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\r\n\t\t\t\tstartIndex = nextVertexIndex*3;\r\n\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\trevolutionAngleR = i*revolutionAngleDeltaR;\r\n\t\t\t\t\trevolutionAngleT = j*revolutionAngleDeltaT;\r\n\r\n\t\t\t\t\tlength = Math.cos(revolutionAngleT);\r\n\t\t\t\t\tnx = length*Math.cos(revolutionAngleR);\r\n\t\t\t\t\tny = length*Math.sin(revolutionAngleR);\r\n\t\t\t\t\tnz = Math.sin(revolutionAngleT);\r\n\r\n\t\t\t\t\tx = this._radius*Math.cos(revolutionAngleR) + this._tubeRadius*nx;\r\n\t\t\t\t\ty = this._radius*Math.sin(revolutionAngleR) + this._tubeRadius*ny;\r\n\t\t\t\t\tz = (j == this._segmentsT)? 0 : this._tubeRadius*nz;\r\n\r\n\t\t\t\t\tif (this._yUp) {\r\n\r\n\t\t\t\t\t\tn1 = -nz;\r\n\t\t\t\t\t\tn2 = ny;\r\n\t\t\t\t\t\tt1 = 0;\r\n\t\t\t\t\t\tt2 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tcomp1 = -z;\r\n\t\t\t\t\t\tcomp2 = y;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tn1 = ny;\r\n\t\t\t\t\t\tn2 = nz;\r\n\t\t\t\t\t\tt1 = (length? nx/length : x/this._radius);\r\n\t\t\t\t\t\tt2 = 0;\r\n\t\t\t\t\t\tcomp1 = y;\r\n\t\t\t\t\t\tcomp2 = z;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (i == this._segmentsR) {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = positions[startIndex + 1];\r\n\t\t\t\t\t\tpositions[vidx + 2] = positions[startIndex + 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpositions[vidx] = x;\r\n\t\t\t\t\t\tpositions[vidx + 1] = comp1;\r\n\t\t\t\t\t\tpositions[vidx + 2] = comp2;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnormals[vidx] = nx;\r\n\t\t\t\t\tnormals[vidx + 1] = n1;\r\n\t\t\t\t\tnormals[vidx + 2] = n2;\r\n\t\t\t\t\ttangents[vidx] = -(length? ny/length : y/this._radius);\r\n\t\t\t\t\ttangents[vidx + 1] = t1;\r\n\t\t\t\t\ttangents[vidx + 2] = t2;\r\n\r\n\t\t\t\t\tvidx += 3;\r\n\r\n\t\t\t\t\t// close triangle\r\n\t\t\t\t\tif (i > 0 && j > 0) {\r\n\t\t\t\t\t\ta = nextVertexIndex; // current\r\n\t\t\t\t\t\tb = nextVertexIndex - 1; // previous\r\n\t\t\t\t\t\tc = b - this._segmentsR - 1; // previous of last level\r\n\t\t\t\t\t\td = a - this._segmentsR - 1; // current of last level\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = b;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\r\n\t\t\t\t\t\tindices[fidx++] = a;\r\n\t\t\t\t\t\tindices[fidx++] = c;\r\n\t\t\t\t\t\tindices[fidx++] = d;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnextVertexIndex++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setIndices(indices);\r\n\r\n\t\t\ttriangleGeometry.setPositions(positions);\r\n\t\t\ttriangleGeometry.setNormals(normals);\r\n\t\t\ttriangleGeometry.setTangents(tangents);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//TODO\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic _pBuildUVs(target:SubGeometryBase, geometryType:string)\r\n\t{\r\n\r\n\t\tvar i:number, j:number;\r\n\t\tvar uvs:Float32Array;\r\n\r\n\r\n\t\tif (geometryType == \"triangleSubGeometry\") {\r\n\r\n\t\t\tvar triangleGeometry:TriangleSubGeometry = <TriangleSubGeometry> target;\r\n\r\n\t\t\t// need to initialize raw array or can be reused?\r\n\t\t\tif (triangleGeometry.uvs && this._numVertices == triangleGeometry.numVertices) {\r\n\t\t\t\tuvs = triangleGeometry.uvs.get(this._numVertices);\r\n\t\t\t} else {\r\n\t\t\t\tuvs = new Float32Array(this._numVertices*2);\r\n\t\t\t}\r\n\r\n\t\t\t// current uv component index\r\n\t\t\tvar index:number = 0;\r\n\r\n\t\t\t// surface\r\n\t\t\tfor (j = 0; j <= this._segmentsT; ++j) {\r\n\t\t\t\tfor (i = 0; i <= this._segmentsR; ++i) {\r\n\t\t\t\t\t// revolution vertex\r\n\t\t\t\t\tuvs[index++] = ( i/this._segmentsR )*this._scaleU;\r\n\t\t\t\t\tuvs[index++] = ( j/this._segmentsT )*this._scaleV;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// build real data from raw data\r\n\t\t\ttriangleGeometry.setUVs(uvs);\r\n\r\n\t\t} else if (geometryType == \"lineSubGeometry\") {\r\n\t\t\t//nothing to do here\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport = PrimitiveTorusPrefab;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.RenderableMergeSort\r\n */\r\nclass RenderableMergeSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable;\r\n\t\tvar slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortBlendedRenderables(head);\r\n\t\theadB = this.sortBlendedRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB) {\r\n\t\t\tif (head.zIndex < headB.zIndex) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result)\r\n\t\t\t\tresult = l; else\r\n\t\t\t\tcurr.next = l;\r\n\r\n\t\t\tcurr = l;\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\tvar headB:IRenderable;\r\n\t\tvar fast:IRenderable, slow:IRenderable;\r\n\r\n\t\tif (!head || !head.next) {\r\n\t\t\treturn head;\r\n\t\t}\r\n\r\n\t\t// split in two sublists\r\n\t\tslow = head;\r\n\t\tfast = head.next;\r\n\r\n\t\twhile (fast) {\r\n\t\t\tfast = fast.next;\r\n\t\t\tif (fast) {\r\n\t\t\t\tslow = slow.next;\r\n\t\t\t\tfast = fast.next;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadB = slow.next;\r\n\t\tslow.next = null;\r\n\r\n\t\t// recurse\r\n\t\thead = this.sortOpaqueRenderables(head);\r\n\t\theadB = this.sortOpaqueRenderables(headB);\r\n\r\n\t\t// merge sublists while respecting order\r\n\t\tvar result:IRenderable;\r\n\t\tvar curr:IRenderable;\r\n\t\tvar l:IRenderable;\r\n\t\tvar cmp:number = 0;\r\n\r\n\t\tif (!head)\r\n\t\t\treturn headB;\r\n\t\tif (!headB)\r\n\t\t\treturn head;\r\n\r\n\t\twhile (head && headB && head != null && headB != null) {\r\n\r\n\t\t\t// first sort per render order id (reduces program3D switches),\r\n\t\t\t// then on render object id (reduces setting props),\r\n\t\t\t// then on zIndex (reduces overdraw)\r\n\t\t\tvar aid:number = head.renderOrderId;\r\n\t\t\tvar bid:number = headB.renderOrderId;\r\n\r\n\t\t\tif (aid == bid) {\r\n\t\t\t\tvar ma:number = head.renderId;\r\n\t\t\t\tvar mb:number = headB.renderId;\r\n\r\n\t\t\t\tif (ma == mb) {\r\n\t\t\t\t\tif (head.zIndex < headB.zIndex)\r\n\t\t\t\t\t\tcmp = 1; else\r\n\t\t\t\t\t\tcmp = -1;\r\n\t\t\t\t} else if (ma > mb) {\r\n\t\t\t\t\tcmp = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcmp = -1;\r\n\t\t\t\t}\r\n\t\t\t} else if (aid > bid) {\r\n\t\t\t\tcmp = 1;\r\n\t\t\t} else {\r\n\t\t\t\tcmp = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (cmp < 0) {\r\n\t\t\t\tl = head;\r\n\t\t\t\thead = head.next;\r\n\t\t\t} else {\r\n\t\t\t\tl = headB;\r\n\t\t\t\theadB = headB.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (!result) {\r\n\t\t\t\tresult = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t} else {\r\n\t\t\t\tcurr.next = l;\r\n\t\t\t\tcurr = l;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (head)\r\n\t\t\tcurr.next = head; else if (headB)\r\n\t\t\tcurr.next = headB;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport = RenderableMergeSort;",
    "import IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\r\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\r\n\r\n/**\r\n * @class away.sort.NullSort\r\n */\r\nclass RenderableNullSort implements IEntitySorter\r\n{\r\n\tpublic sortBlendedRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n\r\n\tpublic sortOpaqueRenderables(head:IRenderable):IRenderable\r\n\t{\r\n\t\treturn head;\r\n\t}\r\n}\r\n\r\nexport = RenderableNullSort;",
    "/**\r\n * The AntiAliasType class provides values for anti-aliasing in the\r\n * away.text.TextField class.\r\n */\r\nclass AntiAliasType\r\n{\r\n\t/**\r\n\t * Sets anti-aliasing to advanced anti-aliasing. Advanced anti-aliasing\r\n\t * allows font faces to be rendered at very high quality at small sizes. It\r\n\t * is best used with applications that have a lot of small text. Advanced\r\n\t * anti-aliasing is not recommended for very large fonts(larger than 48\r\n\t * points). This constant is used for the <code>antiAliasType</code> property\r\n\t * in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.ADVANCED</code>.\r\n\t */\r\n\tpublic static ADVANCED:string = \"advanced\";\r\n\r\n\t/**\r\n\t * Sets anti-aliasing to the anti-aliasing that is used in Flash Player 7 and\r\n\t * earlier. This setting is recommended for applications that do not have a\r\n\t * lot of text. This constant is used for the <code>antiAliasType</code>\r\n\t * property in the TextField class. Use the syntax\r\n\t * <code>AntiAliasType.NORMAL</code>.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n}\r\n\r\nexport = AntiAliasType;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport FontTable\t\t\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass Font extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset Font]\";\r\n\r\n\tprivate _font_styles:Array<FontTable> = new Array<FontTable>();\r\n\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Font.assetType;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\t/**\r\n\t *Get a font-table for a specific name, or create one if it does not exists.\r\n\t */\r\n\tpublic get_font_table(style_name:string):FontTable\r\n\t{\r\n\t\tvar len:number = this._font_styles.length;\r\n\r\n\t\tfor (var i:number = 0; i < len; ++i) {\r\n\t\t\tif(this._font_styles[i].name==style_name)\r\n\t\t\t\treturn this._font_styles[i];\r\n\t\t}\r\n\t\tvar font_style:FontTable = new FontTable();\r\n\t\tfont_style.name=style_name;\r\n\t\tthis._font_styles.push(font_style);\r\n\t\treturn font_style;\r\n\t}\r\n\r\n}\r\n\r\nexport = Font;",
    "/**\r\n * The GridFitType class defines values for grid fitting in the TextField class.\r\n */\r\nclass GridFitType\r\n{\r\n\t/**\r\n\t * Doesn't set grid fitting. Horizontal and vertical lines in the glyphs are\r\n\t * not forced to the pixel grid. This constant is used in setting the\r\n\t * <code>gridFitType</code> property of the TextField class. This is often a\r\n\t * good setting for animation or for large font sizes. Use the syntax\r\n\t * <code>GridFitType.NONE</code>.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the pixel grid. This constant\r\n\t * is used in setting the <code>gridFitType</code> property of the TextField\r\n\t * class. This setting only works for left-justified text fields and acts\r\n\t * like the <code>GridFitType.SUBPIXEL</code> constant in static text. This\r\n\t * setting generally provides the best readability for left-aligned text. Use\r\n\t * the syntax <code>GridFitType.PIXEL</code>.\r\n\t */\r\n\tpublic static PIXEL:string = \"pixel\";\r\n\r\n\t/**\r\n\t * Fits strong horizontal and vertical lines to the sub-pixel grid on LCD\r\n\t * monitors. (Red, green, and blue are actual pixels on an LCD screen.) This\r\n\t * is often a good setting for right-aligned or center-aligned dynamic text,\r\n\t * and it is sometimes a useful tradeoff for animation vs. text quality. This\r\n\t * constant is used in setting the <code>gridFitType</code> property of the\r\n\t * TextField class. Use the syntax <code>GridFitType.SUBPIXEL</code>.\r\n\t */\r\n\tpublic static SUBPIXEL:string = \"subpixel\";\r\n}\r\n\r\nexport = GridFitType;",
    "import IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\n\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TesselatedFontChar\r\n{\r\n\r\n\t/**\r\n\t * The width of the char\r\n\t */\r\n\tpublic char_width:number;\r\n\r\n\t/**\r\n\t * SubGeometry for this char\r\n\t */\r\n\tpublic subgeom:CurveSubGeometry;\r\n\r\n\t/**\r\n\t * the char_codes that this geom has kerning set for\r\n\t */\r\n\tpublic kerningCharCodes:Array<number>=new Array<number>();\r\n\t/**\r\n\t * the kerning values per char_code\r\n\t */\r\n\tpublic kerningValues:Array<number>=new Array<number>();\r\n\r\n\r\n\tconstructor(subgeom:CurveSubGeometry)\r\n\t{\r\n\t\tthis.char_width=0;\r\n\t\tthis.subgeom = subgeom;\r\n\t\tif (this.subgeom != null) {\r\n\t\t\tvar positions2:Float32Array = this.subgeom.positions.get(this.subgeom.numVertices);\r\n\t\t\tfor (var v:number = 0; v < positions2.length/3; v++) {\r\n\t\t\t\tif(positions2[v*3]>this.char_width)\r\n\t\t\t\t\tthis.char_width=positions2[v*3];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontChar;",
    "\r\nimport AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\n\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\r\nimport CurveSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/CurveSubGeometry\");\r\nimport TesselatedFontChar\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontChar\");\r\n\r\n/**\r\n * SubMeshBase wraps a TriangleSubGeometry as a scene graph instantiation. A SubMeshBase is owned by a Mesh object.\r\n *\r\n *\r\n * @see away.base.TriangleSubGeometry\r\n * @see away.entities.Mesh\r\n *\r\n * @class away.base.SubMeshBase\r\n */\r\nclass TesselatedFontTable extends AssetBase\r\n{\r\n\tprivate _font_chars:Array<TesselatedFontChar>;\r\n\tprivate _font_chars_dic:Object;\r\n\tprivate _font_em_size:number;\r\n\tprivate _charDictDirty:Boolean;\r\n\t//TODO test shader picking\r\n//\t\tpublic get shaderPickingDetails():boolean\r\n//\t\t{\r\n//\r\n//\t\t\treturn this.sourceEntity.shaderPickingDetails;\r\n//\t\t}\r\n\r\n\t/**\r\n\t * Creates a new TesselatedFont object\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t\tthis._font_chars = new Array<TesselatedFontChar>();\r\n\t\tthis._font_chars_dic = new Object();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\r\n\t}\r\n\r\n\tpublic get_font_chars():Array<TesselatedFontChar>\r\n\t{\r\n\t\treturn this._font_chars\r\n\t}\r\n\tpublic get_font_em_size():number\r\n\t{\r\n\t\treturn this._font_em_size\r\n\t}\r\n\tpublic set_font_em_size(font_em_size:number):void\r\n\t{\r\n\t\tthis._font_em_size=font_em_size;\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get_subgeo_for_char(char:string):TesselatedFontChar\r\n\t{\r\n\t\treturn this._font_chars_dic[char];\r\n\t}\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic set_subgeo_for_char(char:string, subgeo:SubGeometryBase):void\r\n\t{\r\n\t\tvar tesselated_font_char:TesselatedFontChar = new TesselatedFontChar(<CurveSubGeometry>subgeo);\r\n\t\tsubgeo.name=char;\r\n\t\tthis._font_chars.push(tesselated_font_char);\r\n\t\tthis._font_chars_dic[char]=tesselated_font_char;\r\n\t}\r\n\r\n}\r\n\r\nexport = TesselatedFontTable;",
    "/**\r\n * The TextFieldAutoSize class is an enumeration of constant values used in\r\n * setting the <code>autoSize</code> property of the TextField class.\r\n */\r\nclass TextFieldAutoSize\r\n{\r\n\t/**\r\n\t * Specifies that the text is to be treated as center-justified text. Any\r\n\t * resizing of a single line of a text field is equally distributed to both\r\n\t * the right and left sides.\r\n\t */\r\n\tpublic static CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as left-justified text, meaning\r\n\t * that the left side of the text field remains fixed and any resizing of a\r\n\t * single line is on the right side.\r\n\t */\r\n\tpublic static LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Specifies that no resizing is to occur.\r\n\t */\r\n\tpublic static NONE:string = \"none\";\r\n\r\n\t/**\r\n\t * Specifies that the text is to be treated as right-justified text, meaning\r\n\t * that the right side of the text field remains fixed and any resizing of a\r\n\t * single line is on the left side.\r\n\t */\r\n\tpublic static RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFieldAutoSize;",
    "/**\r\n * The TextFieldType class is an enumeration of constant values used in setting the\r\n * <code>type</code> property of the TextField class.\r\n *\r\n * @see away.entities.TextField#type\r\n */\r\nclass TextFieldType\r\n{\r\n\t/**\r\n\t * Used to specify a <code>dynamic</code> TextField.\r\n\t */\r\n\tpublic static DYNAMIC:string = \"dynamic\";\r\n\r\n\t/**\r\n\t * Used to specify an <code>input</code> TextField.\r\n\t */\r\n\tpublic static INPUT:string = \"input\";\r\n}\r\n\r\nexport = TextFieldType;",
    "/**\r\n * The TextFormatAlign class provides values for text alignment in the\r\n * TextFormat class.\r\n */\r\nclass TextFormatAlign\r\n{\r\n\t/**\r\n\t * Constant; centers the text in the text field. Use the syntax\r\n\t * <code>TextFormatAlign.CENTER</code>.\r\n\t */\r\n\tpublic CENTER:string = \"center\";\r\n\r\n\t/**\r\n\t * Constant; justifies text within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.JUSTIFY</code>.\r\n\t */\r\n\tpublic JUSTIFY:string = \"justify\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the left within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.LEFT</code>.\r\n\t */\r\n\tpublic LEFT:string = \"left\";\r\n\r\n\t/**\r\n\t * Constant; aligns text to the right within the text field. Use the syntax\r\n\t * <code>TextFormatAlign.RIGHT</code>.\r\n\t */\r\n\tpublic RIGHT:string = \"right\";\r\n}\r\n\r\nexport = TextFormatAlign;",
    "import AssetBase\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\n\r\nimport TesselatedFontTable\t\t\t= require(\"awayjs-display/lib/text/TesselatedFontTable\");\r\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\r\n/**\r\n * The TextFormat class represents character formatting information. Use the\r\n * TextFormat class to create specific text formatting for text fields. You\r\n * can apply text formatting to both static and dynamic text fields. The\r\n * properties of the TextFormat class apply to device and embedded fonts.\r\n * However, for embedded fonts, bold and italic text actually require specific\r\n * fonts. If you want to display bold or italic text with an embedded font,\r\n * you need to embed the bold and italic variations of that font.\r\n *\r\n * <p> You must use the constructor <code>new TextFormat()</code> to create a\r\n * TextFormat object before setting its properties. When you apply a\r\n * TextFormat object to a text field using the\r\n * <code>TextField.defaultTextFormat</code> property or the\r\n * <code>TextField.setTextFormat()</code> method, only its defined properties\r\n * are applied. Use the <code>TextField.defaultTextFormat</code> property to\r\n * apply formatting BEFORE you add text to the <code>TextField</code>, and the\r\n * <code>setTextFormat()</code> method to add formatting AFTER you add text to\r\n * the <code>TextField</code>. The TextFormat properties are <code>null</code>\r\n * by default because if you don't provide values for the properties, Flash\r\n * Player uses its own default formatting. The default formatting that Flash\r\n * Player uses for each property(if property's value is <code>null</code>) is\r\n * as follows:</p>\r\n *\r\n * <p>The default formatting for each property is also described in each\r\n * property description.</p>\r\n */\r\nclass TextFormat extends AssetBase implements IAsset\r\n{\r\n\tpublic static assetType:string = \"[asset TextFormat]\";\r\n\r\n\t/**\r\n\t * Indicates the alignment of the paragraph. Valid values are TextFormatAlign\r\n\t * constants.\r\n\t *\r\n\t * @default TextFormatAlign.LEFT\r\n\t * @throws ArgumentError The <code>align</code> specified is not a member of\r\n\t *                       flash.text.TextFormatAlign.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic align:string;\r\n\r\n\r\n\t/**\r\n\t * Indicates the block indentation in pixels. Block indentation is applied to\r\n\t * an entire block of text; that is, to all lines of the text. In contrast,\r\n\t * normal indentation(<code>TextFormat.indent</code>) affects only the first\r\n\t * line of each paragraph. If this property is <code>null</code>, the\r\n\t * TextFormat object does not specify block indentation(block indentation is\r\n\t * 0).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic blockIndent:number;\r\n\r\n\t/**\r\n\t * Specifies whether the text is boldface. The default value is\r\n\t * <code>null</code>, which means no boldface is used. If the value is\r\n\t * <code>true</code>, then the text is boldface.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own  tesselated-font-table.\r\n\tpublic bold:boolean;\r\n\r\n\t/**\r\n\t * Indicates that the text is part of a bulleted list. In a bulleted list,\r\n\t * each paragraph of text is indented. To the left of the first line of each\r\n\t * paragraph, a bullet symbol is displayed. The default value is\r\n\t * <code>null</code>, which means no bulleted list is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro does not output this directly)\r\n\tpublic bullet:boolean;\r\n\r\n\t/**\r\n\t * Indicates the color of the text. A number containing three 8-bit RGB\r\n\t * components; for example, 0xFF0000 is red, and 0x00FF00 is green. The\r\n\t * default value is <code>null</code>, which means that Flash Player uses the\r\n\t * color black(0x000000).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table because color must be defined my material + uv-values\r\n\tpublic color:boolean;\r\n\r\n\r\n\t/**\r\n\t * The material to use for texturing geometry generated for this text-format. this material will be used by the  TextField\r\n\t */\r\n\tpublic material:MaterialBase;\r\n\r\n\t/**\r\n\t * The uv-values of the colors in textureatlas.\r\n\t * The lenght migth be 4 in future to support bitmap-fills and gradients, but for now it will should always be 2\r\n\t */\r\n\tpublic uv_values:Array<number>;\r\n\r\n\t/**\r\n\t * The name of the font for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-name can be used to get a Font-object from the AssetLibrary.\r\n\t * A Font object provides a list of Font-table, corresponding to font-table names.\r\n\t */\r\n\tpublic font_name:string;\r\n\t/**\r\n\t * The name of the font-style for text in this text format, as a string.\r\n\t * To be valid, for use with curve-rendering, the textFormat must have a Font-table assigned.\r\n\t * The font-style can be used to get a Font-table, from a Font-object.\r\n\t */\r\n\tpublic font_style:string;\r\n\t/**\r\n\t * The font-table that provides the subgeos for the chars\r\n\t */\r\n\tpublic font_table:TesselatedFontTable;\r\n\r\n\t/**\r\n\t * Indicates the indentation from the left margin to the first character in\r\n\t * the paragraph. The default value is <code>null</code>, which indicates\r\n\t * that no indentation is used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic indent:number;\r\n\r\n\t/**\r\n\t * Indicates whether text in this text format is italicized. The default\r\n\t * value is <code>null</code>, which means no italics are used.\r\n\t */\r\n\t//todo: this is not used when working with tesselated-font-table, because this is property need a own tesselated-font-table.\r\n\tpublic italic:boolean;\r\n\r\n\t/**\r\n\t * A Boolean value that indicates whether kerning is enabled\r\n\t * (<code>true</code>) or disabled(<code>false</code>). Kerning adjusts the\r\n\t * pixels between certain character pairs to improve readability, and should\r\n\t * be used only when necessary, such as with headings in large fonts. Kerning\r\n\t * is supported for embedded fonts only.\r\n\t *\r\n\t * <p>Certain fonts such as Verdana and monospaced fonts, such as Courier\r\n\t * New, do not support kerning.</p>\r\n\t *\r\n\t * <p>The default value is <code>null</code>, which means that kerning is not\r\n\t * enabled.</p>\r\n\t */\r\n\t//todo: kerning values are not yet stored with Font-table. soon to come. (also: flash-pro only outputs very few kerning pairs per font-table)\r\n\tpublic kerning:boolean;\r\n\r\n\t/**\r\n\t * An integer representing the amount of vertical space(called\r\n\t * <i>leading</i>) between lines. The default value is <code>null</code>,\r\n\t * which indicates that the amount of leading used is 0.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The left margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the left margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic leftMargin:number;\r\n\r\n\t/**\r\n\t * A number representing the amount of space that is uniformly distributed\r\n\t * between all characters. The value specifies the number of pixels that are\r\n\t * added to the advance after each character. The default value is\r\n\t * <code>null</code>, which means that 0 pixels of letter spacing is used.\r\n\t * You can use decimal values such as <code>1.75</code>.\r\n\t */\r\n\tpublic letterSpacing:number;\r\n\r\n\t/**\r\n\t * The right margin of the paragraph, in pixels. The default value is\r\n\t * <code>null</code>, which indicates that the right margin is 0 pixels.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet (flash-pro offers this as paragraph-properties)\r\n\tpublic rightMargin:number;\r\n\r\n\t/**\r\n\t * The size in pixels of text in this text format. The default value is\r\n\t * <code>null</code>, which means that a size of 12 is used.\r\n\t */\r\n\tpublic size:number;\r\n\r\n\t/**\r\n\t * Specifies custom tab stops as an array of non-negative integers. Each tab\r\n\t * stop is specified in pixels. If custom tab stops are not specified\r\n\t * (<code>null</code>), the default tab stop is 4(average character width).\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic tabStops:Array<number /*int*/> = new Array<number>();\r\n\r\n\t/**\r\n\t * Indicates the target window where the hyperlink is displayed. If the\r\n\t * target window is an empty string, the text is displayed in the default\r\n\t * target window <code>_self</code>. You can choose a custom name or one of\r\n\t * the following four names: <code>_self</code> specifies the current frame\r\n\t * in the current window, <code>_blank</code> specifies a new window,\r\n\t * <code>_parent</code> specifies the parent of the current frame, and\r\n\t * <code>_top</code> specifies the top-level frame in the current window. If\r\n\t * the <code>TextFormat.url</code> property is an empty string or\r\n\t * <code>null</code>, you can get or set this property, but the property will\r\n\t * have no effect.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic link_target:string;\r\n\r\n\t/**\r\n\t * Indicates whether the text that uses this text format is underlined\r\n\t * (<code>true</code>) or not(<code>false</code>). This underlining is\r\n\t * similar to that produced by the <code><U></code> tag, but the latter is\r\n\t * not true underlining, because it does not skip descenders correctly. The\r\n\t * default value is <code>null</code>, which indicates that underlining is\r\n\t * not used.\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic underline:boolean;\r\n\r\n\t/**\r\n\t * Indicates the target URL for the text in this text format. If the\r\n\t * <code>url</code> property is an empty string, the text does not have a\r\n\t * hyperlink. The default value is <code>null</code>, which indicates that\r\n\t * the text does not have a hyperlink.\r\n\t *\r\n\t * <p><b>Note:</b> The text with the assigned text format must be set with\r\n\t * the <code>htmlText</code> property for the hyperlink to work.</p>\r\n\t */\r\n\t//todo: not used with in tesselated-font-table yet\r\n\tpublic url:string;\r\n\r\n\t/**\r\n\t * Creates a TextFormat object with the specified properties. You can then\r\n\t * change the properties of the TextFormat object to change the formatting of\r\n\t * text fields.\r\n\t *\r\n\t * <p>Any parameter may be set to <code>null</code> to indicate that it is\r\n\t * not defined. All of the parameters are optional; any omitted parameters\r\n\t * are treated as <code>null</code>.</p>\r\n\t *\r\n\t * @param font        The name of a font for text as a string.\r\n\t * @param size        An integer that indicates the size in pixels.\r\n\t * @param color       The color of text using this text format. A number\r\n\t *                    containing three 8-bit RGB components; for example,\r\n\t *                    0xFF0000 is red, and 0x00FF00 is green.\r\n\t * @param bold        A Boolean value that indicates whether the text is\r\n\t *                    boldface.\r\n\t * @param italic      A Boolean value that indicates whether the text is\r\n\t *                    italicized.\r\n\t * @param underline   A Boolean value that indicates whether the text is\r\n\t *                    underlined.\r\n\t * @param url         The URL to which the text in this text format\r\n\t *                    hyperlinks. If <code>url</code> is an empty string, the\r\n\t *                    text does not have a hyperlink.\r\n\t * @param target      The target window where the hyperlink is displayed. If\r\n\t *                    the target window is an empty string, the text is\r\n\t *                    displayed in the default target window\r\n\t *                    <code>_self</code>. If the <code>url</code> parameter\r\n\t *                    is set to an empty string or to the value\r\n\t *                    <code>null</code>, you can get or set this property,\r\n\t *                    but the property will have no effect.\r\n\t * @param align       The alignment of the paragraph, as a TextFormatAlign\r\n\t *                    value.\r\n\t * @param leftMargin  Indicates the left margin of the paragraph, in pixels.\r\n\t * @param rightMargin Indicates the right margin of the paragraph, in pixels.\r\n\t * @param indent      An integer that indicates the indentation from the left\r\n\t *                    margin to the first character in the paragraph.\r\n\t * @param leading     A number that indicates the amount of leading vertical\r\n\t *                    space between lines.\r\n\t */\r\n\tconstructor(font:string = \"Times New Roman\", size:number = 12, color:number /*int*/ = 0x000000, bold:boolean = false, italic:boolean = false, underline:boolean = false, url:string = \"\", link_target:string = \"\", align:string = \"left\", leftMargin:number = 0, rightMargin:number = 0, indent:number = 0, leading:number = 0)\r\n\t{\r\n\t\tsuper();\r\n\t\tthis.font_name = font;\r\n\t\tthis.size = size;\r\n\t\tthis.bold = bold;\r\n\t\tthis.italic = italic;\r\n\t\tthis.underline = underline;\r\n\t\tthis.url = url;\r\n\t\tthis.link_target = link_target;\r\n\t\tthis.align = align;\r\n\t\tthis.leftMargin = leftMargin;\r\n\t\tthis.rightMargin = rightMargin;\r\n\t\tthis.indent = indent;\r\n\t\tthis.leading = leading;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn TextFormat.assetType;\r\n\t}\r\n}\r\n\r\nexport = TextFormat;",
    "/**\r\n * A class that defines the Interactive mode of a text field object.\r\n *\r\n * @see away.entities.TextField#textInteractionMode\r\n */\r\nclass TextInteractionMode\r\n{\r\n\t/**\r\n\t * The text field's default interaction mode is NORMAL and it varies across\r\n\t * platform. On Desktop, the normal mode implies that the text field is in\r\n\t * scrollable + selection mode. On Mobile platforms like Android, normal mode\r\n\t * implies that the text field can only be scrolled but the text can not be\r\n\t * selected.\r\n\t */\r\n\tpublic static NORMAL:string = \"normal\";\r\n\r\n\t/**\r\n\t * On mobile platforms like Android, the text field starts in normal mode\r\n\t * (which implies scroll and non-selectable mode). The user can switch to\r\n\t * selection mode through the in-built context menu of the text field object.\r\n\t */\r\n\tpublic static SELECTION:string = \"selection\";\r\n}\r\n\r\nexport = TextInteractionMode;",
    "/**\r\n * The TextLineMetrics class contains information about the text position and\r\n * measurements of a line of text within a text field. All measurements are in\r\n * pixels. Objects of this class are returned by the \r\n * <code>away.entities.TextField.getLineMetrics()</code> method.\r\n */\r\nclass TextLineMetrics\r\n{\r\n\t/**\r\n\t * The ascent value of the text is the length from the baseline to the top of\r\n\t * the line height in pixels.\r\n\t */\r\n\tpublic ascent:number;\r\n\r\n\t/**\r\n\t * The descent value of the text is the length from the baseline to the\r\n\t * bottom depth of the line in pixels.\r\n\t */\r\n\tpublic descent:number;\r\n\r\n\t/**\r\n\t * The height value of the text of the selected lines (not necessarily the\r\n\t * complete text) in pixels. The height of the text line does not include the\r\n\t * gutter height.\r\n\t */\r\n\tpublic height:number;\r\n\r\n\t/**\r\n\t * The leading value is the measurement of the vertical distance between the\r\n\t * lines of text.\r\n\t */\r\n\tpublic leading:number;\r\n\r\n\t/**\r\n\t * The width value is the width of the text of the selected lines (not\r\n\t * necessarily the complete text) in pixels. The width of the text line is\r\n\t * not the same as the width of the text field. The width of the text line is\r\n\t * relative to the text field width, minus the gutter width of 4 pixels\r\n\t * (2 pixels on each side).\r\n\t */\r\n\tpublic width:number;\r\n\r\n\t/**\r\n\t * The x value is the left position of the first character in pixels. This\r\n\t * value includes the margin, indent (if any), and gutter widths.\r\n\t */\r\n\tpublic x:number;\r\n\r\n\t/**\r\n\t * Creates a TextLineMetrics object. The TextLineMetrics object contains\r\n\t * information about the text metrics of a line of text in a text field.\r\n\t * Objects of this class are returned by the\r\n\t * away.entities.TextField.getLineMetrics() method.\r\n\t *\r\n\t * @param x           The left position of the first character in pixels.\r\n\t * @param width       The width of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param height      The height of the text of the selected lines (not\r\n\t *                    necessarily the complete text) in pixels.\r\n\t * @param ascent      The length from the baseline to the top of the line\r\n\t *                    height in pixels.\r\n\t * @param descent     The length from the baseline to the bottom depth of\r\n\t *                    the line in pixels.\r\n\t * @param leading     The measurement of the vertical distance between the\r\n\t *                    lines of text.\r\n\t */\r\n\tconstructor(x:number = NaN, width:number = NaN, height:number = NaN, ascent:number = NaN, descent:number = NaN, leading:number = NaN)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport = TextLineMetrics;",
    "﻿import Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\r\nimport Error\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\r\nimport ImageUtils\t\t\t\t= require(\"awayjs-core/lib/utils/ImageUtils\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\nclass Single2DTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture Single2DTexture]\";\r\n\r\n\tprivate _sampler2D:Sampler2D;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn Single2DTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Image2D}\r\n\t */\r\n\tpublic get sampler2D():Sampler2D\r\n\t{\r\n\t\treturn this._sampler2D;\r\n\t}\r\n\r\n\tpublic set sampler2D(value:Sampler2D)\r\n\t{\r\n\t\tif (this._sampler2D == value)\r\n\t\t\treturn;\r\n\r\n\t\tif (!ImageUtils.isImage2DValid(value.image2D))\r\n\t\t\tthrow new Error(\"Invalid sampler2DData: Width and height must be power of 2 and cannot exceed 2048\");\r\n\r\n\t\tthis._sampler2D = value;\r\n\r\n\t\tthis._setSize(this._sampler2D.rect.width, this._sampler2D.rect.height);\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:Sampler2D);\r\n\tconstructor(source:Image2D);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof Image2D)\r\n\t\t\tthis.sampler2D = new Sampler2D(source);\r\n\t\telse\r\n\t\t\tthis.sampler2D = source;\r\n\r\n\t}\r\n}\r\n\r\nexport = Single2DTexture;",
    "import SamplerCube\t\t\t\t= require(\"awayjs-core/lib/data/SamplerCube\");\r\nimport ImageCube\t\t\t\t= require(\"awayjs-core/lib/data/ImageCube\");\r\n\r\nimport TextureBase\t\t\t\t= require(\"awayjs-display/lib/textures/TextureBase\");\r\n\r\n\r\nclass SingleCubeTexture extends TextureBase\r\n{\r\n\tpublic static assetType:string = \"[texture SingleCubeTexture]\";\r\n\r\n\tprivate _samplerCube:SamplerCube;\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tpublic get assetType():string\r\n\t{\r\n\t\treturn SingleCubeTexture.assetType;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {BitmapData}\r\n\t */\r\n\tpublic get samplerCube():SamplerCube\r\n\t{\r\n\t\treturn this._samplerCube;\r\n\t}\r\n\r\n\tpublic set samplerCube(value:SamplerCube)\r\n\t{\r\n\t\tif (this._samplerCube == value)\r\n\t\t\treturn;\r\n\r\n\t\tthis._samplerCube = value;\r\n\r\n\t\tthis.invalidateContent();\r\n\t}\r\n\r\n\tconstructor(source:SamplerCube);\r\n\tconstructor(source:ImageCube);\r\n\tconstructor(source:any)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif (source instanceof ImageCube)\r\n\t\t\tthis.samplerCube = new SamplerCube(source);\r\n\t\telse\r\n\t\t\tthis.samplerCube = source;\r\n\t}\r\n}\r\n\r\nexport = SingleCubeTexture;",
    "import IAsset\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\r\nimport AssetBase\t\t\t\t= require(\"awayjs-core/lib/library/AssetBase\");\r\n\r\nimport ITextureVO\t\t\t= require(\"awayjs-display/lib/pool/ITextureVO\");\r\n\r\n/**\r\n *\r\n */\r\nclass TextureBase extends AssetBase implements IAsset\r\n{\r\n\tprivate _textureVO:Array<ITextureVO> = new Array<ITextureVO>();\r\n\r\n\tpublic _width:number = 1;\r\n\tpublic _height:number = 1;\r\n\r\n\tget width():number\r\n\t{\r\n\t\treturn this._width;\r\n\t}\r\n\r\n\tget height():number\r\n\t{\r\n\t\treturn this._height;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic invalidateContent():void\r\n\t{\r\n\t\tvar len:number = this._textureVO.length;\r\n\t\tfor (var i:number = 0; i < len; i++)\r\n\t\t\tthis._textureVO[i].invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @private\r\n\t */\r\n\tpublic invalidateSize():void\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic dispose()\r\n\t{\r\n\t\twhile (this._textureVO.length)\r\n\t\t\tthis._textureVO[0].dispose();\r\n\t}\r\n\r\n\r\n\tpublic _iAddTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.push(textureVO);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _iRemoveTextureVO(textureVO:ITextureVO):ITextureVO\r\n\t{\r\n\t\tthis._textureVO.splice(this._textureVO.indexOf(textureVO), 1);\r\n\r\n\t\treturn textureVO;\r\n\t}\r\n\r\n\tpublic _setSize(width:number, height:number)\r\n\t{\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\t}\r\n\r\n}\r\n\r\nexport = TextureBase;",
    "import CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.CSSEntityCollector\r\n */\r\nclass CSSEntityCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n}\r\n\r\nexport = CSSEntityCollector;",
    "import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\r\n\r\nimport Scene\t\t\t\t\t\t= require(\"awayjs-display/lib/containers/Scene\");\r\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\r\nimport EntityListItemPool\t\t\t= require(\"awayjs-display/lib/pool/EntityListItemPool\");\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * @class away.traverse.CollectorBase\r\n */\r\nclass CollectorBase\r\n{\r\n\tpublic scene:Scene;\r\n\r\n\tpublic _pEntityHead:EntityListItem;\r\n\tpublic _pEntityListItemPool:EntityListItemPool;\r\n\tpublic _pCamera:Camera;\r\n\tprivate _customCullPlanes:Array<Plane3D>;\r\n\tprivate _cullPlanes:Array<Plane3D>;\r\n\tprivate _numCullPlanes:number = 0;\r\n\tpublic _pNumEntities:number = 0;\r\n\tpublic _pNumInteractiveEntities:number = 0;\r\n\r\n\tpublic isEntityCollector:boolean;\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tthis._pEntityListItemPool = new EntityListItemPool();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get camera():Camera\r\n\t{\r\n\t\treturn this._pCamera;\r\n\t}\r\n\r\n\tpublic set camera(value:Camera)\r\n\t{\r\n\t\tthis._pCamera = value;\r\n\t\tthis._cullPlanes = this._pCamera.frustumPlanes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get cullPlanes():Array<Plane3D>\r\n\t{\r\n\t\treturn this._customCullPlanes;\r\n\t}\r\n\r\n\tpublic set cullPlanes(value:Array<Plane3D>)\r\n\t{\r\n\t\tthis._customCullPlanes = value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get entityHead():EntityListItem\r\n\t{\r\n\t\treturn this._pEntityHead;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numEntities():number\r\n\t{\r\n\t\treturn this._pNumEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get numInteractiveEntities():number\r\n\t{\r\n\t\treturn this._pNumInteractiveEntities;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tthis._pNumEntities = this._pNumInteractiveEntities = 0;\r\n\t\tthis._cullPlanes = this._customCullPlanes? this._customCullPlanes : ( this._pCamera? this._pCamera.frustumPlanes : null );\r\n\t\tthis._numCullPlanes = this._cullPlanes? this._cullPlanes.length : 0;\r\n\t\tthis._pEntityHead = null;\r\n\t\tthis._pEntityListItemPool.freeAll();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param node\r\n\t * @returns {boolean}\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isInFrustum(this._cullPlanes, this._numCullPlanes);\r\n\r\n\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\treturn enter;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyEntity(entity:IEntity)\r\n\t{\r\n\t\tthis._pNumEntities++;\r\n\r\n\t\tif (entity._iIsMouseEnabled())\r\n\t\t\tthis._pNumInteractiveEntities++;\r\n\r\n\t\tvar item:EntityListItem = this._pEntityListItemPool.getItem();\r\n\t\titem.entity = entity;\r\n\r\n\t\titem.next = this._pEntityHead;\r\n\t\tthis._pEntityHead = item;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\t//don't do anything here\r\n\t}\r\n}\r\n\r\nexport = CollectorBase;",
    "import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\r\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\r\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\r\n\r\n/**\r\n * @class away.traverse.EntityCollector\r\n */\r\nclass EntityCollector extends CollectorBase\r\n{\r\n\tpublic _pSkybox:Skybox;\r\n\tpublic _pLights:Array<LightBase>;\r\n\tprivate _directionalLights:Array<DirectionalLight>;\r\n\tprivate _pointLights:Array<PointLight>;\r\n\tprivate _lightProbes:Array<LightProbe>;\r\n\r\n\tpublic _pNumLights:number = 0;\r\n\r\n\tprivate _numDirectionalLights:number = 0;\r\n\tprivate _numPointLights:number = 0;\r\n\tprivate _numLightProbes:number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get directionalLights():Array<DirectionalLight>\r\n\t{\r\n\t\treturn this._directionalLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lightProbes():Array<LightProbe>\r\n\t{\r\n\t\treturn this._lightProbes;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get lights():Array<LightBase>\r\n\t{\r\n\t\treturn this._pLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get pointLights():Array<PointLight>\r\n\t{\r\n\t\treturn this._pointLights;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic get skyBox():Skybox\r\n\t{\r\n\t\treturn this._pSkybox;\r\n\t}\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis._pLights = new Array<LightBase>();\r\n\t\tthis._directionalLights = new Array<DirectionalLight>();\r\n\t\tthis._pointLights = new Array<PointLight>();\r\n\t\tthis._lightProbes = new Array<LightProbe>();\r\n\r\n\t\tthis.isEntityCollector = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyDirectionalLight(entity:IEntity)\r\n\t{\r\n\t\tthis._directionalLights[ this._numDirectionalLights++ ] = <DirectionalLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyLightProbe(entity:IEntity)\r\n\t{\r\n\t\tthis._lightProbes[ this._numLightProbes++ ] = <LightProbe> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applyPointLight(entity:IEntity)\r\n\t{\r\n\t\tthis._pointLights[ this._numPointLights++ ] = <PointLight> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param entity\r\n\t */\r\n\tpublic applySkybox(entity:IEntity)\r\n\t{\r\n\t\tthis._pSkybox = <Skybox> entity;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic clear()\r\n\t{\r\n\t\tsuper.clear();\r\n\r\n\t\tthis._pSkybox = null;\r\n\r\n\t\tif (this._pNumLights > 0)\r\n\t\t\tthis._pLights.length = this._pNumLights = 0;\r\n\r\n\t\tif (this._numDirectionalLights > 0)\r\n\t\t\tthis._directionalLights.length = this._numDirectionalLights = 0;\r\n\r\n\t\tif (this._numPointLights > 0)\r\n\t\t\tthis._pointLights.length = this._numPointLights = 0;\r\n\r\n\t\tif (this._numLightProbes > 0)\r\n\t\t\tthis._lightProbes.length = this._numLightProbes = 0;\r\n\t}\r\n}\r\n\r\nexport = EntityCollector;",
    "import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nimport NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\r\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\r\n\r\n/**\r\n * The RaycastCollector class is a traverser for scene partitions that collects all scene graph entities that are\r\n * considered intersecting with the defined ray.\r\n *\r\n * @see away.partition.Partition\r\n * @see away.entities.IEntity\r\n *\r\n * @class away.traverse.RaycastCollector\r\n */\r\nclass RaycastCollector extends CollectorBase\r\n{\r\n\tprivate _rayPosition:Vector3D = new Vector3D();\r\n\tprivate _rayDirection:Vector3D = new Vector3D();\r\n\r\n\tpublic _iCollectionMark:number = 0;\r\n\r\n\t/**\r\n\t * Provides the starting position of the ray.\r\n\t */\r\n\tpublic get rayPosition():Vector3D\r\n\t{\r\n\t\treturn this._rayPosition;\r\n\t}\r\n\r\n\tpublic set rayPosition(value:Vector3D)\r\n\t{\r\n\t\tthis._rayPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Provides the direction vector of the ray.\r\n\t */\r\n\tpublic get rayDirection():Vector3D\r\n\t{\r\n\t\treturn this._rayDirection;\r\n\t}\r\n\r\n\tpublic set rayDirection(value:Vector3D)\r\n\t{\r\n\t\tthis._rayDirection = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new RaycastCollector object.\r\n\t */\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the current node is at least partly in the frustum. If so, the partition node knows to pass on the traverser to its children.\r\n\t *\r\n\t * @param node The Partition3DNode object to frustum-test.\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\treturn node.isIntersectingRay(this._rayPosition, this._rayDirection);\r\n\t}\r\n}\r\n\r\nexport = RaycastCollector;",
    "import NodeBase\t\t\t\t\t\t= require(\"awayjs-display/lib/partition/NodeBase\");\r\nimport CollectorBase\t\t\t\t= require(\"awayjs-display/lib/traverse/CollectorBase\");\r\n\r\n/**\r\n * @class away.traverse.ShadowCasterCollector\r\n */\r\nclass ShadowCasterCollector extends CollectorBase\r\n{\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic enterNode(node:NodeBase):boolean\r\n\t{\r\n\t\tvar enter:boolean = this.scene._iCollectionMark != node._iCollectionMark && node.isCastingShadow();\r\n\r\n\t\tif (!enter) {\r\n\t\t\tnode._iCollectionMark = this.scene._iCollectionMark;\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn super.enterNode(node);\r\n\t}\r\n}\r\n\r\nexport = ShadowCasterCollector;",
    "import Image2D\t\t\t\t\t= require(\"awayjs-core/lib/data/Image2D\");\r\nimport Sampler2D\t\t\t\t= require(\"awayjs-core/lib/data/Sampler2D\");\r\nimport ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\r\n\r\nimport CastError\t\t\t\t= require(\"awayjs-display/lib/errors/CastError\");\r\nimport Single2DTexture\t\t\t= require(\"awayjs-display/lib/textures/Single2DTexture\");\r\n\r\n/**\r\n * Helper class for casting assets to usable objects\r\n */\r\nclass Cast\r\n{\r\n\tprivate static _colorNames:Object;\r\n\tprivate static _hexChars:string = \"0123456789abcdefABCDEF\";\r\n\r\n\tprivate static _notClasses:Object = new Object();\r\n\tprivate static _classes:Object = new Object();\r\n\r\n\tpublic static string(data:any):string\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\treturn data;\r\n\r\n\t\treturn <string> data;\r\n\t}\r\n\r\n\tpublic static byteArray(data:any):ByteArray\r\n\t{\r\n\t\tif (typeof(data) == 'function')\r\n\t\t\tdata = new data;\r\n\r\n\t\tif (data instanceof ByteArray)\r\n\t\t\treturn data;\r\n\r\n\t\treturn <ByteArray> data;\r\n\t}\r\n\r\n\t//        public static xml(data:any):XML\r\n\t//        {\r\n\t//            if (typeof(data) == 'function')\r\n\t//                data = new data;\r\n\t//\r\n\t//            if (data is XML)\r\n\t//                return data;\r\n\t//\r\n\t//            return XML(data);\r\n\t//        }\r\n\r\n\tprivate static isHex(str:string):boolean\r\n\t{\r\n\t\tvar length:number /*int*/ = str.length;\r\n\t\tfor (var i:number /*int*/ = 0; i < length; ++i) {\r\n\t\t\tif (this._hexChars.indexOf(str.charAt(i)) == -1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryColor(data:any):number /*uint*/\r\n\t{\r\n\t\tif (typeof(data) == 'number' /*uint*/)\r\n\t\t\treturn Math.floor(<number> data);\r\n\r\n\t\tif (typeof(data) == 'string') {\r\n\t\t\tif (data == \"random\")\r\n\t\t\t\treturn Math.floor(Math.random()*0x1000000);\r\n\r\n\t\t\tif (this._colorNames == null) {\r\n\t\t\t\tthis._colorNames = new Object();\r\n\t\t\t\tthis._colorNames[\"steelblue\"] = 0x4682B4;\r\n\t\t\t\tthis._colorNames[\"royalblue\"] = 0x041690;\r\n\t\t\t\tthis._colorNames[\"cornflowerblue\"] = 0x6495ED;\r\n\t\t\t\tthis._colorNames[\"lightsteelblue\"] = 0xB0C4DE;\r\n\t\t\t\tthis._colorNames[\"mediumslateblue\"] = 0x7B68EE;\r\n\t\t\t\tthis._colorNames[\"slateblue\"] = 0x6A5ACD;\r\n\t\t\t\tthis._colorNames[\"darkslateblue\"] = 0x483D8B;\r\n\t\t\t\tthis._colorNames[\"midnightblue\"] = 0x191970;\r\n\t\t\t\tthis._colorNames[\"navy\"] = 0x000080;\r\n\t\t\t\tthis._colorNames[\"darkblue\"] = 0x00008B;\r\n\t\t\t\tthis._colorNames[\"mediumblue\"] = 0x0000CD;\r\n\t\t\t\tthis._colorNames[\"blue\"] = 0x0000FF;\r\n\t\t\t\tthis._colorNames[\"dodgerblue\"] = 0x1E90FF;\r\n\t\t\t\tthis._colorNames[\"deepskyblue\"] = 0x00BFFF;\r\n\t\t\t\tthis._colorNames[\"lightskyblue\"] = 0x87CEFA;\r\n\t\t\t\tthis._colorNames[\"skyblue\"] = 0x87CEEB;\r\n\t\t\t\tthis._colorNames[\"lightblue\"] = 0xADD8E6;\r\n\t\t\t\tthis._colorNames[\"powderblue\"] = 0xB0E0E6;\r\n\t\t\t\tthis._colorNames[\"azure\"] = 0xF0FFFF;\r\n\t\t\t\tthis._colorNames[\"lightcyan\"] = 0xE0FFFF;\r\n\t\t\t\tthis._colorNames[\"paleturquoise\"] = 0xAFEEEE;\r\n\t\t\t\tthis._colorNames[\"mediumturquoise\"] = 0x48D1CC;\r\n\t\t\t\tthis._colorNames[\"lightseagreen\"] = 0x20B2AA;\r\n\t\t\t\tthis._colorNames[\"darkcyan\"] = 0x008B8B;\r\n\t\t\t\tthis._colorNames[\"teal\"] = 0x008080;\r\n\t\t\t\tthis._colorNames[\"cadetblue\"] = 0x5F9EA0;\r\n\t\t\t\tthis._colorNames[\"darkturquoise\"] = 0x00CED1;\r\n\t\t\t\tthis._colorNames[\"aqua\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"cyan\"] = 0x00FFFF;\r\n\t\t\t\tthis._colorNames[\"turquoise\"] = 0x40E0D0;\r\n\t\t\t\tthis._colorNames[\"aquamarine\"] = 0x7FFFD4;\r\n\t\t\t\tthis._colorNames[\"mediumaquamarine\"] = 0x66CDAA;\r\n\t\t\t\tthis._colorNames[\"darkseagreen\"] = 0x8FBC8F;\r\n\t\t\t\tthis._colorNames[\"mediumseagreen\"] = 0x3CB371;\r\n\t\t\t\tthis._colorNames[\"seagreen\"] = 0x2E8B57;\r\n\t\t\t\tthis._colorNames[\"darkgreen\"] = 0x006400;\r\n\t\t\t\tthis._colorNames[\"green\"] = 0x008000;\r\n\t\t\t\tthis._colorNames[\"forestgreen\"] = 0x228B22;\r\n\t\t\t\tthis._colorNames[\"limegreen\"] = 0x32CD32;\r\n\t\t\t\tthis._colorNames[\"lime\"] = 0x00FF00;\r\n\t\t\t\tthis._colorNames[\"chartreuse\"] = 0x7FFF00;\r\n\t\t\t\tthis._colorNames[\"lawngreen\"] = 0x7CFC00;\r\n\t\t\t\tthis._colorNames[\"greenyellow\"] = 0xADFF2F;\r\n\t\t\t\tthis._colorNames[\"yellowgreen\"] = 0x9ACD32;\r\n\t\t\t\tthis._colorNames[\"palegreen\"] = 0x98FB98;\r\n\t\t\t\tthis._colorNames[\"lightgreen\"] = 0x90EE90;\r\n\t\t\t\tthis._colorNames[\"springgreen\"] = 0x00FF7F;\r\n\t\t\t\tthis._colorNames[\"mediumspringgreen\"] = 0x00FA9A;\r\n\t\t\t\tthis._colorNames[\"darkolivegreen\"] = 0x556B2F;\r\n\t\t\t\tthis._colorNames[\"olivedrab\"] = 0x6B8E23;\r\n\t\t\t\tthis._colorNames[\"olive\"] = 0x808000;\r\n\t\t\t\tthis._colorNames[\"darkkhaki\"] = 0xBDB76B;\r\n\t\t\t\tthis._colorNames[\"darkgoldenrod\"] = 0xB8860B;\r\n\t\t\t\tthis._colorNames[\"goldenrod\"] = 0xDAA520;\r\n\t\t\t\tthis._colorNames[\"gold\"] = 0xFFD700;\r\n\t\t\t\tthis._colorNames[\"yellow\"] = 0xFFFF00;\r\n\t\t\t\tthis._colorNames[\"khaki\"] = 0xF0E68C;\r\n\t\t\t\tthis._colorNames[\"palegoldenrod\"] = 0xEEE8AA;\r\n\t\t\t\tthis._colorNames[\"blanchedalmond\"] = 0xFFEBCD;\r\n\t\t\t\tthis._colorNames[\"moccasin\"] = 0xFFE4B5;\r\n\t\t\t\tthis._colorNames[\"wheat\"] = 0xF5DEB3;\r\n\t\t\t\tthis._colorNames[\"navajowhite\"] = 0xFFDEAD;\r\n\t\t\t\tthis._colorNames[\"burlywood\"] = 0xDEB887;\r\n\t\t\t\tthis._colorNames[\"tan\"] = 0xD2B48C;\r\n\t\t\t\tthis._colorNames[\"rosybrown\"] = 0xBC8F8F;\r\n\t\t\t\tthis._colorNames[\"sienna\"] = 0xA0522D;\r\n\t\t\t\tthis._colorNames[\"saddlebrown\"] = 0x8B4513;\r\n\t\t\t\tthis._colorNames[\"chocolate\"] = 0xD2691E;\r\n\t\t\t\tthis._colorNames[\"peru\"] = 0xCD853F;\r\n\t\t\t\tthis._colorNames[\"sandybrown\"] = 0xF4A460;\r\n\t\t\t\tthis._colorNames[\"darkred\"] = 0x8B0000;\r\n\t\t\t\tthis._colorNames[\"maroon\"] = 0x800000;\r\n\t\t\t\tthis._colorNames[\"brown\"] = 0xA52A2A;\r\n\t\t\t\tthis._colorNames[\"firebrick\"] = 0xB22222;\r\n\t\t\t\tthis._colorNames[\"indianred\"] = 0xCD5C5C;\r\n\t\t\t\tthis._colorNames[\"lightcoral\"] = 0xF08080;\r\n\t\t\t\tthis._colorNames[\"salmon\"] = 0xFA8072;\r\n\t\t\t\tthis._colorNames[\"darksalmon\"] = 0xE9967A;\r\n\t\t\t\tthis._colorNames[\"lightsalmon\"] = 0xFFA07A;\r\n\t\t\t\tthis._colorNames[\"coral\"] = 0xFF7F50;\r\n\t\t\t\tthis._colorNames[\"tomato\"] = 0xFF6347;\r\n\t\t\t\tthis._colorNames[\"darkorange\"] = 0xFF8C00;\r\n\t\t\t\tthis._colorNames[\"orange\"] = 0xFFA500;\r\n\t\t\t\tthis._colorNames[\"orangered\"] = 0xFF4500;\r\n\t\t\t\tthis._colorNames[\"crimson\"] = 0xDC143C;\r\n\t\t\t\tthis._colorNames[\"red\"] = 0xFF0000;\r\n\t\t\t\tthis._colorNames[\"deeppink\"] = 0xFF1493;\r\n\t\t\t\tthis._colorNames[\"fuchsia\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"magenta\"] = 0xFF00FF;\r\n\t\t\t\tthis._colorNames[\"hotpink\"] = 0xFF69B4;\r\n\t\t\t\tthis._colorNames[\"lightpink\"] = 0xFFB6C1;\r\n\t\t\t\tthis._colorNames[\"pink\"] = 0xFFC0CB;\r\n\t\t\t\tthis._colorNames[\"palevioletred\"] = 0xDB7093;\r\n\t\t\t\tthis._colorNames[\"mediumvioletred\"] = 0xC71585;\r\n\t\t\t\tthis._colorNames[\"purple\"] = 0x800080;\r\n\t\t\t\tthis._colorNames[\"darkmagenta\"] = 0x8B008B;\r\n\t\t\t\tthis._colorNames[\"mediumpurple\"] = 0x9370DB;\r\n\t\t\t\tthis._colorNames[\"blueviolet\"] = 0x8A2BE2;\r\n\t\t\t\tthis._colorNames[\"indigo\"] = 0x4B0082;\r\n\t\t\t\tthis._colorNames[\"darkviolet\"] = 0x9400D3;\r\n\t\t\t\tthis._colorNames[\"darkorchid\"] = 0x9932CC;\r\n\t\t\t\tthis._colorNames[\"mediumorchid\"] = 0xBA55D3;\r\n\t\t\t\tthis._colorNames[\"orchid\"] = 0xDA70D6;\r\n\t\t\t\tthis._colorNames[\"violet\"] = 0xEE82EE;\r\n\t\t\t\tthis._colorNames[\"plum\"] = 0xDDA0DD;\r\n\t\t\t\tthis._colorNames[\"thistle\"] = 0xD8BFD8;\r\n\t\t\t\tthis._colorNames[\"lavender\"] = 0xE6E6FA;\r\n\t\t\t\tthis._colorNames[\"ghostwhite\"] = 0xF8F8FF;\r\n\t\t\t\tthis._colorNames[\"aliceblue\"] = 0xF0F8FF;\r\n\t\t\t\tthis._colorNames[\"mintcream\"] = 0xF5FFFA;\r\n\t\t\t\tthis._colorNames[\"honeydew\"] = 0xF0FFF0;\r\n\t\t\t\tthis._colorNames[\"lightgoldenrodyellow\"] = 0xFAFAD2;\r\n\t\t\t\tthis._colorNames[\"lemonchiffon\"] = 0xFFFACD;\r\n\t\t\t\tthis._colorNames[\"cornsilk\"] = 0xFFF8DC;\r\n\t\t\t\tthis._colorNames[\"lightyellow\"] = 0xFFFFE0;\r\n\t\t\t\tthis._colorNames[\"ivory\"] = 0xFFFFF0;\r\n\t\t\t\tthis._colorNames[\"floralwhite\"] = 0xFFFAF0;\r\n\t\t\t\tthis._colorNames[\"linen\"] = 0xFAF0E6;\r\n\t\t\t\tthis._colorNames[\"oldlace\"] = 0xFDF5E6;\r\n\t\t\t\tthis._colorNames[\"antiquewhite\"] = 0xFAEBD7;\r\n\t\t\t\tthis._colorNames[\"bisque\"] = 0xFFE4C4;\r\n\t\t\t\tthis._colorNames[\"peachpuff\"] = 0xFFDAB9;\r\n\t\t\t\tthis._colorNames[\"papayawhip\"] = 0xFFEFD5;\r\n\t\t\t\tthis._colorNames[\"beige\"] = 0xF5F5DC;\r\n\t\t\t\tthis._colorNames[\"seashell\"] = 0xFFF5EE;\r\n\t\t\t\tthis._colorNames[\"lavenderblush\"] = 0xFFF0F5;\r\n\t\t\t\tthis._colorNames[\"mistyrose\"] = 0xFFE4E1;\r\n\t\t\t\tthis._colorNames[\"snow\"] = 0xFFFAFA;\r\n\t\t\t\tthis._colorNames[\"white\"] = 0xFFFFFF;\r\n\t\t\t\tthis._colorNames[\"whitesmoke\"] = 0xF5F5F5;\r\n\t\t\t\tthis._colorNames[\"gainsboro\"] = 0xDCDCDC;\r\n\t\t\t\tthis._colorNames[\"lightgrey\"] = 0xD3D3D3;\r\n\t\t\t\tthis._colorNames[\"silver\"] = 0xC0C0C0;\r\n\t\t\t\tthis._colorNames[\"darkgrey\"] = 0xA9A9A9;\r\n\t\t\t\tthis._colorNames[\"grey\"] = 0x808080;\r\n\t\t\t\tthis._colorNames[\"lightslategrey\"] = 0x778899;\r\n\t\t\t\tthis._colorNames[\"slategrey\"] = 0x708090;\r\n\t\t\t\tthis._colorNames[\"dimgrey\"] = 0x696969;\r\n\t\t\t\tthis._colorNames[\"darkslategrey\"] = 0x2F4F4F;\r\n\t\t\t\tthis._colorNames[\"black\"] = 0x000000;\r\n\t\t\t\tthis._colorNames[\"transparent\"] = 0xFF000000;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._colorNames[data] != null)\r\n\t\t\t\treturn this._colorNames[data];\r\n\r\n\t\t\tif (((<string> data).length == 6) && this.isHex(data))\r\n\t\t\t\treturn parseInt(\"0x\" + data);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static color(data:any):number /*uint*/\r\n\t{\r\n\t\tvar result:number /*uint*/ = this.tryColor(data);\r\n\r\n\t\tif (result == null)\r\n\t\t\tthrow new CastError(\"Can't cast to color: \" + data);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic static tryClass(name:string):any\r\n\t{\r\n\t\tif (this._notClasses[name])\r\n\t\t\treturn name;\r\n\r\n\t\tvar result:any = this._classes[name];\r\n\r\n\t\tif (result != null)\r\n\t\t\treturn result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = window[name];\r\n\t\t\tthis._classes[name] = result;\r\n\t\t\treturn result;\r\n\t\t} catch (e /*ReferenceError*/) {\r\n\t\t}\r\n\r\n\t\tthis._notClasses[name] = true;\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic static image2D(data:any):Image2D\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Image2D)\r\n\t\t\treturn data;\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\tdata = (<Single2DTexture> data).sampler2D;\r\n\r\n\t\tif (data instanceof Sampler2D)\r\n\t\t\treturn (<Sampler2D> data).image2D;\r\n\r\n\t\tthrow new CastError(\"Can't cast to BitmapImage2D: \" + data);\r\n\t}\r\n\r\n\tpublic static bitmapTexture(data:any):Single2DTexture\r\n\t{\r\n\t\tif (data == null)\r\n\t\t\treturn null;\r\n\r\n\t\tif (typeof(data) == 'string')\r\n\t\t\tdata = this.tryClass(data);\r\n\r\n\t\tif (typeof(data) == 'function') {\r\n\t\t\ttry {\r\n\t\t\t\tdata = new data();\r\n\t\t\t} catch (e /*ArgumentError*/) {\r\n\t\t\t\tdata = new data(0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (data instanceof Single2DTexture)\r\n\t\t\treturn data;\r\n\r\n\t\ttry {\r\n\t\t\tvar bmd:Image2D = Cast.image2D(data);\r\n\t\t\treturn new Single2DTexture(bmd);\r\n\t\t} catch (e /*CastError*/) {\r\n\t\t}\r\n\r\n\t\tthrow new CastError(\"Can't cast to Single2DTexture: \" + data);\r\n\t}\r\n}\r\n\r\nexport = Cast;",
    "import AttributesBuffer\t\t\t= require(\"awayjs-core/lib/attributes/AttributesBuffer\");\r\nimport AttributesView\t\t\t= require(\"awayjs-core/lib/attributes/AttributesView\");\r\nimport Short2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short2Attributes\");\r\nimport Short3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Short3Attributes\");\r\nimport Float2Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float2Attributes\");\r\nimport Float3Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float3Attributes\");\r\nimport Float4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Float4Attributes\");\r\nimport Byte4Attributes\t\t\t= require(\"awayjs-core/lib/attributes/Byte4Attributes\");\r\nimport Matrix3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\r\nimport Vector3D\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\r\n\r\nclass SubGeometryUtils\r\n{\r\n\tprivate static LIMIT_VERTS:number = 0xffff;\r\n\r\n\tprivate static LIMIT_INDICES:number = 0xffffff;\r\n\t\r\n\tprivate static _indexSwap:Array<number> = new Array<number>();\r\n\r\n\tpublic static generateFaceNormals(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, output:Float4Attributes, count:number, offset:number = 0):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float4Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar faceNormals:Float32Array = output.get(count, offset);\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar index:number;\r\n\r\n\t\tvar x1:number, x2:number, x3:number;\r\n\t\tvar y1:number, y2:number, y3:number;\r\n\t\tvar z1:number, z2:number, z3:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\t\tvar d:number;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx1 = positions[index];\r\n\t\t\ty1 = positions[index + 1];\r\n\t\t\tz1 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx2 = positions[index];\r\n\t\t\ty2 = positions[index + 1];\r\n\t\t\tz2 = positions[index + 2];\r\n\t\t\tindex = indices[i++]*positionDim;\r\n\t\t\tx3 = positions[index];\r\n\t\t\ty3 = positions[index + 1];\r\n\t\t\tz3 = positions[index + 2];\r\n\t\t\tdx1 = x3 - x1;\r\n\t\t\tdy1 = y3 - y1;\r\n\t\t\tdz1 = z3 - z1;\r\n\t\t\tdx2 = x2 - x1;\r\n\t\t\tdy2 = y2 - y1;\r\n\t\t\tdz2 = z2 - z1;\r\n\t\t\tcx = dz1*dy2 - dy1*dz2;\r\n\t\t\tcy = dx1*dz2 - dz1*dx2;\r\n\t\t\tcz = dy1*dx2 - dx1*dy2;\r\n\t\t\td = Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\t\t\t// length of cross product = 2*triangle area\r\n\r\n\t\t\tfaceNormals[j++] = cx;\r\n\t\t\tfaceNormals[j++] = cy;\r\n\t\t\tfaceNormals[j++] = cz;\r\n\t\t\tfaceNormals[j++] = d;\r\n\t\t}\r\n\r\n\t\toutput.set(faceNormals, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateNormals(indexAttributes:Short3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar normals:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear normal values\r\n\t\twhile (i < len) {\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t\tnormals[i++] = 0;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\r\n\t\t//collect face normals\r\n\t\twhile (i < len) {\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\tnormals[index] += faceNormals[f1];\r\n\t\t\tnormals[index + 1] += faceNormals[f2];\r\n\t\t\tnormals[index + 2] += faceNormals[f3];\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise normals collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = normals[i];\r\n\t\t\tvy = normals[i + 1];\r\n\t\t\tvz = normals[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\tnormals[i++] = vx*d;\r\n\t\t\tnormals[i++] = vy*d;\r\n\t\t\tnormals[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(normals);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateFaceTangents(indexAttributes:Short3Attributes, positionAttributes:Float3Attributes, uvAttributes:Float2Attributes, output:Float4Attributes, count:number, offset:number = 0, useFaceWeights:boolean = false):Float4Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(count, offset);\r\n\t\tvar positions:Float32Array = positionAttributes.get(positionAttributes.count);\r\n\t\tvar uvs:Float32Array = uvAttributes.get(uvAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(count + offset);\r\n\t\telse if (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\t\tvar uvDim:number = uvAttributes.dimensions;\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\r\n\t\tvar faceTangents:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar index1:number;\r\n\t\tvar index2:number;\r\n\t\tvar index3:number;\r\n\t\tvar vi:number;\r\n\t\tvar v0:number;\r\n\t\tvar dv1:number;\r\n\t\tvar dv2:number;\r\n\t\tvar denom:number;\r\n\t\tvar x0:number, y0:number, z0:number;\r\n\t\tvar dx1:number, dy1:number, dz1:number;\r\n\t\tvar dx2:number, dy2:number, dz2:number;\r\n\t\tvar cx:number, cy:number, cz:number;\r\n\r\n\t\t//multiply by dimension to get index length\r\n\t\tcount *= indexDim;\r\n\r\n\t\twhile (i < count) {\r\n\t\t\tindex1 = indices[i];\r\n\t\t\tindex2 = indices[i + 1];\r\n\t\t\tindex3 = indices[i + 2];\r\n\r\n\t\t\tv0 = uvs[index1*uvDim + 1];\r\n\t\t\tdv1 = uvs[index2*uvDim + 1] - v0;\r\n\t\t\tdv2 = uvs[index3*uvDim + 1] - v0;\r\n\r\n\t\t\tvi = index1*positionDim;\r\n\t\t\tx0 = positions[vi];\r\n\t\t\ty0 = positions[vi + 1];\r\n\t\t\tz0 = positions[vi + 2];\r\n\t\t\tvi = index2*positionDim;\r\n\t\t\tdx1 = positions[vi] - x0;\r\n\t\t\tdy1 = positions[vi + 1] - y0;\r\n\t\t\tdz1 = positions[vi + 2] - z0;\r\n\t\t\tvi = index3*positionDim;\r\n\t\t\tdx2 = positions[vi] - x0;\r\n\t\t\tdy2 = positions[vi + 1] - y0;\r\n\t\t\tdz2 = positions[vi + 2] - z0;\r\n\r\n\t\t\tcx = dv2*dx1 - dv1*dx2;\r\n\t\t\tcy = dv2*dy1 - dv1*dy2;\r\n\t\t\tcz = dv2*dz1 - dv1*dz2;\r\n\t\t\tdenom = 1/Math.sqrt(cx*cx + cy*cy + cz*cz);\r\n\r\n\t\t\tfaceTangents[i++] = denom*cx;\r\n\t\t\tfaceTangents[i++] = denom*cy;\r\n\t\t\tfaceTangents[i++] = denom*cz;\r\n\t\t}\r\n\r\n\t\toutput.set(faceTangents, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateTangents(indexAttributes:Short3Attributes, faceTangentAttributes:Float3Attributes, faceNormalAttributes:Float4Attributes, output:Float3Attributes, concatenatedBuffer:AttributesBuffer):Float3Attributes\r\n\t{\r\n\t\tvar indices:Uint16Array = indexAttributes.get(indexAttributes.count);\r\n\t\tvar faceTangents:Float32Array = faceTangentAttributes.get(faceTangentAttributes.count);\r\n\t\tvar faceNormals:Float32Array = faceNormalAttributes.get(faceNormalAttributes.count);\r\n\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float3Attributes(concatenatedBuffer);\r\n\r\n\t\tvar indexDim:number = indexAttributes.dimensions;\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar tangents:Float32Array = output.get(output.count);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar len:number = output.count*outputDim;\r\n\r\n\t\t//clear tangent values\r\n\t\twhile (i < len) {\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t\ttangents[i++] = 0;\r\n\t\t}\r\n\r\n\t\tvar weight:number;\r\n\t\tvar index:number;\r\n\t\tvar f1:number = 0;\r\n\t\tvar f2:number = 1;\r\n\t\tvar f3:number = 2;\r\n\t\tvar f4:number = 3;\r\n\r\n\t\ti = 0;\r\n\t\tlen = indexAttributes.count*indexDim;\r\n\r\n\t\t//collect face tangents\r\n\t\twhile (i < len) {\r\n\t\t\tweight = faceNormals[f4];\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tindex = indices[i++]*outputDim;\r\n\t\t\ttangents[index++] += faceTangents[f1]*weight;\r\n\t\t\ttangents[index++] += faceTangents[f2]*weight;\r\n\t\t\ttangents[index] += faceTangents[f3]*weight;\r\n\t\t\tf1 += 4;\r\n\t\t\tf2 += 4;\r\n\t\t\tf3 += 4;\r\n\t\t\tf4 += 4;\r\n\t\t}\r\n\r\n\t\ti = 0;\r\n\t\tlen = output.count*outputDim;\r\n\t\tvar vx:number;\r\n\t\tvar vy:number;\r\n\t\tvar vz:number;\r\n\t\tvar d:number;\r\n\r\n\t\t//normalise tangents collections\r\n\t\twhile (i < len) {\r\n\t\t\tvx = tangents[i];\r\n\t\t\tvy = tangents[i + 1];\r\n\t\t\tvz = tangents[i + 2];\r\n\t\t\td = 1.0/Math.sqrt(vx*vx + vy*vy + vz*vz);\r\n\r\n\t\t\ttangents[i++] = vx*d;\r\n\t\t\ttangents[i++] = vy*d;\r\n\t\t\ttangents[i++] = vz*d;\r\n\t\t}\r\n\r\n\t\toutput.set(tangents);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\r\n\tpublic static generateUVs(indexAttributes:Short3Attributes, output:Float2Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Float2Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Float2Attributes(concatenatedBuffer);\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] = j*.5;\r\n\t\t\tuvs[i++] = 1.0 - (j & 1);\r\n\r\n\t\t\tif (++j == 3)\r\n\t\t\t\tj = 0;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static generateColors(indexAttributes:Short3Attributes, output:Byte4Attributes, concatenatedBuffer:AttributesBuffer, count:number, offset:number = 0):Byte4Attributes\r\n\t{\r\n\t\tif (output == null)\r\n\t\t\toutput = new Byte4Attributes(concatenatedBuffer);\r\n\r\n\t\tvar index:number = 0;\r\n\t\tvar colors:Uint8Array = new Uint8Array(count*4);\r\n\r\n\t\twhile (index < count*4) {\r\n\t\t\tif (index/4 & 1) {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t} else {\r\n\t\t\t\tcolors[index] = 0xFF;\r\n\t\t\t\tcolors[index + 1] = 0xFF;\r\n\t\t\t\tcolors[index + 2] = 0xFF;\r\n\t\t\t\tcolors[index + 3] = 0xFF;\r\n\t\t\t}\r\n\r\n\t\t\tindex += 4;\r\n\t\t}\r\n\r\n\t\toutput.set(colors, offset);\r\n\r\n\t\treturn output;\r\n\t}\r\n\r\n\tpublic static scaleUVs(scaleU:number, scaleV:number, output:Float2Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar uvs:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tuvs[i++] *= scaleU;\r\n\t\t\tuvs[i++] *= scaleV;\r\n\t\t}\r\n\r\n\t\toutput.set(uvs, offset);\r\n\t}\r\n\r\n\tpublic static scale(scale:number, output:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tif (output.count < count + offset)\r\n\t\t\toutput.count = count + offset;\r\n\r\n\t\tvar outputDim:number = output.dimensions;\r\n\r\n\t\tvar positions:Float32Array = output.get(count, offset);\r\n\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = count*outputDim;\r\n\r\n\t\twhile (i < len) {\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t\tpositions[i++] *= scale;\r\n\t\t}\r\n\r\n\t\toutput.set(positions, offset);\r\n\t}\r\n\r\n\tpublic static applyTransformation(transform:Matrix3D, positionAttributes:Float3Attributes, normalAttributes:Float3Attributes, tangentAttributes:Float3Attributes, count:number, offset:number = 0)\r\n\t{\r\n\t\tvar positions:Float32Array = positionAttributes.get(count, offset);\r\n\t\tvar positionDim:number = positionAttributes.dimensions;\r\n\r\n\t\tvar normals:Float32Array;\r\n\t\tvar normalDim:number;\r\n\r\n\t\tif (normalAttributes) {\r\n\t\t\tnormals = normalAttributes.get(count, offset);\r\n\t\t\tnormalDim = normalAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar tangents:Float32Array;\r\n\t\tvar tangentDim:number;\r\n\r\n\t\tif (tangentAttributes) {\r\n\t\t\ttangents = tangentAttributes.get(count, offset);\r\n\t\t\ttangentDim = tangentAttributes.dimensions;\r\n\t\t}\r\n\r\n\t\tvar i:number;\r\n\t\tvar i1:number;\r\n\t\tvar i2:number;\r\n\t\tvar vector:Vector3D = new Vector3D();\r\n\t\tvar invTranspose:Matrix3D;\r\n\r\n\t\tif (normalAttributes || tangentAttributes) {\r\n\t\t\tinvTranspose = transform.clone();\r\n\t\t\tinvTranspose.invert();\r\n\t\t\tinvTranspose.transpose();\r\n\t\t}\r\n\r\n\t\tvar vi0:number = 0;\r\n\t\tvar ni0:number = 0;\r\n\t\tvar ti0:number = 0;\r\n\r\n\t\tfor (i = 0; i < count; ++i) {\r\n\t\t\t// bake position\r\n\t\t\ti1 = vi0 + 1;\r\n\t\t\ti2 = vi0 + 2;\r\n\t\t\tvector.x = positions[vi0];\r\n\t\t\tvector.y = positions[i1];\r\n\t\t\tvector.z = positions[i2];\r\n\t\t\tvector = transform.transformVector(vector);\r\n\t\t\tpositions[vi0] = vector.x;\r\n\t\t\tpositions[i1] = vector.y;\r\n\t\t\tpositions[i2] = vector.z;\r\n\t\t\tvi0 += positionDim;\r\n\r\n\t\t\tif\t(normals) {\r\n\t\t\t\t// bake normal\r\n\t\t\t\ti1 = ni0 + 1;\r\n\t\t\t\ti2 = ni0 + 2;\r\n\t\t\t\tvector.x = normals[ni0];\r\n\t\t\t\tvector.y = normals[i1];\r\n\t\t\t\tvector.z = normals[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\tnormals[ni0] = vector.x;\r\n\t\t\t\tnormals[i1] = vector.y;\r\n\t\t\t\tnormals[i2] = vector.z;\r\n\t\t\t\tni0 += normalDim;\r\n\t\t\t}\r\n\r\n\t\t\tif (tangents) {\r\n\t\t\t\t// bake tangent\r\n\t\t\t\ti1 = ti0 + 1;\r\n\t\t\t\ti2 = ti0 + 2;\r\n\t\t\t\tvector.x = tangents[ti0];\r\n\t\t\t\tvector.y = tangents[i1];\r\n\t\t\t\tvector.z = tangents[i2];\r\n\t\t\t\tvector = invTranspose.deltaTransformVector(vector);\r\n\t\t\t\tvector.normalize();\r\n\t\t\t\ttangents[ti0] = vector.x;\r\n\t\t\t\ttangents[i1] = vector.y;\r\n\t\t\t\ttangents[i2] = vector.z;\r\n\t\t\t\tti0 += tangentDim;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpositionAttributes.set(positions, offset);\r\n\r\n\t\tif (normalAttributes)\r\n\t\t\tnormalAttributes.set(normals, offset);\r\n\r\n\t\tif (tangentAttributes)\r\n\t\t\ttangentAttributes.set(tangents, offset);\r\n\t}\r\n\r\n\tpublic static getSubIndices(indexAttributes:Short2Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:Short3Attributes, numVertices:number, indexMappings:Array<number>, indexOffset?:number):AttributesBuffer;\r\n\tpublic static getSubIndices(indexAttributes:AttributesView, numVertices:number, indexMappings:Array<number>, indexOffset:number = 0):AttributesBuffer\r\n\t{\r\n\t\tvar buffer:AttributesBuffer = indexAttributes.buffer;\r\n\t\tvar numIndices:number = indexAttributes.length;\r\n\t\t\r\n\t\t//reset mappings\r\n\t\tindexMappings.length = 0;\r\n\r\n\t\t//shortcut for those buffers that fit into the maximum buffer sizes\r\n\t\tif (numIndices < SubGeometryUtils.LIMIT_INDICES && numVertices < SubGeometryUtils.LIMIT_VERTS)\r\n\t\t\treturn buffer;\r\n\r\n\t\tvar i:number;\r\n\t\tvar indices:Uint16Array = <Uint16Array> indexAttributes.get(indexAttributes.count, indexOffset);\r\n\t\tvar splitIndices:Array<number> = new Array<number>();\r\n\t\tvar indexSwap:Array<number> = SubGeometryUtils._indexSwap;\r\n\t\t\r\n\r\n\t\tindexSwap.length = numIndices;\r\n\t\tfor (i = 0; i < numIndices; i++)\r\n\t\t\tindexSwap[i] = -1;\r\n\r\n\t\tvar originalIndex:number;\r\n\t\tvar splitIndex:number;\r\n\t\tvar index:number = 0;\r\n\t\tvar offsetLength:number = indexOffset*indexAttributes.dimensions;\r\n\t\t\r\n\t\t// Loop over all triangles\r\n\t\t\r\n\t\ti = 0;\r\n\t\twhile (i < numIndices + offsetLength && i + 1 < SubGeometryUtils.LIMIT_INDICES && index + 1 < SubGeometryUtils.LIMIT_VERTS) {\r\n\t\t\toriginalIndex = indices[i];\r\n\r\n\t\t\tif (indexSwap[originalIndex] >= 0) {\r\n\t\t\t\tsplitIndex = indexSwap[originalIndex];\r\n\t\t\t} else {\r\n\t\t\t\t// This vertex does not yet exist in the split list and\r\n\t\t\t\t// needs to be copied from the long list.\r\n\t\t\t\tsplitIndex = index++;\r\n\t\t\t\tindexSwap[originalIndex] = splitIndex;\r\n\t\t\t\tindexMappings[splitIndex] = originalIndex;\r\n\t\t\t}\r\n\r\n\t\t\t// Store new index, which may have come from the swap look-up,\r\n\t\t\t// or from copying a new set of vertex data from the original vector\r\n\t\t\tsplitIndices[i++] = splitIndex;\r\n\t\t}\r\n\t\t\r\n\t\tbuffer = new AttributesBuffer(indexAttributes.size*indexAttributes.dimensions, splitIndices.length/indexAttributes.dimensions);\r\n\t\t\r\n\t\tindexAttributes = indexAttributes.clone(buffer);\r\n\t\tindexAttributes.set(splitIndices);\r\n\t\t\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic static getSubVertices(vertexBuffer:AttributesBuffer, indexMappings:Array<number>):AttributesBuffer\r\n\t{\r\n\t\tif (!indexMappings.length)\r\n\t\t\treturn vertexBuffer;\r\n\r\n\t\tvar stride:number = vertexBuffer.stride;\r\n\r\n\t\tvar vertices:Uint8Array = vertexBuffer.bufferView;\r\n\r\n\t\tvar splitVerts:Uint8Array = new Uint8Array(indexMappings.length*stride);\r\n\t\tvar splitIndex:number;\r\n\t\tvar originalIndex:number;\r\n\t\tvar i:number = 0;\r\n\t\tvar j:number = 0;\r\n\t\tvar len:number = indexMappings.length;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tsplitIndex = i*stride;\r\n\t\t\toriginalIndex = indexMappings[i]*stride;\r\n\r\n\t\t\tfor (j = 0; j < stride; j++)\r\n\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\r\n\t\t}\r\n\r\n\t\tvertexBuffer = new AttributesBuffer(stride, len);\r\n\t\tvertexBuffer.bufferView = splitVerts;\r\n\r\n\t\treturn vertexBuffer;\r\n\t}\r\n}\r\n\r\nexport = SubGeometryUtils;"
  ],
  "sourceRoot": ""
}